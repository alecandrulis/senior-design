
f4_senior_design.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001c4  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00026cd8  080001d0  080001d0  000011d0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00002ce8  08026ea8  08026ea8  00027ea8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 FontFlashSection 00006996  08029b90  08029b90  0002ab90  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 FontSearchFlashSection 000002b4  08030528  08030528  00031528  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 ExtFlashSection 0002fa30  080307dc  080307dc  000317dc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  6 TextFlashSection 00000120  0806020c  0806020c  0006120c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .ARM.extab    00000000  0806032c  0806032c  00062320  2**0
                  CONTENTS
  8 .ARM          00000008  0806032c  0806032c  0006132c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  9 .preinit_array 00000000  08060334  08060334  00062320  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 10 .init_array   00000018  08060334  08060334  00061334  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 11 .fini_array   0000000c  0806034c  0806034c  0006134c  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
 12 .data         0000010c  20000000  08060358  00062000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
 13 TouchGFX_ScratchbufferA 00000100  20000120  08060464  00062120  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 14 TouchGFX_ScratchbufferB 00000100  20000220  08060564  00062220  2**5
                  CONTENTS, ALLOC, LOAD, DATA
 15 .bss          0000396c  20000320  08060664  00062320  2**2
                  ALLOC
 16 ._user_heap_stack 00000604  20003c8c  08060664  00062c8c  2**0
                  ALLOC
 17 .ARM.attributes 00000030  00000000  00000000  00062320  2**0
                  CONTENTS, READONLY
 18 .debug_info   000cdcd8  00000000  00000000  00062350  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_abbrev 0001414e  00000000  00000000  00130028  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .debug_aranges 00003de0  00000000  00000000  00144178  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_rnglists 00002de5  00000000  00000000  00147f58  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_macro  00031d85  00000000  00000000  0014ad3d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 23 .debug_line   0004857b  00000000  00000000  0017cac2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 24 .debug_str    00100d37  00000000  00000000  001c503d  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 25 .comment      000000c2  00000000  00000000  002c5d74  2**0
                  CONTENTS, READONLY
 26 .debug_frame  000114e4  00000000  00000000  002c5e38  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 27 .debug_line_str 0000006c  00000000  00000000  002d731c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080001d0 <__do_global_dtors_aux>:
 80001d0:	b510      	push	{r4, lr}
 80001d2:	4c05      	ldr	r4, [pc, #20]	@ (80001e8 <__do_global_dtors_aux+0x18>)
 80001d4:	7823      	ldrb	r3, [r4, #0]
 80001d6:	b933      	cbnz	r3, 80001e6 <__do_global_dtors_aux+0x16>
 80001d8:	4b04      	ldr	r3, [pc, #16]	@ (80001ec <__do_global_dtors_aux+0x1c>)
 80001da:	b113      	cbz	r3, 80001e2 <__do_global_dtors_aux+0x12>
 80001dc:	4804      	ldr	r0, [pc, #16]	@ (80001f0 <__do_global_dtors_aux+0x20>)
 80001de:	f3af 8000 	nop.w
 80001e2:	2301      	movs	r3, #1
 80001e4:	7023      	strb	r3, [r4, #0]
 80001e6:	bd10      	pop	{r4, pc}
 80001e8:	20000320 	.word	0x20000320
 80001ec:	00000000 	.word	0x00000000
 80001f0:	08026e90 	.word	0x08026e90

080001f4 <frame_dummy>:
 80001f4:	b508      	push	{r3, lr}
 80001f6:	4b03      	ldr	r3, [pc, #12]	@ (8000204 <frame_dummy+0x10>)
 80001f8:	b11b      	cbz	r3, 8000202 <frame_dummy+0xe>
 80001fa:	4903      	ldr	r1, [pc, #12]	@ (8000208 <frame_dummy+0x14>)
 80001fc:	4803      	ldr	r0, [pc, #12]	@ (800020c <frame_dummy+0x18>)
 80001fe:	f3af 8000 	nop.w
 8000202:	bd08      	pop	{r3, pc}
 8000204:	00000000 	.word	0x00000000
 8000208:	20000324 	.word	0x20000324
 800020c:	08026e90 	.word	0x08026e90

08000210 <memchr>:
 8000210:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 8000214:	2a10      	cmp	r2, #16
 8000216:	db2b      	blt.n	8000270 <memchr+0x60>
 8000218:	f010 0f07 	tst.w	r0, #7
 800021c:	d008      	beq.n	8000230 <memchr+0x20>
 800021e:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000222:	3a01      	subs	r2, #1
 8000224:	428b      	cmp	r3, r1
 8000226:	d02d      	beq.n	8000284 <memchr+0x74>
 8000228:	f010 0f07 	tst.w	r0, #7
 800022c:	b342      	cbz	r2, 8000280 <memchr+0x70>
 800022e:	d1f6      	bne.n	800021e <memchr+0xe>
 8000230:	b4f0      	push	{r4, r5, r6, r7}
 8000232:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000236:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800023a:	f022 0407 	bic.w	r4, r2, #7
 800023e:	f07f 0700 	mvns.w	r7, #0
 8000242:	2300      	movs	r3, #0
 8000244:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000248:	3c08      	subs	r4, #8
 800024a:	ea85 0501 	eor.w	r5, r5, r1
 800024e:	ea86 0601 	eor.w	r6, r6, r1
 8000252:	fa85 f547 	uadd8	r5, r5, r7
 8000256:	faa3 f587 	sel	r5, r3, r7
 800025a:	fa86 f647 	uadd8	r6, r6, r7
 800025e:	faa5 f687 	sel	r6, r5, r7
 8000262:	b98e      	cbnz	r6, 8000288 <memchr+0x78>
 8000264:	d1ee      	bne.n	8000244 <memchr+0x34>
 8000266:	bcf0      	pop	{r4, r5, r6, r7}
 8000268:	f001 01ff 	and.w	r1, r1, #255	@ 0xff
 800026c:	f002 0207 	and.w	r2, r2, #7
 8000270:	b132      	cbz	r2, 8000280 <memchr+0x70>
 8000272:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000276:	3a01      	subs	r2, #1
 8000278:	ea83 0301 	eor.w	r3, r3, r1
 800027c:	b113      	cbz	r3, 8000284 <memchr+0x74>
 800027e:	d1f8      	bne.n	8000272 <memchr+0x62>
 8000280:	2000      	movs	r0, #0
 8000282:	4770      	bx	lr
 8000284:	3801      	subs	r0, #1
 8000286:	4770      	bx	lr
 8000288:	2d00      	cmp	r5, #0
 800028a:	bf06      	itte	eq
 800028c:	4635      	moveq	r5, r6
 800028e:	3803      	subeq	r0, #3
 8000290:	3807      	subne	r0, #7
 8000292:	f015 0f01 	tst.w	r5, #1
 8000296:	d107      	bne.n	80002a8 <memchr+0x98>
 8000298:	3001      	adds	r0, #1
 800029a:	f415 7f80 	tst.w	r5, #256	@ 0x100
 800029e:	bf02      	ittt	eq
 80002a0:	3001      	addeq	r0, #1
 80002a2:	f415 3fc0 	tsteq.w	r5, #98304	@ 0x18000
 80002a6:	3001      	addeq	r0, #1
 80002a8:	bcf0      	pop	{r4, r5, r6, r7}
 80002aa:	3801      	subs	r0, #1
 80002ac:	4770      	bx	lr
 80002ae:	bf00      	nop

080002b0 <__aeabi_drsub>:
 80002b0:	f081 4100 	eor.w	r1, r1, #2147483648	@ 0x80000000
 80002b4:	e002      	b.n	80002bc <__adddf3>
 80002b6:	bf00      	nop

080002b8 <__aeabi_dsub>:
 80002b8:	f083 4300 	eor.w	r3, r3, #2147483648	@ 0x80000000

080002bc <__adddf3>:
 80002bc:	b530      	push	{r4, r5, lr}
 80002be:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002c2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002c6:	ea94 0f05 	teq	r4, r5
 80002ca:	bf08      	it	eq
 80002cc:	ea90 0f02 	teqeq	r0, r2
 80002d0:	bf1f      	itttt	ne
 80002d2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002d6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002da:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002de:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002e2:	f000 80e2 	beq.w	80004aa <__adddf3+0x1ee>
 80002e6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ea:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ee:	bfb8      	it	lt
 80002f0:	426d      	neglt	r5, r5
 80002f2:	dd0c      	ble.n	800030e <__adddf3+0x52>
 80002f4:	442c      	add	r4, r5
 80002f6:	ea80 0202 	eor.w	r2, r0, r2
 80002fa:	ea81 0303 	eor.w	r3, r1, r3
 80002fe:	ea82 0000 	eor.w	r0, r2, r0
 8000302:	ea83 0101 	eor.w	r1, r3, r1
 8000306:	ea80 0202 	eor.w	r2, r0, r2
 800030a:	ea81 0303 	eor.w	r3, r1, r3
 800030e:	2d36      	cmp	r5, #54	@ 0x36
 8000310:	bf88      	it	hi
 8000312:	bd30      	pophi	{r4, r5, pc}
 8000314:	f011 4f00 	tst.w	r1, #2147483648	@ 0x80000000
 8000318:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800031c:	f44f 1c80 	mov.w	ip, #1048576	@ 0x100000
 8000320:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000324:	d002      	beq.n	800032c <__adddf3+0x70>
 8000326:	4240      	negs	r0, r0
 8000328:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800032c:	f013 4f00 	tst.w	r3, #2147483648	@ 0x80000000
 8000330:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000334:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000338:	d002      	beq.n	8000340 <__adddf3+0x84>
 800033a:	4252      	negs	r2, r2
 800033c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000340:	ea94 0f05 	teq	r4, r5
 8000344:	f000 80a7 	beq.w	8000496 <__adddf3+0x1da>
 8000348:	f1a4 0401 	sub.w	r4, r4, #1
 800034c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000350:	db0d      	blt.n	800036e <__adddf3+0xb2>
 8000352:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000356:	fa22 f205 	lsr.w	r2, r2, r5
 800035a:	1880      	adds	r0, r0, r2
 800035c:	f141 0100 	adc.w	r1, r1, #0
 8000360:	fa03 f20e 	lsl.w	r2, r3, lr
 8000364:	1880      	adds	r0, r0, r2
 8000366:	fa43 f305 	asr.w	r3, r3, r5
 800036a:	4159      	adcs	r1, r3
 800036c:	e00e      	b.n	800038c <__adddf3+0xd0>
 800036e:	f1a5 0520 	sub.w	r5, r5, #32
 8000372:	f10e 0e20 	add.w	lr, lr, #32
 8000376:	2a01      	cmp	r2, #1
 8000378:	fa03 fc0e 	lsl.w	ip, r3, lr
 800037c:	bf28      	it	cs
 800037e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000382:	fa43 f305 	asr.w	r3, r3, r5
 8000386:	18c0      	adds	r0, r0, r3
 8000388:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800038c:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 8000390:	d507      	bpl.n	80003a2 <__adddf3+0xe6>
 8000392:	f04f 0e00 	mov.w	lr, #0
 8000396:	f1dc 0c00 	rsbs	ip, ip, #0
 800039a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800039e:	eb6e 0101 	sbc.w	r1, lr, r1
 80003a2:	f5b1 1f80 	cmp.w	r1, #1048576	@ 0x100000
 80003a6:	d31b      	bcc.n	80003e0 <__adddf3+0x124>
 80003a8:	f5b1 1f00 	cmp.w	r1, #2097152	@ 0x200000
 80003ac:	d30c      	bcc.n	80003c8 <__adddf3+0x10c>
 80003ae:	0849      	lsrs	r1, r1, #1
 80003b0:	ea5f 0030 	movs.w	r0, r0, rrx
 80003b4:	ea4f 0c3c 	mov.w	ip, ip, rrx
 80003b8:	f104 0401 	add.w	r4, r4, #1
 80003bc:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003c0:	f512 0f80 	cmn.w	r2, #4194304	@ 0x400000
 80003c4:	f080 809a 	bcs.w	80004fc <__adddf3+0x240>
 80003c8:	f1bc 4f00 	cmp.w	ip, #2147483648	@ 0x80000000
 80003cc:	bf08      	it	eq
 80003ce:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003d2:	f150 0000 	adcs.w	r0, r0, #0
 80003d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003da:	ea41 0105 	orr.w	r1, r1, r5
 80003de:	bd30      	pop	{r4, r5, pc}
 80003e0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003e4:	4140      	adcs	r0, r0
 80003e6:	eb41 0101 	adc.w	r1, r1, r1
 80003ea:	3c01      	subs	r4, #1
 80003ec:	bf28      	it	cs
 80003ee:	f5b1 1f80 	cmpcs.w	r1, #1048576	@ 0x100000
 80003f2:	d2e9      	bcs.n	80003c8 <__adddf3+0x10c>
 80003f4:	f091 0f00 	teq	r1, #0
 80003f8:	bf04      	itt	eq
 80003fa:	4601      	moveq	r1, r0
 80003fc:	2000      	moveq	r0, #0
 80003fe:	fab1 f381 	clz	r3, r1
 8000402:	bf08      	it	eq
 8000404:	3320      	addeq	r3, #32
 8000406:	f1a3 030b 	sub.w	r3, r3, #11
 800040a:	f1b3 0220 	subs.w	r2, r3, #32
 800040e:	da0c      	bge.n	800042a <__adddf3+0x16e>
 8000410:	320c      	adds	r2, #12
 8000412:	dd08      	ble.n	8000426 <__adddf3+0x16a>
 8000414:	f102 0c14 	add.w	ip, r2, #20
 8000418:	f1c2 020c 	rsb	r2, r2, #12
 800041c:	fa01 f00c 	lsl.w	r0, r1, ip
 8000420:	fa21 f102 	lsr.w	r1, r1, r2
 8000424:	e00c      	b.n	8000440 <__adddf3+0x184>
 8000426:	f102 0214 	add.w	r2, r2, #20
 800042a:	bfd8      	it	le
 800042c:	f1c2 0c20 	rsble	ip, r2, #32
 8000430:	fa01 f102 	lsl.w	r1, r1, r2
 8000434:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000438:	bfdc      	itt	le
 800043a:	ea41 010c 	orrle.w	r1, r1, ip
 800043e:	4090      	lslle	r0, r2
 8000440:	1ae4      	subs	r4, r4, r3
 8000442:	bfa2      	ittt	ge
 8000444:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000448:	4329      	orrge	r1, r5
 800044a:	bd30      	popge	{r4, r5, pc}
 800044c:	ea6f 0404 	mvn.w	r4, r4
 8000450:	3c1f      	subs	r4, #31
 8000452:	da1c      	bge.n	800048e <__adddf3+0x1d2>
 8000454:	340c      	adds	r4, #12
 8000456:	dc0e      	bgt.n	8000476 <__adddf3+0x1ba>
 8000458:	f104 0414 	add.w	r4, r4, #20
 800045c:	f1c4 0220 	rsb	r2, r4, #32
 8000460:	fa20 f004 	lsr.w	r0, r0, r4
 8000464:	fa01 f302 	lsl.w	r3, r1, r2
 8000468:	ea40 0003 	orr.w	r0, r0, r3
 800046c:	fa21 f304 	lsr.w	r3, r1, r4
 8000470:	ea45 0103 	orr.w	r1, r5, r3
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f1c4 040c 	rsb	r4, r4, #12
 800047a:	f1c4 0220 	rsb	r2, r4, #32
 800047e:	fa20 f002 	lsr.w	r0, r0, r2
 8000482:	fa01 f304 	lsl.w	r3, r1, r4
 8000486:	ea40 0003 	orr.w	r0, r0, r3
 800048a:	4629      	mov	r1, r5
 800048c:	bd30      	pop	{r4, r5, pc}
 800048e:	fa21 f004 	lsr.w	r0, r1, r4
 8000492:	4629      	mov	r1, r5
 8000494:	bd30      	pop	{r4, r5, pc}
 8000496:	f094 0f00 	teq	r4, #0
 800049a:	f483 1380 	eor.w	r3, r3, #1048576	@ 0x100000
 800049e:	bf06      	itte	eq
 80004a0:	f481 1180 	eoreq.w	r1, r1, #1048576	@ 0x100000
 80004a4:	3401      	addeq	r4, #1
 80004a6:	3d01      	subne	r5, #1
 80004a8:	e74e      	b.n	8000348 <__adddf3+0x8c>
 80004aa:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ae:	bf18      	it	ne
 80004b0:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80004b4:	d029      	beq.n	800050a <__adddf3+0x24e>
 80004b6:	ea94 0f05 	teq	r4, r5
 80004ba:	bf08      	it	eq
 80004bc:	ea90 0f02 	teqeq	r0, r2
 80004c0:	d005      	beq.n	80004ce <__adddf3+0x212>
 80004c2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004c6:	bf04      	itt	eq
 80004c8:	4619      	moveq	r1, r3
 80004ca:	4610      	moveq	r0, r2
 80004cc:	bd30      	pop	{r4, r5, pc}
 80004ce:	ea91 0f03 	teq	r1, r3
 80004d2:	bf1e      	ittt	ne
 80004d4:	2100      	movne	r1, #0
 80004d6:	2000      	movne	r0, #0
 80004d8:	bd30      	popne	{r4, r5, pc}
 80004da:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004de:	d105      	bne.n	80004ec <__adddf3+0x230>
 80004e0:	0040      	lsls	r0, r0, #1
 80004e2:	4149      	adcs	r1, r1
 80004e4:	bf28      	it	cs
 80004e6:	f041 4100 	orrcs.w	r1, r1, #2147483648	@ 0x80000000
 80004ea:	bd30      	pop	{r4, r5, pc}
 80004ec:	f514 0480 	adds.w	r4, r4, #4194304	@ 0x400000
 80004f0:	bf3c      	itt	cc
 80004f2:	f501 1180 	addcc.w	r1, r1, #1048576	@ 0x100000
 80004f6:	bd30      	popcc	{r4, r5, pc}
 80004f8:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80004fc:	f045 41fe 	orr.w	r1, r5, #2130706432	@ 0x7f000000
 8000500:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 8000504:	f04f 0000 	mov.w	r0, #0
 8000508:	bd30      	pop	{r4, r5, pc}
 800050a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800050e:	bf1a      	itte	ne
 8000510:	4619      	movne	r1, r3
 8000512:	4610      	movne	r0, r2
 8000514:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 8000518:	bf1c      	itt	ne
 800051a:	460b      	movne	r3, r1
 800051c:	4602      	movne	r2, r0
 800051e:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000522:	bf06      	itte	eq
 8000524:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000528:	ea91 0f03 	teqeq	r1, r3
 800052c:	f441 2100 	orrne.w	r1, r1, #524288	@ 0x80000
 8000530:	bd30      	pop	{r4, r5, pc}
 8000532:	bf00      	nop

08000534 <__aeabi_ui2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000548:	f04f 0500 	mov.w	r5, #0
 800054c:	f04f 0100 	mov.w	r1, #0
 8000550:	e750      	b.n	80003f4 <__adddf3+0x138>
 8000552:	bf00      	nop

08000554 <__aeabi_i2d>:
 8000554:	f090 0f00 	teq	r0, #0
 8000558:	bf04      	itt	eq
 800055a:	2100      	moveq	r1, #0
 800055c:	4770      	bxeq	lr
 800055e:	b530      	push	{r4, r5, lr}
 8000560:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 8000564:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 8000568:	f010 4500 	ands.w	r5, r0, #2147483648	@ 0x80000000
 800056c:	bf48      	it	mi
 800056e:	4240      	negmi	r0, r0
 8000570:	f04f 0100 	mov.w	r1, #0
 8000574:	e73e      	b.n	80003f4 <__adddf3+0x138>
 8000576:	bf00      	nop

08000578 <__aeabi_f2d>:
 8000578:	0042      	lsls	r2, r0, #1
 800057a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800057e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000582:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000586:	bf1f      	itttt	ne
 8000588:	f012 437f 	andsne.w	r3, r2, #4278190080	@ 0xff000000
 800058c:	f093 4f7f 	teqne	r3, #4278190080	@ 0xff000000
 8000590:	f081 5160 	eorne.w	r1, r1, #939524096	@ 0x38000000
 8000594:	4770      	bxne	lr
 8000596:	f032 427f 	bics.w	r2, r2, #4278190080	@ 0xff000000
 800059a:	bf08      	it	eq
 800059c:	4770      	bxeq	lr
 800059e:	f093 4f7f 	teq	r3, #4278190080	@ 0xff000000
 80005a2:	bf04      	itt	eq
 80005a4:	f441 2100 	orreq.w	r1, r1, #524288	@ 0x80000
 80005a8:	4770      	bxeq	lr
 80005aa:	b530      	push	{r4, r5, lr}
 80005ac:	f44f 7460 	mov.w	r4, #896	@ 0x380
 80005b0:	f001 4500 	and.w	r5, r1, #2147483648	@ 0x80000000
 80005b4:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 80005b8:	e71c      	b.n	80003f4 <__adddf3+0x138>
 80005ba:	bf00      	nop

080005bc <__aeabi_ul2d>:
 80005bc:	ea50 0201 	orrs.w	r2, r0, r1
 80005c0:	bf08      	it	eq
 80005c2:	4770      	bxeq	lr
 80005c4:	b530      	push	{r4, r5, lr}
 80005c6:	f04f 0500 	mov.w	r5, #0
 80005ca:	e00a      	b.n	80005e2 <__aeabi_l2d+0x16>

080005cc <__aeabi_l2d>:
 80005cc:	ea50 0201 	orrs.w	r2, r0, r1
 80005d0:	bf08      	it	eq
 80005d2:	4770      	bxeq	lr
 80005d4:	b530      	push	{r4, r5, lr}
 80005d6:	f011 4500 	ands.w	r5, r1, #2147483648	@ 0x80000000
 80005da:	d502      	bpl.n	80005e2 <__aeabi_l2d+0x16>
 80005dc:	4240      	negs	r0, r0
 80005de:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005e2:	f44f 6480 	mov.w	r4, #1024	@ 0x400
 80005e6:	f104 0432 	add.w	r4, r4, #50	@ 0x32
 80005ea:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ee:	f43f aed8 	beq.w	80003a2 <__adddf3+0xe6>
 80005f2:	f04f 0203 	mov.w	r2, #3
 80005f6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005fa:	bf18      	it	ne
 80005fc:	3203      	addne	r2, #3
 80005fe:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000602:	bf18      	it	ne
 8000604:	3203      	addne	r2, #3
 8000606:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800060a:	f1c2 0320 	rsb	r3, r2, #32
 800060e:	fa00 fc03 	lsl.w	ip, r0, r3
 8000612:	fa20 f002 	lsr.w	r0, r0, r2
 8000616:	fa01 fe03 	lsl.w	lr, r1, r3
 800061a:	ea40 000e 	orr.w	r0, r0, lr
 800061e:	fa21 f102 	lsr.w	r1, r1, r2
 8000622:	4414      	add	r4, r2
 8000624:	e6bd      	b.n	80003a2 <__adddf3+0xe6>
 8000626:	bf00      	nop

08000628 <__aeabi_dmul>:
 8000628:	b570      	push	{r4, r5, r6, lr}
 800062a:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 800062e:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000632:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000636:	bf1d      	ittte	ne
 8000638:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800063c:	ea94 0f0c 	teqne	r4, ip
 8000640:	ea95 0f0c 	teqne	r5, ip
 8000644:	f000 f8de 	bleq	8000804 <__aeabi_dmul+0x1dc>
 8000648:	442c      	add	r4, r5
 800064a:	ea81 0603 	eor.w	r6, r1, r3
 800064e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000652:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000656:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800065a:	bf18      	it	ne
 800065c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000660:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000664:	f443 1380 	orr.w	r3, r3, #1048576	@ 0x100000
 8000668:	d038      	beq.n	80006dc <__aeabi_dmul+0xb4>
 800066a:	fba0 ce02 	umull	ip, lr, r0, r2
 800066e:	f04f 0500 	mov.w	r5, #0
 8000672:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000676:	f006 4200 	and.w	r2, r6, #2147483648	@ 0x80000000
 800067a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800067e:	f04f 0600 	mov.w	r6, #0
 8000682:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000686:	f09c 0f00 	teq	ip, #0
 800068a:	bf18      	it	ne
 800068c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000690:	f1a4 04ff 	sub.w	r4, r4, #255	@ 0xff
 8000694:	f5b6 7f00 	cmp.w	r6, #512	@ 0x200
 8000698:	f564 7440 	sbc.w	r4, r4, #768	@ 0x300
 800069c:	d204      	bcs.n	80006a8 <__aeabi_dmul+0x80>
 800069e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 80006a2:	416d      	adcs	r5, r5
 80006a4:	eb46 0606 	adc.w	r6, r6, r6
 80006a8:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 80006ac:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 80006b0:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 80006b4:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 80006b8:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 80006bc:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 80006c0:	bf88      	it	hi
 80006c2:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80006c6:	d81e      	bhi.n	8000706 <__aeabi_dmul+0xde>
 80006c8:	f1be 4f00 	cmp.w	lr, #2147483648	@ 0x80000000
 80006cc:	bf08      	it	eq
 80006ce:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006d2:	f150 0000 	adcs.w	r0, r0, #0
 80006d6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006da:	bd70      	pop	{r4, r5, r6, pc}
 80006dc:	f006 4600 	and.w	r6, r6, #2147483648	@ 0x80000000
 80006e0:	ea46 0101 	orr.w	r1, r6, r1
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	ea81 0103 	eor.w	r1, r1, r3
 80006ec:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006f0:	bfc2      	ittt	gt
 80006f2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006f6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006fa:	bd70      	popgt	{r4, r5, r6, pc}
 80006fc:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000700:	f04f 0e00 	mov.w	lr, #0
 8000704:	3c01      	subs	r4, #1
 8000706:	f300 80ab 	bgt.w	8000860 <__aeabi_dmul+0x238>
 800070a:	f114 0f36 	cmn.w	r4, #54	@ 0x36
 800070e:	bfde      	ittt	le
 8000710:	2000      	movle	r0, #0
 8000712:	f001 4100 	andle.w	r1, r1, #2147483648	@ 0x80000000
 8000716:	bd70      	pople	{r4, r5, r6, pc}
 8000718:	f1c4 0400 	rsb	r4, r4, #0
 800071c:	3c20      	subs	r4, #32
 800071e:	da35      	bge.n	800078c <__aeabi_dmul+0x164>
 8000720:	340c      	adds	r4, #12
 8000722:	dc1b      	bgt.n	800075c <__aeabi_dmul+0x134>
 8000724:	f104 0414 	add.w	r4, r4, #20
 8000728:	f1c4 0520 	rsb	r5, r4, #32
 800072c:	fa00 f305 	lsl.w	r3, r0, r5
 8000730:	fa20 f004 	lsr.w	r0, r0, r4
 8000734:	fa01 f205 	lsl.w	r2, r1, r5
 8000738:	ea40 0002 	orr.w	r0, r0, r2
 800073c:	f001 4200 	and.w	r2, r1, #2147483648	@ 0x80000000
 8000740:	f021 4100 	bic.w	r1, r1, #2147483648	@ 0x80000000
 8000744:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000748:	fa21 f604 	lsr.w	r6, r1, r4
 800074c:	eb42 0106 	adc.w	r1, r2, r6
 8000750:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000754:	bf08      	it	eq
 8000756:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800075a:	bd70      	pop	{r4, r5, r6, pc}
 800075c:	f1c4 040c 	rsb	r4, r4, #12
 8000760:	f1c4 0520 	rsb	r5, r4, #32
 8000764:	fa00 f304 	lsl.w	r3, r0, r4
 8000768:	fa20 f005 	lsr.w	r0, r0, r5
 800076c:	fa01 f204 	lsl.w	r2, r1, r4
 8000770:	ea40 0002 	orr.w	r0, r0, r2
 8000774:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000778:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800077c:	f141 0100 	adc.w	r1, r1, #0
 8000780:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000784:	bf08      	it	eq
 8000786:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800078a:	bd70      	pop	{r4, r5, r6, pc}
 800078c:	f1c4 0520 	rsb	r5, r4, #32
 8000790:	fa00 f205 	lsl.w	r2, r0, r5
 8000794:	ea4e 0e02 	orr.w	lr, lr, r2
 8000798:	fa20 f304 	lsr.w	r3, r0, r4
 800079c:	fa01 f205 	lsl.w	r2, r1, r5
 80007a0:	ea43 0302 	orr.w	r3, r3, r2
 80007a4:	fa21 f004 	lsr.w	r0, r1, r4
 80007a8:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 80007ac:	fa21 f204 	lsr.w	r2, r1, r4
 80007b0:	ea20 0002 	bic.w	r0, r0, r2
 80007b4:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 80007b8:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80007bc:	bf08      	it	eq
 80007be:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007c2:	bd70      	pop	{r4, r5, r6, pc}
 80007c4:	f094 0f00 	teq	r4, #0
 80007c8:	d10f      	bne.n	80007ea <__aeabi_dmul+0x1c2>
 80007ca:	f001 4600 	and.w	r6, r1, #2147483648	@ 0x80000000
 80007ce:	0040      	lsls	r0, r0, #1
 80007d0:	eb41 0101 	adc.w	r1, r1, r1
 80007d4:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3c01      	subeq	r4, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1a6>
 80007de:	ea41 0106 	orr.w	r1, r1, r6
 80007e2:	f095 0f00 	teq	r5, #0
 80007e6:	bf18      	it	ne
 80007e8:	4770      	bxne	lr
 80007ea:	f003 4600 	and.w	r6, r3, #2147483648	@ 0x80000000
 80007ee:	0052      	lsls	r2, r2, #1
 80007f0:	eb43 0303 	adc.w	r3, r3, r3
 80007f4:	f413 1f80 	tst.w	r3, #1048576	@ 0x100000
 80007f8:	bf08      	it	eq
 80007fa:	3d01      	subeq	r5, #1
 80007fc:	d0f7      	beq.n	80007ee <__aeabi_dmul+0x1c6>
 80007fe:	ea43 0306 	orr.w	r3, r3, r6
 8000802:	4770      	bx	lr
 8000804:	ea94 0f0c 	teq	r4, ip
 8000808:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 800080c:	bf18      	it	ne
 800080e:	ea95 0f0c 	teqne	r5, ip
 8000812:	d00c      	beq.n	800082e <__aeabi_dmul+0x206>
 8000814:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000818:	bf18      	it	ne
 800081a:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081e:	d1d1      	bne.n	80007c4 <__aeabi_dmul+0x19c>
 8000820:	ea81 0103 	eor.w	r1, r1, r3
 8000824:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000828:	f04f 0000 	mov.w	r0, #0
 800082c:	bd70      	pop	{r4, r5, r6, pc}
 800082e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000832:	bf06      	itte	eq
 8000834:	4610      	moveq	r0, r2
 8000836:	4619      	moveq	r1, r3
 8000838:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800083c:	d019      	beq.n	8000872 <__aeabi_dmul+0x24a>
 800083e:	ea94 0f0c 	teq	r4, ip
 8000842:	d102      	bne.n	800084a <__aeabi_dmul+0x222>
 8000844:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000848:	d113      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800084a:	ea95 0f0c 	teq	r5, ip
 800084e:	d105      	bne.n	800085c <__aeabi_dmul+0x234>
 8000850:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000854:	bf1c      	itt	ne
 8000856:	4610      	movne	r0, r2
 8000858:	4619      	movne	r1, r3
 800085a:	d10a      	bne.n	8000872 <__aeabi_dmul+0x24a>
 800085c:	ea81 0103 	eor.w	r1, r1, r3
 8000860:	f001 4100 	and.w	r1, r1, #2147483648	@ 0x80000000
 8000864:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000868:	f441 0170 	orr.w	r1, r1, #15728640	@ 0xf00000
 800086c:	f04f 0000 	mov.w	r0, #0
 8000870:	bd70      	pop	{r4, r5, r6, pc}
 8000872:	f041 41fe 	orr.w	r1, r1, #2130706432	@ 0x7f000000
 8000876:	f441 0178 	orr.w	r1, r1, #16252928	@ 0xf80000
 800087a:	bd70      	pop	{r4, r5, r6, pc}

0800087c <__aeabi_ddiv>:
 800087c:	b570      	push	{r4, r5, r6, lr}
 800087e:	f04f 0cff 	mov.w	ip, #255	@ 0xff
 8000882:	f44c 6ce0 	orr.w	ip, ip, #1792	@ 0x700
 8000886:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800088a:	bf1d      	ittte	ne
 800088c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000890:	ea94 0f0c 	teqne	r4, ip
 8000894:	ea95 0f0c 	teqne	r5, ip
 8000898:	f000 f8a7 	bleq	80009ea <__aeabi_ddiv+0x16e>
 800089c:	eba4 0405 	sub.w	r4, r4, r5
 80008a0:	ea81 0e03 	eor.w	lr, r1, r3
 80008a4:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 80008a8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80008ac:	f000 8088 	beq.w	80009c0 <__aeabi_ddiv+0x144>
 80008b0:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80008b4:	f04f 5580 	mov.w	r5, #268435456	@ 0x10000000
 80008b8:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 80008bc:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008c0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008c4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008c8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008cc:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008d0:	f00e 4100 	and.w	r1, lr, #2147483648	@ 0x80000000
 80008d4:	429d      	cmp	r5, r3
 80008d6:	bf08      	it	eq
 80008d8:	4296      	cmpeq	r6, r2
 80008da:	f144 04fd 	adc.w	r4, r4, #253	@ 0xfd
 80008de:	f504 7440 	add.w	r4, r4, #768	@ 0x300
 80008e2:	d202      	bcs.n	80008ea <__aeabi_ddiv+0x6e>
 80008e4:	085b      	lsrs	r3, r3, #1
 80008e6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ea:	1ab6      	subs	r6, r6, r2
 80008ec:	eb65 0503 	sbc.w	r5, r5, r3
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	f44f 1080 	mov.w	r0, #1048576	@ 0x100000
 80008fa:	f44f 2c00 	mov.w	ip, #524288	@ 0x80000
 80008fe:	ebb6 0e02 	subs.w	lr, r6, r2
 8000902:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000906:	bf22      	ittt	cs
 8000908:	1ab6      	subcs	r6, r6, r2
 800090a:	4675      	movcs	r5, lr
 800090c:	ea40 000c 	orrcs.w	r0, r0, ip
 8000910:	085b      	lsrs	r3, r3, #1
 8000912:	ea4f 0232 	mov.w	r2, r2, rrx
 8000916:	ebb6 0e02 	subs.w	lr, r6, r2
 800091a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800091e:	bf22      	ittt	cs
 8000920:	1ab6      	subcs	r6, r6, r2
 8000922:	4675      	movcs	r5, lr
 8000924:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000928:	085b      	lsrs	r3, r3, #1
 800092a:	ea4f 0232 	mov.w	r2, r2, rrx
 800092e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000932:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000936:	bf22      	ittt	cs
 8000938:	1ab6      	subcs	r6, r6, r2
 800093a:	4675      	movcs	r5, lr
 800093c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000940:	085b      	lsrs	r3, r3, #1
 8000942:	ea4f 0232 	mov.w	r2, r2, rrx
 8000946:	ebb6 0e02 	subs.w	lr, r6, r2
 800094a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800094e:	bf22      	ittt	cs
 8000950:	1ab6      	subcs	r6, r6, r2
 8000952:	4675      	movcs	r5, lr
 8000954:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000958:	ea55 0e06 	orrs.w	lr, r5, r6
 800095c:	d018      	beq.n	8000990 <__aeabi_ddiv+0x114>
 800095e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000962:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000966:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800096a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800096e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000972:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000976:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800097a:	d1c0      	bne.n	80008fe <__aeabi_ddiv+0x82>
 800097c:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000980:	d10b      	bne.n	800099a <__aeabi_ddiv+0x11e>
 8000982:	ea41 0100 	orr.w	r1, r1, r0
 8000986:	f04f 0000 	mov.w	r0, #0
 800098a:	f04f 4c00 	mov.w	ip, #2147483648	@ 0x80000000
 800098e:	e7b6      	b.n	80008fe <__aeabi_ddiv+0x82>
 8000990:	f411 1f80 	tst.w	r1, #1048576	@ 0x100000
 8000994:	bf04      	itt	eq
 8000996:	4301      	orreq	r1, r0
 8000998:	2000      	moveq	r0, #0
 800099a:	f1b4 0cfd 	subs.w	ip, r4, #253	@ 0xfd
 800099e:	bf88      	it	hi
 80009a0:	f5bc 6fe0 	cmphi.w	ip, #1792	@ 0x700
 80009a4:	f63f aeaf 	bhi.w	8000706 <__aeabi_dmul+0xde>
 80009a8:	ebb5 0c03 	subs.w	ip, r5, r3
 80009ac:	bf04      	itt	eq
 80009ae:	ebb6 0c02 	subseq.w	ip, r6, r2
 80009b2:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80009b6:	f150 0000 	adcs.w	r0, r0, #0
 80009ba:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80009be:	bd70      	pop	{r4, r5, r6, pc}
 80009c0:	f00e 4e00 	and.w	lr, lr, #2147483648	@ 0x80000000
 80009c4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009c8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009cc:	bfc2      	ittt	gt
 80009ce:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009d2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009d6:	bd70      	popgt	{r4, r5, r6, pc}
 80009d8:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 80009dc:	f04f 0e00 	mov.w	lr, #0
 80009e0:	3c01      	subs	r4, #1
 80009e2:	e690      	b.n	8000706 <__aeabi_dmul+0xde>
 80009e4:	ea45 0e06 	orr.w	lr, r5, r6
 80009e8:	e68d      	b.n	8000706 <__aeabi_dmul+0xde>
 80009ea:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ee:	ea94 0f0c 	teq	r4, ip
 80009f2:	bf08      	it	eq
 80009f4:	ea95 0f0c 	teqeq	r5, ip
 80009f8:	f43f af3b 	beq.w	8000872 <__aeabi_dmul+0x24a>
 80009fc:	ea94 0f0c 	teq	r4, ip
 8000a00:	d10a      	bne.n	8000a18 <__aeabi_ddiv+0x19c>
 8000a02:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000a06:	f47f af34 	bne.w	8000872 <__aeabi_dmul+0x24a>
 8000a0a:	ea95 0f0c 	teq	r5, ip
 8000a0e:	f47f af25 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a12:	4610      	mov	r0, r2
 8000a14:	4619      	mov	r1, r3
 8000a16:	e72c      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a18:	ea95 0f0c 	teq	r5, ip
 8000a1c:	d106      	bne.n	8000a2c <__aeabi_ddiv+0x1b0>
 8000a1e:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a22:	f43f aefd 	beq.w	8000820 <__aeabi_dmul+0x1f8>
 8000a26:	4610      	mov	r0, r2
 8000a28:	4619      	mov	r1, r3
 8000a2a:	e722      	b.n	8000872 <__aeabi_dmul+0x24a>
 8000a2c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a30:	bf18      	it	ne
 8000a32:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a36:	f47f aec5 	bne.w	80007c4 <__aeabi_dmul+0x19c>
 8000a3a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a3e:	f47f af0d 	bne.w	800085c <__aeabi_dmul+0x234>
 8000a42:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a46:	f47f aeeb 	bne.w	8000820 <__aeabi_dmul+0x1f8>
 8000a4a:	e712      	b.n	8000872 <__aeabi_dmul+0x24a>

08000a4c <__gedf2>:
 8000a4c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a50:	e006      	b.n	8000a60 <__cmpdf2+0x4>
 8000a52:	bf00      	nop

08000a54 <__ledf2>:
 8000a54:	f04f 0c01 	mov.w	ip, #1
 8000a58:	e002      	b.n	8000a60 <__cmpdf2+0x4>
 8000a5a:	bf00      	nop

08000a5c <__cmpdf2>:
 8000a5c:	f04f 0c01 	mov.w	ip, #1
 8000a60:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a6c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a70:	bf18      	it	ne
 8000a72:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a76:	d01b      	beq.n	8000ab0 <__cmpdf2+0x54>
 8000a78:	b001      	add	sp, #4
 8000a7a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a7e:	bf0c      	ite	eq
 8000a80:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a84:	ea91 0f03 	teqne	r1, r3
 8000a88:	bf02      	ittt	eq
 8000a8a:	ea90 0f02 	teqeq	r0, r2
 8000a8e:	2000      	moveq	r0, #0
 8000a90:	4770      	bxeq	lr
 8000a92:	f110 0f00 	cmn.w	r0, #0
 8000a96:	ea91 0f03 	teq	r1, r3
 8000a9a:	bf58      	it	pl
 8000a9c:	4299      	cmppl	r1, r3
 8000a9e:	bf08      	it	eq
 8000aa0:	4290      	cmpeq	r0, r2
 8000aa2:	bf2c      	ite	cs
 8000aa4:	17d8      	asrcs	r0, r3, #31
 8000aa6:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000aaa:	f040 0001 	orr.w	r0, r0, #1
 8000aae:	4770      	bx	lr
 8000ab0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ab4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ab8:	d102      	bne.n	8000ac0 <__cmpdf2+0x64>
 8000aba:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000abe:	d107      	bne.n	8000ad0 <__cmpdf2+0x74>
 8000ac0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ac4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ac8:	d1d6      	bne.n	8000a78 <__cmpdf2+0x1c>
 8000aca:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000ace:	d0d3      	beq.n	8000a78 <__cmpdf2+0x1c>
 8000ad0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ad4:	4770      	bx	lr
 8000ad6:	bf00      	nop

08000ad8 <__aeabi_cdrcmple>:
 8000ad8:	4684      	mov	ip, r0
 8000ada:	4610      	mov	r0, r2
 8000adc:	4662      	mov	r2, ip
 8000ade:	468c      	mov	ip, r1
 8000ae0:	4619      	mov	r1, r3
 8000ae2:	4663      	mov	r3, ip
 8000ae4:	e000      	b.n	8000ae8 <__aeabi_cdcmpeq>
 8000ae6:	bf00      	nop

08000ae8 <__aeabi_cdcmpeq>:
 8000ae8:	b501      	push	{r0, lr}
 8000aea:	f7ff ffb7 	bl	8000a5c <__cmpdf2>
 8000aee:	2800      	cmp	r0, #0
 8000af0:	bf48      	it	mi
 8000af2:	f110 0f00 	cmnmi.w	r0, #0
 8000af6:	bd01      	pop	{r0, pc}

08000af8 <__aeabi_dcmpeq>:
 8000af8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000afc:	f7ff fff4 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b00:	bf0c      	ite	eq
 8000b02:	2001      	moveq	r0, #1
 8000b04:	2000      	movne	r0, #0
 8000b06:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b0a:	bf00      	nop

08000b0c <__aeabi_dcmplt>:
 8000b0c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b10:	f7ff ffea 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b14:	bf34      	ite	cc
 8000b16:	2001      	movcc	r0, #1
 8000b18:	2000      	movcs	r0, #0
 8000b1a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b1e:	bf00      	nop

08000b20 <__aeabi_dcmple>:
 8000b20:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b24:	f7ff ffe0 	bl	8000ae8 <__aeabi_cdcmpeq>
 8000b28:	bf94      	ite	ls
 8000b2a:	2001      	movls	r0, #1
 8000b2c:	2000      	movhi	r0, #0
 8000b2e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b32:	bf00      	nop

08000b34 <__aeabi_dcmpge>:
 8000b34:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b38:	f7ff ffce 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b3c:	bf94      	ite	ls
 8000b3e:	2001      	movls	r0, #1
 8000b40:	2000      	movhi	r0, #0
 8000b42:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b46:	bf00      	nop

08000b48 <__aeabi_dcmpgt>:
 8000b48:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b4c:	f7ff ffc4 	bl	8000ad8 <__aeabi_cdrcmple>
 8000b50:	bf34      	ite	cc
 8000b52:	2001      	movcc	r0, #1
 8000b54:	2000      	movcs	r0, #0
 8000b56:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b5a:	bf00      	nop

08000b5c <__aeabi_d2f>:
 8000b5c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b60:	f1b2 43e0 	subs.w	r3, r2, #1879048192	@ 0x70000000
 8000b64:	bf24      	itt	cs
 8000b66:	f5b3 1c00 	subscs.w	ip, r3, #2097152	@ 0x200000
 8000b6a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	@ 0x1fc00000
 8000b6e:	d90d      	bls.n	8000b8c <__aeabi_d2f+0x30>
 8000b70:	f001 4c00 	and.w	ip, r1, #2147483648	@ 0x80000000
 8000b74:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000b78:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000b7c:	f1b2 4f00 	cmp.w	r2, #2147483648	@ 0x80000000
 8000b80:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000b84:	bf08      	it	eq
 8000b86:	f020 0001 	biceq.w	r0, r0, #1
 8000b8a:	4770      	bx	lr
 8000b8c:	f011 4f80 	tst.w	r1, #1073741824	@ 0x40000000
 8000b90:	d121      	bne.n	8000bd6 <__aeabi_d2f+0x7a>
 8000b92:	f113 7238 	adds.w	r2, r3, #48234496	@ 0x2e00000
 8000b96:	bfbc      	itt	lt
 8000b98:	f001 4000 	andlt.w	r0, r1, #2147483648	@ 0x80000000
 8000b9c:	4770      	bxlt	lr
 8000b9e:	f441 1180 	orr.w	r1, r1, #1048576	@ 0x100000
 8000ba2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000ba6:	f1c2 0218 	rsb	r2, r2, #24
 8000baa:	f1c2 0c20 	rsb	ip, r2, #32
 8000bae:	fa10 f30c 	lsls.w	r3, r0, ip
 8000bb2:	fa20 f002 	lsr.w	r0, r0, r2
 8000bb6:	bf18      	it	ne
 8000bb8:	f040 0001 	orrne.w	r0, r0, #1
 8000bbc:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bc0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bc4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bc8:	ea40 000c 	orr.w	r0, r0, ip
 8000bcc:	fa23 f302 	lsr.w	r3, r3, r2
 8000bd0:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000bd4:	e7cc      	b.n	8000b70 <__aeabi_d2f+0x14>
 8000bd6:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000bda:	d107      	bne.n	8000bec <__aeabi_d2f+0x90>
 8000bdc:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000be0:	bf1e      	ittt	ne
 8000be2:	f04f 40fe 	movne.w	r0, #2130706432	@ 0x7f000000
 8000be6:	f440 0040 	orrne.w	r0, r0, #12582912	@ 0xc00000
 8000bea:	4770      	bxne	lr
 8000bec:	f001 4000 	and.w	r0, r1, #2147483648	@ 0x80000000
 8000bf0:	f040 40fe 	orr.w	r0, r0, #2130706432	@ 0x7f000000
 8000bf4:	f440 0000 	orr.w	r0, r0, #8388608	@ 0x800000
 8000bf8:	4770      	bx	lr
 8000bfa:	bf00      	nop

08000bfc <__aeabi_uldivmod>:
 8000bfc:	b953      	cbnz	r3, 8000c14 <__aeabi_uldivmod+0x18>
 8000bfe:	b94a      	cbnz	r2, 8000c14 <__aeabi_uldivmod+0x18>
 8000c00:	2900      	cmp	r1, #0
 8000c02:	bf08      	it	eq
 8000c04:	2800      	cmpeq	r0, #0
 8000c06:	bf1c      	itt	ne
 8000c08:	f04f 31ff 	movne.w	r1, #4294967295
 8000c0c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c10:	f000 b96a 	b.w	8000ee8 <__aeabi_idiv0>
 8000c14:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c18:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c1c:	f000 f806 	bl	8000c2c <__udivmoddi4>
 8000c20:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c24:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c28:	b004      	add	sp, #16
 8000c2a:	4770      	bx	lr

08000c2c <__udivmoddi4>:
 8000c2c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c30:	9d08      	ldr	r5, [sp, #32]
 8000c32:	460c      	mov	r4, r1
 8000c34:	2b00      	cmp	r3, #0
 8000c36:	d14e      	bne.n	8000cd6 <__udivmoddi4+0xaa>
 8000c38:	4694      	mov	ip, r2
 8000c3a:	458c      	cmp	ip, r1
 8000c3c:	4686      	mov	lr, r0
 8000c3e:	fab2 f282 	clz	r2, r2
 8000c42:	d962      	bls.n	8000d0a <__udivmoddi4+0xde>
 8000c44:	b14a      	cbz	r2, 8000c5a <__udivmoddi4+0x2e>
 8000c46:	f1c2 0320 	rsb	r3, r2, #32
 8000c4a:	4091      	lsls	r1, r2
 8000c4c:	fa20 f303 	lsr.w	r3, r0, r3
 8000c50:	fa0c fc02 	lsl.w	ip, ip, r2
 8000c54:	4319      	orrs	r1, r3
 8000c56:	fa00 fe02 	lsl.w	lr, r0, r2
 8000c5a:	ea4f 471c 	mov.w	r7, ip, lsr #16
 8000c5e:	fa1f f68c 	uxth.w	r6, ip
 8000c62:	fbb1 f4f7 	udiv	r4, r1, r7
 8000c66:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000c6a:	fb07 1114 	mls	r1, r7, r4, r1
 8000c6e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000c72:	fb04 f106 	mul.w	r1, r4, r6
 8000c76:	4299      	cmp	r1, r3
 8000c78:	d90a      	bls.n	8000c90 <__udivmoddi4+0x64>
 8000c7a:	eb1c 0303 	adds.w	r3, ip, r3
 8000c7e:	f104 30ff 	add.w	r0, r4, #4294967295
 8000c82:	f080 8112 	bcs.w	8000eaa <__udivmoddi4+0x27e>
 8000c86:	4299      	cmp	r1, r3
 8000c88:	f240 810f 	bls.w	8000eaa <__udivmoddi4+0x27e>
 8000c8c:	3c02      	subs	r4, #2
 8000c8e:	4463      	add	r3, ip
 8000c90:	1a59      	subs	r1, r3, r1
 8000c92:	fa1f f38e 	uxth.w	r3, lr
 8000c96:	fbb1 f0f7 	udiv	r0, r1, r7
 8000c9a:	fb07 1110 	mls	r1, r7, r0, r1
 8000c9e:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ca2:	fb00 f606 	mul.w	r6, r0, r6
 8000ca6:	429e      	cmp	r6, r3
 8000ca8:	d90a      	bls.n	8000cc0 <__udivmoddi4+0x94>
 8000caa:	eb1c 0303 	adds.w	r3, ip, r3
 8000cae:	f100 31ff 	add.w	r1, r0, #4294967295
 8000cb2:	f080 80fc 	bcs.w	8000eae <__udivmoddi4+0x282>
 8000cb6:	429e      	cmp	r6, r3
 8000cb8:	f240 80f9 	bls.w	8000eae <__udivmoddi4+0x282>
 8000cbc:	4463      	add	r3, ip
 8000cbe:	3802      	subs	r0, #2
 8000cc0:	1b9b      	subs	r3, r3, r6
 8000cc2:	ea40 4004 	orr.w	r0, r0, r4, lsl #16
 8000cc6:	2100      	movs	r1, #0
 8000cc8:	b11d      	cbz	r5, 8000cd2 <__udivmoddi4+0xa6>
 8000cca:	40d3      	lsrs	r3, r2
 8000ccc:	2200      	movs	r2, #0
 8000cce:	e9c5 3200 	strd	r3, r2, [r5]
 8000cd2:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000cd6:	428b      	cmp	r3, r1
 8000cd8:	d905      	bls.n	8000ce6 <__udivmoddi4+0xba>
 8000cda:	b10d      	cbz	r5, 8000ce0 <__udivmoddi4+0xb4>
 8000cdc:	e9c5 0100 	strd	r0, r1, [r5]
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	4608      	mov	r0, r1
 8000ce4:	e7f5      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000ce6:	fab3 f183 	clz	r1, r3
 8000cea:	2900      	cmp	r1, #0
 8000cec:	d146      	bne.n	8000d7c <__udivmoddi4+0x150>
 8000cee:	42a3      	cmp	r3, r4
 8000cf0:	d302      	bcc.n	8000cf8 <__udivmoddi4+0xcc>
 8000cf2:	4290      	cmp	r0, r2
 8000cf4:	f0c0 80f0 	bcc.w	8000ed8 <__udivmoddi4+0x2ac>
 8000cf8:	1a86      	subs	r6, r0, r2
 8000cfa:	eb64 0303 	sbc.w	r3, r4, r3
 8000cfe:	2001      	movs	r0, #1
 8000d00:	2d00      	cmp	r5, #0
 8000d02:	d0e6      	beq.n	8000cd2 <__udivmoddi4+0xa6>
 8000d04:	e9c5 6300 	strd	r6, r3, [r5]
 8000d08:	e7e3      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000d0a:	2a00      	cmp	r2, #0
 8000d0c:	f040 8090 	bne.w	8000e30 <__udivmoddi4+0x204>
 8000d10:	eba1 040c 	sub.w	r4, r1, ip
 8000d14:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000d18:	fa1f f78c 	uxth.w	r7, ip
 8000d1c:	2101      	movs	r1, #1
 8000d1e:	fbb4 f6f8 	udiv	r6, r4, r8
 8000d22:	ea4f 431e 	mov.w	r3, lr, lsr #16
 8000d26:	fb08 4416 	mls	r4, r8, r6, r4
 8000d2a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d2e:	fb07 f006 	mul.w	r0, r7, r6
 8000d32:	4298      	cmp	r0, r3
 8000d34:	d908      	bls.n	8000d48 <__udivmoddi4+0x11c>
 8000d36:	eb1c 0303 	adds.w	r3, ip, r3
 8000d3a:	f106 34ff 	add.w	r4, r6, #4294967295
 8000d3e:	d202      	bcs.n	8000d46 <__udivmoddi4+0x11a>
 8000d40:	4298      	cmp	r0, r3
 8000d42:	f200 80cd 	bhi.w	8000ee0 <__udivmoddi4+0x2b4>
 8000d46:	4626      	mov	r6, r4
 8000d48:	1a1c      	subs	r4, r3, r0
 8000d4a:	fa1f f38e 	uxth.w	r3, lr
 8000d4e:	fbb4 f0f8 	udiv	r0, r4, r8
 8000d52:	fb08 4410 	mls	r4, r8, r0, r4
 8000d56:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8000d5a:	fb00 f707 	mul.w	r7, r0, r7
 8000d5e:	429f      	cmp	r7, r3
 8000d60:	d908      	bls.n	8000d74 <__udivmoddi4+0x148>
 8000d62:	eb1c 0303 	adds.w	r3, ip, r3
 8000d66:	f100 34ff 	add.w	r4, r0, #4294967295
 8000d6a:	d202      	bcs.n	8000d72 <__udivmoddi4+0x146>
 8000d6c:	429f      	cmp	r7, r3
 8000d6e:	f200 80b0 	bhi.w	8000ed2 <__udivmoddi4+0x2a6>
 8000d72:	4620      	mov	r0, r4
 8000d74:	1bdb      	subs	r3, r3, r7
 8000d76:	ea40 4006 	orr.w	r0, r0, r6, lsl #16
 8000d7a:	e7a5      	b.n	8000cc8 <__udivmoddi4+0x9c>
 8000d7c:	f1c1 0620 	rsb	r6, r1, #32
 8000d80:	408b      	lsls	r3, r1
 8000d82:	fa22 f706 	lsr.w	r7, r2, r6
 8000d86:	431f      	orrs	r7, r3
 8000d88:	fa20 fc06 	lsr.w	ip, r0, r6
 8000d8c:	fa04 f301 	lsl.w	r3, r4, r1
 8000d90:	ea43 030c 	orr.w	r3, r3, ip
 8000d94:	40f4      	lsrs	r4, r6
 8000d96:	fa00 f801 	lsl.w	r8, r0, r1
 8000d9a:	0c38      	lsrs	r0, r7, #16
 8000d9c:	ea4f 4913 	mov.w	r9, r3, lsr #16
 8000da0:	fbb4 fef0 	udiv	lr, r4, r0
 8000da4:	fa1f fc87 	uxth.w	ip, r7
 8000da8:	fb00 441e 	mls	r4, r0, lr, r4
 8000dac:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000db0:	fb0e f90c 	mul.w	r9, lr, ip
 8000db4:	45a1      	cmp	r9, r4
 8000db6:	fa02 f201 	lsl.w	r2, r2, r1
 8000dba:	d90a      	bls.n	8000dd2 <__udivmoddi4+0x1a6>
 8000dbc:	193c      	adds	r4, r7, r4
 8000dbe:	f10e 3aff 	add.w	sl, lr, #4294967295
 8000dc2:	f080 8084 	bcs.w	8000ece <__udivmoddi4+0x2a2>
 8000dc6:	45a1      	cmp	r9, r4
 8000dc8:	f240 8081 	bls.w	8000ece <__udivmoddi4+0x2a2>
 8000dcc:	f1ae 0e02 	sub.w	lr, lr, #2
 8000dd0:	443c      	add	r4, r7
 8000dd2:	eba4 0409 	sub.w	r4, r4, r9
 8000dd6:	fa1f f983 	uxth.w	r9, r3
 8000dda:	fbb4 f3f0 	udiv	r3, r4, r0
 8000dde:	fb00 4413 	mls	r4, r0, r3, r4
 8000de2:	ea49 4404 	orr.w	r4, r9, r4, lsl #16
 8000de6:	fb03 fc0c 	mul.w	ip, r3, ip
 8000dea:	45a4      	cmp	ip, r4
 8000dec:	d907      	bls.n	8000dfe <__udivmoddi4+0x1d2>
 8000dee:	193c      	adds	r4, r7, r4
 8000df0:	f103 30ff 	add.w	r0, r3, #4294967295
 8000df4:	d267      	bcs.n	8000ec6 <__udivmoddi4+0x29a>
 8000df6:	45a4      	cmp	ip, r4
 8000df8:	d965      	bls.n	8000ec6 <__udivmoddi4+0x29a>
 8000dfa:	3b02      	subs	r3, #2
 8000dfc:	443c      	add	r4, r7
 8000dfe:	ea43 400e 	orr.w	r0, r3, lr, lsl #16
 8000e02:	fba0 9302 	umull	r9, r3, r0, r2
 8000e06:	eba4 040c 	sub.w	r4, r4, ip
 8000e0a:	429c      	cmp	r4, r3
 8000e0c:	46ce      	mov	lr, r9
 8000e0e:	469c      	mov	ip, r3
 8000e10:	d351      	bcc.n	8000eb6 <__udivmoddi4+0x28a>
 8000e12:	d04e      	beq.n	8000eb2 <__udivmoddi4+0x286>
 8000e14:	b155      	cbz	r5, 8000e2c <__udivmoddi4+0x200>
 8000e16:	ebb8 030e 	subs.w	r3, r8, lr
 8000e1a:	eb64 040c 	sbc.w	r4, r4, ip
 8000e1e:	fa04 f606 	lsl.w	r6, r4, r6
 8000e22:	40cb      	lsrs	r3, r1
 8000e24:	431e      	orrs	r6, r3
 8000e26:	40cc      	lsrs	r4, r1
 8000e28:	e9c5 6400 	strd	r6, r4, [r5]
 8000e2c:	2100      	movs	r1, #0
 8000e2e:	e750      	b.n	8000cd2 <__udivmoddi4+0xa6>
 8000e30:	f1c2 0320 	rsb	r3, r2, #32
 8000e34:	fa20 f103 	lsr.w	r1, r0, r3
 8000e38:	fa0c fc02 	lsl.w	ip, ip, r2
 8000e3c:	fa24 f303 	lsr.w	r3, r4, r3
 8000e40:	4094      	lsls	r4, r2
 8000e42:	430c      	orrs	r4, r1
 8000e44:	ea4f 481c 	mov.w	r8, ip, lsr #16
 8000e48:	fa00 fe02 	lsl.w	lr, r0, r2
 8000e4c:	fa1f f78c 	uxth.w	r7, ip
 8000e50:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e54:	fb08 3110 	mls	r1, r8, r0, r3
 8000e58:	0c23      	lsrs	r3, r4, #16
 8000e5a:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000e5e:	fb00 f107 	mul.w	r1, r0, r7
 8000e62:	4299      	cmp	r1, r3
 8000e64:	d908      	bls.n	8000e78 <__udivmoddi4+0x24c>
 8000e66:	eb1c 0303 	adds.w	r3, ip, r3
 8000e6a:	f100 36ff 	add.w	r6, r0, #4294967295
 8000e6e:	d22c      	bcs.n	8000eca <__udivmoddi4+0x29e>
 8000e70:	4299      	cmp	r1, r3
 8000e72:	d92a      	bls.n	8000eca <__udivmoddi4+0x29e>
 8000e74:	3802      	subs	r0, #2
 8000e76:	4463      	add	r3, ip
 8000e78:	1a5b      	subs	r3, r3, r1
 8000e7a:	b2a4      	uxth	r4, r4
 8000e7c:	fbb3 f1f8 	udiv	r1, r3, r8
 8000e80:	fb08 3311 	mls	r3, r8, r1, r3
 8000e84:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000e88:	fb01 f307 	mul.w	r3, r1, r7
 8000e8c:	42a3      	cmp	r3, r4
 8000e8e:	d908      	bls.n	8000ea2 <__udivmoddi4+0x276>
 8000e90:	eb1c 0404 	adds.w	r4, ip, r4
 8000e94:	f101 36ff 	add.w	r6, r1, #4294967295
 8000e98:	d213      	bcs.n	8000ec2 <__udivmoddi4+0x296>
 8000e9a:	42a3      	cmp	r3, r4
 8000e9c:	d911      	bls.n	8000ec2 <__udivmoddi4+0x296>
 8000e9e:	3902      	subs	r1, #2
 8000ea0:	4464      	add	r4, ip
 8000ea2:	1ae4      	subs	r4, r4, r3
 8000ea4:	ea41 4100 	orr.w	r1, r1, r0, lsl #16
 8000ea8:	e739      	b.n	8000d1e <__udivmoddi4+0xf2>
 8000eaa:	4604      	mov	r4, r0
 8000eac:	e6f0      	b.n	8000c90 <__udivmoddi4+0x64>
 8000eae:	4608      	mov	r0, r1
 8000eb0:	e706      	b.n	8000cc0 <__udivmoddi4+0x94>
 8000eb2:	45c8      	cmp	r8, r9
 8000eb4:	d2ae      	bcs.n	8000e14 <__udivmoddi4+0x1e8>
 8000eb6:	ebb9 0e02 	subs.w	lr, r9, r2
 8000eba:	eb63 0c07 	sbc.w	ip, r3, r7
 8000ebe:	3801      	subs	r0, #1
 8000ec0:	e7a8      	b.n	8000e14 <__udivmoddi4+0x1e8>
 8000ec2:	4631      	mov	r1, r6
 8000ec4:	e7ed      	b.n	8000ea2 <__udivmoddi4+0x276>
 8000ec6:	4603      	mov	r3, r0
 8000ec8:	e799      	b.n	8000dfe <__udivmoddi4+0x1d2>
 8000eca:	4630      	mov	r0, r6
 8000ecc:	e7d4      	b.n	8000e78 <__udivmoddi4+0x24c>
 8000ece:	46d6      	mov	lr, sl
 8000ed0:	e77f      	b.n	8000dd2 <__udivmoddi4+0x1a6>
 8000ed2:	4463      	add	r3, ip
 8000ed4:	3802      	subs	r0, #2
 8000ed6:	e74d      	b.n	8000d74 <__udivmoddi4+0x148>
 8000ed8:	4606      	mov	r6, r0
 8000eda:	4623      	mov	r3, r4
 8000edc:	4608      	mov	r0, r1
 8000ede:	e70f      	b.n	8000d00 <__udivmoddi4+0xd4>
 8000ee0:	3e02      	subs	r6, #2
 8000ee2:	4463      	add	r3, ip
 8000ee4:	e730      	b.n	8000d48 <__udivmoddi4+0x11c>
 8000ee6:	bf00      	nop

08000ee8 <__aeabi_idiv0>:
 8000ee8:	4770      	bx	lr
 8000eea:	bf00      	nop

08000eec <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8000eec:	b580      	push	{r7, lr}
 8000eee:	b082      	sub	sp, #8
 8000ef0:	af02      	add	r7, sp, #8
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8000ef2:	f001 fd4f 	bl	8002994 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 8000ef6:	f000 f905 	bl	8001104 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8000efa:	f000 fbaf 	bl	800165c <MX_GPIO_Init>
  MX_DMA_Init();
 8000efe:	f000 fb77 	bl	80015f0 <MX_DMA_Init>
  MX_SPI2_Init();
 8000f02:	f000 fa05 	bl	8001310 <MX_SPI2_Init>
  MX_CRC_Init();
 8000f06:	f000 f9c1 	bl	800128c <MX_CRC_Init>
  MX_TIM3_Init();
 8000f0a:	f000 faad 	bl	8001468 <MX_TIM3_Init>
  MX_ADC1_Init();
 8000f0e:	f000 f96b 	bl	80011e8 <MX_ADC1_Init>
  MX_TIM2_Init();
 8000f12:	f000 fa33 	bl	800137c <MX_TIM2_Init>
  MX_I2C2_Init();
 8000f16:	f000 f9cd 	bl	80012b4 <MX_I2C2_Init>
  MX_TIM4_Init();
 8000f1a:	f000 faf3 	bl	8001504 <MX_TIM4_Init>
  MX_TouchGFX_Init();
 8000f1e:	f007 f891 	bl	8008044 <MX_TouchGFX_Init>
  /* USER CODE BEGIN 2 */

	  HAL_TIM_PWM_Init(&htim2);
 8000f22:	4869      	ldr	r0, [pc, #420]	@ (80010c8 <main+0x1dc>)
 8000f24:	f006 f91e 	bl	8007164 <HAL_TIM_PWM_Init>



	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f28:	2000      	movs	r0, #0
 8000f2a:	f001 f9b9 	bl	80022a0 <Displ_Init>
	  touchgfxSignalVSync();
 8000f2e:	f00f f9f1 	bl	8010314 <touchgfxSignalVSync>
	  Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
 8000f32:	2000      	movs	r0, #0
 8000f34:	f001 f9b4 	bl	80022a0 <Displ_Init>
	  touchgfxSignalVSync();
 8000f38:	f00f f9ec 	bl	8010314 <touchgfxSignalVSync>


	  Displ_BackLight('I');  					// initialize backlight
 8000f3c:	2049      	movs	r0, #73	@ 0x49
 8000f3e:	f001 fa55 	bl	80023ec <Displ_BackLight>
	  HAL_TIM_Base_Start_IT(&TGFX_T);			// start TouchGFX tick timer
 8000f42:	4862      	ldr	r0, [pc, #392]	@ (80010cc <main+0x1e0>)
 8000f44:	f006 f89e 	bl	8007084 <HAL_TIM_Base_Start_IT>
	  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f48:	2201      	movs	r2, #1
 8000f4a:	4961      	ldr	r1, [pc, #388]	@ (80010d0 <main+0x1e4>)
 8000f4c:	4861      	ldr	r0, [pc, #388]	@ (80010d4 <main+0x1e8>)
 8000f4e:	f001 ff0b 	bl	8002d68 <HAL_ADC_Start_DMA>
	  HAL_TIM_PWM_Start(&htim2,TIM_CHANNEL_1);
 8000f52:	2100      	movs	r1, #0
 8000f54:	485c      	ldr	r0, [pc, #368]	@ (80010c8 <main+0x1dc>)
 8000f56:	f006 f95f 	bl	8007218 <HAL_TIM_PWM_Start>

	  HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
 8000f5a:	2104      	movs	r1, #4
 8000f5c:	485e      	ldr	r0, [pc, #376]	@ (80010d8 <main+0x1ec>)
 8000f5e:	f006 f95b 	bl	8007218 <HAL_TIM_PWM_Start>
	  htim4.Instance->CCR2 = 10;
 8000f62:	4b5d      	ldr	r3, [pc, #372]	@ (80010d8 <main+0x1ec>)
 8000f64:	681b      	ldr	r3, [r3, #0]
 8000f66:	220a      	movs	r2, #10
 8000f68:	639a      	str	r2, [r3, #56]	@ 0x38
	  htim2.Instance->CCR1 = 15000;
 8000f6a:	4b57      	ldr	r3, [pc, #348]	@ (80010c8 <main+0x1dc>)
 8000f6c:	681b      	ldr	r3, [r3, #0]
 8000f6e:	f643 2298 	movw	r2, #15000	@ 0x3a98
 8000f72:	635a      	str	r2, [r3, #52]	@ 0x34
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
//	  while(HAL_I2C_IsDeviceReady(&hi2c2, 0xB8,1, HAL_MAX_DELAY) != HAL_OK){
//
//	  }
	  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, 1);
 8000f74:	2201      	movs	r2, #1
 8000f76:	2140      	movs	r1, #64	@ 0x40
 8000f78:	4858      	ldr	r0, [pc, #352]	@ (80010dc <main+0x1f0>)
 8000f7a:	f003 f9b1 	bl	80042e0 <HAL_GPIO_WritePin>

	  while (1)
	  {

		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 8000f7e:	2201      	movs	r2, #1
 8000f80:	4953      	ldr	r1, [pc, #332]	@ (80010d0 <main+0x1e4>)
 8000f82:	4854      	ldr	r0, [pc, #336]	@ (80010d4 <main+0x1e8>)
 8000f84:	f001 fef0 	bl	8002d68 <HAL_ADC_Start_DMA>
		  HAL_I2C_Master_Transmit (&hi2c2, 0xB8, i2c_buffer, 3, 100);
 8000f88:	2364      	movs	r3, #100	@ 0x64
 8000f8a:	9300      	str	r3, [sp, #0]
 8000f8c:	2303      	movs	r3, #3
 8000f8e:	4a54      	ldr	r2, [pc, #336]	@ (80010e0 <main+0x1f4>)
 8000f90:	21b8      	movs	r1, #184	@ 0xb8
 8000f92:	4854      	ldr	r0, [pc, #336]	@ (80010e4 <main+0x1f8>)
 8000f94:	f003 fb34 	bl	8004600 <HAL_I2C_Master_Transmit>
		  HAL_I2C_Master_Receive (&hi2c2, 0xB9, i2c_return, 8, 100);
 8000f98:	2364      	movs	r3, #100	@ 0x64
 8000f9a:	9300      	str	r3, [sp, #0]
 8000f9c:	2308      	movs	r3, #8
 8000f9e:	4a52      	ldr	r2, [pc, #328]	@ (80010e8 <main+0x1fc>)
 8000fa0:	21b9      	movs	r1, #185	@ 0xb9
 8000fa2:	4850      	ldr	r0, [pc, #320]	@ (80010e4 <main+0x1f8>)
 8000fa4:	f003 fc2a 	bl	80047fc <HAL_I2C_Master_Receive>
		  temp = ((i2c_return[4] << 8) + i2c_return[5]);
 8000fa8:	4b4f      	ldr	r3, [pc, #316]	@ (80010e8 <main+0x1fc>)
 8000faa:	791b      	ldrb	r3, [r3, #4]
 8000fac:	021b      	lsls	r3, r3, #8
 8000fae:	4a4e      	ldr	r2, [pc, #312]	@ (80010e8 <main+0x1fc>)
 8000fb0:	7952      	ldrb	r2, [r2, #5]
 8000fb2:	4413      	add	r3, r2
 8000fb4:	ee07 3a90 	vmov	s15, r3
 8000fb8:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fbc:	4b4b      	ldr	r3, [pc, #300]	@ (80010ec <main+0x200>)
 8000fbe:	edc3 7a00 	vstr	s15, [r3]
		  hum = ((i2c_return[2] << 8) + i2c_return[3]);
 8000fc2:	4b49      	ldr	r3, [pc, #292]	@ (80010e8 <main+0x1fc>)
 8000fc4:	789b      	ldrb	r3, [r3, #2]
 8000fc6:	021b      	lsls	r3, r3, #8
 8000fc8:	4a47      	ldr	r2, [pc, #284]	@ (80010e8 <main+0x1fc>)
 8000fca:	78d2      	ldrb	r2, [r2, #3]
 8000fcc:	4413      	add	r3, r2
 8000fce:	ee07 3a90 	vmov	s15, r3
 8000fd2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8000fd6:	4b46      	ldr	r3, [pc, #280]	@ (80010f0 <main+0x204>)
 8000fd8:	edc3 7a00 	vstr	s15, [r3]
		  temp = floor(temp)/10.0;
 8000fdc:	4b43      	ldr	r3, [pc, #268]	@ (80010ec <main+0x200>)
 8000fde:	681b      	ldr	r3, [r3, #0]
 8000fe0:	4618      	mov	r0, r3
 8000fe2:	f7ff fac9 	bl	8000578 <__aeabi_f2d>
 8000fe6:	4602      	mov	r2, r0
 8000fe8:	460b      	mov	r3, r1
 8000fea:	ec43 2b10 	vmov	d0, r2, r3
 8000fee:	f024 feab 	bl	8025d48 <floor>
 8000ff2:	ec51 0b10 	vmov	r0, r1, d0
 8000ff6:	f04f 0200 	mov.w	r2, #0
 8000ffa:	4b3e      	ldr	r3, [pc, #248]	@ (80010f4 <main+0x208>)
 8000ffc:	f7ff fc3e 	bl	800087c <__aeabi_ddiv>
 8001000:	4602      	mov	r2, r0
 8001002:	460b      	mov	r3, r1
 8001004:	4610      	mov	r0, r2
 8001006:	4619      	mov	r1, r3
 8001008:	f7ff fda8 	bl	8000b5c <__aeabi_d2f>
 800100c:	4603      	mov	r3, r0
 800100e:	4a37      	ldr	r2, [pc, #220]	@ (80010ec <main+0x200>)
 8001010:	6013      	str	r3, [r2, #0]
		  hum = floor(hum)/10.0;
 8001012:	4b37      	ldr	r3, [pc, #220]	@ (80010f0 <main+0x204>)
 8001014:	681b      	ldr	r3, [r3, #0]
 8001016:	4618      	mov	r0, r3
 8001018:	f7ff faae 	bl	8000578 <__aeabi_f2d>
 800101c:	4602      	mov	r2, r0
 800101e:	460b      	mov	r3, r1
 8001020:	ec43 2b10 	vmov	d0, r2, r3
 8001024:	f024 fe90 	bl	8025d48 <floor>
 8001028:	ec51 0b10 	vmov	r0, r1, d0
 800102c:	f04f 0200 	mov.w	r2, #0
 8001030:	4b30      	ldr	r3, [pc, #192]	@ (80010f4 <main+0x208>)
 8001032:	f7ff fc23 	bl	800087c <__aeabi_ddiv>
 8001036:	4602      	mov	r2, r0
 8001038:	460b      	mov	r3, r1
 800103a:	4610      	mov	r0, r2
 800103c:	4619      	mov	r1, r3
 800103e:	f7ff fd8d 	bl	8000b5c <__aeabi_d2f>
 8001042:	4603      	mov	r3, r0
 8001044:	4a2a      	ldr	r2, [pc, #168]	@ (80010f0 <main+0x204>)
 8001046:	6013      	str	r3, [r2, #0]

		  //htim4.Instance->CCR2 = (value_adc/4096.0) * 100;
		  if (temp < 23){
 8001048:	4b28      	ldr	r3, [pc, #160]	@ (80010ec <main+0x200>)
 800104a:	edd3 7a00 	vldr	s15, [r3]
 800104e:	eeb3 7a07 	vmov.f32	s14, #55	@ 0x41b80000  23.0
 8001052:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001056:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800105a:	d503      	bpl.n	8001064 <main+0x178>
			  htim4.Instance->CCR2 = 10;
 800105c:	4b1e      	ldr	r3, [pc, #120]	@ (80010d8 <main+0x1ec>)
 800105e:	681b      	ldr	r3, [r3, #0]
 8001060:	220a      	movs	r2, #10
 8001062:	639a      	str	r2, [r3, #56]	@ 0x38
		  }
		  if (temp > 24){
 8001064:	4b21      	ldr	r3, [pc, #132]	@ (80010ec <main+0x200>)
 8001066:	edd3 7a00 	vldr	s15, [r3]
 800106a:	eeb3 7a08 	vmov.f32	s14, #56	@ 0x41c00000  24.0
 800106e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8001072:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001076:	dd03      	ble.n	8001080 <main+0x194>
			  htim4.Instance->CCR2 = 0;
 8001078:	4b17      	ldr	r3, [pc, #92]	@ (80010d8 <main+0x1ec>)
 800107a:	681b      	ldr	r3, [r3, #0]
 800107c:	2200      	movs	r2, #0
 800107e:	639a      	str	r2, [r3, #56]	@ 0x38
//			  htim2.Instance->CCR1 = 0;
//
//		  }
		  //HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);

		  if (hum <=50){
 8001080:	4b1b      	ldr	r3, [pc, #108]	@ (80010f0 <main+0x204>)
 8001082:	edd3 7a00 	vldr	s15, [r3]
 8001086:	ed9f 7a1c 	vldr	s14, [pc, #112]	@ 80010f8 <main+0x20c>
 800108a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800108e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8001092:	d805      	bhi.n	80010a0 <main+0x1b4>
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,1);
 8001094:	2201      	movs	r2, #1
 8001096:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 800109a:	4818      	ldr	r0, [pc, #96]	@ (80010fc <main+0x210>)
 800109c:	f003 f920 	bl	80042e0 <HAL_GPIO_WritePin>
		  }
		  if (hum >=80){
 80010a0:	4b13      	ldr	r3, [pc, #76]	@ (80010f0 <main+0x204>)
 80010a2:	edd3 7a00 	vldr	s15, [r3]
 80010a6:	ed9f 7a16 	vldr	s14, [pc, #88]	@ 8001100 <main+0x214>
 80010aa:	eef4 7ac7 	vcmpe.f32	s15, s14
 80010ae:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80010b2:	db05      	blt.n	80010c0 <main+0x1d4>
				  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_10,0);
 80010b4:	2200      	movs	r2, #0
 80010b6:	f44f 6180 	mov.w	r1, #1024	@ 0x400
 80010ba:	4810      	ldr	r0, [pc, #64]	@ (80010fc <main+0x210>)
 80010bc:	f003 f910 	bl	80042e0 <HAL_GPIO_WritePin>



    /* USER CODE END WHILE */

  MX_TouchGFX_Process();
 80010c0:	f006 ffc8 	bl	8008054 <MX_TouchGFX_Process>
		  HAL_ADC_Start_DMA(&hadc1,(uint32_t*)&value_adc,1);
 80010c4:	e75b      	b.n	8000f7e <main+0x92>
 80010c6:	bf00      	nop
 80010c8:	200004f8 	.word	0x200004f8
 80010cc:	20000540 	.word	0x20000540
 80010d0:	200005d0 	.word	0x200005d0
 80010d4:	2000033c 	.word	0x2000033c
 80010d8:	20000588 	.word	0x20000588
 80010dc:	40020800 	.word	0x40020800
 80010e0:	20000010 	.word	0x20000010
 80010e4:	200003ec 	.word	0x200003ec
 80010e8:	200005dc 	.word	0x200005dc
 80010ec:	200005d4 	.word	0x200005d4
 80010f0:	200005d8 	.word	0x200005d8
 80010f4:	40240000 	.word	0x40240000
 80010f8:	42480000 	.word	0x42480000
 80010fc:	40020000 	.word	0x40020000
 8001100:	42a00000 	.word	0x42a00000

08001104 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001104:	b580      	push	{r7, lr}
 8001106:	b094      	sub	sp, #80	@ 0x50
 8001108:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 800110a:	f107 031c 	add.w	r3, r7, #28
 800110e:	2234      	movs	r2, #52	@ 0x34
 8001110:	2100      	movs	r1, #0
 8001112:	4618      	mov	r0, r3
 8001114:	f025 f8a3 	bl	802625e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001118:	f107 0308 	add.w	r3, r7, #8
 800111c:	2200      	movs	r2, #0
 800111e:	601a      	str	r2, [r3, #0]
 8001120:	605a      	str	r2, [r3, #4]
 8001122:	609a      	str	r2, [r3, #8]
 8001124:	60da      	str	r2, [r3, #12]
 8001126:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 8001128:	2300      	movs	r3, #0
 800112a:	607b      	str	r3, [r7, #4]
 800112c:	4b2c      	ldr	r3, [pc, #176]	@ (80011e0 <SystemClock_Config+0xdc>)
 800112e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001130:	4a2b      	ldr	r2, [pc, #172]	@ (80011e0 <SystemClock_Config+0xdc>)
 8001132:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001136:	6413      	str	r3, [r2, #64]	@ 0x40
 8001138:	4b29      	ldr	r3, [pc, #164]	@ (80011e0 <SystemClock_Config+0xdc>)
 800113a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800113c:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001140:	607b      	str	r3, [r7, #4]
 8001142:	687b      	ldr	r3, [r7, #4]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001144:	2300      	movs	r3, #0
 8001146:	603b      	str	r3, [r7, #0]
 8001148:	4b26      	ldr	r3, [pc, #152]	@ (80011e4 <SystemClock_Config+0xe0>)
 800114a:	681b      	ldr	r3, [r3, #0]
 800114c:	4a25      	ldr	r2, [pc, #148]	@ (80011e4 <SystemClock_Config+0xe0>)
 800114e:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8001152:	6013      	str	r3, [r2, #0]
 8001154:	4b23      	ldr	r3, [pc, #140]	@ (80011e4 <SystemClock_Config+0xe0>)
 8001156:	681b      	ldr	r3, [r3, #0]
 8001158:	f403 4340 	and.w	r3, r3, #49152	@ 0xc000
 800115c:	603b      	str	r3, [r7, #0]
 800115e:	683b      	ldr	r3, [r7, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8001160:	2302      	movs	r3, #2
 8001162:	61fb      	str	r3, [r7, #28]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8001164:	2301      	movs	r3, #1
 8001166:	62bb      	str	r3, [r7, #40]	@ 0x28
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8001168:	2310      	movs	r3, #16
 800116a:	62fb      	str	r3, [r7, #44]	@ 0x2c
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800116c:	2302      	movs	r3, #2
 800116e:	637b      	str	r3, [r7, #52]	@ 0x34
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8001170:	2300      	movs	r3, #0
 8001172:	63bb      	str	r3, [r7, #56]	@ 0x38
  RCC_OscInitStruct.PLL.PLLM = 8;
 8001174:	2308      	movs	r3, #8
 8001176:	63fb      	str	r3, [r7, #60]	@ 0x3c
  RCC_OscInitStruct.PLL.PLLN = 180;
 8001178:	23b4      	movs	r3, #180	@ 0xb4
 800117a:	643b      	str	r3, [r7, #64]	@ 0x40
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 800117c:	2302      	movs	r3, #2
 800117e:	647b      	str	r3, [r7, #68]	@ 0x44
  RCC_OscInitStruct.PLL.PLLQ = 2;
 8001180:	2302      	movs	r3, #2
 8001182:	64bb      	str	r3, [r7, #72]	@ 0x48
  RCC_OscInitStruct.PLL.PLLR = 2;
 8001184:	2302      	movs	r3, #2
 8001186:	64fb      	str	r3, [r7, #76]	@ 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001188:	f107 031c 	add.w	r3, r7, #28
 800118c:	4618      	mov	r0, r3
 800118e:	f004 fc73 	bl	8005a78 <HAL_RCC_OscConfig>
 8001192:	4603      	mov	r3, r0
 8001194:	2b00      	cmp	r3, #0
 8001196:	d001      	beq.n	800119c <SystemClock_Config+0x98>
  {
    Error_Handler();
 8001198:	f000 fb58 	bl	800184c <Error_Handler>
  }

  /** Activate the Over-Drive mode
  */
  if (HAL_PWREx_EnableOverDrive() != HAL_OK)
 800119c:	f004 f8e6 	bl	800536c <HAL_PWREx_EnableOverDrive>
 80011a0:	4603      	mov	r3, r0
 80011a2:	2b00      	cmp	r3, #0
 80011a4:	d001      	beq.n	80011aa <SystemClock_Config+0xa6>
  {
    Error_Handler();
 80011a6:	f000 fb51 	bl	800184c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80011aa:	230f      	movs	r3, #15
 80011ac:	60bb      	str	r3, [r7, #8]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 80011ae:	2302      	movs	r3, #2
 80011b0:	60fb      	str	r3, [r7, #12]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 80011b2:	2300      	movs	r3, #0
 80011b4:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 80011b6:	f44f 53a0 	mov.w	r3, #5120	@ 0x1400
 80011ba:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 80011bc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80011c0:	61bb      	str	r3, [r7, #24]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 80011c2:	f107 0308 	add.w	r3, r7, #8
 80011c6:	2105      	movs	r1, #5
 80011c8:	4618      	mov	r0, r3
 80011ca:	f004 f91f 	bl	800540c <HAL_RCC_ClockConfig>
 80011ce:	4603      	mov	r3, r0
 80011d0:	2b00      	cmp	r3, #0
 80011d2:	d001      	beq.n	80011d8 <SystemClock_Config+0xd4>
  {
    Error_Handler();
 80011d4:	f000 fb3a 	bl	800184c <Error_Handler>
  }
}
 80011d8:	bf00      	nop
 80011da:	3750      	adds	r7, #80	@ 0x50
 80011dc:	46bd      	mov	sp, r7
 80011de:	bd80      	pop	{r7, pc}
 80011e0:	40023800 	.word	0x40023800
 80011e4:	40007000 	.word	0x40007000

080011e8 <MX_ADC1_Init>:
  * @brief ADC1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_ADC1_Init(void)
{
 80011e8:	b580      	push	{r7, lr}
 80011ea:	b084      	sub	sp, #16
 80011ec:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN ADC1_Init 0 */

  /* USER CODE END ADC1_Init 0 */

  ADC_ChannelConfTypeDef sConfig = {0};
 80011ee:	463b      	mov	r3, r7
 80011f0:	2200      	movs	r2, #0
 80011f2:	601a      	str	r2, [r3, #0]
 80011f4:	605a      	str	r2, [r3, #4]
 80011f6:	609a      	str	r2, [r3, #8]
 80011f8:	60da      	str	r2, [r3, #12]

  /* USER CODE END ADC1_Init 1 */

  /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of conversion)
  */
  hadc1.Instance = ADC1;
 80011fa:	4b21      	ldr	r3, [pc, #132]	@ (8001280 <MX_ADC1_Init+0x98>)
 80011fc:	4a21      	ldr	r2, [pc, #132]	@ (8001284 <MX_ADC1_Init+0x9c>)
 80011fe:	601a      	str	r2, [r3, #0]
  hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 8001200:	4b1f      	ldr	r3, [pc, #124]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001202:	f44f 3280 	mov.w	r2, #65536	@ 0x10000
 8001206:	605a      	str	r2, [r3, #4]
  hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 8001208:	4b1d      	ldr	r3, [pc, #116]	@ (8001280 <MX_ADC1_Init+0x98>)
 800120a:	2200      	movs	r2, #0
 800120c:	609a      	str	r2, [r3, #8]
  hadc1.Init.ScanConvMode = DISABLE;
 800120e:	4b1c      	ldr	r3, [pc, #112]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001210:	2200      	movs	r2, #0
 8001212:	611a      	str	r2, [r3, #16]
  hadc1.Init.ContinuousConvMode = ENABLE;
 8001214:	4b1a      	ldr	r3, [pc, #104]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001216:	2201      	movs	r2, #1
 8001218:	761a      	strb	r2, [r3, #24]
  hadc1.Init.DiscontinuousConvMode = DISABLE;
 800121a:	4b19      	ldr	r3, [pc, #100]	@ (8001280 <MX_ADC1_Init+0x98>)
 800121c:	2200      	movs	r2, #0
 800121e:	f883 2020 	strb.w	r2, [r3, #32]
  hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 8001222:	4b17      	ldr	r3, [pc, #92]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001224:	2200      	movs	r2, #0
 8001226:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 8001228:	4b15      	ldr	r3, [pc, #84]	@ (8001280 <MX_ADC1_Init+0x98>)
 800122a:	4a17      	ldr	r2, [pc, #92]	@ (8001288 <MX_ADC1_Init+0xa0>)
 800122c:	629a      	str	r2, [r3, #40]	@ 0x28
  hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 800122e:	4b14      	ldr	r3, [pc, #80]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001230:	2200      	movs	r2, #0
 8001232:	60da      	str	r2, [r3, #12]
  hadc1.Init.NbrOfConversion = 1;
 8001234:	4b12      	ldr	r3, [pc, #72]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001236:	2201      	movs	r2, #1
 8001238:	61da      	str	r2, [r3, #28]
  hadc1.Init.DMAContinuousRequests = DISABLE;
 800123a:	4b11      	ldr	r3, [pc, #68]	@ (8001280 <MX_ADC1_Init+0x98>)
 800123c:	2200      	movs	r2, #0
 800123e:	f883 2030 	strb.w	r2, [r3, #48]	@ 0x30
  hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 8001242:	4b0f      	ldr	r3, [pc, #60]	@ (8001280 <MX_ADC1_Init+0x98>)
 8001244:	2201      	movs	r2, #1
 8001246:	615a      	str	r2, [r3, #20]
  if (HAL_ADC_Init(&hadc1) != HAL_OK)
 8001248:	480d      	ldr	r0, [pc, #52]	@ (8001280 <MX_ADC1_Init+0x98>)
 800124a:	f001 fc39 	bl	8002ac0 <HAL_ADC_Init>
 800124e:	4603      	mov	r3, r0
 8001250:	2b00      	cmp	r3, #0
 8001252:	d001      	beq.n	8001258 <MX_ADC1_Init+0x70>
  {
    Error_Handler();
 8001254:	f000 fafa 	bl	800184c <Error_Handler>
  }

  /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and its sample time.
  */
  sConfig.Channel = ADC_CHANNEL_10;
 8001258:	230a      	movs	r3, #10
 800125a:	603b      	str	r3, [r7, #0]
  sConfig.Rank = 1;
 800125c:	2301      	movs	r3, #1
 800125e:	607b      	str	r3, [r7, #4]
  sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 8001260:	2300      	movs	r3, #0
 8001262:	60bb      	str	r3, [r7, #8]
  if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 8001264:	463b      	mov	r3, r7
 8001266:	4619      	mov	r1, r3
 8001268:	4805      	ldr	r0, [pc, #20]	@ (8001280 <MX_ADC1_Init+0x98>)
 800126a:	f001 feb5 	bl	8002fd8 <HAL_ADC_ConfigChannel>
 800126e:	4603      	mov	r3, r0
 8001270:	2b00      	cmp	r3, #0
 8001272:	d001      	beq.n	8001278 <MX_ADC1_Init+0x90>
  {
    Error_Handler();
 8001274:	f000 faea 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN ADC1_Init 2 */

  /* USER CODE END ADC1_Init 2 */

}
 8001278:	bf00      	nop
 800127a:	3710      	adds	r7, #16
 800127c:	46bd      	mov	sp, r7
 800127e:	bd80      	pop	{r7, pc}
 8001280:	2000033c 	.word	0x2000033c
 8001284:	40012000 	.word	0x40012000
 8001288:	0f000001 	.word	0x0f000001

0800128c <MX_CRC_Init>:
  * @brief CRC Initialization Function
  * @param None
  * @retval None
  */
static void MX_CRC_Init(void)
{
 800128c:	b580      	push	{r7, lr}
 800128e:	af00      	add	r7, sp, #0
  /* USER CODE END CRC_Init 0 */

  /* USER CODE BEGIN CRC_Init 1 */

  /* USER CODE END CRC_Init 1 */
  hcrc.Instance = CRC;
 8001290:	4b06      	ldr	r3, [pc, #24]	@ (80012ac <MX_CRC_Init+0x20>)
 8001292:	4a07      	ldr	r2, [pc, #28]	@ (80012b0 <MX_CRC_Init+0x24>)
 8001294:	601a      	str	r2, [r3, #0]
  if (HAL_CRC_Init(&hcrc) != HAL_OK)
 8001296:	4805      	ldr	r0, [pc, #20]	@ (80012ac <MX_CRC_Init+0x20>)
 8001298:	f002 fac7 	bl	800382a <HAL_CRC_Init>
 800129c:	4603      	mov	r3, r0
 800129e:	2b00      	cmp	r3, #0
 80012a0:	d001      	beq.n	80012a6 <MX_CRC_Init+0x1a>
  {
    Error_Handler();
 80012a2:	f000 fad3 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN CRC_Init 2 */

  /* USER CODE END CRC_Init 2 */

}
 80012a6:	bf00      	nop
 80012a8:	bd80      	pop	{r7, pc}
 80012aa:	bf00      	nop
 80012ac:	200003e4 	.word	0x200003e4
 80012b0:	40023000 	.word	0x40023000

080012b4 <MX_I2C2_Init>:
  * @brief I2C2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C2_Init(void)
{
 80012b4:	b580      	push	{r7, lr}
 80012b6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C2_Init 0 */

  /* USER CODE BEGIN I2C2_Init 1 */

  /* USER CODE END I2C2_Init 1 */
  hi2c2.Instance = I2C2;
 80012b8:	4b12      	ldr	r3, [pc, #72]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012ba:	4a13      	ldr	r2, [pc, #76]	@ (8001308 <MX_I2C2_Init+0x54>)
 80012bc:	601a      	str	r2, [r3, #0]
  hi2c2.Init.ClockSpeed = 100000;
 80012be:	4b11      	ldr	r3, [pc, #68]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012c0:	4a12      	ldr	r2, [pc, #72]	@ (800130c <MX_I2C2_Init+0x58>)
 80012c2:	605a      	str	r2, [r3, #4]
  hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 80012c4:	4b0f      	ldr	r3, [pc, #60]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012c6:	2200      	movs	r2, #0
 80012c8:	609a      	str	r2, [r3, #8]
  hi2c2.Init.OwnAddress1 = 0;
 80012ca:	4b0e      	ldr	r3, [pc, #56]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012cc:	2200      	movs	r2, #0
 80012ce:	60da      	str	r2, [r3, #12]
  hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 80012d0:	4b0c      	ldr	r3, [pc, #48]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012d2:	f44f 4280 	mov.w	r2, #16384	@ 0x4000
 80012d6:	611a      	str	r2, [r3, #16]
  hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 80012d8:	4b0a      	ldr	r3, [pc, #40]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012da:	2200      	movs	r2, #0
 80012dc:	615a      	str	r2, [r3, #20]
  hi2c2.Init.OwnAddress2 = 0;
 80012de:	4b09      	ldr	r3, [pc, #36]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012e0:	2200      	movs	r2, #0
 80012e2:	619a      	str	r2, [r3, #24]
  hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 80012e4:	4b07      	ldr	r3, [pc, #28]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012e6:	2200      	movs	r2, #0
 80012e8:	61da      	str	r2, [r3, #28]
  hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 80012ea:	4b06      	ldr	r3, [pc, #24]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012ec:	2200      	movs	r2, #0
 80012ee:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 80012f0:	4804      	ldr	r0, [pc, #16]	@ (8001304 <MX_I2C2_Init+0x50>)
 80012f2:	f003 f841 	bl	8004378 <HAL_I2C_Init>
 80012f6:	4603      	mov	r3, r0
 80012f8:	2b00      	cmp	r3, #0
 80012fa:	d001      	beq.n	8001300 <MX_I2C2_Init+0x4c>
  {
    Error_Handler();
 80012fc:	f000 faa6 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN I2C2_Init 2 */

  /* USER CODE END I2C2_Init 2 */

}
 8001300:	bf00      	nop
 8001302:	bd80      	pop	{r7, pc}
 8001304:	200003ec 	.word	0x200003ec
 8001308:	40005800 	.word	0x40005800
 800130c:	000186a0 	.word	0x000186a0

08001310 <MX_SPI2_Init>:
  * @brief SPI2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_SPI2_Init(void)
{
 8001310:	b580      	push	{r7, lr}
 8001312:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN SPI2_Init 1 */

  /* USER CODE END SPI2_Init 1 */
  /* SPI2 parameter configuration*/
  hspi2.Instance = SPI2;
 8001314:	4b17      	ldr	r3, [pc, #92]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001316:	4a18      	ldr	r2, [pc, #96]	@ (8001378 <MX_SPI2_Init+0x68>)
 8001318:	601a      	str	r2, [r3, #0]
  hspi2.Init.Mode = SPI_MODE_MASTER;
 800131a:	4b16      	ldr	r3, [pc, #88]	@ (8001374 <MX_SPI2_Init+0x64>)
 800131c:	f44f 7282 	mov.w	r2, #260	@ 0x104
 8001320:	605a      	str	r2, [r3, #4]
  hspi2.Init.Direction = SPI_DIRECTION_2LINES;
 8001322:	4b14      	ldr	r3, [pc, #80]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001324:	2200      	movs	r2, #0
 8001326:	609a      	str	r2, [r3, #8]
  hspi2.Init.DataSize = SPI_DATASIZE_8BIT;
 8001328:	4b12      	ldr	r3, [pc, #72]	@ (8001374 <MX_SPI2_Init+0x64>)
 800132a:	2200      	movs	r2, #0
 800132c:	60da      	str	r2, [r3, #12]
  hspi2.Init.CLKPolarity = SPI_POLARITY_LOW;
 800132e:	4b11      	ldr	r3, [pc, #68]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001330:	2200      	movs	r2, #0
 8001332:	611a      	str	r2, [r3, #16]
  hspi2.Init.CLKPhase = SPI_PHASE_1EDGE;
 8001334:	4b0f      	ldr	r3, [pc, #60]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001336:	2200      	movs	r2, #0
 8001338:	615a      	str	r2, [r3, #20]
  hspi2.Init.NSS = SPI_NSS_SOFT;
 800133a:	4b0e      	ldr	r3, [pc, #56]	@ (8001374 <MX_SPI2_Init+0x64>)
 800133c:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8001340:	619a      	str	r2, [r3, #24]
  hspi2.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8001342:	4b0c      	ldr	r3, [pc, #48]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001344:	2200      	movs	r2, #0
 8001346:	61da      	str	r2, [r3, #28]
  hspi2.Init.FirstBit = SPI_FIRSTBIT_MSB;
 8001348:	4b0a      	ldr	r3, [pc, #40]	@ (8001374 <MX_SPI2_Init+0x64>)
 800134a:	2200      	movs	r2, #0
 800134c:	621a      	str	r2, [r3, #32]
  hspi2.Init.TIMode = SPI_TIMODE_DISABLE;
 800134e:	4b09      	ldr	r3, [pc, #36]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001350:	2200      	movs	r2, #0
 8001352:	625a      	str	r2, [r3, #36]	@ 0x24
  hspi2.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8001354:	4b07      	ldr	r3, [pc, #28]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001356:	2200      	movs	r2, #0
 8001358:	629a      	str	r2, [r3, #40]	@ 0x28
  hspi2.Init.CRCPolynomial = 10;
 800135a:	4b06      	ldr	r3, [pc, #24]	@ (8001374 <MX_SPI2_Init+0x64>)
 800135c:	220a      	movs	r2, #10
 800135e:	62da      	str	r2, [r3, #44]	@ 0x2c
  if (HAL_SPI_Init(&hspi2) != HAL_OK)
 8001360:	4804      	ldr	r0, [pc, #16]	@ (8001374 <MX_SPI2_Init+0x64>)
 8001362:	f004 fe27 	bl	8005fb4 <HAL_SPI_Init>
 8001366:	4603      	mov	r3, r0
 8001368:	2b00      	cmp	r3, #0
 800136a:	d001      	beq.n	8001370 <MX_SPI2_Init+0x60>
  {
    Error_Handler();
 800136c:	f000 fa6e 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN SPI2_Init 2 */

  /* USER CODE END SPI2_Init 2 */

}
 8001370:	bf00      	nop
 8001372:	bd80      	pop	{r7, pc}
 8001374:	20000440 	.word	0x20000440
 8001378:	40003800 	.word	0x40003800

0800137c <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 800137c:	b580      	push	{r7, lr}
 800137e:	b08e      	sub	sp, #56	@ 0x38
 8001380:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8001382:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001386:	2200      	movs	r2, #0
 8001388:	601a      	str	r2, [r3, #0]
 800138a:	605a      	str	r2, [r3, #4]
 800138c:	609a      	str	r2, [r3, #8]
 800138e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001390:	f107 0320 	add.w	r3, r7, #32
 8001394:	2200      	movs	r2, #0
 8001396:	601a      	str	r2, [r3, #0]
 8001398:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800139a:	1d3b      	adds	r3, r7, #4
 800139c:	2200      	movs	r2, #0
 800139e:	601a      	str	r2, [r3, #0]
 80013a0:	605a      	str	r2, [r3, #4]
 80013a2:	609a      	str	r2, [r3, #8]
 80013a4:	60da      	str	r2, [r3, #12]
 80013a6:	611a      	str	r2, [r3, #16]
 80013a8:	615a      	str	r2, [r3, #20]
 80013aa:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 80013ac:	4b2d      	ldr	r3, [pc, #180]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013ae:	f04f 4280 	mov.w	r2, #1073741824	@ 0x40000000
 80013b2:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 59999;
 80013b4:	4b2b      	ldr	r3, [pc, #172]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013b6:	f64e 225f 	movw	r2, #59999	@ 0xea5f
 80013ba:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 80013bc:	4b29      	ldr	r3, [pc, #164]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013be:	2200      	movs	r2, #0
 80013c0:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 29999;
 80013c2:	4b28      	ldr	r3, [pc, #160]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013c4:	f247 522f 	movw	r2, #29999	@ 0x752f
 80013c8:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80013ca:	4b26      	ldr	r3, [pc, #152]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013cc:	2200      	movs	r2, #0
 80013ce:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80013d0:	4b24      	ldr	r3, [pc, #144]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013d2:	2200      	movs	r2, #0
 80013d4:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 80013d6:	4823      	ldr	r0, [pc, #140]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013d8:	f005 fe04 	bl	8006fe4 <HAL_TIM_Base_Init>
 80013dc:	4603      	mov	r3, r0
 80013de:	2b00      	cmp	r3, #0
 80013e0:	d001      	beq.n	80013e6 <MX_TIM2_Init+0x6a>
  {
    Error_Handler();
 80013e2:	f000 fa33 	bl	800184c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80013e6:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80013ea:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80013ec:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 80013f0:	4619      	mov	r1, r3
 80013f2:	481c      	ldr	r0, [pc, #112]	@ (8001464 <MX_TIM2_Init+0xe8>)
 80013f4:	f006 f98a 	bl	800770c <HAL_TIM_ConfigClockSource>
 80013f8:	4603      	mov	r3, r0
 80013fa:	2b00      	cmp	r3, #0
 80013fc:	d001      	beq.n	8001402 <MX_TIM2_Init+0x86>
  {
    Error_Handler();
 80013fe:	f000 fa25 	bl	800184c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 8001402:	4818      	ldr	r0, [pc, #96]	@ (8001464 <MX_TIM2_Init+0xe8>)
 8001404:	f005 feae 	bl	8007164 <HAL_TIM_PWM_Init>
 8001408:	4603      	mov	r3, r0
 800140a:	2b00      	cmp	r3, #0
 800140c:	d001      	beq.n	8001412 <MX_TIM2_Init+0x96>
  {
    Error_Handler();
 800140e:	f000 fa1d 	bl	800184c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001412:	2300      	movs	r3, #0
 8001414:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8001416:	2300      	movs	r3, #0
 8001418:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 800141a:	f107 0320 	add.w	r3, r7, #32
 800141e:	4619      	mov	r1, r3
 8001420:	4810      	ldr	r0, [pc, #64]	@ (8001464 <MX_TIM2_Init+0xe8>)
 8001422:	f006 fd7f 	bl	8007f24 <HAL_TIMEx_MasterConfigSynchronization>
 8001426:	4603      	mov	r3, r0
 8001428:	2b00      	cmp	r3, #0
 800142a:	d001      	beq.n	8001430 <MX_TIM2_Init+0xb4>
  {
    Error_Handler();
 800142c:	f000 fa0e 	bl	800184c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 8001430:	2360      	movs	r3, #96	@ 0x60
 8001432:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 8001434:	2300      	movs	r3, #0
 8001436:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 8001438:	2300      	movs	r3, #0
 800143a:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 800143c:	2300      	movs	r3, #0
 800143e:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8001440:	1d3b      	adds	r3, r7, #4
 8001442:	2200      	movs	r2, #0
 8001444:	4619      	mov	r1, r3
 8001446:	4807      	ldr	r0, [pc, #28]	@ (8001464 <MX_TIM2_Init+0xe8>)
 8001448:	f006 f89e 	bl	8007588 <HAL_TIM_PWM_ConfigChannel>
 800144c:	4603      	mov	r3, r0
 800144e:	2b00      	cmp	r3, #0
 8001450:	d001      	beq.n	8001456 <MX_TIM2_Init+0xda>
  {
    Error_Handler();
 8001452:	f000 f9fb 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8001456:	4803      	ldr	r0, [pc, #12]	@ (8001464 <MX_TIM2_Init+0xe8>)
 8001458:	f000 fc3e 	bl	8001cd8 <HAL_TIM_MspPostInit>

}
 800145c:	bf00      	nop
 800145e:	3738      	adds	r7, #56	@ 0x38
 8001460:	46bd      	mov	sp, r7
 8001462:	bd80      	pop	{r7, pc}
 8001464:	200004f8 	.word	0x200004f8

08001468 <MX_TIM3_Init>:
  * @brief TIM3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM3_Init(void)
{
 8001468:	b580      	push	{r7, lr}
 800146a:	b086      	sub	sp, #24
 800146c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM3_Init 0 */

  /* USER CODE END TIM3_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800146e:	f107 0308 	add.w	r3, r7, #8
 8001472:	2200      	movs	r2, #0
 8001474:	601a      	str	r2, [r3, #0]
 8001476:	605a      	str	r2, [r3, #4]
 8001478:	609a      	str	r2, [r3, #8]
 800147a:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 800147c:	463b      	mov	r3, r7
 800147e:	2200      	movs	r2, #0
 8001480:	601a      	str	r2, [r3, #0]
 8001482:	605a      	str	r2, [r3, #4]

  /* USER CODE BEGIN TIM3_Init 1 */

  /* USER CODE END TIM3_Init 1 */
  htim3.Instance = TIM3;
 8001484:	4b1d      	ldr	r3, [pc, #116]	@ (80014fc <MX_TIM3_Init+0x94>)
 8001486:	4a1e      	ldr	r2, [pc, #120]	@ (8001500 <MX_TIM3_Init+0x98>)
 8001488:	601a      	str	r2, [r3, #0]
  htim3.Init.Prescaler = 9999;
 800148a:	4b1c      	ldr	r3, [pc, #112]	@ (80014fc <MX_TIM3_Init+0x94>)
 800148c:	f242 720f 	movw	r2, #9999	@ 0x270f
 8001490:	605a      	str	r2, [r3, #4]
  htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001492:	4b1a      	ldr	r3, [pc, #104]	@ (80014fc <MX_TIM3_Init+0x94>)
 8001494:	2200      	movs	r2, #0
 8001496:	609a      	str	r2, [r3, #8]
  htim3.Init.Period = 299;
 8001498:	4b18      	ldr	r3, [pc, #96]	@ (80014fc <MX_TIM3_Init+0x94>)
 800149a:	f240 122b 	movw	r2, #299	@ 0x12b
 800149e:	60da      	str	r2, [r3, #12]
  htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 80014a0:	4b16      	ldr	r3, [pc, #88]	@ (80014fc <MX_TIM3_Init+0x94>)
 80014a2:	2200      	movs	r2, #0
 80014a4:	611a      	str	r2, [r3, #16]
  htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 80014a6:	4b15      	ldr	r3, [pc, #84]	@ (80014fc <MX_TIM3_Init+0x94>)
 80014a8:	2200      	movs	r2, #0
 80014aa:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 80014ac:	4813      	ldr	r0, [pc, #76]	@ (80014fc <MX_TIM3_Init+0x94>)
 80014ae:	f005 fd99 	bl	8006fe4 <HAL_TIM_Base_Init>
 80014b2:	4603      	mov	r3, r0
 80014b4:	2b00      	cmp	r3, #0
 80014b6:	d001      	beq.n	80014bc <MX_TIM3_Init+0x54>
  {
    Error_Handler();
 80014b8:	f000 f9c8 	bl	800184c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80014bc:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 80014c0:	60bb      	str	r3, [r7, #8]
  if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 80014c2:	f107 0308 	add.w	r3, r7, #8
 80014c6:	4619      	mov	r1, r3
 80014c8:	480c      	ldr	r0, [pc, #48]	@ (80014fc <MX_TIM3_Init+0x94>)
 80014ca:	f006 f91f 	bl	800770c <HAL_TIM_ConfigClockSource>
 80014ce:	4603      	mov	r3, r0
 80014d0:	2b00      	cmp	r3, #0
 80014d2:	d001      	beq.n	80014d8 <MX_TIM3_Init+0x70>
  {
    Error_Handler();
 80014d4:	f000 f9ba 	bl	800184c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80014d8:	2300      	movs	r3, #0
 80014da:	603b      	str	r3, [r7, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80014dc:	2300      	movs	r3, #0
 80014de:	607b      	str	r3, [r7, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 80014e0:	463b      	mov	r3, r7
 80014e2:	4619      	mov	r1, r3
 80014e4:	4805      	ldr	r0, [pc, #20]	@ (80014fc <MX_TIM3_Init+0x94>)
 80014e6:	f006 fd1d 	bl	8007f24 <HAL_TIMEx_MasterConfigSynchronization>
 80014ea:	4603      	mov	r3, r0
 80014ec:	2b00      	cmp	r3, #0
 80014ee:	d001      	beq.n	80014f4 <MX_TIM3_Init+0x8c>
  {
    Error_Handler();
 80014f0:	f000 f9ac 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN TIM3_Init 2 */

  /* USER CODE END TIM3_Init 2 */

}
 80014f4:	bf00      	nop
 80014f6:	3718      	adds	r7, #24
 80014f8:	46bd      	mov	sp, r7
 80014fa:	bd80      	pop	{r7, pc}
 80014fc:	20000540 	.word	0x20000540
 8001500:	40000400 	.word	0x40000400

08001504 <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 8001504:	b580      	push	{r7, lr}
 8001506:	b08e      	sub	sp, #56	@ 0x38
 8001508:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 800150a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800150e:	2200      	movs	r2, #0
 8001510:	601a      	str	r2, [r3, #0]
 8001512:	605a      	str	r2, [r3, #4]
 8001514:	609a      	str	r2, [r3, #8]
 8001516:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8001518:	f107 0320 	add.w	r3, r7, #32
 800151c:	2200      	movs	r2, #0
 800151e:	601a      	str	r2, [r3, #0]
 8001520:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8001522:	1d3b      	adds	r3, r7, #4
 8001524:	2200      	movs	r2, #0
 8001526:	601a      	str	r2, [r3, #0]
 8001528:	605a      	str	r2, [r3, #4]
 800152a:	609a      	str	r2, [r3, #8]
 800152c:	60da      	str	r2, [r3, #12]
 800152e:	611a      	str	r2, [r3, #16]
 8001530:	615a      	str	r2, [r3, #20]
 8001532:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 8001534:	4b2c      	ldr	r3, [pc, #176]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001536:	4a2d      	ldr	r2, [pc, #180]	@ (80015ec <MX_TIM4_Init+0xe8>)
 8001538:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 44999;
 800153a:	4b2b      	ldr	r3, [pc, #172]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 800153c:	f64a 72c7 	movw	r2, #44999	@ 0xafc7
 8001540:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 8001542:	4b29      	ldr	r3, [pc, #164]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001544:	2200      	movs	r2, #0
 8001546:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 19;
 8001548:	4b27      	ldr	r3, [pc, #156]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 800154a:	2213      	movs	r2, #19
 800154c:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800154e:	4b26      	ldr	r3, [pc, #152]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001550:	2200      	movs	r2, #0
 8001552:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8001554:	4b24      	ldr	r3, [pc, #144]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001556:	2200      	movs	r2, #0
 8001558:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 800155a:	4823      	ldr	r0, [pc, #140]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 800155c:	f005 fd42 	bl	8006fe4 <HAL_TIM_Base_Init>
 8001560:	4603      	mov	r3, r0
 8001562:	2b00      	cmp	r3, #0
 8001564:	d001      	beq.n	800156a <MX_TIM4_Init+0x66>
  {
    Error_Handler();
 8001566:	f000 f971 	bl	800184c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 800156a:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 800156e:	62bb      	str	r3, [r7, #40]	@ 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 8001570:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 8001574:	4619      	mov	r1, r3
 8001576:	481c      	ldr	r0, [pc, #112]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001578:	f006 f8c8 	bl	800770c <HAL_TIM_ConfigClockSource>
 800157c:	4603      	mov	r3, r0
 800157e:	2b00      	cmp	r3, #0
 8001580:	d001      	beq.n	8001586 <MX_TIM4_Init+0x82>
  {
    Error_Handler();
 8001582:	f000 f963 	bl	800184c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 8001586:	4818      	ldr	r0, [pc, #96]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 8001588:	f005 fdec 	bl	8007164 <HAL_TIM_PWM_Init>
 800158c:	4603      	mov	r3, r0
 800158e:	2b00      	cmp	r3, #0
 8001590:	d001      	beq.n	8001596 <MX_TIM4_Init+0x92>
  {
    Error_Handler();
 8001592:	f000 f95b 	bl	800184c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8001596:	2300      	movs	r3, #0
 8001598:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 800159a:	2300      	movs	r3, #0
 800159c:	627b      	str	r3, [r7, #36]	@ 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 800159e:	f107 0320 	add.w	r3, r7, #32
 80015a2:	4619      	mov	r1, r3
 80015a4:	4810      	ldr	r0, [pc, #64]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 80015a6:	f006 fcbd 	bl	8007f24 <HAL_TIMEx_MasterConfigSynchronization>
 80015aa:	4603      	mov	r3, r0
 80015ac:	2b00      	cmp	r3, #0
 80015ae:	d001      	beq.n	80015b4 <MX_TIM4_Init+0xb0>
  {
    Error_Handler();
 80015b0:	f000 f94c 	bl	800184c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80015b4:	2360      	movs	r3, #96	@ 0x60
 80015b6:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 0;
 80015b8:	2300      	movs	r3, #0
 80015ba:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80015bc:	2300      	movs	r3, #0
 80015be:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80015c0:	2300      	movs	r3, #0
 80015c2:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 80015c4:	1d3b      	adds	r3, r7, #4
 80015c6:	2204      	movs	r2, #4
 80015c8:	4619      	mov	r1, r3
 80015ca:	4807      	ldr	r0, [pc, #28]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 80015cc:	f005 ffdc 	bl	8007588 <HAL_TIM_PWM_ConfigChannel>
 80015d0:	4603      	mov	r3, r0
 80015d2:	2b00      	cmp	r3, #0
 80015d4:	d001      	beq.n	80015da <MX_TIM4_Init+0xd6>
  {
    Error_Handler();
 80015d6:	f000 f939 	bl	800184c <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 80015da:	4803      	ldr	r0, [pc, #12]	@ (80015e8 <MX_TIM4_Init+0xe4>)
 80015dc:	f000 fb7c 	bl	8001cd8 <HAL_TIM_MspPostInit>

}
 80015e0:	bf00      	nop
 80015e2:	3738      	adds	r7, #56	@ 0x38
 80015e4:	46bd      	mov	sp, r7
 80015e6:	bd80      	pop	{r7, pc}
 80015e8:	20000588 	.word	0x20000588
 80015ec:	40000800 	.word	0x40000800

080015f0 <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
static void MX_DMA_Init(void)
{
 80015f0:	b580      	push	{r7, lr}
 80015f2:	b082      	sub	sp, #8
 80015f4:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 80015f6:	2300      	movs	r3, #0
 80015f8:	607b      	str	r3, [r7, #4]
 80015fa:	4b17      	ldr	r3, [pc, #92]	@ (8001658 <MX_DMA_Init+0x68>)
 80015fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80015fe:	4a16      	ldr	r2, [pc, #88]	@ (8001658 <MX_DMA_Init+0x68>)
 8001600:	f443 1300 	orr.w	r3, r3, #2097152	@ 0x200000
 8001604:	6313      	str	r3, [r2, #48]	@ 0x30
 8001606:	4b14      	ldr	r3, [pc, #80]	@ (8001658 <MX_DMA_Init+0x68>)
 8001608:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800160a:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 800160e:	607b      	str	r3, [r7, #4]
 8001610:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_DMA2_CLK_ENABLE();
 8001612:	2300      	movs	r3, #0
 8001614:	603b      	str	r3, [r7, #0]
 8001616:	4b10      	ldr	r3, [pc, #64]	@ (8001658 <MX_DMA_Init+0x68>)
 8001618:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800161a:	4a0f      	ldr	r2, [pc, #60]	@ (8001658 <MX_DMA_Init+0x68>)
 800161c:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001620:	6313      	str	r3, [r2, #48]	@ 0x30
 8001622:	4b0d      	ldr	r3, [pc, #52]	@ (8001658 <MX_DMA_Init+0x68>)
 8001624:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001626:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800162a:	603b      	str	r3, [r7, #0]
 800162c:	683b      	ldr	r3, [r7, #0]

  /* DMA interrupt init */
  /* DMA1_Stream4_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream4_IRQn, 0, 0);
 800162e:	2200      	movs	r2, #0
 8001630:	2100      	movs	r1, #0
 8001632:	200f      	movs	r0, #15
 8001634:	f002 f8a7 	bl	8003786 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream4_IRQn);
 8001638:	200f      	movs	r0, #15
 800163a:	f002 f8c0 	bl	80037be <HAL_NVIC_EnableIRQ>
  /* DMA2_Stream0_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA2_Stream0_IRQn, 0, 0);
 800163e:	2200      	movs	r2, #0
 8001640:	2100      	movs	r1, #0
 8001642:	2038      	movs	r0, #56	@ 0x38
 8001644:	f002 f89f 	bl	8003786 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA2_Stream0_IRQn);
 8001648:	2038      	movs	r0, #56	@ 0x38
 800164a:	f002 f8b8 	bl	80037be <HAL_NVIC_EnableIRQ>

}
 800164e:	bf00      	nop
 8001650:	3708      	adds	r7, #8
 8001652:	46bd      	mov	sp, r7
 8001654:	bd80      	pop	{r7, pc}
 8001656:	bf00      	nop
 8001658:	40023800 	.word	0x40023800

0800165c <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 800165c:	b580      	push	{r7, lr}
 800165e:	b08a      	sub	sp, #40	@ 0x28
 8001660:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001662:	f107 0314 	add.w	r3, r7, #20
 8001666:	2200      	movs	r2, #0
 8001668:	601a      	str	r2, [r3, #0]
 800166a:	605a      	str	r2, [r3, #4]
 800166c:	609a      	str	r2, [r3, #8]
 800166e:	60da      	str	r2, [r3, #12]
 8001670:	611a      	str	r2, [r3, #16]
/* USER CODE BEGIN MX_GPIO_Init_1 */
/* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8001672:	2300      	movs	r3, #0
 8001674:	613b      	str	r3, [r7, #16]
 8001676:	4b69      	ldr	r3, [pc, #420]	@ (800181c <MX_GPIO_Init+0x1c0>)
 8001678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800167a:	4a68      	ldr	r2, [pc, #416]	@ (800181c <MX_GPIO_Init+0x1c0>)
 800167c:	f043 0304 	orr.w	r3, r3, #4
 8001680:	6313      	str	r3, [r2, #48]	@ 0x30
 8001682:	4b66      	ldr	r3, [pc, #408]	@ (800181c <MX_GPIO_Init+0x1c0>)
 8001684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001686:	f003 0304 	and.w	r3, r3, #4
 800168a:	613b      	str	r3, [r7, #16]
 800168c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800168e:	2300      	movs	r3, #0
 8001690:	60fb      	str	r3, [r7, #12]
 8001692:	4b62      	ldr	r3, [pc, #392]	@ (800181c <MX_GPIO_Init+0x1c0>)
 8001694:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001696:	4a61      	ldr	r2, [pc, #388]	@ (800181c <MX_GPIO_Init+0x1c0>)
 8001698:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 800169c:	6313      	str	r3, [r2, #48]	@ 0x30
 800169e:	4b5f      	ldr	r3, [pc, #380]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016a2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80016a6:	60fb      	str	r3, [r7, #12]
 80016a8:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80016aa:	2300      	movs	r3, #0
 80016ac:	60bb      	str	r3, [r7, #8]
 80016ae:	4b5b      	ldr	r3, [pc, #364]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016b2:	4a5a      	ldr	r2, [pc, #360]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016b4:	f043 0301 	orr.w	r3, r3, #1
 80016b8:	6313      	str	r3, [r2, #48]	@ 0x30
 80016ba:	4b58      	ldr	r3, [pc, #352]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016be:	f003 0301 	and.w	r3, r3, #1
 80016c2:	60bb      	str	r3, [r7, #8]
 80016c4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80016c6:	2300      	movs	r3, #0
 80016c8:	607b      	str	r3, [r7, #4]
 80016ca:	4b54      	ldr	r3, [pc, #336]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016ce:	4a53      	ldr	r2, [pc, #332]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016d0:	f043 0302 	orr.w	r3, r3, #2
 80016d4:	6313      	str	r3, [r2, #48]	@ 0x30
 80016d6:	4b51      	ldr	r3, [pc, #324]	@ (800181c <MX_GPIO_Init+0x1c0>)
 80016d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80016da:	f003 0302 	and.w	r3, r3, #2
 80016de:	607b      	str	r3, [r7, #4]
 80016e0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|GPIO_PIN_10, GPIO_PIN_RESET);
 80016e2:	2200      	movs	r2, #0
 80016e4:	f44f 619c 	mov.w	r1, #1248	@ 0x4e0
 80016e8:	484d      	ldr	r0, [pc, #308]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 80016ea:	f002 fdf9 	bl	80042e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_6, GPIO_PIN_RESET);
 80016ee:	2200      	movs	r2, #0
 80016f0:	2140      	movs	r1, #64	@ 0x40
 80016f2:	484c      	ldr	r0, [pc, #304]	@ (8001824 <MX_GPIO_Init+0x1c8>)
 80016f4:	f002 fdf4 	bl	80042e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET);
 80016f8:	2201      	movs	r2, #1
 80016fa:	2180      	movs	r1, #128	@ 0x80
 80016fc:	4849      	ldr	r0, [pc, #292]	@ (8001824 <MX_GPIO_Init+0x1c8>)
 80016fe:	f002 fdef 	bl	80042e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);
 8001702:	2201      	movs	r2, #1
 8001704:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8001708:	4845      	ldr	r0, [pc, #276]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 800170a:	f002 fde9 	bl	80042e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, DISPL_RST_Pin|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 800170e:	2200      	movs	r2, #0
 8001710:	f44f 7150 	mov.w	r1, #832	@ 0x340
 8001714:	4844      	ldr	r0, [pc, #272]	@ (8001828 <MX_GPIO_Init+0x1cc>)
 8001716:	f002 fde3 	bl	80042e0 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 800171a:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 800171e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001720:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 8001724:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001726:	2300      	movs	r3, #0
 8001728:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 800172a:	f107 0314 	add.w	r3, r7, #20
 800172e:	4619      	mov	r1, r3
 8001730:	483c      	ldr	r0, [pc, #240]	@ (8001824 <MX_GPIO_Init+0x1c8>)
 8001732:	f002 fc29 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pins : USART_TX_Pin USART_RX_Pin */
  GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 8001736:	230c      	movs	r3, #12
 8001738:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 800173a:	2302      	movs	r3, #2
 800173c:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800173e:	2300      	movs	r3, #0
 8001740:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001742:	2303      	movs	r3, #3
 8001744:	623b      	str	r3, [r7, #32]
  GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8001746:	2307      	movs	r3, #7
 8001748:	627b      	str	r3, [r7, #36]	@ 0x24
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800174a:	f107 0314 	add.w	r3, r7, #20
 800174e:	4619      	mov	r1, r3
 8001750:	4833      	ldr	r0, [pc, #204]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 8001752:	f002 fc19 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD2_Pin DISPL_LED_Pin DISPL_DC_Pin TOUCH_CS_Pin */
  GPIO_InitStruct.Pin = LD2_Pin|DISPL_LED_Pin|DISPL_DC_Pin|TOUCH_CS_Pin;
 8001756:	f44f 7338 	mov.w	r3, #736	@ 0x2e0
 800175a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800175c:	2301      	movs	r3, #1
 800175e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001760:	2300      	movs	r3, #0
 8001762:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001764:	2300      	movs	r3, #0
 8001766:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001768:	f107 0314 	add.w	r3, r7, #20
 800176c:	4619      	mov	r1, r3
 800176e:	482c      	ldr	r0, [pc, #176]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 8001770:	f002 fc0a 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PC6 DISPL_CS_Pin */
  GPIO_InitStruct.Pin = GPIO_PIN_6|DISPL_CS_Pin;
 8001774:	23c0      	movs	r3, #192	@ 0xc0
 8001776:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8001778:	2301      	movs	r3, #1
 800177a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800177c:	2300      	movs	r3, #0
 800177e:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001780:	2300      	movs	r3, #0
 8001782:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001784:	f107 0314 	add.w	r3, r7, #20
 8001788:	4619      	mov	r1, r3
 800178a:	4826      	ldr	r0, [pc, #152]	@ (8001824 <MX_GPIO_Init+0x1c8>)
 800178c:	f002 fbfc 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pin : TOUCH_INT_Pin */
  GPIO_InitStruct.Pin = TOUCH_INT_Pin;
 8001790:	f44f 7380 	mov.w	r3, #256	@ 0x100
 8001794:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8001796:	f44f 1304 	mov.w	r3, #2162688	@ 0x210000
 800179a:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 800179c:	2301      	movs	r3, #1
 800179e:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(TOUCH_INT_GPIO_Port, &GPIO_InitStruct);
 80017a0:	f107 0314 	add.w	r3, r7, #20
 80017a4:	4619      	mov	r1, r3
 80017a6:	481e      	ldr	r0, [pc, #120]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 80017a8:	f002 fbee 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 80017ac:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80017b0:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017b2:	2301      	movs	r3, #1
 80017b4:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017b6:	2300      	movs	r3, #0
 80017b8:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 80017ba:	2302      	movs	r3, #2
 80017bc:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80017be:	f107 0314 	add.w	r3, r7, #20
 80017c2:	4619      	mov	r1, r3
 80017c4:	4816      	ldr	r0, [pc, #88]	@ (8001820 <MX_GPIO_Init+0x1c4>)
 80017c6:	f002 fbdf 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pin : DISPL_RST_Pin */
  GPIO_InitStruct.Pin = DISPL_RST_Pin;
 80017ca:	2340      	movs	r3, #64	@ 0x40
 80017cc:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017ce:	2301      	movs	r3, #1
 80017d0:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017d2:	2300      	movs	r3, #0
 80017d4:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80017d6:	2300      	movs	r3, #0
 80017d8:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(DISPL_RST_GPIO_Port, &GPIO_InitStruct);
 80017da:	f107 0314 	add.w	r3, r7, #20
 80017de:	4619      	mov	r1, r3
 80017e0:	4811      	ldr	r0, [pc, #68]	@ (8001828 <MX_GPIO_Init+0x1cc>)
 80017e2:	f002 fbd1 	bl	8003f88 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB8 PB9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 80017e6:	f44f 7340 	mov.w	r3, #768	@ 0x300
 80017ea:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80017ec:	2301      	movs	r3, #1
 80017ee:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80017f0:	2300      	movs	r3, #0
 80017f2:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80017f4:	2303      	movs	r3, #3
 80017f6:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 80017f8:	f107 0314 	add.w	r3, r7, #20
 80017fc:	4619      	mov	r1, r3
 80017fe:	480a      	ldr	r0, [pc, #40]	@ (8001828 <MX_GPIO_Init+0x1cc>)
 8001800:	f002 fbc2 	bl	8003f88 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI9_5_IRQn, 0, 0);
 8001804:	2200      	movs	r2, #0
 8001806:	2100      	movs	r1, #0
 8001808:	2017      	movs	r0, #23
 800180a:	f001 ffbc 	bl	8003786 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI9_5_IRQn);
 800180e:	2017      	movs	r0, #23
 8001810:	f001 ffd5 	bl	80037be <HAL_NVIC_EnableIRQ>

/* USER CODE BEGIN MX_GPIO_Init_2 */
/* USER CODE END MX_GPIO_Init_2 */
}
 8001814:	bf00      	nop
 8001816:	3728      	adds	r7, #40	@ 0x28
 8001818:	46bd      	mov	sp, r7
 800181a:	bd80      	pop	{r7, pc}
 800181c:	40023800 	.word	0x40023800
 8001820:	40020000 	.word	0x40020000
 8001824:	40020800 	.word	0x40020800
 8001828:	40020400 	.word	0x40020400

0800182c <HAL_TIM_PeriodElapsedCallback>:

/* USER CODE BEGIN 4 */
	void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
	{
 800182c:	b580      	push	{r7, lr}
 800182e:	b082      	sub	sp, #8
 8001830:	af00      	add	r7, sp, #0
 8001832:	6078      	str	r0, [r7, #4]
	  // Check which version of the timer triggered this callback and toggle LED
		if (htim==&TGFX_T){
 8001834:	687b      	ldr	r3, [r7, #4]
 8001836:	4a04      	ldr	r2, [pc, #16]	@ (8001848 <HAL_TIM_PeriodElapsedCallback+0x1c>)
 8001838:	4293      	cmp	r3, r2
 800183a:	d101      	bne.n	8001840 <HAL_TIM_PeriodElapsedCallback+0x14>
			  //Displ_Init(Displ_Orientat_0);			// initialize display controller - set orientation parameter as per TouchGFX setup
			  touchgfxSignalVSync();
 800183c:	f00e fd6a 	bl	8010314 <touchgfxSignalVSync>
		}
	}
 8001840:	bf00      	nop
 8001842:	3708      	adds	r7, #8
 8001844:	46bd      	mov	sp, r7
 8001846:	bd80      	pop	{r7, pc}
 8001848:	20000540 	.word	0x20000540

0800184c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 800184c:	b480      	push	{r7}
 800184e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8001850:	b672      	cpsid	i
}
 8001852:	bf00      	nop
  /* USER CODE BEGIN Error_Handler_Debug */
	  /* User can add his own implementation to report the HAL error return state */
	  __disable_irq();
	  while (1)
 8001854:	bf00      	nop
 8001856:	e7fd      	b.n	8001854 <Error_Handler+0x8>

08001858 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8001858:	b480      	push	{r7}
 800185a:	b083      	sub	sp, #12
 800185c:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 800185e:	2300      	movs	r3, #0
 8001860:	607b      	str	r3, [r7, #4]
 8001862:	4b10      	ldr	r3, [pc, #64]	@ (80018a4 <HAL_MspInit+0x4c>)
 8001864:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001866:	4a0f      	ldr	r2, [pc, #60]	@ (80018a4 <HAL_MspInit+0x4c>)
 8001868:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800186c:	6453      	str	r3, [r2, #68]	@ 0x44
 800186e:	4b0d      	ldr	r3, [pc, #52]	@ (80018a4 <HAL_MspInit+0x4c>)
 8001870:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8001872:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001876:	607b      	str	r3, [r7, #4]
 8001878:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 800187a:	2300      	movs	r3, #0
 800187c:	603b      	str	r3, [r7, #0]
 800187e:	4b09      	ldr	r3, [pc, #36]	@ (80018a4 <HAL_MspInit+0x4c>)
 8001880:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001882:	4a08      	ldr	r2, [pc, #32]	@ (80018a4 <HAL_MspInit+0x4c>)
 8001884:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8001888:	6413      	str	r3, [r2, #64]	@ 0x40
 800188a:	4b06      	ldr	r3, [pc, #24]	@ (80018a4 <HAL_MspInit+0x4c>)
 800188c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800188e:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8001892:	603b      	str	r3, [r7, #0]
 8001894:	683b      	ldr	r3, [r7, #0]
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8001896:	bf00      	nop
 8001898:	370c      	adds	r7, #12
 800189a:	46bd      	mov	sp, r7
 800189c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80018a0:	4770      	bx	lr
 80018a2:	bf00      	nop
 80018a4:	40023800 	.word	0x40023800

080018a8 <HAL_ADC_MspInit>:
* This function configures the hardware resources used in this example
* @param hadc: ADC handle pointer
* @retval None
*/
void HAL_ADC_MspInit(ADC_HandleTypeDef* hadc)
{
 80018a8:	b580      	push	{r7, lr}
 80018aa:	b08a      	sub	sp, #40	@ 0x28
 80018ac:	af00      	add	r7, sp, #0
 80018ae:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80018b0:	f107 0314 	add.w	r3, r7, #20
 80018b4:	2200      	movs	r2, #0
 80018b6:	601a      	str	r2, [r3, #0]
 80018b8:	605a      	str	r2, [r3, #4]
 80018ba:	609a      	str	r2, [r3, #8]
 80018bc:	60da      	str	r2, [r3, #12]
 80018be:	611a      	str	r2, [r3, #16]
  if(hadc->Instance==ADC1)
 80018c0:	687b      	ldr	r3, [r7, #4]
 80018c2:	681b      	ldr	r3, [r3, #0]
 80018c4:	4a33      	ldr	r2, [pc, #204]	@ (8001994 <HAL_ADC_MspInit+0xec>)
 80018c6:	4293      	cmp	r3, r2
 80018c8:	d15f      	bne.n	800198a <HAL_ADC_MspInit+0xe2>
  {
  /* USER CODE BEGIN ADC1_MspInit 0 */

  /* USER CODE END ADC1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_ADC1_CLK_ENABLE();
 80018ca:	2300      	movs	r3, #0
 80018cc:	613b      	str	r3, [r7, #16]
 80018ce:	4b32      	ldr	r3, [pc, #200]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018d0:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018d2:	4a31      	ldr	r2, [pc, #196]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018d4:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80018d8:	6453      	str	r3, [r2, #68]	@ 0x44
 80018da:	4b2f      	ldr	r3, [pc, #188]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018dc:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80018de:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 80018e2:	613b      	str	r3, [r7, #16]
 80018e4:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 80018e6:	2300      	movs	r3, #0
 80018e8:	60fb      	str	r3, [r7, #12]
 80018ea:	4b2b      	ldr	r3, [pc, #172]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018ec:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018ee:	4a2a      	ldr	r2, [pc, #168]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018f0:	f043 0304 	orr.w	r3, r3, #4
 80018f4:	6313      	str	r3, [r2, #48]	@ 0x30
 80018f6:	4b28      	ldr	r3, [pc, #160]	@ (8001998 <HAL_ADC_MspInit+0xf0>)
 80018f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80018fa:	f003 0304 	and.w	r3, r3, #4
 80018fe:	60fb      	str	r3, [r7, #12]
 8001900:	68fb      	ldr	r3, [r7, #12]
    /**ADC1 GPIO Configuration
    PC0     ------> ADC1_IN10
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001902:	2301      	movs	r3, #1
 8001904:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_ANALOG;
 8001906:	2303      	movs	r3, #3
 8001908:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800190a:	2300      	movs	r3, #0
 800190c:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800190e:	f107 0314 	add.w	r3, r7, #20
 8001912:	4619      	mov	r1, r3
 8001914:	4821      	ldr	r0, [pc, #132]	@ (800199c <HAL_ADC_MspInit+0xf4>)
 8001916:	f002 fb37 	bl	8003f88 <HAL_GPIO_Init>

    /* ADC1 DMA Init */
    /* ADC1 Init */
    hdma_adc1.Instance = DMA2_Stream0;
 800191a:	4b21      	ldr	r3, [pc, #132]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 800191c:	4a21      	ldr	r2, [pc, #132]	@ (80019a4 <HAL_ADC_MspInit+0xfc>)
 800191e:	601a      	str	r2, [r3, #0]
    hdma_adc1.Init.Channel = DMA_CHANNEL_0;
 8001920:	4b1f      	ldr	r3, [pc, #124]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001922:	2200      	movs	r2, #0
 8001924:	605a      	str	r2, [r3, #4]
    hdma_adc1.Init.Direction = DMA_PERIPH_TO_MEMORY;
 8001926:	4b1e      	ldr	r3, [pc, #120]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001928:	2200      	movs	r2, #0
 800192a:	609a      	str	r2, [r3, #8]
    hdma_adc1.Init.PeriphInc = DMA_PINC_DISABLE;
 800192c:	4b1c      	ldr	r3, [pc, #112]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 800192e:	2200      	movs	r2, #0
 8001930:	60da      	str	r2, [r3, #12]
    hdma_adc1.Init.MemInc = DMA_MINC_ENABLE;
 8001932:	4b1b      	ldr	r3, [pc, #108]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001934:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001938:	611a      	str	r2, [r3, #16]
    hdma_adc1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 800193a:	4b19      	ldr	r3, [pc, #100]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 800193c:	f44f 6200 	mov.w	r2, #2048	@ 0x800
 8001940:	615a      	str	r2, [r3, #20]
    hdma_adc1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 8001942:	4b17      	ldr	r3, [pc, #92]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001944:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001948:	619a      	str	r2, [r3, #24]
    hdma_adc1.Init.Mode = DMA_CIRCULAR;
 800194a:	4b15      	ldr	r3, [pc, #84]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 800194c:	f44f 7280 	mov.w	r2, #256	@ 0x100
 8001950:	61da      	str	r2, [r3, #28]
    hdma_adc1.Init.Priority = DMA_PRIORITY_LOW;
 8001952:	4b13      	ldr	r3, [pc, #76]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001954:	2200      	movs	r2, #0
 8001956:	621a      	str	r2, [r3, #32]
    hdma_adc1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001958:	4b11      	ldr	r3, [pc, #68]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 800195a:	2200      	movs	r2, #0
 800195c:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_adc1) != HAL_OK)
 800195e:	4810      	ldr	r0, [pc, #64]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001960:	f001 ff80 	bl	8003864 <HAL_DMA_Init>
 8001964:	4603      	mov	r3, r0
 8001966:	2b00      	cmp	r3, #0
 8001968:	d001      	beq.n	800196e <HAL_ADC_MspInit+0xc6>
    {
      Error_Handler();
 800196a:	f7ff ff6f 	bl	800184c <Error_Handler>
    }

    __HAL_LINKDMA(hadc,DMA_Handle,hdma_adc1);
 800196e:	687b      	ldr	r3, [r7, #4]
 8001970:	4a0b      	ldr	r2, [pc, #44]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001972:	639a      	str	r2, [r3, #56]	@ 0x38
 8001974:	4a0a      	ldr	r2, [pc, #40]	@ (80019a0 <HAL_ADC_MspInit+0xf8>)
 8001976:	687b      	ldr	r3, [r7, #4]
 8001978:	6393      	str	r3, [r2, #56]	@ 0x38

    /* ADC1 interrupt Init */
    HAL_NVIC_SetPriority(ADC_IRQn, 0, 0);
 800197a:	2200      	movs	r2, #0
 800197c:	2100      	movs	r1, #0
 800197e:	2012      	movs	r0, #18
 8001980:	f001 ff01 	bl	8003786 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(ADC_IRQn);
 8001984:	2012      	movs	r0, #18
 8001986:	f001 ff1a 	bl	80037be <HAL_NVIC_EnableIRQ>

  /* USER CODE END ADC1_MspInit 1 */

  }

}
 800198a:	bf00      	nop
 800198c:	3728      	adds	r7, #40	@ 0x28
 800198e:	46bd      	mov	sp, r7
 8001990:	bd80      	pop	{r7, pc}
 8001992:	bf00      	nop
 8001994:	40012000 	.word	0x40012000
 8001998:	40023800 	.word	0x40023800
 800199c:	40020800 	.word	0x40020800
 80019a0:	20000384 	.word	0x20000384
 80019a4:	40026410 	.word	0x40026410

080019a8 <HAL_CRC_MspInit>:
* This function configures the hardware resources used in this example
* @param hcrc: CRC handle pointer
* @retval None
*/
void HAL_CRC_MspInit(CRC_HandleTypeDef* hcrc)
{
 80019a8:	b480      	push	{r7}
 80019aa:	b085      	sub	sp, #20
 80019ac:	af00      	add	r7, sp, #0
 80019ae:	6078      	str	r0, [r7, #4]
  if(hcrc->Instance==CRC)
 80019b0:	687b      	ldr	r3, [r7, #4]
 80019b2:	681b      	ldr	r3, [r3, #0]
 80019b4:	4a0b      	ldr	r2, [pc, #44]	@ (80019e4 <HAL_CRC_MspInit+0x3c>)
 80019b6:	4293      	cmp	r3, r2
 80019b8:	d10d      	bne.n	80019d6 <HAL_CRC_MspInit+0x2e>
  {
  /* USER CODE BEGIN CRC_MspInit 0 */

  /* USER CODE END CRC_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_CRC_CLK_ENABLE();
 80019ba:	2300      	movs	r3, #0
 80019bc:	60fb      	str	r3, [r7, #12]
 80019be:	4b0a      	ldr	r3, [pc, #40]	@ (80019e8 <HAL_CRC_MspInit+0x40>)
 80019c0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019c2:	4a09      	ldr	r2, [pc, #36]	@ (80019e8 <HAL_CRC_MspInit+0x40>)
 80019c4:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80019c8:	6313      	str	r3, [r2, #48]	@ 0x30
 80019ca:	4b07      	ldr	r3, [pc, #28]	@ (80019e8 <HAL_CRC_MspInit+0x40>)
 80019cc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80019ce:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80019d2:	60fb      	str	r3, [r7, #12]
 80019d4:	68fb      	ldr	r3, [r7, #12]

  /* USER CODE END CRC_MspInit 1 */

  }

}
 80019d6:	bf00      	nop
 80019d8:	3714      	adds	r7, #20
 80019da:	46bd      	mov	sp, r7
 80019dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80019e0:	4770      	bx	lr
 80019e2:	bf00      	nop
 80019e4:	40023000 	.word	0x40023000
 80019e8:	40023800 	.word	0x40023800

080019ec <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 80019ec:	b580      	push	{r7, lr}
 80019ee:	b08a      	sub	sp, #40	@ 0x28
 80019f0:	af00      	add	r7, sp, #0
 80019f2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80019f4:	f107 0314 	add.w	r3, r7, #20
 80019f8:	2200      	movs	r2, #0
 80019fa:	601a      	str	r2, [r3, #0]
 80019fc:	605a      	str	r2, [r3, #4]
 80019fe:	609a      	str	r2, [r3, #8]
 8001a00:	60da      	str	r2, [r3, #12]
 8001a02:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C2)
 8001a04:	687b      	ldr	r3, [r7, #4]
 8001a06:	681b      	ldr	r3, [r3, #0]
 8001a08:	4a29      	ldr	r2, [pc, #164]	@ (8001ab0 <HAL_I2C_MspInit+0xc4>)
 8001a0a:	4293      	cmp	r3, r2
 8001a0c:	d14b      	bne.n	8001aa6 <HAL_I2C_MspInit+0xba>
  {
  /* USER CODE BEGIN I2C2_MspInit 0 */

  /* USER CODE END I2C2_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001a0e:	2300      	movs	r3, #0
 8001a10:	613b      	str	r3, [r7, #16]
 8001a12:	4b28      	ldr	r3, [pc, #160]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a14:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a16:	4a27      	ldr	r2, [pc, #156]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a18:	f043 0302 	orr.w	r3, r3, #2
 8001a1c:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a1e:	4b25      	ldr	r3, [pc, #148]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a20:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a22:	f003 0302 	and.w	r3, r3, #2
 8001a26:	613b      	str	r3, [r7, #16]
 8001a28:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001a2a:	2300      	movs	r3, #0
 8001a2c:	60fb      	str	r3, [r7, #12]
 8001a2e:	4b21      	ldr	r3, [pc, #132]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a30:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a32:	4a20      	ldr	r2, [pc, #128]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a34:	f043 0304 	orr.w	r3, r3, #4
 8001a38:	6313      	str	r3, [r2, #48]	@ 0x30
 8001a3a:	4b1e      	ldr	r3, [pc, #120]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a3c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001a3e:	f003 0304 	and.w	r3, r3, #4
 8001a42:	60fb      	str	r3, [r7, #12]
 8001a44:	68fb      	ldr	r3, [r7, #12]
    /**I2C2 GPIO Configuration
    PB10     ------> I2C2_SCL
    PC12     ------> I2C2_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_10;
 8001a46:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8001a4a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a4c:	2312      	movs	r3, #18
 8001a4e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a50:	2301      	movs	r3, #1
 8001a52:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a54:	2303      	movs	r3, #3
 8001a56:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a58:	2304      	movs	r3, #4
 8001a5a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001a5c:	f107 0314 	add.w	r3, r7, #20
 8001a60:	4619      	mov	r1, r3
 8001a62:	4815      	ldr	r0, [pc, #84]	@ (8001ab8 <HAL_I2C_MspInit+0xcc>)
 8001a64:	f002 fa90 	bl	8003f88 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = GPIO_PIN_12;
 8001a68:	f44f 5380 	mov.w	r3, #4096	@ 0x1000
 8001a6c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8001a6e:	2312      	movs	r3, #18
 8001a70:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8001a72:	2301      	movs	r3, #1
 8001a74:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001a76:	2303      	movs	r3, #3
 8001a78:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C2;
 8001a7a:	2304      	movs	r3, #4
 8001a7c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8001a7e:	f107 0314 	add.w	r3, r7, #20
 8001a82:	4619      	mov	r1, r3
 8001a84:	480d      	ldr	r0, [pc, #52]	@ (8001abc <HAL_I2C_MspInit+0xd0>)
 8001a86:	f002 fa7f 	bl	8003f88 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C2_CLK_ENABLE();
 8001a8a:	2300      	movs	r3, #0
 8001a8c:	60bb      	str	r3, [r7, #8]
 8001a8e:	4b09      	ldr	r3, [pc, #36]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a92:	4a08      	ldr	r2, [pc, #32]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a94:	f443 0380 	orr.w	r3, r3, #4194304	@ 0x400000
 8001a98:	6413      	str	r3, [r2, #64]	@ 0x40
 8001a9a:	4b06      	ldr	r3, [pc, #24]	@ (8001ab4 <HAL_I2C_MspInit+0xc8>)
 8001a9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001a9e:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8001aa2:	60bb      	str	r3, [r7, #8]
 8001aa4:	68bb      	ldr	r3, [r7, #8]

  /* USER CODE END I2C2_MspInit 1 */

  }

}
 8001aa6:	bf00      	nop
 8001aa8:	3728      	adds	r7, #40	@ 0x28
 8001aaa:	46bd      	mov	sp, r7
 8001aac:	bd80      	pop	{r7, pc}
 8001aae:	bf00      	nop
 8001ab0:	40005800 	.word	0x40005800
 8001ab4:	40023800 	.word	0x40023800
 8001ab8:	40020400 	.word	0x40020400
 8001abc:	40020800 	.word	0x40020800

08001ac0 <HAL_SPI_MspInit>:
* This function configures the hardware resources used in this example
* @param hspi: SPI handle pointer
* @retval None
*/
void HAL_SPI_MspInit(SPI_HandleTypeDef* hspi)
{
 8001ac0:	b580      	push	{r7, lr}
 8001ac2:	b08a      	sub	sp, #40	@ 0x28
 8001ac4:	af00      	add	r7, sp, #0
 8001ac6:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ac8:	f107 0314 	add.w	r3, r7, #20
 8001acc:	2200      	movs	r2, #0
 8001ace:	601a      	str	r2, [r3, #0]
 8001ad0:	605a      	str	r2, [r3, #4]
 8001ad2:	609a      	str	r2, [r3, #8]
 8001ad4:	60da      	str	r2, [r3, #12]
 8001ad6:	611a      	str	r2, [r3, #16]
  if(hspi->Instance==SPI2)
 8001ad8:	687b      	ldr	r3, [r7, #4]
 8001ada:	681b      	ldr	r3, [r3, #0]
 8001adc:	4a4b      	ldr	r2, [pc, #300]	@ (8001c0c <HAL_SPI_MspInit+0x14c>)
 8001ade:	4293      	cmp	r3, r2
 8001ae0:	f040 8090 	bne.w	8001c04 <HAL_SPI_MspInit+0x144>
  {
  /* USER CODE BEGIN SPI2_MspInit 0 */

  /* USER CODE END SPI2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_SPI2_CLK_ENABLE();
 8001ae4:	2300      	movs	r3, #0
 8001ae6:	613b      	str	r3, [r7, #16]
 8001ae8:	4b49      	ldr	r3, [pc, #292]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001aea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001aec:	4a48      	ldr	r2, [pc, #288]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001aee:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 8001af2:	6413      	str	r3, [r2, #64]	@ 0x40
 8001af4:	4b46      	ldr	r3, [pc, #280]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001af6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001af8:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8001afc:	613b      	str	r3, [r7, #16]
 8001afe:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOC_CLK_ENABLE();
 8001b00:	2300      	movs	r3, #0
 8001b02:	60fb      	str	r3, [r7, #12]
 8001b04:	4b42      	ldr	r3, [pc, #264]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b06:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b08:	4a41      	ldr	r2, [pc, #260]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b0a:	f043 0304 	orr.w	r3, r3, #4
 8001b0e:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b10:	4b3f      	ldr	r3, [pc, #252]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b12:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b14:	f003 0304 	and.w	r3, r3, #4
 8001b18:	60fb      	str	r3, [r7, #12]
 8001b1a:	68fb      	ldr	r3, [r7, #12]
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001b1c:	2300      	movs	r3, #0
 8001b1e:	60bb      	str	r3, [r7, #8]
 8001b20:	4b3b      	ldr	r3, [pc, #236]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b22:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b24:	4a3a      	ldr	r2, [pc, #232]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b26:	f043 0302 	orr.w	r3, r3, #2
 8001b2a:	6313      	str	r3, [r2, #48]	@ 0x30
 8001b2c:	4b38      	ldr	r3, [pc, #224]	@ (8001c10 <HAL_SPI_MspInit+0x150>)
 8001b2e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001b30:	f003 0302 	and.w	r3, r3, #2
 8001b34:	60bb      	str	r3, [r7, #8]
 8001b36:	68bb      	ldr	r3, [r7, #8]
    /**SPI2 GPIO Configuration
    PC1     ------> SPI2_MOSI
    PC2     ------> SPI2_MISO
    PB13     ------> SPI2_SCK
    */
    GPIO_InitStruct.Pin = DISPL_MOSI_Pin;
 8001b38:	2302      	movs	r3, #2
 8001b3a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b3c:	2302      	movs	r3, #2
 8001b3e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b40:	2300      	movs	r3, #0
 8001b42:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b44:	2303      	movs	r3, #3
 8001b46:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_SPI2;
 8001b48:	2307      	movs	r3, #7
 8001b4a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_MOSI_GPIO_Port, &GPIO_InitStruct);
 8001b4c:	f107 0314 	add.w	r3, r7, #20
 8001b50:	4619      	mov	r1, r3
 8001b52:	4830      	ldr	r0, [pc, #192]	@ (8001c14 <HAL_SPI_MspInit+0x154>)
 8001b54:	f002 fa18 	bl	8003f88 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = TOUCH_MISO_Pin;
 8001b58:	2304      	movs	r3, #4
 8001b5a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b5c:	2302      	movs	r3, #2
 8001b5e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b60:	2300      	movs	r3, #0
 8001b62:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b64:	2303      	movs	r3, #3
 8001b66:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b68:	2305      	movs	r3, #5
 8001b6a:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(TOUCH_MISO_GPIO_Port, &GPIO_InitStruct);
 8001b6c:	f107 0314 	add.w	r3, r7, #20
 8001b70:	4619      	mov	r1, r3
 8001b72:	4828      	ldr	r0, [pc, #160]	@ (8001c14 <HAL_SPI_MspInit+0x154>)
 8001b74:	f002 fa08 	bl	8003f88 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = DISPL_SCK_Pin;
 8001b78:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8001b7c:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001b7e:	2302      	movs	r3, #2
 8001b80:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001b82:	2300      	movs	r3, #0
 8001b84:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8001b86:	2303      	movs	r3, #3
 8001b88:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 8001b8a:	2305      	movs	r3, #5
 8001b8c:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(DISPL_SCK_GPIO_Port, &GPIO_InitStruct);
 8001b8e:	f107 0314 	add.w	r3, r7, #20
 8001b92:	4619      	mov	r1, r3
 8001b94:	4820      	ldr	r0, [pc, #128]	@ (8001c18 <HAL_SPI_MspInit+0x158>)
 8001b96:	f002 f9f7 	bl	8003f88 <HAL_GPIO_Init>

    /* SPI2 DMA Init */
    /* SPI2_TX Init */
    hdma_spi2_tx.Instance = DMA1_Stream4;
 8001b9a:	4b20      	ldr	r3, [pc, #128]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001b9c:	4a20      	ldr	r2, [pc, #128]	@ (8001c20 <HAL_SPI_MspInit+0x160>)
 8001b9e:	601a      	str	r2, [r3, #0]
    hdma_spi2_tx.Init.Channel = DMA_CHANNEL_0;
 8001ba0:	4b1e      	ldr	r3, [pc, #120]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001ba2:	2200      	movs	r2, #0
 8001ba4:	605a      	str	r2, [r3, #4]
    hdma_spi2_tx.Init.Direction = DMA_MEMORY_TO_PERIPH;
 8001ba6:	4b1d      	ldr	r3, [pc, #116]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001ba8:	2240      	movs	r2, #64	@ 0x40
 8001baa:	609a      	str	r2, [r3, #8]
    hdma_spi2_tx.Init.PeriphInc = DMA_PINC_DISABLE;
 8001bac:	4b1b      	ldr	r3, [pc, #108]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bae:	2200      	movs	r2, #0
 8001bb0:	60da      	str	r2, [r3, #12]
    hdma_spi2_tx.Init.MemInc = DMA_MINC_ENABLE;
 8001bb2:	4b1a      	ldr	r3, [pc, #104]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bb4:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 8001bb8:	611a      	str	r2, [r3, #16]
    hdma_spi2_tx.Init.PeriphDataAlignment = DMA_PDATAALIGN_BYTE;
 8001bba:	4b18      	ldr	r3, [pc, #96]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bbc:	2200      	movs	r2, #0
 8001bbe:	615a      	str	r2, [r3, #20]
    hdma_spi2_tx.Init.MemDataAlignment = DMA_MDATAALIGN_BYTE;
 8001bc0:	4b16      	ldr	r3, [pc, #88]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bc2:	2200      	movs	r2, #0
 8001bc4:	619a      	str	r2, [r3, #24]
    hdma_spi2_tx.Init.Mode = DMA_NORMAL;
 8001bc6:	4b15      	ldr	r3, [pc, #84]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bc8:	2200      	movs	r2, #0
 8001bca:	61da      	str	r2, [r3, #28]
    hdma_spi2_tx.Init.Priority = DMA_PRIORITY_LOW;
 8001bcc:	4b13      	ldr	r3, [pc, #76]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bce:	2200      	movs	r2, #0
 8001bd0:	621a      	str	r2, [r3, #32]
    hdma_spi2_tx.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 8001bd2:	4b12      	ldr	r3, [pc, #72]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bd4:	2200      	movs	r2, #0
 8001bd6:	625a      	str	r2, [r3, #36]	@ 0x24
    if (HAL_DMA_Init(&hdma_spi2_tx) != HAL_OK)
 8001bd8:	4810      	ldr	r0, [pc, #64]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bda:	f001 fe43 	bl	8003864 <HAL_DMA_Init>
 8001bde:	4603      	mov	r3, r0
 8001be0:	2b00      	cmp	r3, #0
 8001be2:	d001      	beq.n	8001be8 <HAL_SPI_MspInit+0x128>
    {
      Error_Handler();
 8001be4:	f7ff fe32 	bl	800184c <Error_Handler>
    }

    __HAL_LINKDMA(hspi,hdmatx,hdma_spi2_tx);
 8001be8:	687b      	ldr	r3, [r7, #4]
 8001bea:	4a0c      	ldr	r2, [pc, #48]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bec:	649a      	str	r2, [r3, #72]	@ 0x48
 8001bee:	4a0b      	ldr	r2, [pc, #44]	@ (8001c1c <HAL_SPI_MspInit+0x15c>)
 8001bf0:	687b      	ldr	r3, [r7, #4]
 8001bf2:	6393      	str	r3, [r2, #56]	@ 0x38

    /* SPI2 interrupt Init */
    HAL_NVIC_SetPriority(SPI2_IRQn, 0, 0);
 8001bf4:	2200      	movs	r2, #0
 8001bf6:	2100      	movs	r1, #0
 8001bf8:	2024      	movs	r0, #36	@ 0x24
 8001bfa:	f001 fdc4 	bl	8003786 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(SPI2_IRQn);
 8001bfe:	2024      	movs	r0, #36	@ 0x24
 8001c00:	f001 fddd 	bl	80037be <HAL_NVIC_EnableIRQ>

  /* USER CODE END SPI2_MspInit 1 */

  }

}
 8001c04:	bf00      	nop
 8001c06:	3728      	adds	r7, #40	@ 0x28
 8001c08:	46bd      	mov	sp, r7
 8001c0a:	bd80      	pop	{r7, pc}
 8001c0c:	40003800 	.word	0x40003800
 8001c10:	40023800 	.word	0x40023800
 8001c14:	40020800 	.word	0x40020800
 8001c18:	40020400 	.word	0x40020400
 8001c1c:	20000498 	.word	0x20000498
 8001c20:	40026070 	.word	0x40026070

08001c24 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8001c24:	b580      	push	{r7, lr}
 8001c26:	b086      	sub	sp, #24
 8001c28:	af00      	add	r7, sp, #0
 8001c2a:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 8001c2c:	687b      	ldr	r3, [r7, #4]
 8001c2e:	681b      	ldr	r3, [r3, #0]
 8001c30:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001c34:	d10e      	bne.n	8001c54 <HAL_TIM_Base_MspInit+0x30>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 8001c36:	2300      	movs	r3, #0
 8001c38:	617b      	str	r3, [r7, #20]
 8001c3a:	4b24      	ldr	r3, [pc, #144]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c3c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c3e:	4a23      	ldr	r2, [pc, #140]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c40:	f043 0301 	orr.w	r3, r3, #1
 8001c44:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c46:	4b21      	ldr	r3, [pc, #132]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c48:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c4a:	f003 0301 	and.w	r3, r3, #1
 8001c4e:	617b      	str	r3, [r7, #20]
 8001c50:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM4_MspInit 1 */

  /* USER CODE END TIM4_MspInit 1 */
  }

}
 8001c52:	e036      	b.n	8001cc2 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM3)
 8001c54:	687b      	ldr	r3, [r7, #4]
 8001c56:	681b      	ldr	r3, [r3, #0]
 8001c58:	4a1d      	ldr	r2, [pc, #116]	@ (8001cd0 <HAL_TIM_Base_MspInit+0xac>)
 8001c5a:	4293      	cmp	r3, r2
 8001c5c:	d116      	bne.n	8001c8c <HAL_TIM_Base_MspInit+0x68>
    __HAL_RCC_TIM3_CLK_ENABLE();
 8001c5e:	2300      	movs	r3, #0
 8001c60:	613b      	str	r3, [r7, #16]
 8001c62:	4b1a      	ldr	r3, [pc, #104]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c64:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c66:	4a19      	ldr	r2, [pc, #100]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c68:	f043 0302 	orr.w	r3, r3, #2
 8001c6c:	6413      	str	r3, [r2, #64]	@ 0x40
 8001c6e:	4b17      	ldr	r3, [pc, #92]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c72:	f003 0302 	and.w	r3, r3, #2
 8001c76:	613b      	str	r3, [r7, #16]
 8001c78:	693b      	ldr	r3, [r7, #16]
    HAL_NVIC_SetPriority(TIM3_IRQn, 0, 0);
 8001c7a:	2200      	movs	r2, #0
 8001c7c:	2100      	movs	r1, #0
 8001c7e:	201d      	movs	r0, #29
 8001c80:	f001 fd81 	bl	8003786 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM3_IRQn);
 8001c84:	201d      	movs	r0, #29
 8001c86:	f001 fd9a 	bl	80037be <HAL_NVIC_EnableIRQ>
}
 8001c8a:	e01a      	b.n	8001cc2 <HAL_TIM_Base_MspInit+0x9e>
  else if(htim_base->Instance==TIM4)
 8001c8c:	687b      	ldr	r3, [r7, #4]
 8001c8e:	681b      	ldr	r3, [r3, #0]
 8001c90:	4a10      	ldr	r2, [pc, #64]	@ (8001cd4 <HAL_TIM_Base_MspInit+0xb0>)
 8001c92:	4293      	cmp	r3, r2
 8001c94:	d115      	bne.n	8001cc2 <HAL_TIM_Base_MspInit+0x9e>
    __HAL_RCC_TIM4_CLK_ENABLE();
 8001c96:	2300      	movs	r3, #0
 8001c98:	60fb      	str	r3, [r7, #12]
 8001c9a:	4b0c      	ldr	r3, [pc, #48]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001c9c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001c9e:	4a0b      	ldr	r2, [pc, #44]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001ca0:	f043 0304 	orr.w	r3, r3, #4
 8001ca4:	6413      	str	r3, [r2, #64]	@ 0x40
 8001ca6:	4b09      	ldr	r3, [pc, #36]	@ (8001ccc <HAL_TIM_Base_MspInit+0xa8>)
 8001ca8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8001caa:	f003 0304 	and.w	r3, r3, #4
 8001cae:	60fb      	str	r3, [r7, #12]
 8001cb0:	68fb      	ldr	r3, [r7, #12]
    HAL_NVIC_SetPriority(TIM4_IRQn, 0, 0);
 8001cb2:	2200      	movs	r2, #0
 8001cb4:	2100      	movs	r1, #0
 8001cb6:	201e      	movs	r0, #30
 8001cb8:	f001 fd65 	bl	8003786 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM4_IRQn);
 8001cbc:	201e      	movs	r0, #30
 8001cbe:	f001 fd7e 	bl	80037be <HAL_NVIC_EnableIRQ>
}
 8001cc2:	bf00      	nop
 8001cc4:	3718      	adds	r7, #24
 8001cc6:	46bd      	mov	sp, r7
 8001cc8:	bd80      	pop	{r7, pc}
 8001cca:	bf00      	nop
 8001ccc:	40023800 	.word	0x40023800
 8001cd0:	40000400 	.word	0x40000400
 8001cd4:	40000800 	.word	0x40000800

08001cd8 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8001cd8:	b580      	push	{r7, lr}
 8001cda:	b08a      	sub	sp, #40	@ 0x28
 8001cdc:	af00      	add	r7, sp, #0
 8001cde:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8001ce0:	f107 0314 	add.w	r3, r7, #20
 8001ce4:	2200      	movs	r2, #0
 8001ce6:	601a      	str	r2, [r3, #0]
 8001ce8:	605a      	str	r2, [r3, #4]
 8001cea:	609a      	str	r2, [r3, #8]
 8001cec:	60da      	str	r2, [r3, #12]
 8001cee:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8001cf0:	687b      	ldr	r3, [r7, #4]
 8001cf2:	681b      	ldr	r3, [r3, #0]
 8001cf4:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8001cf8:	d11e      	bne.n	8001d38 <HAL_TIM_MspPostInit+0x60>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8001cfa:	2300      	movs	r3, #0
 8001cfc:	613b      	str	r3, [r7, #16]
 8001cfe:	4b22      	ldr	r3, [pc, #136]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d00:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d02:	4a21      	ldr	r2, [pc, #132]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d04:	f043 0301 	orr.w	r3, r3, #1
 8001d08:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d0a:	4b1f      	ldr	r3, [pc, #124]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d0c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d0e:	f003 0301 	and.w	r3, r3, #1
 8001d12:	613b      	str	r3, [r7, #16]
 8001d14:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration
    PA0-WKUP     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_0;
 8001d16:	2301      	movs	r3, #1
 8001d18:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d1a:	2302      	movs	r3, #2
 8001d1c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d1e:	2300      	movs	r3, #0
 8001d20:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d22:	2300      	movs	r3, #0
 8001d24:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8001d26:	2301      	movs	r3, #1
 8001d28:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8001d2a:	f107 0314 	add.w	r3, r7, #20
 8001d2e:	4619      	mov	r1, r3
 8001d30:	4816      	ldr	r0, [pc, #88]	@ (8001d8c <HAL_TIM_MspPostInit+0xb4>)
 8001d32:	f002 f929 	bl	8003f88 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8001d36:	e022      	b.n	8001d7e <HAL_TIM_MspPostInit+0xa6>
  else if(htim->Instance==TIM4)
 8001d38:	687b      	ldr	r3, [r7, #4]
 8001d3a:	681b      	ldr	r3, [r3, #0]
 8001d3c:	4a14      	ldr	r2, [pc, #80]	@ (8001d90 <HAL_TIM_MspPostInit+0xb8>)
 8001d3e:	4293      	cmp	r3, r2
 8001d40:	d11d      	bne.n	8001d7e <HAL_TIM_MspPostInit+0xa6>
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8001d42:	2300      	movs	r3, #0
 8001d44:	60fb      	str	r3, [r7, #12]
 8001d46:	4b10      	ldr	r3, [pc, #64]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d48:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d4a:	4a0f      	ldr	r2, [pc, #60]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d4c:	f043 0302 	orr.w	r3, r3, #2
 8001d50:	6313      	str	r3, [r2, #48]	@ 0x30
 8001d52:	4b0d      	ldr	r3, [pc, #52]	@ (8001d88 <HAL_TIM_MspPostInit+0xb0>)
 8001d54:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8001d56:	f003 0302 	and.w	r3, r3, #2
 8001d5a:	60fb      	str	r3, [r7, #12]
 8001d5c:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_7;
 8001d5e:	2380      	movs	r3, #128	@ 0x80
 8001d60:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8001d62:	2302      	movs	r3, #2
 8001d64:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8001d66:	2300      	movs	r3, #0
 8001d68:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8001d6a:	2300      	movs	r3, #0
 8001d6c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8001d6e:	2302      	movs	r3, #2
 8001d70:	627b      	str	r3, [r7, #36]	@ 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8001d72:	f107 0314 	add.w	r3, r7, #20
 8001d76:	4619      	mov	r1, r3
 8001d78:	4806      	ldr	r0, [pc, #24]	@ (8001d94 <HAL_TIM_MspPostInit+0xbc>)
 8001d7a:	f002 f905 	bl	8003f88 <HAL_GPIO_Init>
}
 8001d7e:	bf00      	nop
 8001d80:	3728      	adds	r7, #40	@ 0x28
 8001d82:	46bd      	mov	sp, r7
 8001d84:	bd80      	pop	{r7, pc}
 8001d86:	bf00      	nop
 8001d88:	40023800 	.word	0x40023800
 8001d8c:	40020000 	.word	0x40020000
 8001d90:	40000800 	.word	0x40000800
 8001d94:	40020400 	.word	0x40020400

08001d98 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8001d98:	b480      	push	{r7}
 8001d9a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8001d9c:	bf00      	nop
 8001d9e:	e7fd      	b.n	8001d9c <NMI_Handler+0x4>

08001da0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8001da0:	b480      	push	{r7}
 8001da2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8001da4:	bf00      	nop
 8001da6:	e7fd      	b.n	8001da4 <HardFault_Handler+0x4>

08001da8 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8001da8:	b480      	push	{r7}
 8001daa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8001dac:	bf00      	nop
 8001dae:	e7fd      	b.n	8001dac <MemManage_Handler+0x4>

08001db0 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8001db0:	b480      	push	{r7}
 8001db2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8001db4:	bf00      	nop
 8001db6:	e7fd      	b.n	8001db4 <BusFault_Handler+0x4>

08001db8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8001db8:	b480      	push	{r7}
 8001dba:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8001dbc:	bf00      	nop
 8001dbe:	e7fd      	b.n	8001dbc <UsageFault_Handler+0x4>

08001dc0 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8001dc0:	b480      	push	{r7}
 8001dc2:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 8001dc4:	bf00      	nop
 8001dc6:	46bd      	mov	sp, r7
 8001dc8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dcc:	4770      	bx	lr

08001dce <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8001dce:	b480      	push	{r7}
 8001dd0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8001dd2:	bf00      	nop
 8001dd4:	46bd      	mov	sp, r7
 8001dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001dda:	4770      	bx	lr

08001ddc <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8001ddc:	b480      	push	{r7}
 8001dde:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8001de0:	bf00      	nop
 8001de2:	46bd      	mov	sp, r7
 8001de4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001de8:	4770      	bx	lr

08001dea <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8001dea:	b580      	push	{r7, lr}
 8001dec:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8001dee:	f000 fe23 	bl	8002a38 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8001df2:	bf00      	nop
 8001df4:	bd80      	pop	{r7, pc}
	...

08001df8 <DMA1_Stream4_IRQHandler>:

/**
  * @brief This function handles DMA1 stream4 global interrupt.
  */
void DMA1_Stream4_IRQHandler(void)
{
 8001df8:	b580      	push	{r7, lr}
 8001dfa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream4_IRQn 0 */

  /* USER CODE END DMA1_Stream4_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_spi2_tx);
 8001dfc:	4802      	ldr	r0, [pc, #8]	@ (8001e08 <DMA1_Stream4_IRQHandler+0x10>)
 8001dfe:	f001 fe59 	bl	8003ab4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream4_IRQn 1 */

  /* USER CODE END DMA1_Stream4_IRQn 1 */
}
 8001e02:	bf00      	nop
 8001e04:	bd80      	pop	{r7, pc}
 8001e06:	bf00      	nop
 8001e08:	20000498 	.word	0x20000498

08001e0c <ADC_IRQHandler>:

/**
  * @brief This function handles ADC1, ADC2 and ADC3 interrupts.
  */
void ADC_IRQHandler(void)
{
 8001e0c:	b580      	push	{r7, lr}
 8001e0e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN ADC_IRQn 0 */

  /* USER CODE END ADC_IRQn 0 */
  HAL_ADC_IRQHandler(&hadc1);
 8001e10:	4802      	ldr	r0, [pc, #8]	@ (8001e1c <ADC_IRQHandler+0x10>)
 8001e12:	f000 fe98 	bl	8002b46 <HAL_ADC_IRQHandler>
  /* USER CODE BEGIN ADC_IRQn 1 */

  /* USER CODE END ADC_IRQn 1 */
}
 8001e16:	bf00      	nop
 8001e18:	bd80      	pop	{r7, pc}
 8001e1a:	bf00      	nop
 8001e1c:	2000033c 	.word	0x2000033c

08001e20 <EXTI9_5_IRQHandler>:

/**
  * @brief This function handles EXTI line[9:5] interrupts.
  */
void EXTI9_5_IRQHandler(void)
{
 8001e20:	b580      	push	{r7, lr}
 8001e22:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI9_5_IRQn 0 */

  /* USER CODE END EXTI9_5_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(TOUCH_INT_Pin);
 8001e24:	f44f 7080 	mov.w	r0, #256	@ 0x100
 8001e28:	f002 fa8e 	bl	8004348 <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI9_5_IRQn 1 */

  /* USER CODE END EXTI9_5_IRQn 1 */
}
 8001e2c:	bf00      	nop
 8001e2e:	bd80      	pop	{r7, pc}

08001e30 <TIM3_IRQHandler>:

/**
  * @brief This function handles TIM3 global interrupt.
  */
void TIM3_IRQHandler(void)
{
 8001e30:	b580      	push	{r7, lr}
 8001e32:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM3_IRQn 0 */

  /* USER CODE END TIM3_IRQn 0 */
  HAL_TIM_IRQHandler(&htim3);
 8001e34:	4802      	ldr	r0, [pc, #8]	@ (8001e40 <TIM3_IRQHandler+0x10>)
 8001e36:	f005 fab7 	bl	80073a8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM3_IRQn 1 */

  /* USER CODE END TIM3_IRQn 1 */
}
 8001e3a:	bf00      	nop
 8001e3c:	bd80      	pop	{r7, pc}
 8001e3e:	bf00      	nop
 8001e40:	20000540 	.word	0x20000540

08001e44 <TIM4_IRQHandler>:

/**
  * @brief This function handles TIM4 global interrupt.
  */
void TIM4_IRQHandler(void)
{
 8001e44:	b580      	push	{r7, lr}
 8001e46:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM4_IRQn 0 */

  /* USER CODE END TIM4_IRQn 0 */
  HAL_TIM_IRQHandler(&htim4);
 8001e48:	4802      	ldr	r0, [pc, #8]	@ (8001e54 <TIM4_IRQHandler+0x10>)
 8001e4a:	f005 faad 	bl	80073a8 <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM4_IRQn 1 */

  /* USER CODE END TIM4_IRQn 1 */
}
 8001e4e:	bf00      	nop
 8001e50:	bd80      	pop	{r7, pc}
 8001e52:	bf00      	nop
 8001e54:	20000588 	.word	0x20000588

08001e58 <SPI2_IRQHandler>:

/**
  * @brief This function handles SPI2 global interrupt.
  */
void SPI2_IRQHandler(void)
{
 8001e58:	b580      	push	{r7, lr}
 8001e5a:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SPI2_IRQn 0 */

  /* USER CODE END SPI2_IRQn 0 */
  HAL_SPI_IRQHandler(&hspi2);
 8001e5c:	4802      	ldr	r0, [pc, #8]	@ (8001e68 <SPI2_IRQHandler+0x10>)
 8001e5e:	f004 fdeb 	bl	8006a38 <HAL_SPI_IRQHandler>
  /* USER CODE BEGIN SPI2_IRQn 1 */

  /* USER CODE END SPI2_IRQn 1 */
}
 8001e62:	bf00      	nop
 8001e64:	bd80      	pop	{r7, pc}
 8001e66:	bf00      	nop
 8001e68:	20000440 	.word	0x20000440

08001e6c <DMA2_Stream0_IRQHandler>:

/**
  * @brief This function handles DMA2 stream0 global interrupt.
  */
void DMA2_Stream0_IRQHandler(void)
{
 8001e6c:	b580      	push	{r7, lr}
 8001e6e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA2_Stream0_IRQn 0 */

  /* USER CODE END DMA2_Stream0_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_adc1);
 8001e70:	4802      	ldr	r0, [pc, #8]	@ (8001e7c <DMA2_Stream0_IRQHandler+0x10>)
 8001e72:	f001 fe1f 	bl	8003ab4 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA2_Stream0_IRQn 1 */

  /* USER CODE END DMA2_Stream0_IRQn 1 */
}
 8001e76:	bf00      	nop
 8001e78:	bd80      	pop	{r7, pc}
 8001e7a:	bf00      	nop
 8001e7c:	20000384 	.word	0x20000384

08001e80 <_getpid>:
 8001e80:	b480      	push	{r7}
 8001e82:	af00      	add	r7, sp, #0
 8001e84:	2301      	movs	r3, #1
 8001e86:	4618      	mov	r0, r3
 8001e88:	46bd      	mov	sp, r7
 8001e8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001e8e:	4770      	bx	lr

08001e90 <_kill>:
 8001e90:	b580      	push	{r7, lr}
 8001e92:	b082      	sub	sp, #8
 8001e94:	af00      	add	r7, sp, #0
 8001e96:	6078      	str	r0, [r7, #4]
 8001e98:	6039      	str	r1, [r7, #0]
 8001e9a:	f024 fa83 	bl	80263a4 <__errno>
 8001e9e:	4603      	mov	r3, r0
 8001ea0:	2216      	movs	r2, #22
 8001ea2:	601a      	str	r2, [r3, #0]
 8001ea4:	f04f 33ff 	mov.w	r3, #4294967295
 8001ea8:	4618      	mov	r0, r3
 8001eaa:	3708      	adds	r7, #8
 8001eac:	46bd      	mov	sp, r7
 8001eae:	bd80      	pop	{r7, pc}

08001eb0 <_exit>:
 8001eb0:	b580      	push	{r7, lr}
 8001eb2:	b082      	sub	sp, #8
 8001eb4:	af00      	add	r7, sp, #0
 8001eb6:	6078      	str	r0, [r7, #4]
 8001eb8:	f04f 31ff 	mov.w	r1, #4294967295
 8001ebc:	6878      	ldr	r0, [r7, #4]
 8001ebe:	f7ff ffe7 	bl	8001e90 <_kill>
 8001ec2:	bf00      	nop
 8001ec4:	e7fd      	b.n	8001ec2 <_exit+0x12>

08001ec6 <_read>:
 8001ec6:	b580      	push	{r7, lr}
 8001ec8:	b086      	sub	sp, #24
 8001eca:	af00      	add	r7, sp, #0
 8001ecc:	60f8      	str	r0, [r7, #12]
 8001ece:	60b9      	str	r1, [r7, #8]
 8001ed0:	607a      	str	r2, [r7, #4]
 8001ed2:	2300      	movs	r3, #0
 8001ed4:	617b      	str	r3, [r7, #20]
 8001ed6:	e00a      	b.n	8001eee <_read+0x28>
 8001ed8:	f3af 8000 	nop.w
 8001edc:	4601      	mov	r1, r0
 8001ede:	68bb      	ldr	r3, [r7, #8]
 8001ee0:	1c5a      	adds	r2, r3, #1
 8001ee2:	60ba      	str	r2, [r7, #8]
 8001ee4:	b2ca      	uxtb	r2, r1
 8001ee6:	701a      	strb	r2, [r3, #0]
 8001ee8:	697b      	ldr	r3, [r7, #20]
 8001eea:	3301      	adds	r3, #1
 8001eec:	617b      	str	r3, [r7, #20]
 8001eee:	697a      	ldr	r2, [r7, #20]
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	429a      	cmp	r2, r3
 8001ef4:	dbf0      	blt.n	8001ed8 <_read+0x12>
 8001ef6:	687b      	ldr	r3, [r7, #4]
 8001ef8:	4618      	mov	r0, r3
 8001efa:	3718      	adds	r7, #24
 8001efc:	46bd      	mov	sp, r7
 8001efe:	bd80      	pop	{r7, pc}

08001f00 <_write>:
 8001f00:	b580      	push	{r7, lr}
 8001f02:	b086      	sub	sp, #24
 8001f04:	af00      	add	r7, sp, #0
 8001f06:	60f8      	str	r0, [r7, #12]
 8001f08:	60b9      	str	r1, [r7, #8]
 8001f0a:	607a      	str	r2, [r7, #4]
 8001f0c:	2300      	movs	r3, #0
 8001f0e:	617b      	str	r3, [r7, #20]
 8001f10:	e009      	b.n	8001f26 <_write+0x26>
 8001f12:	68bb      	ldr	r3, [r7, #8]
 8001f14:	1c5a      	adds	r2, r3, #1
 8001f16:	60ba      	str	r2, [r7, #8]
 8001f18:	781b      	ldrb	r3, [r3, #0]
 8001f1a:	4618      	mov	r0, r3
 8001f1c:	f3af 8000 	nop.w
 8001f20:	697b      	ldr	r3, [r7, #20]
 8001f22:	3301      	adds	r3, #1
 8001f24:	617b      	str	r3, [r7, #20]
 8001f26:	697a      	ldr	r2, [r7, #20]
 8001f28:	687b      	ldr	r3, [r7, #4]
 8001f2a:	429a      	cmp	r2, r3
 8001f2c:	dbf1      	blt.n	8001f12 <_write+0x12>
 8001f2e:	687b      	ldr	r3, [r7, #4]
 8001f30:	4618      	mov	r0, r3
 8001f32:	3718      	adds	r7, #24
 8001f34:	46bd      	mov	sp, r7
 8001f36:	bd80      	pop	{r7, pc}

08001f38 <_close>:
 8001f38:	b480      	push	{r7}
 8001f3a:	b083      	sub	sp, #12
 8001f3c:	af00      	add	r7, sp, #0
 8001f3e:	6078      	str	r0, [r7, #4]
 8001f40:	f04f 33ff 	mov.w	r3, #4294967295
 8001f44:	4618      	mov	r0, r3
 8001f46:	370c      	adds	r7, #12
 8001f48:	46bd      	mov	sp, r7
 8001f4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f4e:	4770      	bx	lr

08001f50 <_fstat>:
 8001f50:	b480      	push	{r7}
 8001f52:	b083      	sub	sp, #12
 8001f54:	af00      	add	r7, sp, #0
 8001f56:	6078      	str	r0, [r7, #4]
 8001f58:	6039      	str	r1, [r7, #0]
 8001f5a:	683b      	ldr	r3, [r7, #0]
 8001f5c:	f44f 5200 	mov.w	r2, #8192	@ 0x2000
 8001f60:	605a      	str	r2, [r3, #4]
 8001f62:	2300      	movs	r3, #0
 8001f64:	4618      	mov	r0, r3
 8001f66:	370c      	adds	r7, #12
 8001f68:	46bd      	mov	sp, r7
 8001f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f6e:	4770      	bx	lr

08001f70 <_isatty>:
 8001f70:	b480      	push	{r7}
 8001f72:	b083      	sub	sp, #12
 8001f74:	af00      	add	r7, sp, #0
 8001f76:	6078      	str	r0, [r7, #4]
 8001f78:	2301      	movs	r3, #1
 8001f7a:	4618      	mov	r0, r3
 8001f7c:	370c      	adds	r7, #12
 8001f7e:	46bd      	mov	sp, r7
 8001f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f84:	4770      	bx	lr

08001f86 <_lseek>:
 8001f86:	b480      	push	{r7}
 8001f88:	b085      	sub	sp, #20
 8001f8a:	af00      	add	r7, sp, #0
 8001f8c:	60f8      	str	r0, [r7, #12]
 8001f8e:	60b9      	str	r1, [r7, #8]
 8001f90:	607a      	str	r2, [r7, #4]
 8001f92:	2300      	movs	r3, #0
 8001f94:	4618      	mov	r0, r3
 8001f96:	3714      	adds	r7, #20
 8001f98:	46bd      	mov	sp, r7
 8001f9a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001f9e:	4770      	bx	lr

08001fa0 <_sbrk>:
 8001fa0:	b580      	push	{r7, lr}
 8001fa2:	b086      	sub	sp, #24
 8001fa4:	af00      	add	r7, sp, #0
 8001fa6:	6078      	str	r0, [r7, #4]
 8001fa8:	4a14      	ldr	r2, [pc, #80]	@ (8001ffc <_sbrk+0x5c>)
 8001faa:	4b15      	ldr	r3, [pc, #84]	@ (8002000 <_sbrk+0x60>)
 8001fac:	1ad3      	subs	r3, r2, r3
 8001fae:	617b      	str	r3, [r7, #20]
 8001fb0:	697b      	ldr	r3, [r7, #20]
 8001fb2:	613b      	str	r3, [r7, #16]
 8001fb4:	4b13      	ldr	r3, [pc, #76]	@ (8002004 <_sbrk+0x64>)
 8001fb6:	681b      	ldr	r3, [r3, #0]
 8001fb8:	2b00      	cmp	r3, #0
 8001fba:	d102      	bne.n	8001fc2 <_sbrk+0x22>
 8001fbc:	4b11      	ldr	r3, [pc, #68]	@ (8002004 <_sbrk+0x64>)
 8001fbe:	4a12      	ldr	r2, [pc, #72]	@ (8002008 <_sbrk+0x68>)
 8001fc0:	601a      	str	r2, [r3, #0]
 8001fc2:	4b10      	ldr	r3, [pc, #64]	@ (8002004 <_sbrk+0x64>)
 8001fc4:	681a      	ldr	r2, [r3, #0]
 8001fc6:	687b      	ldr	r3, [r7, #4]
 8001fc8:	4413      	add	r3, r2
 8001fca:	693a      	ldr	r2, [r7, #16]
 8001fcc:	429a      	cmp	r2, r3
 8001fce:	d207      	bcs.n	8001fe0 <_sbrk+0x40>
 8001fd0:	f024 f9e8 	bl	80263a4 <__errno>
 8001fd4:	4603      	mov	r3, r0
 8001fd6:	220c      	movs	r2, #12
 8001fd8:	601a      	str	r2, [r3, #0]
 8001fda:	f04f 33ff 	mov.w	r3, #4294967295
 8001fde:	e009      	b.n	8001ff4 <_sbrk+0x54>
 8001fe0:	4b08      	ldr	r3, [pc, #32]	@ (8002004 <_sbrk+0x64>)
 8001fe2:	681b      	ldr	r3, [r3, #0]
 8001fe4:	60fb      	str	r3, [r7, #12]
 8001fe6:	4b07      	ldr	r3, [pc, #28]	@ (8002004 <_sbrk+0x64>)
 8001fe8:	681a      	ldr	r2, [r3, #0]
 8001fea:	687b      	ldr	r3, [r7, #4]
 8001fec:	4413      	add	r3, r2
 8001fee:	4a05      	ldr	r2, [pc, #20]	@ (8002004 <_sbrk+0x64>)
 8001ff0:	6013      	str	r3, [r2, #0]
 8001ff2:	68fb      	ldr	r3, [r7, #12]
 8001ff4:	4618      	mov	r0, r3
 8001ff6:	3718      	adds	r7, #24
 8001ff8:	46bd      	mov	sp, r7
 8001ffa:	bd80      	pop	{r7, pc}
 8001ffc:	20020000 	.word	0x20020000
 8002000:	00000400 	.word	0x00000400
 8002004:	200005e4 	.word	0x200005e4
 8002008:	20003c90 	.word	0x20003c90

0800200c <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 800200c:	b480      	push	{r7}
 800200e:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 8002010:	4b06      	ldr	r3, [pc, #24]	@ (800202c <SystemInit+0x20>)
 8002012:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 8002016:	4a05      	ldr	r2, [pc, #20]	@ (800202c <SystemInit+0x20>)
 8002018:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 800201c:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88

  /* Configure the Vector Table location -------------------------------------*/
#if defined(USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 8002020:	bf00      	nop
 8002022:	46bd      	mov	sp, r7
 8002024:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002028:	4770      	bx	lr
 800202a:	bf00      	nop
 800202c:	e000ed00 	.word	0xe000ed00

08002030 <Displ_Select>:

/******************************************
 * @brief	enable display, disabling touch
 * 			device selected if CS low
 ******************************************/
void Displ_Select(void) {
 8002030:	b580      	push	{r7, lr}
 8002032:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if SPI port shared (display <-> touch)
		if (HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display not yet selected
 8002034:	2180      	movs	r1, #128	@ 0x80
 8002036:	4810      	ldr	r0, [pc, #64]	@ (8002078 <Displ_Select+0x48>)
 8002038:	f002 f93a 	bl	80042b0 <HAL_GPIO_ReadPin>
 800203c:	4603      	mov	r3, r0
 800203e:	2b00      	cmp	r3, #0
 8002040:	d017      	beq.n	8002072 <Displ_Select+0x42>
			HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET); 		// unselect touch
 8002042:	2201      	movs	r2, #1
 8002044:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002048:	480c      	ldr	r0, [pc, #48]	@ (800207c <Displ_Select+0x4c>)
 800204a:	f002 f949 	bl	80042e0 <HAL_GPIO_WritePin>
			SET_DISPL_SPI_BAUDRATE;				   									//change SPI port speed as per display needs
 800204e:	4b0c      	ldr	r3, [pc, #48]	@ (8002080 <Displ_Select+0x50>)
 8002050:	681a      	ldr	r2, [r3, #0]
 8002052:	490b      	ldr	r1, [pc, #44]	@ (8002080 <Displ_Select+0x50>)
 8002054:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 8002058:	4013      	ands	r3, r2
 800205a:	600b      	str	r3, [r1, #0]
 800205c:	4b08      	ldr	r3, [pc, #32]	@ (8002080 <Displ_Select+0x50>)
 800205e:	681b      	ldr	r3, [r3, #0]
 8002060:	4a07      	ldr	r2, [pc, #28]	@ (8002080 <Displ_Select+0x50>)
 8002062:	f043 0308 	orr.w	r3, r3, #8
 8002066:	6013      	str	r3, [r2, #0]
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET);	// select display
 8002068:	2200      	movs	r2, #0
 800206a:	2180      	movs	r1, #128	@ 0x80
 800206c:	4802      	ldr	r0, [pc, #8]	@ (8002078 <Displ_Select+0x48>)
 800206e:	f002 f937 	bl	80042e0 <HAL_GPIO_WritePin>
		}
	}
}
 8002072:	bf00      	nop
 8002074:	bd80      	pop	{r7, pc}
 8002076:	bf00      	nop
 8002078:	40020800 	.word	0x40020800
 800207c:	40020000 	.word	0x40020000
 8002080:	40003800 	.word	0x40003800

08002084 <Displ_Transmit>:
 * @PARAM	DC_Status 	indicates if sending command or data
 * 			data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **************************/
void Displ_Transmit(GPIO_PinState DC_Status, uint8_t* data, uint16_t dataSize, uint8_t isTouchGFXBuffer ){
 8002084:	b580      	push	{r7, lr}
 8002086:	b086      	sub	sp, #24
 8002088:	af00      	add	r7, sp, #0
 800208a:	6039      	str	r1, [r7, #0]
 800208c:	4611      	mov	r1, r2
 800208e:	461a      	mov	r2, r3
 8002090:	4603      	mov	r3, r0
 8002092:	71fb      	strb	r3, [r7, #7]
 8002094:	460b      	mov	r3, r1
 8002096:	80bb      	strh	r3, [r7, #4]
 8002098:	4613      	mov	r3, r2
 800209a:	71bb      	strb	r3, [r7, #6]

	while (!Displ_SpiAvailable) {};  // waiting for a free SPI port. Flag is set to 1 by transmission-complete interrupt callback
 800209c:	bf00      	nop
 800209e:	4b25      	ldr	r3, [pc, #148]	@ (8002134 <Displ_Transmit+0xb0>)
 80020a0:	781b      	ldrb	r3, [r3, #0]
 80020a2:	b2db      	uxtb	r3, r3
 80020a4:	2b00      	cmp	r3, #0
 80020a6:	d0fa      	beq.n	800209e <Displ_Transmit+0x1a>

	Displ_Select();
 80020a8:	f7ff ffc2 	bl	8002030 <Displ_Select>
	HAL_GPIO_WritePin(DISPL_DC_GPIO_Port, DISPL_DC_Pin, DC_Status);
 80020ac:	79fb      	ldrb	r3, [r7, #7]
 80020ae:	461a      	mov	r2, r3
 80020b0:	2180      	movs	r1, #128	@ 0x80
 80020b2:	4821      	ldr	r0, [pc, #132]	@ (8002138 <Displ_Transmit+0xb4>)
 80020b4:	f002 f914 	bl	80042e0 <HAL_GPIO_WritePin>

	if (isTouchGFXBuffer){
 80020b8:	79bb      	ldrb	r3, [r7, #6]
 80020ba:	2b00      	cmp	r3, #0
 80020bc:	d016      	beq.n	80020ec <Displ_Transmit+0x68>
#ifdef Z_RGB565
//if color format is RGB565 just swap even and odd bytes correcting endianess for ILI driver
		uint32_t *limit=(uint32_t*)(data+dataSize);
 80020be:	88bb      	ldrh	r3, [r7, #4]
 80020c0:	683a      	ldr	r2, [r7, #0]
 80020c2:	4413      	add	r3, r2
 80020c4:	613b      	str	r3, [r7, #16]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020c6:	683b      	ldr	r3, [r7, #0]
 80020c8:	617b      	str	r3, [r7, #20]
 80020ca:	e00b      	b.n	80020e4 <Displ_Transmit+0x60>
			*data32=__REV16(*data32);
 80020cc:	697b      	ldr	r3, [r7, #20]
 80020ce:	681b      	ldr	r3, [r3, #0]
 80020d0:	60fb      	str	r3, [r7, #12]
  __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 80020d2:	68fb      	ldr	r3, [r7, #12]
 80020d4:	ba5b      	rev16	r3, r3
 80020d6:	60bb      	str	r3, [r7, #8]
  return result;
 80020d8:	68ba      	ldr	r2, [r7, #8]
 80020da:	697b      	ldr	r3, [r7, #20]
 80020dc:	601a      	str	r2, [r3, #0]
		for (uint32_t *data32=(uint32_t*)data; data32<limit; data32++) {
 80020de:	697b      	ldr	r3, [r7, #20]
 80020e0:	3304      	adds	r3, #4
 80020e2:	617b      	str	r3, [r7, #20]
 80020e4:	697a      	ldr	r2, [r7, #20]
 80020e6:	693b      	ldr	r3, [r7, #16]
 80020e8:	429a      	cmp	r2, r3
 80020ea:	d3ef      	bcc.n	80020cc <Displ_Transmit+0x48>
#ifdef DISPLAY_SPI_INTERRUPT_MODE
		Displ_SpiAvailable=0;
		HAL_SPI_Transmit_IT(&DISPL_SPI_PORT , data, dataSize);
#else
#ifdef DISPLAY_SPI_DMA_MODE
		if (dataSize<DISPL_DMA_CUTOFF) {
 80020ec:	88bb      	ldrh	r3, [r7, #4]
 80020ee:	2b13      	cmp	r3, #19
 80020f0:	d812      	bhi.n	8002118 <Displ_Transmit+0x94>
#endif //DISPLAY_SPI_DMA_MODE
			Displ_SpiAvailable=0;
 80020f2:	4b10      	ldr	r3, [pc, #64]	@ (8002134 <Displ_Transmit+0xb0>)
 80020f4:	2200      	movs	r2, #0
 80020f6:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit(&DISPL_SPI_PORT , data, dataSize, HAL_MAX_DELAY);
 80020f8:	88ba      	ldrh	r2, [r7, #4]
 80020fa:	f04f 33ff 	mov.w	r3, #4294967295
 80020fe:	6839      	ldr	r1, [r7, #0]
 8002100:	480e      	ldr	r0, [pc, #56]	@ (800213c <Displ_Transmit+0xb8>)
 8002102:	f003 ffe0 	bl	80060c6 <HAL_SPI_Transmit>
			Displ_SpiAvailable=1;
 8002106:	4b0b      	ldr	r3, [pc, #44]	@ (8002134 <Displ_Transmit+0xb0>)
 8002108:	2201      	movs	r2, #1
 800210a:	701a      	strb	r2, [r3, #0]
#ifdef DISPLAY_USING_TOUCHGFX
			if (isTouchGFXBuffer){
 800210c:	79bb      	ldrb	r3, [r7, #6]
 800210e:	2b00      	cmp	r3, #0
 8002110:	d00b      	beq.n	800212a <Displ_Transmit+0xa6>
				DisplayDriver_TransferCompleteCallback();
 8002112:	f00e f8f9 	bl	8010308 <DisplayDriver_TransferCompleteCallback>
			Displ_SpiAvailable=0;
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
		}
#endif //DISPLAY_SPI_DMA_MODE
#endif //DISPLAY_SPI_INTERRUPT_MODE
	}
 8002116:	e008      	b.n	800212a <Displ_Transmit+0xa6>
			Displ_SpiAvailable=0;
 8002118:	4b06      	ldr	r3, [pc, #24]	@ (8002134 <Displ_Transmit+0xb0>)
 800211a:	2200      	movs	r2, #0
 800211c:	701a      	strb	r2, [r3, #0]
			HAL_SPI_Transmit_DMA(&DISPL_SPI_PORT , data, dataSize);
 800211e:	88bb      	ldrh	r3, [r7, #4]
 8002120:	461a      	mov	r2, r3
 8002122:	6839      	ldr	r1, [r7, #0]
 8002124:	4805      	ldr	r0, [pc, #20]	@ (800213c <Displ_Transmit+0xb8>)
 8002126:	f004 fbd5 	bl	80068d4 <HAL_SPI_Transmit_DMA>
	}
 800212a:	bf00      	nop
 800212c:	3718      	adds	r7, #24
 800212e:	46bd      	mov	sp, r7
 8002130:	bd80      	pop	{r7, pc}
 8002132:	bf00      	nop
 8002134:	20000018 	.word	0x20000018
 8002138:	40020000 	.word	0x40020000
 800213c:	20000440 	.word	0x20000440

08002140 <Displ_WriteCommand>:


/**********************************
 * @BRIEF	transmit a byte in a SPI_COMMAND format
 **********************************/
void Displ_WriteCommand(uint8_t cmd){
 8002140:	b580      	push	{r7, lr}
 8002142:	b082      	sub	sp, #8
 8002144:	af00      	add	r7, sp, #0
 8002146:	4603      	mov	r3, r0
 8002148:	71fb      	strb	r3, [r7, #7]
	Displ_Transmit(SPI_COMMAND, &cmd, sizeof(cmd),0);
 800214a:	1df9      	adds	r1, r7, #7
 800214c:	2300      	movs	r3, #0
 800214e:	2201      	movs	r2, #1
 8002150:	2000      	movs	r0, #0
 8002152:	f7ff ff97 	bl	8002084 <Displ_Transmit>
}
 8002156:	bf00      	nop
 8002158:	3708      	adds	r7, #8
 800215a:	46bd      	mov	sp, r7
 800215c:	bd80      	pop	{r7, pc}

0800215e <Displ_WriteData>:
 * @BRIEF	transmit a set of data in a SPI_DATA format
 * @PARAM 	data		buffer data to send
 * 			dataSize	number of bytes in "data" to be sent
 * 			isTouchGFXBuffer 1 only when called by touchgfxDisplayDriverTransmitBlock (for byte endian conversion). All other cases 0
 **********************************/
void Displ_WriteData(uint8_t* buff, size_t buff_size, uint8_t isTouchGFXBuffer){
 800215e:	b580      	push	{r7, lr}
 8002160:	b084      	sub	sp, #16
 8002162:	af00      	add	r7, sp, #0
 8002164:	60f8      	str	r0, [r7, #12]
 8002166:	60b9      	str	r1, [r7, #8]
 8002168:	4613      	mov	r3, r2
 800216a:	71fb      	strb	r3, [r7, #7]
	if (buff_size==0) return;
 800216c:	68bb      	ldr	r3, [r7, #8]
 800216e:	2b00      	cmp	r3, #0
 8002170:	d007      	beq.n	8002182 <Displ_WriteData+0x24>
	Displ_Transmit(SPI_DATA, buff, buff_size, isTouchGFXBuffer);
 8002172:	68bb      	ldr	r3, [r7, #8]
 8002174:	b29a      	uxth	r2, r3
 8002176:	79fb      	ldrb	r3, [r7, #7]
 8002178:	68f9      	ldr	r1, [r7, #12]
 800217a:	2001      	movs	r0, #1
 800217c:	f7ff ff82 	bl	8002084 <Displ_Transmit>
 8002180:	e000      	b.n	8002184 <Displ_WriteData+0x26>
	if (buff_size==0) return;
 8002182:	bf00      	nop
}
 8002184:	3710      	adds	r7, #16
 8002186:	46bd      	mov	sp, r7
 8002188:	bd80      	pop	{r7, pc}
	...

0800218c <ILI9XXX_Init>:


/**********************************
 * @brief	ILIXXX initialization sequence
 **********************************/
void ILI9XXX_Init(){
 800218c:	b580      	push	{r7, lr}
 800218e:	af00      	add	r7, sp, #0
	Displ_Select();
 8002190:	f7ff ff4e 	bl	8002030 <Displ_Select>

	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_RESET);
 8002194:	2200      	movs	r2, #0
 8002196:	2140      	movs	r1, #64	@ 0x40
 8002198:	4819      	ldr	r0, [pc, #100]	@ (8002200 <ILI9XXX_Init+0x74>)
 800219a:	f002 f8a1 	bl	80042e0 <HAL_GPIO_WritePin>
	HAL_Delay(1);
 800219e:	2001      	movs	r0, #1
 80021a0:	f000 fc6a 	bl	8002a78 <HAL_Delay>
	HAL_GPIO_WritePin(DISPL_RST_GPIO_Port, DISPL_RST_Pin, GPIO_PIN_SET);
 80021a4:	2201      	movs	r2, #1
 80021a6:	2140      	movs	r1, #64	@ 0x40
 80021a8:	4815      	ldr	r0, [pc, #84]	@ (8002200 <ILI9XXX_Init+0x74>)
 80021aa:	f002 f899 	bl	80042e0 <HAL_GPIO_WritePin>
	HAL_Delay(150);
 80021ae:	2096      	movs	r0, #150	@ 0x96
 80021b0:	f000 fc62 	bl	8002a78 <HAL_Delay>
		Displ_WriteData(data,3);
	#endif
*/


	Displ_WriteCommand(ILI9XXX_PIXEL_FORMAT);
 80021b4:	203a      	movs	r0, #58	@ 0x3a
 80021b6:	f7ff ffc3 	bl	8002140 <Displ_WriteCommand>
#ifdef Z_RGB666
	Displ_WriteData((uint8_t *)"\x66",1,0);		// RGB666
#endif
#ifdef Z_RGB565
	Displ_WriteData((uint8_t *)"\x55",1,0);		// RGB565
 80021ba:	2200      	movs	r2, #0
 80021bc:	2101      	movs	r1, #1
 80021be:	4811      	ldr	r0, [pc, #68]	@ (8002204 <ILI9XXX_Init+0x78>)
 80021c0:	f7ff ffcd 	bl	800215e <Displ_WriteData>
#endif
	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021c4:	20b0      	movs	r0, #176	@ 0xb0
 80021c6:	f7ff ffbb 	bl	8002140 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021ca:	2200      	movs	r2, #0
 80021cc:	2101      	movs	r1, #1
 80021ce:	480e      	ldr	r0, [pc, #56]	@ (8002208 <ILI9XXX_Init+0x7c>)
 80021d0:	f7ff ffc5 	bl	800215e <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_RGB_INTERFACE);
 80021d4:	20b0      	movs	r0, #176	@ 0xb0
 80021d6:	f7ff ffb3 	bl	8002140 <Displ_WriteCommand>
	Displ_WriteData((uint8_t *)"\x80",1,0);        // disable MISO pin
 80021da:	2200      	movs	r2, #0
 80021dc:	2101      	movs	r1, #1
 80021de:	480a      	ldr	r0, [pc, #40]	@ (8002208 <ILI9XXX_Init+0x7c>)
 80021e0:	f7ff ffbd 	bl	800215e <Displ_WriteData>

	Displ_WriteCommand(ILI9XXX_SLEEP_OUT);
 80021e4:	2011      	movs	r0, #17
 80021e6:	f7ff ffab 	bl	8002140 <Displ_WriteCommand>
	HAL_Delay(120);
 80021ea:	2078      	movs	r0, #120	@ 0x78
 80021ec:	f000 fc44 	bl	8002a78 <HAL_Delay>

	Displ_WriteCommand(ILI9XXX_DISPLAY_ON);
 80021f0:	2029      	movs	r0, #41	@ 0x29
 80021f2:	f7ff ffa5 	bl	8002140 <Displ_WriteCommand>
	HAL_Delay(5);
 80021f6:	2005      	movs	r0, #5
 80021f8:	f000 fc3e 	bl	8002a78 <HAL_Delay>

}
 80021fc:	bf00      	nop
 80021fe:	bd80      	pop	{r7, pc}
 8002200:	40020400 	.word	0x40020400
 8002204:	08026ea8 	.word	0x08026ea8
 8002208:	08026eac 	.word	0x08026eac

0800220c <Displ_SetAddressWindow>:
 * 			information
 * @param  x1,y1,x2,y2 top left and bottom
 * 					   right corner of the area
 * 					   to write
 **********************************************/
void Displ_SetAddressWindow(uint16_t x1, uint16_t y1, uint16_t x2, uint16_t y2) {
 800220c:	b590      	push	{r4, r7, lr}
 800220e:	b083      	sub	sp, #12
 8002210:	af00      	add	r7, sp, #0
 8002212:	4604      	mov	r4, r0
 8002214:	4608      	mov	r0, r1
 8002216:	4611      	mov	r1, r2
 8002218:	461a      	mov	r2, r3
 800221a:	4623      	mov	r3, r4
 800221c:	80fb      	strh	r3, [r7, #6]
 800221e:	4603      	mov	r3, r0
 8002220:	80bb      	strh	r3, [r7, #4]
 8002222:	460b      	mov	r3, r1
 8002224:	807b      	strh	r3, [r7, #2]
 8002226:	4613      	mov	r3, r2
 8002228:	803b      	strh	r3, [r7, #0]
	static uint8_t data[4];

	((uint32_t *)data)[0]=(((x2 & 0xFF)<<24) | ((x2 & 0xFF00)<<8) | ((x1 & 0xFF)<<8) | ((x1 & 0xFF00)>>8) );
 800222a:	887b      	ldrh	r3, [r7, #2]
 800222c:	061a      	lsls	r2, r3, #24
 800222e:	887b      	ldrh	r3, [r7, #2]
 8002230:	021b      	lsls	r3, r3, #8
 8002232:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002236:	431a      	orrs	r2, r3
 8002238:	88fb      	ldrh	r3, [r7, #6]
 800223a:	021b      	lsls	r3, r3, #8
 800223c:	b29b      	uxth	r3, r3
 800223e:	4313      	orrs	r3, r2
 8002240:	88fa      	ldrh	r2, [r7, #6]
 8002242:	0a12      	lsrs	r2, r2, #8
 8002244:	b292      	uxth	r2, r2
 8002246:	431a      	orrs	r2, r3
 8002248:	4b14      	ldr	r3, [pc, #80]	@ (800229c <Displ_SetAddressWindow+0x90>)
 800224a:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_COLUMN_ADDR);
 800224c:	202a      	movs	r0, #42	@ 0x2a
 800224e:	f7ff ff77 	bl	8002140 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002252:	2200      	movs	r2, #0
 8002254:	2104      	movs	r1, #4
 8002256:	4811      	ldr	r0, [pc, #68]	@ (800229c <Displ_SetAddressWindow+0x90>)
 8002258:	f7ff ff81 	bl	800215e <Displ_WriteData>

	((uint32_t *)data)[0]=(((y2 & 0xFF)<<24) | ((y2 & 0xFF00)<<8) | ((y1 & 0xFF)<<8) | ((y1 & 0xFF00)>>8) );
 800225c:	883b      	ldrh	r3, [r7, #0]
 800225e:	061a      	lsls	r2, r3, #24
 8002260:	883b      	ldrh	r3, [r7, #0]
 8002262:	021b      	lsls	r3, r3, #8
 8002264:	f403 037f 	and.w	r3, r3, #16711680	@ 0xff0000
 8002268:	431a      	orrs	r2, r3
 800226a:	88bb      	ldrh	r3, [r7, #4]
 800226c:	021b      	lsls	r3, r3, #8
 800226e:	b29b      	uxth	r3, r3
 8002270:	4313      	orrs	r3, r2
 8002272:	88ba      	ldrh	r2, [r7, #4]
 8002274:	0a12      	lsrs	r2, r2, #8
 8002276:	b292      	uxth	r2, r2
 8002278:	431a      	orrs	r2, r3
 800227a:	4b08      	ldr	r3, [pc, #32]	@ (800229c <Displ_SetAddressWindow+0x90>)
 800227c:	601a      	str	r2, [r3, #0]
	Displ_WriteCommand(ILI9XXX_PAGE_ADDR);
 800227e:	202b      	movs	r0, #43	@ 0x2b
 8002280:	f7ff ff5e 	bl	8002140 <Displ_WriteCommand>
	Displ_WriteData(data, 4,0);
 8002284:	2200      	movs	r2, #0
 8002286:	2104      	movs	r1, #4
 8002288:	4804      	ldr	r0, [pc, #16]	@ (800229c <Displ_SetAddressWindow+0x90>)
 800228a:	f7ff ff68 	bl	800215e <Displ_WriteData>
	Displ_WriteCommand(ILI9XXX_MEMWR);
 800228e:	202c      	movs	r0, #44	@ 0x2c
 8002290:	f7ff ff56 	bl	8002140 <Displ_WriteCommand>
}
 8002294:	bf00      	nop
 8002296:	370c      	adds	r7, #12
 8002298:	46bd      	mov	sp, r7
 800229a:	bd90      	pop	{r4, r7, pc}
 800229c:	200005f0 	.word	0x200005f0

080022a0 <Displ_Init>:

/*****************************************************
 * @brief				first display initialization.
 * @param	orientation	display orientation
 *****************************************************/
void Displ_Init(Displ_Orientat_e orientation){
 80022a0:	b580      	push	{r7, lr}
 80022a2:	b082      	sub	sp, #8
 80022a4:	af00      	add	r7, sp, #0
 80022a6:	4603      	mov	r3, r0
 80022a8:	71fb      	strb	r3, [r7, #7]
	if (TOUCH_SPI==DISPL_SPI){													// if touch and display share the same SPI port
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display (will be selected at writing time)
 80022aa:	2201      	movs	r2, #1
 80022ac:	2180      	movs	r1, #128	@ 0x80
 80022ae:	4809      	ldr	r0, [pc, #36]	@ (80022d4 <Displ_Init+0x34>)
 80022b0:	f002 f816 	bl	80042e0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);		// unselect touch (will be selected at writing time)
 80022b4:	2201      	movs	r2, #1
 80022b6:	f44f 7100 	mov.w	r1, #512	@ 0x200
 80022ba:	4807      	ldr	r0, [pc, #28]	@ (80022d8 <Displ_Init+0x38>)
 80022bc:	f002 f810 	bl	80042e0 <HAL_GPIO_WritePin>
		HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_RESET); 	// select display
		SET_DISPL_SPI_BAUDRATE;
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);	// select touch
		SET_TOUCH_SPI_BAUDRATE;
	}
	ILI9XXX_Init();
 80022c0:	f7ff ff64 	bl	800218c <ILI9XXX_Init>
	Displ_Orientation(orientation);
 80022c4:	79fb      	ldrb	r3, [r7, #7]
 80022c6:	4618      	mov	r0, r3
 80022c8:	f000 f808 	bl	80022dc <Displ_Orientation>
}
 80022cc:	bf00      	nop
 80022ce:	3708      	adds	r7, #8
 80022d0:	46bd      	mov	sp, r7
 80022d2:	bd80      	pop	{r7, pc}
 80022d4:	40020800 	.word	0x40020800
 80022d8:	40020000 	.word	0x40020000

080022dc <Displ_Orientation>:

/**********************************************
 * @brief		set orientation of the display
 * @param  	m	orientation
 **********************************************/
void Displ_Orientation(Displ_Orientat_e orientation){
 80022dc:	b580      	push	{r7, lr}
 80022de:	b082      	sub	sp, #8
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	4603      	mov	r3, r0
 80022e4:	71fb      	strb	r3, [r7, #7]
	static uint8_t data[1];
	switch(orientation) {
 80022e6:	79fb      	ldrb	r3, [r7, #7]
 80022e8:	2b03      	cmp	r3, #3
 80022ea:	d83b      	bhi.n	8002364 <Displ_Orientation+0x88>
 80022ec:	a201      	add	r2, pc, #4	@ (adr r2, 80022f4 <Displ_Orientation+0x18>)
 80022ee:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80022f2:	bf00      	nop
 80022f4:	08002305 	.word	0x08002305
 80022f8:	0800231d 	.word	0x0800231d
 80022fc:	08002335 	.word	0x08002335
 8002300:	0800234d 	.word	0x0800234d
		case Displ_Orientat_0:
			data[0]=ILI9XXX_MADCTL_0DEG;
 8002304:	4b1f      	ldr	r3, [pc, #124]	@ (8002384 <Displ_Orientation+0xa8>)
 8002306:	2288      	movs	r2, #136	@ 0x88
 8002308:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800230a:	4b1f      	ldr	r3, [pc, #124]	@ (8002388 <Displ_Orientation+0xac>)
 800230c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002310:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8002312:	4b1e      	ldr	r3, [pc, #120]	@ (800238c <Displ_Orientation+0xb0>)
 8002314:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002318:	801a      	strh	r2, [r3, #0]
			break;
 800231a:	e023      	b.n	8002364 <Displ_Orientation+0x88>
		case Displ_Orientat_90:
			data[0]=ILI9XXX_MADCTL_90DEG;
 800231c:	4b19      	ldr	r3, [pc, #100]	@ (8002384 <Displ_Orientation+0xa8>)
 800231e:	22e8      	movs	r2, #232	@ 0xe8
 8002320:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002322:	4b19      	ldr	r3, [pc, #100]	@ (8002388 <Displ_Orientation+0xac>)
 8002324:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002328:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800232a:	4b18      	ldr	r3, [pc, #96]	@ (800238c <Displ_Orientation+0xb0>)
 800232c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002330:	801a      	strh	r2, [r3, #0]
			break;
 8002332:	e017      	b.n	8002364 <Displ_Orientation+0x88>
		case Displ_Orientat_180:
			data[0]=ILI9XXX_MADCTL_180DEG;
 8002334:	4b13      	ldr	r3, [pc, #76]	@ (8002384 <Displ_Orientation+0xa8>)
 8002336:	2248      	movs	r2, #72	@ 0x48
 8002338:	701a      	strb	r2, [r3, #0]
			_height = DISPL_HEIGHT;
 800233a:	4b13      	ldr	r3, [pc, #76]	@ (8002388 <Displ_Orientation+0xac>)
 800233c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002340:	801a      	strh	r2, [r3, #0]
			_width = DISPL_WIDTH;
 8002342:	4b12      	ldr	r3, [pc, #72]	@ (800238c <Displ_Orientation+0xb0>)
 8002344:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002348:	801a      	strh	r2, [r3, #0]
			break;
 800234a:	e00b      	b.n	8002364 <Displ_Orientation+0x88>
		case Displ_Orientat_270:
			data[0]=ILI9XXX_MADCTL_270DEG;
 800234c:	4b0d      	ldr	r3, [pc, #52]	@ (8002384 <Displ_Orientation+0xa8>)
 800234e:	2228      	movs	r2, #40	@ 0x28
 8002350:	701a      	strb	r2, [r3, #0]
			_height = DISPL_WIDTH;
 8002352:	4b0d      	ldr	r3, [pc, #52]	@ (8002388 <Displ_Orientation+0xac>)
 8002354:	f44f 72a0 	mov.w	r2, #320	@ 0x140
 8002358:	801a      	strh	r2, [r3, #0]
			_width = DISPL_HEIGHT;
 800235a:	4b0c      	ldr	r3, [pc, #48]	@ (800238c <Displ_Orientation+0xb0>)
 800235c:	f44f 72f0 	mov.w	r2, #480	@ 0x1e0
 8002360:	801a      	strh	r2, [r3, #0]
			break;
 8002362:	bf00      	nop
	}
	Displ_WriteCommand(ILI9XXX_MADCTL);
 8002364:	2036      	movs	r0, #54	@ 0x36
 8002366:	f7ff feeb 	bl	8002140 <Displ_WriteCommand>
	Displ_WriteData(data,1,0);
 800236a:	2200      	movs	r2, #0
 800236c:	2101      	movs	r1, #1
 800236e:	4805      	ldr	r0, [pc, #20]	@ (8002384 <Displ_Orientation+0xa8>)
 8002370:	f7ff fef5 	bl	800215e <Displ_WriteData>
	current_orientation = orientation;  //stores active orientation into a global variable for touch routines
 8002374:	4a06      	ldr	r2, [pc, #24]	@ (8002390 <Displ_Orientation+0xb4>)
 8002376:	79fb      	ldrb	r3, [r7, #7]
 8002378:	7013      	strb	r3, [r2, #0]
}
 800237a:	bf00      	nop
 800237c:	3708      	adds	r7, #8
 800237e:	46bd      	mov	sp, r7
 8002380:	bd80      	pop	{r7, pc}
 8002382:	bf00      	nop
 8002384:	200005f4 	.word	0x200005f4
 8002388:	200005ec 	.word	0x200005ec
 800238c:	200005ea 	.word	0x200005ea
 8002390:	200005e8 	.word	0x200005e8

08002394 <HAL_SPI_ErrorCallback>:




void HAL_SPI_ErrorCallback(SPI_HandleTypeDef *hspi){
 8002394:	b480      	push	{r7}
 8002396:	b083      	sub	sp, #12
 8002398:	af00      	add	r7, sp, #0
 800239a:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 800239c:	687b      	ldr	r3, [r7, #4]
 800239e:	681b      	ldr	r3, [r3, #0]
 80023a0:	4a05      	ldr	r2, [pc, #20]	@ (80023b8 <HAL_SPI_ErrorCallback+0x24>)
 80023a2:	4293      	cmp	r3, r2
 80023a4:	d102      	bne.n	80023ac <HAL_SPI_ErrorCallback+0x18>
		Displ_SpiAvailable=1;
 80023a6:	4b05      	ldr	r3, [pc, #20]	@ (80023bc <HAL_SPI_ErrorCallback+0x28>)
 80023a8:	2201      	movs	r2, #1
 80023aa:	701a      	strb	r2, [r3, #0]
	}
}
 80023ac:	bf00      	nop
 80023ae:	370c      	adds	r7, #12
 80023b0:	46bd      	mov	sp, r7
 80023b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80023b6:	4770      	bx	lr
 80023b8:	40003800 	.word	0x40003800
 80023bc:	20000018 	.word	0x20000018

080023c0 <HAL_SPI_TxCpltCallback>:





void HAL_SPI_TxCpltCallback(SPI_HandleTypeDef *hspi) {
 80023c0:	b580      	push	{r7, lr}
 80023c2:	b082      	sub	sp, #8
 80023c4:	af00      	add	r7, sp, #0
 80023c6:	6078      	str	r0, [r7, #4]
	if (hspi->Instance==DISPL_SPI) {
 80023c8:	687b      	ldr	r3, [r7, #4]
 80023ca:	681b      	ldr	r3, [r3, #0]
 80023cc:	4a05      	ldr	r2, [pc, #20]	@ (80023e4 <HAL_SPI_TxCpltCallback+0x24>)
 80023ce:	4293      	cmp	r3, r2
 80023d0:	d104      	bne.n	80023dc <HAL_SPI_TxCpltCallback+0x1c>
		Displ_SpiAvailable=1;
 80023d2:	4b05      	ldr	r3, [pc, #20]	@ (80023e8 <HAL_SPI_TxCpltCallback+0x28>)
 80023d4:	2201      	movs	r2, #1
 80023d6:	701a      	strb	r2, [r3, #0]

	#ifdef DISPLAY_USING_TOUCHGFX
		DisplayDriver_TransferCompleteCallback();
 80023d8:	f00d ff96 	bl	8010308 <DisplayDriver_TransferCompleteCallback>
	#endif

	}
}
 80023dc:	bf00      	nop
 80023de:	3708      	adds	r7, #8
 80023e0:	46bd      	mov	sp, r7
 80023e2:	bd80      	pop	{r7, pc}
 80023e4:	40003800 	.word	0x40003800
 80023e8:	20000018 	.word	0x20000018

080023ec <Displ_BackLight>:
 *				'0'		set the display level to 0 (off)
 *				'I'		'Initialize'  IT MUST BE in dimming mode
 *              'Q'		do nothing, just return current level
 * @return		current backlight level
 **************************************/
uint32_t  Displ_BackLight(uint8_t cmd) {
 80023ec:	b580      	push	{r7, lr}
 80023ee:	b082      	sub	sp, #8
 80023f0:	af00      	add	r7, sp, #0
 80023f2:	4603      	mov	r3, r0
 80023f4:	71fb      	strb	r3, [r7, #7]

#ifdef DISPLAY_DIMMING_MODE
	static uint16_t memCCR1=0;  			//it stores CCR1 value while in stand-by
#endif

	switch (cmd) {
 80023f6:	79fb      	ldrb	r3, [r7, #7]
 80023f8:	2b51      	cmp	r3, #81	@ 0x51
 80023fa:	d00a      	beq.n	8002412 <Displ_BackLight+0x26>
 80023fc:	2b51      	cmp	r3, #81	@ 0x51
 80023fe:	dc16      	bgt.n	800242e <Displ_BackLight+0x42>
 8002400:	2b46      	cmp	r3, #70	@ 0x46
 8002402:	d008      	beq.n	8002416 <Displ_BackLight+0x2a>
 8002404:	2b46      	cmp	r3, #70	@ 0x46
 8002406:	dc12      	bgt.n	800242e <Displ_BackLight+0x42>
 8002408:	2b30      	cmp	r3, #48	@ 0x30
 800240a:	d00a      	beq.n	8002422 <Displ_BackLight+0x36>
 800240c:	2b31      	cmp	r3, #49	@ 0x31
 800240e:	d002      	beq.n	8002416 <Displ_BackLight+0x2a>
	  	HAL_TIM_PWM_Start(&BKLIT_T, BKLIT_CHANNEL);
		BKLIT_TIMER->BKLIT_CCR=BKLIT_INIT_LEVEL;
		break;
#endif
	default:
		break;
 8002410:	e00d      	b.n	800242e <Displ_BackLight+0x42>
		__NOP();
 8002412:	bf00      	nop
		break;
 8002414:	e00c      	b.n	8002430 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_SET);
 8002416:	2201      	movs	r2, #1
 8002418:	2140      	movs	r1, #64	@ 0x40
 800241a:	480a      	ldr	r0, [pc, #40]	@ (8002444 <Displ_BackLight+0x58>)
 800241c:	f001 ff60 	bl	80042e0 <HAL_GPIO_WritePin>
		break;
 8002420:	e006      	b.n	8002430 <Displ_BackLight+0x44>
		HAL_GPIO_WritePin(DISPL_LED_GPIO_Port, DISPL_LED_Pin, GPIO_PIN_RESET);
 8002422:	2200      	movs	r2, #0
 8002424:	2140      	movs	r1, #64	@ 0x40
 8002426:	4807      	ldr	r0, [pc, #28]	@ (8002444 <Displ_BackLight+0x58>)
 8002428:	f001 ff5a 	bl	80042e0 <HAL_GPIO_WritePin>
		break;
 800242c:	e000      	b.n	8002430 <Displ_BackLight+0x44>
		break;
 800242e:	bf00      	nop
	}
#ifndef DISPLAY_DIMMING_MODE
	return HAL_GPIO_ReadPin(DISPL_LED_GPIO_Port, DISPL_LED_Pin);
 8002430:	2140      	movs	r1, #64	@ 0x40
 8002432:	4804      	ldr	r0, [pc, #16]	@ (8002444 <Displ_BackLight+0x58>)
 8002434:	f001 ff3c 	bl	80042b0 <HAL_GPIO_ReadPin>
 8002438:	4603      	mov	r3, r0
#else
	return (BKLIT_TIMER->BKLIT_CCR);
#endif
}
 800243a:	4618      	mov	r0, r3
 800243c:	3708      	adds	r7, #8
 800243e:	46bd      	mov	sp, r7
 8002440:	bd80      	pop	{r7, pc}
 8002442:	bf00      	nop
 8002444:	40020000 	.word	0x40020000

08002448 <touchgfxDisplayDriverTransmitActive>:
 * @brief	TouchGFX integration: returns status of
 * 			communication to the display
 * @return	1 = there is a transmission running
 * 			0 = no transmission
 *********************************************************/
int touchgfxDisplayDriverTransmitActive(){
 8002448:	b480      	push	{r7}
 800244a:	af00      	add	r7, sp, #0
	// using the flag indicating SPI port availability
	// already used to drive communication via DMA
	return (!Displ_SpiAvailable);
 800244c:	4b06      	ldr	r3, [pc, #24]	@ (8002468 <touchgfxDisplayDriverTransmitActive+0x20>)
 800244e:	781b      	ldrb	r3, [r3, #0]
 8002450:	b2db      	uxtb	r3, r3
 8002452:	2b00      	cmp	r3, #0
 8002454:	bf0c      	ite	eq
 8002456:	2301      	moveq	r3, #1
 8002458:	2300      	movne	r3, #0
 800245a:	b2db      	uxtb	r3, r3
}
 800245c:	4618      	mov	r0, r3
 800245e:	46bd      	mov	sp, r7
 8002460:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002464:	4770      	bx	lr
 8002466:	bf00      	nop
 8002468:	20000018 	.word	0x20000018

0800246c <touchgfxDisplayDriverTransmitBlock>:

/*********************************************************
 * @brief	TouchGFX integration: write to display the
 * 			block indicated by parameters
 *********************************************************/
void touchgfxDisplayDriverTransmitBlock(const uint8_t* pixels, uint16_t x, uint16_t y, uint16_t w, uint16_t h){
 800246c:	b590      	push	{r4, r7, lr}
 800246e:	b085      	sub	sp, #20
 8002470:	af00      	add	r7, sp, #0
 8002472:	60f8      	str	r0, [r7, #12]
 8002474:	4608      	mov	r0, r1
 8002476:	4611      	mov	r1, r2
 8002478:	461a      	mov	r2, r3
 800247a:	4603      	mov	r3, r0
 800247c:	817b      	strh	r3, [r7, #10]
 800247e:	460b      	mov	r3, r1
 8002480:	813b      	strh	r3, [r7, #8]
 8002482:	4613      	mov	r3, r2
 8002484:	80fb      	strh	r3, [r7, #6]
	//START WRITING TO DISPLAY
		Displ_SetAddressWindow(x, y, x+w-1, y+h-1);
 8002486:	897a      	ldrh	r2, [r7, #10]
 8002488:	88fb      	ldrh	r3, [r7, #6]
 800248a:	4413      	add	r3, r2
 800248c:	b29b      	uxth	r3, r3
 800248e:	3b01      	subs	r3, #1
 8002490:	b29c      	uxth	r4, r3
 8002492:	893a      	ldrh	r2, [r7, #8]
 8002494:	8c3b      	ldrh	r3, [r7, #32]
 8002496:	4413      	add	r3, r2
 8002498:	b29b      	uxth	r3, r3
 800249a:	3b01      	subs	r3, #1
 800249c:	b29b      	uxth	r3, r3
 800249e:	8939      	ldrh	r1, [r7, #8]
 80024a0:	8978      	ldrh	r0, [r7, #10]
 80024a2:	4622      	mov	r2, r4
 80024a4:	f7ff feb2 	bl	800220c <Displ_SetAddressWindow>
		Displ_WriteData((uint8_t* )pixels,((w*h)<<1),1);
 80024a8:	88fb      	ldrh	r3, [r7, #6]
 80024aa:	8c3a      	ldrh	r2, [r7, #32]
 80024ac:	fb02 f303 	mul.w	r3, r2, r3
 80024b0:	005b      	lsls	r3, r3, #1
 80024b2:	2201      	movs	r2, #1
 80024b4:	4619      	mov	r1, r3
 80024b6:	68f8      	ldr	r0, [r7, #12]
 80024b8:	f7ff fe51 	bl	800215e <Displ_WriteData>
}
 80024bc:	bf00      	nop
 80024be:	3714      	adds	r7, #20
 80024c0:	46bd      	mov	sp, r7
 80024c2:	bd90      	pop	{r4, r7, pc}

080024c4 <Touch_HandlePenDownInterrupt>:
volatile uint8_t Touch_PenDown=0;						// set to 1 by pendown interrupt callback, reset to 0 by sw
volatile uint8_t Touch_Int_Enabled=1;					// while reading touch sensor touch interrupt handling is disabled through this flag



void Touch_HandlePenDownInterrupt (){
 80024c4:	b480      	push	{r7}
 80024c6:	af00      	add	r7, sp, #0
	if (Touch_Int_Enabled) {
 80024c8:	4b06      	ldr	r3, [pc, #24]	@ (80024e4 <Touch_HandlePenDownInterrupt+0x20>)
 80024ca:	781b      	ldrb	r3, [r3, #0]
 80024cc:	b2db      	uxtb	r3, r3
 80024ce:	2b00      	cmp	r3, #0
 80024d0:	d002      	beq.n	80024d8 <Touch_HandlePenDownInterrupt+0x14>
		Touch_PenDown=1;
 80024d2:	4b05      	ldr	r3, [pc, #20]	@ (80024e8 <Touch_HandlePenDownInterrupt+0x24>)
 80024d4:	2201      	movs	r2, #1
 80024d6:	701a      	strb	r2, [r3, #0]
	}
}
 80024d8:	bf00      	nop
 80024da:	46bd      	mov	sp, r7
 80024dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80024e0:	4770      	bx	lr
 80024e2:	bf00      	nop
 80024e4:	20000019 	.word	0x20000019
 80024e8:	200005f5 	.word	0x200005f5

080024ec <HAL_GPIO_EXTI_Callback>:



void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 80024ec:	b580      	push	{r7, lr}
 80024ee:	b082      	sub	sp, #8
 80024f0:	af00      	add	r7, sp, #0
 80024f2:	4603      	mov	r3, r0
 80024f4:	80fb      	strh	r3, [r7, #6]
	if (GPIO_Pin==TOUCH_INT_Pin){
 80024f6:	88fb      	ldrh	r3, [r7, #6]
 80024f8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 80024fc:	d101      	bne.n	8002502 <HAL_GPIO_EXTI_Callback+0x16>
		Touch_HandlePenDownInterrupt();
 80024fe:	f7ff ffe1 	bl	80024c4 <Touch_HandlePenDownInterrupt>
	}
}
 8002502:	bf00      	nop
 8002504:	3708      	adds	r7, #8
 8002506:	46bd      	mov	sp, r7
 8002508:	bd80      	pop	{r7, pc}
	...

0800250c <Touch_Select>:

/******************************************
 * @brief	enable touch, disabling display
 * 			set SPI baudrate as needed
 ******************************************/
void Touch_Select(void) {
 800250c:	b580      	push	{r7, lr}
 800250e:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		if (!HAL_GPIO_ReadPin(DISPL_CS_GPIO_Port, DISPL_CS_Pin)) {					// if display selected
 8002510:	2180      	movs	r1, #128	@ 0x80
 8002512:	4813      	ldr	r0, [pc, #76]	@ (8002560 <Touch_Select+0x54>)
 8002514:	f001 fecc 	bl	80042b0 <HAL_GPIO_ReadPin>
 8002518:	4603      	mov	r3, r0
 800251a:	2b00      	cmp	r3, #0
 800251c:	d10a      	bne.n	8002534 <Touch_Select+0x28>
			while (!Displ_SpiAvailable) {};  										// waiting for completing display communication. Flag is set to 1 by transmission-complete interrupt callback
 800251e:	bf00      	nop
 8002520:	4b10      	ldr	r3, [pc, #64]	@ (8002564 <Touch_Select+0x58>)
 8002522:	781b      	ldrb	r3, [r3, #0]
 8002524:	b2db      	uxtb	r3, r3
 8002526:	2b00      	cmp	r3, #0
 8002528:	d0fa      	beq.n	8002520 <Touch_Select+0x14>
			HAL_GPIO_WritePin(DISPL_CS_GPIO_Port, DISPL_CS_Pin, GPIO_PIN_SET); 		// unselect display
 800252a:	2201      	movs	r2, #1
 800252c:	2180      	movs	r1, #128	@ 0x80
 800252e:	480c      	ldr	r0, [pc, #48]	@ (8002560 <Touch_Select+0x54>)
 8002530:	f001 fed6 	bl	80042e0 <HAL_GPIO_WritePin>
		}
		SET_TOUCH_SPI_BAUDRATE;				   										//change SPI port speed as per display needs
 8002534:	4b0c      	ldr	r3, [pc, #48]	@ (8002568 <Touch_Select+0x5c>)
 8002536:	681a      	ldr	r2, [r3, #0]
 8002538:	490b      	ldr	r1, [pc, #44]	@ (8002568 <Touch_Select+0x5c>)
 800253a:	f64f 73c7 	movw	r3, #65479	@ 0xffc7
 800253e:	4013      	ands	r3, r2
 8002540:	600b      	str	r3, [r1, #0]
 8002542:	4b09      	ldr	r3, [pc, #36]	@ (8002568 <Touch_Select+0x5c>)
 8002544:	681b      	ldr	r3, [r3, #0]
 8002546:	4a08      	ldr	r2, [pc, #32]	@ (8002568 <Touch_Select+0x5c>)
 8002548:	f043 0338 	orr.w	r3, r3, #56	@ 0x38
 800254c:	6013      	str	r3, [r2, #0]
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_RESET);
 800254e:	2200      	movs	r2, #0
 8002550:	f44f 7100 	mov.w	r1, #512	@ 0x200
 8002554:	4805      	ldr	r0, [pc, #20]	@ (800256c <Touch_Select+0x60>)
 8002556:	f001 fec3 	bl	80042e0 <HAL_GPIO_WritePin>
	}
}
 800255a:	bf00      	nop
 800255c:	bd80      	pop	{r7, pc}
 800255e:	bf00      	nop
 8002560:	40020800 	.word	0x40020800
 8002564:	20000018 	.word	0x20000018
 8002568:	40003800 	.word	0x40003800
 800256c:	40020000 	.word	0x40020000

08002570 <Touch_UnSelect>:


/******************************************
 * @brief	disable touch
 ******************************************/
void Touch_UnSelect(void) {
 8002570:	b580      	push	{r7, lr}
 8002572:	af00      	add	r7, sp, #0
	if (TOUCH_SPI==DISPL_SPI){														// if touch and display share the same SPI port
		HAL_GPIO_WritePin(TOUCH_CS_GPIO_Port, TOUCH_CS_Pin, GPIO_PIN_SET);			// unselect touch
 8002574:	2201      	movs	r2, #1
 8002576:	f44f 7100 	mov.w	r1, #512	@ 0x200
 800257a:	4802      	ldr	r0, [pc, #8]	@ (8002584 <Touch_UnSelect+0x14>)
 800257c:	f001 feb0 	bl	80042e0 <HAL_GPIO_WritePin>
	}
}
 8002580:	bf00      	nop
 8002582:	bd80      	pop	{r7, pc}
 8002584:	40020000 	.word	0x40020000

08002588 <Touch_PollAxis>:
 * @params	axis	use only one of the three options X_AXIS, Y_AXIS or Z_AXIS
 * @return			the level measured on the "axis" axis
 * 					PLEASE NOTE this function should be only for internal usage
 * 								Use Touch_GetXYTouch() instead
 *******************************************************************************/
uint16_t Touch_PollAxis(uint8_t axis) {
 8002588:	b580      	push	{r7, lr}
 800258a:	b084      	sub	sp, #16
 800258c:	af00      	add	r7, sp, #0
 800258e:	4603      	mov	r3, r0
 8002590:	71fb      	strb	r3, [r7, #7]
	uint8_t poll[2] = {0,0};
 8002592:	2300      	movs	r3, #0
 8002594:	813b      	strh	r3, [r7, #8]
	uint32_t poll16;
	
	if (TOUCH_SPI==DISPL_SPI){				// if touch and display share the same SPI port
		Touch_Select();						// enable CS on touch device
 8002596:	f7ff ffb9 	bl	800250c <Touch_Select>
	}

	Touch_Int_Enabled=0;	//disable interrupt handling: sensor reading triggers interrupt
 800259a:	4b17      	ldr	r3, [pc, #92]	@ (80025f8 <Touch_PollAxis+0x70>)
 800259c:	2200      	movs	r2, #0
 800259e:	701a      	strb	r2, [r3, #0]
	// disable interrupt while enquiring the touch sensor because it triggers the interrupt pin
	HAL_NVIC_DisableIRQ(TOUCH_INT_EXTI_IRQn);
 80025a0:	2017      	movs	r0, #23
 80025a2:	f001 f91a 	bl	80037da <HAL_NVIC_DisableIRQ>

	HAL_SPI_Transmit(&TOUCH_SPI_PORT, &axis, 1, 10);
 80025a6:	1df9      	adds	r1, r7, #7
 80025a8:	230a      	movs	r3, #10
 80025aa:	2201      	movs	r2, #1
 80025ac:	4813      	ldr	r0, [pc, #76]	@ (80025fc <Touch_PollAxis+0x74>)
 80025ae:	f003 fd8a 	bl	80060c6 <HAL_SPI_Transmit>
	if (HAL_SPI_Receive(&TOUCH_SPI_PORT, poll, 2, 10) == HAL_OK) {
 80025b2:	f107 0108 	add.w	r1, r7, #8
 80025b6:	230a      	movs	r3, #10
 80025b8:	2202      	movs	r2, #2
 80025ba:	4810      	ldr	r0, [pc, #64]	@ (80025fc <Touch_PollAxis+0x74>)
 80025bc:	f003 fec7 	bl	800634e <HAL_SPI_Receive>
 80025c0:	4603      	mov	r3, r0
 80025c2:	2b00      	cmp	r3, #0
 80025c4:	d105      	bne.n	80025d2 <Touch_PollAxis+0x4a>
		poll16 = (poll[0]<<8) + poll[1];
 80025c6:	7a3b      	ldrb	r3, [r7, #8]
 80025c8:	021b      	lsls	r3, r3, #8
 80025ca:	7a7a      	ldrb	r2, [r7, #9]
 80025cc:	4413      	add	r3, r2
 80025ce:	60fb      	str	r3, [r7, #12]
 80025d0:	e001      	b.n	80025d6 <Touch_PollAxis+0x4e>
	}
	else {
		poll16 = 0;
 80025d2:	2300      	movs	r3, #0
 80025d4:	60fb      	str	r3, [r7, #12]
	}

//enable back interrupt after reading the sensor
	HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80025d6:	2017      	movs	r0, #23
 80025d8:	f001 f919 	bl	800380e <HAL_NVIC_ClearPendingIRQ>
	HAL_NVIC_EnableIRQ(TOUCH_INT_EXTI_IRQn);
 80025dc:	2017      	movs	r0, #23
 80025de:	f001 f8ee 	bl	80037be <HAL_NVIC_EnableIRQ>

	Touch_Int_Enabled=1;
 80025e2:	4b05      	ldr	r3, [pc, #20]	@ (80025f8 <Touch_PollAxis+0x70>)
 80025e4:	2201      	movs	r2, #1
 80025e6:	701a      	strb	r2, [r3, #0]

	if (TOUCH_SPI==DISPL_SPI){	// if touch and display share the same SPI port
		Touch_UnSelect();
 80025e8:	f7ff ffc2 	bl	8002570 <Touch_UnSelect>
	}

	return poll16;
 80025ec:	68fb      	ldr	r3, [r7, #12]
 80025ee:	b29b      	uxth	r3, r3
}
 80025f0:	4618      	mov	r0, r3
 80025f2:	3710      	adds	r7, #16
 80025f4:	46bd      	mov	sp, r7
 80025f6:	bd80      	pop	{r7, pc}
 80025f8:	20000019 	.word	0x20000019
 80025fc:	20000440 	.word	0x20000440

08002600 <Touch_GetXYtouch>:
 * @brief			polls touch screen and returning its XY screen position
 * 					that's regardless touch recording flag (interrupt received)
 * @return	x,y		in case isTouch=1 contain touch coordinates
 * 			isTouch is 1 if detected a touch, otherwise 0;
 *********************************************************************************/
void Touch_GetXYtouch(uint16_t *x, uint16_t *y, uint8_t *isTouch){
 8002600:	b580      	push	{r7, lr}
 8002602:	b08a      	sub	sp, #40	@ 0x28
 8002604:	af00      	add	r7, sp, #0
 8002606:	60f8      	str	r0, [r7, #12]
 8002608:	60b9      	str	r1, [r7, #8]
 800260a:	607a      	str	r2, [r7, #4]

const uint8_t pollingLevel=4;
 800260c:	2304      	movs	r3, #4
 800260e:	77fb      	strb	r3, [r7, #31]


// get the average value (over "1<<pollingLevel" attempts of X, Y and Z axes readings)

	// reading Z
	touch=0;
 8002610:	2300      	movs	r3, #0
 8002612:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002614:	2300      	movs	r3, #0
 8002616:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800261a:	e00c      	b.n	8002636 <Touch_GetXYtouch+0x36>
		touch += Touch_PollAxis(Z_AXIS);
 800261c:	20b0      	movs	r0, #176	@ 0xb0
 800261e:	f7ff ffb3 	bl	8002588 <Touch_PollAxis>
 8002622:	4603      	mov	r3, r0
 8002624:	461a      	mov	r2, r3
 8002626:	6a3b      	ldr	r3, [r7, #32]
 8002628:	4413      	add	r3, r2
 800262a:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800262c:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002630:	3301      	adds	r3, #1
 8002632:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002636:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800263a:	7ffb      	ldrb	r3, [r7, #31]
 800263c:	2101      	movs	r1, #1
 800263e:	fa01 f303 	lsl.w	r3, r1, r3
 8002642:	429a      	cmp	r2, r3
 8002644:	dbea      	blt.n	800261c <Touch_GetXYtouch+0x1c>
	touch >>= pollingLevel;  //get the average value
 8002646:	7ffb      	ldrb	r3, [r7, #31]
 8002648:	6a3a      	ldr	r2, [r7, #32]
 800264a:	fa22 f303 	lsr.w	r3, r2, r3
 800264e:	623b      	str	r3, [r7, #32]
	if (touch<=Z_THRESHOLD) {
 8002650:	6a3b      	ldr	r3, [r7, #32]
 8002652:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 8002656:	d806      	bhi.n	8002666 <Touch_GetXYtouch+0x66>
		*isTouch=0;
 8002658:	687b      	ldr	r3, [r7, #4]
 800265a:	2200      	movs	r2, #0
 800265c:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 800265e:	2017      	movs	r0, #23
 8002660:	f001 f8d5 	bl	800380e <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 8002664:	e0b2      	b.n	80027cc <Touch_GetXYtouch+0x1cc>
	}

	// reading X
	touch=0;
 8002666:	2300      	movs	r3, #0
 8002668:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 800266a:	2300      	movs	r3, #0
 800266c:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002670:	e00c      	b.n	800268c <Touch_GetXYtouch+0x8c>
		touch += Touch_PollAxis(X_AXIS);
 8002672:	20d0      	movs	r0, #208	@ 0xd0
 8002674:	f7ff ff88 	bl	8002588 <Touch_PollAxis>
 8002678:	4603      	mov	r3, r0
 800267a:	461a      	mov	r2, r3
 800267c:	6a3b      	ldr	r3, [r7, #32]
 800267e:	4413      	add	r3, r2
 8002680:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 8002682:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002686:	3301      	adds	r3, #1
 8002688:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 800268c:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 8002690:	7ffb      	ldrb	r3, [r7, #31]
 8002692:	2101      	movs	r1, #1
 8002694:	fa01 f303 	lsl.w	r3, r1, r3
 8002698:	429a      	cmp	r2, r3
 800269a:	dbea      	blt.n	8002672 <Touch_GetXYtouch+0x72>
	touch >>= pollingLevel;  //get the average value
 800269c:	7ffb      	ldrb	r3, [r7, #31]
 800269e:	6a3a      	ldr	r2, [r7, #32]
 80026a0:	fa22 f303 	lsr.w	r3, r2, r3
 80026a4:	623b      	str	r3, [r7, #32]
	if (touch<=X_THRESHOLD) {
 80026a6:	6a3b      	ldr	r3, [r7, #32]
 80026a8:	f5b3 6fa0 	cmp.w	r3, #1280	@ 0x500
 80026ac:	d806      	bhi.n	80026bc <Touch_GetXYtouch+0xbc>
		*isTouch=0;
 80026ae:	687b      	ldr	r3, [r7, #4]
 80026b0:	2200      	movs	r2, #0
 80026b2:	701a      	strb	r2, [r3, #0]
		HAL_NVIC_ClearPendingIRQ(TOUCH_INT_EXTI_IRQn);
 80026b4:	2017      	movs	r0, #23
 80026b6:	f001 f8aa 	bl	800380e <HAL_NVIC_ClearPendingIRQ>
		return;	// no touch: return 0
 80026ba:	e087      	b.n	80027cc <Touch_GetXYtouch+0x1cc>
	}
	touchx=(AX*touch+BX);
 80026bc:	6a3b      	ldr	r3, [r7, #32]
 80026be:	ee07 3a90 	vmov	s15, r3
 80026c2:	eef8 7a67 	vcvt.f32.u32	s15, s15
 80026c6:	ed9f 7a43 	vldr	s14, [pc, #268]	@ 80027d4 <Touch_GetXYtouch+0x1d4>
 80026ca:	ee67 7a87 	vmul.f32	s15, s15, s14
 80026ce:	ed9f 7a42 	vldr	s14, [pc, #264]	@ 80027d8 <Touch_GetXYtouch+0x1d8>
 80026d2:	ee77 7a87 	vadd.f32	s15, s15, s14
 80026d6:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 80026da:	ee17 3a90 	vmov	r3, s15
 80026de:	61bb      	str	r3, [r7, #24]

	// reading Y - there is no a threshold for Y
	touch=0;
 80026e0:	2300      	movs	r3, #0
 80026e2:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026e4:	2300      	movs	r3, #0
 80026e6:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 80026ea:	e00c      	b.n	8002706 <Touch_GetXYtouch+0x106>
		touch += Touch_PollAxis(Y_AXIS);
 80026ec:	2090      	movs	r0, #144	@ 0x90
 80026ee:	f7ff ff4b 	bl	8002588 <Touch_PollAxis>
 80026f2:	4603      	mov	r3, r0
 80026f4:	461a      	mov	r2, r3
 80026f6:	6a3b      	ldr	r3, [r7, #32]
 80026f8:	4413      	add	r3, r2
 80026fa:	623b      	str	r3, [r7, #32]
	for (k=0;k<(1<<pollingLevel);k++)
 80026fc:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 8002700:	3301      	adds	r3, #1
 8002702:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
 8002706:	f897 2027 	ldrb.w	r2, [r7, #39]	@ 0x27
 800270a:	7ffb      	ldrb	r3, [r7, #31]
 800270c:	2101      	movs	r1, #1
 800270e:	fa01 f303 	lsl.w	r3, r1, r3
 8002712:	429a      	cmp	r2, r3
 8002714:	dbea      	blt.n	80026ec <Touch_GetXYtouch+0xec>
	touch >>= pollingLevel; //get the average value
 8002716:	7ffb      	ldrb	r3, [r7, #31]
 8002718:	6a3a      	ldr	r2, [r7, #32]
 800271a:	fa22 f303 	lsr.w	r3, r2, r3
 800271e:	623b      	str	r3, [r7, #32]

	touchy=(AY*touch+BY);
 8002720:	6a3b      	ldr	r3, [r7, #32]
 8002722:	ee07 3a90 	vmov	s15, r3
 8002726:	eef8 7a67 	vcvt.f32.u32	s15, s15
 800272a:	ed9f 7a2c 	vldr	s14, [pc, #176]	@ 80027dc <Touch_GetXYtouch+0x1dc>
 800272e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002732:	ed9f 7a2b 	vldr	s14, [pc, #172]	@ 80027e0 <Touch_GetXYtouch+0x1e0>
 8002736:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800273a:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800273e:	ee17 3a90 	vmov	r3, s15
 8002742:	617b      	str	r3, [r7, #20]


//having X and Y axis average values
// calculating coordinates as per screen orientation
	switch (current_orientation)
 8002744:	4b27      	ldr	r3, [pc, #156]	@ (80027e4 <Touch_GetXYtouch+0x1e4>)
 8002746:	781b      	ldrb	r3, [r3, #0]
 8002748:	2b03      	cmp	r3, #3
 800274a:	d83b      	bhi.n	80027c4 <Touch_GetXYtouch+0x1c4>
 800274c:	a201      	add	r2, pc, #4	@ (adr r2, 8002754 <Touch_GetXYtouch+0x154>)
 800274e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8002752:	bf00      	nop
 8002754:	08002765 	.word	0x08002765
 8002758:	08002777 	.word	0x08002777
 800275c:	0800278f 	.word	0x0800278f
 8002760:	080027ad 	.word	0x080027ad
	{
	case TOUCH0:
		*x=touchx;
 8002764:	69bb      	ldr	r3, [r7, #24]
 8002766:	b29a      	uxth	r2, r3
 8002768:	68fb      	ldr	r3, [r7, #12]
 800276a:	801a      	strh	r2, [r3, #0]
		*y=touchy;
 800276c:	697b      	ldr	r3, [r7, #20]
 800276e:	b29a      	uxth	r2, r3
 8002770:	68bb      	ldr	r3, [r7, #8]
 8002772:	801a      	strh	r2, [r3, #0]
		break;
 8002774:	e026      	b.n	80027c4 <Touch_GetXYtouch+0x1c4>
	case TOUCH90:
		*x=touchy;
 8002776:	697b      	ldr	r3, [r7, #20]
 8002778:	b29a      	uxth	r2, r3
 800277a:	68fb      	ldr	r3, [r7, #12]
 800277c:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_WIDTH-touchx);
 800277e:	69bb      	ldr	r3, [r7, #24]
 8002780:	b29b      	uxth	r3, r3
 8002782:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002786:	b29a      	uxth	r2, r3
 8002788:	68bb      	ldr	r3, [r7, #8]
 800278a:	801a      	strh	r2, [r3, #0]
		break;
 800278c:	e01a      	b.n	80027c4 <Touch_GetXYtouch+0x1c4>
	case TOUCH180:
		*x=(TOUCH_0_WIDTH-touchx);
 800278e:	69bb      	ldr	r3, [r7, #24]
 8002790:	b29b      	uxth	r3, r3
 8002792:	f5c3 73a0 	rsb	r3, r3, #320	@ 0x140
 8002796:	b29a      	uxth	r2, r3
 8002798:	68fb      	ldr	r3, [r7, #12]
 800279a:	801a      	strh	r2, [r3, #0]
		*y=(TOUCH_0_HEIGHT - touchy);
 800279c:	697b      	ldr	r3, [r7, #20]
 800279e:	b29b      	uxth	r3, r3
 80027a0:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 80027a4:	b29a      	uxth	r2, r3
 80027a6:	68bb      	ldr	r3, [r7, #8]
 80027a8:	801a      	strh	r2, [r3, #0]
		break;
 80027aa:	e00b      	b.n	80027c4 <Touch_GetXYtouch+0x1c4>
	case TOUCH270:
		*x=(TOUCH_0_HEIGHT- touchy);
 80027ac:	697b      	ldr	r3, [r7, #20]
 80027ae:	b29b      	uxth	r3, r3
 80027b0:	f5c3 73f0 	rsb	r3, r3, #480	@ 0x1e0
 80027b4:	b29a      	uxth	r2, r3
 80027b6:	68fb      	ldr	r3, [r7, #12]
 80027b8:	801a      	strh	r2, [r3, #0]
		*y=touchx;
 80027ba:	69bb      	ldr	r3, [r7, #24]
 80027bc:	b29a      	uxth	r2, r3
 80027be:	68bb      	ldr	r3, [r7, #8]
 80027c0:	801a      	strh	r2, [r3, #0]
		break;
 80027c2:	bf00      	nop
	}

// set flag indicating there was a touch
	*isTouch=1;
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	2201      	movs	r2, #1
 80027c8:	701a      	strb	r2, [r3, #0]
	return;
 80027ca:	bf00      	nop
}
 80027cc:	3728      	adds	r7, #40	@ 0x28
 80027ce:	46bd      	mov	sp, r7
 80027d0:	bd80      	pop	{r7, pc}
 80027d2:	bf00      	nop
 80027d4:	bc378034 	.word	0xbc378034
 80027d8:	43a80000 	.word	0x43a80000
 80027dc:	3c87fcb9 	.word	0x3c87fcb9
 80027e0:	4225851f 	.word	0x4225851f
 80027e4:	200005e8 	.word	0x200005e8

080027e8 <Touch_GotATouch>:
 * 						(use "2" in main loop activating touchgfxSignalVSync()
 * @returns		1	if recorded a touch
 * 				0	if no touch recorded
 ***********************************************************/

uint8_t Touch_GotATouch(uint8_t reset) {
 80027e8:	b580      	push	{r7, lr}
 80027ea:	b084      	sub	sp, #16
 80027ec:	af00      	add	r7, sp, #0
 80027ee:	4603      	mov	r3, r0
 80027f0:	71fb      	strb	r3, [r7, #7]
static uint32_t touchTime=0;
uint8_t result = Touch_PenDown;
 80027f2:	4b10      	ldr	r3, [pc, #64]	@ (8002834 <Touch_GotATouch+0x4c>)
 80027f4:	781b      	ldrb	r3, [r3, #0]
 80027f6:	73fb      	strb	r3, [r7, #15]

//	if (result)
//		result=Touch_PollTouch();

	if (reset==2){
 80027f8:	79fb      	ldrb	r3, [r7, #7]
 80027fa:	2b02      	cmp	r3, #2
 80027fc:	d10f      	bne.n	800281e <Touch_GotATouch+0x36>
		if ((HAL_GetTick()-touchTime) >= TOUCHGFX_TIMING)
 80027fe:	f000 f92f 	bl	8002a60 <HAL_GetTick>
 8002802:	4602      	mov	r2, r0
 8002804:	4b0c      	ldr	r3, [pc, #48]	@ (8002838 <Touch_GotATouch+0x50>)
 8002806:	681b      	ldr	r3, [r3, #0]
 8002808:	1ad3      	subs	r3, r2, r3
 800280a:	2b3b      	cmp	r3, #59	@ 0x3b
 800280c:	d905      	bls.n	800281a <Touch_GotATouch+0x32>
			touchTime=HAL_GetTick();
 800280e:	f000 f927 	bl	8002a60 <HAL_GetTick>
 8002812:	4603      	mov	r3, r0
 8002814:	4a08      	ldr	r2, [pc, #32]	@ (8002838 <Touch_GotATouch+0x50>)
 8002816:	6013      	str	r3, [r2, #0]
 8002818:	e001      	b.n	800281e <Touch_GotATouch+0x36>
		else
			result=0;
 800281a:	2300      	movs	r3, #0
 800281c:	73fb      	strb	r3, [r7, #15]
	}
	if (reset==1)
 800281e:	79fb      	ldrb	r3, [r7, #7]
 8002820:	2b01      	cmp	r3, #1
 8002822:	d102      	bne.n	800282a <Touch_GotATouch+0x42>
		Touch_PenDown=0;
 8002824:	4b03      	ldr	r3, [pc, #12]	@ (8002834 <Touch_GotATouch+0x4c>)
 8002826:	2200      	movs	r2, #0
 8002828:	701a      	strb	r2, [r3, #0]
	return result;
 800282a:	7bfb      	ldrb	r3, [r7, #15]
}
 800282c:	4618      	mov	r0, r3
 800282e:	3710      	adds	r7, #16
 8002830:	46bd      	mov	sp, r7
 8002832:	bd80      	pop	{r7, pc}
 8002834:	200005f5 	.word	0x200005f5
 8002838:	200005f8 	.word	0x200005f8

0800283c <Touch_TouchGFXSampleTouch>:
 *			then, into STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
 *			change "return false;"
 *			into:  "return ((bool) Touch_TouchGFXSampleTouch(&x, &y));"
 * 			that's enough for touch integration in TouchGFX
***********************************************************/
uint8_t Touch_TouchGFXSampleTouch(int32_t *x, int32_t *y){
 800283c:	b580      	push	{r7, lr}
 800283e:	b084      	sub	sp, #16
 8002840:	af00      	add	r7, sp, #0
 8002842:	6078      	str	r0, [r7, #4]
 8002844:	6039      	str	r1, [r7, #0]
	//	sTouchData result;
	uint8_t isTouch=0;				// preset to no touch
 8002846:	2300      	movs	r3, #0
 8002848:	73fb      	strb	r3, [r7, #15]
	uint16_t xx=0,yy=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX ones (int32_t)
 800284a:	2300      	movs	r3, #0
 800284c:	81bb      	strh	r3, [r7, #12]
 800284e:	2300      	movs	r3, #0
 8002850:	817b      	strh	r3, [r7, #10]
	static uint8_t flipTouch=0;		// switches 0/1, on every function call, until sensor is touched allowing to return key repeat
	static uint32_t touchTime=1; 	// tick value get on the first touch. 0 means display untouched.
	static uint16_t avgXX=0, avgYY=0;  			// need to convert library coordinates type (uint16_t) to TouchGFX one (int32_t)
	static uint8_t repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;

	if (Touch_GotATouch(0)){				// polls interrupt flag not resetting it
 8002852:	2000      	movs	r0, #0
 8002854:	f7ff ffc8 	bl	80027e8 <Touch_GotATouch>
 8002858:	4603      	mov	r3, r0
 800285a:	2b00      	cmp	r3, #0
 800285c:	d060      	beq.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
		Touch_GetXYtouch(&xx,&yy,&isTouch);	// get touch sensor position
 800285e:	f107 020f 	add.w	r2, r7, #15
 8002862:	f107 010a 	add.w	r1, r7, #10
 8002866:	f107 030c 	add.w	r3, r7, #12
 800286a:	4618      	mov	r0, r3
 800286c:	f7ff fec8 	bl	8002600 <Touch_GetXYtouch>
		if (!isTouch){						// received a "no touch"
 8002870:	7bfb      	ldrb	r3, [r7, #15]
 8002872:	2b00      	cmp	r3, #0
 8002874:	d126      	bne.n	80028c4 <Touch_TouchGFXSampleTouch+0x88>
			if (touchTime != 0){			// if previously touched
 8002876:	4b2d      	ldr	r3, [pc, #180]	@ (800292c <Touch_TouchGFXSampleTouch+0xf0>)
 8002878:	681b      	ldr	r3, [r3, #0]
 800287a:	2b00      	cmp	r3, #0
 800287c:	d050      	beq.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
				if ((repetition--)>TOUCHGFX_REPEAT_NO+1){		// n-repetition of last touch sending
 800287e:	4b2c      	ldr	r3, [pc, #176]	@ (8002930 <Touch_TouchGFXSampleTouch+0xf4>)
 8002880:	781b      	ldrb	r3, [r3, #0]
 8002882:	1e5a      	subs	r2, r3, #1
 8002884:	b2d1      	uxtb	r1, r2
 8002886:	4a2a      	ldr	r2, [pc, #168]	@ (8002930 <Touch_TouchGFXSampleTouch+0xf4>)
 8002888:	7011      	strb	r1, [r2, #0]
 800288a:	2b01      	cmp	r3, #1
 800288c:	d90c      	bls.n	80028a8 <Touch_TouchGFXSampleTouch+0x6c>
					*x = avgXX;
 800288e:	4b29      	ldr	r3, [pc, #164]	@ (8002934 <Touch_TouchGFXSampleTouch+0xf8>)
 8002890:	881b      	ldrh	r3, [r3, #0]
 8002892:	461a      	mov	r2, r3
 8002894:	687b      	ldr	r3, [r7, #4]
 8002896:	601a      	str	r2, [r3, #0]
					*y = avgYY;
 8002898:	4b27      	ldr	r3, [pc, #156]	@ (8002938 <Touch_TouchGFXSampleTouch+0xfc>)
 800289a:	881b      	ldrh	r3, [r3, #0]
 800289c:	461a      	mov	r2, r3
 800289e:	683b      	ldr	r3, [r7, #0]
 80028a0:	601a      	str	r2, [r3, #0]
					isTouch=1;
 80028a2:	2301      	movs	r3, #1
 80028a4:	73fb      	strb	r3, [r7, #15]
 80028a6:	e03b      	b.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
				} else if ((repetition==255)) {  // that's -1
 80028a8:	4b21      	ldr	r3, [pc, #132]	@ (8002930 <Touch_TouchGFXSampleTouch+0xf4>)
 80028aa:	781b      	ldrb	r3, [r3, #0]
 80028ac:	2bff      	cmp	r3, #255	@ 0xff
 80028ae:	d137      	bne.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
					touchTime=0;					// set display as untouched
 80028b0:	4b1e      	ldr	r3, [pc, #120]	@ (800292c <Touch_TouchGFXSampleTouch+0xf0>)
 80028b2:	2200      	movs	r2, #0
 80028b4:	601a      	str	r2, [r3, #0]
					Touch_GotATouch(1);				// reset interrupt touch flag
 80028b6:	2001      	movs	r0, #1
 80028b8:	f7ff ff96 	bl	80027e8 <Touch_GotATouch>
					repetition=TOUCHGFX_REPEAT_IT+TOUCHGFX_REPEAT_NO;  //reset repetition counter
 80028bc:	4b1c      	ldr	r3, [pc, #112]	@ (8002930 <Touch_TouchGFXSampleTouch+0xf4>)
 80028be:	2200      	movs	r2, #0
 80028c0:	701a      	strb	r2, [r3, #0]
 80028c2:	e02d      	b.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
				}
			}
		} else {					// display touched

			if (touchTime==0) {				// if previously untouched
 80028c4:	4b19      	ldr	r3, [pc, #100]	@ (800292c <Touch_TouchGFXSampleTouch+0xf0>)
 80028c6:	681b      	ldr	r3, [r3, #0]
 80028c8:	2b00      	cmp	r3, #0
 80028ca:	d10e      	bne.n	80028ea <Touch_TouchGFXSampleTouch+0xae>
				avgXX =(xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028cc:	89ba      	ldrh	r2, [r7, #12]
 80028ce:	4b19      	ldr	r3, [pc, #100]	@ (8002934 <Touch_TouchGFXSampleTouch+0xf8>)
 80028d0:	801a      	strh	r2, [r3, #0]
				avgYY =(yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY;
 80028d2:	897a      	ldrh	r2, [r7, #10]
 80028d4:	4b18      	ldr	r3, [pc, #96]	@ (8002938 <Touch_TouchGFXSampleTouch+0xfc>)
 80028d6:	801a      	strh	r2, [r3, #0]
				touchTime=HAL_GetTick();	// store tick value at touch time
 80028d8:	f000 f8c2 	bl	8002a60 <HAL_GetTick>
 80028dc:	4603      	mov	r3, r0
 80028de:	4a13      	ldr	r2, [pc, #76]	@ (800292c <Touch_TouchGFXSampleTouch+0xf0>)
 80028e0:	6013      	str	r3, [r2, #0]
				flipTouch=1;				// set switch to send touch now
 80028e2:	4b16      	ldr	r3, [pc, #88]	@ (800293c <Touch_TouchGFXSampleTouch+0x100>)
 80028e4:	2201      	movs	r2, #1
 80028e6:	701a      	strb	r2, [r3, #0]
 80028e8:	e001      	b.n	80028ee <Touch_TouchGFXSampleTouch+0xb2>
			} else {						// not a new touch
				if (((HAL_GetTick()-touchTime)>DELAY_TO_KEY_REPEAT) && (DELAY_TO_KEY_REPEAT > 0)){	// if timeout to key repeat is over (0 means no key repeat)
 80028ea:	f000 f8b9 	bl	8002a60 <HAL_GetTick>
					flipTouch=!flipTouch;	// alternate every time function is called
				} else
					if (DELAY_TO_KEY_REPEAT == 0)
						flipTouch=0;		// (DELAY_TO_KEY_REPEAT == 0) means a single pulse, "-1" keep pulse as long as touch
			}
			if (flipTouch) { 	// return position only if the switching flag is on
 80028ee:	4b13      	ldr	r3, [pc, #76]	@ (800293c <Touch_TouchGFXSampleTouch+0x100>)
 80028f0:	781b      	ldrb	r3, [r3, #0]
 80028f2:	2b00      	cmp	r3, #0
 80028f4:	d012      	beq.n	800291c <Touch_TouchGFXSampleTouch+0xe0>
				*x=(((avgXX*(TOUCHGFX_MOVAVG-1)+((xx/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028f6:	89bb      	ldrh	r3, [r7, #12]
 80028f8:	461a      	mov	r2, r3
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	601a      	str	r2, [r3, #0]
				*y=(((avgYY*(TOUCHGFX_MOVAVG-1)+((yy/TOUCHGFX_SENSITIVITY)*TOUCHGFX_SENSITIVITY)))/TOUCHGFX_MOVAVG);
 80028fe:	897b      	ldrh	r3, [r7, #10]
 8002900:	461a      	mov	r2, r3
 8002902:	683b      	ldr	r3, [r7, #0]
 8002904:	601a      	str	r2, [r3, #0]
				avgXX = *x;
 8002906:	687b      	ldr	r3, [r7, #4]
 8002908:	681b      	ldr	r3, [r3, #0]
 800290a:	b29a      	uxth	r2, r3
 800290c:	4b09      	ldr	r3, [pc, #36]	@ (8002934 <Touch_TouchGFXSampleTouch+0xf8>)
 800290e:	801a      	strh	r2, [r3, #0]
				avgYY = *y;
 8002910:	683b      	ldr	r3, [r7, #0]
 8002912:	681b      	ldr	r3, [r3, #0]
 8002914:	b29a      	uxth	r2, r3
 8002916:	4b08      	ldr	r3, [pc, #32]	@ (8002938 <Touch_TouchGFXSampleTouch+0xfc>)
 8002918:	801a      	strh	r2, [r3, #0]
 800291a:	e001      	b.n	8002920 <Touch_TouchGFXSampleTouch+0xe4>
			} else {			// otherwise return "no touch" from display
				isTouch = 0;
 800291c:	2300      	movs	r3, #0
 800291e:	73fb      	strb	r3, [r7, #15]
			}
		}
	}
	return isTouch;
 8002920:	7bfb      	ldrb	r3, [r7, #15]
}
 8002922:	4618      	mov	r0, r3
 8002924:	3710      	adds	r7, #16
 8002926:	46bd      	mov	sp, r7
 8002928:	bd80      	pop	{r7, pc}
 800292a:	bf00      	nop
 800292c:	2000001c 	.word	0x2000001c
 8002930:	200005fc 	.word	0x200005fc
 8002934:	200005fe 	.word	0x200005fe
 8002938:	20000600 	.word	0x20000600
 800293c:	20000602 	.word	0x20000602

08002940 <Reset_Handler>:
 8002940:	f8df d034 	ldr.w	sp, [pc, #52]	@ 8002978 <LoopFillZerobss+0xe>
 8002944:	f7ff fb62 	bl	800200c <SystemInit>
 8002948:	480c      	ldr	r0, [pc, #48]	@ (800297c <LoopFillZerobss+0x12>)
 800294a:	490d      	ldr	r1, [pc, #52]	@ (8002980 <LoopFillZerobss+0x16>)
 800294c:	4a0d      	ldr	r2, [pc, #52]	@ (8002984 <LoopFillZerobss+0x1a>)
 800294e:	2300      	movs	r3, #0
 8002950:	e002      	b.n	8002958 <LoopCopyDataInit>

08002952 <CopyDataInit>:
 8002952:	58d4      	ldr	r4, [r2, r3]
 8002954:	50c4      	str	r4, [r0, r3]
 8002956:	3304      	adds	r3, #4

08002958 <LoopCopyDataInit>:
 8002958:	18c4      	adds	r4, r0, r3
 800295a:	428c      	cmp	r4, r1
 800295c:	d3f9      	bcc.n	8002952 <CopyDataInit>
 800295e:	4a0a      	ldr	r2, [pc, #40]	@ (8002988 <LoopFillZerobss+0x1e>)
 8002960:	4c0a      	ldr	r4, [pc, #40]	@ (800298c <LoopFillZerobss+0x22>)
 8002962:	2300      	movs	r3, #0
 8002964:	e001      	b.n	800296a <LoopFillZerobss>

08002966 <FillZerobss>:
 8002966:	6013      	str	r3, [r2, #0]
 8002968:	3204      	adds	r2, #4

0800296a <LoopFillZerobss>:
 800296a:	42a2      	cmp	r2, r4
 800296c:	d3fb      	bcc.n	8002966 <FillZerobss>
 800296e:	f023 fd1f 	bl	80263b0 <__libc_init_array>
 8002972:	f7fe fabb 	bl	8000eec <main>
 8002976:	4770      	bx	lr
 8002978:	20020000 	.word	0x20020000
 800297c:	20000000 	.word	0x20000000
 8002980:	2000010c 	.word	0x2000010c
 8002984:	08060358 	.word	0x08060358
 8002988:	20000320 	.word	0x20000320
 800298c:	20003c8c 	.word	0x20003c8c

08002990 <CAN1_RX0_IRQHandler>:
 8002990:	e7fe      	b.n	8002990 <CAN1_RX0_IRQHandler>
	...

08002994 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8002994:	b580      	push	{r7, lr}
 8002996:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 8002998:	4b0e      	ldr	r3, [pc, #56]	@ (80029d4 <HAL_Init+0x40>)
 800299a:	681b      	ldr	r3, [r3, #0]
 800299c:	4a0d      	ldr	r2, [pc, #52]	@ (80029d4 <HAL_Init+0x40>)
 800299e:	f443 7300 	orr.w	r3, r3, #512	@ 0x200
 80029a2:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 80029a4:	4b0b      	ldr	r3, [pc, #44]	@ (80029d4 <HAL_Init+0x40>)
 80029a6:	681b      	ldr	r3, [r3, #0]
 80029a8:	4a0a      	ldr	r2, [pc, #40]	@ (80029d4 <HAL_Init+0x40>)
 80029aa:	f443 6380 	orr.w	r3, r3, #1024	@ 0x400
 80029ae:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 80029b0:	4b08      	ldr	r3, [pc, #32]	@ (80029d4 <HAL_Init+0x40>)
 80029b2:	681b      	ldr	r3, [r3, #0]
 80029b4:	4a07      	ldr	r2, [pc, #28]	@ (80029d4 <HAL_Init+0x40>)
 80029b6:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80029ba:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 80029bc:	2003      	movs	r0, #3
 80029be:	f000 fed7 	bl	8003770 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 80029c2:	2000      	movs	r0, #0
 80029c4:	f000 f808 	bl	80029d8 <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 80029c8:	f7fe ff46 	bl	8001858 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 80029cc:	2300      	movs	r3, #0
}
 80029ce:	4618      	mov	r0, r3
 80029d0:	bd80      	pop	{r7, pc}
 80029d2:	bf00      	nop
 80029d4:	40023c00 	.word	0x40023c00

080029d8 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 80029d8:	b580      	push	{r7, lr}
 80029da:	b082      	sub	sp, #8
 80029dc:	af00      	add	r7, sp, #0
 80029de:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 80029e0:	4b12      	ldr	r3, [pc, #72]	@ (8002a2c <HAL_InitTick+0x54>)
 80029e2:	681a      	ldr	r2, [r3, #0]
 80029e4:	4b12      	ldr	r3, [pc, #72]	@ (8002a30 <HAL_InitTick+0x58>)
 80029e6:	781b      	ldrb	r3, [r3, #0]
 80029e8:	4619      	mov	r1, r3
 80029ea:	f44f 737a 	mov.w	r3, #1000	@ 0x3e8
 80029ee:	fbb3 f3f1 	udiv	r3, r3, r1
 80029f2:	fbb2 f3f3 	udiv	r3, r2, r3
 80029f6:	4618      	mov	r0, r3
 80029f8:	f000 fefd 	bl	80037f6 <HAL_SYSTICK_Config>
 80029fc:	4603      	mov	r3, r0
 80029fe:	2b00      	cmp	r3, #0
 8002a00:	d001      	beq.n	8002a06 <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 8002a02:	2301      	movs	r3, #1
 8002a04:	e00e      	b.n	8002a24 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8002a06:	687b      	ldr	r3, [r7, #4]
 8002a08:	2b0f      	cmp	r3, #15
 8002a0a:	d80a      	bhi.n	8002a22 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8002a0c:	2200      	movs	r2, #0
 8002a0e:	6879      	ldr	r1, [r7, #4]
 8002a10:	f04f 30ff 	mov.w	r0, #4294967295
 8002a14:	f000 feb7 	bl	8003786 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8002a18:	4a06      	ldr	r2, [pc, #24]	@ (8002a34 <HAL_InitTick+0x5c>)
 8002a1a:	687b      	ldr	r3, [r7, #4]
 8002a1c:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8002a1e:	2300      	movs	r3, #0
 8002a20:	e000      	b.n	8002a24 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 8002a22:	2301      	movs	r3, #1
}
 8002a24:	4618      	mov	r0, r3
 8002a26:	3708      	adds	r7, #8
 8002a28:	46bd      	mov	sp, r7
 8002a2a:	bd80      	pop	{r7, pc}
 8002a2c:	20000014 	.word	0x20000014
 8002a30:	20000024 	.word	0x20000024
 8002a34:	20000020 	.word	0x20000020

08002a38 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 8002a38:	b480      	push	{r7}
 8002a3a:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 8002a3c:	4b06      	ldr	r3, [pc, #24]	@ (8002a58 <HAL_IncTick+0x20>)
 8002a3e:	781b      	ldrb	r3, [r3, #0]
 8002a40:	461a      	mov	r2, r3
 8002a42:	4b06      	ldr	r3, [pc, #24]	@ (8002a5c <HAL_IncTick+0x24>)
 8002a44:	681b      	ldr	r3, [r3, #0]
 8002a46:	4413      	add	r3, r2
 8002a48:	4a04      	ldr	r2, [pc, #16]	@ (8002a5c <HAL_IncTick+0x24>)
 8002a4a:	6013      	str	r3, [r2, #0]
}
 8002a4c:	bf00      	nop
 8002a4e:	46bd      	mov	sp, r7
 8002a50:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a54:	4770      	bx	lr
 8002a56:	bf00      	nop
 8002a58:	20000024 	.word	0x20000024
 8002a5c:	20000604 	.word	0x20000604

08002a60 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 8002a60:	b480      	push	{r7}
 8002a62:	af00      	add	r7, sp, #0
  return uwTick;
 8002a64:	4b03      	ldr	r3, [pc, #12]	@ (8002a74 <HAL_GetTick+0x14>)
 8002a66:	681b      	ldr	r3, [r3, #0]
}
 8002a68:	4618      	mov	r0, r3
 8002a6a:	46bd      	mov	sp, r7
 8002a6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a70:	4770      	bx	lr
 8002a72:	bf00      	nop
 8002a74:	20000604 	.word	0x20000604

08002a78 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 8002a78:	b580      	push	{r7, lr}
 8002a7a:	b084      	sub	sp, #16
 8002a7c:	af00      	add	r7, sp, #0
 8002a7e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002a80:	f7ff ffee 	bl	8002a60 <HAL_GetTick>
 8002a84:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 8002a86:	687b      	ldr	r3, [r7, #4]
 8002a88:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002a8a:	68fb      	ldr	r3, [r7, #12]
 8002a8c:	f1b3 3fff 	cmp.w	r3, #4294967295
 8002a90:	d005      	beq.n	8002a9e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002a92:	4b0a      	ldr	r3, [pc, #40]	@ (8002abc <HAL_Delay+0x44>)
 8002a94:	781b      	ldrb	r3, [r3, #0]
 8002a96:	461a      	mov	r2, r3
 8002a98:	68fb      	ldr	r3, [r7, #12]
 8002a9a:	4413      	add	r3, r2
 8002a9c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002a9e:	bf00      	nop
 8002aa0:	f7ff ffde 	bl	8002a60 <HAL_GetTick>
 8002aa4:	4602      	mov	r2, r0
 8002aa6:	68bb      	ldr	r3, [r7, #8]
 8002aa8:	1ad3      	subs	r3, r2, r3
 8002aaa:	68fa      	ldr	r2, [r7, #12]
 8002aac:	429a      	cmp	r2, r3
 8002aae:	d8f7      	bhi.n	8002aa0 <HAL_Delay+0x28>
  {
  }
}
 8002ab0:	bf00      	nop
 8002ab2:	bf00      	nop
 8002ab4:	3710      	adds	r7, #16
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	bd80      	pop	{r7, pc}
 8002aba:	bf00      	nop
 8002abc:	20000024 	.word	0x20000024

08002ac0 <HAL_ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Init(ADC_HandleTypeDef *hadc)
{
 8002ac0:	b580      	push	{r7, lr}
 8002ac2:	b084      	sub	sp, #16
 8002ac4:	af00      	add	r7, sp, #0
 8002ac6:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef tmp_hal_status = HAL_OK;
 8002ac8:	2300      	movs	r3, #0
 8002aca:	73fb      	strb	r3, [r7, #15]

  /* Check ADC handle */
  if (hadc == NULL)
 8002acc:	687b      	ldr	r3, [r7, #4]
 8002ace:	2b00      	cmp	r3, #0
 8002ad0:	d101      	bne.n	8002ad6 <HAL_ADC_Init+0x16>
  {
    return HAL_ERROR;
 8002ad2:	2301      	movs	r3, #1
 8002ad4:	e033      	b.n	8002b3e <HAL_ADC_Init+0x7e>
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
  {
    assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));
  }

  if (hadc->State == HAL_ADC_STATE_RESET)
 8002ad6:	687b      	ldr	r3, [r7, #4]
 8002ad8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ada:	2b00      	cmp	r3, #0
 8002adc:	d109      	bne.n	8002af2 <HAL_ADC_Init+0x32>

    /* Init the low level hardware */
    hadc->MspInitCallback(hadc);
#else
    /* Init the low level hardware */
    HAL_ADC_MspInit(hadc);
 8002ade:	6878      	ldr	r0, [r7, #4]
 8002ae0:	f7fe fee2 	bl	80018a8 <HAL_ADC_MspInit>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Initialize ADC error code */
    ADC_CLEAR_ERRORCODE(hadc);
 8002ae4:	687b      	ldr	r3, [r7, #4]
 8002ae6:	2200      	movs	r2, #0
 8002ae8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Allocate lock resource and initialize it */
    hadc->Lock = HAL_UNLOCKED;
 8002aea:	687b      	ldr	r3, [r7, #4]
 8002aec:	2200      	movs	r2, #0
 8002aee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
  }

  /* Configuration of ADC parameters if previous preliminary actions are      */
  /* correctly completed.                                                     */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002af6:	f003 0310 	and.w	r3, r3, #16
 8002afa:	2b00      	cmp	r3, #0
 8002afc:	d118      	bne.n	8002b30 <HAL_ADC_Init+0x70>
  {
    /* Set ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002afe:	687b      	ldr	r3, [r7, #4]
 8002b00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b02:	f423 5388 	bic.w	r3, r3, #4352	@ 0x1100
 8002b06:	f023 0302 	bic.w	r3, r3, #2
 8002b0a:	f043 0202 	orr.w	r2, r3, #2
 8002b0e:	687b      	ldr	r3, [r7, #4]
 8002b10:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_REG_BUSY | HAL_ADC_STATE_INJ_BUSY,
                      HAL_ADC_STATE_BUSY_INTERNAL);

    /* Set ADC parameters */
    ADC_Init(hadc);
 8002b12:	6878      	ldr	r0, [r7, #4]
 8002b14:	f000 fb92 	bl	800323c <ADC_Init>

    /* Set ADC error code to none */
    ADC_CLEAR_ERRORCODE(hadc);
 8002b18:	687b      	ldr	r3, [r7, #4]
 8002b1a:	2200      	movs	r2, #0
 8002b1c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Set the ADC state */
    ADC_STATE_CLR_SET(hadc->State,
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b22:	f023 0303 	bic.w	r3, r3, #3
 8002b26:	f043 0201 	orr.w	r2, r3, #1
 8002b2a:	687b      	ldr	r3, [r7, #4]
 8002b2c:	641a      	str	r2, [r3, #64]	@ 0x40
 8002b2e:	e001      	b.n	8002b34 <HAL_ADC_Init+0x74>
                      HAL_ADC_STATE_BUSY_INTERNAL,
                      HAL_ADC_STATE_READY);
  }
  else
  {
    tmp_hal_status = HAL_ERROR;
 8002b30:	2301      	movs	r3, #1
 8002b32:	73fb      	strb	r3, [r7, #15]
  }

  /* Release Lock */
  __HAL_UNLOCK(hadc);
 8002b34:	687b      	ldr	r3, [r7, #4]
 8002b36:	2200      	movs	r2, #0
 8002b38:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return tmp_hal_status;
 8002b3c:	7bfb      	ldrb	r3, [r7, #15]
}
 8002b3e:	4618      	mov	r0, r3
 8002b40:	3710      	adds	r7, #16
 8002b42:	46bd      	mov	sp, r7
 8002b44:	bd80      	pop	{r7, pc}

08002b46 <HAL_ADC_IRQHandler>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
void HAL_ADC_IRQHandler(ADC_HandleTypeDef *hadc)
{
 8002b46:	b580      	push	{r7, lr}
 8002b48:	b086      	sub	sp, #24
 8002b4a:	af00      	add	r7, sp, #0
 8002b4c:	6078      	str	r0, [r7, #4]
  uint32_t tmp1 = 0U, tmp2 = 0U;
 8002b4e:	2300      	movs	r3, #0
 8002b50:	617b      	str	r3, [r7, #20]
 8002b52:	2300      	movs	r3, #0
 8002b54:	613b      	str	r3, [r7, #16]

  uint32_t tmp_sr = hadc->Instance->SR;
 8002b56:	687b      	ldr	r3, [r7, #4]
 8002b58:	681b      	ldr	r3, [r3, #0]
 8002b5a:	681b      	ldr	r3, [r3, #0]
 8002b5c:	60fb      	str	r3, [r7, #12]
  uint32_t tmp_cr1 = hadc->Instance->CR1;
 8002b5e:	687b      	ldr	r3, [r7, #4]
 8002b60:	681b      	ldr	r3, [r3, #0]
 8002b62:	685b      	ldr	r3, [r3, #4]
 8002b64:	60bb      	str	r3, [r7, #8]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_REGULAR_LENGTH(hadc->Init.NbrOfConversion));
  assert_param(IS_ADC_EOCSelection(hadc->Init.EOCSelection));

  tmp1 = tmp_sr & ADC_FLAG_EOC;
 8002b66:	68fb      	ldr	r3, [r7, #12]
 8002b68:	f003 0302 	and.w	r3, r3, #2
 8002b6c:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_EOC;
 8002b6e:	68bb      	ldr	r3, [r7, #8]
 8002b70:	f003 0320 	and.w	r3, r3, #32
 8002b74:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for regular channels */
  if (tmp1 && tmp2)
 8002b76:	697b      	ldr	r3, [r7, #20]
 8002b78:	2b00      	cmp	r3, #0
 8002b7a:	d049      	beq.n	8002c10 <HAL_ADC_IRQHandler+0xca>
 8002b7c:	693b      	ldr	r3, [r7, #16]
 8002b7e:	2b00      	cmp	r3, #0
 8002b80:	d046      	beq.n	8002c10 <HAL_ADC_IRQHandler+0xca>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002b82:	687b      	ldr	r3, [r7, #4]
 8002b84:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b86:	f003 0310 	and.w	r3, r3, #16
 8002b8a:	2b00      	cmp	r3, #0
 8002b8c:	d105      	bne.n	8002b9a <HAL_ADC_IRQHandler+0x54>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 8002b8e:	687b      	ldr	r3, [r7, #4]
 8002b90:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002b92:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8002b96:	687b      	ldr	r3, [r7, #4]
 8002b98:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	681b      	ldr	r3, [r3, #0]
 8002b9e:	689b      	ldr	r3, [r3, #8]
 8002ba0:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002ba4:	2b00      	cmp	r3, #0
 8002ba6:	d12b      	bne.n	8002c00 <HAL_ADC_IRQHandler+0xba>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002ba8:	687b      	ldr	r3, [r7, #4]
 8002baa:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 8002bac:	2b00      	cmp	r3, #0
 8002bae:	d127      	bne.n	8002c00 <HAL_ADC_IRQHandler+0xba>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002bb0:	687b      	ldr	r3, [r7, #4]
 8002bb2:	681b      	ldr	r3, [r3, #0]
 8002bb4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002bb6:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8002bba:	2b00      	cmp	r3, #0
 8002bbc:	d006      	beq.n	8002bcc <HAL_ADC_IRQHandler+0x86>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 8002bbe:	687b      	ldr	r3, [r7, #4]
 8002bc0:	681b      	ldr	r3, [r3, #0]
 8002bc2:	689b      	ldr	r3, [r3, #8]
 8002bc4:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8002bc8:	2b00      	cmp	r3, #0
 8002bca:	d119      	bne.n	8002c00 <HAL_ADC_IRQHandler+0xba>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 8002bcc:	687b      	ldr	r3, [r7, #4]
 8002bce:	681b      	ldr	r3, [r3, #0]
 8002bd0:	685a      	ldr	r2, [r3, #4]
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	681b      	ldr	r3, [r3, #0]
 8002bd6:	f022 0220 	bic.w	r2, r2, #32
 8002bda:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 8002bdc:	687b      	ldr	r3, [r7, #4]
 8002bde:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002be0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8002be4:	687b      	ldr	r3, [r7, #4]
 8002be6:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002be8:	687b      	ldr	r3, [r7, #4]
 8002bea:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bec:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002bf0:	2b00      	cmp	r3, #0
 8002bf2:	d105      	bne.n	8002c00 <HAL_ADC_IRQHandler+0xba>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002bf4:	687b      	ldr	r3, [r7, #4]
 8002bf6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002bf8:	f043 0201 	orr.w	r2, r3, #1
 8002bfc:	687b      	ldr	r3, [r7, #4]
 8002bfe:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 8002c00:	6878      	ldr	r0, [r7, #4]
 8002c02:	f000 f9c1 	bl	8002f88 <HAL_ADC_ConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear regular group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_STRT | ADC_FLAG_EOC);
 8002c06:	687b      	ldr	r3, [r7, #4]
 8002c08:	681b      	ldr	r3, [r3, #0]
 8002c0a:	f06f 0212 	mvn.w	r2, #18
 8002c0e:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_JEOC;
 8002c10:	68fb      	ldr	r3, [r7, #12]
 8002c12:	f003 0304 	and.w	r3, r3, #4
 8002c16:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_JEOC;
 8002c18:	68bb      	ldr	r3, [r7, #8]
 8002c1a:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8002c1e:	613b      	str	r3, [r7, #16]
  /* Check End of conversion flag for injected channels */
  if (tmp1 && tmp2)
 8002c20:	697b      	ldr	r3, [r7, #20]
 8002c22:	2b00      	cmp	r3, #0
 8002c24:	d057      	beq.n	8002cd6 <HAL_ADC_IRQHandler+0x190>
 8002c26:	693b      	ldr	r3, [r7, #16]
 8002c28:	2b00      	cmp	r3, #0
 8002c2a:	d054      	beq.n	8002cd6 <HAL_ADC_IRQHandler+0x190>
  {
    /* Update state machine on conversion status if not in error state */
    if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL))
 8002c2c:	687b      	ldr	r3, [r7, #4]
 8002c2e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c30:	f003 0310 	and.w	r3, r3, #16
 8002c34:	2b00      	cmp	r3, #0
 8002c36:	d105      	bne.n	8002c44 <HAL_ADC_IRQHandler+0xfe>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_INJ_EOC);
 8002c38:	687b      	ldr	r3, [r7, #4]
 8002c3a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002c3c:	f443 5200 	orr.w	r2, r3, #8192	@ 0x2000
 8002c40:	687b      	ldr	r3, [r7, #4]
 8002c42:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Determine whether any further conversion upcoming on group injected  */
    /* by external trigger, scan sequence on going or by automatic injected */
    /* conversion from group regular (same conditions as group regular      */
    /* interruption disabling above).                                       */
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c44:	687b      	ldr	r3, [r7, #4]
 8002c46:	681b      	ldr	r3, [r3, #0]
 8002c48:	689b      	ldr	r3, [r3, #8]
 8002c4a:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d139      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c52:	687b      	ldr	r3, [r7, #4]
 8002c54:	681b      	ldr	r3, [r3, #0]
 8002c56:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002c58:	f403 1340 	and.w	r3, r3, #3145728	@ 0x300000
    if (ADC_IS_SOFTWARE_START_INJECTED(hadc)                    &&
 8002c5c:	2b00      	cmp	r3, #0
 8002c5e:	d006      	beq.n	8002c6e <HAL_ADC_IRQHandler+0x128>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	681b      	ldr	r3, [r3, #0]
 8002c64:	689b      	ldr	r3, [r3, #8]
 8002c66:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->JSQR, ADC_JSQR_JL)  ||
 8002c6a:	2b00      	cmp	r3, #0
 8002c6c:	d12b      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c6e:	687b      	ldr	r3, [r7, #4]
 8002c70:	681b      	ldr	r3, [r3, #0]
 8002c72:	685b      	ldr	r3, [r3, #4]
 8002c74:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)) &&
 8002c78:	2b00      	cmp	r3, #0
 8002c7a:	d124      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c7c:	687b      	ldr	r3, [r7, #4]
 8002c7e:	681b      	ldr	r3, [r3, #0]
 8002c80:	689b      	ldr	r3, [r3, #8]
 8002c82:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
        (HAL_IS_BIT_CLR(hadc->Instance->CR1, ADC_CR1_JAUTO) &&
 8002c86:	2b00      	cmp	r3, #0
 8002c88:	d11d      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
          (hadc->Init.ContinuousConvMode == DISABLE))))
 8002c8a:	687b      	ldr	r3, [r7, #4]
 8002c8c:	7e1b      	ldrb	r3, [r3, #24]
         (ADC_IS_SOFTWARE_START_REGULAR(hadc)       &&
 8002c8e:	2b00      	cmp	r3, #0
 8002c90:	d119      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
    {
      /* Disable ADC end of single conversion interrupt on group injected */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_JEOC);
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	681b      	ldr	r3, [r3, #0]
 8002c96:	685a      	ldr	r2, [r3, #4]
 8002c98:	687b      	ldr	r3, [r7, #4]
 8002c9a:	681b      	ldr	r3, [r3, #0]
 8002c9c:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8002ca0:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_INJ_BUSY);
 8002ca2:	687b      	ldr	r3, [r7, #4]
 8002ca4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002ca6:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8002caa:	687b      	ldr	r3, [r7, #4]
 8002cac:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_REG_BUSY))
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cb2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d105      	bne.n	8002cc6 <HAL_ADC_IRQHandler+0x180>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 8002cba:	687b      	ldr	r3, [r7, #4]
 8002cbc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002cbe:	f043 0201 	orr.w	r2, r3, #1
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	641a      	str	r2, [r3, #64]	@ 0x40
    /* Conversion complete callback */
    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->InjectedConvCpltCallback(hadc);
#else
    HAL_ADCEx_InjectedConvCpltCallback(hadc);
 8002cc6:	6878      	ldr	r0, [r7, #4]
 8002cc8:	f000 fc36 	bl	8003538 <HAL_ADCEx_InjectedConvCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear injected group conversion flag */
    __HAL_ADC_CLEAR_FLAG(hadc, (ADC_FLAG_JSTRT | ADC_FLAG_JEOC));
 8002ccc:	687b      	ldr	r3, [r7, #4]
 8002cce:	681b      	ldr	r3, [r3, #0]
 8002cd0:	f06f 020c 	mvn.w	r2, #12
 8002cd4:	601a      	str	r2, [r3, #0]
  }

  tmp1 = tmp_sr & ADC_FLAG_AWD;
 8002cd6:	68fb      	ldr	r3, [r7, #12]
 8002cd8:	f003 0301 	and.w	r3, r3, #1
 8002cdc:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_AWD;
 8002cde:	68bb      	ldr	r3, [r7, #8]
 8002ce0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8002ce4:	613b      	str	r3, [r7, #16]
  /* Check Analog watchdog flag */
  if (tmp1 && tmp2)
 8002ce6:	697b      	ldr	r3, [r7, #20]
 8002ce8:	2b00      	cmp	r3, #0
 8002cea:	d017      	beq.n	8002d1c <HAL_ADC_IRQHandler+0x1d6>
 8002cec:	693b      	ldr	r3, [r7, #16]
 8002cee:	2b00      	cmp	r3, #0
 8002cf0:	d014      	beq.n	8002d1c <HAL_ADC_IRQHandler+0x1d6>
  {
    if (__HAL_ADC_GET_FLAG(hadc, ADC_FLAG_AWD))
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	681b      	ldr	r3, [r3, #0]
 8002cf6:	681b      	ldr	r3, [r3, #0]
 8002cf8:	f003 0301 	and.w	r3, r3, #1
 8002cfc:	2b01      	cmp	r3, #1
 8002cfe:	d10d      	bne.n	8002d1c <HAL_ADC_IRQHandler+0x1d6>
    {
      /* Set ADC state */
      SET_BIT(hadc->State, HAL_ADC_STATE_AWD1);
 8002d00:	687b      	ldr	r3, [r7, #4]
 8002d02:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002d04:	f443 3280 	orr.w	r2, r3, #65536	@ 0x10000
 8002d08:	687b      	ldr	r3, [r7, #4]
 8002d0a:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Level out of window callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
      hadc->LevelOutOfWindowCallback(hadc);
#else
      HAL_ADC_LevelOutOfWindowCallback(hadc);
 8002d0c:	6878      	ldr	r0, [r7, #4]
 8002d0e:	f000 f94f 	bl	8002fb0 <HAL_ADC_LevelOutOfWindowCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

      /* Clear the ADC analog watchdog flag */
      __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_AWD);
 8002d12:	687b      	ldr	r3, [r7, #4]
 8002d14:	681b      	ldr	r3, [r3, #0]
 8002d16:	f06f 0201 	mvn.w	r2, #1
 8002d1a:	601a      	str	r2, [r3, #0]
    }
  }

  tmp1 = tmp_sr & ADC_FLAG_OVR;
 8002d1c:	68fb      	ldr	r3, [r7, #12]
 8002d1e:	f003 0320 	and.w	r3, r3, #32
 8002d22:	617b      	str	r3, [r7, #20]
  tmp2 = tmp_cr1 & ADC_IT_OVR;
 8002d24:	68bb      	ldr	r3, [r7, #8]
 8002d26:	f003 6380 	and.w	r3, r3, #67108864	@ 0x4000000
 8002d2a:	613b      	str	r3, [r7, #16]
  /* Check Overrun flag */
  if (tmp1 && tmp2)
 8002d2c:	697b      	ldr	r3, [r7, #20]
 8002d2e:	2b00      	cmp	r3, #0
 8002d30:	d015      	beq.n	8002d5e <HAL_ADC_IRQHandler+0x218>
 8002d32:	693b      	ldr	r3, [r7, #16]
 8002d34:	2b00      	cmp	r3, #0
 8002d36:	d012      	beq.n	8002d5e <HAL_ADC_IRQHandler+0x218>
    /* Note: On STM32F4, ADC overrun can be set through other parameters    */
    /*       refer to description of parameter "EOCSelection" for more      */
    /*       details.                                                       */

    /* Set ADC error code to overrun */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_OVR);
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002d3c:	f043 0202 	orr.w	r2, r3, #2
 8002d40:	687b      	ldr	r3, [r7, #4]
 8002d42:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Clear ADC overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d44:	687b      	ldr	r3, [r7, #4]
 8002d46:	681b      	ldr	r3, [r3, #0]
 8002d48:	f06f 0220 	mvn.w	r2, #32
 8002d4c:	601a      	str	r2, [r3, #0]

    /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ErrorCallback(hadc);
#else
    HAL_ADC_ErrorCallback(hadc);
 8002d4e:	6878      	ldr	r0, [r7, #4]
 8002d50:	f000 f938 	bl	8002fc4 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */

    /* Clear the Overrun flag */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_OVR);
 8002d54:	687b      	ldr	r3, [r7, #4]
 8002d56:	681b      	ldr	r3, [r3, #0]
 8002d58:	f06f 0220 	mvn.w	r2, #32
 8002d5c:	601a      	str	r2, [r3, #0]
  }
}
 8002d5e:	bf00      	nop
 8002d60:	3718      	adds	r7, #24
 8002d62:	46bd      	mov	sp, r7
 8002d64:	bd80      	pop	{r7, pc}
	...

08002d68 <HAL_ADC_Start_DMA>:
  * @param  pData The destination Buffer address.
  * @param  Length The length of data to be transferred from ADC peripheral to memory.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_ADC_Start_DMA(ADC_HandleTypeDef *hadc, uint32_t *pData, uint32_t Length)
{
 8002d68:	b580      	push	{r7, lr}
 8002d6a:	b086      	sub	sp, #24
 8002d6c:	af00      	add	r7, sp, #0
 8002d6e:	60f8      	str	r0, [r7, #12]
 8002d70:	60b9      	str	r1, [r7, #8]
 8002d72:	607a      	str	r2, [r7, #4]
  __IO uint32_t counter = 0U;
 8002d74:	2300      	movs	r3, #0
 8002d76:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_FUNCTIONAL_STATE(hadc->Init.ContinuousConvMode));
  assert_param(IS_ADC_EXT_TRIG_EDGE(hadc->Init.ExternalTrigConvEdge));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002d78:	68fb      	ldr	r3, [r7, #12]
 8002d7a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002d7e:	2b01      	cmp	r3, #1
 8002d80:	d101      	bne.n	8002d86 <HAL_ADC_Start_DMA+0x1e>
 8002d82:	2302      	movs	r3, #2
 8002d84:	e0e9      	b.n	8002f5a <HAL_ADC_Start_DMA+0x1f2>
 8002d86:	68fb      	ldr	r3, [r7, #12]
 8002d88:	2201      	movs	r2, #1
 8002d8a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Enable the ADC peripheral */
  /* Check if ADC peripheral is disabled in order to enable it and wait during
  Tstab time the ADC's stabilization */
  if ((hadc->Instance->CR2 & ADC_CR2_ADON) != ADC_CR2_ADON)
 8002d8e:	68fb      	ldr	r3, [r7, #12]
 8002d90:	681b      	ldr	r3, [r3, #0]
 8002d92:	689b      	ldr	r3, [r3, #8]
 8002d94:	f003 0301 	and.w	r3, r3, #1
 8002d98:	2b01      	cmp	r3, #1
 8002d9a:	d018      	beq.n	8002dce <HAL_ADC_Start_DMA+0x66>
  {
    /* Enable the Peripheral */
    __HAL_ADC_ENABLE(hadc);
 8002d9c:	68fb      	ldr	r3, [r7, #12]
 8002d9e:	681b      	ldr	r3, [r3, #0]
 8002da0:	689a      	ldr	r2, [r3, #8]
 8002da2:	68fb      	ldr	r3, [r7, #12]
 8002da4:	681b      	ldr	r3, [r3, #0]
 8002da6:	f042 0201 	orr.w	r2, r2, #1
 8002daa:	609a      	str	r2, [r3, #8]

    /* Delay for ADC stabilization time */
    /* Compute number of CPU cycles to wait for */
    counter = (ADC_STAB_DELAY_US * (SystemCoreClock / 1000000U));
 8002dac:	4b6d      	ldr	r3, [pc, #436]	@ (8002f64 <HAL_ADC_Start_DMA+0x1fc>)
 8002dae:	681b      	ldr	r3, [r3, #0]
 8002db0:	4a6d      	ldr	r2, [pc, #436]	@ (8002f68 <HAL_ADC_Start_DMA+0x200>)
 8002db2:	fba2 2303 	umull	r2, r3, r2, r3
 8002db6:	0c9a      	lsrs	r2, r3, #18
 8002db8:	4613      	mov	r3, r2
 8002dba:	005b      	lsls	r3, r3, #1
 8002dbc:	4413      	add	r3, r2
 8002dbe:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002dc0:	e002      	b.n	8002dc8 <HAL_ADC_Start_DMA+0x60>
    {
      counter--;
 8002dc2:	693b      	ldr	r3, [r7, #16]
 8002dc4:	3b01      	subs	r3, #1
 8002dc6:	613b      	str	r3, [r7, #16]
    while (counter != 0U)
 8002dc8:	693b      	ldr	r3, [r7, #16]
 8002dca:	2b00      	cmp	r3, #0
 8002dcc:	d1f9      	bne.n	8002dc2 <HAL_ADC_Start_DMA+0x5a>
    }
  }

  /* Check ADC DMA Mode                                                     */
  /* - disable the DMA Mode if it is already enabled                        */
  if ((hadc->Instance->CR2 & ADC_CR2_DMA) == ADC_CR2_DMA)
 8002dce:	68fb      	ldr	r3, [r7, #12]
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	689b      	ldr	r3, [r3, #8]
 8002dd4:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8002dd8:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8002ddc:	d107      	bne.n	8002dee <HAL_ADC_Start_DMA+0x86>
  {
    CLEAR_BIT(hadc->Instance->CR2, ADC_CR2_DMA);
 8002dde:	68fb      	ldr	r3, [r7, #12]
 8002de0:	681b      	ldr	r3, [r3, #0]
 8002de2:	689a      	ldr	r2, [r3, #8]
 8002de4:	68fb      	ldr	r3, [r7, #12]
 8002de6:	681b      	ldr	r3, [r3, #0]
 8002de8:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8002dec:	609a      	str	r2, [r3, #8]
  }

  /* Start conversion if ADC is effectively enabled */
  if (HAL_IS_BIT_SET(hadc->Instance->CR2, ADC_CR2_ADON))
 8002dee:	68fb      	ldr	r3, [r7, #12]
 8002df0:	681b      	ldr	r3, [r3, #0]
 8002df2:	689b      	ldr	r3, [r3, #8]
 8002df4:	f003 0301 	and.w	r3, r3, #1
 8002df8:	2b01      	cmp	r3, #1
 8002dfa:	f040 80a1 	bne.w	8002f40 <HAL_ADC_Start_DMA+0x1d8>
  {
    /* Set ADC state                                                          */
    /* - Clear state bitfield related to regular group conversion results     */
    /* - Set state bitfield related to regular group operation                */
    ADC_STATE_CLR_SET(hadc->State,
 8002dfe:	68fb      	ldr	r3, [r7, #12]
 8002e00:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e02:	f423 63e0 	bic.w	r3, r3, #1792	@ 0x700
 8002e06:	f023 0301 	bic.w	r3, r3, #1
 8002e0a:	f443 7280 	orr.w	r2, r3, #256	@ 0x100
 8002e0e:	68fb      	ldr	r3, [r7, #12]
 8002e10:	641a      	str	r2, [r3, #64]	@ 0x40
                      HAL_ADC_STATE_READY | HAL_ADC_STATE_REG_EOC | HAL_ADC_STATE_REG_OVR,
                      HAL_ADC_STATE_REG_BUSY);

    /* If conversions on group regular are also triggering group injected,    */
    /* update ADC state.                                                      */
    if (READ_BIT(hadc->Instance->CR1, ADC_CR1_JAUTO) != RESET)
 8002e12:	68fb      	ldr	r3, [r7, #12]
 8002e14:	681b      	ldr	r3, [r3, #0]
 8002e16:	685b      	ldr	r3, [r3, #4]
 8002e18:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8002e1c:	2b00      	cmp	r3, #0
 8002e1e:	d007      	beq.n	8002e30 <HAL_ADC_Start_DMA+0xc8>
    {
      ADC_STATE_CLR_SET(hadc->State, HAL_ADC_STATE_INJ_EOC, HAL_ADC_STATE_INJ_BUSY);
 8002e20:	68fb      	ldr	r3, [r7, #12]
 8002e22:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e24:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8002e28:	f443 5280 	orr.w	r2, r3, #4096	@ 0x1000
 8002e2c:	68fb      	ldr	r3, [r7, #12]
 8002e2e:	641a      	str	r2, [r3, #64]	@ 0x40
    }

    /* State machine update: Check if an injected conversion is ongoing */
    if (HAL_IS_BIT_SET(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 8002e30:	68fb      	ldr	r3, [r7, #12]
 8002e32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002e34:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 8002e38:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8002e3c:	d106      	bne.n	8002e4c <HAL_ADC_Start_DMA+0xe4>
    {
      /* Reset ADC error code fields related to conversions on group regular */
      CLEAR_BIT(hadc->ErrorCode, (HAL_ADC_ERROR_OVR | HAL_ADC_ERROR_DMA));
 8002e3e:	68fb      	ldr	r3, [r7, #12]
 8002e40:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002e42:	f023 0206 	bic.w	r2, r3, #6
 8002e46:	68fb      	ldr	r3, [r7, #12]
 8002e48:	645a      	str	r2, [r3, #68]	@ 0x44
 8002e4a:	e002      	b.n	8002e52 <HAL_ADC_Start_DMA+0xea>
    }
    else
    {
      /* Reset ADC all error code fields */
      ADC_CLEAR_ERRORCODE(hadc);
 8002e4c:	68fb      	ldr	r3, [r7, #12]
 8002e4e:	2200      	movs	r2, #0
 8002e50:	645a      	str	r2, [r3, #68]	@ 0x44
    }

    /* Process unlocked */
    /* Unlock before starting ADC conversions: in case of potential           */
    /* interruption, to let the process to ADC IRQ Handler.                   */
    __HAL_UNLOCK(hadc);
 8002e52:	68fb      	ldr	r3, [r7, #12]
 8002e54:	2200      	movs	r2, #0
 8002e56:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Pointer to the common control register to which is belonging hadc    */
    /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
    /* control register)                                                    */
    tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8002e5a:	4b44      	ldr	r3, [pc, #272]	@ (8002f6c <HAL_ADC_Start_DMA+0x204>)
 8002e5c:	617b      	str	r3, [r7, #20]

    /* Set the DMA transfer complete callback */
    hadc->DMA_Handle->XferCpltCallback = ADC_DMAConvCplt;
 8002e5e:	68fb      	ldr	r3, [r7, #12]
 8002e60:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e62:	4a43      	ldr	r2, [pc, #268]	@ (8002f70 <HAL_ADC_Start_DMA+0x208>)
 8002e64:	63da      	str	r2, [r3, #60]	@ 0x3c

    /* Set the DMA half transfer complete callback */
    hadc->DMA_Handle->XferHalfCpltCallback = ADC_DMAHalfConvCplt;
 8002e66:	68fb      	ldr	r3, [r7, #12]
 8002e68:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e6a:	4a42      	ldr	r2, [pc, #264]	@ (8002f74 <HAL_ADC_Start_DMA+0x20c>)
 8002e6c:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set the DMA error callback */
    hadc->DMA_Handle->XferErrorCallback = ADC_DMAError;
 8002e6e:	68fb      	ldr	r3, [r7, #12]
 8002e70:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8002e72:	4a41      	ldr	r2, [pc, #260]	@ (8002f78 <HAL_ADC_Start_DMA+0x210>)
 8002e74:	64da      	str	r2, [r3, #76]	@ 0x4c
    /* Manage ADC and DMA start: ADC overrun interruption, DMA start, ADC     */
    /* start (in case of SW start):                                           */

    /* Clear regular group conversion flag and overrun flag */
    /* (To ensure of no unknown state from potential previous ADC operations) */
    __HAL_ADC_CLEAR_FLAG(hadc, ADC_FLAG_EOC | ADC_FLAG_OVR);
 8002e76:	68fb      	ldr	r3, [r7, #12]
 8002e78:	681b      	ldr	r3, [r3, #0]
 8002e7a:	f06f 0222 	mvn.w	r2, #34	@ 0x22
 8002e7e:	601a      	str	r2, [r3, #0]

    /* Enable ADC overrun interrupt */
    __HAL_ADC_ENABLE_IT(hadc, ADC_IT_OVR);
 8002e80:	68fb      	ldr	r3, [r7, #12]
 8002e82:	681b      	ldr	r3, [r3, #0]
 8002e84:	685a      	ldr	r2, [r3, #4]
 8002e86:	68fb      	ldr	r3, [r7, #12]
 8002e88:	681b      	ldr	r3, [r3, #0]
 8002e8a:	f042 6280 	orr.w	r2, r2, #67108864	@ 0x4000000
 8002e8e:	605a      	str	r2, [r3, #4]

    /* Enable ADC DMA mode */
    hadc->Instance->CR2 |= ADC_CR2_DMA;
 8002e90:	68fb      	ldr	r3, [r7, #12]
 8002e92:	681b      	ldr	r3, [r3, #0]
 8002e94:	689a      	ldr	r2, [r3, #8]
 8002e96:	68fb      	ldr	r3, [r7, #12]
 8002e98:	681b      	ldr	r3, [r3, #0]
 8002e9a:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8002e9e:	609a      	str	r2, [r3, #8]

    /* Start the DMA channel */
    HAL_DMA_Start_IT(hadc->DMA_Handle, (uint32_t)&hadc->Instance->DR, (uint32_t)pData, Length);
 8002ea0:	68fb      	ldr	r3, [r7, #12]
 8002ea2:	6b98      	ldr	r0, [r3, #56]	@ 0x38
 8002ea4:	68fb      	ldr	r3, [r7, #12]
 8002ea6:	681b      	ldr	r3, [r3, #0]
 8002ea8:	334c      	adds	r3, #76	@ 0x4c
 8002eaa:	4619      	mov	r1, r3
 8002eac:	68ba      	ldr	r2, [r7, #8]
 8002eae:	687b      	ldr	r3, [r7, #4]
 8002eb0:	f000 fd86 	bl	80039c0 <HAL_DMA_Start_IT>

    /* Check if Multimode enabled */
    if (HAL_IS_BIT_CLR(tmpADC_Common->CCR, ADC_CCR_MULTI))
 8002eb4:	697b      	ldr	r3, [r7, #20]
 8002eb6:	685b      	ldr	r3, [r3, #4]
 8002eb8:	f003 031f 	and.w	r3, r3, #31
 8002ebc:	2b00      	cmp	r3, #0
 8002ebe:	d12a      	bne.n	8002f16 <HAL_ADC_Start_DMA+0x1ae>
    {
#if defined(ADC2) && defined(ADC3)
      if ((hadc->Instance == ADC1) || ((hadc->Instance == ADC2) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_0)) \
 8002ec0:	68fb      	ldr	r3, [r7, #12]
 8002ec2:	681b      	ldr	r3, [r3, #0]
 8002ec4:	4a2d      	ldr	r2, [pc, #180]	@ (8002f7c <HAL_ADC_Start_DMA+0x214>)
 8002ec6:	4293      	cmp	r3, r2
 8002ec8:	d015      	beq.n	8002ef6 <HAL_ADC_Start_DMA+0x18e>
 8002eca:	68fb      	ldr	r3, [r7, #12]
 8002ecc:	681b      	ldr	r3, [r3, #0]
 8002ece:	4a2c      	ldr	r2, [pc, #176]	@ (8002f80 <HAL_ADC_Start_DMA+0x218>)
 8002ed0:	4293      	cmp	r3, r2
 8002ed2:	d105      	bne.n	8002ee0 <HAL_ADC_Start_DMA+0x178>
 8002ed4:	4b25      	ldr	r3, [pc, #148]	@ (8002f6c <HAL_ADC_Start_DMA+0x204>)
 8002ed6:	685b      	ldr	r3, [r3, #4]
 8002ed8:	f003 031f 	and.w	r3, r3, #31
 8002edc:	2b00      	cmp	r3, #0
 8002ede:	d00a      	beq.n	8002ef6 <HAL_ADC_Start_DMA+0x18e>
          || ((hadc->Instance == ADC3) && ((ADC->CCR & ADC_CCR_MULTI_Msk) < ADC_CCR_MULTI_4)))
 8002ee0:	68fb      	ldr	r3, [r7, #12]
 8002ee2:	681b      	ldr	r3, [r3, #0]
 8002ee4:	4a27      	ldr	r2, [pc, #156]	@ (8002f84 <HAL_ADC_Start_DMA+0x21c>)
 8002ee6:	4293      	cmp	r3, r2
 8002ee8:	d136      	bne.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
 8002eea:	4b20      	ldr	r3, [pc, #128]	@ (8002f6c <HAL_ADC_Start_DMA+0x204>)
 8002eec:	685b      	ldr	r3, [r3, #4]
 8002eee:	f003 0310 	and.w	r3, r3, #16
 8002ef2:	2b00      	cmp	r3, #0
 8002ef4:	d130      	bne.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
      {
#endif /* ADC2 || ADC3 */
        /* if no external trigger present enable software conversion of regular channels */
        if ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET)
 8002ef6:	68fb      	ldr	r3, [r7, #12]
 8002ef8:	681b      	ldr	r3, [r3, #0]
 8002efa:	689b      	ldr	r3, [r3, #8]
 8002efc:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002f00:	2b00      	cmp	r3, #0
 8002f02:	d129      	bne.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
        {
          /* Enable the selected ADC software conversion for regular group */
          hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002f04:	68fb      	ldr	r3, [r7, #12]
 8002f06:	681b      	ldr	r3, [r3, #0]
 8002f08:	689a      	ldr	r2, [r3, #8]
 8002f0a:	68fb      	ldr	r3, [r7, #12]
 8002f0c:	681b      	ldr	r3, [r3, #0]
 8002f0e:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002f12:	609a      	str	r2, [r3, #8]
 8002f14:	e020      	b.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
#endif /* ADC2 || ADC3 */
    }
    else
    {
      /* if instance of handle correspond to ADC1 and  no external trigger present enable software conversion of regular channels */
      if ((hadc->Instance == ADC1) && ((hadc->Instance->CR2 & ADC_CR2_EXTEN) == RESET))
 8002f16:	68fb      	ldr	r3, [r7, #12]
 8002f18:	681b      	ldr	r3, [r3, #0]
 8002f1a:	4a18      	ldr	r2, [pc, #96]	@ (8002f7c <HAL_ADC_Start_DMA+0x214>)
 8002f1c:	4293      	cmp	r3, r2
 8002f1e:	d11b      	bne.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
 8002f20:	68fb      	ldr	r3, [r7, #12]
 8002f22:	681b      	ldr	r3, [r3, #0]
 8002f24:	689b      	ldr	r3, [r3, #8]
 8002f26:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8002f2a:	2b00      	cmp	r3, #0
 8002f2c:	d114      	bne.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
      {
        /* Enable the selected ADC software conversion for regular group */
        hadc->Instance->CR2 |= (uint32_t)ADC_CR2_SWSTART;
 8002f2e:	68fb      	ldr	r3, [r7, #12]
 8002f30:	681b      	ldr	r3, [r3, #0]
 8002f32:	689a      	ldr	r2, [r3, #8]
 8002f34:	68fb      	ldr	r3, [r7, #12]
 8002f36:	681b      	ldr	r3, [r3, #0]
 8002f38:	f042 4280 	orr.w	r2, r2, #1073741824	@ 0x40000000
 8002f3c:	609a      	str	r2, [r3, #8]
 8002f3e:	e00b      	b.n	8002f58 <HAL_ADC_Start_DMA+0x1f0>
    }
  }
  else
  {
    /* Update ADC state machine to error */
    SET_BIT(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL);
 8002f40:	68fb      	ldr	r3, [r7, #12]
 8002f42:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8002f44:	f043 0210 	orr.w	r2, r3, #16
 8002f48:	68fb      	ldr	r3, [r7, #12]
 8002f4a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Set ADC error code to ADC IP internal error */
    SET_BIT(hadc->ErrorCode, HAL_ADC_ERROR_INTERNAL);
 8002f4c:	68fb      	ldr	r3, [r7, #12]
 8002f4e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8002f50:	f043 0201 	orr.w	r2, r3, #1
 8002f54:	68fb      	ldr	r3, [r7, #12]
 8002f56:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Return function status */
  return HAL_OK;
 8002f58:	2300      	movs	r3, #0
}
 8002f5a:	4618      	mov	r0, r3
 8002f5c:	3718      	adds	r7, #24
 8002f5e:	46bd      	mov	sp, r7
 8002f60:	bd80      	pop	{r7, pc}
 8002f62:	bf00      	nop
 8002f64:	20000014 	.word	0x20000014
 8002f68:	431bde83 	.word	0x431bde83
 8002f6c:	40012300 	.word	0x40012300
 8002f70:	08003435 	.word	0x08003435
 8002f74:	080034ef 	.word	0x080034ef
 8002f78:	0800350b 	.word	0x0800350b
 8002f7c:	40012000 	.word	0x40012000
 8002f80:	40012100 	.word	0x40012100
 8002f84:	40012200 	.word	0x40012200

08002f88 <HAL_ADC_ConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f88:	b480      	push	{r7}
 8002f8a:	b083      	sub	sp, #12
 8002f8c:	af00      	add	r7, sp, #0
 8002f8e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvCpltCallback could be implemented in the user file
   */
}
 8002f90:	bf00      	nop
 8002f92:	370c      	adds	r7, #12
 8002f94:	46bd      	mov	sp, r7
 8002f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f9a:	4770      	bx	lr

08002f9c <HAL_ADC_ConvHalfCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ConvHalfCpltCallback(ADC_HandleTypeDef *hadc)
{
 8002f9c:	b480      	push	{r7}
 8002f9e:	b083      	sub	sp, #12
 8002fa0:	af00      	add	r7, sp, #0
 8002fa2:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ConvHalfCpltCallback could be implemented in the user file
   */
}
 8002fa4:	bf00      	nop
 8002fa6:	370c      	adds	r7, #12
 8002fa8:	46bd      	mov	sp, r7
 8002faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fae:	4770      	bx	lr

08002fb0 <HAL_ADC_LevelOutOfWindowCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_LevelOutOfWindowCallback(ADC_HandleTypeDef *hadc)
{
 8002fb0:	b480      	push	{r7}
 8002fb2:	b083      	sub	sp, #12
 8002fb4:	af00      	add	r7, sp, #0
 8002fb6:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_LevelOoutOfWindowCallback could be implemented in the user file
   */
}
 8002fb8:	bf00      	nop
 8002fba:	370c      	adds	r7, #12
 8002fbc:	46bd      	mov	sp, r7
 8002fbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fc2:	4770      	bx	lr

08002fc4 <HAL_ADC_ErrorCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADC_ErrorCallback(ADC_HandleTypeDef *hadc)
{
 8002fc4:	b480      	push	{r7}
 8002fc6:	b083      	sub	sp, #12
 8002fc8:	af00      	add	r7, sp, #0
 8002fca:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_ErrorCallback could be implemented in the user file
   */
}
 8002fcc:	bf00      	nop
 8002fce:	370c      	adds	r7, #12
 8002fd0:	46bd      	mov	sp, r7
 8002fd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002fd6:	4770      	bx	lr

08002fd8 <HAL_ADC_ConfigChannel>:
*         the configuration information for the specified ADC.
* @param  sConfig ADC configuration structure.
* @retval HAL status
*/
HAL_StatusTypeDef HAL_ADC_ConfigChannel(ADC_HandleTypeDef *hadc, ADC_ChannelConfTypeDef *sConfig)
{
 8002fd8:	b480      	push	{r7}
 8002fda:	b085      	sub	sp, #20
 8002fdc:	af00      	add	r7, sp, #0
 8002fde:	6078      	str	r0, [r7, #4]
 8002fe0:	6039      	str	r1, [r7, #0]
  __IO uint32_t counter = 0U;
 8002fe2:	2300      	movs	r3, #0
 8002fe4:	60bb      	str	r3, [r7, #8]
  assert_param(IS_ADC_CHANNEL(sConfig->Channel));
  assert_param(IS_ADC_REGULAR_RANK(sConfig->Rank));
  assert_param(IS_ADC_SAMPLE_TIME(sConfig->SamplingTime));

  /* Process locked */
  __HAL_LOCK(hadc);
 8002fe6:	687b      	ldr	r3, [r7, #4]
 8002fe8:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8002fec:	2b01      	cmp	r3, #1
 8002fee:	d101      	bne.n	8002ff4 <HAL_ADC_ConfigChannel+0x1c>
 8002ff0:	2302      	movs	r3, #2
 8002ff2:	e113      	b.n	800321c <HAL_ADC_ConfigChannel+0x244>
 8002ff4:	687b      	ldr	r3, [r7, #4]
 8002ff6:	2201      	movs	r2, #1
 8002ff8:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* if ADC_Channel_10 ... ADC_Channel_18 is selected */
  if (sConfig->Channel > ADC_CHANNEL_9)
 8002ffc:	683b      	ldr	r3, [r7, #0]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	2b09      	cmp	r3, #9
 8003002:	d925      	bls.n	8003050 <HAL_ADC_ConfigChannel+0x78>
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR1 &= ~ADC_SMPR1(ADC_SMPR1_SMP10, sConfig->Channel);
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	681b      	ldr	r3, [r3, #0]
 8003008:	68d9      	ldr	r1, [r3, #12]
 800300a:	683b      	ldr	r3, [r7, #0]
 800300c:	681b      	ldr	r3, [r3, #0]
 800300e:	b29b      	uxth	r3, r3
 8003010:	461a      	mov	r2, r3
 8003012:	4613      	mov	r3, r2
 8003014:	005b      	lsls	r3, r3, #1
 8003016:	4413      	add	r3, r2
 8003018:	3b1e      	subs	r3, #30
 800301a:	2207      	movs	r2, #7
 800301c:	fa02 f303 	lsl.w	r3, r2, r3
 8003020:	43da      	mvns	r2, r3
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	681b      	ldr	r3, [r3, #0]
 8003026:	400a      	ands	r2, r1
 8003028:	60da      	str	r2, [r3, #12]

    /* Set the new sample time */
    hadc->Instance->SMPR1 |= ADC_SMPR1(sConfig->SamplingTime, sConfig->Channel);
 800302a:	687b      	ldr	r3, [r7, #4]
 800302c:	681b      	ldr	r3, [r3, #0]
 800302e:	68d9      	ldr	r1, [r3, #12]
 8003030:	683b      	ldr	r3, [r7, #0]
 8003032:	689a      	ldr	r2, [r3, #8]
 8003034:	683b      	ldr	r3, [r7, #0]
 8003036:	681b      	ldr	r3, [r3, #0]
 8003038:	b29b      	uxth	r3, r3
 800303a:	4618      	mov	r0, r3
 800303c:	4603      	mov	r3, r0
 800303e:	005b      	lsls	r3, r3, #1
 8003040:	4403      	add	r3, r0
 8003042:	3b1e      	subs	r3, #30
 8003044:	409a      	lsls	r2, r3
 8003046:	687b      	ldr	r3, [r7, #4]
 8003048:	681b      	ldr	r3, [r3, #0]
 800304a:	430a      	orrs	r2, r1
 800304c:	60da      	str	r2, [r3, #12]
 800304e:	e022      	b.n	8003096 <HAL_ADC_ConfigChannel+0xbe>
  }
  else /* ADC_Channel include in ADC_Channel_[0..9] */
  {
    /* Clear the old sample time */
    hadc->Instance->SMPR2 &= ~ADC_SMPR2(ADC_SMPR2_SMP0, sConfig->Channel);
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	6919      	ldr	r1, [r3, #16]
 8003056:	683b      	ldr	r3, [r7, #0]
 8003058:	681b      	ldr	r3, [r3, #0]
 800305a:	b29b      	uxth	r3, r3
 800305c:	461a      	mov	r2, r3
 800305e:	4613      	mov	r3, r2
 8003060:	005b      	lsls	r3, r3, #1
 8003062:	4413      	add	r3, r2
 8003064:	2207      	movs	r2, #7
 8003066:	fa02 f303 	lsl.w	r3, r2, r3
 800306a:	43da      	mvns	r2, r3
 800306c:	687b      	ldr	r3, [r7, #4]
 800306e:	681b      	ldr	r3, [r3, #0]
 8003070:	400a      	ands	r2, r1
 8003072:	611a      	str	r2, [r3, #16]

    /* Set the new sample time */
    hadc->Instance->SMPR2 |= ADC_SMPR2(sConfig->SamplingTime, sConfig->Channel);
 8003074:	687b      	ldr	r3, [r7, #4]
 8003076:	681b      	ldr	r3, [r3, #0]
 8003078:	6919      	ldr	r1, [r3, #16]
 800307a:	683b      	ldr	r3, [r7, #0]
 800307c:	689a      	ldr	r2, [r3, #8]
 800307e:	683b      	ldr	r3, [r7, #0]
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	b29b      	uxth	r3, r3
 8003084:	4618      	mov	r0, r3
 8003086:	4603      	mov	r3, r0
 8003088:	005b      	lsls	r3, r3, #1
 800308a:	4403      	add	r3, r0
 800308c:	409a      	lsls	r2, r3
 800308e:	687b      	ldr	r3, [r7, #4]
 8003090:	681b      	ldr	r3, [r3, #0]
 8003092:	430a      	orrs	r2, r1
 8003094:	611a      	str	r2, [r3, #16]
  }

  /* For Rank 1 to 6 */
  if (sConfig->Rank < 7U)
 8003096:	683b      	ldr	r3, [r7, #0]
 8003098:	685b      	ldr	r3, [r3, #4]
 800309a:	2b06      	cmp	r3, #6
 800309c:	d824      	bhi.n	80030e8 <HAL_ADC_ConfigChannel+0x110>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR3 &= ~ADC_SQR3_RK(ADC_SQR3_SQ1, sConfig->Rank);
 800309e:	687b      	ldr	r3, [r7, #4]
 80030a0:	681b      	ldr	r3, [r3, #0]
 80030a2:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80030a4:	683b      	ldr	r3, [r7, #0]
 80030a6:	685a      	ldr	r2, [r3, #4]
 80030a8:	4613      	mov	r3, r2
 80030aa:	009b      	lsls	r3, r3, #2
 80030ac:	4413      	add	r3, r2
 80030ae:	3b05      	subs	r3, #5
 80030b0:	221f      	movs	r2, #31
 80030b2:	fa02 f303 	lsl.w	r3, r2, r3
 80030b6:	43da      	mvns	r2, r3
 80030b8:	687b      	ldr	r3, [r7, #4]
 80030ba:	681b      	ldr	r3, [r3, #0]
 80030bc:	400a      	ands	r2, r1
 80030be:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR3 |= ADC_SQR3_RK(sConfig->Channel, sConfig->Rank);
 80030c0:	687b      	ldr	r3, [r7, #4]
 80030c2:	681b      	ldr	r3, [r3, #0]
 80030c4:	6b59      	ldr	r1, [r3, #52]	@ 0x34
 80030c6:	683b      	ldr	r3, [r7, #0]
 80030c8:	681b      	ldr	r3, [r3, #0]
 80030ca:	b29b      	uxth	r3, r3
 80030cc:	4618      	mov	r0, r3
 80030ce:	683b      	ldr	r3, [r7, #0]
 80030d0:	685a      	ldr	r2, [r3, #4]
 80030d2:	4613      	mov	r3, r2
 80030d4:	009b      	lsls	r3, r3, #2
 80030d6:	4413      	add	r3, r2
 80030d8:	3b05      	subs	r3, #5
 80030da:	fa00 f203 	lsl.w	r2, r0, r3
 80030de:	687b      	ldr	r3, [r7, #4]
 80030e0:	681b      	ldr	r3, [r3, #0]
 80030e2:	430a      	orrs	r2, r1
 80030e4:	635a      	str	r2, [r3, #52]	@ 0x34
 80030e6:	e04c      	b.n	8003182 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 7 to 12 */
  else if (sConfig->Rank < 13U)
 80030e8:	683b      	ldr	r3, [r7, #0]
 80030ea:	685b      	ldr	r3, [r3, #4]
 80030ec:	2b0c      	cmp	r3, #12
 80030ee:	d824      	bhi.n	800313a <HAL_ADC_ConfigChannel+0x162>
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR2 &= ~ADC_SQR2_RK(ADC_SQR2_SQ7, sConfig->Rank);
 80030f0:	687b      	ldr	r3, [r7, #4]
 80030f2:	681b      	ldr	r3, [r3, #0]
 80030f4:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 80030f6:	683b      	ldr	r3, [r7, #0]
 80030f8:	685a      	ldr	r2, [r3, #4]
 80030fa:	4613      	mov	r3, r2
 80030fc:	009b      	lsls	r3, r3, #2
 80030fe:	4413      	add	r3, r2
 8003100:	3b23      	subs	r3, #35	@ 0x23
 8003102:	221f      	movs	r2, #31
 8003104:	fa02 f303 	lsl.w	r3, r2, r3
 8003108:	43da      	mvns	r2, r3
 800310a:	687b      	ldr	r3, [r7, #4]
 800310c:	681b      	ldr	r3, [r3, #0]
 800310e:	400a      	ands	r2, r1
 8003110:	631a      	str	r2, [r3, #48]	@ 0x30

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR2 |= ADC_SQR2_RK(sConfig->Channel, sConfig->Rank);
 8003112:	687b      	ldr	r3, [r7, #4]
 8003114:	681b      	ldr	r3, [r3, #0]
 8003116:	6b19      	ldr	r1, [r3, #48]	@ 0x30
 8003118:	683b      	ldr	r3, [r7, #0]
 800311a:	681b      	ldr	r3, [r3, #0]
 800311c:	b29b      	uxth	r3, r3
 800311e:	4618      	mov	r0, r3
 8003120:	683b      	ldr	r3, [r7, #0]
 8003122:	685a      	ldr	r2, [r3, #4]
 8003124:	4613      	mov	r3, r2
 8003126:	009b      	lsls	r3, r3, #2
 8003128:	4413      	add	r3, r2
 800312a:	3b23      	subs	r3, #35	@ 0x23
 800312c:	fa00 f203 	lsl.w	r2, r0, r3
 8003130:	687b      	ldr	r3, [r7, #4]
 8003132:	681b      	ldr	r3, [r3, #0]
 8003134:	430a      	orrs	r2, r1
 8003136:	631a      	str	r2, [r3, #48]	@ 0x30
 8003138:	e023      	b.n	8003182 <HAL_ADC_ConfigChannel+0x1aa>
  }
  /* For Rank 13 to 16 */
  else
  {
    /* Clear the old SQx bits for the selected rank */
    hadc->Instance->SQR1 &= ~ADC_SQR1_RK(ADC_SQR1_SQ13, sConfig->Rank);
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	681b      	ldr	r3, [r3, #0]
 800313e:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003140:	683b      	ldr	r3, [r7, #0]
 8003142:	685a      	ldr	r2, [r3, #4]
 8003144:	4613      	mov	r3, r2
 8003146:	009b      	lsls	r3, r3, #2
 8003148:	4413      	add	r3, r2
 800314a:	3b41      	subs	r3, #65	@ 0x41
 800314c:	221f      	movs	r2, #31
 800314e:	fa02 f303 	lsl.w	r3, r2, r3
 8003152:	43da      	mvns	r2, r3
 8003154:	687b      	ldr	r3, [r7, #4]
 8003156:	681b      	ldr	r3, [r3, #0]
 8003158:	400a      	ands	r2, r1
 800315a:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Set the SQx bits for the selected rank */
    hadc->Instance->SQR1 |= ADC_SQR1_RK(sConfig->Channel, sConfig->Rank);
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	681b      	ldr	r3, [r3, #0]
 8003160:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 8003162:	683b      	ldr	r3, [r7, #0]
 8003164:	681b      	ldr	r3, [r3, #0]
 8003166:	b29b      	uxth	r3, r3
 8003168:	4618      	mov	r0, r3
 800316a:	683b      	ldr	r3, [r7, #0]
 800316c:	685a      	ldr	r2, [r3, #4]
 800316e:	4613      	mov	r3, r2
 8003170:	009b      	lsls	r3, r3, #2
 8003172:	4413      	add	r3, r2
 8003174:	3b41      	subs	r3, #65	@ 0x41
 8003176:	fa00 f203 	lsl.w	r2, r0, r3
 800317a:	687b      	ldr	r3, [r7, #4]
 800317c:	681b      	ldr	r3, [r3, #0]
 800317e:	430a      	orrs	r2, r1
 8003180:	62da      	str	r2, [r3, #44]	@ 0x2c
  }

  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003182:	4b29      	ldr	r3, [pc, #164]	@ (8003228 <HAL_ADC_ConfigChannel+0x250>)
 8003184:	60fb      	str	r3, [r7, #12]

  /* if ADC1 Channel_18 is selected for VBAT Channel ennable VBATE */
  if ((hadc->Instance == ADC1) && (sConfig->Channel == ADC_CHANNEL_VBAT))
 8003186:	687b      	ldr	r3, [r7, #4]
 8003188:	681b      	ldr	r3, [r3, #0]
 800318a:	4a28      	ldr	r2, [pc, #160]	@ (800322c <HAL_ADC_ConfigChannel+0x254>)
 800318c:	4293      	cmp	r3, r2
 800318e:	d10f      	bne.n	80031b0 <HAL_ADC_ConfigChannel+0x1d8>
 8003190:	683b      	ldr	r3, [r7, #0]
 8003192:	681b      	ldr	r3, [r3, #0]
 8003194:	2b12      	cmp	r3, #18
 8003196:	d10b      	bne.n	80031b0 <HAL_ADC_ConfigChannel+0x1d8>
  {
    /* Disable the TEMPSENSOR channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_TSVREFE;
 8003198:	68fb      	ldr	r3, [r7, #12]
 800319a:	685b      	ldr	r3, [r3, #4]
 800319c:	f423 0200 	bic.w	r2, r3, #8388608	@ 0x800000
 80031a0:	68fb      	ldr	r3, [r7, #12]
 80031a2:	605a      	str	r2, [r3, #4]
    }
    /* Enable the VBAT channel*/
    tmpADC_Common->CCR |= ADC_CCR_VBATE;
 80031a4:	68fb      	ldr	r3, [r7, #12]
 80031a6:	685b      	ldr	r3, [r3, #4]
 80031a8:	f443 0280 	orr.w	r2, r3, #4194304	@ 0x400000
 80031ac:	68fb      	ldr	r3, [r7, #12]
 80031ae:	605a      	str	r2, [r3, #4]
  }

  /* if ADC1 Channel_16 or Channel_18 is selected for Temperature sensor or
     Channel_17 is selected for VREFINT enable TSVREFE */
  if ((hadc->Instance == ADC1) && ((sConfig->Channel == ADC_CHANNEL_TEMPSENSOR) || (sConfig->Channel == ADC_CHANNEL_VREFINT)))
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	681b      	ldr	r3, [r3, #0]
 80031b4:	4a1d      	ldr	r2, [pc, #116]	@ (800322c <HAL_ADC_ConfigChannel+0x254>)
 80031b6:	4293      	cmp	r3, r2
 80031b8:	d12b      	bne.n	8003212 <HAL_ADC_ConfigChannel+0x23a>
 80031ba:	683b      	ldr	r3, [r7, #0]
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	4a1c      	ldr	r2, [pc, #112]	@ (8003230 <HAL_ADC_ConfigChannel+0x258>)
 80031c0:	4293      	cmp	r3, r2
 80031c2:	d003      	beq.n	80031cc <HAL_ADC_ConfigChannel+0x1f4>
 80031c4:	683b      	ldr	r3, [r7, #0]
 80031c6:	681b      	ldr	r3, [r3, #0]
 80031c8:	2b11      	cmp	r3, #17
 80031ca:	d122      	bne.n	8003212 <HAL_ADC_ConfigChannel+0x23a>
  {
    /* Disable the VBAT channel in case of using board with multiplixed ADC_CHANNEL_VBAT & ADC_CHANNEL_TEMPSENSOR*/
    if ((uint16_t)ADC_CHANNEL_TEMPSENSOR == (uint16_t)ADC_CHANNEL_VBAT)
    {
      tmpADC_Common->CCR &= ~ADC_CCR_VBATE;
 80031cc:	68fb      	ldr	r3, [r7, #12]
 80031ce:	685b      	ldr	r3, [r3, #4]
 80031d0:	f423 0280 	bic.w	r2, r3, #4194304	@ 0x400000
 80031d4:	68fb      	ldr	r3, [r7, #12]
 80031d6:	605a      	str	r2, [r3, #4]
    }
    /* Enable the Temperature sensor and VREFINT channel*/
    tmpADC_Common->CCR |= ADC_CCR_TSVREFE;
 80031d8:	68fb      	ldr	r3, [r7, #12]
 80031da:	685b      	ldr	r3, [r3, #4]
 80031dc:	f443 0200 	orr.w	r2, r3, #8388608	@ 0x800000
 80031e0:	68fb      	ldr	r3, [r7, #12]
 80031e2:	605a      	str	r2, [r3, #4]

    if (sConfig->Channel == ADC_CHANNEL_TEMPSENSOR)
 80031e4:	683b      	ldr	r3, [r7, #0]
 80031e6:	681b      	ldr	r3, [r3, #0]
 80031e8:	4a11      	ldr	r2, [pc, #68]	@ (8003230 <HAL_ADC_ConfigChannel+0x258>)
 80031ea:	4293      	cmp	r3, r2
 80031ec:	d111      	bne.n	8003212 <HAL_ADC_ConfigChannel+0x23a>
    {
      /* Delay for temperature sensor stabilization time */
      /* Compute number of CPU cycles to wait for */
      counter = (ADC_TEMPSENSOR_DELAY_US * (SystemCoreClock / 1000000U));
 80031ee:	4b11      	ldr	r3, [pc, #68]	@ (8003234 <HAL_ADC_ConfigChannel+0x25c>)
 80031f0:	681b      	ldr	r3, [r3, #0]
 80031f2:	4a11      	ldr	r2, [pc, #68]	@ (8003238 <HAL_ADC_ConfigChannel+0x260>)
 80031f4:	fba2 2303 	umull	r2, r3, r2, r3
 80031f8:	0c9a      	lsrs	r2, r3, #18
 80031fa:	4613      	mov	r3, r2
 80031fc:	009b      	lsls	r3, r3, #2
 80031fe:	4413      	add	r3, r2
 8003200:	005b      	lsls	r3, r3, #1
 8003202:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 8003204:	e002      	b.n	800320c <HAL_ADC_ConfigChannel+0x234>
      {
        counter--;
 8003206:	68bb      	ldr	r3, [r7, #8]
 8003208:	3b01      	subs	r3, #1
 800320a:	60bb      	str	r3, [r7, #8]
      while (counter != 0U)
 800320c:	68bb      	ldr	r3, [r7, #8]
 800320e:	2b00      	cmp	r3, #0
 8003210:	d1f9      	bne.n	8003206 <HAL_ADC_ConfigChannel+0x22e>
      }
    }
  }

  /* Process unlocked */
  __HAL_UNLOCK(hadc);
 8003212:	687b      	ldr	r3, [r7, #4]
 8003214:	2200      	movs	r2, #0
 8003216:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Return function status */
  return HAL_OK;
 800321a:	2300      	movs	r3, #0
}
 800321c:	4618      	mov	r0, r3
 800321e:	3714      	adds	r7, #20
 8003220:	46bd      	mov	sp, r7
 8003222:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003226:	4770      	bx	lr
 8003228:	40012300 	.word	0x40012300
 800322c:	40012000 	.word	0x40012000
 8003230:	10000012 	.word	0x10000012
 8003234:	20000014 	.word	0x20000014
 8003238:	431bde83 	.word	0x431bde83

0800323c <ADC_Init>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
static void ADC_Init(ADC_HandleTypeDef *hadc)
{
 800323c:	b480      	push	{r7}
 800323e:	b085      	sub	sp, #20
 8003240:	af00      	add	r7, sp, #0
 8003242:	6078      	str	r0, [r7, #4]

  /* Set ADC parameters */
  /* Pointer to the common control register to which is belonging hadc    */
  /* (Depending on STM32F4 product, there may be up to 3 ADCs and 1 common */
  /* control register)                                                    */
  tmpADC_Common = ADC_COMMON_REGISTER(hadc);
 8003244:	4b79      	ldr	r3, [pc, #484]	@ (800342c <ADC_Init+0x1f0>)
 8003246:	60fb      	str	r3, [r7, #12]

  /* Set the ADC clock prescaler */
  tmpADC_Common->CCR &= ~(ADC_CCR_ADCPRE);
 8003248:	68fb      	ldr	r3, [r7, #12]
 800324a:	685b      	ldr	r3, [r3, #4]
 800324c:	f423 3240 	bic.w	r2, r3, #196608	@ 0x30000
 8003250:	68fb      	ldr	r3, [r7, #12]
 8003252:	605a      	str	r2, [r3, #4]
  tmpADC_Common->CCR |=  hadc->Init.ClockPrescaler;
 8003254:	68fb      	ldr	r3, [r7, #12]
 8003256:	685a      	ldr	r2, [r3, #4]
 8003258:	687b      	ldr	r3, [r7, #4]
 800325a:	685b      	ldr	r3, [r3, #4]
 800325c:	431a      	orrs	r2, r3
 800325e:	68fb      	ldr	r3, [r7, #12]
 8003260:	605a      	str	r2, [r3, #4]

  /* Set ADC scan mode */
  hadc->Instance->CR1 &= ~(ADC_CR1_SCAN);
 8003262:	687b      	ldr	r3, [r7, #4]
 8003264:	681b      	ldr	r3, [r3, #0]
 8003266:	685a      	ldr	r2, [r3, #4]
 8003268:	687b      	ldr	r3, [r7, #4]
 800326a:	681b      	ldr	r3, [r3, #0]
 800326c:	f422 7280 	bic.w	r2, r2, #256	@ 0x100
 8003270:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  ADC_CR1_SCANCONV(hadc->Init.ScanConvMode);
 8003272:	687b      	ldr	r3, [r7, #4]
 8003274:	681b      	ldr	r3, [r3, #0]
 8003276:	6859      	ldr	r1, [r3, #4]
 8003278:	687b      	ldr	r3, [r7, #4]
 800327a:	691b      	ldr	r3, [r3, #16]
 800327c:	021a      	lsls	r2, r3, #8
 800327e:	687b      	ldr	r3, [r7, #4]
 8003280:	681b      	ldr	r3, [r3, #0]
 8003282:	430a      	orrs	r2, r1
 8003284:	605a      	str	r2, [r3, #4]

  /* Set ADC resolution */
  hadc->Instance->CR1 &= ~(ADC_CR1_RES);
 8003286:	687b      	ldr	r3, [r7, #4]
 8003288:	681b      	ldr	r3, [r3, #0]
 800328a:	685a      	ldr	r2, [r3, #4]
 800328c:	687b      	ldr	r3, [r7, #4]
 800328e:	681b      	ldr	r3, [r3, #0]
 8003290:	f022 7240 	bic.w	r2, r2, #50331648	@ 0x3000000
 8003294:	605a      	str	r2, [r3, #4]
  hadc->Instance->CR1 |=  hadc->Init.Resolution;
 8003296:	687b      	ldr	r3, [r7, #4]
 8003298:	681b      	ldr	r3, [r3, #0]
 800329a:	6859      	ldr	r1, [r3, #4]
 800329c:	687b      	ldr	r3, [r7, #4]
 800329e:	689a      	ldr	r2, [r3, #8]
 80032a0:	687b      	ldr	r3, [r7, #4]
 80032a2:	681b      	ldr	r3, [r3, #0]
 80032a4:	430a      	orrs	r2, r1
 80032a6:	605a      	str	r2, [r3, #4]

  /* Set ADC data alignment */
  hadc->Instance->CR2 &= ~(ADC_CR2_ALIGN);
 80032a8:	687b      	ldr	r3, [r7, #4]
 80032aa:	681b      	ldr	r3, [r3, #0]
 80032ac:	689a      	ldr	r2, [r3, #8]
 80032ae:	687b      	ldr	r3, [r7, #4]
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80032b6:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= hadc->Init.DataAlign;
 80032b8:	687b      	ldr	r3, [r7, #4]
 80032ba:	681b      	ldr	r3, [r3, #0]
 80032bc:	6899      	ldr	r1, [r3, #8]
 80032be:	687b      	ldr	r3, [r7, #4]
 80032c0:	68da      	ldr	r2, [r3, #12]
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	681b      	ldr	r3, [r3, #0]
 80032c6:	430a      	orrs	r2, r1
 80032c8:	609a      	str	r2, [r3, #8]
  /* Enable external trigger if trigger selection is different of software  */
  /* start.                                                                 */
  /* Note: This configuration keeps the hardware feature of parameter       */
  /*       ExternalTrigConvEdge "trigger edge none" equivalent to           */
  /*       software start.                                                  */
  if (hadc->Init.ExternalTrigConv != ADC_SOFTWARE_START)
 80032ca:	687b      	ldr	r3, [r7, #4]
 80032cc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80032ce:	4a58      	ldr	r2, [pc, #352]	@ (8003430 <ADC_Init+0x1f4>)
 80032d0:	4293      	cmp	r3, r2
 80032d2:	d022      	beq.n	800331a <ADC_Init+0xde>
  {
    /* Select external trigger to start conversion */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 80032d4:	687b      	ldr	r3, [r7, #4]
 80032d6:	681b      	ldr	r3, [r3, #0]
 80032d8:	689a      	ldr	r2, [r3, #8]
 80032da:	687b      	ldr	r3, [r7, #4]
 80032dc:	681b      	ldr	r3, [r3, #0]
 80032de:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 80032e2:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConv;
 80032e4:	687b      	ldr	r3, [r7, #4]
 80032e6:	681b      	ldr	r3, [r3, #0]
 80032e8:	6899      	ldr	r1, [r3, #8]
 80032ea:	687b      	ldr	r3, [r7, #4]
 80032ec:	6a9a      	ldr	r2, [r3, #40]	@ 0x28
 80032ee:	687b      	ldr	r3, [r7, #4]
 80032f0:	681b      	ldr	r3, [r3, #0]
 80032f2:	430a      	orrs	r2, r1
 80032f4:	609a      	str	r2, [r3, #8]

    /* Select external trigger polarity */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 80032f6:	687b      	ldr	r3, [r7, #4]
 80032f8:	681b      	ldr	r3, [r3, #0]
 80032fa:	689a      	ldr	r2, [r3, #8]
 80032fc:	687b      	ldr	r3, [r7, #4]
 80032fe:	681b      	ldr	r3, [r3, #0]
 8003300:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003304:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 |= hadc->Init.ExternalTrigConvEdge;
 8003306:	687b      	ldr	r3, [r7, #4]
 8003308:	681b      	ldr	r3, [r3, #0]
 800330a:	6899      	ldr	r1, [r3, #8]
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003310:	687b      	ldr	r3, [r7, #4]
 8003312:	681b      	ldr	r3, [r3, #0]
 8003314:	430a      	orrs	r2, r1
 8003316:	609a      	str	r2, [r3, #8]
 8003318:	e00f      	b.n	800333a <ADC_Init+0xfe>
  }
  else
  {
    /* Reset the external trigger */
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTSEL);
 800331a:	687b      	ldr	r3, [r7, #4]
 800331c:	681b      	ldr	r3, [r3, #0]
 800331e:	689a      	ldr	r2, [r3, #8]
 8003320:	687b      	ldr	r3, [r7, #4]
 8003322:	681b      	ldr	r3, [r3, #0]
 8003324:	f022 6270 	bic.w	r2, r2, #251658240	@ 0xf000000
 8003328:	609a      	str	r2, [r3, #8]
    hadc->Instance->CR2 &= ~(ADC_CR2_EXTEN);
 800332a:	687b      	ldr	r3, [r7, #4]
 800332c:	681b      	ldr	r3, [r3, #0]
 800332e:	689a      	ldr	r2, [r3, #8]
 8003330:	687b      	ldr	r3, [r7, #4]
 8003332:	681b      	ldr	r3, [r3, #0]
 8003334:	f022 5240 	bic.w	r2, r2, #805306368	@ 0x30000000
 8003338:	609a      	str	r2, [r3, #8]
  }

  /* Enable or disable ADC continuous conversion mode */
  hadc->Instance->CR2 &= ~(ADC_CR2_CONT);
 800333a:	687b      	ldr	r3, [r7, #4]
 800333c:	681b      	ldr	r3, [r3, #0]
 800333e:	689a      	ldr	r2, [r3, #8]
 8003340:	687b      	ldr	r3, [r7, #4]
 8003342:	681b      	ldr	r3, [r3, #0]
 8003344:	f022 0202 	bic.w	r2, r2, #2
 8003348:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_CONTINUOUS((uint32_t)hadc->Init.ContinuousConvMode);
 800334a:	687b      	ldr	r3, [r7, #4]
 800334c:	681b      	ldr	r3, [r3, #0]
 800334e:	6899      	ldr	r1, [r3, #8]
 8003350:	687b      	ldr	r3, [r7, #4]
 8003352:	7e1b      	ldrb	r3, [r3, #24]
 8003354:	005a      	lsls	r2, r3, #1
 8003356:	687b      	ldr	r3, [r7, #4]
 8003358:	681b      	ldr	r3, [r3, #0]
 800335a:	430a      	orrs	r2, r1
 800335c:	609a      	str	r2, [r3, #8]

  if (hadc->Init.DiscontinuousConvMode != DISABLE)
 800335e:	687b      	ldr	r3, [r7, #4]
 8003360:	f893 3020 	ldrb.w	r3, [r3, #32]
 8003364:	2b00      	cmp	r3, #0
 8003366:	d01b      	beq.n	80033a0 <ADC_Init+0x164>
  {
    assert_param(IS_ADC_REGULAR_DISC_NUMBER(hadc->Init.NbrOfDiscConversion));

    /* Enable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 |= (uint32_t)ADC_CR1_DISCEN;
 8003368:	687b      	ldr	r3, [r7, #4]
 800336a:	681b      	ldr	r3, [r3, #0]
 800336c:	685a      	ldr	r2, [r3, #4]
 800336e:	687b      	ldr	r3, [r7, #4]
 8003370:	681b      	ldr	r3, [r3, #0]
 8003372:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8003376:	605a      	str	r2, [r3, #4]

    /* Set the number of channels to be converted in discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCNUM);
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	681b      	ldr	r3, [r3, #0]
 800337c:	685a      	ldr	r2, [r3, #4]
 800337e:	687b      	ldr	r3, [r7, #4]
 8003380:	681b      	ldr	r3, [r3, #0]
 8003382:	f422 4260 	bic.w	r2, r2, #57344	@ 0xe000
 8003386:	605a      	str	r2, [r3, #4]
    hadc->Instance->CR1 |=  ADC_CR1_DISCONTINUOUS(hadc->Init.NbrOfDiscConversion);
 8003388:	687b      	ldr	r3, [r7, #4]
 800338a:	681b      	ldr	r3, [r3, #0]
 800338c:	6859      	ldr	r1, [r3, #4]
 800338e:	687b      	ldr	r3, [r7, #4]
 8003390:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003392:	3b01      	subs	r3, #1
 8003394:	035a      	lsls	r2, r3, #13
 8003396:	687b      	ldr	r3, [r7, #4]
 8003398:	681b      	ldr	r3, [r3, #0]
 800339a:	430a      	orrs	r2, r1
 800339c:	605a      	str	r2, [r3, #4]
 800339e:	e007      	b.n	80033b0 <ADC_Init+0x174>
  }
  else
  {
    /* Disable the selected ADC regular discontinuous mode */
    hadc->Instance->CR1 &= ~(ADC_CR1_DISCEN);
 80033a0:	687b      	ldr	r3, [r7, #4]
 80033a2:	681b      	ldr	r3, [r3, #0]
 80033a4:	685a      	ldr	r2, [r3, #4]
 80033a6:	687b      	ldr	r3, [r7, #4]
 80033a8:	681b      	ldr	r3, [r3, #0]
 80033aa:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80033ae:	605a      	str	r2, [r3, #4]
  }

  /* Set ADC number of conversion */
  hadc->Instance->SQR1 &= ~(ADC_SQR1_L);
 80033b0:	687b      	ldr	r3, [r7, #4]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80033b6:	687b      	ldr	r3, [r7, #4]
 80033b8:	681b      	ldr	r3, [r3, #0]
 80033ba:	f422 0270 	bic.w	r2, r2, #15728640	@ 0xf00000
 80033be:	62da      	str	r2, [r3, #44]	@ 0x2c
  hadc->Instance->SQR1 |=  ADC_SQR1(hadc->Init.NbrOfConversion);
 80033c0:	687b      	ldr	r3, [r7, #4]
 80033c2:	681b      	ldr	r3, [r3, #0]
 80033c4:	6ad9      	ldr	r1, [r3, #44]	@ 0x2c
 80033c6:	687b      	ldr	r3, [r7, #4]
 80033c8:	69db      	ldr	r3, [r3, #28]
 80033ca:	3b01      	subs	r3, #1
 80033cc:	051a      	lsls	r2, r3, #20
 80033ce:	687b      	ldr	r3, [r7, #4]
 80033d0:	681b      	ldr	r3, [r3, #0]
 80033d2:	430a      	orrs	r2, r1
 80033d4:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Enable or disable ADC DMA continuous request */
  hadc->Instance->CR2 &= ~(ADC_CR2_DDS);
 80033d6:	687b      	ldr	r3, [r7, #4]
 80033d8:	681b      	ldr	r3, [r3, #0]
 80033da:	689a      	ldr	r2, [r3, #8]
 80033dc:	687b      	ldr	r3, [r7, #4]
 80033de:	681b      	ldr	r3, [r3, #0]
 80033e0:	f422 7200 	bic.w	r2, r2, #512	@ 0x200
 80033e4:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_DMAContReq((uint32_t)hadc->Init.DMAContinuousRequests);
 80033e6:	687b      	ldr	r3, [r7, #4]
 80033e8:	681b      	ldr	r3, [r3, #0]
 80033ea:	6899      	ldr	r1, [r3, #8]
 80033ec:	687b      	ldr	r3, [r7, #4]
 80033ee:	f893 3030 	ldrb.w	r3, [r3, #48]	@ 0x30
 80033f2:	025a      	lsls	r2, r3, #9
 80033f4:	687b      	ldr	r3, [r7, #4]
 80033f6:	681b      	ldr	r3, [r3, #0]
 80033f8:	430a      	orrs	r2, r1
 80033fa:	609a      	str	r2, [r3, #8]

  /* Enable or disable ADC end of conversion selection */
  hadc->Instance->CR2 &= ~(ADC_CR2_EOCS);
 80033fc:	687b      	ldr	r3, [r7, #4]
 80033fe:	681b      	ldr	r3, [r3, #0]
 8003400:	689a      	ldr	r2, [r3, #8]
 8003402:	687b      	ldr	r3, [r7, #4]
 8003404:	681b      	ldr	r3, [r3, #0]
 8003406:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800340a:	609a      	str	r2, [r3, #8]
  hadc->Instance->CR2 |= ADC_CR2_EOCSelection(hadc->Init.EOCSelection);
 800340c:	687b      	ldr	r3, [r7, #4]
 800340e:	681b      	ldr	r3, [r3, #0]
 8003410:	6899      	ldr	r1, [r3, #8]
 8003412:	687b      	ldr	r3, [r7, #4]
 8003414:	695b      	ldr	r3, [r3, #20]
 8003416:	029a      	lsls	r2, r3, #10
 8003418:	687b      	ldr	r3, [r7, #4]
 800341a:	681b      	ldr	r3, [r3, #0]
 800341c:	430a      	orrs	r2, r1
 800341e:	609a      	str	r2, [r3, #8]
}
 8003420:	bf00      	nop
 8003422:	3714      	adds	r7, #20
 8003424:	46bd      	mov	sp, r7
 8003426:	f85d 7b04 	ldr.w	r7, [sp], #4
 800342a:	4770      	bx	lr
 800342c:	40012300 	.word	0x40012300
 8003430:	0f000001 	.word	0x0f000001

08003434 <ADC_DMAConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAConvCplt(DMA_HandleTypeDef *hdma)
{
 8003434:	b580      	push	{r7, lr}
 8003436:	b084      	sub	sp, #16
 8003438:	af00      	add	r7, sp, #0
 800343a:	6078      	str	r0, [r7, #4]
  /* Retrieve ADC handle corresponding to current DMA handle */
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003440:	60fb      	str	r3, [r7, #12]

  /* Update state machine on conversion status if not in error state */
  if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_ERROR_INTERNAL | HAL_ADC_STATE_ERROR_DMA))
 8003442:	68fb      	ldr	r3, [r7, #12]
 8003444:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003446:	f003 0350 	and.w	r3, r3, #80	@ 0x50
 800344a:	2b00      	cmp	r3, #0
 800344c:	d13c      	bne.n	80034c8 <ADC_DMAConvCplt+0x94>
  {
    /* Update ADC state machine */
    SET_BIT(hadc->State, HAL_ADC_STATE_REG_EOC);
 800344e:	68fb      	ldr	r3, [r7, #12]
 8003450:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003452:	f443 7200 	orr.w	r2, r3, #512	@ 0x200
 8003456:	68fb      	ldr	r3, [r7, #12]
 8003458:	641a      	str	r2, [r3, #64]	@ 0x40
    /* by external trigger, continuous mode or scan sequence on going.      */
    /* Note: On STM32F4, there is no independent flag of end of sequence.   */
    /*       The test of scan sequence on going is done either with scan    */
    /*       sequence disabled or with end of conversion flag set to        */
    /*       of end of sequence.                                            */
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800345a:	68fb      	ldr	r3, [r7, #12]
 800345c:	681b      	ldr	r3, [r3, #0]
 800345e:	689b      	ldr	r3, [r3, #8]
 8003460:	f003 5340 	and.w	r3, r3, #805306368	@ 0x30000000
 8003464:	2b00      	cmp	r3, #0
 8003466:	d12b      	bne.n	80034c0 <ADC_DMAConvCplt+0x8c>
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 8003468:	68fb      	ldr	r3, [r7, #12]
 800346a:	7e1b      	ldrb	r3, [r3, #24]
    if (ADC_IS_SOFTWARE_START_REGULAR(hadc)                   &&
 800346c:	2b00      	cmp	r3, #0
 800346e:	d127      	bne.n	80034c0 <ADC_DMAConvCplt+0x8c>
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003470:	68fb      	ldr	r3, [r7, #12]
 8003472:	681b      	ldr	r3, [r3, #0]
 8003474:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003476:	f403 0370 	and.w	r3, r3, #15728640	@ 0xf00000
        (hadc->Init.ContinuousConvMode == DISABLE)            &&
 800347a:	2b00      	cmp	r3, #0
 800347c:	d006      	beq.n	800348c <ADC_DMAConvCplt+0x58>
         HAL_IS_BIT_CLR(hadc->Instance->CR2, ADC_CR2_EOCS)))
 800347e:	68fb      	ldr	r3, [r7, #12]
 8003480:	681b      	ldr	r3, [r3, #0]
 8003482:	689b      	ldr	r3, [r3, #8]
 8003484:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
        (HAL_IS_BIT_CLR(hadc->Instance->SQR1, ADC_SQR1_L) ||
 8003488:	2b00      	cmp	r3, #0
 800348a:	d119      	bne.n	80034c0 <ADC_DMAConvCplt+0x8c>
    {
      /* Disable ADC end of single conversion interrupt on group regular */
      /* Note: Overrun interrupt was enabled with EOC interrupt in          */
      /* HAL_ADC_Start_IT(), but is not disabled here because can be used   */
      /* by overrun IRQ process below.                                      */
      __HAL_ADC_DISABLE_IT(hadc, ADC_IT_EOC);
 800348c:	68fb      	ldr	r3, [r7, #12]
 800348e:	681b      	ldr	r3, [r3, #0]
 8003490:	685a      	ldr	r2, [r3, #4]
 8003492:	68fb      	ldr	r3, [r7, #12]
 8003494:	681b      	ldr	r3, [r3, #0]
 8003496:	f022 0220 	bic.w	r2, r2, #32
 800349a:	605a      	str	r2, [r3, #4]

      /* Set ADC state */
      CLEAR_BIT(hadc->State, HAL_ADC_STATE_REG_BUSY);
 800349c:	68fb      	ldr	r3, [r7, #12]
 800349e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034a0:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 80034a4:	68fb      	ldr	r3, [r7, #12]
 80034a6:	641a      	str	r2, [r3, #64]	@ 0x40

      if (HAL_IS_BIT_CLR(hadc->State, HAL_ADC_STATE_INJ_BUSY))
 80034a8:	68fb      	ldr	r3, [r7, #12]
 80034aa:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034ac:	f403 5380 	and.w	r3, r3, #4096	@ 0x1000
 80034b0:	2b00      	cmp	r3, #0
 80034b2:	d105      	bne.n	80034c0 <ADC_DMAConvCplt+0x8c>
      {
        SET_BIT(hadc->State, HAL_ADC_STATE_READY);
 80034b4:	68fb      	ldr	r3, [r7, #12]
 80034b6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034b8:	f043 0201 	orr.w	r2, r3, #1
 80034bc:	68fb      	ldr	r3, [r7, #12]
 80034be:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Conversion complete callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
    hadc->ConvCpltCallback(hadc);
#else
    HAL_ADC_ConvCpltCallback(hadc);
 80034c0:	68f8      	ldr	r0, [r7, #12]
 80034c2:	f7ff fd61 	bl	8002f88 <HAL_ADC_ConvCpltCallback>
    {
      /* Call DMA error callback */
      hadc->DMA_Handle->XferErrorCallback(hdma);
    }
  }
}
 80034c6:	e00e      	b.n	80034e6 <ADC_DMAConvCplt+0xb2>
    if ((hadc->State & HAL_ADC_STATE_ERROR_INTERNAL) != 0UL)
 80034c8:	68fb      	ldr	r3, [r7, #12]
 80034ca:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80034cc:	f003 0310 	and.w	r3, r3, #16
 80034d0:	2b00      	cmp	r3, #0
 80034d2:	d003      	beq.n	80034dc <ADC_DMAConvCplt+0xa8>
      HAL_ADC_ErrorCallback(hadc);
 80034d4:	68f8      	ldr	r0, [r7, #12]
 80034d6:	f7ff fd75 	bl	8002fc4 <HAL_ADC_ErrorCallback>
}
 80034da:	e004      	b.n	80034e6 <ADC_DMAConvCplt+0xb2>
      hadc->DMA_Handle->XferErrorCallback(hdma);
 80034dc:	68fb      	ldr	r3, [r7, #12]
 80034de:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034e0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80034e2:	6878      	ldr	r0, [r7, #4]
 80034e4:	4798      	blx	r3
}
 80034e6:	bf00      	nop
 80034e8:	3710      	adds	r7, #16
 80034ea:	46bd      	mov	sp, r7
 80034ec:	bd80      	pop	{r7, pc}

080034ee <ADC_DMAHalfConvCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAHalfConvCplt(DMA_HandleTypeDef *hdma)
{
 80034ee:	b580      	push	{r7, lr}
 80034f0:	b084      	sub	sp, #16
 80034f2:	af00      	add	r7, sp, #0
 80034f4:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 80034f6:	687b      	ldr	r3, [r7, #4]
 80034f8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80034fa:	60fb      	str	r3, [r7, #12]
  /* Half conversion callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ConvHalfCpltCallback(hadc);
#else
  HAL_ADC_ConvHalfCpltCallback(hadc);
 80034fc:	68f8      	ldr	r0, [r7, #12]
 80034fe:	f7ff fd4d 	bl	8002f9c <HAL_ADC_ConvHalfCpltCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003502:	bf00      	nop
 8003504:	3710      	adds	r7, #16
 8003506:	46bd      	mov	sp, r7
 8003508:	bd80      	pop	{r7, pc}

0800350a <ADC_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *                the configuration information for the specified DMA module.
  * @retval None
  */
static void ADC_DMAError(DMA_HandleTypeDef *hdma)
{
 800350a:	b580      	push	{r7, lr}
 800350c:	b084      	sub	sp, #16
 800350e:	af00      	add	r7, sp, #0
 8003510:	6078      	str	r0, [r7, #4]
  ADC_HandleTypeDef *hadc = (ADC_HandleTypeDef *)((DMA_HandleTypeDef *)hdma)->Parent;
 8003512:	687b      	ldr	r3, [r7, #4]
 8003514:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8003516:	60fb      	str	r3, [r7, #12]
  hadc->State = HAL_ADC_STATE_ERROR_DMA;
 8003518:	68fb      	ldr	r3, [r7, #12]
 800351a:	2240      	movs	r2, #64	@ 0x40
 800351c:	641a      	str	r2, [r3, #64]	@ 0x40
  /* Set ADC error code to DMA error */
  hadc->ErrorCode |= HAL_ADC_ERROR_DMA;
 800351e:	68fb      	ldr	r3, [r7, #12]
 8003520:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003522:	f043 0204 	orr.w	r2, r3, #4
 8003526:	68fb      	ldr	r3, [r7, #12]
 8003528:	645a      	str	r2, [r3, #68]	@ 0x44
  /* Error callback */
#if (USE_HAL_ADC_REGISTER_CALLBACKS == 1)
  hadc->ErrorCallback(hadc);
#else
  HAL_ADC_ErrorCallback(hadc);
 800352a:	68f8      	ldr	r0, [r7, #12]
 800352c:	f7ff fd4a 	bl	8002fc4 <HAL_ADC_ErrorCallback>
#endif /* USE_HAL_ADC_REGISTER_CALLBACKS */
}
 8003530:	bf00      	nop
 8003532:	3710      	adds	r7, #16
 8003534:	46bd      	mov	sp, r7
 8003536:	bd80      	pop	{r7, pc}

08003538 <HAL_ADCEx_InjectedConvCpltCallback>:
  * @param  hadc pointer to a ADC_HandleTypeDef structure that contains
  *         the configuration information for the specified ADC.
  * @retval None
  */
__weak void HAL_ADCEx_InjectedConvCpltCallback(ADC_HandleTypeDef *hadc)
{
 8003538:	b480      	push	{r7}
 800353a:	b083      	sub	sp, #12
 800353c:	af00      	add	r7, sp, #0
 800353e:	6078      	str	r0, [r7, #4]
  /* Prevent unused argument(s) compilation warning */
  UNUSED(hadc);
  /* NOTE : This function Should not be modified, when the callback is needed,
            the HAL_ADC_InjectedConvCpltCallback could be implemented in the user file
   */
}
 8003540:	bf00      	nop
 8003542:	370c      	adds	r7, #12
 8003544:	46bd      	mov	sp, r7
 8003546:	f85d 7b04 	ldr.w	r7, [sp], #4
 800354a:	4770      	bx	lr

0800354c <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 800354c:	b480      	push	{r7}
 800354e:	b085      	sub	sp, #20
 8003550:	af00      	add	r7, sp, #0
 8003552:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 8003554:	687b      	ldr	r3, [r7, #4]
 8003556:	f003 0307 	and.w	r3, r3, #7
 800355a:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 800355c:	4b0c      	ldr	r3, [pc, #48]	@ (8003590 <__NVIC_SetPriorityGrouping+0x44>)
 800355e:	68db      	ldr	r3, [r3, #12]
 8003560:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 8003562:	68ba      	ldr	r2, [r7, #8]
 8003564:	f64f 03ff 	movw	r3, #63743	@ 0xf8ff
 8003568:	4013      	ands	r3, r2
 800356a:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 800356c:	68fb      	ldr	r3, [r7, #12]
 800356e:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 8003570:	68bb      	ldr	r3, [r7, #8]
 8003572:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 8003574:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8003578:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800357c:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 800357e:	4a04      	ldr	r2, [pc, #16]	@ (8003590 <__NVIC_SetPriorityGrouping+0x44>)
 8003580:	68bb      	ldr	r3, [r7, #8]
 8003582:	60d3      	str	r3, [r2, #12]
}
 8003584:	bf00      	nop
 8003586:	3714      	adds	r7, #20
 8003588:	46bd      	mov	sp, r7
 800358a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800358e:	4770      	bx	lr
 8003590:	e000ed00 	.word	0xe000ed00

08003594 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 8003594:	b480      	push	{r7}
 8003596:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 8003598:	4b04      	ldr	r3, [pc, #16]	@ (80035ac <__NVIC_GetPriorityGrouping+0x18>)
 800359a:	68db      	ldr	r3, [r3, #12]
 800359c:	0a1b      	lsrs	r3, r3, #8
 800359e:	f003 0307 	and.w	r3, r3, #7
}
 80035a2:	4618      	mov	r0, r3
 80035a4:	46bd      	mov	sp, r7
 80035a6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035aa:	4770      	bx	lr
 80035ac:	e000ed00 	.word	0xe000ed00

080035b0 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80035b0:	b480      	push	{r7}
 80035b2:	b083      	sub	sp, #12
 80035b4:	af00      	add	r7, sp, #0
 80035b6:	4603      	mov	r3, r0
 80035b8:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035ba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035be:	2b00      	cmp	r3, #0
 80035c0:	db0b      	blt.n	80035da <__NVIC_EnableIRQ+0x2a>
  {
    __COMPILER_BARRIER();
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035c2:	79fb      	ldrb	r3, [r7, #7]
 80035c4:	f003 021f 	and.w	r2, r3, #31
 80035c8:	4907      	ldr	r1, [pc, #28]	@ (80035e8 <__NVIC_EnableIRQ+0x38>)
 80035ca:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035ce:	095b      	lsrs	r3, r3, #5
 80035d0:	2001      	movs	r0, #1
 80035d2:	fa00 f202 	lsl.w	r2, r0, r2
 80035d6:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
    __COMPILER_BARRIER();
  }
}
 80035da:	bf00      	nop
 80035dc:	370c      	adds	r7, #12
 80035de:	46bd      	mov	sp, r7
 80035e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80035e4:	4770      	bx	lr
 80035e6:	bf00      	nop
 80035e8:	e000e100 	.word	0xe000e100

080035ec <__NVIC_DisableIRQ>:
  \details Disables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80035ec:	b480      	push	{r7}
 80035ee:	b083      	sub	sp, #12
 80035f0:	af00      	add	r7, sp, #0
 80035f2:	4603      	mov	r3, r0
 80035f4:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80035f6:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80035fa:	2b00      	cmp	r3, #0
 80035fc:	db12      	blt.n	8003624 <__NVIC_DisableIRQ+0x38>
  {
    NVIC->ICER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 80035fe:	79fb      	ldrb	r3, [r7, #7]
 8003600:	f003 021f 	and.w	r2, r3, #31
 8003604:	490a      	ldr	r1, [pc, #40]	@ (8003630 <__NVIC_DisableIRQ+0x44>)
 8003606:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800360a:	095b      	lsrs	r3, r3, #5
 800360c:	2001      	movs	r0, #1
 800360e:	fa00 f202 	lsl.w	r2, r0, r2
 8003612:	3320      	adds	r3, #32
 8003614:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  __ASM volatile ("dsb 0xF":::"memory");
 8003618:	f3bf 8f4f 	dsb	sy
}
 800361c:	bf00      	nop
  __ASM volatile ("isb 0xF":::"memory");
 800361e:	f3bf 8f6f 	isb	sy
}
 8003622:	bf00      	nop
    __DSB();
    __ISB();
  }
}
 8003624:	bf00      	nop
 8003626:	370c      	adds	r7, #12
 8003628:	46bd      	mov	sp, r7
 800362a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800362e:	4770      	bx	lr
 8003630:	e000e100 	.word	0xe000e100

08003634 <__NVIC_ClearPendingIRQ>:
  \details Clears the pending bit of a device specific interrupt in the NVIC pending register.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 8003634:	b480      	push	{r7}
 8003636:	b083      	sub	sp, #12
 8003638:	af00      	add	r7, sp, #0
 800363a:	4603      	mov	r3, r0
 800363c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800363e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003642:	2b00      	cmp	r3, #0
 8003644:	db0c      	blt.n	8003660 <__NVIC_ClearPendingIRQ+0x2c>
  {
    NVIC->ICPR[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 8003646:	79fb      	ldrb	r3, [r7, #7]
 8003648:	f003 021f 	and.w	r2, r3, #31
 800364c:	4907      	ldr	r1, [pc, #28]	@ (800366c <__NVIC_ClearPendingIRQ+0x38>)
 800364e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003652:	095b      	lsrs	r3, r3, #5
 8003654:	2001      	movs	r0, #1
 8003656:	fa00 f202 	lsl.w	r2, r0, r2
 800365a:	3360      	adds	r3, #96	@ 0x60
 800365c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 8003660:	bf00      	nop
 8003662:	370c      	adds	r7, #12
 8003664:	46bd      	mov	sp, r7
 8003666:	f85d 7b04 	ldr.w	r7, [sp], #4
 800366a:	4770      	bx	lr
 800366c:	e000e100 	.word	0xe000e100

08003670 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003670:	b480      	push	{r7}
 8003672:	b083      	sub	sp, #12
 8003674:	af00      	add	r7, sp, #0
 8003676:	4603      	mov	r3, r0
 8003678:	6039      	str	r1, [r7, #0]
 800367a:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 800367c:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8003680:	2b00      	cmp	r3, #0
 8003682:	db0a      	blt.n	800369a <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 8003684:	683b      	ldr	r3, [r7, #0]
 8003686:	b2da      	uxtb	r2, r3
 8003688:	490c      	ldr	r1, [pc, #48]	@ (80036bc <__NVIC_SetPriority+0x4c>)
 800368a:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800368e:	0112      	lsls	r2, r2, #4
 8003690:	b2d2      	uxtb	r2, r2
 8003692:	440b      	add	r3, r1
 8003694:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 8003698:	e00a      	b.n	80036b0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 800369a:	683b      	ldr	r3, [r7, #0]
 800369c:	b2da      	uxtb	r2, r3
 800369e:	4908      	ldr	r1, [pc, #32]	@ (80036c0 <__NVIC_SetPriority+0x50>)
 80036a0:	79fb      	ldrb	r3, [r7, #7]
 80036a2:	f003 030f 	and.w	r3, r3, #15
 80036a6:	3b04      	subs	r3, #4
 80036a8:	0112      	lsls	r2, r2, #4
 80036aa:	b2d2      	uxtb	r2, r2
 80036ac:	440b      	add	r3, r1
 80036ae:	761a      	strb	r2, [r3, #24]
}
 80036b0:	bf00      	nop
 80036b2:	370c      	adds	r7, #12
 80036b4:	46bd      	mov	sp, r7
 80036b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80036ba:	4770      	bx	lr
 80036bc:	e000e100 	.word	0xe000e100
 80036c0:	e000ed00 	.word	0xe000ed00

080036c4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 80036c4:	b480      	push	{r7}
 80036c6:	b089      	sub	sp, #36	@ 0x24
 80036c8:	af00      	add	r7, sp, #0
 80036ca:	60f8      	str	r0, [r7, #12]
 80036cc:	60b9      	str	r1, [r7, #8]
 80036ce:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 80036d0:	68fb      	ldr	r3, [r7, #12]
 80036d2:	f003 0307 	and.w	r3, r3, #7
 80036d6:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 80036d8:	69fb      	ldr	r3, [r7, #28]
 80036da:	f1c3 0307 	rsb	r3, r3, #7
 80036de:	2b04      	cmp	r3, #4
 80036e0:	bf28      	it	cs
 80036e2:	2304      	movcs	r3, #4
 80036e4:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 80036e6:	69fb      	ldr	r3, [r7, #28]
 80036e8:	3304      	adds	r3, #4
 80036ea:	2b06      	cmp	r3, #6
 80036ec:	d902      	bls.n	80036f4 <NVIC_EncodePriority+0x30>
 80036ee:	69fb      	ldr	r3, [r7, #28]
 80036f0:	3b03      	subs	r3, #3
 80036f2:	e000      	b.n	80036f6 <NVIC_EncodePriority+0x32>
 80036f4:	2300      	movs	r3, #0
 80036f6:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 80036f8:	f04f 32ff 	mov.w	r2, #4294967295
 80036fc:	69bb      	ldr	r3, [r7, #24]
 80036fe:	fa02 f303 	lsl.w	r3, r2, r3
 8003702:	43da      	mvns	r2, r3
 8003704:	68bb      	ldr	r3, [r7, #8]
 8003706:	401a      	ands	r2, r3
 8003708:	697b      	ldr	r3, [r7, #20]
 800370a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 800370c:	f04f 31ff 	mov.w	r1, #4294967295
 8003710:	697b      	ldr	r3, [r7, #20]
 8003712:	fa01 f303 	lsl.w	r3, r1, r3
 8003716:	43d9      	mvns	r1, r3
 8003718:	687b      	ldr	r3, [r7, #4]
 800371a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 800371c:	4313      	orrs	r3, r2
         );
}
 800371e:	4618      	mov	r0, r3
 8003720:	3724      	adds	r7, #36	@ 0x24
 8003722:	46bd      	mov	sp, r7
 8003724:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003728:	4770      	bx	lr
	...

0800372c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800372c:	b580      	push	{r7, lr}
 800372e:	b082      	sub	sp, #8
 8003730:	af00      	add	r7, sp, #0
 8003732:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	3b01      	subs	r3, #1
 8003738:	f1b3 7f80 	cmp.w	r3, #16777216	@ 0x1000000
 800373c:	d301      	bcc.n	8003742 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800373e:	2301      	movs	r3, #1
 8003740:	e00f      	b.n	8003762 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003742:	4a0a      	ldr	r2, [pc, #40]	@ (800376c <SysTick_Config+0x40>)
 8003744:	687b      	ldr	r3, [r7, #4]
 8003746:	3b01      	subs	r3, #1
 8003748:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800374a:	210f      	movs	r1, #15
 800374c:	f04f 30ff 	mov.w	r0, #4294967295
 8003750:	f7ff ff8e 	bl	8003670 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003754:	4b05      	ldr	r3, [pc, #20]	@ (800376c <SysTick_Config+0x40>)
 8003756:	2200      	movs	r2, #0
 8003758:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800375a:	4b04      	ldr	r3, [pc, #16]	@ (800376c <SysTick_Config+0x40>)
 800375c:	2207      	movs	r2, #7
 800375e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003760:	2300      	movs	r3, #0
}
 8003762:	4618      	mov	r0, r3
 8003764:	3708      	adds	r7, #8
 8003766:	46bd      	mov	sp, r7
 8003768:	bd80      	pop	{r7, pc}
 800376a:	bf00      	nop
 800376c:	e000e010 	.word	0xe000e010

08003770 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 8003770:	b580      	push	{r7, lr}
 8003772:	b082      	sub	sp, #8
 8003774:	af00      	add	r7, sp, #0
 8003776:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 8003778:	6878      	ldr	r0, [r7, #4]
 800377a:	f7ff fee7 	bl	800354c <__NVIC_SetPriorityGrouping>
}
 800377e:	bf00      	nop
 8003780:	3708      	adds	r7, #8
 8003782:	46bd      	mov	sp, r7
 8003784:	bd80      	pop	{r7, pc}

08003786 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003786:	b580      	push	{r7, lr}
 8003788:	b086      	sub	sp, #24
 800378a:	af00      	add	r7, sp, #0
 800378c:	4603      	mov	r3, r0
 800378e:	60b9      	str	r1, [r7, #8]
 8003790:	607a      	str	r2, [r7, #4]
 8003792:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 8003794:	2300      	movs	r3, #0
 8003796:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 8003798:	f7ff fefc 	bl	8003594 <__NVIC_GetPriorityGrouping>
 800379c:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 800379e:	687a      	ldr	r2, [r7, #4]
 80037a0:	68b9      	ldr	r1, [r7, #8]
 80037a2:	6978      	ldr	r0, [r7, #20]
 80037a4:	f7ff ff8e 	bl	80036c4 <NVIC_EncodePriority>
 80037a8:	4602      	mov	r2, r0
 80037aa:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80037ae:	4611      	mov	r1, r2
 80037b0:	4618      	mov	r0, r3
 80037b2:	f7ff ff5d 	bl	8003670 <__NVIC_SetPriority>
}
 80037b6:	bf00      	nop
 80037b8:	3718      	adds	r7, #24
 80037ba:	46bd      	mov	sp, r7
 80037bc:	bd80      	pop	{r7, pc}

080037be <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80037be:	b580      	push	{r7, lr}
 80037c0:	b082      	sub	sp, #8
 80037c2:	af00      	add	r7, sp, #0
 80037c4:	4603      	mov	r3, r0
 80037c6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80037c8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037cc:	4618      	mov	r0, r3
 80037ce:	f7ff feef 	bl	80035b0 <__NVIC_EnableIRQ>
}
 80037d2:	bf00      	nop
 80037d4:	3708      	adds	r7, #8
 80037d6:	46bd      	mov	sp, r7
 80037d8:	bd80      	pop	{r7, pc}

080037da <HAL_NVIC_DisableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
{
 80037da:	b580      	push	{r7, lr}
 80037dc:	b082      	sub	sp, #8
 80037de:	af00      	add	r7, sp, #0
 80037e0:	4603      	mov	r3, r0
 80037e2:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Disable interrupt */
  NVIC_DisableIRQ(IRQn);
 80037e4:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80037e8:	4618      	mov	r0, r3
 80037ea:	f7ff feff 	bl	80035ec <__NVIC_DisableIRQ>
}
 80037ee:	bf00      	nop
 80037f0:	3708      	adds	r7, #8
 80037f2:	46bd      	mov	sp, r7
 80037f4:	bd80      	pop	{r7, pc}

080037f6 <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80037f6:	b580      	push	{r7, lr}
 80037f8:	b082      	sub	sp, #8
 80037fa:	af00      	add	r7, sp, #0
 80037fc:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80037fe:	6878      	ldr	r0, [r7, #4]
 8003800:	f7ff ff94 	bl	800372c <SysTick_Config>
 8003804:	4603      	mov	r3, r0
}
 8003806:	4618      	mov	r0, r3
 8003808:	3708      	adds	r7, #8
 800380a:	46bd      	mov	sp, r7
 800380c:	bd80      	pop	{r7, pc}

0800380e <HAL_NVIC_ClearPendingIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
 800380e:	b580      	push	{r7, lr}
 8003810:	b082      	sub	sp, #8
 8003812:	af00      	add	r7, sp, #0
 8003814:	4603      	mov	r3, r0
 8003816:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Clear pending interrupt */
  NVIC_ClearPendingIRQ(IRQn);
 8003818:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800381c:	4618      	mov	r0, r3
 800381e:	f7ff ff09 	bl	8003634 <__NVIC_ClearPendingIRQ>
}
 8003822:	bf00      	nop
 8003824:	3708      	adds	r7, #8
 8003826:	46bd      	mov	sp, r7
 8003828:	bd80      	pop	{r7, pc}

0800382a <HAL_CRC_Init>:
  *         parameters in the CRC_InitTypeDef and create the associated handle.
  * @param  hcrc CRC handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_CRC_Init(CRC_HandleTypeDef *hcrc)
{
 800382a:	b580      	push	{r7, lr}
 800382c:	b082      	sub	sp, #8
 800382e:	af00      	add	r7, sp, #0
 8003830:	6078      	str	r0, [r7, #4]
  /* Check the CRC handle allocation */
  if (hcrc == NULL)
 8003832:	687b      	ldr	r3, [r7, #4]
 8003834:	2b00      	cmp	r3, #0
 8003836:	d101      	bne.n	800383c <HAL_CRC_Init+0x12>
  {
    return HAL_ERROR;
 8003838:	2301      	movs	r3, #1
 800383a:	e00e      	b.n	800385a <HAL_CRC_Init+0x30>
  }

  /* Check the parameters */
  assert_param(IS_CRC_ALL_INSTANCE(hcrc->Instance));

  if (hcrc->State == HAL_CRC_STATE_RESET)
 800383c:	687b      	ldr	r3, [r7, #4]
 800383e:	795b      	ldrb	r3, [r3, #5]
 8003840:	b2db      	uxtb	r3, r3
 8003842:	2b00      	cmp	r3, #0
 8003844:	d105      	bne.n	8003852 <HAL_CRC_Init+0x28>
  {
    /* Allocate lock resource and initialize it */
    hcrc->Lock = HAL_UNLOCKED;
 8003846:	687b      	ldr	r3, [r7, #4]
 8003848:	2200      	movs	r2, #0
 800384a:	711a      	strb	r2, [r3, #4]
    /* Init the low level hardware */
    HAL_CRC_MspInit(hcrc);
 800384c:	6878      	ldr	r0, [r7, #4]
 800384e:	f7fe f8ab 	bl	80019a8 <HAL_CRC_MspInit>
  }

  /* Change CRC peripheral state */
  hcrc->State = HAL_CRC_STATE_READY;
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	2201      	movs	r2, #1
 8003856:	715a      	strb	r2, [r3, #5]

  /* Return function status */
  return HAL_OK;
 8003858:	2300      	movs	r3, #0
}
 800385a:	4618      	mov	r0, r3
 800385c:	3708      	adds	r7, #8
 800385e:	46bd      	mov	sp, r7
 8003860:	bd80      	pop	{r7, pc}
	...

08003864 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 8003864:	b580      	push	{r7, lr}
 8003866:	b086      	sub	sp, #24
 8003868:	af00      	add	r7, sp, #0
 800386a:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 800386c:	2300      	movs	r3, #0
 800386e:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 8003870:	f7ff f8f6 	bl	8002a60 <HAL_GetTick>
 8003874:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 8003876:	687b      	ldr	r3, [r7, #4]
 8003878:	2b00      	cmp	r3, #0
 800387a:	d101      	bne.n	8003880 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 800387c:	2301      	movs	r3, #1
 800387e:	e099      	b.n	80039b4 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 8003880:	687b      	ldr	r3, [r7, #4]
 8003882:	2202      	movs	r2, #2
 8003884:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 8003888:	687b      	ldr	r3, [r7, #4]
 800388a:	2200      	movs	r2, #0
 800388c:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	681b      	ldr	r3, [r3, #0]
 8003894:	681a      	ldr	r2, [r3, #0]
 8003896:	687b      	ldr	r3, [r7, #4]
 8003898:	681b      	ldr	r3, [r3, #0]
 800389a:	f022 0201 	bic.w	r2, r2, #1
 800389e:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038a0:	e00f      	b.n	80038c2 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 80038a2:	f7ff f8dd 	bl	8002a60 <HAL_GetTick>
 80038a6:	4602      	mov	r2, r0
 80038a8:	693b      	ldr	r3, [r7, #16]
 80038aa:	1ad3      	subs	r3, r2, r3
 80038ac:	2b05      	cmp	r3, #5
 80038ae:	d908      	bls.n	80038c2 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 80038b0:	687b      	ldr	r3, [r7, #4]
 80038b2:	2220      	movs	r2, #32
 80038b4:	655a      	str	r2, [r3, #84]	@ 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 80038b6:	687b      	ldr	r3, [r7, #4]
 80038b8:	2203      	movs	r2, #3
 80038ba:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
      
      return HAL_TIMEOUT;
 80038be:	2303      	movs	r3, #3
 80038c0:	e078      	b.n	80039b4 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 80038c2:	687b      	ldr	r3, [r7, #4]
 80038c4:	681b      	ldr	r3, [r3, #0]
 80038c6:	681b      	ldr	r3, [r3, #0]
 80038c8:	f003 0301 	and.w	r3, r3, #1
 80038cc:	2b00      	cmp	r3, #0
 80038ce:	d1e8      	bne.n	80038a2 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	681b      	ldr	r3, [r3, #0]
 80038d4:	681b      	ldr	r3, [r3, #0]
 80038d6:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 80038d8:	697a      	ldr	r2, [r7, #20]
 80038da:	4b38      	ldr	r3, [pc, #224]	@ (80039bc <HAL_DMA_Init+0x158>)
 80038dc:	4013      	ands	r3, r2
 80038de:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	685a      	ldr	r2, [r3, #4]
 80038e4:	687b      	ldr	r3, [r7, #4]
 80038e6:	689b      	ldr	r3, [r3, #8]
 80038e8:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038ea:	687b      	ldr	r3, [r7, #4]
 80038ec:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 80038ee:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038f0:	687b      	ldr	r3, [r7, #4]
 80038f2:	691b      	ldr	r3, [r3, #16]
 80038f4:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038f6:	687b      	ldr	r3, [r7, #4]
 80038f8:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 80038fa:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	699b      	ldr	r3, [r3, #24]
 8003900:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003902:	687b      	ldr	r3, [r7, #4]
 8003904:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 8003906:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 8003908:	687b      	ldr	r3, [r7, #4]
 800390a:	6a1b      	ldr	r3, [r3, #32]
 800390c:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 800390e:	697a      	ldr	r2, [r7, #20]
 8003910:	4313      	orrs	r3, r2
 8003912:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 8003914:	687b      	ldr	r3, [r7, #4]
 8003916:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003918:	2b04      	cmp	r3, #4
 800391a:	d107      	bne.n	800392c <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 800391c:	687b      	ldr	r3, [r7, #4]
 800391e:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8003920:	687b      	ldr	r3, [r7, #4]
 8003922:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8003924:	4313      	orrs	r3, r2
 8003926:	697a      	ldr	r2, [r7, #20]
 8003928:	4313      	orrs	r3, r2
 800392a:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 800392c:	687b      	ldr	r3, [r7, #4]
 800392e:	681b      	ldr	r3, [r3, #0]
 8003930:	697a      	ldr	r2, [r7, #20]
 8003932:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 8003934:	687b      	ldr	r3, [r7, #4]
 8003936:	681b      	ldr	r3, [r3, #0]
 8003938:	695b      	ldr	r3, [r3, #20]
 800393a:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 800393c:	697b      	ldr	r3, [r7, #20]
 800393e:	f023 0307 	bic.w	r3, r3, #7
 8003942:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 8003944:	687b      	ldr	r3, [r7, #4]
 8003946:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003948:	697a      	ldr	r2, [r7, #20]
 800394a:	4313      	orrs	r3, r2
 800394c:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 800394e:	687b      	ldr	r3, [r7, #4]
 8003950:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003952:	2b04      	cmp	r3, #4
 8003954:	d117      	bne.n	8003986 <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 8003956:	687b      	ldr	r3, [r7, #4]
 8003958:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 800395a:	697a      	ldr	r2, [r7, #20]
 800395c:	4313      	orrs	r3, r2
 800395e:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 8003960:	687b      	ldr	r3, [r7, #4]
 8003962:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003964:	2b00      	cmp	r3, #0
 8003966:	d00e      	beq.n	8003986 <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 8003968:	6878      	ldr	r0, [r7, #4]
 800396a:	f000 fa91 	bl	8003e90 <DMA_CheckFifoParam>
 800396e:	4603      	mov	r3, r0
 8003970:	2b00      	cmp	r3, #0
 8003972:	d008      	beq.n	8003986 <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 8003974:	687b      	ldr	r3, [r7, #4]
 8003976:	2240      	movs	r2, #64	@ 0x40
 8003978:	655a      	str	r2, [r3, #84]	@ 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 800397a:	687b      	ldr	r3, [r7, #4]
 800397c:	2201      	movs	r2, #1
 800397e:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
        
        return HAL_ERROR; 
 8003982:	2301      	movs	r3, #1
 8003984:	e016      	b.n	80039b4 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 8003986:	687b      	ldr	r3, [r7, #4]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	697a      	ldr	r2, [r7, #20]
 800398c:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 800398e:	6878      	ldr	r0, [r7, #4]
 8003990:	f000 fa48 	bl	8003e24 <DMA_CalcBaseAndBitshift>
 8003994:	4603      	mov	r3, r0
 8003996:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003998:	687b      	ldr	r3, [r7, #4]
 800399a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 800399c:	223f      	movs	r2, #63	@ 0x3f
 800399e:	409a      	lsls	r2, r3
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 80039a4:	687b      	ldr	r3, [r7, #4]
 80039a6:	2200      	movs	r2, #0
 80039a8:	655a      	str	r2, [r3, #84]	@ 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 80039aa:	687b      	ldr	r3, [r7, #4]
 80039ac:	2201      	movs	r2, #1
 80039ae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

  return HAL_OK;
 80039b2:	2300      	movs	r3, #0
}
 80039b4:	4618      	mov	r0, r3
 80039b6:	3718      	adds	r7, #24
 80039b8:	46bd      	mov	sp, r7
 80039ba:	bd80      	pop	{r7, pc}
 80039bc:	f010803f 	.word	0xf010803f

080039c0 <HAL_DMA_Start_IT>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Start_IT(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 80039c0:	b580      	push	{r7, lr}
 80039c2:	b086      	sub	sp, #24
 80039c4:	af00      	add	r7, sp, #0
 80039c6:	60f8      	str	r0, [r7, #12]
 80039c8:	60b9      	str	r1, [r7, #8]
 80039ca:	607a      	str	r2, [r7, #4]
 80039cc:	603b      	str	r3, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 80039ce:	2300      	movs	r3, #0
 80039d0:	75fb      	strb	r3, [r7, #23]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 80039d2:	68fb      	ldr	r3, [r7, #12]
 80039d4:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 80039d6:	613b      	str	r3, [r7, #16]
  
  /* Check the parameters */
  assert_param(IS_DMA_BUFFER_SIZE(DataLength));
 
  /* Process locked */
  __HAL_LOCK(hdma);
 80039d8:	68fb      	ldr	r3, [r7, #12]
 80039da:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 80039de:	2b01      	cmp	r3, #1
 80039e0:	d101      	bne.n	80039e6 <HAL_DMA_Start_IT+0x26>
 80039e2:	2302      	movs	r3, #2
 80039e4:	e040      	b.n	8003a68 <HAL_DMA_Start_IT+0xa8>
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	2201      	movs	r2, #1
 80039ea:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
  
  if(HAL_DMA_STATE_READY == hdma->State)
 80039ee:	68fb      	ldr	r3, [r7, #12]
 80039f0:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 80039f4:	b2db      	uxtb	r3, r3
 80039f6:	2b01      	cmp	r3, #1
 80039f8:	d12f      	bne.n	8003a5a <HAL_DMA_Start_IT+0x9a>
  {
    /* Change DMA peripheral state */
    hdma->State = HAL_DMA_STATE_BUSY;
 80039fa:	68fb      	ldr	r3, [r7, #12]
 80039fc:	2202      	movs	r2, #2
 80039fe:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Initialize the error code */
    hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 8003a02:	68fb      	ldr	r3, [r7, #12]
 8003a04:	2200      	movs	r2, #0
 8003a06:	655a      	str	r2, [r3, #84]	@ 0x54
    
    /* Configure the source, destination address and the data length */
    DMA_SetConfig(hdma, SrcAddress, DstAddress, DataLength);
 8003a08:	683b      	ldr	r3, [r7, #0]
 8003a0a:	687a      	ldr	r2, [r7, #4]
 8003a0c:	68b9      	ldr	r1, [r7, #8]
 8003a0e:	68f8      	ldr	r0, [r7, #12]
 8003a10:	f000 f9da 	bl	8003dc8 <DMA_SetConfig>
    
    /* Clear all interrupt flags at correct offset within the register */
    regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003a18:	223f      	movs	r2, #63	@ 0x3f
 8003a1a:	409a      	lsls	r2, r3
 8003a1c:	693b      	ldr	r3, [r7, #16]
 8003a1e:	609a      	str	r2, [r3, #8]
    
    /* Enable Common interrupts*/
    hdma->Instance->CR  |= DMA_IT_TC | DMA_IT_TE | DMA_IT_DME;
 8003a20:	68fb      	ldr	r3, [r7, #12]
 8003a22:	681b      	ldr	r3, [r3, #0]
 8003a24:	681a      	ldr	r2, [r3, #0]
 8003a26:	68fb      	ldr	r3, [r7, #12]
 8003a28:	681b      	ldr	r3, [r3, #0]
 8003a2a:	f042 0216 	orr.w	r2, r2, #22
 8003a2e:	601a      	str	r2, [r3, #0]
    
    if(hdma->XferHalfCpltCallback != NULL)
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003a34:	2b00      	cmp	r3, #0
 8003a36:	d007      	beq.n	8003a48 <HAL_DMA_Start_IT+0x88>
    {
      hdma->Instance->CR  |= DMA_IT_HT;
 8003a38:	68fb      	ldr	r3, [r7, #12]
 8003a3a:	681b      	ldr	r3, [r3, #0]
 8003a3c:	681a      	ldr	r2, [r3, #0]
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	681b      	ldr	r3, [r3, #0]
 8003a42:	f042 0208 	orr.w	r2, r2, #8
 8003a46:	601a      	str	r2, [r3, #0]
    }
    
    /* Enable the Peripheral */
    __HAL_DMA_ENABLE(hdma);
 8003a48:	68fb      	ldr	r3, [r7, #12]
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	681a      	ldr	r2, [r3, #0]
 8003a4e:	68fb      	ldr	r3, [r7, #12]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	f042 0201 	orr.w	r2, r2, #1
 8003a56:	601a      	str	r2, [r3, #0]
 8003a58:	e005      	b.n	8003a66 <HAL_DMA_Start_IT+0xa6>
  }
  else
  {
    /* Process unlocked */
    __HAL_UNLOCK(hdma);	  
 8003a5a:	68fb      	ldr	r3, [r7, #12]
 8003a5c:	2200      	movs	r2, #0
 8003a5e:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    
    /* Return error status */
    status = HAL_BUSY;
 8003a62:	2302      	movs	r3, #2
 8003a64:	75fb      	strb	r3, [r7, #23]
  }
  
  return status;
 8003a66:	7dfb      	ldrb	r3, [r7, #23]
}
 8003a68:	4618      	mov	r0, r3
 8003a6a:	3718      	adds	r7, #24
 8003a6c:	46bd      	mov	sp, r7
 8003a6e:	bd80      	pop	{r7, pc}

08003a70 <HAL_DMA_Abort_IT>:
  * @param  hdma   pointer to a DMA_HandleTypeDef structure that contains
  *                 the configuration information for the specified DMA Stream.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Abort_IT(DMA_HandleTypeDef *hdma)
{
 8003a70:	b480      	push	{r7}
 8003a72:	b083      	sub	sp, #12
 8003a74:	af00      	add	r7, sp, #0
 8003a76:	6078      	str	r0, [r7, #4]
  if(hdma->State != HAL_DMA_STATE_BUSY)
 8003a78:	687b      	ldr	r3, [r7, #4]
 8003a7a:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003a7e:	b2db      	uxtb	r3, r3
 8003a80:	2b02      	cmp	r3, #2
 8003a82:	d004      	beq.n	8003a8e <HAL_DMA_Abort_IT+0x1e>
  {
    hdma->ErrorCode = HAL_DMA_ERROR_NO_XFER;
 8003a84:	687b      	ldr	r3, [r7, #4]
 8003a86:	2280      	movs	r2, #128	@ 0x80
 8003a88:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_ERROR;
 8003a8a:	2301      	movs	r3, #1
 8003a8c:	e00c      	b.n	8003aa8 <HAL_DMA_Abort_IT+0x38>
  }
  else
  {
    /* Set Abort State  */
    hdma->State = HAL_DMA_STATE_ABORT;
 8003a8e:	687b      	ldr	r3, [r7, #4]
 8003a90:	2205      	movs	r2, #5
 8003a92:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35
    
    /* Disable the stream */
    __HAL_DMA_DISABLE(hdma);
 8003a96:	687b      	ldr	r3, [r7, #4]
 8003a98:	681b      	ldr	r3, [r3, #0]
 8003a9a:	681a      	ldr	r2, [r3, #0]
 8003a9c:	687b      	ldr	r3, [r7, #4]
 8003a9e:	681b      	ldr	r3, [r3, #0]
 8003aa0:	f022 0201 	bic.w	r2, r2, #1
 8003aa4:	601a      	str	r2, [r3, #0]
  }

  return HAL_OK;
 8003aa6:	2300      	movs	r3, #0
}
 8003aa8:	4618      	mov	r0, r3
 8003aaa:	370c      	adds	r7, #12
 8003aac:	46bd      	mov	sp, r7
 8003aae:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003ab2:	4770      	bx	lr

08003ab4 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 8003ab4:	b580      	push	{r7, lr}
 8003ab6:	b086      	sub	sp, #24
 8003ab8:	af00      	add	r7, sp, #0
 8003aba:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 8003abc:	2300      	movs	r3, #0
 8003abe:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 8003ac0:	4b8e      	ldr	r3, [pc, #568]	@ (8003cfc <HAL_DMA_IRQHandler+0x248>)
 8003ac2:	681b      	ldr	r3, [r3, #0]
 8003ac4:	4a8e      	ldr	r2, [pc, #568]	@ (8003d00 <HAL_DMA_IRQHandler+0x24c>)
 8003ac6:	fba2 2303 	umull	r2, r3, r2, r3
 8003aca:	0a9b      	lsrs	r3, r3, #10
 8003acc:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 8003ace:	687b      	ldr	r3, [r7, #4]
 8003ad0:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
 8003ad2:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 8003ad4:	693b      	ldr	r3, [r7, #16]
 8003ad6:	681b      	ldr	r3, [r3, #0]
 8003ad8:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 8003ada:	687b      	ldr	r3, [r7, #4]
 8003adc:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ade:	2208      	movs	r2, #8
 8003ae0:	409a      	lsls	r2, r3
 8003ae2:	68fb      	ldr	r3, [r7, #12]
 8003ae4:	4013      	ands	r3, r2
 8003ae6:	2b00      	cmp	r3, #0
 8003ae8:	d01a      	beq.n	8003b20 <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	681b      	ldr	r3, [r3, #0]
 8003aee:	681b      	ldr	r3, [r3, #0]
 8003af0:	f003 0304 	and.w	r3, r3, #4
 8003af4:	2b00      	cmp	r3, #0
 8003af6:	d013      	beq.n	8003b20 <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 8003af8:	687b      	ldr	r3, [r7, #4]
 8003afa:	681b      	ldr	r3, [r3, #0]
 8003afc:	681a      	ldr	r2, [r3, #0]
 8003afe:	687b      	ldr	r3, [r7, #4]
 8003b00:	681b      	ldr	r3, [r3, #0]
 8003b02:	f022 0204 	bic.w	r2, r2, #4
 8003b06:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 8003b08:	687b      	ldr	r3, [r7, #4]
 8003b0a:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b0c:	2208      	movs	r2, #8
 8003b0e:	409a      	lsls	r2, r3
 8003b10:	693b      	ldr	r3, [r7, #16]
 8003b12:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 8003b14:	687b      	ldr	r3, [r7, #4]
 8003b16:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b18:	f043 0201 	orr.w	r2, r3, #1
 8003b1c:	687b      	ldr	r3, [r7, #4]
 8003b1e:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b20:	687b      	ldr	r3, [r7, #4]
 8003b22:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b24:	2201      	movs	r2, #1
 8003b26:	409a      	lsls	r2, r3
 8003b28:	68fb      	ldr	r3, [r7, #12]
 8003b2a:	4013      	ands	r3, r2
 8003b2c:	2b00      	cmp	r3, #0
 8003b2e:	d012      	beq.n	8003b56 <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 8003b30:	687b      	ldr	r3, [r7, #4]
 8003b32:	681b      	ldr	r3, [r3, #0]
 8003b34:	695b      	ldr	r3, [r3, #20]
 8003b36:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8003b3a:	2b00      	cmp	r3, #0
 8003b3c:	d00b      	beq.n	8003b56 <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 8003b3e:	687b      	ldr	r3, [r7, #4]
 8003b40:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b42:	2201      	movs	r2, #1
 8003b44:	409a      	lsls	r2, r3
 8003b46:	693b      	ldr	r3, [r7, #16]
 8003b48:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 8003b4a:	687b      	ldr	r3, [r7, #4]
 8003b4c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b4e:	f043 0202 	orr.w	r2, r3, #2
 8003b52:	687b      	ldr	r3, [r7, #4]
 8003b54:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 8003b56:	687b      	ldr	r3, [r7, #4]
 8003b58:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b5a:	2204      	movs	r2, #4
 8003b5c:	409a      	lsls	r2, r3
 8003b5e:	68fb      	ldr	r3, [r7, #12]
 8003b60:	4013      	ands	r3, r2
 8003b62:	2b00      	cmp	r3, #0
 8003b64:	d012      	beq.n	8003b8c <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 8003b66:	687b      	ldr	r3, [r7, #4]
 8003b68:	681b      	ldr	r3, [r3, #0]
 8003b6a:	681b      	ldr	r3, [r3, #0]
 8003b6c:	f003 0302 	and.w	r3, r3, #2
 8003b70:	2b00      	cmp	r3, #0
 8003b72:	d00b      	beq.n	8003b8c <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 8003b74:	687b      	ldr	r3, [r7, #4]
 8003b76:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b78:	2204      	movs	r2, #4
 8003b7a:	409a      	lsls	r2, r3
 8003b7c:	693b      	ldr	r3, [r7, #16]
 8003b7e:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 8003b80:	687b      	ldr	r3, [r7, #4]
 8003b82:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003b84:	f043 0204 	orr.w	r2, r3, #4
 8003b88:	687b      	ldr	r3, [r7, #4]
 8003b8a:	655a      	str	r2, [r3, #84]	@ 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003b90:	2210      	movs	r2, #16
 8003b92:	409a      	lsls	r2, r3
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	4013      	ands	r3, r2
 8003b98:	2b00      	cmp	r3, #0
 8003b9a:	d043      	beq.n	8003c24 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 8003b9c:	687b      	ldr	r3, [r7, #4]
 8003b9e:	681b      	ldr	r3, [r3, #0]
 8003ba0:	681b      	ldr	r3, [r3, #0]
 8003ba2:	f003 0308 	and.w	r3, r3, #8
 8003ba6:	2b00      	cmp	r3, #0
 8003ba8:	d03c      	beq.n	8003c24 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003bae:	2210      	movs	r2, #16
 8003bb0:	409a      	lsls	r2, r3
 8003bb2:	693b      	ldr	r3, [r7, #16]
 8003bb4:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003bb6:	687b      	ldr	r3, [r7, #4]
 8003bb8:	681b      	ldr	r3, [r3, #0]
 8003bba:	681b      	ldr	r3, [r3, #0]
 8003bbc:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003bc0:	2b00      	cmp	r3, #0
 8003bc2:	d018      	beq.n	8003bf6 <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003bc4:	687b      	ldr	r3, [r7, #4]
 8003bc6:	681b      	ldr	r3, [r3, #0]
 8003bc8:	681b      	ldr	r3, [r3, #0]
 8003bca:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d108      	bne.n	8003be4 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 8003bd2:	687b      	ldr	r3, [r7, #4]
 8003bd4:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bd6:	2b00      	cmp	r3, #0
 8003bd8:	d024      	beq.n	8003c24 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 8003bda:	687b      	ldr	r3, [r7, #4]
 8003bdc:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003bde:	6878      	ldr	r0, [r7, #4]
 8003be0:	4798      	blx	r3
 8003be2:	e01f      	b.n	8003c24 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 8003be4:	687b      	ldr	r3, [r7, #4]
 8003be6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003be8:	2b00      	cmp	r3, #0
 8003bea:	d01b      	beq.n	8003c24 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 8003bec:	687b      	ldr	r3, [r7, #4]
 8003bee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003bf0:	6878      	ldr	r0, [r7, #4]
 8003bf2:	4798      	blx	r3
 8003bf4:	e016      	b.n	8003c24 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003bf6:	687b      	ldr	r3, [r7, #4]
 8003bf8:	681b      	ldr	r3, [r3, #0]
 8003bfa:	681b      	ldr	r3, [r3, #0]
 8003bfc:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003c00:	2b00      	cmp	r3, #0
 8003c02:	d107      	bne.n	8003c14 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c04:	687b      	ldr	r3, [r7, #4]
 8003c06:	681b      	ldr	r3, [r3, #0]
 8003c08:	681a      	ldr	r2, [r3, #0]
 8003c0a:	687b      	ldr	r3, [r7, #4]
 8003c0c:	681b      	ldr	r3, [r3, #0]
 8003c0e:	f022 0208 	bic.w	r2, r2, #8
 8003c12:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 8003c14:	687b      	ldr	r3, [r7, #4]
 8003c16:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c18:	2b00      	cmp	r3, #0
 8003c1a:	d003      	beq.n	8003c24 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 8003c1c:	687b      	ldr	r3, [r7, #4]
 8003c1e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c20:	6878      	ldr	r0, [r7, #4]
 8003c22:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 8003c24:	687b      	ldr	r3, [r7, #4]
 8003c26:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c28:	2220      	movs	r2, #32
 8003c2a:	409a      	lsls	r2, r3
 8003c2c:	68fb      	ldr	r3, [r7, #12]
 8003c2e:	4013      	ands	r3, r2
 8003c30:	2b00      	cmp	r3, #0
 8003c32:	f000 808f 	beq.w	8003d54 <HAL_DMA_IRQHandler+0x2a0>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 8003c36:	687b      	ldr	r3, [r7, #4]
 8003c38:	681b      	ldr	r3, [r3, #0]
 8003c3a:	681b      	ldr	r3, [r3, #0]
 8003c3c:	f003 0310 	and.w	r3, r3, #16
 8003c40:	2b00      	cmp	r3, #0
 8003c42:	f000 8087 	beq.w	8003d54 <HAL_DMA_IRQHandler+0x2a0>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 8003c46:	687b      	ldr	r3, [r7, #4]
 8003c48:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003c4a:	2220      	movs	r2, #32
 8003c4c:	409a      	lsls	r2, r3
 8003c4e:	693b      	ldr	r3, [r7, #16]
 8003c50:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 8003c52:	687b      	ldr	r3, [r7, #4]
 8003c54:	f893 3035 	ldrb.w	r3, [r3, #53]	@ 0x35
 8003c58:	b2db      	uxtb	r3, r3
 8003c5a:	2b05      	cmp	r3, #5
 8003c5c:	d136      	bne.n	8003ccc <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 8003c5e:	687b      	ldr	r3, [r7, #4]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	681a      	ldr	r2, [r3, #0]
 8003c64:	687b      	ldr	r3, [r7, #4]
 8003c66:	681b      	ldr	r3, [r3, #0]
 8003c68:	f022 0216 	bic.w	r2, r2, #22
 8003c6c:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 8003c6e:	687b      	ldr	r3, [r7, #4]
 8003c70:	681b      	ldr	r3, [r3, #0]
 8003c72:	695a      	ldr	r2, [r3, #20]
 8003c74:	687b      	ldr	r3, [r7, #4]
 8003c76:	681b      	ldr	r3, [r3, #0]
 8003c78:	f022 0280 	bic.w	r2, r2, #128	@ 0x80
 8003c7c:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 8003c7e:	687b      	ldr	r3, [r7, #4]
 8003c80:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8003c82:	2b00      	cmp	r3, #0
 8003c84:	d103      	bne.n	8003c8e <HAL_DMA_IRQHandler+0x1da>
 8003c86:	687b      	ldr	r3, [r7, #4]
 8003c88:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8003c8a:	2b00      	cmp	r3, #0
 8003c8c:	d007      	beq.n	8003c9e <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 8003c8e:	687b      	ldr	r3, [r7, #4]
 8003c90:	681b      	ldr	r3, [r3, #0]
 8003c92:	681a      	ldr	r2, [r3, #0]
 8003c94:	687b      	ldr	r3, [r7, #4]
 8003c96:	681b      	ldr	r3, [r3, #0]
 8003c98:	f022 0208 	bic.w	r2, r2, #8
 8003c9c:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 8003c9e:	687b      	ldr	r3, [r7, #4]
 8003ca0:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8003ca2:	223f      	movs	r2, #63	@ 0x3f
 8003ca4:	409a      	lsls	r2, r3
 8003ca6:	693b      	ldr	r3, [r7, #16]
 8003ca8:	609a      	str	r2, [r3, #8]

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 8003caa:	687b      	ldr	r3, [r7, #4]
 8003cac:	2201      	movs	r2, #1
 8003cae:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 8003cb2:	687b      	ldr	r3, [r7, #4]
 8003cb4:	2200      	movs	r2, #0
 8003cb6:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34

        if(hdma->XferAbortCallback != NULL)
 8003cba:	687b      	ldr	r3, [r7, #4]
 8003cbc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003cbe:	2b00      	cmp	r3, #0
 8003cc0:	d07e      	beq.n	8003dc0 <HAL_DMA_IRQHandler+0x30c>
        {
          hdma->XferAbortCallback(hdma);
 8003cc2:	687b      	ldr	r3, [r7, #4]
 8003cc4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8003cc6:	6878      	ldr	r0, [r7, #4]
 8003cc8:	4798      	blx	r3
        }
        return;
 8003cca:	e079      	b.n	8003dc0 <HAL_DMA_IRQHandler+0x30c>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 8003ccc:	687b      	ldr	r3, [r7, #4]
 8003cce:	681b      	ldr	r3, [r3, #0]
 8003cd0:	681b      	ldr	r3, [r3, #0]
 8003cd2:	f403 2380 	and.w	r3, r3, #262144	@ 0x40000
 8003cd6:	2b00      	cmp	r3, #0
 8003cd8:	d01d      	beq.n	8003d16 <HAL_DMA_IRQHandler+0x262>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 8003cda:	687b      	ldr	r3, [r7, #4]
 8003cdc:	681b      	ldr	r3, [r3, #0]
 8003cde:	681b      	ldr	r3, [r3, #0]
 8003ce0:	f403 2300 	and.w	r3, r3, #524288	@ 0x80000
 8003ce4:	2b00      	cmp	r3, #0
 8003ce6:	d10d      	bne.n	8003d04 <HAL_DMA_IRQHandler+0x250>
        {
          if(hdma->XferM1CpltCallback != NULL)
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cec:	2b00      	cmp	r3, #0
 8003cee:	d031      	beq.n	8003d54 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 8003cf0:	687b      	ldr	r3, [r7, #4]
 8003cf2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8003cf4:	6878      	ldr	r0, [r7, #4]
 8003cf6:	4798      	blx	r3
 8003cf8:	e02c      	b.n	8003d54 <HAL_DMA_IRQHandler+0x2a0>
 8003cfa:	bf00      	nop
 8003cfc:	20000014 	.word	0x20000014
 8003d00:	1b4e81b5 	.word	0x1b4e81b5
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 8003d04:	687b      	ldr	r3, [r7, #4]
 8003d06:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d08:	2b00      	cmp	r3, #0
 8003d0a:	d023      	beq.n	8003d54 <HAL_DMA_IRQHandler+0x2a0>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 8003d0c:	687b      	ldr	r3, [r7, #4]
 8003d0e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d10:	6878      	ldr	r0, [r7, #4]
 8003d12:	4798      	blx	r3
 8003d14:	e01e      	b.n	8003d54 <HAL_DMA_IRQHandler+0x2a0>
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 8003d16:	687b      	ldr	r3, [r7, #4]
 8003d18:	681b      	ldr	r3, [r3, #0]
 8003d1a:	681b      	ldr	r3, [r3, #0]
 8003d1c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8003d20:	2b00      	cmp	r3, #0
 8003d22:	d10f      	bne.n	8003d44 <HAL_DMA_IRQHandler+0x290>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 8003d24:	687b      	ldr	r3, [r7, #4]
 8003d26:	681b      	ldr	r3, [r3, #0]
 8003d28:	681a      	ldr	r2, [r3, #0]
 8003d2a:	687b      	ldr	r3, [r7, #4]
 8003d2c:	681b      	ldr	r3, [r3, #0]
 8003d2e:	f022 0210 	bic.w	r2, r2, #16
 8003d32:	601a      	str	r2, [r3, #0]

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 8003d34:	687b      	ldr	r3, [r7, #4]
 8003d36:	2201      	movs	r2, #1
 8003d38:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 8003d3c:	687b      	ldr	r3, [r7, #4]
 8003d3e:	2200      	movs	r2, #0
 8003d40:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
        }

        if(hdma->XferCpltCallback != NULL)
 8003d44:	687b      	ldr	r3, [r7, #4]
 8003d46:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d48:	2b00      	cmp	r3, #0
 8003d4a:	d003      	beq.n	8003d54 <HAL_DMA_IRQHandler+0x2a0>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 8003d4c:	687b      	ldr	r3, [r7, #4]
 8003d4e:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8003d50:	6878      	ldr	r0, [r7, #4]
 8003d52:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 8003d54:	687b      	ldr	r3, [r7, #4]
 8003d56:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d58:	2b00      	cmp	r3, #0
 8003d5a:	d032      	beq.n	8003dc2 <HAL_DMA_IRQHandler+0x30e>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 8003d5c:	687b      	ldr	r3, [r7, #4]
 8003d5e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8003d60:	f003 0301 	and.w	r3, r3, #1
 8003d64:	2b00      	cmp	r3, #0
 8003d66:	d022      	beq.n	8003dae <HAL_DMA_IRQHandler+0x2fa>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 8003d68:	687b      	ldr	r3, [r7, #4]
 8003d6a:	2205      	movs	r2, #5
 8003d6c:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 8003d70:	687b      	ldr	r3, [r7, #4]
 8003d72:	681b      	ldr	r3, [r3, #0]
 8003d74:	681a      	ldr	r2, [r3, #0]
 8003d76:	687b      	ldr	r3, [r7, #4]
 8003d78:	681b      	ldr	r3, [r3, #0]
 8003d7a:	f022 0201 	bic.w	r2, r2, #1
 8003d7e:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 8003d80:	68bb      	ldr	r3, [r7, #8]
 8003d82:	3301      	adds	r3, #1
 8003d84:	60bb      	str	r3, [r7, #8]
 8003d86:	697a      	ldr	r2, [r7, #20]
 8003d88:	429a      	cmp	r2, r3
 8003d8a:	d307      	bcc.n	8003d9c <HAL_DMA_IRQHandler+0x2e8>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 8003d8c:	687b      	ldr	r3, [r7, #4]
 8003d8e:	681b      	ldr	r3, [r3, #0]
 8003d90:	681b      	ldr	r3, [r3, #0]
 8003d92:	f003 0301 	and.w	r3, r3, #1
 8003d96:	2b00      	cmp	r3, #0
 8003d98:	d1f2      	bne.n	8003d80 <HAL_DMA_IRQHandler+0x2cc>
 8003d9a:	e000      	b.n	8003d9e <HAL_DMA_IRQHandler+0x2ea>
          break;
 8003d9c:	bf00      	nop

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	2201      	movs	r2, #1
 8003da2:	f883 2035 	strb.w	r2, [r3, #53]	@ 0x35

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 8003da6:	687b      	ldr	r3, [r7, #4]
 8003da8:	2200      	movs	r2, #0
 8003daa:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }

    if(hdma->XferErrorCallback != NULL)
 8003dae:	687b      	ldr	r3, [r7, #4]
 8003db0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003db2:	2b00      	cmp	r3, #0
 8003db4:	d005      	beq.n	8003dc2 <HAL_DMA_IRQHandler+0x30e>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 8003db6:	687b      	ldr	r3, [r7, #4]
 8003db8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8003dba:	6878      	ldr	r0, [r7, #4]
 8003dbc:	4798      	blx	r3
 8003dbe:	e000      	b.n	8003dc2 <HAL_DMA_IRQHandler+0x30e>
        return;
 8003dc0:	bf00      	nop
    }
  }
}
 8003dc2:	3718      	adds	r7, #24
 8003dc4:	46bd      	mov	sp, r7
 8003dc6:	bd80      	pop	{r7, pc}

08003dc8 <DMA_SetConfig>:
  * @param  DstAddress The destination memory Buffer address
  * @param  DataLength The length of data to be transferred from source to destination
  * @retval HAL status
  */
static void DMA_SetConfig(DMA_HandleTypeDef *hdma, uint32_t SrcAddress, uint32_t DstAddress, uint32_t DataLength)
{
 8003dc8:	b480      	push	{r7}
 8003dca:	b085      	sub	sp, #20
 8003dcc:	af00      	add	r7, sp, #0
 8003dce:	60f8      	str	r0, [r7, #12]
 8003dd0:	60b9      	str	r1, [r7, #8]
 8003dd2:	607a      	str	r2, [r7, #4]
 8003dd4:	603b      	str	r3, [r7, #0]
  /* Clear DBM bit */
  hdma->Instance->CR &= (uint32_t)(~DMA_SxCR_DBM);
 8003dd6:	68fb      	ldr	r3, [r7, #12]
 8003dd8:	681b      	ldr	r3, [r3, #0]
 8003dda:	681a      	ldr	r2, [r3, #0]
 8003ddc:	68fb      	ldr	r3, [r7, #12]
 8003dde:	681b      	ldr	r3, [r3, #0]
 8003de0:	f422 2280 	bic.w	r2, r2, #262144	@ 0x40000
 8003de4:	601a      	str	r2, [r3, #0]

  /* Configure DMA Stream data length */
  hdma->Instance->NDTR = DataLength;
 8003de6:	68fb      	ldr	r3, [r7, #12]
 8003de8:	681b      	ldr	r3, [r3, #0]
 8003dea:	683a      	ldr	r2, [r7, #0]
 8003dec:	605a      	str	r2, [r3, #4]

  /* Memory to Peripheral */
  if((hdma->Init.Direction) == DMA_MEMORY_TO_PERIPH)
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	689b      	ldr	r3, [r3, #8]
 8003df2:	2b40      	cmp	r3, #64	@ 0x40
 8003df4:	d108      	bne.n	8003e08 <DMA_SetConfig+0x40>
  {
    /* Configure DMA Stream destination address */
    hdma->Instance->PAR = DstAddress;
 8003df6:	68fb      	ldr	r3, [r7, #12]
 8003df8:	681b      	ldr	r3, [r3, #0]
 8003dfa:	687a      	ldr	r2, [r7, #4]
 8003dfc:	609a      	str	r2, [r3, #8]

    /* Configure DMA Stream source address */
    hdma->Instance->M0AR = SrcAddress;
 8003dfe:	68fb      	ldr	r3, [r7, #12]
 8003e00:	681b      	ldr	r3, [r3, #0]
 8003e02:	68ba      	ldr	r2, [r7, #8]
 8003e04:	60da      	str	r2, [r3, #12]
    hdma->Instance->PAR = SrcAddress;

    /* Configure DMA Stream destination address */
    hdma->Instance->M0AR = DstAddress;
  }
}
 8003e06:	e007      	b.n	8003e18 <DMA_SetConfig+0x50>
    hdma->Instance->PAR = SrcAddress;
 8003e08:	68fb      	ldr	r3, [r7, #12]
 8003e0a:	681b      	ldr	r3, [r3, #0]
 8003e0c:	68ba      	ldr	r2, [r7, #8]
 8003e0e:	609a      	str	r2, [r3, #8]
    hdma->Instance->M0AR = DstAddress;
 8003e10:	68fb      	ldr	r3, [r7, #12]
 8003e12:	681b      	ldr	r3, [r3, #0]
 8003e14:	687a      	ldr	r2, [r7, #4]
 8003e16:	60da      	str	r2, [r3, #12]
}
 8003e18:	bf00      	nop
 8003e1a:	3714      	adds	r7, #20
 8003e1c:	46bd      	mov	sp, r7
 8003e1e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e22:	4770      	bx	lr

08003e24 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 8003e24:	b480      	push	{r7}
 8003e26:	b085      	sub	sp, #20
 8003e28:	af00      	add	r7, sp, #0
 8003e2a:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 8003e2c:	687b      	ldr	r3, [r7, #4]
 8003e2e:	681b      	ldr	r3, [r3, #0]
 8003e30:	b2db      	uxtb	r3, r3
 8003e32:	3b10      	subs	r3, #16
 8003e34:	4a14      	ldr	r2, [pc, #80]	@ (8003e88 <DMA_CalcBaseAndBitshift+0x64>)
 8003e36:	fba2 2303 	umull	r2, r3, r2, r3
 8003e3a:	091b      	lsrs	r3, r3, #4
 8003e3c:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 8003e3e:	4a13      	ldr	r2, [pc, #76]	@ (8003e8c <DMA_CalcBaseAndBitshift+0x68>)
 8003e40:	68fb      	ldr	r3, [r7, #12]
 8003e42:	4413      	add	r3, r2
 8003e44:	781b      	ldrb	r3, [r3, #0]
 8003e46:	461a      	mov	r2, r3
 8003e48:	687b      	ldr	r3, [r7, #4]
 8003e4a:	65da      	str	r2, [r3, #92]	@ 0x5c
  
  if (stream_number > 3U)
 8003e4c:	68fb      	ldr	r3, [r7, #12]
 8003e4e:	2b03      	cmp	r3, #3
 8003e50:	d909      	bls.n	8003e66 <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 8003e52:	687b      	ldr	r3, [r7, #4]
 8003e54:	681b      	ldr	r3, [r3, #0]
 8003e56:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e5a:	f023 0303 	bic.w	r3, r3, #3
 8003e5e:	1d1a      	adds	r2, r3, #4
 8003e60:	687b      	ldr	r3, [r7, #4]
 8003e62:	659a      	str	r2, [r3, #88]	@ 0x58
 8003e64:	e007      	b.n	8003e76 <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 8003e66:	687b      	ldr	r3, [r7, #4]
 8003e68:	681b      	ldr	r3, [r3, #0]
 8003e6a:	f423 737f 	bic.w	r3, r3, #1020	@ 0x3fc
 8003e6e:	f023 0303 	bic.w	r3, r3, #3
 8003e72:	687a      	ldr	r2, [r7, #4]
 8003e74:	6593      	str	r3, [r2, #88]	@ 0x58
  }
  
  return hdma->StreamBaseAddress;
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	6d9b      	ldr	r3, [r3, #88]	@ 0x58
}
 8003e7a:	4618      	mov	r0, r3
 8003e7c:	3714      	adds	r7, #20
 8003e7e:	46bd      	mov	sp, r7
 8003e80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003e84:	4770      	bx	lr
 8003e86:	bf00      	nop
 8003e88:	aaaaaaab 	.word	0xaaaaaaab
 8003e8c:	080281d0 	.word	0x080281d0

08003e90 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 8003e90:	b480      	push	{r7}
 8003e92:	b085      	sub	sp, #20
 8003e94:	af00      	add	r7, sp, #0
 8003e96:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8003e98:	2300      	movs	r3, #0
 8003e9a:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 8003e9c:	687b      	ldr	r3, [r7, #4]
 8003e9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8003ea0:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 8003ea2:	687b      	ldr	r3, [r7, #4]
 8003ea4:	699b      	ldr	r3, [r3, #24]
 8003ea6:	2b00      	cmp	r3, #0
 8003ea8:	d11f      	bne.n	8003eea <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 8003eaa:	68bb      	ldr	r3, [r7, #8]
 8003eac:	2b03      	cmp	r3, #3
 8003eae:	d856      	bhi.n	8003f5e <DMA_CheckFifoParam+0xce>
 8003eb0:	a201      	add	r2, pc, #4	@ (adr r2, 8003eb8 <DMA_CheckFifoParam+0x28>)
 8003eb2:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003eb6:	bf00      	nop
 8003eb8:	08003ec9 	.word	0x08003ec9
 8003ebc:	08003edb 	.word	0x08003edb
 8003ec0:	08003ec9 	.word	0x08003ec9
 8003ec4:	08003f5f 	.word	0x08003f5f
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003ec8:	687b      	ldr	r3, [r7, #4]
 8003eca:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ecc:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003ed0:	2b00      	cmp	r3, #0
 8003ed2:	d046      	beq.n	8003f62 <DMA_CheckFifoParam+0xd2>
      {
        status = HAL_ERROR;
 8003ed4:	2301      	movs	r3, #1
 8003ed6:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ed8:	e043      	b.n	8003f62 <DMA_CheckFifoParam+0xd2>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003eda:	687b      	ldr	r3, [r7, #4]
 8003edc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003ede:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003ee2:	d140      	bne.n	8003f66 <DMA_CheckFifoParam+0xd6>
      {
        status = HAL_ERROR;
 8003ee4:	2301      	movs	r3, #1
 8003ee6:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003ee8:	e03d      	b.n	8003f66 <DMA_CheckFifoParam+0xd6>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 8003eea:	687b      	ldr	r3, [r7, #4]
 8003eec:	699b      	ldr	r3, [r3, #24]
 8003eee:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8003ef2:	d121      	bne.n	8003f38 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 8003ef4:	68bb      	ldr	r3, [r7, #8]
 8003ef6:	2b03      	cmp	r3, #3
 8003ef8:	d837      	bhi.n	8003f6a <DMA_CheckFifoParam+0xda>
 8003efa:	a201      	add	r2, pc, #4	@ (adr r2, 8003f00 <DMA_CheckFifoParam+0x70>)
 8003efc:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f00:	08003f11 	.word	0x08003f11
 8003f04:	08003f17 	.word	0x08003f17
 8003f08:	08003f11 	.word	0x08003f11
 8003f0c:	08003f29 	.word	0x08003f29
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 8003f10:	2301      	movs	r3, #1
 8003f12:	73fb      	strb	r3, [r7, #15]
      break;
 8003f14:	e030      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f16:	687b      	ldr	r3, [r7, #4]
 8003f18:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f1a:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f1e:	2b00      	cmp	r3, #0
 8003f20:	d025      	beq.n	8003f6e <DMA_CheckFifoParam+0xde>
      {
        status = HAL_ERROR;
 8003f22:	2301      	movs	r3, #1
 8003f24:	73fb      	strb	r3, [r7, #15]
      }
      break;
 8003f26:	e022      	b.n	8003f6e <DMA_CheckFifoParam+0xde>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 8003f28:	687b      	ldr	r3, [r7, #4]
 8003f2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f2c:	f1b3 7fc0 	cmp.w	r3, #25165824	@ 0x1800000
 8003f30:	d11f      	bne.n	8003f72 <DMA_CheckFifoParam+0xe2>
      {
        status = HAL_ERROR;
 8003f32:	2301      	movs	r3, #1
 8003f34:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 8003f36:	e01c      	b.n	8003f72 <DMA_CheckFifoParam+0xe2>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 8003f38:	68bb      	ldr	r3, [r7, #8]
 8003f3a:	2b02      	cmp	r3, #2
 8003f3c:	d903      	bls.n	8003f46 <DMA_CheckFifoParam+0xb6>
 8003f3e:	68bb      	ldr	r3, [r7, #8]
 8003f40:	2b03      	cmp	r3, #3
 8003f42:	d003      	beq.n	8003f4c <DMA_CheckFifoParam+0xbc>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 8003f44:	e018      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      status = HAL_ERROR;
 8003f46:	2301      	movs	r3, #1
 8003f48:	73fb      	strb	r3, [r7, #15]
      break;
 8003f4a:	e015      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 8003f4c:	687b      	ldr	r3, [r7, #4]
 8003f4e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8003f50:	f003 7380 	and.w	r3, r3, #16777216	@ 0x1000000
 8003f54:	2b00      	cmp	r3, #0
 8003f56:	d00e      	beq.n	8003f76 <DMA_CheckFifoParam+0xe6>
        status = HAL_ERROR;
 8003f58:	2301      	movs	r3, #1
 8003f5a:	73fb      	strb	r3, [r7, #15]
      break;
 8003f5c:	e00b      	b.n	8003f76 <DMA_CheckFifoParam+0xe6>
      break;
 8003f5e:	bf00      	nop
 8003f60:	e00a      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;
 8003f62:	bf00      	nop
 8003f64:	e008      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;
 8003f66:	bf00      	nop
 8003f68:	e006      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;
 8003f6a:	bf00      	nop
 8003f6c:	e004      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;
 8003f6e:	bf00      	nop
 8003f70:	e002      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;   
 8003f72:	bf00      	nop
 8003f74:	e000      	b.n	8003f78 <DMA_CheckFifoParam+0xe8>
      break;
 8003f76:	bf00      	nop
    }
  } 
  
  return status; 
 8003f78:	7bfb      	ldrb	r3, [r7, #15]
}
 8003f7a:	4618      	mov	r0, r3
 8003f7c:	3714      	adds	r7, #20
 8003f7e:	46bd      	mov	sp, r7
 8003f80:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003f84:	4770      	bx	lr
 8003f86:	bf00      	nop

08003f88 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003f88:	b480      	push	{r7}
 8003f8a:	b089      	sub	sp, #36	@ 0x24
 8003f8c:	af00      	add	r7, sp, #0
 8003f8e:	6078      	str	r0, [r7, #4]
 8003f90:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 8003f92:	2300      	movs	r3, #0
 8003f94:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003f96:	2300      	movs	r3, #0
 8003f98:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 8003f9a:	2300      	movs	r3, #0
 8003f9c:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_ALL_INSTANCE(GPIOx));
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 8003f9e:	2300      	movs	r3, #0
 8003fa0:	61fb      	str	r3, [r7, #28]
 8003fa2:	e165      	b.n	8004270 <HAL_GPIO_Init+0x2e8>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 8003fa4:	2201      	movs	r2, #1
 8003fa6:	69fb      	ldr	r3, [r7, #28]
 8003fa8:	fa02 f303 	lsl.w	r3, r2, r3
 8003fac:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 8003fae:	683b      	ldr	r3, [r7, #0]
 8003fb0:	681b      	ldr	r3, [r3, #0]
 8003fb2:	697a      	ldr	r2, [r7, #20]
 8003fb4:	4013      	ands	r3, r2
 8003fb6:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 8003fb8:	693a      	ldr	r2, [r7, #16]
 8003fba:	697b      	ldr	r3, [r7, #20]
 8003fbc:	429a      	cmp	r2, r3
 8003fbe:	f040 8154 	bne.w	800426a <HAL_GPIO_Init+0x2e2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003fc2:	683b      	ldr	r3, [r7, #0]
 8003fc4:	685b      	ldr	r3, [r3, #4]
 8003fc6:	f003 0303 	and.w	r3, r3, #3
 8003fca:	2b01      	cmp	r3, #1
 8003fcc:	d005      	beq.n	8003fda <HAL_GPIO_Init+0x52>
          (GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8003fce:	683b      	ldr	r3, [r7, #0]
 8003fd0:	685b      	ldr	r3, [r3, #4]
 8003fd2:	f003 0303 	and.w	r3, r3, #3
      if(((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) || \
 8003fd6:	2b02      	cmp	r3, #2
 8003fd8:	d130      	bne.n	800403c <HAL_GPIO_Init+0xb4>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 8003fda:	687b      	ldr	r3, [r7, #4]
 8003fdc:	689b      	ldr	r3, [r3, #8]
 8003fde:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 8003fe0:	69fb      	ldr	r3, [r7, #28]
 8003fe2:	005b      	lsls	r3, r3, #1
 8003fe4:	2203      	movs	r2, #3
 8003fe6:	fa02 f303 	lsl.w	r3, r2, r3
 8003fea:	43db      	mvns	r3, r3
 8003fec:	69ba      	ldr	r2, [r7, #24]
 8003fee:	4013      	ands	r3, r2
 8003ff0:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8003ff2:	683b      	ldr	r3, [r7, #0]
 8003ff4:	68da      	ldr	r2, [r3, #12]
 8003ff6:	69fb      	ldr	r3, [r7, #28]
 8003ff8:	005b      	lsls	r3, r3, #1
 8003ffa:	fa02 f303 	lsl.w	r3, r2, r3
 8003ffe:	69ba      	ldr	r2, [r7, #24]
 8004000:	4313      	orrs	r3, r2
 8004002:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 8004004:	687b      	ldr	r3, [r7, #4]
 8004006:	69ba      	ldr	r2, [r7, #24]
 8004008:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 800400a:	687b      	ldr	r3, [r7, #4]
 800400c:	685b      	ldr	r3, [r3, #4]
 800400e:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8004010:	2201      	movs	r2, #1
 8004012:	69fb      	ldr	r3, [r7, #28]
 8004014:	fa02 f303 	lsl.w	r3, r2, r3
 8004018:	43db      	mvns	r3, r3
 800401a:	69ba      	ldr	r2, [r7, #24]
 800401c:	4013      	ands	r3, r2
 800401e:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8004020:	683b      	ldr	r3, [r7, #0]
 8004022:	685b      	ldr	r3, [r3, #4]
 8004024:	091b      	lsrs	r3, r3, #4
 8004026:	f003 0201 	and.w	r2, r3, #1
 800402a:	69fb      	ldr	r3, [r7, #28]
 800402c:	fa02 f303 	lsl.w	r3, r2, r3
 8004030:	69ba      	ldr	r2, [r7, #24]
 8004032:	4313      	orrs	r3, r2
 8004034:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 8004036:	687b      	ldr	r3, [r7, #4]
 8004038:	69ba      	ldr	r2, [r7, #24]
 800403a:	605a      	str	r2, [r3, #4]
       }

      if((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 800403c:	683b      	ldr	r3, [r7, #0]
 800403e:	685b      	ldr	r3, [r3, #4]
 8004040:	f003 0303 	and.w	r3, r3, #3
 8004044:	2b03      	cmp	r3, #3
 8004046:	d017      	beq.n	8004078 <HAL_GPIO_Init+0xf0>
      {
        /* Check the parameters */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
        
        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 8004048:	687b      	ldr	r3, [r7, #4]
 800404a:	68db      	ldr	r3, [r3, #12]
 800404c:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 800404e:	69fb      	ldr	r3, [r7, #28]
 8004050:	005b      	lsls	r3, r3, #1
 8004052:	2203      	movs	r2, #3
 8004054:	fa02 f303 	lsl.w	r3, r2, r3
 8004058:	43db      	mvns	r3, r3
 800405a:	69ba      	ldr	r2, [r7, #24]
 800405c:	4013      	ands	r3, r2
 800405e:	61bb      	str	r3, [r7, #24]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8004060:	683b      	ldr	r3, [r7, #0]
 8004062:	689a      	ldr	r2, [r3, #8]
 8004064:	69fb      	ldr	r3, [r7, #28]
 8004066:	005b      	lsls	r3, r3, #1
 8004068:	fa02 f303 	lsl.w	r3, r2, r3
 800406c:	69ba      	ldr	r2, [r7, #24]
 800406e:	4313      	orrs	r3, r2
 8004070:	61bb      	str	r3, [r7, #24]
        GPIOx->PUPDR = temp;
 8004072:	687b      	ldr	r3, [r7, #4]
 8004074:	69ba      	ldr	r2, [r7, #24]
 8004076:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 8004078:	683b      	ldr	r3, [r7, #0]
 800407a:	685b      	ldr	r3, [r3, #4]
 800407c:	f003 0303 	and.w	r3, r3, #3
 8004080:	2b02      	cmp	r3, #2
 8004082:	d123      	bne.n	80040cc <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 8004084:	69fb      	ldr	r3, [r7, #28]
 8004086:	08da      	lsrs	r2, r3, #3
 8004088:	687b      	ldr	r3, [r7, #4]
 800408a:	3208      	adds	r2, #8
 800408c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8004090:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 8004092:	69fb      	ldr	r3, [r7, #28]
 8004094:	f003 0307 	and.w	r3, r3, #7
 8004098:	009b      	lsls	r3, r3, #2
 800409a:	220f      	movs	r2, #15
 800409c:	fa02 f303 	lsl.w	r3, r2, r3
 80040a0:	43db      	mvns	r3, r3
 80040a2:	69ba      	ldr	r2, [r7, #24]
 80040a4:	4013      	ands	r3, r2
 80040a6:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 80040a8:	683b      	ldr	r3, [r7, #0]
 80040aa:	691a      	ldr	r2, [r3, #16]
 80040ac:	69fb      	ldr	r3, [r7, #28]
 80040ae:	f003 0307 	and.w	r3, r3, #7
 80040b2:	009b      	lsls	r3, r3, #2
 80040b4:	fa02 f303 	lsl.w	r3, r2, r3
 80040b8:	69ba      	ldr	r2, [r7, #24]
 80040ba:	4313      	orrs	r3, r2
 80040bc:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 80040be:	69fb      	ldr	r3, [r7, #28]
 80040c0:	08da      	lsrs	r2, r3, #3
 80040c2:	687b      	ldr	r3, [r7, #4]
 80040c4:	3208      	adds	r2, #8
 80040c6:	69b9      	ldr	r1, [r7, #24]
 80040c8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80040cc:	687b      	ldr	r3, [r7, #4]
 80040ce:	681b      	ldr	r3, [r3, #0]
 80040d0:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 80040d2:	69fb      	ldr	r3, [r7, #28]
 80040d4:	005b      	lsls	r3, r3, #1
 80040d6:	2203      	movs	r2, #3
 80040d8:	fa02 f303 	lsl.w	r3, r2, r3
 80040dc:	43db      	mvns	r3, r3
 80040de:	69ba      	ldr	r2, [r7, #24]
 80040e0:	4013      	ands	r3, r2
 80040e2:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80040e4:	683b      	ldr	r3, [r7, #0]
 80040e6:	685b      	ldr	r3, [r3, #4]
 80040e8:	f003 0203 	and.w	r2, r3, #3
 80040ec:	69fb      	ldr	r3, [r7, #28]
 80040ee:	005b      	lsls	r3, r3, #1
 80040f0:	fa02 f303 	lsl.w	r3, r2, r3
 80040f4:	69ba      	ldr	r2, [r7, #24]
 80040f6:	4313      	orrs	r3, r2
 80040f8:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 80040fa:	687b      	ldr	r3, [r7, #4]
 80040fc:	69ba      	ldr	r2, [r7, #24]
 80040fe:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8004100:	683b      	ldr	r3, [r7, #0]
 8004102:	685b      	ldr	r3, [r3, #4]
 8004104:	f403 3340 	and.w	r3, r3, #196608	@ 0x30000
 8004108:	2b00      	cmp	r3, #0
 800410a:	f000 80ae 	beq.w	800426a <HAL_GPIO_Init+0x2e2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 800410e:	2300      	movs	r3, #0
 8004110:	60fb      	str	r3, [r7, #12]
 8004112:	4b5d      	ldr	r3, [pc, #372]	@ (8004288 <HAL_GPIO_Init+0x300>)
 8004114:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004116:	4a5c      	ldr	r2, [pc, #368]	@ (8004288 <HAL_GPIO_Init+0x300>)
 8004118:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 800411c:	6453      	str	r3, [r2, #68]	@ 0x44
 800411e:	4b5a      	ldr	r3, [pc, #360]	@ (8004288 <HAL_GPIO_Init+0x300>)
 8004120:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004122:	f403 4380 	and.w	r3, r3, #16384	@ 0x4000
 8004126:	60fb      	str	r3, [r7, #12]
 8004128:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 800412a:	4a58      	ldr	r2, [pc, #352]	@ (800428c <HAL_GPIO_Init+0x304>)
 800412c:	69fb      	ldr	r3, [r7, #28]
 800412e:	089b      	lsrs	r3, r3, #2
 8004130:	3302      	adds	r3, #2
 8004132:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8004136:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 8004138:	69fb      	ldr	r3, [r7, #28]
 800413a:	f003 0303 	and.w	r3, r3, #3
 800413e:	009b      	lsls	r3, r3, #2
 8004140:	220f      	movs	r2, #15
 8004142:	fa02 f303 	lsl.w	r3, r2, r3
 8004146:	43db      	mvns	r3, r3
 8004148:	69ba      	ldr	r2, [r7, #24]
 800414a:	4013      	ands	r3, r2
 800414c:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	4a4f      	ldr	r2, [pc, #316]	@ (8004290 <HAL_GPIO_Init+0x308>)
 8004152:	4293      	cmp	r3, r2
 8004154:	d025      	beq.n	80041a2 <HAL_GPIO_Init+0x21a>
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	4a4e      	ldr	r2, [pc, #312]	@ (8004294 <HAL_GPIO_Init+0x30c>)
 800415a:	4293      	cmp	r3, r2
 800415c:	d01f      	beq.n	800419e <HAL_GPIO_Init+0x216>
 800415e:	687b      	ldr	r3, [r7, #4]
 8004160:	4a4d      	ldr	r2, [pc, #308]	@ (8004298 <HAL_GPIO_Init+0x310>)
 8004162:	4293      	cmp	r3, r2
 8004164:	d019      	beq.n	800419a <HAL_GPIO_Init+0x212>
 8004166:	687b      	ldr	r3, [r7, #4]
 8004168:	4a4c      	ldr	r2, [pc, #304]	@ (800429c <HAL_GPIO_Init+0x314>)
 800416a:	4293      	cmp	r3, r2
 800416c:	d013      	beq.n	8004196 <HAL_GPIO_Init+0x20e>
 800416e:	687b      	ldr	r3, [r7, #4]
 8004170:	4a4b      	ldr	r2, [pc, #300]	@ (80042a0 <HAL_GPIO_Init+0x318>)
 8004172:	4293      	cmp	r3, r2
 8004174:	d00d      	beq.n	8004192 <HAL_GPIO_Init+0x20a>
 8004176:	687b      	ldr	r3, [r7, #4]
 8004178:	4a4a      	ldr	r2, [pc, #296]	@ (80042a4 <HAL_GPIO_Init+0x31c>)
 800417a:	4293      	cmp	r3, r2
 800417c:	d007      	beq.n	800418e <HAL_GPIO_Init+0x206>
 800417e:	687b      	ldr	r3, [r7, #4]
 8004180:	4a49      	ldr	r2, [pc, #292]	@ (80042a8 <HAL_GPIO_Init+0x320>)
 8004182:	4293      	cmp	r3, r2
 8004184:	d101      	bne.n	800418a <HAL_GPIO_Init+0x202>
 8004186:	2306      	movs	r3, #6
 8004188:	e00c      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 800418a:	2307      	movs	r3, #7
 800418c:	e00a      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 800418e:	2305      	movs	r3, #5
 8004190:	e008      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 8004192:	2304      	movs	r3, #4
 8004194:	e006      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 8004196:	2303      	movs	r3, #3
 8004198:	e004      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 800419a:	2302      	movs	r3, #2
 800419c:	e002      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 800419e:	2301      	movs	r3, #1
 80041a0:	e000      	b.n	80041a4 <HAL_GPIO_Init+0x21c>
 80041a2:	2300      	movs	r3, #0
 80041a4:	69fa      	ldr	r2, [r7, #28]
 80041a6:	f002 0203 	and.w	r2, r2, #3
 80041aa:	0092      	lsls	r2, r2, #2
 80041ac:	4093      	lsls	r3, r2
 80041ae:	69ba      	ldr	r2, [r7, #24]
 80041b0:	4313      	orrs	r3, r2
 80041b2:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80041b4:	4935      	ldr	r1, [pc, #212]	@ (800428c <HAL_GPIO_Init+0x304>)
 80041b6:	69fb      	ldr	r3, [r7, #28]
 80041b8:	089b      	lsrs	r3, r3, #2
 80041ba:	3302      	adds	r3, #2
 80041bc:	69ba      	ldr	r2, [r7, #24]
 80041be:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80041c2:	4b3a      	ldr	r3, [pc, #232]	@ (80042ac <HAL_GPIO_Init+0x324>)
 80041c4:	689b      	ldr	r3, [r3, #8]
 80041c6:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041c8:	693b      	ldr	r3, [r7, #16]
 80041ca:	43db      	mvns	r3, r3
 80041cc:	69ba      	ldr	r2, [r7, #24]
 80041ce:	4013      	ands	r3, r2
 80041d0:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80041d2:	683b      	ldr	r3, [r7, #0]
 80041d4:	685b      	ldr	r3, [r3, #4]
 80041d6:	f403 1380 	and.w	r3, r3, #1048576	@ 0x100000
 80041da:	2b00      	cmp	r3, #0
 80041dc:	d003      	beq.n	80041e6 <HAL_GPIO_Init+0x25e>
        {
          temp |= iocurrent;
 80041de:	69ba      	ldr	r2, [r7, #24]
 80041e0:	693b      	ldr	r3, [r7, #16]
 80041e2:	4313      	orrs	r3, r2
 80041e4:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 80041e6:	4a31      	ldr	r2, [pc, #196]	@ (80042ac <HAL_GPIO_Init+0x324>)
 80041e8:	69bb      	ldr	r3, [r7, #24]
 80041ea:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 80041ec:	4b2f      	ldr	r3, [pc, #188]	@ (80042ac <HAL_GPIO_Init+0x324>)
 80041ee:	68db      	ldr	r3, [r3, #12]
 80041f0:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 80041f2:	693b      	ldr	r3, [r7, #16]
 80041f4:	43db      	mvns	r3, r3
 80041f6:	69ba      	ldr	r2, [r7, #24]
 80041f8:	4013      	ands	r3, r2
 80041fa:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80041fc:	683b      	ldr	r3, [r7, #0]
 80041fe:	685b      	ldr	r3, [r3, #4]
 8004200:	f403 1300 	and.w	r3, r3, #2097152	@ 0x200000
 8004204:	2b00      	cmp	r3, #0
 8004206:	d003      	beq.n	8004210 <HAL_GPIO_Init+0x288>
        {
          temp |= iocurrent;
 8004208:	69ba      	ldr	r2, [r7, #24]
 800420a:	693b      	ldr	r3, [r7, #16]
 800420c:	4313      	orrs	r3, r2
 800420e:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 8004210:	4a26      	ldr	r2, [pc, #152]	@ (80042ac <HAL_GPIO_Init+0x324>)
 8004212:	69bb      	ldr	r3, [r7, #24]
 8004214:	60d3      	str	r3, [r2, #12]

        temp = EXTI->EMR;
 8004216:	4b25      	ldr	r3, [pc, #148]	@ (80042ac <HAL_GPIO_Init+0x324>)
 8004218:	685b      	ldr	r3, [r3, #4]
 800421a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 800421c:	693b      	ldr	r3, [r7, #16]
 800421e:	43db      	mvns	r3, r3
 8004220:	69ba      	ldr	r2, [r7, #24]
 8004222:	4013      	ands	r3, r2
 8004224:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8004226:	683b      	ldr	r3, [r7, #0]
 8004228:	685b      	ldr	r3, [r3, #4]
 800422a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 800422e:	2b00      	cmp	r3, #0
 8004230:	d003      	beq.n	800423a <HAL_GPIO_Init+0x2b2>
        {
          temp |= iocurrent;
 8004232:	69ba      	ldr	r2, [r7, #24]
 8004234:	693b      	ldr	r3, [r7, #16]
 8004236:	4313      	orrs	r3, r2
 8004238:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 800423a:	4a1c      	ldr	r2, [pc, #112]	@ (80042ac <HAL_GPIO_Init+0x324>)
 800423c:	69bb      	ldr	r3, [r7, #24]
 800423e:	6053      	str	r3, [r2, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8004240:	4b1a      	ldr	r3, [pc, #104]	@ (80042ac <HAL_GPIO_Init+0x324>)
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 8004246:	693b      	ldr	r3, [r7, #16]
 8004248:	43db      	mvns	r3, r3
 800424a:	69ba      	ldr	r2, [r7, #24]
 800424c:	4013      	ands	r3, r2
 800424e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8004250:	683b      	ldr	r3, [r7, #0]
 8004252:	685b      	ldr	r3, [r3, #4]
 8004254:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 8004258:	2b00      	cmp	r3, #0
 800425a:	d003      	beq.n	8004264 <HAL_GPIO_Init+0x2dc>
        {
          temp |= iocurrent;
 800425c:	69ba      	ldr	r2, [r7, #24]
 800425e:	693b      	ldr	r3, [r7, #16]
 8004260:	4313      	orrs	r3, r2
 8004262:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 8004264:	4a11      	ldr	r2, [pc, #68]	@ (80042ac <HAL_GPIO_Init+0x324>)
 8004266:	69bb      	ldr	r3, [r7, #24]
 8004268:	6013      	str	r3, [r2, #0]
  for(position = 0U; position < GPIO_NUMBER; position++)
 800426a:	69fb      	ldr	r3, [r7, #28]
 800426c:	3301      	adds	r3, #1
 800426e:	61fb      	str	r3, [r7, #28]
 8004270:	69fb      	ldr	r3, [r7, #28]
 8004272:	2b0f      	cmp	r3, #15
 8004274:	f67f ae96 	bls.w	8003fa4 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 8004278:	bf00      	nop
 800427a:	bf00      	nop
 800427c:	3724      	adds	r7, #36	@ 0x24
 800427e:	46bd      	mov	sp, r7
 8004280:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004284:	4770      	bx	lr
 8004286:	bf00      	nop
 8004288:	40023800 	.word	0x40023800
 800428c:	40013800 	.word	0x40013800
 8004290:	40020000 	.word	0x40020000
 8004294:	40020400 	.word	0x40020400
 8004298:	40020800 	.word	0x40020800
 800429c:	40020c00 	.word	0x40020c00
 80042a0:	40021000 	.word	0x40021000
 80042a4:	40021400 	.word	0x40021400
 80042a8:	40021800 	.word	0x40021800
 80042ac:	40013c00 	.word	0x40013c00

080042b0 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 80042b0:	b480      	push	{r7}
 80042b2:	b085      	sub	sp, #20
 80042b4:	af00      	add	r7, sp, #0
 80042b6:	6078      	str	r0, [r7, #4]
 80042b8:	460b      	mov	r3, r1
 80042ba:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80042bc:	687b      	ldr	r3, [r7, #4]
 80042be:	691a      	ldr	r2, [r3, #16]
 80042c0:	887b      	ldrh	r3, [r7, #2]
 80042c2:	4013      	ands	r3, r2
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d002      	beq.n	80042ce <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 80042c8:	2301      	movs	r3, #1
 80042ca:	73fb      	strb	r3, [r7, #15]
 80042cc:	e001      	b.n	80042d2 <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80042ce:	2300      	movs	r3, #0
 80042d0:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 80042d2:	7bfb      	ldrb	r3, [r7, #15]
}
 80042d4:	4618      	mov	r0, r3
 80042d6:	3714      	adds	r7, #20
 80042d8:	46bd      	mov	sp, r7
 80042da:	f85d 7b04 	ldr.w	r7, [sp], #4
 80042de:	4770      	bx	lr

080042e0 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80042e0:	b480      	push	{r7}
 80042e2:	b083      	sub	sp, #12
 80042e4:	af00      	add	r7, sp, #0
 80042e6:	6078      	str	r0, [r7, #4]
 80042e8:	460b      	mov	r3, r1
 80042ea:	807b      	strh	r3, [r7, #2]
 80042ec:	4613      	mov	r3, r2
 80042ee:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 80042f0:	787b      	ldrb	r3, [r7, #1]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d003      	beq.n	80042fe <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 80042f6:	887a      	ldrh	r2, [r7, #2]
 80042f8:	687b      	ldr	r3, [r7, #4]
 80042fa:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 80042fc:	e003      	b.n	8004306 <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 80042fe:	887b      	ldrh	r3, [r7, #2]
 8004300:	041a      	lsls	r2, r3, #16
 8004302:	687b      	ldr	r3, [r7, #4]
 8004304:	619a      	str	r2, [r3, #24]
}
 8004306:	bf00      	nop
 8004308:	370c      	adds	r7, #12
 800430a:	46bd      	mov	sp, r7
 800430c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004310:	4770      	bx	lr

08004312 <HAL_GPIO_TogglePin>:
  *                      x can be (A..I) to select the GPIO peripheral for STM32F40XX and STM32F427X devices.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8004312:	b480      	push	{r7}
 8004314:	b085      	sub	sp, #20
 8004316:	af00      	add	r7, sp, #0
 8004318:	6078      	str	r0, [r7, #4]
 800431a:	460b      	mov	r3, r1
 800431c:	807b      	strh	r3, [r7, #2]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 800431e:	687b      	ldr	r3, [r7, #4]
 8004320:	695b      	ldr	r3, [r3, #20]
 8004322:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8004324:	887a      	ldrh	r2, [r7, #2]
 8004326:	68fb      	ldr	r3, [r7, #12]
 8004328:	4013      	ands	r3, r2
 800432a:	041a      	lsls	r2, r3, #16
 800432c:	68fb      	ldr	r3, [r7, #12]
 800432e:	43d9      	mvns	r1, r3
 8004330:	887b      	ldrh	r3, [r7, #2]
 8004332:	400b      	ands	r3, r1
 8004334:	431a      	orrs	r2, r3
 8004336:	687b      	ldr	r3, [r7, #4]
 8004338:	619a      	str	r2, [r3, #24]
}
 800433a:	bf00      	nop
 800433c:	3714      	adds	r7, #20
 800433e:	46bd      	mov	sp, r7
 8004340:	f85d 7b04 	ldr.w	r7, [sp], #4
 8004344:	4770      	bx	lr
	...

08004348 <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 8004348:	b580      	push	{r7, lr}
 800434a:	b082      	sub	sp, #8
 800434c:	af00      	add	r7, sp, #0
 800434e:	4603      	mov	r3, r0
 8004350:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 8004352:	4b08      	ldr	r3, [pc, #32]	@ (8004374 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004354:	695a      	ldr	r2, [r3, #20]
 8004356:	88fb      	ldrh	r3, [r7, #6]
 8004358:	4013      	ands	r3, r2
 800435a:	2b00      	cmp	r3, #0
 800435c:	d006      	beq.n	800436c <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 800435e:	4a05      	ldr	r2, [pc, #20]	@ (8004374 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 8004360:	88fb      	ldrh	r3, [r7, #6]
 8004362:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 8004364:	88fb      	ldrh	r3, [r7, #6]
 8004366:	4618      	mov	r0, r3
 8004368:	f7fe f8c0 	bl	80024ec <HAL_GPIO_EXTI_Callback>
  }
}
 800436c:	bf00      	nop
 800436e:	3708      	adds	r7, #8
 8004370:	46bd      	mov	sp, r7
 8004372:	bd80      	pop	{r7, pc}
 8004374:	40013c00 	.word	0x40013c00

08004378 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 8004378:	b580      	push	{r7, lr}
 800437a:	b084      	sub	sp, #16
 800437c:	af00      	add	r7, sp, #0
 800437e:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 8004380:	687b      	ldr	r3, [r7, #4]
 8004382:	2b00      	cmp	r3, #0
 8004384:	d101      	bne.n	800438a <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8004386:	2301      	movs	r3, #1
 8004388:	e12b      	b.n	80045e2 <HAL_I2C_Init+0x26a>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 800438a:	687b      	ldr	r3, [r7, #4]
 800438c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004390:	b2db      	uxtb	r3, r3
 8004392:	2b00      	cmp	r3, #0
 8004394:	d106      	bne.n	80043a4 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8004396:	687b      	ldr	r3, [r7, #4]
 8004398:	2200      	movs	r2, #0
 800439a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 800439e:	6878      	ldr	r0, [r7, #4]
 80043a0:	f7fd fb24 	bl	80019ec <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 80043a4:	687b      	ldr	r3, [r7, #4]
 80043a6:	2224      	movs	r2, #36	@ 0x24
 80043a8:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 80043ac:	687b      	ldr	r3, [r7, #4]
 80043ae:	681b      	ldr	r3, [r3, #0]
 80043b0:	681a      	ldr	r2, [r3, #0]
 80043b2:	687b      	ldr	r3, [r7, #4]
 80043b4:	681b      	ldr	r3, [r3, #0]
 80043b6:	f022 0201 	bic.w	r2, r2, #1
 80043ba:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 80043bc:	687b      	ldr	r3, [r7, #4]
 80043be:	681b      	ldr	r3, [r3, #0]
 80043c0:	681a      	ldr	r2, [r3, #0]
 80043c2:	687b      	ldr	r3, [r7, #4]
 80043c4:	681b      	ldr	r3, [r3, #0]
 80043c6:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80043ca:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 80043cc:	687b      	ldr	r3, [r7, #4]
 80043ce:	681b      	ldr	r3, [r3, #0]
 80043d0:	681a      	ldr	r2, [r3, #0]
 80043d2:	687b      	ldr	r3, [r7, #4]
 80043d4:	681b      	ldr	r3, [r3, #0]
 80043d6:	f422 4200 	bic.w	r2, r2, #32768	@ 0x8000
 80043da:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 80043dc:	f001 f908 	bl	80055f0 <HAL_RCC_GetPCLK1Freq>
 80043e0:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 80043e2:	687b      	ldr	r3, [r7, #4]
 80043e4:	685b      	ldr	r3, [r3, #4]
 80043e6:	4a81      	ldr	r2, [pc, #516]	@ (80045ec <HAL_I2C_Init+0x274>)
 80043e8:	4293      	cmp	r3, r2
 80043ea:	d807      	bhi.n	80043fc <HAL_I2C_Init+0x84>
 80043ec:	68fb      	ldr	r3, [r7, #12]
 80043ee:	4a80      	ldr	r2, [pc, #512]	@ (80045f0 <HAL_I2C_Init+0x278>)
 80043f0:	4293      	cmp	r3, r2
 80043f2:	bf94      	ite	ls
 80043f4:	2301      	movls	r3, #1
 80043f6:	2300      	movhi	r3, #0
 80043f8:	b2db      	uxtb	r3, r3
 80043fa:	e006      	b.n	800440a <HAL_I2C_Init+0x92>
 80043fc:	68fb      	ldr	r3, [r7, #12]
 80043fe:	4a7d      	ldr	r2, [pc, #500]	@ (80045f4 <HAL_I2C_Init+0x27c>)
 8004400:	4293      	cmp	r3, r2
 8004402:	bf94      	ite	ls
 8004404:	2301      	movls	r3, #1
 8004406:	2300      	movhi	r3, #0
 8004408:	b2db      	uxtb	r3, r3
 800440a:	2b00      	cmp	r3, #0
 800440c:	d001      	beq.n	8004412 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 800440e:	2301      	movs	r3, #1
 8004410:	e0e7      	b.n	80045e2 <HAL_I2C_Init+0x26a>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 8004412:	68fb      	ldr	r3, [r7, #12]
 8004414:	4a78      	ldr	r2, [pc, #480]	@ (80045f8 <HAL_I2C_Init+0x280>)
 8004416:	fba2 2303 	umull	r2, r3, r2, r3
 800441a:	0c9b      	lsrs	r3, r3, #18
 800441c:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 800441e:	687b      	ldr	r3, [r7, #4]
 8004420:	681b      	ldr	r3, [r3, #0]
 8004422:	685b      	ldr	r3, [r3, #4]
 8004424:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 8004428:	687b      	ldr	r3, [r7, #4]
 800442a:	681b      	ldr	r3, [r3, #0]
 800442c:	68ba      	ldr	r2, [r7, #8]
 800442e:	430a      	orrs	r2, r1
 8004430:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 8004432:	687b      	ldr	r3, [r7, #4]
 8004434:	681b      	ldr	r3, [r3, #0]
 8004436:	6a1b      	ldr	r3, [r3, #32]
 8004438:	f023 013f 	bic.w	r1, r3, #63	@ 0x3f
 800443c:	687b      	ldr	r3, [r7, #4]
 800443e:	685b      	ldr	r3, [r3, #4]
 8004440:	4a6a      	ldr	r2, [pc, #424]	@ (80045ec <HAL_I2C_Init+0x274>)
 8004442:	4293      	cmp	r3, r2
 8004444:	d802      	bhi.n	800444c <HAL_I2C_Init+0xd4>
 8004446:	68bb      	ldr	r3, [r7, #8]
 8004448:	3301      	adds	r3, #1
 800444a:	e009      	b.n	8004460 <HAL_I2C_Init+0xe8>
 800444c:	68bb      	ldr	r3, [r7, #8]
 800444e:	f44f 7296 	mov.w	r2, #300	@ 0x12c
 8004452:	fb02 f303 	mul.w	r3, r2, r3
 8004456:	4a69      	ldr	r2, [pc, #420]	@ (80045fc <HAL_I2C_Init+0x284>)
 8004458:	fba2 2303 	umull	r2, r3, r2, r3
 800445c:	099b      	lsrs	r3, r3, #6
 800445e:	3301      	adds	r3, #1
 8004460:	687a      	ldr	r2, [r7, #4]
 8004462:	6812      	ldr	r2, [r2, #0]
 8004464:	430b      	orrs	r3, r1
 8004466:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 8004468:	687b      	ldr	r3, [r7, #4]
 800446a:	681b      	ldr	r3, [r3, #0]
 800446c:	69db      	ldr	r3, [r3, #28]
 800446e:	f423 424f 	bic.w	r2, r3, #52992	@ 0xcf00
 8004472:	f022 02ff 	bic.w	r2, r2, #255	@ 0xff
 8004476:	687b      	ldr	r3, [r7, #4]
 8004478:	685b      	ldr	r3, [r3, #4]
 800447a:	495c      	ldr	r1, [pc, #368]	@ (80045ec <HAL_I2C_Init+0x274>)
 800447c:	428b      	cmp	r3, r1
 800447e:	d819      	bhi.n	80044b4 <HAL_I2C_Init+0x13c>
 8004480:	68fb      	ldr	r3, [r7, #12]
 8004482:	1e59      	subs	r1, r3, #1
 8004484:	687b      	ldr	r3, [r7, #4]
 8004486:	685b      	ldr	r3, [r3, #4]
 8004488:	005b      	lsls	r3, r3, #1
 800448a:	fbb1 f3f3 	udiv	r3, r1, r3
 800448e:	1c59      	adds	r1, r3, #1
 8004490:	f640 73fc 	movw	r3, #4092	@ 0xffc
 8004494:	400b      	ands	r3, r1
 8004496:	2b00      	cmp	r3, #0
 8004498:	d00a      	beq.n	80044b0 <HAL_I2C_Init+0x138>
 800449a:	68fb      	ldr	r3, [r7, #12]
 800449c:	1e59      	subs	r1, r3, #1
 800449e:	687b      	ldr	r3, [r7, #4]
 80044a0:	685b      	ldr	r3, [r3, #4]
 80044a2:	005b      	lsls	r3, r3, #1
 80044a4:	fbb1 f3f3 	udiv	r3, r1, r3
 80044a8:	3301      	adds	r3, #1
 80044aa:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044ae:	e051      	b.n	8004554 <HAL_I2C_Init+0x1dc>
 80044b0:	2304      	movs	r3, #4
 80044b2:	e04f      	b.n	8004554 <HAL_I2C_Init+0x1dc>
 80044b4:	687b      	ldr	r3, [r7, #4]
 80044b6:	689b      	ldr	r3, [r3, #8]
 80044b8:	2b00      	cmp	r3, #0
 80044ba:	d111      	bne.n	80044e0 <HAL_I2C_Init+0x168>
 80044bc:	68fb      	ldr	r3, [r7, #12]
 80044be:	1e58      	subs	r0, r3, #1
 80044c0:	687b      	ldr	r3, [r7, #4]
 80044c2:	6859      	ldr	r1, [r3, #4]
 80044c4:	460b      	mov	r3, r1
 80044c6:	005b      	lsls	r3, r3, #1
 80044c8:	440b      	add	r3, r1
 80044ca:	fbb0 f3f3 	udiv	r3, r0, r3
 80044ce:	3301      	adds	r3, #1
 80044d0:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044d4:	2b00      	cmp	r3, #0
 80044d6:	bf0c      	ite	eq
 80044d8:	2301      	moveq	r3, #1
 80044da:	2300      	movne	r3, #0
 80044dc:	b2db      	uxtb	r3, r3
 80044de:	e012      	b.n	8004506 <HAL_I2C_Init+0x18e>
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	1e58      	subs	r0, r3, #1
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	6859      	ldr	r1, [r3, #4]
 80044e8:	460b      	mov	r3, r1
 80044ea:	009b      	lsls	r3, r3, #2
 80044ec:	440b      	add	r3, r1
 80044ee:	0099      	lsls	r1, r3, #2
 80044f0:	440b      	add	r3, r1
 80044f2:	fbb0 f3f3 	udiv	r3, r0, r3
 80044f6:	3301      	adds	r3, #1
 80044f8:	f3c3 030b 	ubfx	r3, r3, #0, #12
 80044fc:	2b00      	cmp	r3, #0
 80044fe:	bf0c      	ite	eq
 8004500:	2301      	moveq	r3, #1
 8004502:	2300      	movne	r3, #0
 8004504:	b2db      	uxtb	r3, r3
 8004506:	2b00      	cmp	r3, #0
 8004508:	d001      	beq.n	800450e <HAL_I2C_Init+0x196>
 800450a:	2301      	movs	r3, #1
 800450c:	e022      	b.n	8004554 <HAL_I2C_Init+0x1dc>
 800450e:	687b      	ldr	r3, [r7, #4]
 8004510:	689b      	ldr	r3, [r3, #8]
 8004512:	2b00      	cmp	r3, #0
 8004514:	d10e      	bne.n	8004534 <HAL_I2C_Init+0x1bc>
 8004516:	68fb      	ldr	r3, [r7, #12]
 8004518:	1e58      	subs	r0, r3, #1
 800451a:	687b      	ldr	r3, [r7, #4]
 800451c:	6859      	ldr	r1, [r3, #4]
 800451e:	460b      	mov	r3, r1
 8004520:	005b      	lsls	r3, r3, #1
 8004522:	440b      	add	r3, r1
 8004524:	fbb0 f3f3 	udiv	r3, r0, r3
 8004528:	3301      	adds	r3, #1
 800452a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 800452e:	f443 4300 	orr.w	r3, r3, #32768	@ 0x8000
 8004532:	e00f      	b.n	8004554 <HAL_I2C_Init+0x1dc>
 8004534:	68fb      	ldr	r3, [r7, #12]
 8004536:	1e58      	subs	r0, r3, #1
 8004538:	687b      	ldr	r3, [r7, #4]
 800453a:	6859      	ldr	r1, [r3, #4]
 800453c:	460b      	mov	r3, r1
 800453e:	009b      	lsls	r3, r3, #2
 8004540:	440b      	add	r3, r1
 8004542:	0099      	lsls	r1, r3, #2
 8004544:	440b      	add	r3, r1
 8004546:	fbb0 f3f3 	udiv	r3, r0, r3
 800454a:	3301      	adds	r3, #1
 800454c:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8004550:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 8004554:	6879      	ldr	r1, [r7, #4]
 8004556:	6809      	ldr	r1, [r1, #0]
 8004558:	4313      	orrs	r3, r2
 800455a:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	681b      	ldr	r3, [r3, #0]
 8004560:	681b      	ldr	r3, [r3, #0]
 8004562:	f023 01c0 	bic.w	r1, r3, #192	@ 0xc0
 8004566:	687b      	ldr	r3, [r7, #4]
 8004568:	69da      	ldr	r2, [r3, #28]
 800456a:	687b      	ldr	r3, [r7, #4]
 800456c:	6a1b      	ldr	r3, [r3, #32]
 800456e:	431a      	orrs	r2, r3
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	681b      	ldr	r3, [r3, #0]
 8004574:	430a      	orrs	r2, r1
 8004576:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 8004578:	687b      	ldr	r3, [r7, #4]
 800457a:	681b      	ldr	r3, [r3, #0]
 800457c:	689b      	ldr	r3, [r3, #8]
 800457e:	f423 4303 	bic.w	r3, r3, #33536	@ 0x8300
 8004582:	f023 03ff 	bic.w	r3, r3, #255	@ 0xff
 8004586:	687a      	ldr	r2, [r7, #4]
 8004588:	6911      	ldr	r1, [r2, #16]
 800458a:	687a      	ldr	r2, [r7, #4]
 800458c:	68d2      	ldr	r2, [r2, #12]
 800458e:	4311      	orrs	r1, r2
 8004590:	687a      	ldr	r2, [r7, #4]
 8004592:	6812      	ldr	r2, [r2, #0]
 8004594:	430b      	orrs	r3, r1
 8004596:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 8004598:	687b      	ldr	r3, [r7, #4]
 800459a:	681b      	ldr	r3, [r3, #0]
 800459c:	68db      	ldr	r3, [r3, #12]
 800459e:	f023 01ff 	bic.w	r1, r3, #255	@ 0xff
 80045a2:	687b      	ldr	r3, [r7, #4]
 80045a4:	695a      	ldr	r2, [r3, #20]
 80045a6:	687b      	ldr	r3, [r7, #4]
 80045a8:	699b      	ldr	r3, [r3, #24]
 80045aa:	431a      	orrs	r2, r3
 80045ac:	687b      	ldr	r3, [r7, #4]
 80045ae:	681b      	ldr	r3, [r3, #0]
 80045b0:	430a      	orrs	r2, r1
 80045b2:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	681a      	ldr	r2, [r3, #0]
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	f042 0201 	orr.w	r2, r2, #1
 80045c2:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	2200      	movs	r2, #0
 80045c8:	641a      	str	r2, [r3, #64]	@ 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	2220      	movs	r2, #32
 80045ce:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 80045d2:	687b      	ldr	r3, [r7, #4]
 80045d4:	2200      	movs	r2, #0
 80045d6:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 80045d8:	687b      	ldr	r3, [r7, #4]
 80045da:	2200      	movs	r2, #0
 80045dc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

  return HAL_OK;
 80045e0:	2300      	movs	r3, #0
}
 80045e2:	4618      	mov	r0, r3
 80045e4:	3710      	adds	r7, #16
 80045e6:	46bd      	mov	sp, r7
 80045e8:	bd80      	pop	{r7, pc}
 80045ea:	bf00      	nop
 80045ec:	000186a0 	.word	0x000186a0
 80045f0:	001e847f 	.word	0x001e847f
 80045f4:	003d08ff 	.word	0x003d08ff
 80045f8:	431bde83 	.word	0x431bde83
 80045fc:	10624dd3 	.word	0x10624dd3

08004600 <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004600:	b580      	push	{r7, lr}
 8004602:	b088      	sub	sp, #32
 8004604:	af02      	add	r7, sp, #8
 8004606:	60f8      	str	r0, [r7, #12]
 8004608:	607a      	str	r2, [r7, #4]
 800460a:	461a      	mov	r2, r3
 800460c:	460b      	mov	r3, r1
 800460e:	817b      	strh	r3, [r7, #10]
 8004610:	4613      	mov	r3, r2
 8004612:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004614:	f7fe fa24 	bl	8002a60 <HAL_GetTick>
 8004618:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 800461a:	68fb      	ldr	r3, [r7, #12]
 800461c:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8004620:	b2db      	uxtb	r3, r3
 8004622:	2b20      	cmp	r3, #32
 8004624:	f040 80e0 	bne.w	80047e8 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004628:	697b      	ldr	r3, [r7, #20]
 800462a:	9300      	str	r3, [sp, #0]
 800462c:	2319      	movs	r3, #25
 800462e:	2201      	movs	r2, #1
 8004630:	4970      	ldr	r1, [pc, #448]	@ (80047f4 <HAL_I2C_Master_Transmit+0x1f4>)
 8004632:	68f8      	ldr	r0, [r7, #12]
 8004634:	f000 fc64 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004638:	4603      	mov	r3, r0
 800463a:	2b00      	cmp	r3, #0
 800463c:	d001      	beq.n	8004642 <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 800463e:	2302      	movs	r3, #2
 8004640:	e0d3      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004642:	68fb      	ldr	r3, [r7, #12]
 8004644:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004648:	2b01      	cmp	r3, #1
 800464a:	d101      	bne.n	8004650 <HAL_I2C_Master_Transmit+0x50>
 800464c:	2302      	movs	r3, #2
 800464e:	e0cc      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
 8004650:	68fb      	ldr	r3, [r7, #12]
 8004652:	2201      	movs	r2, #1
 8004654:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004658:	68fb      	ldr	r3, [r7, #12]
 800465a:	681b      	ldr	r3, [r3, #0]
 800465c:	681b      	ldr	r3, [r3, #0]
 800465e:	f003 0301 	and.w	r3, r3, #1
 8004662:	2b01      	cmp	r3, #1
 8004664:	d007      	beq.n	8004676 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004666:	68fb      	ldr	r3, [r7, #12]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	681a      	ldr	r2, [r3, #0]
 800466c:	68fb      	ldr	r3, [r7, #12]
 800466e:	681b      	ldr	r3, [r3, #0]
 8004670:	f042 0201 	orr.w	r2, r2, #1
 8004674:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004676:	68fb      	ldr	r3, [r7, #12]
 8004678:	681b      	ldr	r3, [r3, #0]
 800467a:	681a      	ldr	r2, [r3, #0]
 800467c:	68fb      	ldr	r3, [r7, #12]
 800467e:	681b      	ldr	r3, [r3, #0]
 8004680:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004684:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 8004686:	68fb      	ldr	r3, [r7, #12]
 8004688:	2221      	movs	r2, #33	@ 0x21
 800468a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800468e:	68fb      	ldr	r3, [r7, #12]
 8004690:	2210      	movs	r2, #16
 8004692:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004696:	68fb      	ldr	r3, [r7, #12]
 8004698:	2200      	movs	r2, #0
 800469a:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 800469c:	68fb      	ldr	r3, [r7, #12]
 800469e:	687a      	ldr	r2, [r7, #4]
 80046a0:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 80046a2:	68fb      	ldr	r3, [r7, #12]
 80046a4:	893a      	ldrh	r2, [r7, #8]
 80046a6:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80046a8:	68fb      	ldr	r3, [r7, #12]
 80046aa:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80046ac:	b29a      	uxth	r2, r3
 80046ae:	68fb      	ldr	r3, [r7, #12]
 80046b0:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80046b2:	68fb      	ldr	r3, [r7, #12]
 80046b4:	4a50      	ldr	r2, [pc, #320]	@ (80047f8 <HAL_I2C_Master_Transmit+0x1f8>)
 80046b6:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80046b8:	8979      	ldrh	r1, [r7, #10]
 80046ba:	697b      	ldr	r3, [r7, #20]
 80046bc:	6a3a      	ldr	r2, [r7, #32]
 80046be:	68f8      	ldr	r0, [r7, #12]
 80046c0:	f000 face 	bl	8004c60 <I2C_MasterRequestWrite>
 80046c4:	4603      	mov	r3, r0
 80046c6:	2b00      	cmp	r3, #0
 80046c8:	d001      	beq.n	80046ce <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 80046ca:	2301      	movs	r3, #1
 80046cc:	e08d      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80046ce:	2300      	movs	r3, #0
 80046d0:	613b      	str	r3, [r7, #16]
 80046d2:	68fb      	ldr	r3, [r7, #12]
 80046d4:	681b      	ldr	r3, [r3, #0]
 80046d6:	695b      	ldr	r3, [r3, #20]
 80046d8:	613b      	str	r3, [r7, #16]
 80046da:	68fb      	ldr	r3, [r7, #12]
 80046dc:	681b      	ldr	r3, [r3, #0]
 80046de:	699b      	ldr	r3, [r3, #24]
 80046e0:	613b      	str	r3, [r7, #16]
 80046e2:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 80046e4:	e066      	b.n	80047b4 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80046e6:	697a      	ldr	r2, [r7, #20]
 80046e8:	6a39      	ldr	r1, [r7, #32]
 80046ea:	68f8      	ldr	r0, [r7, #12]
 80046ec:	f000 fd22 	bl	8005134 <I2C_WaitOnTXEFlagUntilTimeout>
 80046f0:	4603      	mov	r3, r0
 80046f2:	2b00      	cmp	r3, #0
 80046f4:	d00d      	beq.n	8004712 <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 80046f6:	68fb      	ldr	r3, [r7, #12]
 80046f8:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80046fa:	2b04      	cmp	r3, #4
 80046fc:	d107      	bne.n	800470e <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80046fe:	68fb      	ldr	r3, [r7, #12]
 8004700:	681b      	ldr	r3, [r3, #0]
 8004702:	681a      	ldr	r2, [r3, #0]
 8004704:	68fb      	ldr	r3, [r7, #12]
 8004706:	681b      	ldr	r3, [r3, #0]
 8004708:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 800470c:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 800470e:	2301      	movs	r3, #1
 8004710:	e06b      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004712:	68fb      	ldr	r3, [r7, #12]
 8004714:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004716:	781a      	ldrb	r2, [r3, #0]
 8004718:	68fb      	ldr	r3, [r7, #12]
 800471a:	681b      	ldr	r3, [r3, #0]
 800471c:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800471e:	68fb      	ldr	r3, [r7, #12]
 8004720:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004722:	1c5a      	adds	r2, r3, #1
 8004724:	68fb      	ldr	r3, [r7, #12]
 8004726:	625a      	str	r2, [r3, #36]	@ 0x24

      /* Update counter */
      hi2c->XferCount--;
 8004728:	68fb      	ldr	r3, [r7, #12]
 800472a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800472c:	b29b      	uxth	r3, r3
 800472e:	3b01      	subs	r3, #1
 8004730:	b29a      	uxth	r2, r3
 8004732:	68fb      	ldr	r3, [r7, #12]
 8004734:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8004736:	68fb      	ldr	r3, [r7, #12]
 8004738:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800473a:	3b01      	subs	r3, #1
 800473c:	b29a      	uxth	r2, r3
 800473e:	68fb      	ldr	r3, [r7, #12]
 8004740:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 8004742:	68fb      	ldr	r3, [r7, #12]
 8004744:	681b      	ldr	r3, [r3, #0]
 8004746:	695b      	ldr	r3, [r3, #20]
 8004748:	f003 0304 	and.w	r3, r3, #4
 800474c:	2b04      	cmp	r3, #4
 800474e:	d11b      	bne.n	8004788 <HAL_I2C_Master_Transmit+0x188>
 8004750:	68fb      	ldr	r3, [r7, #12]
 8004752:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004754:	2b00      	cmp	r3, #0
 8004756:	d017      	beq.n	8004788 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 8004758:	68fb      	ldr	r3, [r7, #12]
 800475a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800475c:	781a      	ldrb	r2, [r3, #0]
 800475e:	68fb      	ldr	r3, [r7, #12]
 8004760:	681b      	ldr	r3, [r3, #0]
 8004762:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004764:	68fb      	ldr	r3, [r7, #12]
 8004766:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004768:	1c5a      	adds	r2, r3, #1
 800476a:	68fb      	ldr	r3, [r7, #12]
 800476c:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferCount--;
 800476e:	68fb      	ldr	r3, [r7, #12]
 8004770:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004772:	b29b      	uxth	r3, r3
 8004774:	3b01      	subs	r3, #1
 8004776:	b29a      	uxth	r2, r3
 8004778:	68fb      	ldr	r3, [r7, #12]
 800477a:	855a      	strh	r2, [r3, #42]	@ 0x2a
        hi2c->XferSize--;
 800477c:	68fb      	ldr	r3, [r7, #12]
 800477e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004780:	3b01      	subs	r3, #1
 8004782:	b29a      	uxth	r2, r3
 8004784:	68fb      	ldr	r3, [r7, #12]
 8004786:	851a      	strh	r2, [r3, #40]	@ 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004788:	697a      	ldr	r2, [r7, #20]
 800478a:	6a39      	ldr	r1, [r7, #32]
 800478c:	68f8      	ldr	r0, [r7, #12]
 800478e:	f000 fd19 	bl	80051c4 <I2C_WaitOnBTFFlagUntilTimeout>
 8004792:	4603      	mov	r3, r0
 8004794:	2b00      	cmp	r3, #0
 8004796:	d00d      	beq.n	80047b4 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 8004798:	68fb      	ldr	r3, [r7, #12]
 800479a:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800479c:	2b04      	cmp	r3, #4
 800479e:	d107      	bne.n	80047b0 <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047a0:	68fb      	ldr	r3, [r7, #12]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	681a      	ldr	r2, [r3, #0]
 80047a6:	68fb      	ldr	r3, [r7, #12]
 80047a8:	681b      	ldr	r3, [r3, #0]
 80047aa:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047ae:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 80047b0:	2301      	movs	r3, #1
 80047b2:	e01a      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 80047b4:	68fb      	ldr	r3, [r7, #12]
 80047b6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80047b8:	2b00      	cmp	r3, #0
 80047ba:	d194      	bne.n	80046e6 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80047bc:	68fb      	ldr	r3, [r7, #12]
 80047be:	681b      	ldr	r3, [r3, #0]
 80047c0:	681a      	ldr	r2, [r3, #0]
 80047c2:	68fb      	ldr	r3, [r7, #12]
 80047c4:	681b      	ldr	r3, [r3, #0]
 80047c6:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80047ca:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80047cc:	68fb      	ldr	r3, [r7, #12]
 80047ce:	2220      	movs	r2, #32
 80047d0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80047d4:	68fb      	ldr	r3, [r7, #12]
 80047d6:	2200      	movs	r2, #0
 80047d8:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80047dc:	68fb      	ldr	r3, [r7, #12]
 80047de:	2200      	movs	r2, #0
 80047e0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 80047e4:	2300      	movs	r3, #0
 80047e6:	e000      	b.n	80047ea <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 80047e8:	2302      	movs	r3, #2
  }
}
 80047ea:	4618      	mov	r0, r3
 80047ec:	3718      	adds	r7, #24
 80047ee:	46bd      	mov	sp, r7
 80047f0:	bd80      	pop	{r7, pc}
 80047f2:	bf00      	nop
 80047f4:	00100002 	.word	0x00100002
 80047f8:	ffff0000 	.word	0xffff0000

080047fc <HAL_I2C_Master_Receive>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80047fc:	b580      	push	{r7, lr}
 80047fe:	b08c      	sub	sp, #48	@ 0x30
 8004800:	af02      	add	r7, sp, #8
 8004802:	60f8      	str	r0, [r7, #12]
 8004804:	607a      	str	r2, [r7, #4]
 8004806:	461a      	mov	r2, r3
 8004808:	460b      	mov	r3, r1
 800480a:	817b      	strh	r3, [r7, #10]
 800480c:	4613      	mov	r3, r2
 800480e:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 8004810:	f7fe f926 	bl	8002a60 <HAL_GetTick>
 8004814:	6278      	str	r0, [r7, #36]	@ 0x24

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004816:	68fb      	ldr	r3, [r7, #12]
 8004818:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800481c:	b2db      	uxtb	r3, r3
 800481e:	2b20      	cmp	r3, #32
 8004820:	f040 8217 	bne.w	8004c52 <HAL_I2C_Master_Receive+0x456>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 8004824:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004826:	9300      	str	r3, [sp, #0]
 8004828:	2319      	movs	r3, #25
 800482a:	2201      	movs	r2, #1
 800482c:	497c      	ldr	r1, [pc, #496]	@ (8004a20 <HAL_I2C_Master_Receive+0x224>)
 800482e:	68f8      	ldr	r0, [r7, #12]
 8004830:	f000 fb66 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004834:	4603      	mov	r3, r0
 8004836:	2b00      	cmp	r3, #0
 8004838:	d001      	beq.n	800483e <HAL_I2C_Master_Receive+0x42>
    {
      return HAL_BUSY;
 800483a:	2302      	movs	r3, #2
 800483c:	e20a      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 800483e:	68fb      	ldr	r3, [r7, #12]
 8004840:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8004844:	2b01      	cmp	r3, #1
 8004846:	d101      	bne.n	800484c <HAL_I2C_Master_Receive+0x50>
 8004848:	2302      	movs	r3, #2
 800484a:	e203      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
 800484c:	68fb      	ldr	r3, [r7, #12]
 800484e:	2201      	movs	r2, #1
 8004850:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 8004854:	68fb      	ldr	r3, [r7, #12]
 8004856:	681b      	ldr	r3, [r3, #0]
 8004858:	681b      	ldr	r3, [r3, #0]
 800485a:	f003 0301 	and.w	r3, r3, #1
 800485e:	2b01      	cmp	r3, #1
 8004860:	d007      	beq.n	8004872 <HAL_I2C_Master_Receive+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 8004862:	68fb      	ldr	r3, [r7, #12]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	681a      	ldr	r2, [r3, #0]
 8004868:	68fb      	ldr	r3, [r7, #12]
 800486a:	681b      	ldr	r3, [r3, #0]
 800486c:	f042 0201 	orr.w	r2, r2, #1
 8004870:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004872:	68fb      	ldr	r3, [r7, #12]
 8004874:	681b      	ldr	r3, [r3, #0]
 8004876:	681a      	ldr	r2, [r3, #0]
 8004878:	68fb      	ldr	r3, [r7, #12]
 800487a:	681b      	ldr	r3, [r3, #0]
 800487c:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 8004880:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_RX;
 8004882:	68fb      	ldr	r3, [r7, #12]
 8004884:	2222      	movs	r2, #34	@ 0x22
 8004886:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 800488a:	68fb      	ldr	r3, [r7, #12]
 800488c:	2210      	movs	r2, #16
 800488e:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 8004892:	68fb      	ldr	r3, [r7, #12]
 8004894:	2200      	movs	r2, #0
 8004896:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 8004898:	68fb      	ldr	r3, [r7, #12]
 800489a:	687a      	ldr	r2, [r7, #4]
 800489c:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount   = Size;
 800489e:	68fb      	ldr	r3, [r7, #12]
 80048a0:	893a      	ldrh	r2, [r7, #8]
 80048a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 80048a4:	68fb      	ldr	r3, [r7, #12]
 80048a6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80048a8:	b29a      	uxth	r2, r3
 80048aa:	68fb      	ldr	r3, [r7, #12]
 80048ac:	851a      	strh	r2, [r3, #40]	@ 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 80048ae:	68fb      	ldr	r3, [r7, #12]
 80048b0:	4a5c      	ldr	r2, [pc, #368]	@ (8004a24 <HAL_I2C_Master_Receive+0x228>)
 80048b2:	62da      	str	r2, [r3, #44]	@ 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestRead(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 80048b4:	8979      	ldrh	r1, [r7, #10]
 80048b6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80048b8:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80048ba:	68f8      	ldr	r0, [r7, #12]
 80048bc:	f000 fa52 	bl	8004d64 <I2C_MasterRequestRead>
 80048c0:	4603      	mov	r3, r0
 80048c2:	2b00      	cmp	r3, #0
 80048c4:	d001      	beq.n	80048ca <HAL_I2C_Master_Receive+0xce>
    {
      return HAL_ERROR;
 80048c6:	2301      	movs	r3, #1
 80048c8:	e1c4      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
    }

    if (hi2c->XferSize == 0U)
 80048ca:	68fb      	ldr	r3, [r7, #12]
 80048cc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048ce:	2b00      	cmp	r3, #0
 80048d0:	d113      	bne.n	80048fa <HAL_I2C_Master_Receive+0xfe>
    {
      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 80048d2:	2300      	movs	r3, #0
 80048d4:	623b      	str	r3, [r7, #32]
 80048d6:	68fb      	ldr	r3, [r7, #12]
 80048d8:	681b      	ldr	r3, [r3, #0]
 80048da:	695b      	ldr	r3, [r3, #20]
 80048dc:	623b      	str	r3, [r7, #32]
 80048de:	68fb      	ldr	r3, [r7, #12]
 80048e0:	681b      	ldr	r3, [r3, #0]
 80048e2:	699b      	ldr	r3, [r3, #24]
 80048e4:	623b      	str	r3, [r7, #32]
 80048e6:	6a3b      	ldr	r3, [r7, #32]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 80048e8:	68fb      	ldr	r3, [r7, #12]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	681a      	ldr	r2, [r3, #0]
 80048ee:	68fb      	ldr	r3, [r7, #12]
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 80048f6:	601a      	str	r2, [r3, #0]
 80048f8:	e198      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 1U)
 80048fa:	68fb      	ldr	r3, [r7, #12]
 80048fc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80048fe:	2b01      	cmp	r3, #1
 8004900:	d11b      	bne.n	800493a <HAL_I2C_Master_Receive+0x13e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004902:	68fb      	ldr	r3, [r7, #12]
 8004904:	681b      	ldr	r3, [r3, #0]
 8004906:	681a      	ldr	r2, [r3, #0]
 8004908:	68fb      	ldr	r3, [r7, #12]
 800490a:	681b      	ldr	r3, [r3, #0]
 800490c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004910:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004912:	2300      	movs	r3, #0
 8004914:	61fb      	str	r3, [r7, #28]
 8004916:	68fb      	ldr	r3, [r7, #12]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	695b      	ldr	r3, [r3, #20]
 800491c:	61fb      	str	r3, [r7, #28]
 800491e:	68fb      	ldr	r3, [r7, #12]
 8004920:	681b      	ldr	r3, [r3, #0]
 8004922:	699b      	ldr	r3, [r3, #24]
 8004924:	61fb      	str	r3, [r7, #28]
 8004926:	69fb      	ldr	r3, [r7, #28]

      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004928:	68fb      	ldr	r3, [r7, #12]
 800492a:	681b      	ldr	r3, [r3, #0]
 800492c:	681a      	ldr	r2, [r3, #0]
 800492e:	68fb      	ldr	r3, [r7, #12]
 8004930:	681b      	ldr	r3, [r3, #0]
 8004932:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004936:	601a      	str	r2, [r3, #0]
 8004938:	e178      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
    }
    else if (hi2c->XferSize == 2U)
 800493a:	68fb      	ldr	r3, [r7, #12]
 800493c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 800493e:	2b02      	cmp	r3, #2
 8004940:	d11b      	bne.n	800497a <HAL_I2C_Master_Receive+0x17e>
    {
      /* Disable Acknowledge */
      CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004942:	68fb      	ldr	r3, [r7, #12]
 8004944:	681b      	ldr	r3, [r3, #0]
 8004946:	681a      	ldr	r2, [r3, #0]
 8004948:	68fb      	ldr	r3, [r7, #12]
 800494a:	681b      	ldr	r3, [r3, #0]
 800494c:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004950:	601a      	str	r2, [r3, #0]

      /* Enable Pos */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 8004952:	68fb      	ldr	r3, [r7, #12]
 8004954:	681b      	ldr	r3, [r3, #0]
 8004956:	681a      	ldr	r2, [r3, #0]
 8004958:	68fb      	ldr	r3, [r7, #12]
 800495a:	681b      	ldr	r3, [r3, #0]
 800495c:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 8004960:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004962:	2300      	movs	r3, #0
 8004964:	61bb      	str	r3, [r7, #24]
 8004966:	68fb      	ldr	r3, [r7, #12]
 8004968:	681b      	ldr	r3, [r3, #0]
 800496a:	695b      	ldr	r3, [r3, #20]
 800496c:	61bb      	str	r3, [r7, #24]
 800496e:	68fb      	ldr	r3, [r7, #12]
 8004970:	681b      	ldr	r3, [r3, #0]
 8004972:	699b      	ldr	r3, [r3, #24]
 8004974:	61bb      	str	r3, [r7, #24]
 8004976:	69bb      	ldr	r3, [r7, #24]
 8004978:	e158      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
    }
    else
    {
      /* Enable Acknowledge */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 800497a:	68fb      	ldr	r3, [r7, #12]
 800497c:	681b      	ldr	r3, [r3, #0]
 800497e:	681a      	ldr	r2, [r3, #0]
 8004980:	68fb      	ldr	r3, [r7, #12]
 8004982:	681b      	ldr	r3, [r3, #0]
 8004984:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004988:	601a      	str	r2, [r3, #0]

      /* Clear ADDR flag */
      __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 800498a:	2300      	movs	r3, #0
 800498c:	617b      	str	r3, [r7, #20]
 800498e:	68fb      	ldr	r3, [r7, #12]
 8004990:	681b      	ldr	r3, [r3, #0]
 8004992:	695b      	ldr	r3, [r3, #20]
 8004994:	617b      	str	r3, [r7, #20]
 8004996:	68fb      	ldr	r3, [r7, #12]
 8004998:	681b      	ldr	r3, [r3, #0]
 800499a:	699b      	ldr	r3, [r3, #24]
 800499c:	617b      	str	r3, [r7, #20]
 800499e:	697b      	ldr	r3, [r7, #20]
    }

    while (hi2c->XferSize > 0U)
 80049a0:	e144      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
    {
      if (hi2c->XferSize <= 3U)
 80049a2:	68fb      	ldr	r3, [r7, #12]
 80049a4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049a6:	2b03      	cmp	r3, #3
 80049a8:	f200 80f1 	bhi.w	8004b8e <HAL_I2C_Master_Receive+0x392>
      {
        /* One byte */
        if (hi2c->XferSize == 1U)
 80049ac:	68fb      	ldr	r3, [r7, #12]
 80049ae:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049b0:	2b01      	cmp	r3, #1
 80049b2:	d123      	bne.n	80049fc <HAL_I2C_Master_Receive+0x200>
        {
          /* Wait until RXNE flag is set */
          if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 80049b4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 80049b6:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80049b8:	68f8      	ldr	r0, [r7, #12]
 80049ba:	f000 fc4b 	bl	8005254 <I2C_WaitOnRXNEFlagUntilTimeout>
 80049be:	4603      	mov	r3, r0
 80049c0:	2b00      	cmp	r3, #0
 80049c2:	d001      	beq.n	80049c8 <HAL_I2C_Master_Receive+0x1cc>
          {
            return HAL_ERROR;
 80049c4:	2301      	movs	r3, #1
 80049c6:	e145      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 80049c8:	68fb      	ldr	r3, [r7, #12]
 80049ca:	681b      	ldr	r3, [r3, #0]
 80049cc:	691a      	ldr	r2, [r3, #16]
 80049ce:	68fb      	ldr	r3, [r7, #12]
 80049d0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049d2:	b2d2      	uxtb	r2, r2
 80049d4:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 80049d6:	68fb      	ldr	r3, [r7, #12]
 80049d8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80049da:	1c5a      	adds	r2, r3, #1
 80049dc:	68fb      	ldr	r3, [r7, #12]
 80049de:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 80049e0:	68fb      	ldr	r3, [r7, #12]
 80049e2:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80049e4:	3b01      	subs	r3, #1
 80049e6:	b29a      	uxth	r2, r3
 80049e8:	68fb      	ldr	r3, [r7, #12]
 80049ea:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 80049ec:	68fb      	ldr	r3, [r7, #12]
 80049ee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80049f0:	b29b      	uxth	r3, r3
 80049f2:	3b01      	subs	r3, #1
 80049f4:	b29a      	uxth	r2, r3
 80049f6:	68fb      	ldr	r3, [r7, #12]
 80049f8:	855a      	strh	r2, [r3, #42]	@ 0x2a
 80049fa:	e117      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
        }
        /* Two bytes */
        else if (hi2c->XferSize == 2U)
 80049fc:	68fb      	ldr	r3, [r7, #12]
 80049fe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a00:	2b02      	cmp	r3, #2
 8004a02:	d14e      	bne.n	8004aa2 <HAL_I2C_Master_Receive+0x2a6>
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004a04:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004a06:	9300      	str	r3, [sp, #0]
 8004a08:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004a0a:	2200      	movs	r2, #0
 8004a0c:	4906      	ldr	r1, [pc, #24]	@ (8004a28 <HAL_I2C_Master_Receive+0x22c>)
 8004a0e:	68f8      	ldr	r0, [r7, #12]
 8004a10:	f000 fa76 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004a14:	4603      	mov	r3, r0
 8004a16:	2b00      	cmp	r3, #0
 8004a18:	d008      	beq.n	8004a2c <HAL_I2C_Master_Receive+0x230>
          {
            return HAL_ERROR;
 8004a1a:	2301      	movs	r3, #1
 8004a1c:	e11a      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
 8004a1e:	bf00      	nop
 8004a20:	00100002 	.word	0x00100002
 8004a24:	ffff0000 	.word	0xffff0000
 8004a28:	00010004 	.word	0x00010004
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004a2c:	68fb      	ldr	r3, [r7, #12]
 8004a2e:	681b      	ldr	r3, [r3, #0]
 8004a30:	681a      	ldr	r2, [r3, #0]
 8004a32:	68fb      	ldr	r3, [r7, #12]
 8004a34:	681b      	ldr	r3, [r3, #0]
 8004a36:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004a3a:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a3c:	68fb      	ldr	r3, [r7, #12]
 8004a3e:	681b      	ldr	r3, [r3, #0]
 8004a40:	691a      	ldr	r2, [r3, #16]
 8004a42:	68fb      	ldr	r3, [r7, #12]
 8004a44:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a46:	b2d2      	uxtb	r2, r2
 8004a48:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a4a:	68fb      	ldr	r3, [r7, #12]
 8004a4c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a4e:	1c5a      	adds	r2, r3, #1
 8004a50:	68fb      	ldr	r3, [r7, #12]
 8004a52:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a54:	68fb      	ldr	r3, [r7, #12]
 8004a56:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a58:	3b01      	subs	r3, #1
 8004a5a:	b29a      	uxth	r2, r3
 8004a5c:	68fb      	ldr	r3, [r7, #12]
 8004a5e:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a60:	68fb      	ldr	r3, [r7, #12]
 8004a62:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a64:	b29b      	uxth	r3, r3
 8004a66:	3b01      	subs	r3, #1
 8004a68:	b29a      	uxth	r2, r3
 8004a6a:	68fb      	ldr	r3, [r7, #12]
 8004a6c:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004a6e:	68fb      	ldr	r3, [r7, #12]
 8004a70:	681b      	ldr	r3, [r3, #0]
 8004a72:	691a      	ldr	r2, [r3, #16]
 8004a74:	68fb      	ldr	r3, [r7, #12]
 8004a76:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a78:	b2d2      	uxtb	r2, r2
 8004a7a:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004a7c:	68fb      	ldr	r3, [r7, #12]
 8004a7e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004a80:	1c5a      	adds	r2, r3, #1
 8004a82:	68fb      	ldr	r3, [r7, #12]
 8004a84:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004a86:	68fb      	ldr	r3, [r7, #12]
 8004a88:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004a8a:	3b01      	subs	r3, #1
 8004a8c:	b29a      	uxth	r2, r3
 8004a8e:	68fb      	ldr	r3, [r7, #12]
 8004a90:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004a92:	68fb      	ldr	r3, [r7, #12]
 8004a94:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004a96:	b29b      	uxth	r3, r3
 8004a98:	3b01      	subs	r3, #1
 8004a9a:	b29a      	uxth	r2, r3
 8004a9c:	68fb      	ldr	r3, [r7, #12]
 8004a9e:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004aa0:	e0c4      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
        }
        /* 3 Last bytes */
        else
        {
          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004aa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004aa4:	9300      	str	r3, [sp, #0]
 8004aa6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004aa8:	2200      	movs	r2, #0
 8004aaa:	496c      	ldr	r1, [pc, #432]	@ (8004c5c <HAL_I2C_Master_Receive+0x460>)
 8004aac:	68f8      	ldr	r0, [r7, #12]
 8004aae:	f000 fa27 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004ab2:	4603      	mov	r3, r0
 8004ab4:	2b00      	cmp	r3, #0
 8004ab6:	d001      	beq.n	8004abc <HAL_I2C_Master_Receive+0x2c0>
          {
            return HAL_ERROR;
 8004ab8:	2301      	movs	r3, #1
 8004aba:	e0cb      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
          }

          /* Disable Acknowledge */
          CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004abc:	68fb      	ldr	r3, [r7, #12]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	681a      	ldr	r2, [r3, #0]
 8004ac2:	68fb      	ldr	r3, [r7, #12]
 8004ac4:	681b      	ldr	r3, [r3, #0]
 8004ac6:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004aca:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004acc:	68fb      	ldr	r3, [r7, #12]
 8004ace:	681b      	ldr	r3, [r3, #0]
 8004ad0:	691a      	ldr	r2, [r3, #16]
 8004ad2:	68fb      	ldr	r3, [r7, #12]
 8004ad4:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ad6:	b2d2      	uxtb	r2, r2
 8004ad8:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004ada:	68fb      	ldr	r3, [r7, #12]
 8004adc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004ade:	1c5a      	adds	r2, r3, #1
 8004ae0:	68fb      	ldr	r3, [r7, #12]
 8004ae2:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004ae4:	68fb      	ldr	r3, [r7, #12]
 8004ae6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004ae8:	3b01      	subs	r3, #1
 8004aea:	b29a      	uxth	r2, r3
 8004aec:	68fb      	ldr	r3, [r7, #12]
 8004aee:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004af0:	68fb      	ldr	r3, [r7, #12]
 8004af2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004af4:	b29b      	uxth	r3, r3
 8004af6:	3b01      	subs	r3, #1
 8004af8:	b29a      	uxth	r2, r3
 8004afa:	68fb      	ldr	r3, [r7, #12]
 8004afc:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Wait until BTF flag is set */
          if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BTF, RESET, Timeout, tickstart) != HAL_OK)
 8004afe:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8004b00:	9300      	str	r3, [sp, #0]
 8004b02:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8004b04:	2200      	movs	r2, #0
 8004b06:	4955      	ldr	r1, [pc, #340]	@ (8004c5c <HAL_I2C_Master_Receive+0x460>)
 8004b08:	68f8      	ldr	r0, [r7, #12]
 8004b0a:	f000 f9f9 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004b0e:	4603      	mov	r3, r0
 8004b10:	2b00      	cmp	r3, #0
 8004b12:	d001      	beq.n	8004b18 <HAL_I2C_Master_Receive+0x31c>
          {
            return HAL_ERROR;
 8004b14:	2301      	movs	r3, #1
 8004b16:	e09d      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
          }

          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8004b18:	68fb      	ldr	r3, [r7, #12]
 8004b1a:	681b      	ldr	r3, [r3, #0]
 8004b1c:	681a      	ldr	r2, [r3, #0]
 8004b1e:	68fb      	ldr	r3, [r7, #12]
 8004b20:	681b      	ldr	r3, [r3, #0]
 8004b22:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8004b26:	601a      	str	r2, [r3, #0]

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b28:	68fb      	ldr	r3, [r7, #12]
 8004b2a:	681b      	ldr	r3, [r3, #0]
 8004b2c:	691a      	ldr	r2, [r3, #16]
 8004b2e:	68fb      	ldr	r3, [r7, #12]
 8004b30:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b32:	b2d2      	uxtb	r2, r2
 8004b34:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b36:	68fb      	ldr	r3, [r7, #12]
 8004b38:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b3a:	1c5a      	adds	r2, r3, #1
 8004b3c:	68fb      	ldr	r3, [r7, #12]
 8004b3e:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b40:	68fb      	ldr	r3, [r7, #12]
 8004b42:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b44:	3b01      	subs	r3, #1
 8004b46:	b29a      	uxth	r2, r3
 8004b48:	68fb      	ldr	r3, [r7, #12]
 8004b4a:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b4c:	68fb      	ldr	r3, [r7, #12]
 8004b4e:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b50:	b29b      	uxth	r3, r3
 8004b52:	3b01      	subs	r3, #1
 8004b54:	b29a      	uxth	r2, r3
 8004b56:	68fb      	ldr	r3, [r7, #12]
 8004b58:	855a      	strh	r2, [r3, #42]	@ 0x2a

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004b5a:	68fb      	ldr	r3, [r7, #12]
 8004b5c:	681b      	ldr	r3, [r3, #0]
 8004b5e:	691a      	ldr	r2, [r3, #16]
 8004b60:	68fb      	ldr	r3, [r7, #12]
 8004b62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b64:	b2d2      	uxtb	r2, r2
 8004b66:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004b68:	68fb      	ldr	r3, [r7, #12]
 8004b6a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004b6c:	1c5a      	adds	r2, r3, #1
 8004b6e:	68fb      	ldr	r3, [r7, #12]
 8004b70:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004b72:	68fb      	ldr	r3, [r7, #12]
 8004b74:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004b76:	3b01      	subs	r3, #1
 8004b78:	b29a      	uxth	r2, r3
 8004b7a:	68fb      	ldr	r3, [r7, #12]
 8004b7c:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004b7e:	68fb      	ldr	r3, [r7, #12]
 8004b80:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004b82:	b29b      	uxth	r3, r3
 8004b84:	3b01      	subs	r3, #1
 8004b86:	b29a      	uxth	r2, r3
 8004b88:	68fb      	ldr	r3, [r7, #12]
 8004b8a:	855a      	strh	r2, [r3, #42]	@ 0x2a
 8004b8c:	e04e      	b.n	8004c2c <HAL_I2C_Master_Receive+0x430>
        }
      }
      else
      {
        /* Wait until RXNE flag is set */
        if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8004b8e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8004b90:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8004b92:	68f8      	ldr	r0, [r7, #12]
 8004b94:	f000 fb5e 	bl	8005254 <I2C_WaitOnRXNEFlagUntilTimeout>
 8004b98:	4603      	mov	r3, r0
 8004b9a:	2b00      	cmp	r3, #0
 8004b9c:	d001      	beq.n	8004ba2 <HAL_I2C_Master_Receive+0x3a6>
        {
          return HAL_ERROR;
 8004b9e:	2301      	movs	r3, #1
 8004ba0:	e058      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
        }

        /* Read data from DR */
        *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004ba2:	68fb      	ldr	r3, [r7, #12]
 8004ba4:	681b      	ldr	r3, [r3, #0]
 8004ba6:	691a      	ldr	r2, [r3, #16]
 8004ba8:	68fb      	ldr	r3, [r7, #12]
 8004baa:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bac:	b2d2      	uxtb	r2, r2
 8004bae:	701a      	strb	r2, [r3, #0]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 8004bb0:	68fb      	ldr	r3, [r7, #12]
 8004bb2:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004bb4:	1c5a      	adds	r2, r3, #1
 8004bb6:	68fb      	ldr	r3, [r7, #12]
 8004bb8:	625a      	str	r2, [r3, #36]	@ 0x24

        /* Update counter */
        hi2c->XferSize--;
 8004bba:	68fb      	ldr	r3, [r7, #12]
 8004bbc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004bbe:	3b01      	subs	r3, #1
 8004bc0:	b29a      	uxth	r2, r3
 8004bc2:	68fb      	ldr	r3, [r7, #12]
 8004bc4:	851a      	strh	r2, [r3, #40]	@ 0x28
        hi2c->XferCount--;
 8004bc6:	68fb      	ldr	r3, [r7, #12]
 8004bc8:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004bca:	b29b      	uxth	r3, r3
 8004bcc:	3b01      	subs	r3, #1
 8004bce:	b29a      	uxth	r2, r3
 8004bd0:	68fb      	ldr	r3, [r7, #12]
 8004bd2:	855a      	strh	r2, [r3, #42]	@ 0x2a

        if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET)
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	681b      	ldr	r3, [r3, #0]
 8004bd8:	695b      	ldr	r3, [r3, #20]
 8004bda:	f003 0304 	and.w	r3, r3, #4
 8004bde:	2b04      	cmp	r3, #4
 8004be0:	d124      	bne.n	8004c2c <HAL_I2C_Master_Receive+0x430>
        {

          if (hi2c->XferSize == 3U)
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004be6:	2b03      	cmp	r3, #3
 8004be8:	d107      	bne.n	8004bfa <HAL_I2C_Master_Receive+0x3fe>
          {
            /* Disable Acknowledge */
            CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	681b      	ldr	r3, [r3, #0]
 8004bee:	681a      	ldr	r2, [r3, #0]
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	681b      	ldr	r3, [r3, #0]
 8004bf4:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 8004bf8:	601a      	str	r2, [r3, #0]
          }

          /* Read data from DR */
          *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->DR;
 8004bfa:	68fb      	ldr	r3, [r7, #12]
 8004bfc:	681b      	ldr	r3, [r3, #0]
 8004bfe:	691a      	ldr	r2, [r3, #16]
 8004c00:	68fb      	ldr	r3, [r7, #12]
 8004c02:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c04:	b2d2      	uxtb	r2, r2
 8004c06:	701a      	strb	r2, [r3, #0]

          /* Increment Buffer pointer */
          hi2c->pBuffPtr++;
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8004c0c:	1c5a      	adds	r2, r3, #1
 8004c0e:	68fb      	ldr	r3, [r7, #12]
 8004c10:	625a      	str	r2, [r3, #36]	@ 0x24

          /* Update counter */
          hi2c->XferSize--;
 8004c12:	68fb      	ldr	r3, [r7, #12]
 8004c14:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c16:	3b01      	subs	r3, #1
 8004c18:	b29a      	uxth	r2, r3
 8004c1a:	68fb      	ldr	r3, [r7, #12]
 8004c1c:	851a      	strh	r2, [r3, #40]	@ 0x28
          hi2c->XferCount--;
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8004c22:	b29b      	uxth	r3, r3
 8004c24:	3b01      	subs	r3, #1
 8004c26:	b29a      	uxth	r2, r3
 8004c28:	68fb      	ldr	r3, [r7, #12]
 8004c2a:	855a      	strh	r2, [r3, #42]	@ 0x2a
    while (hi2c->XferSize > 0U)
 8004c2c:	68fb      	ldr	r3, [r7, #12]
 8004c2e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004c30:	2b00      	cmp	r3, #0
 8004c32:	f47f aeb6 	bne.w	80049a2 <HAL_I2C_Master_Receive+0x1a6>
        }
      }
    }

    hi2c->State = HAL_I2C_STATE_READY;
 8004c36:	68fb      	ldr	r3, [r7, #12]
 8004c38:	2220      	movs	r2, #32
 8004c3a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 8004c3e:	68fb      	ldr	r3, [r7, #12]
 8004c40:	2200      	movs	r2, #0
 8004c42:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004c46:	68fb      	ldr	r3, [r7, #12]
 8004c48:	2200      	movs	r2, #0
 8004c4a:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_OK;
 8004c4e:	2300      	movs	r3, #0
 8004c50:	e000      	b.n	8004c54 <HAL_I2C_Master_Receive+0x458>
  }
  else
  {
    return HAL_BUSY;
 8004c52:	2302      	movs	r3, #2
  }
}
 8004c54:	4618      	mov	r0, r3
 8004c56:	3728      	adds	r7, #40	@ 0x28
 8004c58:	46bd      	mov	sp, r7
 8004c5a:	bd80      	pop	{r7, pc}
 8004c5c:	00010004 	.word	0x00010004

08004c60 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004c60:	b580      	push	{r7, lr}
 8004c62:	b088      	sub	sp, #32
 8004c64:	af02      	add	r7, sp, #8
 8004c66:	60f8      	str	r0, [r7, #12]
 8004c68:	607a      	str	r2, [r7, #4]
 8004c6a:	603b      	str	r3, [r7, #0]
 8004c6c:	460b      	mov	r3, r1
 8004c6e:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004c70:	68fb      	ldr	r3, [r7, #12]
 8004c72:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004c74:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004c76:	697b      	ldr	r3, [r7, #20]
 8004c78:	2b08      	cmp	r3, #8
 8004c7a:	d006      	beq.n	8004c8a <I2C_MasterRequestWrite+0x2a>
 8004c7c:	697b      	ldr	r3, [r7, #20]
 8004c7e:	2b01      	cmp	r3, #1
 8004c80:	d003      	beq.n	8004c8a <I2C_MasterRequestWrite+0x2a>
 8004c82:	697b      	ldr	r3, [r7, #20]
 8004c84:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004c88:	d108      	bne.n	8004c9c <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004c8a:	68fb      	ldr	r3, [r7, #12]
 8004c8c:	681b      	ldr	r3, [r3, #0]
 8004c8e:	681a      	ldr	r2, [r3, #0]
 8004c90:	68fb      	ldr	r3, [r7, #12]
 8004c92:	681b      	ldr	r3, [r3, #0]
 8004c94:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004c98:	601a      	str	r2, [r3, #0]
 8004c9a:	e00b      	b.n	8004cb4 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 8004c9c:	68fb      	ldr	r3, [r7, #12]
 8004c9e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004ca0:	2b12      	cmp	r3, #18
 8004ca2:	d107      	bne.n	8004cb4 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004ca4:	68fb      	ldr	r3, [r7, #12]
 8004ca6:	681b      	ldr	r3, [r3, #0]
 8004ca8:	681a      	ldr	r2, [r3, #0]
 8004caa:	68fb      	ldr	r3, [r7, #12]
 8004cac:	681b      	ldr	r3, [r3, #0]
 8004cae:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004cb2:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004cb4:	683b      	ldr	r3, [r7, #0]
 8004cb6:	9300      	str	r3, [sp, #0]
 8004cb8:	687b      	ldr	r3, [r7, #4]
 8004cba:	2200      	movs	r2, #0
 8004cbc:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004cc0:	68f8      	ldr	r0, [r7, #12]
 8004cc2:	f000 f91d 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004cc6:	4603      	mov	r3, r0
 8004cc8:	2b00      	cmp	r3, #0
 8004cca:	d00d      	beq.n	8004ce8 <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ccc:	68fb      	ldr	r3, [r7, #12]
 8004cce:	681b      	ldr	r3, [r3, #0]
 8004cd0:	681b      	ldr	r3, [r3, #0]
 8004cd2:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004cd6:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004cda:	d103      	bne.n	8004ce4 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004cdc:	68fb      	ldr	r3, [r7, #12]
 8004cde:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004ce2:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004ce4:	2303      	movs	r3, #3
 8004ce6:	e035      	b.n	8004d54 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004ce8:	68fb      	ldr	r3, [r7, #12]
 8004cea:	691b      	ldr	r3, [r3, #16]
 8004cec:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004cf0:	d108      	bne.n	8004d04 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 8004cf2:	897b      	ldrh	r3, [r7, #10]
 8004cf4:	b2db      	uxtb	r3, r3
 8004cf6:	461a      	mov	r2, r3
 8004cf8:	68fb      	ldr	r3, [r7, #12]
 8004cfa:	681b      	ldr	r3, [r3, #0]
 8004cfc:	f002 02fe 	and.w	r2, r2, #254	@ 0xfe
 8004d00:	611a      	str	r2, [r3, #16]
 8004d02:	e01b      	b.n	8004d3c <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004d04:	897b      	ldrh	r3, [r7, #10]
 8004d06:	11db      	asrs	r3, r3, #7
 8004d08:	b2db      	uxtb	r3, r3
 8004d0a:	f003 0306 	and.w	r3, r3, #6
 8004d0e:	b2db      	uxtb	r3, r3
 8004d10:	f063 030f 	orn	r3, r3, #15
 8004d14:	b2da      	uxtb	r2, r3
 8004d16:	68fb      	ldr	r3, [r7, #12]
 8004d18:	681b      	ldr	r3, [r3, #0]
 8004d1a:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004d1c:	683b      	ldr	r3, [r7, #0]
 8004d1e:	687a      	ldr	r2, [r7, #4]
 8004d20:	490e      	ldr	r1, [pc, #56]	@ (8004d5c <I2C_MasterRequestWrite+0xfc>)
 8004d22:	68f8      	ldr	r0, [r7, #12]
 8004d24:	f000 f966 	bl	8004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d28:	4603      	mov	r3, r0
 8004d2a:	2b00      	cmp	r3, #0
 8004d2c:	d001      	beq.n	8004d32 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 8004d2e:	2301      	movs	r3, #1
 8004d30:	e010      	b.n	8004d54 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004d32:	897b      	ldrh	r3, [r7, #10]
 8004d34:	b2da      	uxtb	r2, r3
 8004d36:	68fb      	ldr	r3, [r7, #12]
 8004d38:	681b      	ldr	r3, [r3, #0]
 8004d3a:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004d3c:	683b      	ldr	r3, [r7, #0]
 8004d3e:	687a      	ldr	r2, [r7, #4]
 8004d40:	4907      	ldr	r1, [pc, #28]	@ (8004d60 <I2C_MasterRequestWrite+0x100>)
 8004d42:	68f8      	ldr	r0, [r7, #12]
 8004d44:	f000 f956 	bl	8004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004d48:	4603      	mov	r3, r0
 8004d4a:	2b00      	cmp	r3, #0
 8004d4c:	d001      	beq.n	8004d52 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 8004d4e:	2301      	movs	r3, #1
 8004d50:	e000      	b.n	8004d54 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 8004d52:	2300      	movs	r3, #0
}
 8004d54:	4618      	mov	r0, r3
 8004d56:	3718      	adds	r7, #24
 8004d58:	46bd      	mov	sp, r7
 8004d5a:	bd80      	pop	{r7, pc}
 8004d5c:	00010008 	.word	0x00010008
 8004d60:	00010002 	.word	0x00010002

08004d64 <I2C_MasterRequestRead>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestRead(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 8004d64:	b580      	push	{r7, lr}
 8004d66:	b088      	sub	sp, #32
 8004d68:	af02      	add	r7, sp, #8
 8004d6a:	60f8      	str	r0, [r7, #12]
 8004d6c:	607a      	str	r2, [r7, #4]
 8004d6e:	603b      	str	r3, [r7, #0]
 8004d70:	460b      	mov	r3, r1
 8004d72:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 8004d74:	68fb      	ldr	r3, [r7, #12]
 8004d76:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004d78:	617b      	str	r3, [r7, #20]

  /* Enable Acknowledge */
  SET_BIT(hi2c->Instance->CR1, I2C_CR1_ACK);
 8004d7a:	68fb      	ldr	r3, [r7, #12]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	681a      	ldr	r2, [r3, #0]
 8004d80:	68fb      	ldr	r3, [r7, #12]
 8004d82:	681b      	ldr	r3, [r3, #0]
 8004d84:	f442 6280 	orr.w	r2, r2, #1024	@ 0x400
 8004d88:	601a      	str	r2, [r3, #0]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME)  || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 8004d8a:	697b      	ldr	r3, [r7, #20]
 8004d8c:	2b08      	cmp	r3, #8
 8004d8e:	d006      	beq.n	8004d9e <I2C_MasterRequestRead+0x3a>
 8004d90:	697b      	ldr	r3, [r7, #20]
 8004d92:	2b01      	cmp	r3, #1
 8004d94:	d003      	beq.n	8004d9e <I2C_MasterRequestRead+0x3a>
 8004d96:	697b      	ldr	r3, [r7, #20]
 8004d98:	f513 3f80 	cmn.w	r3, #65536	@ 0x10000
 8004d9c:	d108      	bne.n	8004db0 <I2C_MasterRequestRead+0x4c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004d9e:	68fb      	ldr	r3, [r7, #12]
 8004da0:	681b      	ldr	r3, [r3, #0]
 8004da2:	681a      	ldr	r2, [r3, #0]
 8004da4:	68fb      	ldr	r3, [r7, #12]
 8004da6:	681b      	ldr	r3, [r3, #0]
 8004da8:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004dac:	601a      	str	r2, [r3, #0]
 8004dae:	e00b      	b.n	8004dc8 <I2C_MasterRequestRead+0x64>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_TX)
 8004db0:	68fb      	ldr	r3, [r7, #12]
 8004db2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004db4:	2b11      	cmp	r3, #17
 8004db6:	d107      	bne.n	8004dc8 <I2C_MasterRequestRead+0x64>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004db8:	68fb      	ldr	r3, [r7, #12]
 8004dba:	681b      	ldr	r3, [r3, #0]
 8004dbc:	681a      	ldr	r2, [r3, #0]
 8004dbe:	68fb      	ldr	r3, [r7, #12]
 8004dc0:	681b      	ldr	r3, [r3, #0]
 8004dc2:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004dc6:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004dc8:	683b      	ldr	r3, [r7, #0]
 8004dca:	9300      	str	r3, [sp, #0]
 8004dcc:	687b      	ldr	r3, [r7, #4]
 8004dce:	2200      	movs	r2, #0
 8004dd0:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004dd4:	68f8      	ldr	r0, [r7, #12]
 8004dd6:	f000 f893 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004dda:	4603      	mov	r3, r0
 8004ddc:	2b00      	cmp	r3, #0
 8004dde:	d00d      	beq.n	8004dfc <I2C_MasterRequestRead+0x98>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004de0:	68fb      	ldr	r3, [r7, #12]
 8004de2:	681b      	ldr	r3, [r3, #0]
 8004de4:	681b      	ldr	r3, [r3, #0]
 8004de6:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004dea:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004dee:	d103      	bne.n	8004df8 <I2C_MasterRequestRead+0x94>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004df0:	68fb      	ldr	r3, [r7, #12]
 8004df2:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004df6:	641a      	str	r2, [r3, #64]	@ 0x40
    }
    return HAL_TIMEOUT;
 8004df8:	2303      	movs	r3, #3
 8004dfa:	e079      	b.n	8004ef0 <I2C_MasterRequestRead+0x18c>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8004dfc:	68fb      	ldr	r3, [r7, #12]
 8004dfe:	691b      	ldr	r3, [r3, #16]
 8004e00:	f5b3 4f80 	cmp.w	r3, #16384	@ 0x4000
 8004e04:	d108      	bne.n	8004e18 <I2C_MasterRequestRead+0xb4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_READ(DevAddress);
 8004e06:	897b      	ldrh	r3, [r7, #10]
 8004e08:	b2db      	uxtb	r3, r3
 8004e0a:	f043 0301 	orr.w	r3, r3, #1
 8004e0e:	b2da      	uxtb	r2, r3
 8004e10:	68fb      	ldr	r3, [r7, #12]
 8004e12:	681b      	ldr	r3, [r3, #0]
 8004e14:	611a      	str	r2, [r3, #16]
 8004e16:	e05f      	b.n	8004ed8 <I2C_MasterRequestRead+0x174>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 8004e18:	897b      	ldrh	r3, [r7, #10]
 8004e1a:	11db      	asrs	r3, r3, #7
 8004e1c:	b2db      	uxtb	r3, r3
 8004e1e:	f003 0306 	and.w	r3, r3, #6
 8004e22:	b2db      	uxtb	r3, r3
 8004e24:	f063 030f 	orn	r3, r3, #15
 8004e28:	b2da      	uxtb	r2, r3
 8004e2a:	68fb      	ldr	r3, [r7, #12]
 8004e2c:	681b      	ldr	r3, [r3, #0]
 8004e2e:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 8004e30:	683b      	ldr	r3, [r7, #0]
 8004e32:	687a      	ldr	r2, [r7, #4]
 8004e34:	4930      	ldr	r1, [pc, #192]	@ (8004ef8 <I2C_MasterRequestRead+0x194>)
 8004e36:	68f8      	ldr	r0, [r7, #12]
 8004e38:	f000 f8dc 	bl	8004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e3c:	4603      	mov	r3, r0
 8004e3e:	2b00      	cmp	r3, #0
 8004e40:	d001      	beq.n	8004e46 <I2C_MasterRequestRead+0xe2>
    {
      return HAL_ERROR;
 8004e42:	2301      	movs	r3, #1
 8004e44:	e054      	b.n	8004ef0 <I2C_MasterRequestRead+0x18c>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 8004e46:	897b      	ldrh	r3, [r7, #10]
 8004e48:	b2da      	uxtb	r2, r3
 8004e4a:	68fb      	ldr	r3, [r7, #12]
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	611a      	str	r2, [r3, #16]

    /* Wait until ADDR flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004e50:	683b      	ldr	r3, [r7, #0]
 8004e52:	687a      	ldr	r2, [r7, #4]
 8004e54:	4929      	ldr	r1, [pc, #164]	@ (8004efc <I2C_MasterRequestRead+0x198>)
 8004e56:	68f8      	ldr	r0, [r7, #12]
 8004e58:	f000 f8cc 	bl	8004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004e5c:	4603      	mov	r3, r0
 8004e5e:	2b00      	cmp	r3, #0
 8004e60:	d001      	beq.n	8004e66 <I2C_MasterRequestRead+0x102>
    {
      return HAL_ERROR;
 8004e62:	2301      	movs	r3, #1
 8004e64:	e044      	b.n	8004ef0 <I2C_MasterRequestRead+0x18c>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 8004e66:	2300      	movs	r3, #0
 8004e68:	613b      	str	r3, [r7, #16]
 8004e6a:	68fb      	ldr	r3, [r7, #12]
 8004e6c:	681b      	ldr	r3, [r3, #0]
 8004e6e:	695b      	ldr	r3, [r3, #20]
 8004e70:	613b      	str	r3, [r7, #16]
 8004e72:	68fb      	ldr	r3, [r7, #12]
 8004e74:	681b      	ldr	r3, [r3, #0]
 8004e76:	699b      	ldr	r3, [r3, #24]
 8004e78:	613b      	str	r3, [r7, #16]
 8004e7a:	693b      	ldr	r3, [r7, #16]

    /* Generate Restart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 8004e7c:	68fb      	ldr	r3, [r7, #12]
 8004e7e:	681b      	ldr	r3, [r3, #0]
 8004e80:	681a      	ldr	r2, [r3, #0]
 8004e82:	68fb      	ldr	r3, [r7, #12]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	f442 7280 	orr.w	r2, r2, #256	@ 0x100
 8004e8a:	601a      	str	r2, [r3, #0]

    /* Wait until SB flag is set */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 8004e8c:	683b      	ldr	r3, [r7, #0]
 8004e8e:	9300      	str	r3, [sp, #0]
 8004e90:	687b      	ldr	r3, [r7, #4]
 8004e92:	2200      	movs	r2, #0
 8004e94:	f04f 1101 	mov.w	r1, #65537	@ 0x10001
 8004e98:	68f8      	ldr	r0, [r7, #12]
 8004e9a:	f000 f831 	bl	8004f00 <I2C_WaitOnFlagUntilTimeout>
 8004e9e:	4603      	mov	r3, r0
 8004ea0:	2b00      	cmp	r3, #0
 8004ea2:	d00d      	beq.n	8004ec0 <I2C_MasterRequestRead+0x15c>
    {
      if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 8004ea4:	68fb      	ldr	r3, [r7, #12]
 8004ea6:	681b      	ldr	r3, [r3, #0]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8004eae:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8004eb2:	d103      	bne.n	8004ebc <I2C_MasterRequestRead+0x158>
      {
        hi2c->ErrorCode = HAL_I2C_WRONG_START;
 8004eb4:	68fb      	ldr	r3, [r7, #12]
 8004eb6:	f44f 7200 	mov.w	r2, #512	@ 0x200
 8004eba:	641a      	str	r2, [r3, #64]	@ 0x40
      }
      return HAL_TIMEOUT;
 8004ebc:	2303      	movs	r3, #3
 8004ebe:	e017      	b.n	8004ef0 <I2C_MasterRequestRead+0x18c>
    }

    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_READ(DevAddress);
 8004ec0:	897b      	ldrh	r3, [r7, #10]
 8004ec2:	11db      	asrs	r3, r3, #7
 8004ec4:	b2db      	uxtb	r3, r3
 8004ec6:	f003 0306 	and.w	r3, r3, #6
 8004eca:	b2db      	uxtb	r3, r3
 8004ecc:	f063 030e 	orn	r3, r3, #14
 8004ed0:	b2da      	uxtb	r2, r3
 8004ed2:	68fb      	ldr	r3, [r7, #12]
 8004ed4:	681b      	ldr	r3, [r3, #0]
 8004ed6:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 8004ed8:	683b      	ldr	r3, [r7, #0]
 8004eda:	687a      	ldr	r2, [r7, #4]
 8004edc:	4907      	ldr	r1, [pc, #28]	@ (8004efc <I2C_MasterRequestRead+0x198>)
 8004ede:	68f8      	ldr	r0, [r7, #12]
 8004ee0:	f000 f888 	bl	8004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 8004ee4:	4603      	mov	r3, r0
 8004ee6:	2b00      	cmp	r3, #0
 8004ee8:	d001      	beq.n	8004eee <I2C_MasterRequestRead+0x18a>
  {
    return HAL_ERROR;
 8004eea:	2301      	movs	r3, #1
 8004eec:	e000      	b.n	8004ef0 <I2C_MasterRequestRead+0x18c>
  }

  return HAL_OK;
 8004eee:	2300      	movs	r3, #0
}
 8004ef0:	4618      	mov	r0, r3
 8004ef2:	3718      	adds	r7, #24
 8004ef4:	46bd      	mov	sp, r7
 8004ef6:	bd80      	pop	{r7, pc}
 8004ef8:	00010008 	.word	0x00010008
 8004efc:	00010002 	.word	0x00010002

08004f00 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 8004f00:	b580      	push	{r7, lr}
 8004f02:	b084      	sub	sp, #16
 8004f04:	af00      	add	r7, sp, #0
 8004f06:	60f8      	str	r0, [r7, #12]
 8004f08:	60b9      	str	r1, [r7, #8]
 8004f0a:	603b      	str	r3, [r7, #0]
 8004f0c:	4613      	mov	r3, r2
 8004f0e:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004f10:	e048      	b.n	8004fa4 <I2C_WaitOnFlagUntilTimeout+0xa4>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004f12:	683b      	ldr	r3, [r7, #0]
 8004f14:	f1b3 3fff 	cmp.w	r3, #4294967295
 8004f18:	d044      	beq.n	8004fa4 <I2C_WaitOnFlagUntilTimeout+0xa4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004f1a:	f7fd fda1 	bl	8002a60 <HAL_GetTick>
 8004f1e:	4602      	mov	r2, r0
 8004f20:	69bb      	ldr	r3, [r7, #24]
 8004f22:	1ad3      	subs	r3, r2, r3
 8004f24:	683a      	ldr	r2, [r7, #0]
 8004f26:	429a      	cmp	r2, r3
 8004f28:	d302      	bcc.n	8004f30 <I2C_WaitOnFlagUntilTimeout+0x30>
 8004f2a:	683b      	ldr	r3, [r7, #0]
 8004f2c:	2b00      	cmp	r3, #0
 8004f2e:	d139      	bne.n	8004fa4 <I2C_WaitOnFlagUntilTimeout+0xa4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 8004f30:	68bb      	ldr	r3, [r7, #8]
 8004f32:	0c1b      	lsrs	r3, r3, #16
 8004f34:	b2db      	uxtb	r3, r3
 8004f36:	2b01      	cmp	r3, #1
 8004f38:	d10d      	bne.n	8004f56 <I2C_WaitOnFlagUntilTimeout+0x56>
 8004f3a:	68fb      	ldr	r3, [r7, #12]
 8004f3c:	681b      	ldr	r3, [r3, #0]
 8004f3e:	695b      	ldr	r3, [r3, #20]
 8004f40:	43da      	mvns	r2, r3
 8004f42:	68bb      	ldr	r3, [r7, #8]
 8004f44:	4013      	ands	r3, r2
 8004f46:	b29b      	uxth	r3, r3
 8004f48:	2b00      	cmp	r3, #0
 8004f4a:	bf0c      	ite	eq
 8004f4c:	2301      	moveq	r3, #1
 8004f4e:	2300      	movne	r3, #0
 8004f50:	b2db      	uxtb	r3, r3
 8004f52:	461a      	mov	r2, r3
 8004f54:	e00c      	b.n	8004f70 <I2C_WaitOnFlagUntilTimeout+0x70>
 8004f56:	68fb      	ldr	r3, [r7, #12]
 8004f58:	681b      	ldr	r3, [r3, #0]
 8004f5a:	699b      	ldr	r3, [r3, #24]
 8004f5c:	43da      	mvns	r2, r3
 8004f5e:	68bb      	ldr	r3, [r7, #8]
 8004f60:	4013      	ands	r3, r2
 8004f62:	b29b      	uxth	r3, r3
 8004f64:	2b00      	cmp	r3, #0
 8004f66:	bf0c      	ite	eq
 8004f68:	2301      	moveq	r3, #1
 8004f6a:	2300      	movne	r3, #0
 8004f6c:	b2db      	uxtb	r3, r3
 8004f6e:	461a      	mov	r2, r3
 8004f70:	79fb      	ldrb	r3, [r7, #7]
 8004f72:	429a      	cmp	r2, r3
 8004f74:	d116      	bne.n	8004fa4 <I2C_WaitOnFlagUntilTimeout+0xa4>
        {
          hi2c->PreviousState     = I2C_STATE_NONE;
 8004f76:	68fb      	ldr	r3, [r7, #12]
 8004f78:	2200      	movs	r2, #0
 8004f7a:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State             = HAL_I2C_STATE_READY;
 8004f7c:	68fb      	ldr	r3, [r7, #12]
 8004f7e:	2220      	movs	r2, #32
 8004f80:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode              = HAL_I2C_MODE_NONE;
 8004f84:	68fb      	ldr	r3, [r7, #12]
 8004f86:	2200      	movs	r2, #0
 8004f88:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8004f90:	f043 0220 	orr.w	r2, r3, #32
 8004f94:	68fb      	ldr	r3, [r7, #12]
 8004f96:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004f98:	68fb      	ldr	r3, [r7, #12]
 8004f9a:	2200      	movs	r2, #0
 8004f9c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8004fa0:	2301      	movs	r3, #1
 8004fa2:	e023      	b.n	8004fec <I2C_WaitOnFlagUntilTimeout+0xec>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004fa4:	68bb      	ldr	r3, [r7, #8]
 8004fa6:	0c1b      	lsrs	r3, r3, #16
 8004fa8:	b2db      	uxtb	r3, r3
 8004faa:	2b01      	cmp	r3, #1
 8004fac:	d10d      	bne.n	8004fca <I2C_WaitOnFlagUntilTimeout+0xca>
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	681b      	ldr	r3, [r3, #0]
 8004fb2:	695b      	ldr	r3, [r3, #20]
 8004fb4:	43da      	mvns	r2, r3
 8004fb6:	68bb      	ldr	r3, [r7, #8]
 8004fb8:	4013      	ands	r3, r2
 8004fba:	b29b      	uxth	r3, r3
 8004fbc:	2b00      	cmp	r3, #0
 8004fbe:	bf0c      	ite	eq
 8004fc0:	2301      	moveq	r3, #1
 8004fc2:	2300      	movne	r3, #0
 8004fc4:	b2db      	uxtb	r3, r3
 8004fc6:	461a      	mov	r2, r3
 8004fc8:	e00c      	b.n	8004fe4 <I2C_WaitOnFlagUntilTimeout+0xe4>
 8004fca:	68fb      	ldr	r3, [r7, #12]
 8004fcc:	681b      	ldr	r3, [r3, #0]
 8004fce:	699b      	ldr	r3, [r3, #24]
 8004fd0:	43da      	mvns	r2, r3
 8004fd2:	68bb      	ldr	r3, [r7, #8]
 8004fd4:	4013      	ands	r3, r2
 8004fd6:	b29b      	uxth	r3, r3
 8004fd8:	2b00      	cmp	r3, #0
 8004fda:	bf0c      	ite	eq
 8004fdc:	2301      	moveq	r3, #1
 8004fde:	2300      	movne	r3, #0
 8004fe0:	b2db      	uxtb	r3, r3
 8004fe2:	461a      	mov	r2, r3
 8004fe4:	79fb      	ldrb	r3, [r7, #7]
 8004fe6:	429a      	cmp	r2, r3
 8004fe8:	d093      	beq.n	8004f12 <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 8004fea:	2300      	movs	r3, #0
}
 8004fec:	4618      	mov	r0, r3
 8004fee:	3710      	adds	r7, #16
 8004ff0:	46bd      	mov	sp, r7
 8004ff2:	bd80      	pop	{r7, pc}

08004ff4 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 8004ff4:	b580      	push	{r7, lr}
 8004ff6:	b084      	sub	sp, #16
 8004ff8:	af00      	add	r7, sp, #0
 8004ffa:	60f8      	str	r0, [r7, #12]
 8004ffc:	60b9      	str	r1, [r7, #8]
 8004ffe:	607a      	str	r2, [r7, #4]
 8005000:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 8005002:	e071      	b.n	80050e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005004:	68fb      	ldr	r3, [r7, #12]
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	695b      	ldr	r3, [r3, #20]
 800500a:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 800500e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005012:	d123      	bne.n	800505c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 8005014:	68fb      	ldr	r3, [r7, #12]
 8005016:	681b      	ldr	r3, [r3, #0]
 8005018:	681a      	ldr	r2, [r3, #0]
 800501a:	68fb      	ldr	r3, [r7, #12]
 800501c:	681b      	ldr	r3, [r3, #0]
 800501e:	f442 7200 	orr.w	r2, r2, #512	@ 0x200
 8005022:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005024:	68fb      	ldr	r3, [r7, #12]
 8005026:	681b      	ldr	r3, [r3, #0]
 8005028:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800502c:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800502e:	68fb      	ldr	r3, [r7, #12]
 8005030:	2200      	movs	r2, #0
 8005032:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005034:	68fb      	ldr	r3, [r7, #12]
 8005036:	2220      	movs	r2, #32
 8005038:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 800503c:	68fb      	ldr	r3, [r7, #12]
 800503e:	2200      	movs	r2, #0
 8005040:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005044:	68fb      	ldr	r3, [r7, #12]
 8005046:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005048:	f043 0204 	orr.w	r2, r3, #4
 800504c:	68fb      	ldr	r3, [r7, #12]
 800504e:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005050:	68fb      	ldr	r3, [r7, #12]
 8005052:	2200      	movs	r2, #0
 8005054:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 8005058:	2301      	movs	r3, #1
 800505a:	e067      	b.n	800512c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005062:	d041      	beq.n	80050e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8005064:	f7fd fcfc 	bl	8002a60 <HAL_GetTick>
 8005068:	4602      	mov	r2, r0
 800506a:	683b      	ldr	r3, [r7, #0]
 800506c:	1ad3      	subs	r3, r2, r3
 800506e:	687a      	ldr	r2, [r7, #4]
 8005070:	429a      	cmp	r2, r3
 8005072:	d302      	bcc.n	800507a <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 8005074:	687b      	ldr	r3, [r7, #4]
 8005076:	2b00      	cmp	r3, #0
 8005078:	d136      	bne.n	80050e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET))
 800507a:	68bb      	ldr	r3, [r7, #8]
 800507c:	0c1b      	lsrs	r3, r3, #16
 800507e:	b2db      	uxtb	r3, r3
 8005080:	2b01      	cmp	r3, #1
 8005082:	d10c      	bne.n	800509e <I2C_WaitOnMasterAddressFlagUntilTimeout+0xaa>
 8005084:	68fb      	ldr	r3, [r7, #12]
 8005086:	681b      	ldr	r3, [r3, #0]
 8005088:	695b      	ldr	r3, [r3, #20]
 800508a:	43da      	mvns	r2, r3
 800508c:	68bb      	ldr	r3, [r7, #8]
 800508e:	4013      	ands	r3, r2
 8005090:	b29b      	uxth	r3, r3
 8005092:	2b00      	cmp	r3, #0
 8005094:	bf14      	ite	ne
 8005096:	2301      	movne	r3, #1
 8005098:	2300      	moveq	r3, #0
 800509a:	b2db      	uxtb	r3, r3
 800509c:	e00b      	b.n	80050b6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xc2>
 800509e:	68fb      	ldr	r3, [r7, #12]
 80050a0:	681b      	ldr	r3, [r3, #0]
 80050a2:	699b      	ldr	r3, [r3, #24]
 80050a4:	43da      	mvns	r2, r3
 80050a6:	68bb      	ldr	r3, [r7, #8]
 80050a8:	4013      	ands	r3, r2
 80050aa:	b29b      	uxth	r3, r3
 80050ac:	2b00      	cmp	r3, #0
 80050ae:	bf14      	ite	ne
 80050b0:	2301      	movne	r3, #1
 80050b2:	2300      	moveq	r3, #0
 80050b4:	b2db      	uxtb	r3, r3
 80050b6:	2b00      	cmp	r3, #0
 80050b8:	d016      	beq.n	80050e8 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf4>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 80050ba:	68fb      	ldr	r3, [r7, #12]
 80050bc:	2200      	movs	r2, #0
 80050be:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 80050c0:	68fb      	ldr	r3, [r7, #12]
 80050c2:	2220      	movs	r2, #32
 80050c4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 80050c8:	68fb      	ldr	r3, [r7, #12]
 80050ca:	2200      	movs	r2, #0
 80050cc:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80050d0:	68fb      	ldr	r3, [r7, #12]
 80050d2:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80050d4:	f043 0220 	orr.w	r2, r3, #32
 80050d8:	68fb      	ldr	r3, [r7, #12]
 80050da:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80050dc:	68fb      	ldr	r3, [r7, #12]
 80050de:	2200      	movs	r2, #0
 80050e0:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80050e4:	2301      	movs	r3, #1
 80050e6:	e021      	b.n	800512c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x138>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 80050e8:	68bb      	ldr	r3, [r7, #8]
 80050ea:	0c1b      	lsrs	r3, r3, #16
 80050ec:	b2db      	uxtb	r3, r3
 80050ee:	2b01      	cmp	r3, #1
 80050f0:	d10c      	bne.n	800510c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x118>
 80050f2:	68fb      	ldr	r3, [r7, #12]
 80050f4:	681b      	ldr	r3, [r3, #0]
 80050f6:	695b      	ldr	r3, [r3, #20]
 80050f8:	43da      	mvns	r2, r3
 80050fa:	68bb      	ldr	r3, [r7, #8]
 80050fc:	4013      	ands	r3, r2
 80050fe:	b29b      	uxth	r3, r3
 8005100:	2b00      	cmp	r3, #0
 8005102:	bf14      	ite	ne
 8005104:	2301      	movne	r3, #1
 8005106:	2300      	moveq	r3, #0
 8005108:	b2db      	uxtb	r3, r3
 800510a:	e00b      	b.n	8005124 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x130>
 800510c:	68fb      	ldr	r3, [r7, #12]
 800510e:	681b      	ldr	r3, [r3, #0]
 8005110:	699b      	ldr	r3, [r3, #24]
 8005112:	43da      	mvns	r2, r3
 8005114:	68bb      	ldr	r3, [r7, #8]
 8005116:	4013      	ands	r3, r2
 8005118:	b29b      	uxth	r3, r3
 800511a:	2b00      	cmp	r3, #0
 800511c:	bf14      	ite	ne
 800511e:	2301      	movne	r3, #1
 8005120:	2300      	moveq	r3, #0
 8005122:	b2db      	uxtb	r3, r3
 8005124:	2b00      	cmp	r3, #0
 8005126:	f47f af6d 	bne.w	8005004 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
        }
      }
    }
  }
  return HAL_OK;
 800512a:	2300      	movs	r3, #0
}
 800512c:	4618      	mov	r0, r3
 800512e:	3710      	adds	r7, #16
 8005130:	46bd      	mov	sp, r7
 8005132:	bd80      	pop	{r7, pc}

08005134 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005134:	b580      	push	{r7, lr}
 8005136:	b084      	sub	sp, #16
 8005138:	af00      	add	r7, sp, #0
 800513a:	60f8      	str	r0, [r7, #12]
 800513c:	60b9      	str	r1, [r7, #8]
 800513e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8005140:	e034      	b.n	80051ac <I2C_WaitOnTXEFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 8005142:	68f8      	ldr	r0, [r7, #12]
 8005144:	f000 f8e3 	bl	800530e <I2C_IsAcknowledgeFailed>
 8005148:	4603      	mov	r3, r0
 800514a:	2b00      	cmp	r3, #0
 800514c:	d001      	beq.n	8005152 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 800514e:	2301      	movs	r3, #1
 8005150:	e034      	b.n	80051bc <I2C_WaitOnTXEFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005152:	68bb      	ldr	r3, [r7, #8]
 8005154:	f1b3 3fff 	cmp.w	r3, #4294967295
 8005158:	d028      	beq.n	80051ac <I2C_WaitOnTXEFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800515a:	f7fd fc81 	bl	8002a60 <HAL_GetTick>
 800515e:	4602      	mov	r2, r0
 8005160:	687b      	ldr	r3, [r7, #4]
 8005162:	1ad3      	subs	r3, r2, r3
 8005164:	68ba      	ldr	r2, [r7, #8]
 8005166:	429a      	cmp	r2, r3
 8005168:	d302      	bcc.n	8005170 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 800516a:	68bb      	ldr	r3, [r7, #8]
 800516c:	2b00      	cmp	r3, #0
 800516e:	d11d      	bne.n	80051ac <I2C_WaitOnTXEFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET))
 8005170:	68fb      	ldr	r3, [r7, #12]
 8005172:	681b      	ldr	r3, [r3, #0]
 8005174:	695b      	ldr	r3, [r3, #20]
 8005176:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800517a:	2b80      	cmp	r3, #128	@ 0x80
 800517c:	d016      	beq.n	80051ac <I2C_WaitOnTXEFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800517e:	68fb      	ldr	r3, [r7, #12]
 8005180:	2200      	movs	r2, #0
 8005182:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005184:	68fb      	ldr	r3, [r7, #12]
 8005186:	2220      	movs	r2, #32
 8005188:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800518c:	68fb      	ldr	r3, [r7, #12]
 800518e:	2200      	movs	r2, #0
 8005190:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005194:	68fb      	ldr	r3, [r7, #12]
 8005196:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005198:	f043 0220 	orr.w	r2, r3, #32
 800519c:	68fb      	ldr	r3, [r7, #12]
 800519e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 80051a0:	68fb      	ldr	r3, [r7, #12]
 80051a2:	2200      	movs	r2, #0
 80051a4:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 80051a8:	2301      	movs	r3, #1
 80051aa:	e007      	b.n	80051bc <I2C_WaitOnTXEFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 80051ac:	68fb      	ldr	r3, [r7, #12]
 80051ae:	681b      	ldr	r3, [r3, #0]
 80051b0:	695b      	ldr	r3, [r3, #20]
 80051b2:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 80051b6:	2b80      	cmp	r3, #128	@ 0x80
 80051b8:	d1c3      	bne.n	8005142 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 80051ba:	2300      	movs	r3, #0
}
 80051bc:	4618      	mov	r0, r3
 80051be:	3710      	adds	r7, #16
 80051c0:	46bd      	mov	sp, r7
 80051c2:	bd80      	pop	{r7, pc}

080051c4 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 80051c4:	b580      	push	{r7, lr}
 80051c6:	b084      	sub	sp, #16
 80051c8:	af00      	add	r7, sp, #0
 80051ca:	60f8      	str	r0, [r7, #12]
 80051cc:	60b9      	str	r1, [r7, #8]
 80051ce:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 80051d0:	e034      	b.n	800523c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 80051d2:	68f8      	ldr	r0, [r7, #12]
 80051d4:	f000 f89b 	bl	800530e <I2C_IsAcknowledgeFailed>
 80051d8:	4603      	mov	r3, r0
 80051da:	2b00      	cmp	r3, #0
 80051dc:	d001      	beq.n	80051e2 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 80051de:	2301      	movs	r3, #1
 80051e0:	e034      	b.n	800524c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80051e2:	68bb      	ldr	r3, [r7, #8]
 80051e4:	f1b3 3fff 	cmp.w	r3, #4294967295
 80051e8:	d028      	beq.n	800523c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80051ea:	f7fd fc39 	bl	8002a60 <HAL_GetTick>
 80051ee:	4602      	mov	r2, r0
 80051f0:	687b      	ldr	r3, [r7, #4]
 80051f2:	1ad3      	subs	r3, r2, r3
 80051f4:	68ba      	ldr	r2, [r7, #8]
 80051f6:	429a      	cmp	r2, r3
 80051f8:	d302      	bcc.n	8005200 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 80051fa:	68bb      	ldr	r3, [r7, #8]
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d11d      	bne.n	800523c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET))
 8005200:	68fb      	ldr	r3, [r7, #12]
 8005202:	681b      	ldr	r3, [r3, #0]
 8005204:	695b      	ldr	r3, [r3, #20]
 8005206:	f003 0304 	and.w	r3, r3, #4
 800520a:	2b04      	cmp	r3, #4
 800520c:	d016      	beq.n	800523c <I2C_WaitOnBTFFlagUntilTimeout+0x78>
        {
          hi2c->PreviousState       = I2C_STATE_NONE;
 800520e:	68fb      	ldr	r3, [r7, #12]
 8005210:	2200      	movs	r2, #0
 8005212:	631a      	str	r2, [r3, #48]	@ 0x30
          hi2c->State               = HAL_I2C_STATE_READY;
 8005214:	68fb      	ldr	r3, [r7, #12]
 8005216:	2220      	movs	r2, #32
 8005218:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
          hi2c->Mode                = HAL_I2C_MODE_NONE;
 800521c:	68fb      	ldr	r3, [r7, #12]
 800521e:	2200      	movs	r2, #0
 8005220:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
          hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 8005224:	68fb      	ldr	r3, [r7, #12]
 8005226:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005228:	f043 0220 	orr.w	r2, r3, #32
 800522c:	68fb      	ldr	r3, [r7, #12]
 800522e:	641a      	str	r2, [r3, #64]	@ 0x40

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8005230:	68fb      	ldr	r3, [r7, #12]
 8005232:	2200      	movs	r2, #0
 8005234:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

          return HAL_ERROR;
 8005238:	2301      	movs	r3, #1
 800523a:	e007      	b.n	800524c <I2C_WaitOnBTFFlagUntilTimeout+0x88>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 800523c:	68fb      	ldr	r3, [r7, #12]
 800523e:	681b      	ldr	r3, [r3, #0]
 8005240:	695b      	ldr	r3, [r3, #20]
 8005242:	f003 0304 	and.w	r3, r3, #4
 8005246:	2b04      	cmp	r3, #4
 8005248:	d1c3      	bne.n	80051d2 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 800524a:	2300      	movs	r3, #0
}
 800524c:	4618      	mov	r0, r3
 800524e:	3710      	adds	r7, #16
 8005250:	46bd      	mov	sp, r7
 8005252:	bd80      	pop	{r7, pc}

08005254 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 8005254:	b580      	push	{r7, lr}
 8005256:	b084      	sub	sp, #16
 8005258:	af00      	add	r7, sp, #0
 800525a:	60f8      	str	r0, [r7, #12]
 800525c:	60b9      	str	r1, [r7, #8]
 800525e:	607a      	str	r2, [r7, #4]

  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 8005260:	e049      	b.n	80052f6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
  {
    /* Check if a STOPF is detected */
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET)
 8005262:	68fb      	ldr	r3, [r7, #12]
 8005264:	681b      	ldr	r3, [r3, #0]
 8005266:	695b      	ldr	r3, [r3, #20]
 8005268:	f003 0310 	and.w	r3, r3, #16
 800526c:	2b10      	cmp	r3, #16
 800526e:	d119      	bne.n	80052a4 <I2C_WaitOnRXNEFlagUntilTimeout+0x50>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8005270:	68fb      	ldr	r3, [r7, #12]
 8005272:	681b      	ldr	r3, [r3, #0]
 8005274:	f06f 0210 	mvn.w	r2, #16
 8005278:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 800527a:	68fb      	ldr	r3, [r7, #12]
 800527c:	2200      	movs	r2, #0
 800527e:	631a      	str	r2, [r3, #48]	@ 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 8005280:	68fb      	ldr	r3, [r7, #12]
 8005282:	2220      	movs	r2, #32
 8005284:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 8005288:	68fb      	ldr	r3, [r7, #12]
 800528a:	2200      	movs	r2, #0
 800528c:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_NONE;
 8005290:	68fb      	ldr	r3, [r7, #12]
 8005292:	6c1a      	ldr	r2, [r3, #64]	@ 0x40
 8005294:	68fb      	ldr	r3, [r7, #12]
 8005296:	641a      	str	r2, [r3, #64]	@ 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8005298:	68fb      	ldr	r3, [r7, #12]
 800529a:	2200      	movs	r2, #0
 800529c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

      return HAL_ERROR;
 80052a0:	2301      	movs	r3, #1
 80052a2:	e030      	b.n	8005306 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80052a4:	f7fd fbdc 	bl	8002a60 <HAL_GetTick>
 80052a8:	4602      	mov	r2, r0
 80052aa:	687b      	ldr	r3, [r7, #4]
 80052ac:	1ad3      	subs	r3, r2, r3
 80052ae:	68ba      	ldr	r2, [r7, #8]
 80052b0:	429a      	cmp	r2, r3
 80052b2:	d302      	bcc.n	80052ba <I2C_WaitOnRXNEFlagUntilTimeout+0x66>
 80052b4:	68bb      	ldr	r3, [r7, #8]
 80052b6:	2b00      	cmp	r3, #0
 80052b8:	d11d      	bne.n	80052f6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80052ba:	68fb      	ldr	r3, [r7, #12]
 80052bc:	681b      	ldr	r3, [r3, #0]
 80052be:	695b      	ldr	r3, [r3, #20]
 80052c0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80052c4:	2b40      	cmp	r3, #64	@ 0x40
 80052c6:	d016      	beq.n	80052f6 <I2C_WaitOnRXNEFlagUntilTimeout+0xa2>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 80052c8:	68fb      	ldr	r3, [r7, #12]
 80052ca:	2200      	movs	r2, #0
 80052cc:	631a      	str	r2, [r3, #48]	@ 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 80052ce:	68fb      	ldr	r3, [r7, #12]
 80052d0:	2220      	movs	r2, #32
 80052d2:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 80052d6:	68fb      	ldr	r3, [r7, #12]
 80052d8:	2200      	movs	r2, #0
 80052da:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 80052de:	68fb      	ldr	r3, [r7, #12]
 80052e0:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80052e2:	f043 0220 	orr.w	r2, r3, #32
 80052e6:	68fb      	ldr	r3, [r7, #12]
 80052e8:	641a      	str	r2, [r3, #64]	@ 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80052ea:	68fb      	ldr	r3, [r7, #12]
 80052ec:	2200      	movs	r2, #0
 80052ee:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

        return HAL_ERROR;
 80052f2:	2301      	movs	r3, #1
 80052f4:	e007      	b.n	8005306 <I2C_WaitOnRXNEFlagUntilTimeout+0xb2>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET)
 80052f6:	68fb      	ldr	r3, [r7, #12]
 80052f8:	681b      	ldr	r3, [r3, #0]
 80052fa:	695b      	ldr	r3, [r3, #20]
 80052fc:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8005300:	2b40      	cmp	r3, #64	@ 0x40
 8005302:	d1ae      	bne.n	8005262 <I2C_WaitOnRXNEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 8005304:	2300      	movs	r3, #0
}
 8005306:	4618      	mov	r0, r3
 8005308:	3710      	adds	r7, #16
 800530a:	46bd      	mov	sp, r7
 800530c:	bd80      	pop	{r7, pc}

0800530e <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 800530e:	b480      	push	{r7}
 8005310:	b083      	sub	sp, #12
 8005312:	af00      	add	r7, sp, #0
 8005314:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8005316:	687b      	ldr	r3, [r7, #4]
 8005318:	681b      	ldr	r3, [r3, #0]
 800531a:	695b      	ldr	r3, [r3, #20]
 800531c:	f403 6380 	and.w	r3, r3, #1024	@ 0x400
 8005320:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8005324:	d11b      	bne.n	800535e <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8005326:	687b      	ldr	r3, [r7, #4]
 8005328:	681b      	ldr	r3, [r3, #0]
 800532a:	f46f 6280 	mvn.w	r2, #1024	@ 0x400
 800532e:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 8005330:	687b      	ldr	r3, [r7, #4]
 8005332:	2200      	movs	r2, #0
 8005334:	631a      	str	r2, [r3, #48]	@ 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	2220      	movs	r2, #32
 800533a:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 800533e:	687b      	ldr	r3, [r7, #4]
 8005340:	2200      	movs	r2, #0
 8005342:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 8005346:	687b      	ldr	r3, [r7, #4]
 8005348:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800534a:	f043 0204 	orr.w	r2, r3, #4
 800534e:	687b      	ldr	r3, [r7, #4]
 8005350:	641a      	str	r2, [r3, #64]	@ 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	2200      	movs	r2, #0
 8005356:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

    return HAL_ERROR;
 800535a:	2301      	movs	r3, #1
 800535c:	e000      	b.n	8005360 <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 800535e:	2300      	movs	r3, #0
}
 8005360:	4618      	mov	r0, r3
 8005362:	370c      	adds	r7, #12
 8005364:	46bd      	mov	sp, r7
 8005366:	f85d 7b04 	ldr.w	r7, [sp], #4
 800536a:	4770      	bx	lr

0800536c <HAL_PWREx_EnableOverDrive>:
  *         During the Over-drive switch activation, no peripheral clocks should be enabled.   
  *         The peripheral clocks must be enabled once the Over-drive mode is activated.   
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_PWREx_EnableOverDrive(void)
{
 800536c:	b580      	push	{r7, lr}
 800536e:	b082      	sub	sp, #8
 8005370:	af00      	add	r7, sp, #0
  uint32_t tickstart = 0U;
 8005372:	2300      	movs	r3, #0
 8005374:	607b      	str	r3, [r7, #4]

  __HAL_RCC_PWR_CLK_ENABLE();
 8005376:	2300      	movs	r3, #0
 8005378:	603b      	str	r3, [r7, #0]
 800537a:	4b20      	ldr	r3, [pc, #128]	@ (80053fc <HAL_PWREx_EnableOverDrive+0x90>)
 800537c:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800537e:	4a1f      	ldr	r2, [pc, #124]	@ (80053fc <HAL_PWREx_EnableOverDrive+0x90>)
 8005380:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005384:	6413      	str	r3, [r2, #64]	@ 0x40
 8005386:	4b1d      	ldr	r3, [pc, #116]	@ (80053fc <HAL_PWREx_EnableOverDrive+0x90>)
 8005388:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 800538a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 800538e:	603b      	str	r3, [r7, #0]
 8005390:	683b      	ldr	r3, [r7, #0]
  
  /* Enable the Over-drive to extend the clock frequency to 180 Mhz */
  __HAL_PWR_OVERDRIVE_ENABLE();
 8005392:	4b1b      	ldr	r3, [pc, #108]	@ (8005400 <HAL_PWREx_EnableOverDrive+0x94>)
 8005394:	2201      	movs	r2, #1
 8005396:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 8005398:	f7fd fb62 	bl	8002a60 <HAL_GetTick>
 800539c:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 800539e:	e009      	b.n	80053b4 <HAL_PWREx_EnableOverDrive+0x48>
  {
    if((HAL_GetTick() - tickstart) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053a0:	f7fd fb5e 	bl	8002a60 <HAL_GetTick>
 80053a4:	4602      	mov	r2, r0
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	1ad3      	subs	r3, r2, r3
 80053aa:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80053ae:	d901      	bls.n	80053b4 <HAL_PWREx_EnableOverDrive+0x48>
    {
      return HAL_TIMEOUT;
 80053b0:	2303      	movs	r3, #3
 80053b2:	e01f      	b.n	80053f4 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODRDY))
 80053b4:	4b13      	ldr	r3, [pc, #76]	@ (8005404 <HAL_PWREx_EnableOverDrive+0x98>)
 80053b6:	685b      	ldr	r3, [r3, #4]
 80053b8:	f403 3380 	and.w	r3, r3, #65536	@ 0x10000
 80053bc:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 80053c0:	d1ee      	bne.n	80053a0 <HAL_PWREx_EnableOverDrive+0x34>
    }
  }
  
  /* Enable the Over-drive switch */
  __HAL_PWR_OVERDRIVESWITCHING_ENABLE();
 80053c2:	4b11      	ldr	r3, [pc, #68]	@ (8005408 <HAL_PWREx_EnableOverDrive+0x9c>)
 80053c4:	2201      	movs	r2, #1
 80053c6:	601a      	str	r2, [r3, #0]

  /* Get tick */
  tickstart = HAL_GetTick();
 80053c8:	f7fd fb4a 	bl	8002a60 <HAL_GetTick>
 80053cc:	6078      	str	r0, [r7, #4]

  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053ce:	e009      	b.n	80053e4 <HAL_PWREx_EnableOverDrive+0x78>
  {
    if((HAL_GetTick() - tickstart ) > PWR_OVERDRIVE_TIMEOUT_VALUE)
 80053d0:	f7fd fb46 	bl	8002a60 <HAL_GetTick>
 80053d4:	4602      	mov	r2, r0
 80053d6:	687b      	ldr	r3, [r7, #4]
 80053d8:	1ad3      	subs	r3, r2, r3
 80053da:	f5b3 7f7a 	cmp.w	r3, #1000	@ 0x3e8
 80053de:	d901      	bls.n	80053e4 <HAL_PWREx_EnableOverDrive+0x78>
    {
      return HAL_TIMEOUT;
 80053e0:	2303      	movs	r3, #3
 80053e2:	e007      	b.n	80053f4 <HAL_PWREx_EnableOverDrive+0x88>
  while(!__HAL_PWR_GET_FLAG(PWR_FLAG_ODSWRDY))
 80053e4:	4b07      	ldr	r3, [pc, #28]	@ (8005404 <HAL_PWREx_EnableOverDrive+0x98>)
 80053e6:	685b      	ldr	r3, [r3, #4]
 80053e8:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80053ec:	f5b3 3f00 	cmp.w	r3, #131072	@ 0x20000
 80053f0:	d1ee      	bne.n	80053d0 <HAL_PWREx_EnableOverDrive+0x64>
    }
  } 
  return HAL_OK;
 80053f2:	2300      	movs	r3, #0
}
 80053f4:	4618      	mov	r0, r3
 80053f6:	3708      	adds	r7, #8
 80053f8:	46bd      	mov	sp, r7
 80053fa:	bd80      	pop	{r7, pc}
 80053fc:	40023800 	.word	0x40023800
 8005400:	420e0040 	.word	0x420e0040
 8005404:	40007000 	.word	0x40007000
 8005408:	420e0044 	.word	0x420e0044

0800540c <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 800540c:	b580      	push	{r7, lr}
 800540e:	b084      	sub	sp, #16
 8005410:	af00      	add	r7, sp, #0
 8005412:	6078      	str	r0, [r7, #4]
 8005414:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if (RCC_ClkInitStruct == NULL)
 8005416:	687b      	ldr	r3, [r7, #4]
 8005418:	2b00      	cmp	r3, #0
 800541a:	d101      	bne.n	8005420 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 800541c:	2301      	movs	r3, #1
 800541e:	e0cc      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if (FLatency > __HAL_FLASH_GET_LATENCY())
 8005420:	4b68      	ldr	r3, [pc, #416]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 8005422:	681b      	ldr	r3, [r3, #0]
 8005424:	f003 030f 	and.w	r3, r3, #15
 8005428:	683a      	ldr	r2, [r7, #0]
 800542a:	429a      	cmp	r2, r3
 800542c:	d90c      	bls.n	8005448 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800542e:	4b65      	ldr	r3, [pc, #404]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 8005430:	683a      	ldr	r2, [r7, #0]
 8005432:	b2d2      	uxtb	r2, r2
 8005434:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005436:	4b63      	ldr	r3, [pc, #396]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 8005438:	681b      	ldr	r3, [r3, #0]
 800543a:	f003 030f 	and.w	r3, r3, #15
 800543e:	683a      	ldr	r2, [r7, #0]
 8005440:	429a      	cmp	r2, r3
 8005442:	d001      	beq.n	8005448 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 8005444:	2301      	movs	r3, #1
 8005446:	e0b8      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8005448:	687b      	ldr	r3, [r7, #4]
 800544a:	681b      	ldr	r3, [r3, #0]
 800544c:	f003 0302 	and.w	r3, r3, #2
 8005450:	2b00      	cmp	r3, #0
 8005452:	d020      	beq.n	8005496 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005454:	687b      	ldr	r3, [r7, #4]
 8005456:	681b      	ldr	r3, [r3, #0]
 8005458:	f003 0304 	and.w	r3, r3, #4
 800545c:	2b00      	cmp	r3, #0
 800545e:	d005      	beq.n	800546c <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 8005460:	4b59      	ldr	r3, [pc, #356]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005462:	689b      	ldr	r3, [r3, #8]
 8005464:	4a58      	ldr	r2, [pc, #352]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005466:	f443 53e0 	orr.w	r3, r3, #7168	@ 0x1c00
 800546a:	6093      	str	r3, [r2, #8]
    }

    if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800546c:	687b      	ldr	r3, [r7, #4]
 800546e:	681b      	ldr	r3, [r3, #0]
 8005470:	f003 0308 	and.w	r3, r3, #8
 8005474:	2b00      	cmp	r3, #0
 8005476:	d005      	beq.n	8005484 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 8005478:	4b53      	ldr	r3, [pc, #332]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800547a:	689b      	ldr	r3, [r3, #8]
 800547c:	4a52      	ldr	r2, [pc, #328]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800547e:	f443 4360 	orr.w	r3, r3, #57344	@ 0xe000
 8005482:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8005484:	4b50      	ldr	r3, [pc, #320]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005486:	689b      	ldr	r3, [r3, #8]
 8005488:	f023 02f0 	bic.w	r2, r3, #240	@ 0xf0
 800548c:	687b      	ldr	r3, [r7, #4]
 800548e:	689b      	ldr	r3, [r3, #8]
 8005490:	494d      	ldr	r1, [pc, #308]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005492:	4313      	orrs	r3, r2
 8005494:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8005496:	687b      	ldr	r3, [r7, #4]
 8005498:	681b      	ldr	r3, [r3, #0]
 800549a:	f003 0301 	and.w	r3, r3, #1
 800549e:	2b00      	cmp	r3, #0
 80054a0:	d044      	beq.n	800552c <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80054a2:	687b      	ldr	r3, [r7, #4]
 80054a4:	685b      	ldr	r3, [r3, #4]
 80054a6:	2b01      	cmp	r3, #1
 80054a8:	d107      	bne.n	80054ba <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 80054aa:	4b47      	ldr	r3, [pc, #284]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 80054ac:	681b      	ldr	r3, [r3, #0]
 80054ae:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 80054b2:	2b00      	cmp	r3, #0
 80054b4:	d119      	bne.n	80054ea <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054b6:	2301      	movs	r3, #1
 80054b8:	e07f      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054ba:	687b      	ldr	r3, [r7, #4]
 80054bc:	685b      	ldr	r3, [r3, #4]
 80054be:	2b02      	cmp	r3, #2
 80054c0:	d003      	beq.n	80054ca <HAL_RCC_ClockConfig+0xbe>
             (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 80054c2:	687b      	ldr	r3, [r7, #4]
 80054c4:	685b      	ldr	r3, [r3, #4]
    else if ((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 80054c6:	2b03      	cmp	r3, #3
 80054c8:	d107      	bne.n	80054da <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 80054ca:	4b3f      	ldr	r3, [pc, #252]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 80054cc:	681b      	ldr	r3, [r3, #0]
 80054ce:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80054d2:	2b00      	cmp	r3, #0
 80054d4:	d109      	bne.n	80054ea <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054d6:	2301      	movs	r3, #1
 80054d8:	e06f      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 80054da:	4b3b      	ldr	r3, [pc, #236]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 80054dc:	681b      	ldr	r3, [r3, #0]
 80054de:	f003 0302 	and.w	r3, r3, #2
 80054e2:	2b00      	cmp	r3, #0
 80054e4:	d101      	bne.n	80054ea <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 80054e6:	2301      	movs	r3, #1
 80054e8:	e067      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 80054ea:	4b37      	ldr	r3, [pc, #220]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 80054ec:	689b      	ldr	r3, [r3, #8]
 80054ee:	f023 0203 	bic.w	r2, r3, #3
 80054f2:	687b      	ldr	r3, [r7, #4]
 80054f4:	685b      	ldr	r3, [r3, #4]
 80054f6:	4934      	ldr	r1, [pc, #208]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 80054f8:	4313      	orrs	r3, r2
 80054fa:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80054fc:	f7fd fab0 	bl	8002a60 <HAL_GetTick>
 8005500:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 8005502:	e00a      	b.n	800551a <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8005504:	f7fd faac 	bl	8002a60 <HAL_GetTick>
 8005508:	4602      	mov	r2, r0
 800550a:	68fb      	ldr	r3, [r7, #12]
 800550c:	1ad3      	subs	r3, r2, r3
 800550e:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005512:	4293      	cmp	r3, r2
 8005514:	d901      	bls.n	800551a <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 8005516:	2303      	movs	r3, #3
 8005518:	e04f      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 800551a:	4b2b      	ldr	r3, [pc, #172]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800551c:	689b      	ldr	r3, [r3, #8]
 800551e:	f003 020c 	and.w	r2, r3, #12
 8005522:	687b      	ldr	r3, [r7, #4]
 8005524:	685b      	ldr	r3, [r3, #4]
 8005526:	009b      	lsls	r3, r3, #2
 8005528:	429a      	cmp	r2, r3
 800552a:	d1eb      	bne.n	8005504 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if (FLatency < __HAL_FLASH_GET_LATENCY())
 800552c:	4b25      	ldr	r3, [pc, #148]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 800552e:	681b      	ldr	r3, [r3, #0]
 8005530:	f003 030f 	and.w	r3, r3, #15
 8005534:	683a      	ldr	r2, [r7, #0]
 8005536:	429a      	cmp	r2, r3
 8005538:	d20c      	bcs.n	8005554 <HAL_RCC_ClockConfig+0x148>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800553a:	4b22      	ldr	r3, [pc, #136]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 800553c:	683a      	ldr	r2, [r7, #0]
 800553e:	b2d2      	uxtb	r2, r2
 8005540:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005542:	4b20      	ldr	r3, [pc, #128]	@ (80055c4 <HAL_RCC_ClockConfig+0x1b8>)
 8005544:	681b      	ldr	r3, [r3, #0]
 8005546:	f003 030f 	and.w	r3, r3, #15
 800554a:	683a      	ldr	r2, [r7, #0]
 800554c:	429a      	cmp	r2, r3
 800554e:	d001      	beq.n	8005554 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 8005550:	2301      	movs	r3, #1
 8005552:	e032      	b.n	80055ba <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005554:	687b      	ldr	r3, [r7, #4]
 8005556:	681b      	ldr	r3, [r3, #0]
 8005558:	f003 0304 	and.w	r3, r3, #4
 800555c:	2b00      	cmp	r3, #0
 800555e:	d008      	beq.n	8005572 <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8005560:	4b19      	ldr	r3, [pc, #100]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005562:	689b      	ldr	r3, [r3, #8]
 8005564:	f423 52e0 	bic.w	r2, r3, #7168	@ 0x1c00
 8005568:	687b      	ldr	r3, [r7, #4]
 800556a:	68db      	ldr	r3, [r3, #12]
 800556c:	4916      	ldr	r1, [pc, #88]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800556e:	4313      	orrs	r3, r2
 8005570:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if (((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005572:	687b      	ldr	r3, [r7, #4]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	f003 0308 	and.w	r3, r3, #8
 800557a:	2b00      	cmp	r3, #0
 800557c:	d009      	beq.n	8005592 <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 800557e:	4b12      	ldr	r3, [pc, #72]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 8005580:	689b      	ldr	r3, [r3, #8]
 8005582:	f423 4260 	bic.w	r2, r3, #57344	@ 0xe000
 8005586:	687b      	ldr	r3, [r7, #4]
 8005588:	691b      	ldr	r3, [r3, #16]
 800558a:	00db      	lsls	r3, r3, #3
 800558c:	490e      	ldr	r1, [pc, #56]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800558e:	4313      	orrs	r3, r2
 8005590:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos];
 8005592:	f000 f841 	bl	8005618 <HAL_RCC_GetSysClockFreq>
 8005596:	4602      	mov	r2, r0
 8005598:	4b0b      	ldr	r3, [pc, #44]	@ (80055c8 <HAL_RCC_ClockConfig+0x1bc>)
 800559a:	689b      	ldr	r3, [r3, #8]
 800559c:	091b      	lsrs	r3, r3, #4
 800559e:	f003 030f 	and.w	r3, r3, #15
 80055a2:	490a      	ldr	r1, [pc, #40]	@ (80055cc <HAL_RCC_ClockConfig+0x1c0>)
 80055a4:	5ccb      	ldrb	r3, [r1, r3]
 80055a6:	fa22 f303 	lsr.w	r3, r2, r3
 80055aa:	4a09      	ldr	r2, [pc, #36]	@ (80055d0 <HAL_RCC_ClockConfig+0x1c4>)
 80055ac:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick(uwTickPrio);
 80055ae:	4b09      	ldr	r3, [pc, #36]	@ (80055d4 <HAL_RCC_ClockConfig+0x1c8>)
 80055b0:	681b      	ldr	r3, [r3, #0]
 80055b2:	4618      	mov	r0, r3
 80055b4:	f7fd fa10 	bl	80029d8 <HAL_InitTick>

  return HAL_OK;
 80055b8:	2300      	movs	r3, #0
}
 80055ba:	4618      	mov	r0, r3
 80055bc:	3710      	adds	r7, #16
 80055be:	46bd      	mov	sp, r7
 80055c0:	bd80      	pop	{r7, pc}
 80055c2:	bf00      	nop
 80055c4:	40023c00 	.word	0x40023c00
 80055c8:	40023800 	.word	0x40023800
 80055cc:	080281b8 	.word	0x080281b8
 80055d0:	20000014 	.word	0x20000014
 80055d4:	20000020 	.word	0x20000020

080055d8 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80055d8:	b480      	push	{r7}
 80055da:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80055dc:	4b03      	ldr	r3, [pc, #12]	@ (80055ec <HAL_RCC_GetHCLKFreq+0x14>)
 80055de:	681b      	ldr	r3, [r3, #0]
}
 80055e0:	4618      	mov	r0, r3
 80055e2:	46bd      	mov	sp, r7
 80055e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80055e8:	4770      	bx	lr
 80055ea:	bf00      	nop
 80055ec:	20000014 	.word	0x20000014

080055f0 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80055f0:	b580      	push	{r7, lr}
 80055f2:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80055f4:	f7ff fff0 	bl	80055d8 <HAL_RCC_GetHCLKFreq>
 80055f8:	4602      	mov	r2, r0
 80055fa:	4b05      	ldr	r3, [pc, #20]	@ (8005610 <HAL_RCC_GetPCLK1Freq+0x20>)
 80055fc:	689b      	ldr	r3, [r3, #8]
 80055fe:	0a9b      	lsrs	r3, r3, #10
 8005600:	f003 0307 	and.w	r3, r3, #7
 8005604:	4903      	ldr	r1, [pc, #12]	@ (8005614 <HAL_RCC_GetPCLK1Freq+0x24>)
 8005606:	5ccb      	ldrb	r3, [r1, r3]
 8005608:	fa22 f303 	lsr.w	r3, r2, r3
}
 800560c:	4618      	mov	r0, r3
 800560e:	bd80      	pop	{r7, pc}
 8005610:	40023800 	.word	0x40023800
 8005614:	080281c8 	.word	0x080281c8

08005618 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 8005618:	e92d 4fb0 	stmdb	sp!, {r4, r5, r7, r8, r9, sl, fp, lr}
 800561c:	b0ae      	sub	sp, #184	@ 0xb8
 800561e:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U;
 8005620:	2300      	movs	r3, #0
 8005622:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
  uint32_t pllvco = 0U;
 8005626:	2300      	movs	r3, #0
 8005628:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
  uint32_t pllp = 0U;
 800562c:	2300      	movs	r3, #0
 800562e:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8
  uint32_t pllr = 0U;
 8005632:	2300      	movs	r3, #0
 8005634:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4
  uint32_t sysclockfreq = 0U;
 8005638:	2300      	movs	r3, #0
 800563a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 800563e:	4bcb      	ldr	r3, [pc, #812]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 8005640:	689b      	ldr	r3, [r3, #8]
 8005642:	f003 030c 	and.w	r3, r3, #12
 8005646:	2b0c      	cmp	r3, #12
 8005648:	f200 8206 	bhi.w	8005a58 <HAL_RCC_GetSysClockFreq+0x440>
 800564c:	a201      	add	r2, pc, #4	@ (adr r2, 8005654 <HAL_RCC_GetSysClockFreq+0x3c>)
 800564e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005652:	bf00      	nop
 8005654:	08005689 	.word	0x08005689
 8005658:	08005a59 	.word	0x08005a59
 800565c:	08005a59 	.word	0x08005a59
 8005660:	08005a59 	.word	0x08005a59
 8005664:	08005691 	.word	0x08005691
 8005668:	08005a59 	.word	0x08005a59
 800566c:	08005a59 	.word	0x08005a59
 8005670:	08005a59 	.word	0x08005a59
 8005674:	08005699 	.word	0x08005699
 8005678:	08005a59 	.word	0x08005a59
 800567c:	08005a59 	.word	0x08005a59
 8005680:	08005a59 	.word	0x08005a59
 8005684:	08005889 	.word	0x08005889
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 8005688:	4bb9      	ldr	r3, [pc, #740]	@ (8005970 <HAL_RCC_GetSysClockFreq+0x358>)
 800568a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 800568e:	e1e7      	b.n	8005a60 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 8005690:	4bb8      	ldr	r3, [pc, #736]	@ (8005974 <HAL_RCC_GetSysClockFreq+0x35c>)
 8005692:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005696:	e1e3      	b.n	8005a60 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL/PLLP used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005698:	4bb4      	ldr	r3, [pc, #720]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 800569a:	685b      	ldr	r3, [r3, #4]
 800569c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 80056a0:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 80056a4:	4bb1      	ldr	r3, [pc, #708]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 80056a6:	685b      	ldr	r3, [r3, #4]
 80056a8:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 80056ac:	2b00      	cmp	r3, #0
 80056ae:	d071      	beq.n	8005794 <HAL_RCC_GetSysClockFreq+0x17c>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80056b0:	4bae      	ldr	r3, [pc, #696]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 80056b2:	685b      	ldr	r3, [r3, #4]
 80056b4:	099b      	lsrs	r3, r3, #6
 80056b6:	2200      	movs	r2, #0
 80056b8:	f8c7 3098 	str.w	r3, [r7, #152]	@ 0x98
 80056bc:	f8c7 209c 	str.w	r2, [r7, #156]	@ 0x9c
 80056c0:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 80056c4:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80056c8:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 80056cc:	2300      	movs	r3, #0
 80056ce:	f8c7 3094 	str.w	r3, [r7, #148]	@ 0x94
 80056d2:	e9d7 4524 	ldrd	r4, r5, [r7, #144]	@ 0x90
 80056d6:	4622      	mov	r2, r4
 80056d8:	462b      	mov	r3, r5
 80056da:	f04f 0000 	mov.w	r0, #0
 80056de:	f04f 0100 	mov.w	r1, #0
 80056e2:	0159      	lsls	r1, r3, #5
 80056e4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80056e8:	0150      	lsls	r0, r2, #5
 80056ea:	4602      	mov	r2, r0
 80056ec:	460b      	mov	r3, r1
 80056ee:	4621      	mov	r1, r4
 80056f0:	1a51      	subs	r1, r2, r1
 80056f2:	6439      	str	r1, [r7, #64]	@ 0x40
 80056f4:	4629      	mov	r1, r5
 80056f6:	eb63 0301 	sbc.w	r3, r3, r1
 80056fa:	647b      	str	r3, [r7, #68]	@ 0x44
 80056fc:	f04f 0200 	mov.w	r2, #0
 8005700:	f04f 0300 	mov.w	r3, #0
 8005704:	e9d7 8910 	ldrd	r8, r9, [r7, #64]	@ 0x40
 8005708:	4649      	mov	r1, r9
 800570a:	018b      	lsls	r3, r1, #6
 800570c:	4641      	mov	r1, r8
 800570e:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 8005712:	4641      	mov	r1, r8
 8005714:	018a      	lsls	r2, r1, #6
 8005716:	4641      	mov	r1, r8
 8005718:	1a51      	subs	r1, r2, r1
 800571a:	63b9      	str	r1, [r7, #56]	@ 0x38
 800571c:	4649      	mov	r1, r9
 800571e:	eb63 0301 	sbc.w	r3, r3, r1
 8005722:	63fb      	str	r3, [r7, #60]	@ 0x3c
 8005724:	f04f 0200 	mov.w	r2, #0
 8005728:	f04f 0300 	mov.w	r3, #0
 800572c:	e9d7 890e 	ldrd	r8, r9, [r7, #56]	@ 0x38
 8005730:	4649      	mov	r1, r9
 8005732:	00cb      	lsls	r3, r1, #3
 8005734:	4641      	mov	r1, r8
 8005736:	ea43 7351 	orr.w	r3, r3, r1, lsr #29
 800573a:	4641      	mov	r1, r8
 800573c:	00ca      	lsls	r2, r1, #3
 800573e:	4610      	mov	r0, r2
 8005740:	4619      	mov	r1, r3
 8005742:	4603      	mov	r3, r0
 8005744:	4622      	mov	r2, r4
 8005746:	189b      	adds	r3, r3, r2
 8005748:	633b      	str	r3, [r7, #48]	@ 0x30
 800574a:	462b      	mov	r3, r5
 800574c:	460a      	mov	r2, r1
 800574e:	eb42 0303 	adc.w	r3, r2, r3
 8005752:	637b      	str	r3, [r7, #52]	@ 0x34
 8005754:	f04f 0200 	mov.w	r2, #0
 8005758:	f04f 0300 	mov.w	r3, #0
 800575c:	e9d7 450c 	ldrd	r4, r5, [r7, #48]	@ 0x30
 8005760:	4629      	mov	r1, r5
 8005762:	024b      	lsls	r3, r1, #9
 8005764:	4621      	mov	r1, r4
 8005766:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 800576a:	4621      	mov	r1, r4
 800576c:	024a      	lsls	r2, r1, #9
 800576e:	4610      	mov	r0, r2
 8005770:	4619      	mov	r1, r3
 8005772:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005776:	2200      	movs	r2, #0
 8005778:	f8c7 3088 	str.w	r3, [r7, #136]	@ 0x88
 800577c:	f8c7 208c 	str.w	r2, [r7, #140]	@ 0x8c
 8005780:	e9d7 2322 	ldrd	r2, r3, [r7, #136]	@ 0x88
 8005784:	f7fb fa3a 	bl	8000bfc <__aeabi_uldivmod>
 8005788:	4602      	mov	r2, r0
 800578a:	460b      	mov	r3, r1
 800578c:	4613      	mov	r3, r2
 800578e:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 8005792:	e067      	b.n	8005864 <HAL_RCC_GetSysClockFreq+0x24c>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005794:	4b75      	ldr	r3, [pc, #468]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 8005796:	685b      	ldr	r3, [r3, #4]
 8005798:	099b      	lsrs	r3, r3, #6
 800579a:	2200      	movs	r2, #0
 800579c:	f8c7 3080 	str.w	r3, [r7, #128]	@ 0x80
 80057a0:	f8c7 2084 	str.w	r2, [r7, #132]	@ 0x84
 80057a4:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 80057a8:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80057ac:	67bb      	str	r3, [r7, #120]	@ 0x78
 80057ae:	2300      	movs	r3, #0
 80057b0:	67fb      	str	r3, [r7, #124]	@ 0x7c
 80057b2:	e9d7 451e 	ldrd	r4, r5, [r7, #120]	@ 0x78
 80057b6:	4622      	mov	r2, r4
 80057b8:	462b      	mov	r3, r5
 80057ba:	f04f 0000 	mov.w	r0, #0
 80057be:	f04f 0100 	mov.w	r1, #0
 80057c2:	0159      	lsls	r1, r3, #5
 80057c4:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80057c8:	0150      	lsls	r0, r2, #5
 80057ca:	4602      	mov	r2, r0
 80057cc:	460b      	mov	r3, r1
 80057ce:	4621      	mov	r1, r4
 80057d0:	1a51      	subs	r1, r2, r1
 80057d2:	62b9      	str	r1, [r7, #40]	@ 0x28
 80057d4:	4629      	mov	r1, r5
 80057d6:	eb63 0301 	sbc.w	r3, r3, r1
 80057da:	62fb      	str	r3, [r7, #44]	@ 0x2c
 80057dc:	f04f 0200 	mov.w	r2, #0
 80057e0:	f04f 0300 	mov.w	r3, #0
 80057e4:	e9d7 890a 	ldrd	r8, r9, [r7, #40]	@ 0x28
 80057e8:	4649      	mov	r1, r9
 80057ea:	018b      	lsls	r3, r1, #6
 80057ec:	4641      	mov	r1, r8
 80057ee:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80057f2:	4641      	mov	r1, r8
 80057f4:	018a      	lsls	r2, r1, #6
 80057f6:	4641      	mov	r1, r8
 80057f8:	ebb2 0a01 	subs.w	sl, r2, r1
 80057fc:	4649      	mov	r1, r9
 80057fe:	eb63 0b01 	sbc.w	fp, r3, r1
 8005802:	f04f 0200 	mov.w	r2, #0
 8005806:	f04f 0300 	mov.w	r3, #0
 800580a:	ea4f 03cb 	mov.w	r3, fp, lsl #3
 800580e:	ea43 735a 	orr.w	r3, r3, sl, lsr #29
 8005812:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 8005816:	4692      	mov	sl, r2
 8005818:	469b      	mov	fp, r3
 800581a:	4623      	mov	r3, r4
 800581c:	eb1a 0303 	adds.w	r3, sl, r3
 8005820:	623b      	str	r3, [r7, #32]
 8005822:	462b      	mov	r3, r5
 8005824:	eb4b 0303 	adc.w	r3, fp, r3
 8005828:	627b      	str	r3, [r7, #36]	@ 0x24
 800582a:	f04f 0200 	mov.w	r2, #0
 800582e:	f04f 0300 	mov.w	r3, #0
 8005832:	e9d7 4508 	ldrd	r4, r5, [r7, #32]
 8005836:	4629      	mov	r1, r5
 8005838:	028b      	lsls	r3, r1, #10
 800583a:	4621      	mov	r1, r4
 800583c:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005840:	4621      	mov	r1, r4
 8005842:	028a      	lsls	r2, r1, #10
 8005844:	4610      	mov	r0, r2
 8005846:	4619      	mov	r1, r3
 8005848:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800584c:	2200      	movs	r2, #0
 800584e:	673b      	str	r3, [r7, #112]	@ 0x70
 8005850:	677a      	str	r2, [r7, #116]	@ 0x74
 8005852:	e9d7 231c 	ldrd	r2, r3, [r7, #112]	@ 0x70
 8005856:	f7fb f9d1 	bl	8000bfc <__aeabi_uldivmod>
 800585a:	4602      	mov	r2, r0
 800585c:	460b      	mov	r3, r1
 800585e:	4613      	mov	r3, r2
 8005860:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) * 2U);
 8005864:	4b41      	ldr	r3, [pc, #260]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 8005866:	685b      	ldr	r3, [r3, #4]
 8005868:	0c1b      	lsrs	r3, r3, #16
 800586a:	f003 0303 	and.w	r3, r3, #3
 800586e:	3301      	adds	r3, #1
 8005870:	005b      	lsls	r3, r3, #1
 8005872:	f8c7 30a8 	str.w	r3, [r7, #168]	@ 0xa8

      sysclockfreq = pllvco / pllp;
 8005876:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 800587a:	f8d7 30a8 	ldr.w	r3, [r7, #168]	@ 0xa8
 800587e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005882:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005886:	e0eb      	b.n	8005a60 <HAL_RCC_GetSysClockFreq+0x448>
    }
    case RCC_CFGR_SWS_PLLR:  /* PLL/PLLR used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLR */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 8005888:	4b38      	ldr	r3, [pc, #224]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 800588a:	685b      	ldr	r3, [r3, #4]
 800588c:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8005890:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005894:	4b35      	ldr	r3, [pc, #212]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 8005896:	685b      	ldr	r3, [r3, #4]
 8005898:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 800589c:	2b00      	cmp	r3, #0
 800589e:	d06b      	beq.n	8005978 <HAL_RCC_GetSysClockFreq+0x360>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSE_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 80058a0:	4b32      	ldr	r3, [pc, #200]	@ (800596c <HAL_RCC_GetSysClockFreq+0x354>)
 80058a2:	685b      	ldr	r3, [r3, #4]
 80058a4:	099b      	lsrs	r3, r3, #6
 80058a6:	2200      	movs	r2, #0
 80058a8:	66bb      	str	r3, [r7, #104]	@ 0x68
 80058aa:	66fa      	str	r2, [r7, #108]	@ 0x6c
 80058ac:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 80058ae:	f3c3 0308 	ubfx	r3, r3, #0, #9
 80058b2:	663b      	str	r3, [r7, #96]	@ 0x60
 80058b4:	2300      	movs	r3, #0
 80058b6:	667b      	str	r3, [r7, #100]	@ 0x64
 80058b8:	e9d7 4518 	ldrd	r4, r5, [r7, #96]	@ 0x60
 80058bc:	4622      	mov	r2, r4
 80058be:	462b      	mov	r3, r5
 80058c0:	f04f 0000 	mov.w	r0, #0
 80058c4:	f04f 0100 	mov.w	r1, #0
 80058c8:	0159      	lsls	r1, r3, #5
 80058ca:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80058ce:	0150      	lsls	r0, r2, #5
 80058d0:	4602      	mov	r2, r0
 80058d2:	460b      	mov	r3, r1
 80058d4:	4621      	mov	r1, r4
 80058d6:	1a51      	subs	r1, r2, r1
 80058d8:	61b9      	str	r1, [r7, #24]
 80058da:	4629      	mov	r1, r5
 80058dc:	eb63 0301 	sbc.w	r3, r3, r1
 80058e0:	61fb      	str	r3, [r7, #28]
 80058e2:	f04f 0200 	mov.w	r2, #0
 80058e6:	f04f 0300 	mov.w	r3, #0
 80058ea:	e9d7 ab06 	ldrd	sl, fp, [r7, #24]
 80058ee:	4659      	mov	r1, fp
 80058f0:	018b      	lsls	r3, r1, #6
 80058f2:	4651      	mov	r1, sl
 80058f4:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80058f8:	4651      	mov	r1, sl
 80058fa:	018a      	lsls	r2, r1, #6
 80058fc:	4651      	mov	r1, sl
 80058fe:	ebb2 0801 	subs.w	r8, r2, r1
 8005902:	4659      	mov	r1, fp
 8005904:	eb63 0901 	sbc.w	r9, r3, r1
 8005908:	f04f 0200 	mov.w	r2, #0
 800590c:	f04f 0300 	mov.w	r3, #0
 8005910:	ea4f 03c9 	mov.w	r3, r9, lsl #3
 8005914:	ea43 7358 	orr.w	r3, r3, r8, lsr #29
 8005918:	ea4f 02c8 	mov.w	r2, r8, lsl #3
 800591c:	4690      	mov	r8, r2
 800591e:	4699      	mov	r9, r3
 8005920:	4623      	mov	r3, r4
 8005922:	eb18 0303 	adds.w	r3, r8, r3
 8005926:	613b      	str	r3, [r7, #16]
 8005928:	462b      	mov	r3, r5
 800592a:	eb49 0303 	adc.w	r3, r9, r3
 800592e:	617b      	str	r3, [r7, #20]
 8005930:	f04f 0200 	mov.w	r2, #0
 8005934:	f04f 0300 	mov.w	r3, #0
 8005938:	e9d7 4504 	ldrd	r4, r5, [r7, #16]
 800593c:	4629      	mov	r1, r5
 800593e:	024b      	lsls	r3, r1, #9
 8005940:	4621      	mov	r1, r4
 8005942:	ea43 53d1 	orr.w	r3, r3, r1, lsr #23
 8005946:	4621      	mov	r1, r4
 8005948:	024a      	lsls	r2, r1, #9
 800594a:	4610      	mov	r0, r2
 800594c:	4619      	mov	r1, r3
 800594e:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005952:	2200      	movs	r2, #0
 8005954:	65bb      	str	r3, [r7, #88]	@ 0x58
 8005956:	65fa      	str	r2, [r7, #92]	@ 0x5c
 8005958:	e9d7 2316 	ldrd	r2, r3, [r7, #88]	@ 0x58
 800595c:	f7fb f94e 	bl	8000bfc <__aeabi_uldivmod>
 8005960:	4602      	mov	r2, r0
 8005962:	460b      	mov	r3, r1
 8005964:	4613      	mov	r3, r2
 8005966:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
 800596a:	e065      	b.n	8005a38 <HAL_RCC_GetSysClockFreq+0x420>
 800596c:	40023800 	.word	0x40023800
 8005970:	00f42400 	.word	0x00f42400
 8005974:	007a1200 	.word	0x007a1200
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t)((((uint64_t) HSI_VALUE * ((uint64_t)((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 8005978:	4b3d      	ldr	r3, [pc, #244]	@ (8005a70 <HAL_RCC_GetSysClockFreq+0x458>)
 800597a:	685b      	ldr	r3, [r3, #4]
 800597c:	099b      	lsrs	r3, r3, #6
 800597e:	2200      	movs	r2, #0
 8005980:	4618      	mov	r0, r3
 8005982:	4611      	mov	r1, r2
 8005984:	f3c0 0308 	ubfx	r3, r0, #0, #9
 8005988:	653b      	str	r3, [r7, #80]	@ 0x50
 800598a:	2300      	movs	r3, #0
 800598c:	657b      	str	r3, [r7, #84]	@ 0x54
 800598e:	e9d7 8914 	ldrd	r8, r9, [r7, #80]	@ 0x50
 8005992:	4642      	mov	r2, r8
 8005994:	464b      	mov	r3, r9
 8005996:	f04f 0000 	mov.w	r0, #0
 800599a:	f04f 0100 	mov.w	r1, #0
 800599e:	0159      	lsls	r1, r3, #5
 80059a0:	ea41 61d2 	orr.w	r1, r1, r2, lsr #27
 80059a4:	0150      	lsls	r0, r2, #5
 80059a6:	4602      	mov	r2, r0
 80059a8:	460b      	mov	r3, r1
 80059aa:	4641      	mov	r1, r8
 80059ac:	1a51      	subs	r1, r2, r1
 80059ae:	60b9      	str	r1, [r7, #8]
 80059b0:	4649      	mov	r1, r9
 80059b2:	eb63 0301 	sbc.w	r3, r3, r1
 80059b6:	60fb      	str	r3, [r7, #12]
 80059b8:	f04f 0200 	mov.w	r2, #0
 80059bc:	f04f 0300 	mov.w	r3, #0
 80059c0:	e9d7 ab02 	ldrd	sl, fp, [r7, #8]
 80059c4:	4659      	mov	r1, fp
 80059c6:	018b      	lsls	r3, r1, #6
 80059c8:	4651      	mov	r1, sl
 80059ca:	ea43 6391 	orr.w	r3, r3, r1, lsr #26
 80059ce:	4651      	mov	r1, sl
 80059d0:	018a      	lsls	r2, r1, #6
 80059d2:	4651      	mov	r1, sl
 80059d4:	1a54      	subs	r4, r2, r1
 80059d6:	4659      	mov	r1, fp
 80059d8:	eb63 0501 	sbc.w	r5, r3, r1
 80059dc:	f04f 0200 	mov.w	r2, #0
 80059e0:	f04f 0300 	mov.w	r3, #0
 80059e4:	00eb      	lsls	r3, r5, #3
 80059e6:	ea43 7354 	orr.w	r3, r3, r4, lsr #29
 80059ea:	00e2      	lsls	r2, r4, #3
 80059ec:	4614      	mov	r4, r2
 80059ee:	461d      	mov	r5, r3
 80059f0:	4643      	mov	r3, r8
 80059f2:	18e3      	adds	r3, r4, r3
 80059f4:	603b      	str	r3, [r7, #0]
 80059f6:	464b      	mov	r3, r9
 80059f8:	eb45 0303 	adc.w	r3, r5, r3
 80059fc:	607b      	str	r3, [r7, #4]
 80059fe:	f04f 0200 	mov.w	r2, #0
 8005a02:	f04f 0300 	mov.w	r3, #0
 8005a06:	e9d7 4500 	ldrd	r4, r5, [r7]
 8005a0a:	4629      	mov	r1, r5
 8005a0c:	028b      	lsls	r3, r1, #10
 8005a0e:	4621      	mov	r1, r4
 8005a10:	ea43 5391 	orr.w	r3, r3, r1, lsr #22
 8005a14:	4621      	mov	r1, r4
 8005a16:	028a      	lsls	r2, r1, #10
 8005a18:	4610      	mov	r0, r2
 8005a1a:	4619      	mov	r1, r3
 8005a1c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 8005a20:	2200      	movs	r2, #0
 8005a22:	64bb      	str	r3, [r7, #72]	@ 0x48
 8005a24:	64fa      	str	r2, [r7, #76]	@ 0x4c
 8005a26:	e9d7 2312 	ldrd	r2, r3, [r7, #72]	@ 0x48
 8005a2a:	f7fb f8e7 	bl	8000bfc <__aeabi_uldivmod>
 8005a2e:	4602      	mov	r2, r0
 8005a30:	460b      	mov	r3, r1
 8005a32:	4613      	mov	r3, r2
 8005a34:	f8c7 30b4 	str.w	r3, [r7, #180]	@ 0xb4
      }
      pllr = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos);
 8005a38:	4b0d      	ldr	r3, [pc, #52]	@ (8005a70 <HAL_RCC_GetSysClockFreq+0x458>)
 8005a3a:	685b      	ldr	r3, [r3, #4]
 8005a3c:	0f1b      	lsrs	r3, r3, #28
 8005a3e:	f003 0307 	and.w	r3, r3, #7
 8005a42:	f8c7 30a4 	str.w	r3, [r7, #164]	@ 0xa4

      sysclockfreq = pllvco / pllr;
 8005a46:	f8d7 20b4 	ldr.w	r2, [r7, #180]	@ 0xb4
 8005a4a:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 8005a4e:	fbb2 f3f3 	udiv	r3, r2, r3
 8005a52:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a56:	e003      	b.n	8005a60 <HAL_RCC_GetSysClockFreq+0x448>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 8005a58:	4b06      	ldr	r3, [pc, #24]	@ (8005a74 <HAL_RCC_GetSysClockFreq+0x45c>)
 8005a5a:	f8c7 30b0 	str.w	r3, [r7, #176]	@ 0xb0
      break;
 8005a5e:	bf00      	nop
    }
  }
  return sysclockfreq;
 8005a60:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
}
 8005a64:	4618      	mov	r0, r3
 8005a66:	37b8      	adds	r7, #184	@ 0xb8
 8005a68:	46bd      	mov	sp, r7
 8005a6a:	e8bd 8fb0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, sl, fp, pc}
 8005a6e:	bf00      	nop
 8005a70:	40023800 	.word	0x40023800
 8005a74:	00f42400 	.word	0x00f42400

08005a78 <HAL_RCC_OscConfig>:
  * @note   This function add the PLL/PLLR factor management during PLL configuration this feature
  *         is only available in STM32F410xx/STM32F446xx/STM32F469xx/STM32F479xx/STM32F412Zx/STM32F412Vx/STM32F412Rx/STM32F412Cx devices
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8005a78:	b580      	push	{r7, lr}
 8005a7a:	b086      	sub	sp, #24
 8005a7c:	af00      	add	r7, sp, #0
 8005a7e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t pll_config;

  /* Check Null pointer */
  if (RCC_OscInitStruct == NULL)
 8005a80:	687b      	ldr	r3, [r7, #4]
 8005a82:	2b00      	cmp	r3, #0
 8005a84:	d101      	bne.n	8005a8a <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 8005a86:	2301      	movs	r3, #1
 8005a88:	e28d      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8005a8a:	687b      	ldr	r3, [r7, #4]
 8005a8c:	681b      	ldr	r3, [r3, #0]
 8005a8e:	f003 0301 	and.w	r3, r3, #1
 8005a92:	2b00      	cmp	r3, #0
 8005a94:	f000 8083 	beq.w	8005b9e <HAL_RCC_OscConfig+0x126>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
 8005a98:	4b94      	ldr	r3, [pc, #592]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005a9a:	689b      	ldr	r3, [r3, #8]
 8005a9c:	f003 030c 	and.w	r3, r3, #12
 8005aa0:	2b04      	cmp	r3, #4
 8005aa2:	d019      	beq.n	8005ad8 <HAL_RCC_OscConfig+0x60>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005aa4:	4b91      	ldr	r3, [pc, #580]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005aa6:	689b      	ldr	r3, [r3, #8]
 8005aa8:	f003 030c 	and.w	r3, r3, #12
        || \
 8005aac:	2b08      	cmp	r3, #8
 8005aae:	d106      	bne.n	8005abe <HAL_RCC_OscConfig+0x46>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005ab0:	4b8e      	ldr	r3, [pc, #568]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005ab2:	685b      	ldr	r3, [r3, #4]
 8005ab4:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005ab8:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005abc:	d00c      	beq.n	8005ad8 <HAL_RCC_OscConfig+0x60>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005abe:	4b8b      	ldr	r3, [pc, #556]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005ac0:	689b      	ldr	r3, [r3, #8]
 8005ac2:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)) || \
 8005ac6:	2b0c      	cmp	r3, #12
 8005ac8:	d112      	bne.n	8005af0 <HAL_RCC_OscConfig+0x78>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 8005aca:	4b88      	ldr	r3, [pc, #544]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005acc:	685b      	ldr	r3, [r3, #4]
 8005ace:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005ad2:	f5b3 0f80 	cmp.w	r3, #4194304	@ 0x400000
 8005ad6:	d10b      	bne.n	8005af0 <HAL_RCC_OscConfig+0x78>
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE)
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
#endif /* STM32F446xx */
    {
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005ad8:	4b84      	ldr	r3, [pc, #528]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005ada:	681b      	ldr	r3, [r3, #0]
 8005adc:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005ae0:	2b00      	cmp	r3, #0
 8005ae2:	d05b      	beq.n	8005b9c <HAL_RCC_OscConfig+0x124>
 8005ae4:	687b      	ldr	r3, [r7, #4]
 8005ae6:	685b      	ldr	r3, [r3, #4]
 8005ae8:	2b00      	cmp	r3, #0
 8005aea:	d157      	bne.n	8005b9c <HAL_RCC_OscConfig+0x124>
      {
        return HAL_ERROR;
 8005aec:	2301      	movs	r3, #1
 8005aee:	e25a      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8005af0:	687b      	ldr	r3, [r7, #4]
 8005af2:	685b      	ldr	r3, [r3, #4]
 8005af4:	f5b3 3f80 	cmp.w	r3, #65536	@ 0x10000
 8005af8:	d106      	bne.n	8005b08 <HAL_RCC_OscConfig+0x90>
 8005afa:	4b7c      	ldr	r3, [pc, #496]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005afc:	681b      	ldr	r3, [r3, #0]
 8005afe:	4a7b      	ldr	r2, [pc, #492]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b00:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005b04:	6013      	str	r3, [r2, #0]
 8005b06:	e01d      	b.n	8005b44 <HAL_RCC_OscConfig+0xcc>
 8005b08:	687b      	ldr	r3, [r7, #4]
 8005b0a:	685b      	ldr	r3, [r3, #4]
 8005b0c:	f5b3 2fa0 	cmp.w	r3, #327680	@ 0x50000
 8005b10:	d10c      	bne.n	8005b2c <HAL_RCC_OscConfig+0xb4>
 8005b12:	4b76      	ldr	r3, [pc, #472]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b14:	681b      	ldr	r3, [r3, #0]
 8005b16:	4a75      	ldr	r2, [pc, #468]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b18:	f443 2380 	orr.w	r3, r3, #262144	@ 0x40000
 8005b1c:	6013      	str	r3, [r2, #0]
 8005b1e:	4b73      	ldr	r3, [pc, #460]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b20:	681b      	ldr	r3, [r3, #0]
 8005b22:	4a72      	ldr	r2, [pc, #456]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b24:	f443 3380 	orr.w	r3, r3, #65536	@ 0x10000
 8005b28:	6013      	str	r3, [r2, #0]
 8005b2a:	e00b      	b.n	8005b44 <HAL_RCC_OscConfig+0xcc>
 8005b2c:	4b6f      	ldr	r3, [pc, #444]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b2e:	681b      	ldr	r3, [r3, #0]
 8005b30:	4a6e      	ldr	r2, [pc, #440]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b32:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8005b36:	6013      	str	r3, [r2, #0]
 8005b38:	4b6c      	ldr	r3, [pc, #432]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b3a:	681b      	ldr	r3, [r3, #0]
 8005b3c:	4a6b      	ldr	r2, [pc, #428]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b3e:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 8005b42:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if ((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 8005b44:	687b      	ldr	r3, [r7, #4]
 8005b46:	685b      	ldr	r3, [r3, #4]
 8005b48:	2b00      	cmp	r3, #0
 8005b4a:	d013      	beq.n	8005b74 <HAL_RCC_OscConfig+0xfc>
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b4c:	f7fc ff88 	bl	8002a60 <HAL_GetTick>
 8005b50:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b52:	e008      	b.n	8005b66 <HAL_RCC_OscConfig+0xee>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b54:	f7fc ff84 	bl	8002a60 <HAL_GetTick>
 8005b58:	4602      	mov	r2, r0
 8005b5a:	693b      	ldr	r3, [r7, #16]
 8005b5c:	1ad3      	subs	r3, r2, r3
 8005b5e:	2b64      	cmp	r3, #100	@ 0x64
 8005b60:	d901      	bls.n	8005b66 <HAL_RCC_OscConfig+0xee>
          {
            return HAL_TIMEOUT;
 8005b62:	2303      	movs	r3, #3
 8005b64:	e21f      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 8005b66:	4b61      	ldr	r3, [pc, #388]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b68:	681b      	ldr	r3, [r3, #0]
 8005b6a:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b6e:	2b00      	cmp	r3, #0
 8005b70:	d0f0      	beq.n	8005b54 <HAL_RCC_OscConfig+0xdc>
 8005b72:	e014      	b.n	8005b9e <HAL_RCC_OscConfig+0x126>
        }
      }
      else
      {
        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005b74:	f7fc ff74 	bl	8002a60 <HAL_GetTick>
 8005b78:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b7a:	e008      	b.n	8005b8e <HAL_RCC_OscConfig+0x116>
        {
          if ((HAL_GetTick() - tickstart) > HSE_TIMEOUT_VALUE)
 8005b7c:	f7fc ff70 	bl	8002a60 <HAL_GetTick>
 8005b80:	4602      	mov	r2, r0
 8005b82:	693b      	ldr	r3, [r7, #16]
 8005b84:	1ad3      	subs	r3, r2, r3
 8005b86:	2b64      	cmp	r3, #100	@ 0x64
 8005b88:	d901      	bls.n	8005b8e <HAL_RCC_OscConfig+0x116>
          {
            return HAL_TIMEOUT;
 8005b8a:	2303      	movs	r3, #3
 8005b8c:	e20b      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 8005b8e:	4b57      	ldr	r3, [pc, #348]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005b90:	681b      	ldr	r3, [r3, #0]
 8005b92:	f403 3300 	and.w	r3, r3, #131072	@ 0x20000
 8005b96:	2b00      	cmp	r3, #0
 8005b98:	d1f0      	bne.n	8005b7c <HAL_RCC_OscConfig+0x104>
 8005b9a:	e000      	b.n	8005b9e <HAL_RCC_OscConfig+0x126>
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8005b9c:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8005b9e:	687b      	ldr	r3, [r7, #4]
 8005ba0:	681b      	ldr	r3, [r3, #0]
 8005ba2:	f003 0302 	and.w	r3, r3, #2
 8005ba6:	2b00      	cmp	r3, #0
 8005ba8:	d06f      	beq.n	8005c8a <HAL_RCC_OscConfig+0x212>
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
#if defined(STM32F446xx)
    if ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI)
 8005baa:	4b50      	ldr	r3, [pc, #320]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005bac:	689b      	ldr	r3, [r3, #8]
 8005bae:	f003 030c 	and.w	r3, r3, #12
 8005bb2:	2b00      	cmp	r3, #0
 8005bb4:	d017      	beq.n	8005be6 <HAL_RCC_OscConfig+0x16e>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005bb6:	4b4d      	ldr	r3, [pc, #308]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005bb8:	689b      	ldr	r3, [r3, #8]
 8005bba:	f003 030c 	and.w	r3, r3, #12
        || \
 8005bbe:	2b08      	cmp	r3, #8
 8005bc0:	d105      	bne.n	8005bce <HAL_RCC_OscConfig+0x156>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005bc2:	4b4a      	ldr	r3, [pc, #296]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005bc4:	685b      	ldr	r3, [r3, #4]
 8005bc6:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005bca:	2b00      	cmp	r3, #0
 8005bcc:	d00b      	beq.n	8005be6 <HAL_RCC_OscConfig+0x16e>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bce:	4b47      	ldr	r3, [pc, #284]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005bd0:	689b      	ldr	r3, [r3, #8]
 8005bd2:	f003 030c 	and.w	r3, r3, #12
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)) || \
 8005bd6:	2b0c      	cmp	r3, #12
 8005bd8:	d11c      	bne.n	8005c14 <HAL_RCC_OscConfig+0x19c>
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLLR) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 8005bda:	4b44      	ldr	r3, [pc, #272]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005bdc:	685b      	ldr	r3, [r3, #4]
 8005bde:	f403 0380 	and.w	r3, r3, #4194304	@ 0x400000
 8005be2:	2b00      	cmp	r3, #0
 8005be4:	d116      	bne.n	8005c14 <HAL_RCC_OscConfig+0x19c>
        || \
        ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
#endif /* STM32F446xx */
    {
      /* When HSI is used as system clock it will not disabled */
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005be6:	4b41      	ldr	r3, [pc, #260]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005be8:	681b      	ldr	r3, [r3, #0]
 8005bea:	f003 0302 	and.w	r3, r3, #2
 8005bee:	2b00      	cmp	r3, #0
 8005bf0:	d005      	beq.n	8005bfe <HAL_RCC_OscConfig+0x186>
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	68db      	ldr	r3, [r3, #12]
 8005bf6:	2b01      	cmp	r3, #1
 8005bf8:	d001      	beq.n	8005bfe <HAL_RCC_OscConfig+0x186>
      {
        return HAL_ERROR;
 8005bfa:	2301      	movs	r3, #1
 8005bfc:	e1d3      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005bfe:	4b3b      	ldr	r3, [pc, #236]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c00:	681b      	ldr	r3, [r3, #0]
 8005c02:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	691b      	ldr	r3, [r3, #16]
 8005c0a:	00db      	lsls	r3, r3, #3
 8005c0c:	4937      	ldr	r1, [pc, #220]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c0e:	4313      	orrs	r3, r2
 8005c10:	600b      	str	r3, [r1, #0]
      if ((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 8005c12:	e03a      	b.n	8005c8a <HAL_RCC_OscConfig+0x212>
      }
    }
    else
    {
      /* Check the HSI State */
      if ((RCC_OscInitStruct->HSIState) != RCC_HSI_OFF)
 8005c14:	687b      	ldr	r3, [r7, #4]
 8005c16:	68db      	ldr	r3, [r3, #12]
 8005c18:	2b00      	cmp	r3, #0
 8005c1a:	d020      	beq.n	8005c5e <HAL_RCC_OscConfig+0x1e6>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 8005c1c:	4b34      	ldr	r3, [pc, #208]	@ (8005cf0 <HAL_RCC_OscConfig+0x278>)
 8005c1e:	2201      	movs	r2, #1
 8005c20:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c22:	f7fc ff1d 	bl	8002a60 <HAL_GetTick>
 8005c26:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c28:	e008      	b.n	8005c3c <HAL_RCC_OscConfig+0x1c4>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c2a:	f7fc ff19 	bl	8002a60 <HAL_GetTick>
 8005c2e:	4602      	mov	r2, r0
 8005c30:	693b      	ldr	r3, [r7, #16]
 8005c32:	1ad3      	subs	r3, r2, r3
 8005c34:	2b02      	cmp	r3, #2
 8005c36:	d901      	bls.n	8005c3c <HAL_RCC_OscConfig+0x1c4>
          {
            return HAL_TIMEOUT;
 8005c38:	2303      	movs	r3, #3
 8005c3a:	e1b4      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 8005c3c:	4b2b      	ldr	r3, [pc, #172]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c3e:	681b      	ldr	r3, [r3, #0]
 8005c40:	f003 0302 	and.w	r3, r3, #2
 8005c44:	2b00      	cmp	r3, #0
 8005c46:	d0f0      	beq.n	8005c2a <HAL_RCC_OscConfig+0x1b2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8005c48:	4b28      	ldr	r3, [pc, #160]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c4a:	681b      	ldr	r3, [r3, #0]
 8005c4c:	f023 02f8 	bic.w	r2, r3, #248	@ 0xf8
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	691b      	ldr	r3, [r3, #16]
 8005c54:	00db      	lsls	r3, r3, #3
 8005c56:	4925      	ldr	r1, [pc, #148]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c58:	4313      	orrs	r3, r2
 8005c5a:	600b      	str	r3, [r1, #0]
 8005c5c:	e015      	b.n	8005c8a <HAL_RCC_OscConfig+0x212>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8005c5e:	4b24      	ldr	r3, [pc, #144]	@ (8005cf0 <HAL_RCC_OscConfig+0x278>)
 8005c60:	2200      	movs	r2, #0
 8005c62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005c64:	f7fc fefc 	bl	8002a60 <HAL_GetTick>
 8005c68:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c6a:	e008      	b.n	8005c7e <HAL_RCC_OscConfig+0x206>
        {
          if ((HAL_GetTick() - tickstart) > HSI_TIMEOUT_VALUE)
 8005c6c:	f7fc fef8 	bl	8002a60 <HAL_GetTick>
 8005c70:	4602      	mov	r2, r0
 8005c72:	693b      	ldr	r3, [r7, #16]
 8005c74:	1ad3      	subs	r3, r2, r3
 8005c76:	2b02      	cmp	r3, #2
 8005c78:	d901      	bls.n	8005c7e <HAL_RCC_OscConfig+0x206>
          {
            return HAL_TIMEOUT;
 8005c7a:	2303      	movs	r3, #3
 8005c7c:	e193      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 8005c7e:	4b1b      	ldr	r3, [pc, #108]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005c80:	681b      	ldr	r3, [r3, #0]
 8005c82:	f003 0302 	and.w	r3, r3, #2
 8005c86:	2b00      	cmp	r3, #0
 8005c88:	d1f0      	bne.n	8005c6c <HAL_RCC_OscConfig+0x1f4>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8005c8a:	687b      	ldr	r3, [r7, #4]
 8005c8c:	681b      	ldr	r3, [r3, #0]
 8005c8e:	f003 0308 	and.w	r3, r3, #8
 8005c92:	2b00      	cmp	r3, #0
 8005c94:	d036      	beq.n	8005d04 <HAL_RCC_OscConfig+0x28c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if ((RCC_OscInitStruct->LSIState) != RCC_LSI_OFF)
 8005c96:	687b      	ldr	r3, [r7, #4]
 8005c98:	695b      	ldr	r3, [r3, #20]
 8005c9a:	2b00      	cmp	r3, #0
 8005c9c:	d016      	beq.n	8005ccc <HAL_RCC_OscConfig+0x254>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8005c9e:	4b15      	ldr	r3, [pc, #84]	@ (8005cf4 <HAL_RCC_OscConfig+0x27c>)
 8005ca0:	2201      	movs	r2, #1
 8005ca2:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005ca4:	f7fc fedc 	bl	8002a60 <HAL_GetTick>
 8005ca8:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005caa:	e008      	b.n	8005cbe <HAL_RCC_OscConfig+0x246>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005cac:	f7fc fed8 	bl	8002a60 <HAL_GetTick>
 8005cb0:	4602      	mov	r2, r0
 8005cb2:	693b      	ldr	r3, [r7, #16]
 8005cb4:	1ad3      	subs	r3, r2, r3
 8005cb6:	2b02      	cmp	r3, #2
 8005cb8:	d901      	bls.n	8005cbe <HAL_RCC_OscConfig+0x246>
        {
          return HAL_TIMEOUT;
 8005cba:	2303      	movs	r3, #3
 8005cbc:	e173      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 8005cbe:	4b0b      	ldr	r3, [pc, #44]	@ (8005cec <HAL_RCC_OscConfig+0x274>)
 8005cc0:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005cc2:	f003 0302 	and.w	r3, r3, #2
 8005cc6:	2b00      	cmp	r3, #0
 8005cc8:	d0f0      	beq.n	8005cac <HAL_RCC_OscConfig+0x234>
 8005cca:	e01b      	b.n	8005d04 <HAL_RCC_OscConfig+0x28c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8005ccc:	4b09      	ldr	r3, [pc, #36]	@ (8005cf4 <HAL_RCC_OscConfig+0x27c>)
 8005cce:	2200      	movs	r2, #0
 8005cd0:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005cd2:	f7fc fec5 	bl	8002a60 <HAL_GetTick>
 8005cd6:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005cd8:	e00e      	b.n	8005cf8 <HAL_RCC_OscConfig+0x280>
      {
        if ((HAL_GetTick() - tickstart) > LSI_TIMEOUT_VALUE)
 8005cda:	f7fc fec1 	bl	8002a60 <HAL_GetTick>
 8005cde:	4602      	mov	r2, r0
 8005ce0:	693b      	ldr	r3, [r7, #16]
 8005ce2:	1ad3      	subs	r3, r2, r3
 8005ce4:	2b02      	cmp	r3, #2
 8005ce6:	d907      	bls.n	8005cf8 <HAL_RCC_OscConfig+0x280>
        {
          return HAL_TIMEOUT;
 8005ce8:	2303      	movs	r3, #3
 8005cea:	e15c      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
 8005cec:	40023800 	.word	0x40023800
 8005cf0:	42470000 	.word	0x42470000
 8005cf4:	42470e80 	.word	0x42470e80
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 8005cf8:	4b8a      	ldr	r3, [pc, #552]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005cfa:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8005cfc:	f003 0302 	and.w	r3, r3, #2
 8005d00:	2b00      	cmp	r3, #0
 8005d02:	d1ea      	bne.n	8005cda <HAL_RCC_OscConfig+0x262>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if (((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8005d04:	687b      	ldr	r3, [r7, #4]
 8005d06:	681b      	ldr	r3, [r3, #0]
 8005d08:	f003 0304 	and.w	r3, r3, #4
 8005d0c:	2b00      	cmp	r3, #0
 8005d0e:	f000 8097 	beq.w	8005e40 <HAL_RCC_OscConfig+0x3c8>
  {
    FlagStatus       pwrclkchanged = RESET;
 8005d12:	2300      	movs	r3, #0
 8005d14:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if (__HAL_RCC_PWR_IS_CLK_DISABLED())
 8005d16:	4b83      	ldr	r3, [pc, #524]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d18:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d1a:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d1e:	2b00      	cmp	r3, #0
 8005d20:	d10f      	bne.n	8005d42 <HAL_RCC_OscConfig+0x2ca>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8005d22:	2300      	movs	r3, #0
 8005d24:	60bb      	str	r3, [r7, #8]
 8005d26:	4b7f      	ldr	r3, [pc, #508]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d28:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d2a:	4a7e      	ldr	r2, [pc, #504]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d2c:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 8005d30:	6413      	str	r3, [r2, #64]	@ 0x40
 8005d32:	4b7c      	ldr	r3, [pc, #496]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d34:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005d36:	f003 5380 	and.w	r3, r3, #268435456	@ 0x10000000
 8005d3a:	60bb      	str	r3, [r7, #8]
 8005d3c:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 8005d3e:	2301      	movs	r3, #1
 8005d40:	75fb      	strb	r3, [r7, #23]
    }

    if (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d42:	4b79      	ldr	r3, [pc, #484]	@ (8005f28 <HAL_RCC_OscConfig+0x4b0>)
 8005d44:	681b      	ldr	r3, [r3, #0]
 8005d46:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d4a:	2b00      	cmp	r3, #0
 8005d4c:	d118      	bne.n	8005d80 <HAL_RCC_OscConfig+0x308>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8005d4e:	4b76      	ldr	r3, [pc, #472]	@ (8005f28 <HAL_RCC_OscConfig+0x4b0>)
 8005d50:	681b      	ldr	r3, [r3, #0]
 8005d52:	4a75      	ldr	r2, [pc, #468]	@ (8005f28 <HAL_RCC_OscConfig+0x4b0>)
 8005d54:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 8005d58:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8005d5a:	f7fc fe81 	bl	8002a60 <HAL_GetTick>
 8005d5e:	6138      	str	r0, [r7, #16]

      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d60:	e008      	b.n	8005d74 <HAL_RCC_OscConfig+0x2fc>
      {
        if ((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005d62:	f7fc fe7d 	bl	8002a60 <HAL_GetTick>
 8005d66:	4602      	mov	r2, r0
 8005d68:	693b      	ldr	r3, [r7, #16]
 8005d6a:	1ad3      	subs	r3, r2, r3
 8005d6c:	2b02      	cmp	r3, #2
 8005d6e:	d901      	bls.n	8005d74 <HAL_RCC_OscConfig+0x2fc>
        {
          return HAL_TIMEOUT;
 8005d70:	2303      	movs	r3, #3
 8005d72:	e118      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      while (HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005d74:	4b6c      	ldr	r3, [pc, #432]	@ (8005f28 <HAL_RCC_OscConfig+0x4b0>)
 8005d76:	681b      	ldr	r3, [r3, #0]
 8005d78:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8005d7c:	2b00      	cmp	r3, #0
 8005d7e:	d0f0      	beq.n	8005d62 <HAL_RCC_OscConfig+0x2ea>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8005d80:	687b      	ldr	r3, [r7, #4]
 8005d82:	689b      	ldr	r3, [r3, #8]
 8005d84:	2b01      	cmp	r3, #1
 8005d86:	d106      	bne.n	8005d96 <HAL_RCC_OscConfig+0x31e>
 8005d88:	4b66      	ldr	r3, [pc, #408]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d8a:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005d8c:	4a65      	ldr	r2, [pc, #404]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005d8e:	f043 0301 	orr.w	r3, r3, #1
 8005d92:	6713      	str	r3, [r2, #112]	@ 0x70
 8005d94:	e01c      	b.n	8005dd0 <HAL_RCC_OscConfig+0x358>
 8005d96:	687b      	ldr	r3, [r7, #4]
 8005d98:	689b      	ldr	r3, [r3, #8]
 8005d9a:	2b05      	cmp	r3, #5
 8005d9c:	d10c      	bne.n	8005db8 <HAL_RCC_OscConfig+0x340>
 8005d9e:	4b61      	ldr	r3, [pc, #388]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005da0:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005da2:	4a60      	ldr	r2, [pc, #384]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005da4:	f043 0304 	orr.w	r3, r3, #4
 8005da8:	6713      	str	r3, [r2, #112]	@ 0x70
 8005daa:	4b5e      	ldr	r3, [pc, #376]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005dac:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005dae:	4a5d      	ldr	r2, [pc, #372]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005db0:	f043 0301 	orr.w	r3, r3, #1
 8005db4:	6713      	str	r3, [r2, #112]	@ 0x70
 8005db6:	e00b      	b.n	8005dd0 <HAL_RCC_OscConfig+0x358>
 8005db8:	4b5a      	ldr	r3, [pc, #360]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005dba:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005dbc:	4a59      	ldr	r2, [pc, #356]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005dbe:	f023 0301 	bic.w	r3, r3, #1
 8005dc2:	6713      	str	r3, [r2, #112]	@ 0x70
 8005dc4:	4b57      	ldr	r3, [pc, #348]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005dc6:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005dc8:	4a56      	ldr	r2, [pc, #344]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005dca:	f023 0304 	bic.w	r3, r3, #4
 8005dce:	6713      	str	r3, [r2, #112]	@ 0x70
    /* Check the LSE State */
    if ((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 8005dd0:	687b      	ldr	r3, [r7, #4]
 8005dd2:	689b      	ldr	r3, [r3, #8]
 8005dd4:	2b00      	cmp	r3, #0
 8005dd6:	d015      	beq.n	8005e04 <HAL_RCC_OscConfig+0x38c>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005dd8:	f7fc fe42 	bl	8002a60 <HAL_GetTick>
 8005ddc:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005dde:	e00a      	b.n	8005df6 <HAL_RCC_OscConfig+0x37e>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005de0:	f7fc fe3e 	bl	8002a60 <HAL_GetTick>
 8005de4:	4602      	mov	r2, r0
 8005de6:	693b      	ldr	r3, [r7, #16]
 8005de8:	1ad3      	subs	r3, r2, r3
 8005dea:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005dee:	4293      	cmp	r3, r2
 8005df0:	d901      	bls.n	8005df6 <HAL_RCC_OscConfig+0x37e>
        {
          return HAL_TIMEOUT;
 8005df2:	2303      	movs	r3, #3
 8005df4:	e0d7      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 8005df6:	4b4b      	ldr	r3, [pc, #300]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005df8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005dfa:	f003 0302 	and.w	r3, r3, #2
 8005dfe:	2b00      	cmp	r3, #0
 8005e00:	d0ee      	beq.n	8005de0 <HAL_RCC_OscConfig+0x368>
 8005e02:	e014      	b.n	8005e2e <HAL_RCC_OscConfig+0x3b6>
      }
    }
    else
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 8005e04:	f7fc fe2c 	bl	8002a60 <HAL_GetTick>
 8005e08:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e0a:	e00a      	b.n	8005e22 <HAL_RCC_OscConfig+0x3aa>
      {
        if ((HAL_GetTick() - tickstart) > RCC_LSE_TIMEOUT_VALUE)
 8005e0c:	f7fc fe28 	bl	8002a60 <HAL_GetTick>
 8005e10:	4602      	mov	r2, r0
 8005e12:	693b      	ldr	r3, [r7, #16]
 8005e14:	1ad3      	subs	r3, r2, r3
 8005e16:	f241 3288 	movw	r2, #5000	@ 0x1388
 8005e1a:	4293      	cmp	r3, r2
 8005e1c:	d901      	bls.n	8005e22 <HAL_RCC_OscConfig+0x3aa>
        {
          return HAL_TIMEOUT;
 8005e1e:	2303      	movs	r3, #3
 8005e20:	e0c1      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
      while (__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 8005e22:	4b40      	ldr	r3, [pc, #256]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005e24:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8005e26:	f003 0302 	and.w	r3, r3, #2
 8005e2a:	2b00      	cmp	r3, #0
 8005e2c:	d1ee      	bne.n	8005e0c <HAL_RCC_OscConfig+0x394>
        }
      }
    }

    /* Restore clock configuration if changed */
    if (pwrclkchanged == SET)
 8005e2e:	7dfb      	ldrb	r3, [r7, #23]
 8005e30:	2b01      	cmp	r3, #1
 8005e32:	d105      	bne.n	8005e40 <HAL_RCC_OscConfig+0x3c8>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005e34:	4b3b      	ldr	r3, [pc, #236]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005e36:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8005e38:	4a3a      	ldr	r2, [pc, #232]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005e3a:	f023 5380 	bic.w	r3, r3, #268435456	@ 0x10000000
 8005e3e:	6413      	str	r3, [r2, #64]	@ 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8005e40:	687b      	ldr	r3, [r7, #4]
 8005e42:	699b      	ldr	r3, [r3, #24]
 8005e44:	2b00      	cmp	r3, #0
 8005e46:	f000 80ad 	beq.w	8005fa4 <HAL_RCC_OscConfig+0x52c>
  {
    /* Check if the PLL is used as system clock or not */
    if (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 8005e4a:	4b36      	ldr	r3, [pc, #216]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005e4c:	689b      	ldr	r3, [r3, #8]
 8005e4e:	f003 030c 	and.w	r3, r3, #12
 8005e52:	2b08      	cmp	r3, #8
 8005e54:	d060      	beq.n	8005f18 <HAL_RCC_OscConfig+0x4a0>
    {
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8005e56:	687b      	ldr	r3, [r7, #4]
 8005e58:	699b      	ldr	r3, [r3, #24]
 8005e5a:	2b02      	cmp	r3, #2
 8005e5c:	d145      	bne.n	8005eea <HAL_RCC_OscConfig+0x472>
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));
        assert_param(IS_RCC_PLLR_VALUE(RCC_OscInitStruct->PLL.PLLR));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005e5e:	4b33      	ldr	r3, [pc, #204]	@ (8005f2c <HAL_RCC_OscConfig+0x4b4>)
 8005e60:	2200      	movs	r2, #0
 8005e62:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005e64:	f7fc fdfc 	bl	8002a60 <HAL_GetTick>
 8005e68:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e6a:	e008      	b.n	8005e7e <HAL_RCC_OscConfig+0x406>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005e6c:	f7fc fdf8 	bl	8002a60 <HAL_GetTick>
 8005e70:	4602      	mov	r2, r0
 8005e72:	693b      	ldr	r3, [r7, #16]
 8005e74:	1ad3      	subs	r3, r2, r3
 8005e76:	2b02      	cmp	r3, #2
 8005e78:	d901      	bls.n	8005e7e <HAL_RCC_OscConfig+0x406>
          {
            return HAL_TIMEOUT;
 8005e7a:	2303      	movs	r3, #3
 8005e7c:	e093      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005e7e:	4b29      	ldr	r3, [pc, #164]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005e80:	681b      	ldr	r3, [r3, #0]
 8005e82:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005e86:	2b00      	cmp	r3, #0
 8005e88:	d1f0      	bne.n	8005e6c <HAL_RCC_OscConfig+0x3f4>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 8005e8a:	687b      	ldr	r3, [r7, #4]
 8005e8c:	69da      	ldr	r2, [r3, #28]
 8005e8e:	687b      	ldr	r3, [r7, #4]
 8005e90:	6a1b      	ldr	r3, [r3, #32]
 8005e92:	431a      	orrs	r2, r3
 8005e94:	687b      	ldr	r3, [r7, #4]
 8005e96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005e98:	019b      	lsls	r3, r3, #6
 8005e9a:	431a      	orrs	r2, r3
 8005e9c:	687b      	ldr	r3, [r7, #4]
 8005e9e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005ea0:	085b      	lsrs	r3, r3, #1
 8005ea2:	3b01      	subs	r3, #1
 8005ea4:	041b      	lsls	r3, r3, #16
 8005ea6:	431a      	orrs	r2, r3
 8005ea8:	687b      	ldr	r3, [r7, #4]
 8005eaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005eac:	061b      	lsls	r3, r3, #24
 8005eae:	431a      	orrs	r2, r3
 8005eb0:	687b      	ldr	r3, [r7, #4]
 8005eb2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005eb4:	071b      	lsls	r3, r3, #28
 8005eb6:	491b      	ldr	r1, [pc, #108]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005eb8:	4313      	orrs	r3, r2
 8005eba:	604b      	str	r3, [r1, #4]
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)                       | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos)        | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)                       | \
                                 (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8005ebc:	4b1b      	ldr	r3, [pc, #108]	@ (8005f2c <HAL_RCC_OscConfig+0x4b4>)
 8005ebe:	2201      	movs	r2, #1
 8005ec0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ec2:	f7fc fdcd 	bl	8002a60 <HAL_GetTick>
 8005ec6:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005ec8:	e008      	b.n	8005edc <HAL_RCC_OscConfig+0x464>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005eca:	f7fc fdc9 	bl	8002a60 <HAL_GetTick>
 8005ece:	4602      	mov	r2, r0
 8005ed0:	693b      	ldr	r3, [r7, #16]
 8005ed2:	1ad3      	subs	r3, r2, r3
 8005ed4:	2b02      	cmp	r3, #2
 8005ed6:	d901      	bls.n	8005edc <HAL_RCC_OscConfig+0x464>
          {
            return HAL_TIMEOUT;
 8005ed8:	2303      	movs	r3, #3
 8005eda:	e064      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 8005edc:	4b11      	ldr	r3, [pc, #68]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005ede:	681b      	ldr	r3, [r3, #0]
 8005ee0:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005ee4:	2b00      	cmp	r3, #0
 8005ee6:	d0f0      	beq.n	8005eca <HAL_RCC_OscConfig+0x452>
 8005ee8:	e05c      	b.n	8005fa4 <HAL_RCC_OscConfig+0x52c>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8005eea:	4b10      	ldr	r3, [pc, #64]	@ (8005f2c <HAL_RCC_OscConfig+0x4b4>)
 8005eec:	2200      	movs	r2, #0
 8005eee:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 8005ef0:	f7fc fdb6 	bl	8002a60 <HAL_GetTick>
 8005ef4:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005ef6:	e008      	b.n	8005f0a <HAL_RCC_OscConfig+0x492>
        {
          if ((HAL_GetTick() - tickstart) > PLL_TIMEOUT_VALUE)
 8005ef8:	f7fc fdb2 	bl	8002a60 <HAL_GetTick>
 8005efc:	4602      	mov	r2, r0
 8005efe:	693b      	ldr	r3, [r7, #16]
 8005f00:	1ad3      	subs	r3, r2, r3
 8005f02:	2b02      	cmp	r3, #2
 8005f04:	d901      	bls.n	8005f0a <HAL_RCC_OscConfig+0x492>
          {
            return HAL_TIMEOUT;
 8005f06:	2303      	movs	r3, #3
 8005f08:	e04d      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        while (__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 8005f0a:	4b06      	ldr	r3, [pc, #24]	@ (8005f24 <HAL_RCC_OscConfig+0x4ac>)
 8005f0c:	681b      	ldr	r3, [r3, #0]
 8005f0e:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 8005f12:	2b00      	cmp	r3, #0
 8005f14:	d1f0      	bne.n	8005ef8 <HAL_RCC_OscConfig+0x480>
 8005f16:	e045      	b.n	8005fa4 <HAL_RCC_OscConfig+0x52c>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if ((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8005f18:	687b      	ldr	r3, [r7, #4]
 8005f1a:	699b      	ldr	r3, [r3, #24]
 8005f1c:	2b01      	cmp	r3, #1
 8005f1e:	d107      	bne.n	8005f30 <HAL_RCC_OscConfig+0x4b8>
      {
        return HAL_ERROR;
 8005f20:	2301      	movs	r3, #1
 8005f22:	e040      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
 8005f24:	40023800 	.word	0x40023800
 8005f28:	40007000 	.word	0x40007000
 8005f2c:	42470060 	.word	0x42470060
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 8005f30:	4b1f      	ldr	r3, [pc, #124]	@ (8005fb0 <HAL_RCC_OscConfig+0x538>)
 8005f32:	685b      	ldr	r3, [r3, #4]
 8005f34:	60fb      	str	r3, [r7, #12]
#if defined (RCC_PLLCFGR_PLLR)
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f36:	687b      	ldr	r3, [r7, #4]
 8005f38:	699b      	ldr	r3, [r3, #24]
 8005f3a:	2b01      	cmp	r3, #1
 8005f3c:	d030      	beq.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f3e:	68fb      	ldr	r3, [r7, #12]
 8005f40:	f403 0280 	and.w	r2, r3, #4194304	@ 0x400000
 8005f44:	687b      	ldr	r3, [r7, #4]
 8005f46:	69db      	ldr	r3, [r3, #28]
        if (((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF) ||
 8005f48:	429a      	cmp	r2, r3
 8005f4a:	d129      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f4c:	68fb      	ldr	r3, [r7, #12]
 8005f4e:	f003 023f 	and.w	r2, r3, #63	@ 0x3f
 8005f52:	687b      	ldr	r3, [r7, #4]
 8005f54:	6a1b      	ldr	r3, [r3, #32]
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8005f56:	429a      	cmp	r2, r3
 8005f58:	d122      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f5a:	68fa      	ldr	r2, [r7, #12]
 8005f5c:	f647 73c0 	movw	r3, #32704	@ 0x7fc0
 8005f60:	4013      	ands	r3, r2
 8005f62:	687a      	ldr	r2, [r7, #4]
 8005f64:	6a52      	ldr	r2, [r2, #36]	@ 0x24
 8005f66:	0192      	lsls	r2, r2, #6
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != (RCC_OscInitStruct->PLL.PLLM) << RCC_PLLCFGR_PLLM_Pos) ||
 8005f68:	4293      	cmp	r3, r2
 8005f6a:	d119      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f6c:	68fb      	ldr	r3, [r7, #12]
 8005f6e:	f403 3240 	and.w	r2, r3, #196608	@ 0x30000
 8005f72:	687b      	ldr	r3, [r7, #4]
 8005f74:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8005f76:	085b      	lsrs	r3, r3, #1
 8005f78:	3b01      	subs	r3, #1
 8005f7a:	041b      	lsls	r3, r3, #16
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
 8005f7c:	429a      	cmp	r2, r3
 8005f7e:	d10f      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f80:	68fb      	ldr	r3, [r7, #12]
 8005f82:	f003 6270 	and.w	r2, r3, #251658240	@ 0xf000000
 8005f86:	687b      	ldr	r3, [r7, #4]
 8005f88:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8005f8a:	061b      	lsls	r3, r3, #24
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
 8005f8c:	429a      	cmp	r2, r3
 8005f8e:	d107      	bne.n	8005fa0 <HAL_RCC_OscConfig+0x528>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLR) != (RCC_OscInitStruct->PLL.PLLR << RCC_PLLCFGR_PLLR_Pos)))
 8005f90:	68fb      	ldr	r3, [r7, #12]
 8005f92:	f003 42e0 	and.w	r2, r3, #1879048192	@ 0x70000000
 8005f96:	687b      	ldr	r3, [r7, #4]
 8005f98:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8005f9a:	071b      	lsls	r3, r3, #28
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)) ||
 8005f9c:	429a      	cmp	r2, r3
 8005f9e:	d001      	beq.n	8005fa4 <HAL_RCC_OscConfig+0x52c>
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != (RCC_OscInitStruct->PLL.PLLN) << RCC_PLLCFGR_PLLN_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U)) << RCC_PLLCFGR_PLLP_Pos) ||
            (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)))
#endif /* RCC_PLLCFGR_PLLR */
        {
          return HAL_ERROR;
 8005fa0:	2301      	movs	r3, #1
 8005fa2:	e000      	b.n	8005fa6 <HAL_RCC_OscConfig+0x52e>
        }
      }
    }
  }
  return HAL_OK;
 8005fa4:	2300      	movs	r3, #0
}
 8005fa6:	4618      	mov	r0, r3
 8005fa8:	3718      	adds	r7, #24
 8005faa:	46bd      	mov	sp, r7
 8005fac:	bd80      	pop	{r7, pc}
 8005fae:	bf00      	nop
 8005fb0:	40023800 	.word	0x40023800

08005fb4 <HAL_SPI_Init>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Init(SPI_HandleTypeDef *hspi)
{
 8005fb4:	b580      	push	{r7, lr}
 8005fb6:	b082      	sub	sp, #8
 8005fb8:	af00      	add	r7, sp, #0
 8005fba:	6078      	str	r0, [r7, #4]
  /* Check the SPI handle allocation */
  if (hspi == NULL)
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	2b00      	cmp	r3, #0
 8005fc0:	d101      	bne.n	8005fc6 <HAL_SPI_Init+0x12>
  {
    return HAL_ERROR;
 8005fc2:	2301      	movs	r3, #1
 8005fc4:	e07b      	b.n	80060be <HAL_SPI_Init+0x10a>
  assert_param(IS_SPI_DATASIZE(hspi->Init.DataSize));
  assert_param(IS_SPI_NSS(hspi->Init.NSS));
  assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
  assert_param(IS_SPI_FIRST_BIT(hspi->Init.FirstBit));
  assert_param(IS_SPI_TIMODE(hspi->Init.TIMode));
  if (hspi->Init.TIMode == SPI_TIMODE_DISABLE)
 8005fc6:	687b      	ldr	r3, [r7, #4]
 8005fc8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8005fca:	2b00      	cmp	r3, #0
 8005fcc:	d108      	bne.n	8005fe0 <HAL_SPI_Init+0x2c>
  {
    assert_param(IS_SPI_CPOL(hspi->Init.CLKPolarity));
    assert_param(IS_SPI_CPHA(hspi->Init.CLKPhase));

    if (hspi->Init.Mode == SPI_MODE_MASTER)
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	685b      	ldr	r3, [r3, #4]
 8005fd2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8005fd6:	d009      	beq.n	8005fec <HAL_SPI_Init+0x38>
      assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));
    }
    else
    {
      /* Baudrate prescaler not use in Motoraola Slave mode. force to default value */
      hspi->Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 8005fd8:	687b      	ldr	r3, [r7, #4]
 8005fda:	2200      	movs	r2, #0
 8005fdc:	61da      	str	r2, [r3, #28]
 8005fde:	e005      	b.n	8005fec <HAL_SPI_Init+0x38>
  else
  {
    assert_param(IS_SPI_BAUDRATE_PRESCALER(hspi->Init.BaudRatePrescaler));

    /* Force polarity and phase to TI protocaol requirements */
    hspi->Init.CLKPolarity = SPI_POLARITY_LOW;
 8005fe0:	687b      	ldr	r3, [r7, #4]
 8005fe2:	2200      	movs	r2, #0
 8005fe4:	611a      	str	r2, [r3, #16]
    hspi->Init.CLKPhase    = SPI_PHASE_1EDGE;
 8005fe6:	687b      	ldr	r3, [r7, #4]
 8005fe8:	2200      	movs	r2, #0
 8005fea:	615a      	str	r2, [r3, #20]
  if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
  {
    assert_param(IS_SPI_CRC_POLYNOMIAL(hspi->Init.CRCPolynomial));
  }
#else
  hspi->Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 8005fec:	687b      	ldr	r3, [r7, #4]
 8005fee:	2200      	movs	r2, #0
 8005ff0:	629a      	str	r2, [r3, #40]	@ 0x28
#endif /* USE_SPI_CRC */

  if (hspi->State == HAL_SPI_STATE_RESET)
 8005ff2:	687b      	ldr	r3, [r7, #4]
 8005ff4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8005ff8:	b2db      	uxtb	r3, r3
 8005ffa:	2b00      	cmp	r3, #0
 8005ffc:	d106      	bne.n	800600c <HAL_SPI_Init+0x58>
  {
    /* Allocate lock resource and initialize it */
    hspi->Lock = HAL_UNLOCKED;
 8005ffe:	687b      	ldr	r3, [r7, #4]
 8006000:	2200      	movs	r2, #0
 8006002:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    hspi->MspInitCallback(hspi);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC... */
    HAL_SPI_MspInit(hspi);
 8006006:	6878      	ldr	r0, [r7, #4]
 8006008:	f7fb fd5a 	bl	8001ac0 <HAL_SPI_MspInit>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
  }

  hspi->State = HAL_SPI_STATE_BUSY;
 800600c:	687b      	ldr	r3, [r7, #4]
 800600e:	2202      	movs	r2, #2
 8006010:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  /* Disable the selected SPI peripheral */
  __HAL_SPI_DISABLE(hspi);
 8006014:	687b      	ldr	r3, [r7, #4]
 8006016:	681b      	ldr	r3, [r3, #0]
 8006018:	681a      	ldr	r2, [r3, #0]
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	681b      	ldr	r3, [r3, #0]
 800601e:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006022:	601a      	str	r2, [r3, #0]

  /*----------------------- SPIx CR1 & CR2 Configuration ---------------------*/
  /* Configure : SPI Mode, Communication Mode, Data size, Clock polarity and phase, NSS management,
  Communication speed, First bit and CRC calculation state */
  WRITE_REG(hspi->Instance->CR1, ((hspi->Init.Mode & (SPI_CR1_MSTR | SPI_CR1_SSI)) |
 8006024:	687b      	ldr	r3, [r7, #4]
 8006026:	685b      	ldr	r3, [r3, #4]
 8006028:	f403 7282 	and.w	r2, r3, #260	@ 0x104
 800602c:	687b      	ldr	r3, [r7, #4]
 800602e:	689b      	ldr	r3, [r3, #8]
 8006030:	f403 4304 	and.w	r3, r3, #33792	@ 0x8400
 8006034:	431a      	orrs	r2, r3
 8006036:	687b      	ldr	r3, [r7, #4]
 8006038:	68db      	ldr	r3, [r3, #12]
 800603a:	f403 6300 	and.w	r3, r3, #2048	@ 0x800
 800603e:	431a      	orrs	r2, r3
 8006040:	687b      	ldr	r3, [r7, #4]
 8006042:	691b      	ldr	r3, [r3, #16]
 8006044:	f003 0302 	and.w	r3, r3, #2
 8006048:	431a      	orrs	r2, r3
 800604a:	687b      	ldr	r3, [r7, #4]
 800604c:	695b      	ldr	r3, [r3, #20]
 800604e:	f003 0301 	and.w	r3, r3, #1
 8006052:	431a      	orrs	r2, r3
 8006054:	687b      	ldr	r3, [r7, #4]
 8006056:	699b      	ldr	r3, [r3, #24]
 8006058:	f403 7300 	and.w	r3, r3, #512	@ 0x200
 800605c:	431a      	orrs	r2, r3
 800605e:	687b      	ldr	r3, [r7, #4]
 8006060:	69db      	ldr	r3, [r3, #28]
 8006062:	f003 0338 	and.w	r3, r3, #56	@ 0x38
 8006066:	431a      	orrs	r2, r3
 8006068:	687b      	ldr	r3, [r7, #4]
 800606a:	6a1b      	ldr	r3, [r3, #32]
 800606c:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006070:	ea42 0103 	orr.w	r1, r2, r3
 8006074:	687b      	ldr	r3, [r7, #4]
 8006076:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006078:	f403 5200 	and.w	r2, r3, #8192	@ 0x2000
 800607c:	687b      	ldr	r3, [r7, #4]
 800607e:	681b      	ldr	r3, [r3, #0]
 8006080:	430a      	orrs	r2, r1
 8006082:	601a      	str	r2, [r3, #0]
                                  (hspi->Init.BaudRatePrescaler & SPI_CR1_BR_Msk) |
                                  (hspi->Init.FirstBit  & SPI_CR1_LSBFIRST) |
                                  (hspi->Init.CRCCalculation & SPI_CR1_CRCEN)));

  /* Configure : NSS management, TI Mode */
  WRITE_REG(hspi->Instance->CR2, (((hspi->Init.NSS >> 16U) & SPI_CR2_SSOE) | (hspi->Init.TIMode & SPI_CR2_FRF)));
 8006084:	687b      	ldr	r3, [r7, #4]
 8006086:	699b      	ldr	r3, [r3, #24]
 8006088:	0c1b      	lsrs	r3, r3, #16
 800608a:	f003 0104 	and.w	r1, r3, #4
 800608e:	687b      	ldr	r3, [r7, #4]
 8006090:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8006092:	f003 0210 	and.w	r2, r3, #16
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	681b      	ldr	r3, [r3, #0]
 800609a:	430a      	orrs	r2, r1
 800609c:	605a      	str	r2, [r3, #4]
  }
#endif /* USE_SPI_CRC */

#if defined(SPI_I2SCFGR_I2SMOD)
  /* Activate the SPI mode (Make sure that I2SMOD bit in I2SCFGR register is reset) */
  CLEAR_BIT(hspi->Instance->I2SCFGR, SPI_I2SCFGR_I2SMOD);
 800609e:	687b      	ldr	r3, [r7, #4]
 80060a0:	681b      	ldr	r3, [r3, #0]
 80060a2:	69da      	ldr	r2, [r3, #28]
 80060a4:	687b      	ldr	r3, [r7, #4]
 80060a6:	681b      	ldr	r3, [r3, #0]
 80060a8:	f422 6200 	bic.w	r2, r2, #2048	@ 0x800
 80060ac:	61da      	str	r2, [r3, #28]
#endif /* SPI_I2SCFGR_I2SMOD */

  hspi->ErrorCode = HAL_SPI_ERROR_NONE;
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	2200      	movs	r2, #0
 80060b2:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State     = HAL_SPI_STATE_READY;
 80060b4:	687b      	ldr	r3, [r7, #4]
 80060b6:	2201      	movs	r2, #1
 80060b8:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

  return HAL_OK;
 80060bc:	2300      	movs	r3, #0
}
 80060be:	4618      	mov	r0, r3
 80060c0:	3708      	adds	r7, #8
 80060c2:	46bd      	mov	sp, r7
 80060c4:	bd80      	pop	{r7, pc}

080060c6 <HAL_SPI_Transmit>:
  * @param  Size amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 80060c6:	b580      	push	{r7, lr}
 80060c8:	b088      	sub	sp, #32
 80060ca:	af00      	add	r7, sp, #0
 80060cc:	60f8      	str	r0, [r7, #12]
 80060ce:	60b9      	str	r1, [r7, #8]
 80060d0:	603b      	str	r3, [r7, #0]
 80060d2:	4613      	mov	r3, r2
 80060d4:	80fb      	strh	r3, [r7, #6]

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 80060d6:	f7fc fcc3 	bl	8002a60 <HAL_GetTick>
 80060da:	61f8      	str	r0, [r7, #28]
  initial_TxXferCount = Size;
 80060dc:	88fb      	ldrh	r3, [r7, #6]
 80060de:	837b      	strh	r3, [r7, #26]

  if (hspi->State != HAL_SPI_STATE_READY)
 80060e0:	68fb      	ldr	r3, [r7, #12]
 80060e2:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80060e6:	b2db      	uxtb	r3, r3
 80060e8:	2b01      	cmp	r3, #1
 80060ea:	d001      	beq.n	80060f0 <HAL_SPI_Transmit+0x2a>
  {
    return HAL_BUSY;
 80060ec:	2302      	movs	r3, #2
 80060ee:	e12a      	b.n	8006346 <HAL_SPI_Transmit+0x280>
  }

  if ((pData == NULL) || (Size == 0U))
 80060f0:	68bb      	ldr	r3, [r7, #8]
 80060f2:	2b00      	cmp	r3, #0
 80060f4:	d002      	beq.n	80060fc <HAL_SPI_Transmit+0x36>
 80060f6:	88fb      	ldrh	r3, [r7, #6]
 80060f8:	2b00      	cmp	r3, #0
 80060fa:	d101      	bne.n	8006100 <HAL_SPI_Transmit+0x3a>
  {
    return HAL_ERROR;
 80060fc:	2301      	movs	r3, #1
 80060fe:	e122      	b.n	8006346 <HAL_SPI_Transmit+0x280>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006100:	68fb      	ldr	r3, [r7, #12]
 8006102:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8006106:	2b01      	cmp	r3, #1
 8006108:	d101      	bne.n	800610e <HAL_SPI_Transmit+0x48>
 800610a:	2302      	movs	r3, #2
 800610c:	e11b      	b.n	8006346 <HAL_SPI_Transmit+0x280>
 800610e:	68fb      	ldr	r3, [r7, #12]
 8006110:	2201      	movs	r2, #1
 8006112:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006116:	68fb      	ldr	r3, [r7, #12]
 8006118:	2203      	movs	r2, #3
 800611a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800611e:	68fb      	ldr	r3, [r7, #12]
 8006120:	2200      	movs	r2, #0
 8006122:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006124:	68fb      	ldr	r3, [r7, #12]
 8006126:	68ba      	ldr	r2, [r7, #8]
 8006128:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800612a:	68fb      	ldr	r3, [r7, #12]
 800612c:	88fa      	ldrh	r2, [r7, #6]
 800612e:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006130:	68fb      	ldr	r3, [r7, #12]
 8006132:	88fa      	ldrh	r2, [r7, #6]
 8006134:	86da      	strh	r2, [r3, #54]	@ 0x36

  /*Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006136:	68fb      	ldr	r3, [r7, #12]
 8006138:	2200      	movs	r2, #0
 800613a:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = 0U;
 800613c:	68fb      	ldr	r3, [r7, #12]
 800613e:	2200      	movs	r2, #0
 8006140:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006142:	68fb      	ldr	r3, [r7, #12]
 8006144:	2200      	movs	r2, #0
 8006146:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxISR       = NULL;
 8006148:	68fb      	ldr	r3, [r7, #12]
 800614a:	2200      	movs	r2, #0
 800614c:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 800614e:	68fb      	ldr	r3, [r7, #12]
 8006150:	2200      	movs	r2, #0
 8006152:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006154:	68fb      	ldr	r3, [r7, #12]
 8006156:	689b      	ldr	r3, [r3, #8]
 8006158:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800615c:	d10f      	bne.n	800617e <HAL_SPI_Transmit+0xb8>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 800615e:	68fb      	ldr	r3, [r7, #12]
 8006160:	681b      	ldr	r3, [r3, #0]
 8006162:	681a      	ldr	r2, [r3, #0]
 8006164:	68fb      	ldr	r3, [r7, #12]
 8006166:	681b      	ldr	r3, [r3, #0]
 8006168:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800616c:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 800616e:	68fb      	ldr	r3, [r7, #12]
 8006170:	681b      	ldr	r3, [r3, #0]
 8006172:	681a      	ldr	r2, [r3, #0]
 8006174:	68fb      	ldr	r3, [r7, #12]
 8006176:	681b      	ldr	r3, [r3, #0]
 8006178:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800617c:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 800617e:	68fb      	ldr	r3, [r7, #12]
 8006180:	681b      	ldr	r3, [r3, #0]
 8006182:	681b      	ldr	r3, [r3, #0]
 8006184:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006188:	2b40      	cmp	r3, #64	@ 0x40
 800618a:	d007      	beq.n	800619c <HAL_SPI_Transmit+0xd6>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800618c:	68fb      	ldr	r3, [r7, #12]
 800618e:	681b      	ldr	r3, [r3, #0]
 8006190:	681a      	ldr	r2, [r3, #0]
 8006192:	68fb      	ldr	r3, [r7, #12]
 8006194:	681b      	ldr	r3, [r3, #0]
 8006196:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800619a:	601a      	str	r2, [r3, #0]
  }

  /* Transmit data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800619c:	68fb      	ldr	r3, [r7, #12]
 800619e:	68db      	ldr	r3, [r3, #12]
 80061a0:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 80061a4:	d152      	bne.n	800624c <HAL_SPI_Transmit+0x186>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 80061a6:	68fb      	ldr	r3, [r7, #12]
 80061a8:	685b      	ldr	r3, [r3, #4]
 80061aa:	2b00      	cmp	r3, #0
 80061ac:	d002      	beq.n	80061b4 <HAL_SPI_Transmit+0xee>
 80061ae:	8b7b      	ldrh	r3, [r7, #26]
 80061b0:	2b01      	cmp	r3, #1
 80061b2:	d145      	bne.n	8006240 <HAL_SPI_Transmit+0x17a>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80061b4:	68fb      	ldr	r3, [r7, #12]
 80061b6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061b8:	881a      	ldrh	r2, [r3, #0]
 80061ba:	68fb      	ldr	r3, [r7, #12]
 80061bc:	681b      	ldr	r3, [r3, #0]
 80061be:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 80061c0:	68fb      	ldr	r3, [r7, #12]
 80061c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061c4:	1c9a      	adds	r2, r3, #2
 80061c6:	68fb      	ldr	r3, [r7, #12]
 80061c8:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 80061ca:	68fb      	ldr	r3, [r7, #12]
 80061cc:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80061ce:	b29b      	uxth	r3, r3
 80061d0:	3b01      	subs	r3, #1
 80061d2:	b29a      	uxth	r2, r3
 80061d4:	68fb      	ldr	r3, [r7, #12]
 80061d6:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    /* Transmit data in 16 Bit mode */
    while (hspi->TxXferCount > 0U)
 80061d8:	e032      	b.n	8006240 <HAL_SPI_Transmit+0x17a>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 80061da:	68fb      	ldr	r3, [r7, #12]
 80061dc:	681b      	ldr	r3, [r3, #0]
 80061de:	689b      	ldr	r3, [r3, #8]
 80061e0:	f003 0302 	and.w	r3, r3, #2
 80061e4:	2b02      	cmp	r3, #2
 80061e6:	d112      	bne.n	800620e <HAL_SPI_Transmit+0x148>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80061e8:	68fb      	ldr	r3, [r7, #12]
 80061ea:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061ec:	881a      	ldrh	r2, [r3, #0]
 80061ee:	68fb      	ldr	r3, [r7, #12]
 80061f0:	681b      	ldr	r3, [r3, #0]
 80061f2:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80061f4:	68fb      	ldr	r3, [r7, #12]
 80061f6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80061f8:	1c9a      	adds	r2, r3, #2
 80061fa:	68fb      	ldr	r3, [r7, #12]
 80061fc:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80061fe:	68fb      	ldr	r3, [r7, #12]
 8006200:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006202:	b29b      	uxth	r3, r3
 8006204:	3b01      	subs	r3, #1
 8006206:	b29a      	uxth	r2, r3
 8006208:	68fb      	ldr	r3, [r7, #12]
 800620a:	86da      	strh	r2, [r3, #54]	@ 0x36
 800620c:	e018      	b.n	8006240 <HAL_SPI_Transmit+0x17a>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 800620e:	f7fc fc27 	bl	8002a60 <HAL_GetTick>
 8006212:	4602      	mov	r2, r0
 8006214:	69fb      	ldr	r3, [r7, #28]
 8006216:	1ad3      	subs	r3, r2, r3
 8006218:	683a      	ldr	r2, [r7, #0]
 800621a:	429a      	cmp	r2, r3
 800621c:	d803      	bhi.n	8006226 <HAL_SPI_Transmit+0x160>
 800621e:	683b      	ldr	r3, [r7, #0]
 8006220:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006224:	d102      	bne.n	800622c <HAL_SPI_Transmit+0x166>
 8006226:	683b      	ldr	r3, [r7, #0]
 8006228:	2b00      	cmp	r3, #0
 800622a:	d109      	bne.n	8006240 <HAL_SPI_Transmit+0x17a>
        {
          hspi->State = HAL_SPI_STATE_READY;
 800622c:	68fb      	ldr	r3, [r7, #12]
 800622e:	2201      	movs	r2, #1
 8006230:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 8006234:	68fb      	ldr	r3, [r7, #12]
 8006236:	2200      	movs	r2, #0
 8006238:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 800623c:	2303      	movs	r3, #3
 800623e:	e082      	b.n	8006346 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 8006240:	68fb      	ldr	r3, [r7, #12]
 8006242:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006244:	b29b      	uxth	r3, r3
 8006246:	2b00      	cmp	r3, #0
 8006248:	d1c7      	bne.n	80061da <HAL_SPI_Transmit+0x114>
 800624a:	e053      	b.n	80062f4 <HAL_SPI_Transmit+0x22e>
    }
  }
  /* Transmit data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 800624c:	68fb      	ldr	r3, [r7, #12]
 800624e:	685b      	ldr	r3, [r3, #4]
 8006250:	2b00      	cmp	r3, #0
 8006252:	d002      	beq.n	800625a <HAL_SPI_Transmit+0x194>
 8006254:	8b7b      	ldrh	r3, [r7, #26]
 8006256:	2b01      	cmp	r3, #1
 8006258:	d147      	bne.n	80062ea <HAL_SPI_Transmit+0x224>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 800625a:	68fb      	ldr	r3, [r7, #12]
 800625c:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800625e:	68fb      	ldr	r3, [r7, #12]
 8006260:	681b      	ldr	r3, [r3, #0]
 8006262:	330c      	adds	r3, #12
 8006264:	7812      	ldrb	r2, [r2, #0]
 8006266:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006268:	68fb      	ldr	r3, [r7, #12]
 800626a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800626c:	1c5a      	adds	r2, r3, #1
 800626e:	68fb      	ldr	r3, [r7, #12]
 8006270:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 8006272:	68fb      	ldr	r3, [r7, #12]
 8006274:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006276:	b29b      	uxth	r3, r3
 8006278:	3b01      	subs	r3, #1
 800627a:	b29a      	uxth	r2, r3
 800627c:	68fb      	ldr	r3, [r7, #12]
 800627e:	86da      	strh	r2, [r3, #54]	@ 0x36
    }
    while (hspi->TxXferCount > 0U)
 8006280:	e033      	b.n	80062ea <HAL_SPI_Transmit+0x224>
    {
      /* Wait until TXE flag is set to send data */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE))
 8006282:	68fb      	ldr	r3, [r7, #12]
 8006284:	681b      	ldr	r3, [r3, #0]
 8006286:	689b      	ldr	r3, [r3, #8]
 8006288:	f003 0302 	and.w	r3, r3, #2
 800628c:	2b02      	cmp	r3, #2
 800628e:	d113      	bne.n	80062b8 <HAL_SPI_Transmit+0x1f2>
      {
        *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006290:	68fb      	ldr	r3, [r7, #12]
 8006292:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006294:	68fb      	ldr	r3, [r7, #12]
 8006296:	681b      	ldr	r3, [r3, #0]
 8006298:	330c      	adds	r3, #12
 800629a:	7812      	ldrb	r2, [r2, #0]
 800629c:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr += sizeof(uint8_t);
 800629e:	68fb      	ldr	r3, [r7, #12]
 80062a0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80062a2:	1c5a      	adds	r2, r3, #1
 80062a4:	68fb      	ldr	r3, [r7, #12]
 80062a6:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80062a8:	68fb      	ldr	r3, [r7, #12]
 80062aa:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80062ac:	b29b      	uxth	r3, r3
 80062ae:	3b01      	subs	r3, #1
 80062b0:	b29a      	uxth	r2, r3
 80062b2:	68fb      	ldr	r3, [r7, #12]
 80062b4:	86da      	strh	r2, [r3, #54]	@ 0x36
 80062b6:	e018      	b.n	80062ea <HAL_SPI_Transmit+0x224>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 80062b8:	f7fc fbd2 	bl	8002a60 <HAL_GetTick>
 80062bc:	4602      	mov	r2, r0
 80062be:	69fb      	ldr	r3, [r7, #28]
 80062c0:	1ad3      	subs	r3, r2, r3
 80062c2:	683a      	ldr	r2, [r7, #0]
 80062c4:	429a      	cmp	r2, r3
 80062c6:	d803      	bhi.n	80062d0 <HAL_SPI_Transmit+0x20a>
 80062c8:	683b      	ldr	r3, [r7, #0]
 80062ca:	f1b3 3fff 	cmp.w	r3, #4294967295
 80062ce:	d102      	bne.n	80062d6 <HAL_SPI_Transmit+0x210>
 80062d0:	683b      	ldr	r3, [r7, #0]
 80062d2:	2b00      	cmp	r3, #0
 80062d4:	d109      	bne.n	80062ea <HAL_SPI_Transmit+0x224>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80062d6:	68fb      	ldr	r3, [r7, #12]
 80062d8:	2201      	movs	r2, #1
 80062da:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80062de:	68fb      	ldr	r3, [r7, #12]
 80062e0:	2200      	movs	r2, #0
 80062e2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80062e6:	2303      	movs	r3, #3
 80062e8:	e02d      	b.n	8006346 <HAL_SPI_Transmit+0x280>
    while (hspi->TxXferCount > 0U)
 80062ea:	68fb      	ldr	r3, [r7, #12]
 80062ec:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80062ee:	b29b      	uxth	r3, r3
 80062f0:	2b00      	cmp	r3, #0
 80062f2:	d1c6      	bne.n	8006282 <HAL_SPI_Transmit+0x1bc>
    SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 80062f4:	69fa      	ldr	r2, [r7, #28]
 80062f6:	6839      	ldr	r1, [r7, #0]
 80062f8:	68f8      	ldr	r0, [r7, #12]
 80062fa:	f000 fe1f 	bl	8006f3c <SPI_EndRxTxTransaction>
 80062fe:	4603      	mov	r3, r0
 8006300:	2b00      	cmp	r3, #0
 8006302:	d002      	beq.n	800630a <HAL_SPI_Transmit+0x244>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006304:	68fb      	ldr	r3, [r7, #12]
 8006306:	2220      	movs	r2, #32
 8006308:	655a      	str	r2, [r3, #84]	@ 0x54
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800630a:	68fb      	ldr	r3, [r7, #12]
 800630c:	689b      	ldr	r3, [r3, #8]
 800630e:	2b00      	cmp	r3, #0
 8006310:	d10a      	bne.n	8006328 <HAL_SPI_Transmit+0x262>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006312:	2300      	movs	r3, #0
 8006314:	617b      	str	r3, [r7, #20]
 8006316:	68fb      	ldr	r3, [r7, #12]
 8006318:	681b      	ldr	r3, [r3, #0]
 800631a:	68db      	ldr	r3, [r3, #12]
 800631c:	617b      	str	r3, [r7, #20]
 800631e:	68fb      	ldr	r3, [r7, #12]
 8006320:	681b      	ldr	r3, [r3, #0]
 8006322:	689b      	ldr	r3, [r3, #8]
 8006324:	617b      	str	r3, [r7, #20]
 8006326:	697b      	ldr	r3, [r7, #20]
  }

  hspi->State = HAL_SPI_STATE_READY;
 8006328:	68fb      	ldr	r3, [r7, #12]
 800632a:	2201      	movs	r2, #1
 800632c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 8006330:	68fb      	ldr	r3, [r7, #12]
 8006332:	2200      	movs	r2, #0
 8006334:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006338:	68fb      	ldr	r3, [r7, #12]
 800633a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800633c:	2b00      	cmp	r3, #0
 800633e:	d001      	beq.n	8006344 <HAL_SPI_Transmit+0x27e>
  {
    return HAL_ERROR;
 8006340:	2301      	movs	r3, #1
 8006342:	e000      	b.n	8006346 <HAL_SPI_Transmit+0x280>
  }
  else
  {
    return HAL_OK;
 8006344:	2300      	movs	r3, #0
  }
}
 8006346:	4618      	mov	r0, r3
 8006348:	3720      	adds	r7, #32
 800634a:	46bd      	mov	sp, r7
 800634c:	bd80      	pop	{r7, pc}

0800634e <HAL_SPI_Receive>:
  * @param  Size amount of data to be received
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Receive(SPI_HandleTypeDef *hspi, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 800634e:	b580      	push	{r7, lr}
 8006350:	b088      	sub	sp, #32
 8006352:	af02      	add	r7, sp, #8
 8006354:	60f8      	str	r0, [r7, #12]
 8006356:	60b9      	str	r1, [r7, #8]
 8006358:	603b      	str	r3, [r7, #0]
 800635a:	4613      	mov	r3, r2
 800635c:	80fb      	strh	r3, [r7, #6]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */
  uint32_t tickstart;

  if (hspi->State != HAL_SPI_STATE_READY)
 800635e:	68fb      	ldr	r3, [r7, #12]
 8006360:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006364:	b2db      	uxtb	r3, r3
 8006366:	2b01      	cmp	r3, #1
 8006368:	d001      	beq.n	800636e <HAL_SPI_Receive+0x20>
  {
    return HAL_BUSY;
 800636a:	2302      	movs	r3, #2
 800636c:	e104      	b.n	8006578 <HAL_SPI_Receive+0x22a>
  }

  if ((hspi->Init.Mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES))
 800636e:	68fb      	ldr	r3, [r7, #12]
 8006370:	685b      	ldr	r3, [r3, #4]
 8006372:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006376:	d112      	bne.n	800639e <HAL_SPI_Receive+0x50>
 8006378:	68fb      	ldr	r3, [r7, #12]
 800637a:	689b      	ldr	r3, [r3, #8]
 800637c:	2b00      	cmp	r3, #0
 800637e:	d10e      	bne.n	800639e <HAL_SPI_Receive+0x50>
  {
    hspi->State = HAL_SPI_STATE_BUSY_RX;
 8006380:	68fb      	ldr	r3, [r7, #12]
 8006382:	2204      	movs	r2, #4
 8006384:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
    /* Call transmit-receive function to send Dummy data on Tx line and generate clock on CLK line */
    return HAL_SPI_TransmitReceive(hspi, pData, pData, Size, Timeout);
 8006388:	88fa      	ldrh	r2, [r7, #6]
 800638a:	683b      	ldr	r3, [r7, #0]
 800638c:	9300      	str	r3, [sp, #0]
 800638e:	4613      	mov	r3, r2
 8006390:	68ba      	ldr	r2, [r7, #8]
 8006392:	68b9      	ldr	r1, [r7, #8]
 8006394:	68f8      	ldr	r0, [r7, #12]
 8006396:	f000 f8f3 	bl	8006580 <HAL_SPI_TransmitReceive>
 800639a:	4603      	mov	r3, r0
 800639c:	e0ec      	b.n	8006578 <HAL_SPI_Receive+0x22a>
  }

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 800639e:	f7fc fb5f 	bl	8002a60 <HAL_GetTick>
 80063a2:	6178      	str	r0, [r7, #20]

  if ((pData == NULL) || (Size == 0U))
 80063a4:	68bb      	ldr	r3, [r7, #8]
 80063a6:	2b00      	cmp	r3, #0
 80063a8:	d002      	beq.n	80063b0 <HAL_SPI_Receive+0x62>
 80063aa:	88fb      	ldrh	r3, [r7, #6]
 80063ac:	2b00      	cmp	r3, #0
 80063ae:	d101      	bne.n	80063b4 <HAL_SPI_Receive+0x66>
  {
    return HAL_ERROR;
 80063b0:	2301      	movs	r3, #1
 80063b2:	e0e1      	b.n	8006578 <HAL_SPI_Receive+0x22a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80063b4:	68fb      	ldr	r3, [r7, #12]
 80063b6:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80063ba:	2b01      	cmp	r3, #1
 80063bc:	d101      	bne.n	80063c2 <HAL_SPI_Receive+0x74>
 80063be:	2302      	movs	r3, #2
 80063c0:	e0da      	b.n	8006578 <HAL_SPI_Receive+0x22a>
 80063c2:	68fb      	ldr	r3, [r7, #12]
 80063c4:	2201      	movs	r2, #1
 80063c6:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_RX;
 80063ca:	68fb      	ldr	r3, [r7, #12]
 80063cc:	2204      	movs	r2, #4
 80063ce:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 80063d2:	68fb      	ldr	r3, [r7, #12]
 80063d4:	2200      	movs	r2, #0
 80063d6:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pData;
 80063d8:	68fb      	ldr	r3, [r7, #12]
 80063da:	68ba      	ldr	r2, [r7, #8]
 80063dc:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferSize  = Size;
 80063de:	68fb      	ldr	r3, [r7, #12]
 80063e0:	88fa      	ldrh	r2, [r7, #6]
 80063e2:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = Size;
 80063e4:	68fb      	ldr	r3, [r7, #12]
 80063e6:	88fa      	ldrh	r2, [r7, #6]
 80063e8:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /*Init field not used in handle to zero */
  hspi->pTxBuffPtr  = (uint8_t *)NULL;
 80063ea:	68fb      	ldr	r3, [r7, #12]
 80063ec:	2200      	movs	r2, #0
 80063ee:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = 0U;
 80063f0:	68fb      	ldr	r3, [r7, #12]
 80063f2:	2200      	movs	r2, #0
 80063f4:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = 0U;
 80063f6:	68fb      	ldr	r3, [r7, #12]
 80063f8:	2200      	movs	r2, #0
 80063fa:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->RxISR       = NULL;
 80063fc:	68fb      	ldr	r3, [r7, #12]
 80063fe:	2200      	movs	r2, #0
 8006400:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 8006402:	68fb      	ldr	r3, [r7, #12]
 8006404:	2200      	movs	r2, #0
 8006406:	645a      	str	r2, [r3, #68]	@ 0x44
    hspi->RxXferCount--;
  }
#endif /* USE_SPI_CRC */

  /* Configure communication direction: 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006408:	68fb      	ldr	r3, [r7, #12]
 800640a:	689b      	ldr	r3, [r3, #8]
 800640c:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006410:	d10f      	bne.n	8006432 <HAL_SPI_Receive+0xe4>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006412:	68fb      	ldr	r3, [r7, #12]
 8006414:	681b      	ldr	r3, [r3, #0]
 8006416:	681a      	ldr	r2, [r3, #0]
 8006418:	68fb      	ldr	r3, [r7, #12]
 800641a:	681b      	ldr	r3, [r3, #0]
 800641c:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006420:	601a      	str	r2, [r3, #0]
    SPI_1LINE_RX(hspi);
 8006422:	68fb      	ldr	r3, [r7, #12]
 8006424:	681b      	ldr	r3, [r3, #0]
 8006426:	681a      	ldr	r2, [r3, #0]
 8006428:	68fb      	ldr	r3, [r7, #12]
 800642a:	681b      	ldr	r3, [r3, #0]
 800642c:	f422 4280 	bic.w	r2, r2, #16384	@ 0x4000
 8006430:	601a      	str	r2, [r3, #0]
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006432:	68fb      	ldr	r3, [r7, #12]
 8006434:	681b      	ldr	r3, [r3, #0]
 8006436:	681b      	ldr	r3, [r3, #0]
 8006438:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800643c:	2b40      	cmp	r3, #64	@ 0x40
 800643e:	d007      	beq.n	8006450 <HAL_SPI_Receive+0x102>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 8006440:	68fb      	ldr	r3, [r7, #12]
 8006442:	681b      	ldr	r3, [r3, #0]
 8006444:	681a      	ldr	r2, [r3, #0]
 8006446:	68fb      	ldr	r3, [r7, #12]
 8006448:	681b      	ldr	r3, [r3, #0]
 800644a:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800644e:	601a      	str	r2, [r3, #0]
  }

  /* Receive data in 8 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_8BIT)
 8006450:	68fb      	ldr	r3, [r7, #12]
 8006452:	68db      	ldr	r3, [r3, #12]
 8006454:	2b00      	cmp	r3, #0
 8006456:	d170      	bne.n	800653a <HAL_SPI_Receive+0x1ec>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
 8006458:	e035      	b.n	80064c6 <HAL_SPI_Receive+0x178>
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 800645a:	68fb      	ldr	r3, [r7, #12]
 800645c:	681b      	ldr	r3, [r3, #0]
 800645e:	689b      	ldr	r3, [r3, #8]
 8006460:	f003 0301 	and.w	r3, r3, #1
 8006464:	2b01      	cmp	r3, #1
 8006466:	d115      	bne.n	8006494 <HAL_SPI_Receive+0x146>
      {
        /* read the received data */
        (* (uint8_t *)hspi->pRxBuffPtr) = *(__IO uint8_t *)&hspi->Instance->DR;
 8006468:	68fb      	ldr	r3, [r7, #12]
 800646a:	681b      	ldr	r3, [r3, #0]
 800646c:	f103 020c 	add.w	r2, r3, #12
 8006470:	68fb      	ldr	r3, [r7, #12]
 8006472:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006474:	7812      	ldrb	r2, [r2, #0]
 8006476:	b2d2      	uxtb	r2, r2
 8006478:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint8_t);
 800647a:	68fb      	ldr	r3, [r7, #12]
 800647c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800647e:	1c5a      	adds	r2, r3, #1
 8006480:	68fb      	ldr	r3, [r7, #12]
 8006482:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006484:	68fb      	ldr	r3, [r7, #12]
 8006486:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006488:	b29b      	uxth	r3, r3
 800648a:	3b01      	subs	r3, #1
 800648c:	b29a      	uxth	r2, r3
 800648e:	68fb      	ldr	r3, [r7, #12]
 8006490:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006492:	e018      	b.n	80064c6 <HAL_SPI_Receive+0x178>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006494:	f7fc fae4 	bl	8002a60 <HAL_GetTick>
 8006498:	4602      	mov	r2, r0
 800649a:	697b      	ldr	r3, [r7, #20]
 800649c:	1ad3      	subs	r3, r2, r3
 800649e:	683a      	ldr	r2, [r7, #0]
 80064a0:	429a      	cmp	r2, r3
 80064a2:	d803      	bhi.n	80064ac <HAL_SPI_Receive+0x15e>
 80064a4:	683b      	ldr	r3, [r7, #0]
 80064a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 80064aa:	d102      	bne.n	80064b2 <HAL_SPI_Receive+0x164>
 80064ac:	683b      	ldr	r3, [r7, #0]
 80064ae:	2b00      	cmp	r3, #0
 80064b0:	d109      	bne.n	80064c6 <HAL_SPI_Receive+0x178>
        {
          hspi->State = HAL_SPI_STATE_READY;
 80064b2:	68fb      	ldr	r3, [r7, #12]
 80064b4:	2201      	movs	r2, #1
 80064b6:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 80064ba:	68fb      	ldr	r3, [r7, #12]
 80064bc:	2200      	movs	r2, #0
 80064be:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 80064c2:	2303      	movs	r3, #3
 80064c4:	e058      	b.n	8006578 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 80064c6:	68fb      	ldr	r3, [r7, #12]
 80064c8:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064ca:	b29b      	uxth	r3, r3
 80064cc:	2b00      	cmp	r3, #0
 80064ce:	d1c4      	bne.n	800645a <HAL_SPI_Receive+0x10c>
 80064d0:	e038      	b.n	8006544 <HAL_SPI_Receive+0x1f6>
  {
    /* Transfer loop */
    while (hspi->RxXferCount > 0U)
    {
      /* Check the RXNE flag */
      if (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE))
 80064d2:	68fb      	ldr	r3, [r7, #12]
 80064d4:	681b      	ldr	r3, [r3, #0]
 80064d6:	689b      	ldr	r3, [r3, #8]
 80064d8:	f003 0301 	and.w	r3, r3, #1
 80064dc:	2b01      	cmp	r3, #1
 80064de:	d113      	bne.n	8006508 <HAL_SPI_Receive+0x1ba>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80064e0:	68fb      	ldr	r3, [r7, #12]
 80064e2:	681b      	ldr	r3, [r3, #0]
 80064e4:	68da      	ldr	r2, [r3, #12]
 80064e6:	68fb      	ldr	r3, [r7, #12]
 80064e8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064ea:	b292      	uxth	r2, r2
 80064ec:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 80064ee:	68fb      	ldr	r3, [r7, #12]
 80064f0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80064f2:	1c9a      	adds	r2, r3, #2
 80064f4:	68fb      	ldr	r3, [r7, #12]
 80064f6:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 80064f8:	68fb      	ldr	r3, [r7, #12]
 80064fa:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80064fc:	b29b      	uxth	r3, r3
 80064fe:	3b01      	subs	r3, #1
 8006500:	b29a      	uxth	r2, r3
 8006502:	68fb      	ldr	r3, [r7, #12]
 8006504:	87da      	strh	r2, [r3, #62]	@ 0x3e
 8006506:	e018      	b.n	800653a <HAL_SPI_Receive+0x1ec>
      }
      else
      {
        /* Timeout management */
        if ((((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY)) || (Timeout == 0U))
 8006508:	f7fc faaa 	bl	8002a60 <HAL_GetTick>
 800650c:	4602      	mov	r2, r0
 800650e:	697b      	ldr	r3, [r7, #20]
 8006510:	1ad3      	subs	r3, r2, r3
 8006512:	683a      	ldr	r2, [r7, #0]
 8006514:	429a      	cmp	r2, r3
 8006516:	d803      	bhi.n	8006520 <HAL_SPI_Receive+0x1d2>
 8006518:	683b      	ldr	r3, [r7, #0]
 800651a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800651e:	d102      	bne.n	8006526 <HAL_SPI_Receive+0x1d8>
 8006520:	683b      	ldr	r3, [r7, #0]
 8006522:	2b00      	cmp	r3, #0
 8006524:	d109      	bne.n	800653a <HAL_SPI_Receive+0x1ec>
        {
          hspi->State = HAL_SPI_STATE_READY;
 8006526:	68fb      	ldr	r3, [r7, #12]
 8006528:	2201      	movs	r2, #1
 800652a:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
          __HAL_UNLOCK(hspi);
 800652e:	68fb      	ldr	r3, [r7, #12]
 8006530:	2200      	movs	r2, #0
 8006532:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
          return HAL_TIMEOUT;
 8006536:	2303      	movs	r3, #3
 8006538:	e01e      	b.n	8006578 <HAL_SPI_Receive+0x22a>
    while (hspi->RxXferCount > 0U)
 800653a:	68fb      	ldr	r3, [r7, #12]
 800653c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800653e:	b29b      	uxth	r3, r3
 8006540:	2b00      	cmp	r3, #0
 8006542:	d1c6      	bne.n	80064d2 <HAL_SPI_Receive+0x184>
    UNUSED(tmpreg);
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 8006544:	697a      	ldr	r2, [r7, #20]
 8006546:	6839      	ldr	r1, [r7, #0]
 8006548:	68f8      	ldr	r0, [r7, #12]
 800654a:	f000 fc91 	bl	8006e70 <SPI_EndRxTransaction>
 800654e:	4603      	mov	r3, r0
 8006550:	2b00      	cmp	r3, #0
 8006552:	d002      	beq.n	800655a <HAL_SPI_Receive+0x20c>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 8006554:	68fb      	ldr	r3, [r7, #12]
 8006556:	2220      	movs	r2, #32
 8006558:	655a      	str	r2, [r3, #84]	@ 0x54
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_CRC);
    __HAL_SPI_CLEAR_CRCERRFLAG(hspi);
  }
#endif /* USE_SPI_CRC */

  hspi->State = HAL_SPI_STATE_READY;
 800655a:	68fb      	ldr	r3, [r7, #12]
 800655c:	2201      	movs	r2, #1
 800655e:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 8006562:	68fb      	ldr	r3, [r7, #12]
 8006564:	2200      	movs	r2, #0
 8006566:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 800656a:	68fb      	ldr	r3, [r7, #12]
 800656c:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 800656e:	2b00      	cmp	r3, #0
 8006570:	d001      	beq.n	8006576 <HAL_SPI_Receive+0x228>
  {
    return HAL_ERROR;
 8006572:	2301      	movs	r3, #1
 8006574:	e000      	b.n	8006578 <HAL_SPI_Receive+0x22a>
  }
  else
  {
    return HAL_OK;
 8006576:	2300      	movs	r3, #0
  }
}
 8006578:	4618      	mov	r0, r3
 800657a:	3718      	adds	r7, #24
 800657c:	46bd      	mov	sp, r7
 800657e:	bd80      	pop	{r7, pc}

08006580 <HAL_SPI_TransmitReceive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_TransmitReceive(SPI_HandleTypeDef *hspi, const uint8_t *pTxData, uint8_t *pRxData,
                                          uint16_t Size, uint32_t Timeout)
{
 8006580:	b580      	push	{r7, lr}
 8006582:	b08a      	sub	sp, #40	@ 0x28
 8006584:	af00      	add	r7, sp, #0
 8006586:	60f8      	str	r0, [r7, #12]
 8006588:	60b9      	str	r1, [r7, #8]
 800658a:	607a      	str	r2, [r7, #4]
 800658c:	807b      	strh	r3, [r7, #2]
#if (USE_SPI_CRC != 0U)
  __IO uint32_t tmpreg = 0U;
#endif /* USE_SPI_CRC */

  /* Variable used to alternate Rx and Tx during transfer */
  uint32_t             txallowed = 1U;
 800658e:	2301      	movs	r3, #1
 8006590:	627b      	str	r3, [r7, #36]	@ 0x24

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES(hspi->Init.Direction));

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006592:	f7fc fa65 	bl	8002a60 <HAL_GetTick>
 8006596:	6238      	str	r0, [r7, #32]

  /* Init temporary variables */
  tmp_state           = hspi->State;
 8006598:	68fb      	ldr	r3, [r7, #12]
 800659a:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 800659e:	77fb      	strb	r3, [r7, #31]
  tmp_mode            = hspi->Init.Mode;
 80065a0:	68fb      	ldr	r3, [r7, #12]
 80065a2:	685b      	ldr	r3, [r3, #4]
 80065a4:	61bb      	str	r3, [r7, #24]
  initial_TxXferCount = Size;
 80065a6:	887b      	ldrh	r3, [r7, #2]
 80065a8:	82fb      	strh	r3, [r7, #22]

  if (!((tmp_state == HAL_SPI_STATE_READY) || \
 80065aa:	7ffb      	ldrb	r3, [r7, #31]
 80065ac:	2b01      	cmp	r3, #1
 80065ae:	d00c      	beq.n	80065ca <HAL_SPI_TransmitReceive+0x4a>
 80065b0:	69bb      	ldr	r3, [r7, #24]
 80065b2:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 80065b6:	d106      	bne.n	80065c6 <HAL_SPI_TransmitReceive+0x46>
        ((tmp_mode == SPI_MODE_MASTER) && (hspi->Init.Direction == SPI_DIRECTION_2LINES) && (tmp_state == HAL_SPI_STATE_BUSY_RX))))
 80065b8:	68fb      	ldr	r3, [r7, #12]
 80065ba:	689b      	ldr	r3, [r3, #8]
 80065bc:	2b00      	cmp	r3, #0
 80065be:	d102      	bne.n	80065c6 <HAL_SPI_TransmitReceive+0x46>
 80065c0:	7ffb      	ldrb	r3, [r7, #31]
 80065c2:	2b04      	cmp	r3, #4
 80065c4:	d001      	beq.n	80065ca <HAL_SPI_TransmitReceive+0x4a>
  {
    return HAL_BUSY;
 80065c6:	2302      	movs	r3, #2
 80065c8:	e17f      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
  }

  if ((pTxData == NULL) || (pRxData == NULL) || (Size == 0U))
 80065ca:	68bb      	ldr	r3, [r7, #8]
 80065cc:	2b00      	cmp	r3, #0
 80065ce:	d005      	beq.n	80065dc <HAL_SPI_TransmitReceive+0x5c>
 80065d0:	687b      	ldr	r3, [r7, #4]
 80065d2:	2b00      	cmp	r3, #0
 80065d4:	d002      	beq.n	80065dc <HAL_SPI_TransmitReceive+0x5c>
 80065d6:	887b      	ldrh	r3, [r7, #2]
 80065d8:	2b00      	cmp	r3, #0
 80065da:	d101      	bne.n	80065e0 <HAL_SPI_TransmitReceive+0x60>
  {
    return HAL_ERROR;
 80065dc:	2301      	movs	r3, #1
 80065de:	e174      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 80065e0:	68fb      	ldr	r3, [r7, #12]
 80065e2:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 80065e6:	2b01      	cmp	r3, #1
 80065e8:	d101      	bne.n	80065ee <HAL_SPI_TransmitReceive+0x6e>
 80065ea:	2302      	movs	r3, #2
 80065ec:	e16d      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
 80065ee:	68fb      	ldr	r3, [r7, #12]
 80065f0:	2201      	movs	r2, #1
 80065f2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Don't overwrite in case of HAL_SPI_STATE_BUSY_RX */
  if (hspi->State != HAL_SPI_STATE_BUSY_RX)
 80065f6:	68fb      	ldr	r3, [r7, #12]
 80065f8:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80065fc:	b2db      	uxtb	r3, r3
 80065fe:	2b04      	cmp	r3, #4
 8006600:	d003      	beq.n	800660a <HAL_SPI_TransmitReceive+0x8a>
  {
    hspi->State = HAL_SPI_STATE_BUSY_TX_RX;
 8006602:	68fb      	ldr	r3, [r7, #12]
 8006604:	2205      	movs	r2, #5
 8006606:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  }

  /* Set the transaction information */
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 800660a:	68fb      	ldr	r3, [r7, #12]
 800660c:	2200      	movs	r2, #0
 800660e:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pRxBuffPtr  = (uint8_t *)pRxData;
 8006610:	68fb      	ldr	r3, [r7, #12]
 8006612:	687a      	ldr	r2, [r7, #4]
 8006614:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->RxXferCount = Size;
 8006616:	68fb      	ldr	r3, [r7, #12]
 8006618:	887a      	ldrh	r2, [r7, #2]
 800661a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->RxXferSize  = Size;
 800661c:	68fb      	ldr	r3, [r7, #12]
 800661e:	887a      	ldrh	r2, [r7, #2]
 8006620:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->pTxBuffPtr  = (const uint8_t *)pTxData;
 8006622:	68fb      	ldr	r3, [r7, #12]
 8006624:	68ba      	ldr	r2, [r7, #8]
 8006626:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferCount = Size;
 8006628:	68fb      	ldr	r3, [r7, #12]
 800662a:	887a      	ldrh	r2, [r7, #2]
 800662c:	86da      	strh	r2, [r3, #54]	@ 0x36
  hspi->TxXferSize  = Size;
 800662e:	68fb      	ldr	r3, [r7, #12]
 8006630:	887a      	ldrh	r2, [r7, #2]
 8006632:	869a      	strh	r2, [r3, #52]	@ 0x34

  /*Init field not used in handle to zero */
  hspi->RxISR       = NULL;
 8006634:	68fb      	ldr	r3, [r7, #12]
 8006636:	2200      	movs	r2, #0
 8006638:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->TxISR       = NULL;
 800663a:	68fb      	ldr	r3, [r7, #12]
 800663c:	2200      	movs	r2, #0
 800663e:	645a      	str	r2, [r3, #68]	@ 0x44
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 8006640:	68fb      	ldr	r3, [r7, #12]
 8006642:	681b      	ldr	r3, [r3, #0]
 8006644:	681b      	ldr	r3, [r3, #0]
 8006646:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800664a:	2b40      	cmp	r3, #64	@ 0x40
 800664c:	d007      	beq.n	800665e <HAL_SPI_TransmitReceive+0xde>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 800664e:	68fb      	ldr	r3, [r7, #12]
 8006650:	681b      	ldr	r3, [r3, #0]
 8006652:	681a      	ldr	r2, [r3, #0]
 8006654:	68fb      	ldr	r3, [r7, #12]
 8006656:	681b      	ldr	r3, [r3, #0]
 8006658:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 800665c:	601a      	str	r2, [r3, #0]
  }

  /* Transmit and Receive data in 16 Bit mode */
  if (hspi->Init.DataSize == SPI_DATASIZE_16BIT)
 800665e:	68fb      	ldr	r3, [r7, #12]
 8006660:	68db      	ldr	r3, [r3, #12]
 8006662:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8006666:	d17e      	bne.n	8006766 <HAL_SPI_TransmitReceive+0x1e6>
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006668:	68fb      	ldr	r3, [r7, #12]
 800666a:	685b      	ldr	r3, [r3, #4]
 800666c:	2b00      	cmp	r3, #0
 800666e:	d002      	beq.n	8006676 <HAL_SPI_TransmitReceive+0xf6>
 8006670:	8afb      	ldrh	r3, [r7, #22]
 8006672:	2b01      	cmp	r3, #1
 8006674:	d16c      	bne.n	8006750 <HAL_SPI_TransmitReceive+0x1d0>
    {
      hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 8006676:	68fb      	ldr	r3, [r7, #12]
 8006678:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800667a:	881a      	ldrh	r2, [r3, #0]
 800667c:	68fb      	ldr	r3, [r7, #12]
 800667e:	681b      	ldr	r3, [r3, #0]
 8006680:	60da      	str	r2, [r3, #12]
      hspi->pTxBuffPtr += sizeof(uint16_t);
 8006682:	68fb      	ldr	r3, [r7, #12]
 8006684:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006686:	1c9a      	adds	r2, r3, #2
 8006688:	68fb      	ldr	r3, [r7, #12]
 800668a:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800668c:	68fb      	ldr	r3, [r7, #12]
 800668e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006690:	b29b      	uxth	r3, r3
 8006692:	3b01      	subs	r3, #1
 8006694:	b29a      	uxth	r2, r3
 8006696:	68fb      	ldr	r3, [r7, #12]
 8006698:	86da      	strh	r2, [r3, #54]	@ 0x36
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */

    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800669a:	e059      	b.n	8006750 <HAL_SPI_TransmitReceive+0x1d0>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800669c:	68fb      	ldr	r3, [r7, #12]
 800669e:	681b      	ldr	r3, [r3, #0]
 80066a0:	689b      	ldr	r3, [r3, #8]
 80066a2:	f003 0302 	and.w	r3, r3, #2
 80066a6:	2b02      	cmp	r3, #2
 80066a8:	d11b      	bne.n	80066e2 <HAL_SPI_TransmitReceive+0x162>
 80066aa:	68fb      	ldr	r3, [r7, #12]
 80066ac:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80066ae:	b29b      	uxth	r3, r3
 80066b0:	2b00      	cmp	r3, #0
 80066b2:	d016      	beq.n	80066e2 <HAL_SPI_TransmitReceive+0x162>
 80066b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80066b6:	2b01      	cmp	r3, #1
 80066b8:	d113      	bne.n	80066e2 <HAL_SPI_TransmitReceive+0x162>
      {
        hspi->Instance->DR = *((const uint16_t *)hspi->pTxBuffPtr);
 80066ba:	68fb      	ldr	r3, [r7, #12]
 80066bc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066be:	881a      	ldrh	r2, [r3, #0]
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	681b      	ldr	r3, [r3, #0]
 80066c4:	60da      	str	r2, [r3, #12]
        hspi->pTxBuffPtr += sizeof(uint16_t);
 80066c6:	68fb      	ldr	r3, [r7, #12]
 80066c8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80066ca:	1c9a      	adds	r2, r3, #2
 80066cc:	68fb      	ldr	r3, [r7, #12]
 80066ce:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80066d0:	68fb      	ldr	r3, [r7, #12]
 80066d2:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80066d4:	b29b      	uxth	r3, r3
 80066d6:	3b01      	subs	r3, #1
 80066d8:	b29a      	uxth	r2, r3
 80066da:	68fb      	ldr	r3, [r7, #12]
 80066dc:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80066de:	2300      	movs	r3, #0
 80066e0:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Check RXNE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80066e2:	68fb      	ldr	r3, [r7, #12]
 80066e4:	681b      	ldr	r3, [r3, #0]
 80066e6:	689b      	ldr	r3, [r3, #8]
 80066e8:	f003 0301 	and.w	r3, r3, #1
 80066ec:	2b01      	cmp	r3, #1
 80066ee:	d119      	bne.n	8006724 <HAL_SPI_TransmitReceive+0x1a4>
 80066f0:	68fb      	ldr	r3, [r7, #12]
 80066f2:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80066f4:	b29b      	uxth	r3, r3
 80066f6:	2b00      	cmp	r3, #0
 80066f8:	d014      	beq.n	8006724 <HAL_SPI_TransmitReceive+0x1a4>
      {
        *((uint16_t *)hspi->pRxBuffPtr) = (uint16_t)hspi->Instance->DR;
 80066fa:	68fb      	ldr	r3, [r7, #12]
 80066fc:	681b      	ldr	r3, [r3, #0]
 80066fe:	68da      	ldr	r2, [r3, #12]
 8006700:	68fb      	ldr	r3, [r7, #12]
 8006702:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006704:	b292      	uxth	r2, r2
 8006706:	801a      	strh	r2, [r3, #0]
        hspi->pRxBuffPtr += sizeof(uint16_t);
 8006708:	68fb      	ldr	r3, [r7, #12]
 800670a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800670c:	1c9a      	adds	r2, r3, #2
 800670e:	68fb      	ldr	r3, [r7, #12]
 8006710:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006712:	68fb      	ldr	r3, [r7, #12]
 8006714:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006716:	b29b      	uxth	r3, r3
 8006718:	3b01      	subs	r3, #1
 800671a:	b29a      	uxth	r2, r3
 800671c:	68fb      	ldr	r3, [r7, #12]
 800671e:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006720:	2301      	movs	r3, #1
 8006722:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if (((HAL_GetTick() - tickstart) >=  Timeout) && (Timeout != HAL_MAX_DELAY))
 8006724:	f7fc f99c 	bl	8002a60 <HAL_GetTick>
 8006728:	4602      	mov	r2, r0
 800672a:	6a3b      	ldr	r3, [r7, #32]
 800672c:	1ad3      	subs	r3, r2, r3
 800672e:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006730:	429a      	cmp	r2, r3
 8006732:	d80d      	bhi.n	8006750 <HAL_SPI_TransmitReceive+0x1d0>
 8006734:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006736:	f1b3 3fff 	cmp.w	r3, #4294967295
 800673a:	d009      	beq.n	8006750 <HAL_SPI_TransmitReceive+0x1d0>
      {
        hspi->State = HAL_SPI_STATE_READY;
 800673c:	68fb      	ldr	r3, [r7, #12]
 800673e:	2201      	movs	r2, #1
 8006740:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 8006744:	68fb      	ldr	r3, [r7, #12]
 8006746:	2200      	movs	r2, #0
 8006748:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 800674c:	2303      	movs	r3, #3
 800674e:	e0bc      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006750:	68fb      	ldr	r3, [r7, #12]
 8006752:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006754:	b29b      	uxth	r3, r3
 8006756:	2b00      	cmp	r3, #0
 8006758:	d1a0      	bne.n	800669c <HAL_SPI_TransmitReceive+0x11c>
 800675a:	68fb      	ldr	r3, [r7, #12]
 800675c:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 800675e:	b29b      	uxth	r3, r3
 8006760:	2b00      	cmp	r3, #0
 8006762:	d19b      	bne.n	800669c <HAL_SPI_TransmitReceive+0x11c>
 8006764:	e082      	b.n	800686c <HAL_SPI_TransmitReceive+0x2ec>
    }
  }
  /* Transmit and Receive data in 8 Bit mode */
  else
  {
    if ((hspi->Init.Mode == SPI_MODE_SLAVE) || (initial_TxXferCount == 0x01U))
 8006766:	68fb      	ldr	r3, [r7, #12]
 8006768:	685b      	ldr	r3, [r3, #4]
 800676a:	2b00      	cmp	r3, #0
 800676c:	d002      	beq.n	8006774 <HAL_SPI_TransmitReceive+0x1f4>
 800676e:	8afb      	ldrh	r3, [r7, #22]
 8006770:	2b01      	cmp	r3, #1
 8006772:	d171      	bne.n	8006858 <HAL_SPI_TransmitReceive+0x2d8>
    {
      *((__IO uint8_t *)&hspi->Instance->DR) = *((const uint8_t *)hspi->pTxBuffPtr);
 8006774:	68fb      	ldr	r3, [r7, #12]
 8006776:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8006778:	68fb      	ldr	r3, [r7, #12]
 800677a:	681b      	ldr	r3, [r3, #0]
 800677c:	330c      	adds	r3, #12
 800677e:	7812      	ldrb	r2, [r2, #0]
 8006780:	701a      	strb	r2, [r3, #0]
      hspi->pTxBuffPtr += sizeof(uint8_t);
 8006782:	68fb      	ldr	r3, [r7, #12]
 8006784:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8006786:	1c5a      	adds	r2, r3, #1
 8006788:	68fb      	ldr	r3, [r7, #12]
 800678a:	631a      	str	r2, [r3, #48]	@ 0x30
      hspi->TxXferCount--;
 800678c:	68fb      	ldr	r3, [r7, #12]
 800678e:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 8006790:	b29b      	uxth	r3, r3
 8006792:	3b01      	subs	r3, #1
 8006794:	b29a      	uxth	r2, r3
 8006796:	68fb      	ldr	r3, [r7, #12]
 8006798:	86da      	strh	r2, [r3, #54]	@ 0x36
      {
        SET_BIT(hspi->Instance->CR1, SPI_CR1_CRCNEXT);
      }
#endif /* USE_SPI_CRC */
    }
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 800679a:	e05d      	b.n	8006858 <HAL_SPI_TransmitReceive+0x2d8>
    {
      /* Check TXE flag */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_TXE)) && (hspi->TxXferCount > 0U) && (txallowed == 1U))
 800679c:	68fb      	ldr	r3, [r7, #12]
 800679e:	681b      	ldr	r3, [r3, #0]
 80067a0:	689b      	ldr	r3, [r3, #8]
 80067a2:	f003 0302 	and.w	r3, r3, #2
 80067a6:	2b02      	cmp	r3, #2
 80067a8:	d11c      	bne.n	80067e4 <HAL_SPI_TransmitReceive+0x264>
 80067aa:	68fb      	ldr	r3, [r7, #12]
 80067ac:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067ae:	b29b      	uxth	r3, r3
 80067b0:	2b00      	cmp	r3, #0
 80067b2:	d017      	beq.n	80067e4 <HAL_SPI_TransmitReceive+0x264>
 80067b4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80067b6:	2b01      	cmp	r3, #1
 80067b8:	d114      	bne.n	80067e4 <HAL_SPI_TransmitReceive+0x264>
      {
        *(__IO uint8_t *)&hspi->Instance->DR = *((const uint8_t *)hspi->pTxBuffPtr);
 80067ba:	68fb      	ldr	r3, [r7, #12]
 80067bc:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 80067be:	68fb      	ldr	r3, [r7, #12]
 80067c0:	681b      	ldr	r3, [r3, #0]
 80067c2:	330c      	adds	r3, #12
 80067c4:	7812      	ldrb	r2, [r2, #0]
 80067c6:	701a      	strb	r2, [r3, #0]
        hspi->pTxBuffPtr++;
 80067c8:	68fb      	ldr	r3, [r7, #12]
 80067ca:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80067cc:	1c5a      	adds	r2, r3, #1
 80067ce:	68fb      	ldr	r3, [r7, #12]
 80067d0:	631a      	str	r2, [r3, #48]	@ 0x30
        hspi->TxXferCount--;
 80067d2:	68fb      	ldr	r3, [r7, #12]
 80067d4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80067d6:	b29b      	uxth	r3, r3
 80067d8:	3b01      	subs	r3, #1
 80067da:	b29a      	uxth	r2, r3
 80067dc:	68fb      	ldr	r3, [r7, #12]
 80067de:	86da      	strh	r2, [r3, #54]	@ 0x36
        /* Next Data is a reception (Rx). Tx not allowed */
        txallowed = 0U;
 80067e0:	2300      	movs	r3, #0
 80067e2:	627b      	str	r3, [r7, #36]	@ 0x24
        }
#endif /* USE_SPI_CRC */
      }

      /* Wait until RXNE flag is reset */
      if ((__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_RXNE)) && (hspi->RxXferCount > 0U))
 80067e4:	68fb      	ldr	r3, [r7, #12]
 80067e6:	681b      	ldr	r3, [r3, #0]
 80067e8:	689b      	ldr	r3, [r3, #8]
 80067ea:	f003 0301 	and.w	r3, r3, #1
 80067ee:	2b01      	cmp	r3, #1
 80067f0:	d119      	bne.n	8006826 <HAL_SPI_TransmitReceive+0x2a6>
 80067f2:	68fb      	ldr	r3, [r7, #12]
 80067f4:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 80067f6:	b29b      	uxth	r3, r3
 80067f8:	2b00      	cmp	r3, #0
 80067fa:	d014      	beq.n	8006826 <HAL_SPI_TransmitReceive+0x2a6>
      {
        (*(uint8_t *)hspi->pRxBuffPtr) = hspi->Instance->DR;
 80067fc:	68fb      	ldr	r3, [r7, #12]
 80067fe:	681b      	ldr	r3, [r3, #0]
 8006800:	68da      	ldr	r2, [r3, #12]
 8006802:	68fb      	ldr	r3, [r7, #12]
 8006804:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006806:	b2d2      	uxtb	r2, r2
 8006808:	701a      	strb	r2, [r3, #0]
        hspi->pRxBuffPtr++;
 800680a:	68fb      	ldr	r3, [r7, #12]
 800680c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800680e:	1c5a      	adds	r2, r3, #1
 8006810:	68fb      	ldr	r3, [r7, #12]
 8006812:	639a      	str	r2, [r3, #56]	@ 0x38
        hspi->RxXferCount--;
 8006814:	68fb      	ldr	r3, [r7, #12]
 8006816:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006818:	b29b      	uxth	r3, r3
 800681a:	3b01      	subs	r3, #1
 800681c:	b29a      	uxth	r2, r3
 800681e:	68fb      	ldr	r3, [r7, #12]
 8006820:	87da      	strh	r2, [r3, #62]	@ 0x3e
        /* Next Data is a Transmission (Tx). Tx is allowed */
        txallowed = 1U;
 8006822:	2301      	movs	r3, #1
 8006824:	627b      	str	r3, [r7, #36]	@ 0x24
      }
      if ((((HAL_GetTick() - tickstart) >=  Timeout) && ((Timeout != HAL_MAX_DELAY))) || (Timeout == 0U))
 8006826:	f7fc f91b 	bl	8002a60 <HAL_GetTick>
 800682a:	4602      	mov	r2, r0
 800682c:	6a3b      	ldr	r3, [r7, #32]
 800682e:	1ad3      	subs	r3, r2, r3
 8006830:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8006832:	429a      	cmp	r2, r3
 8006834:	d803      	bhi.n	800683e <HAL_SPI_TransmitReceive+0x2be>
 8006836:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006838:	f1b3 3fff 	cmp.w	r3, #4294967295
 800683c:	d102      	bne.n	8006844 <HAL_SPI_TransmitReceive+0x2c4>
 800683e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8006840:	2b00      	cmp	r3, #0
 8006842:	d109      	bne.n	8006858 <HAL_SPI_TransmitReceive+0x2d8>
      {
        hspi->State = HAL_SPI_STATE_READY;
 8006844:	68fb      	ldr	r3, [r7, #12]
 8006846:	2201      	movs	r2, #1
 8006848:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
        __HAL_UNLOCK(hspi);
 800684c:	68fb      	ldr	r3, [r7, #12]
 800684e:	2200      	movs	r2, #0
 8006850:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
        return HAL_TIMEOUT;
 8006854:	2303      	movs	r3, #3
 8006856:	e038      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
    while ((hspi->TxXferCount > 0U) || (hspi->RxXferCount > 0U))
 8006858:	68fb      	ldr	r3, [r7, #12]
 800685a:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 800685c:	b29b      	uxth	r3, r3
 800685e:	2b00      	cmp	r3, #0
 8006860:	d19c      	bne.n	800679c <HAL_SPI_TransmitReceive+0x21c>
 8006862:	68fb      	ldr	r3, [r7, #12]
 8006864:	8fdb      	ldrh	r3, [r3, #62]	@ 0x3e
 8006866:	b29b      	uxth	r3, r3
 8006868:	2b00      	cmp	r3, #0
 800686a:	d197      	bne.n	800679c <HAL_SPI_TransmitReceive+0x21c>
    return HAL_ERROR;
  }
#endif /* USE_SPI_CRC */

  /* Check the end of the transaction */
  if (SPI_EndRxTxTransaction(hspi, Timeout, tickstart) != HAL_OK)
 800686c:	6a3a      	ldr	r2, [r7, #32]
 800686e:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8006870:	68f8      	ldr	r0, [r7, #12]
 8006872:	f000 fb63 	bl	8006f3c <SPI_EndRxTxTransaction>
 8006876:	4603      	mov	r3, r0
 8006878:	2b00      	cmp	r3, #0
 800687a:	d008      	beq.n	800688e <HAL_SPI_TransmitReceive+0x30e>
  {
    hspi->ErrorCode = HAL_SPI_ERROR_FLAG;
 800687c:	68fb      	ldr	r3, [r7, #12]
 800687e:	2220      	movs	r2, #32
 8006880:	655a      	str	r2, [r3, #84]	@ 0x54
    __HAL_UNLOCK(hspi);
 8006882:	68fb      	ldr	r3, [r7, #12]
 8006884:	2200      	movs	r2, #0
 8006886:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 800688a:	2301      	movs	r3, #1
 800688c:	e01d      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
  }

  /* Clear overrun flag in 2 Lines communication mode because received is not read */
  if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 800688e:	68fb      	ldr	r3, [r7, #12]
 8006890:	689b      	ldr	r3, [r3, #8]
 8006892:	2b00      	cmp	r3, #0
 8006894:	d10a      	bne.n	80068ac <HAL_SPI_TransmitReceive+0x32c>
  {
    __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006896:	2300      	movs	r3, #0
 8006898:	613b      	str	r3, [r7, #16]
 800689a:	68fb      	ldr	r3, [r7, #12]
 800689c:	681b      	ldr	r3, [r3, #0]
 800689e:	68db      	ldr	r3, [r3, #12]
 80068a0:	613b      	str	r3, [r7, #16]
 80068a2:	68fb      	ldr	r3, [r7, #12]
 80068a4:	681b      	ldr	r3, [r3, #0]
 80068a6:	689b      	ldr	r3, [r3, #8]
 80068a8:	613b      	str	r3, [r7, #16]
 80068aa:	693b      	ldr	r3, [r7, #16]
  }


  hspi->State = HAL_SPI_STATE_READY;
 80068ac:	68fb      	ldr	r3, [r7, #12]
 80068ae:	2201      	movs	r2, #1
 80068b0:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Unlock the process */
  __HAL_UNLOCK(hspi);
 80068b4:	68fb      	ldr	r3, [r7, #12]
 80068b6:	2200      	movs	r2, #0
 80068b8:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 80068bc:	68fb      	ldr	r3, [r7, #12]
 80068be:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80068c0:	2b00      	cmp	r3, #0
 80068c2:	d001      	beq.n	80068c8 <HAL_SPI_TransmitReceive+0x348>
  {
    return HAL_ERROR;
 80068c4:	2301      	movs	r3, #1
 80068c6:	e000      	b.n	80068ca <HAL_SPI_TransmitReceive+0x34a>
  }
  else
  {
    return HAL_OK;
 80068c8:	2300      	movs	r3, #0
  }
}
 80068ca:	4618      	mov	r0, r3
 80068cc:	3728      	adds	r7, #40	@ 0x28
 80068ce:	46bd      	mov	sp, r7
 80068d0:	bd80      	pop	{r7, pc}
	...

080068d4 <HAL_SPI_Transmit_DMA>:
  * @param  pData pointer to data buffer
  * @param  Size amount of data to be sent
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_SPI_Transmit_DMA(SPI_HandleTypeDef *hspi, const uint8_t *pData, uint16_t Size)
{
 80068d4:	b580      	push	{r7, lr}
 80068d6:	b084      	sub	sp, #16
 80068d8:	af00      	add	r7, sp, #0
 80068da:	60f8      	str	r0, [r7, #12]
 80068dc:	60b9      	str	r1, [r7, #8]
 80068de:	4613      	mov	r3, r2
 80068e0:	80fb      	strh	r3, [r7, #6]
  assert_param(IS_SPI_DMA_HANDLE(hspi->hdmatx));

  /* Check Direction parameter */
  assert_param(IS_SPI_DIRECTION_2LINES_OR_1LINE(hspi->Init.Direction));

  if (hspi->State != HAL_SPI_STATE_READY)
 80068e2:	68fb      	ldr	r3, [r7, #12]
 80068e4:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 80068e8:	b2db      	uxtb	r3, r3
 80068ea:	2b01      	cmp	r3, #1
 80068ec:	d001      	beq.n	80068f2 <HAL_SPI_Transmit_DMA+0x1e>
  {
    return HAL_BUSY;
 80068ee:	2302      	movs	r3, #2
 80068f0:	e097      	b.n	8006a22 <HAL_SPI_Transmit_DMA+0x14e>
  }

  if ((pData == NULL) || (Size == 0U))
 80068f2:	68bb      	ldr	r3, [r7, #8]
 80068f4:	2b00      	cmp	r3, #0
 80068f6:	d002      	beq.n	80068fe <HAL_SPI_Transmit_DMA+0x2a>
 80068f8:	88fb      	ldrh	r3, [r7, #6]
 80068fa:	2b00      	cmp	r3, #0
 80068fc:	d101      	bne.n	8006902 <HAL_SPI_Transmit_DMA+0x2e>
  {
    return HAL_ERROR;
 80068fe:	2301      	movs	r3, #1
 8006900:	e08f      	b.n	8006a22 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Process Locked */
  __HAL_LOCK(hspi);
 8006902:	68fb      	ldr	r3, [r7, #12]
 8006904:	f893 3050 	ldrb.w	r3, [r3, #80]	@ 0x50
 8006908:	2b01      	cmp	r3, #1
 800690a:	d101      	bne.n	8006910 <HAL_SPI_Transmit_DMA+0x3c>
 800690c:	2302      	movs	r3, #2
 800690e:	e088      	b.n	8006a22 <HAL_SPI_Transmit_DMA+0x14e>
 8006910:	68fb      	ldr	r3, [r7, #12]
 8006912:	2201      	movs	r2, #1
 8006914:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Set the transaction information */
  hspi->State       = HAL_SPI_STATE_BUSY_TX;
 8006918:	68fb      	ldr	r3, [r7, #12]
 800691a:	2203      	movs	r2, #3
 800691c:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  hspi->ErrorCode   = HAL_SPI_ERROR_NONE;
 8006920:	68fb      	ldr	r3, [r7, #12]
 8006922:	2200      	movs	r2, #0
 8006924:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->pTxBuffPtr  = (const uint8_t *)pData;
 8006926:	68fb      	ldr	r3, [r7, #12]
 8006928:	68ba      	ldr	r2, [r7, #8]
 800692a:	631a      	str	r2, [r3, #48]	@ 0x30
  hspi->TxXferSize  = Size;
 800692c:	68fb      	ldr	r3, [r7, #12]
 800692e:	88fa      	ldrh	r2, [r7, #6]
 8006930:	869a      	strh	r2, [r3, #52]	@ 0x34
  hspi->TxXferCount = Size;
 8006932:	68fb      	ldr	r3, [r7, #12]
 8006934:	88fa      	ldrh	r2, [r7, #6]
 8006936:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Init field not used in handle to zero */
  hspi->pRxBuffPtr  = (uint8_t *)NULL;
 8006938:	68fb      	ldr	r3, [r7, #12]
 800693a:	2200      	movs	r2, #0
 800693c:	639a      	str	r2, [r3, #56]	@ 0x38
  hspi->TxISR       = NULL;
 800693e:	68fb      	ldr	r3, [r7, #12]
 8006940:	2200      	movs	r2, #0
 8006942:	645a      	str	r2, [r3, #68]	@ 0x44
  hspi->RxISR       = NULL;
 8006944:	68fb      	ldr	r3, [r7, #12]
 8006946:	2200      	movs	r2, #0
 8006948:	641a      	str	r2, [r3, #64]	@ 0x40
  hspi->RxXferSize  = 0U;
 800694a:	68fb      	ldr	r3, [r7, #12]
 800694c:	2200      	movs	r2, #0
 800694e:	879a      	strh	r2, [r3, #60]	@ 0x3c
  hspi->RxXferCount = 0U;
 8006950:	68fb      	ldr	r3, [r7, #12]
 8006952:	2200      	movs	r2, #0
 8006954:	87da      	strh	r2, [r3, #62]	@ 0x3e

  /* Configure communication direction : 1Line */
  if (hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006956:	68fb      	ldr	r3, [r7, #12]
 8006958:	689b      	ldr	r3, [r3, #8]
 800695a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 800695e:	d10f      	bne.n	8006980 <HAL_SPI_Transmit_DMA+0xac>
  {
    /* Disable SPI Peripheral before set 1Line direction (BIDIOE bit) */
    __HAL_SPI_DISABLE(hspi);
 8006960:	68fb      	ldr	r3, [r7, #12]
 8006962:	681b      	ldr	r3, [r3, #0]
 8006964:	681a      	ldr	r2, [r3, #0]
 8006966:	68fb      	ldr	r3, [r7, #12]
 8006968:	681b      	ldr	r3, [r3, #0]
 800696a:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 800696e:	601a      	str	r2, [r3, #0]
    SPI_1LINE_TX(hspi);
 8006970:	68fb      	ldr	r3, [r7, #12]
 8006972:	681b      	ldr	r3, [r3, #0]
 8006974:	681a      	ldr	r2, [r3, #0]
 8006976:	68fb      	ldr	r3, [r7, #12]
 8006978:	681b      	ldr	r3, [r3, #0]
 800697a:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 800697e:	601a      	str	r2, [r3, #0]
    SPI_RESET_CRC(hspi);
  }
#endif /* USE_SPI_CRC */

  /* Set the SPI TxDMA Half transfer complete callback */
  hspi->hdmatx->XferHalfCpltCallback = SPI_DMAHalfTransmitCplt;
 8006980:	68fb      	ldr	r3, [r7, #12]
 8006982:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006984:	4a29      	ldr	r2, [pc, #164]	@ (8006a2c <HAL_SPI_Transmit_DMA+0x158>)
 8006986:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Set the SPI TxDMA transfer complete callback */
  hspi->hdmatx->XferCpltCallback = SPI_DMATransmitCplt;
 8006988:	68fb      	ldr	r3, [r7, #12]
 800698a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800698c:	4a28      	ldr	r2, [pc, #160]	@ (8006a30 <HAL_SPI_Transmit_DMA+0x15c>)
 800698e:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Set the DMA error callback */
  hspi->hdmatx->XferErrorCallback = SPI_DMAError;
 8006990:	68fb      	ldr	r3, [r7, #12]
 8006992:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006994:	4a27      	ldr	r2, [pc, #156]	@ (8006a34 <HAL_SPI_Transmit_DMA+0x160>)
 8006996:	64da      	str	r2, [r3, #76]	@ 0x4c

  /* Set the DMA AbortCpltCallback */
  hspi->hdmatx->XferAbortCallback = NULL;
 8006998:	68fb      	ldr	r3, [r7, #12]
 800699a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 800699c:	2200      	movs	r2, #0
 800699e:	651a      	str	r2, [r3, #80]	@ 0x50

  /* Enable the Tx DMA Stream/Channel */
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80069a0:	68fb      	ldr	r3, [r7, #12]
 80069a2:	6c98      	ldr	r0, [r3, #72]	@ 0x48
 80069a4:	68fb      	ldr	r3, [r7, #12]
 80069a6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80069a8:	4619      	mov	r1, r3
 80069aa:	68fb      	ldr	r3, [r7, #12]
 80069ac:	681b      	ldr	r3, [r3, #0]
 80069ae:	330c      	adds	r3, #12
 80069b0:	461a      	mov	r2, r3
                                 hspi->TxXferCount))
 80069b2:	68fb      	ldr	r3, [r7, #12]
 80069b4:	8edb      	ldrh	r3, [r3, #54]	@ 0x36
 80069b6:	b29b      	uxth	r3, r3
  if (HAL_OK != HAL_DMA_Start_IT(hspi->hdmatx, (uint32_t)hspi->pTxBuffPtr, (uint32_t)&hspi->Instance->DR,
 80069b8:	f7fd f802 	bl	80039c0 <HAL_DMA_Start_IT>
 80069bc:	4603      	mov	r3, r0
 80069be:	2b00      	cmp	r3, #0
 80069c0:	d00b      	beq.n	80069da <HAL_SPI_Transmit_DMA+0x106>
  {
    /* Update SPI error code */
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 80069c2:	68fb      	ldr	r3, [r7, #12]
 80069c4:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80069c6:	f043 0210 	orr.w	r2, r3, #16
 80069ca:	68fb      	ldr	r3, [r7, #12]
 80069cc:	655a      	str	r2, [r3, #84]	@ 0x54
    /* Process Unlocked */
    __HAL_UNLOCK(hspi);
 80069ce:	68fb      	ldr	r3, [r7, #12]
 80069d0:	2200      	movs	r2, #0
 80069d2:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50
    return HAL_ERROR;
 80069d6:	2301      	movs	r3, #1
 80069d8:	e023      	b.n	8006a22 <HAL_SPI_Transmit_DMA+0x14e>
  }

  /* Check if the SPI is already enabled */
  if ((hspi->Instance->CR1 & SPI_CR1_SPE) != SPI_CR1_SPE)
 80069da:	68fb      	ldr	r3, [r7, #12]
 80069dc:	681b      	ldr	r3, [r3, #0]
 80069de:	681b      	ldr	r3, [r3, #0]
 80069e0:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 80069e4:	2b40      	cmp	r3, #64	@ 0x40
 80069e6:	d007      	beq.n	80069f8 <HAL_SPI_Transmit_DMA+0x124>
  {
    /* Enable SPI peripheral */
    __HAL_SPI_ENABLE(hspi);
 80069e8:	68fb      	ldr	r3, [r7, #12]
 80069ea:	681b      	ldr	r3, [r3, #0]
 80069ec:	681a      	ldr	r2, [r3, #0]
 80069ee:	68fb      	ldr	r3, [r7, #12]
 80069f0:	681b      	ldr	r3, [r3, #0]
 80069f2:	f042 0240 	orr.w	r2, r2, #64	@ 0x40
 80069f6:	601a      	str	r2, [r3, #0]
  }

  /* Process Unlocked */
  __HAL_UNLOCK(hspi);
 80069f8:	68fb      	ldr	r3, [r7, #12]
 80069fa:	2200      	movs	r2, #0
 80069fc:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

  /* Enable the SPI Error Interrupt Bit */
  __HAL_SPI_ENABLE_IT(hspi, (SPI_IT_ERR));
 8006a00:	68fb      	ldr	r3, [r7, #12]
 8006a02:	681b      	ldr	r3, [r3, #0]
 8006a04:	685a      	ldr	r2, [r3, #4]
 8006a06:	68fb      	ldr	r3, [r7, #12]
 8006a08:	681b      	ldr	r3, [r3, #0]
 8006a0a:	f042 0220 	orr.w	r2, r2, #32
 8006a0e:	605a      	str	r2, [r3, #4]

  /* Enable Tx DMA Request */
  SET_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006a10:	68fb      	ldr	r3, [r7, #12]
 8006a12:	681b      	ldr	r3, [r3, #0]
 8006a14:	685a      	ldr	r2, [r3, #4]
 8006a16:	68fb      	ldr	r3, [r7, #12]
 8006a18:	681b      	ldr	r3, [r3, #0]
 8006a1a:	f042 0202 	orr.w	r2, r2, #2
 8006a1e:	605a      	str	r2, [r3, #4]

  return HAL_OK;
 8006a20:	2300      	movs	r3, #0
}
 8006a22:	4618      	mov	r0, r3
 8006a24:	3710      	adds	r7, #16
 8006a26:	46bd      	mov	sp, r7
 8006a28:	bd80      	pop	{r7, pc}
 8006a2a:	bf00      	nop
 8006a2c:	08006cdd 	.word	0x08006cdd
 8006a30:	08006c35 	.word	0x08006c35
 8006a34:	08006cf9 	.word	0x08006cf9

08006a38 <HAL_SPI_IRQHandler>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for the specified SPI module.
  * @retval None
  */
void HAL_SPI_IRQHandler(SPI_HandleTypeDef *hspi)
{
 8006a38:	b580      	push	{r7, lr}
 8006a3a:	b088      	sub	sp, #32
 8006a3c:	af00      	add	r7, sp, #0
 8006a3e:	6078      	str	r0, [r7, #4]
  uint32_t itsource = hspi->Instance->CR2;
 8006a40:	687b      	ldr	r3, [r7, #4]
 8006a42:	681b      	ldr	r3, [r3, #0]
 8006a44:	685b      	ldr	r3, [r3, #4]
 8006a46:	61fb      	str	r3, [r7, #28]
  uint32_t itflag   = hspi->Instance->SR;
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	681b      	ldr	r3, [r3, #0]
 8006a4c:	689b      	ldr	r3, [r3, #8]
 8006a4e:	61bb      	str	r3, [r7, #24]

  /* SPI in mode Receiver ----------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a50:	69bb      	ldr	r3, [r7, #24]
 8006a52:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a56:	2b00      	cmp	r3, #0
 8006a58:	d10e      	bne.n	8006a78 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a5a:	69bb      	ldr	r3, [r7, #24]
 8006a5c:	f003 0301 	and.w	r3, r3, #1
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) == RESET) &&
 8006a60:	2b00      	cmp	r3, #0
 8006a62:	d009      	beq.n	8006a78 <HAL_SPI_IRQHandler+0x40>
      (SPI_CHECK_FLAG(itflag, SPI_FLAG_RXNE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_RXNE) != RESET))
 8006a64:	69fb      	ldr	r3, [r7, #28]
 8006a66:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	d004      	beq.n	8006a78 <HAL_SPI_IRQHandler+0x40>
  {
    hspi->RxISR(hspi);
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8006a72:	6878      	ldr	r0, [r7, #4]
 8006a74:	4798      	blx	r3
    return;
 8006a76:	e0ce      	b.n	8006c16 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in mode Transmitter -------------------------------------------------*/
  if ((SPI_CHECK_FLAG(itflag, SPI_FLAG_TXE) != RESET) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_TXE) != RESET))
 8006a78:	69bb      	ldr	r3, [r7, #24]
 8006a7a:	f003 0302 	and.w	r3, r3, #2
 8006a7e:	2b00      	cmp	r3, #0
 8006a80:	d009      	beq.n	8006a96 <HAL_SPI_IRQHandler+0x5e>
 8006a82:	69fb      	ldr	r3, [r7, #28]
 8006a84:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006a88:	2b00      	cmp	r3, #0
 8006a8a:	d004      	beq.n	8006a96 <HAL_SPI_IRQHandler+0x5e>
  {
    hspi->TxISR(hspi);
 8006a8c:	687b      	ldr	r3, [r7, #4]
 8006a8e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8006a90:	6878      	ldr	r0, [r7, #4]
 8006a92:	4798      	blx	r3
    return;
 8006a94:	e0bf      	b.n	8006c16 <HAL_SPI_IRQHandler+0x1de>
  }

  /* SPI in Error Treatment --------------------------------------------------*/
  if (((SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET) || (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006a96:	69bb      	ldr	r3, [r7, #24]
 8006a98:	f003 0320 	and.w	r3, r3, #32
 8006a9c:	2b00      	cmp	r3, #0
 8006a9e:	d10a      	bne.n	8006ab6 <HAL_SPI_IRQHandler+0x7e>
 8006aa0:	69bb      	ldr	r3, [r7, #24]
 8006aa2:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006aa6:	2b00      	cmp	r3, #0
 8006aa8:	d105      	bne.n	8006ab6 <HAL_SPI_IRQHandler+0x7e>
       || (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)) && (SPI_CHECK_IT_SOURCE(itsource, SPI_IT_ERR) != RESET))
 8006aaa:	69bb      	ldr	r3, [r7, #24]
 8006aac:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006ab0:	2b00      	cmp	r3, #0
 8006ab2:	f000 80b0 	beq.w	8006c16 <HAL_SPI_IRQHandler+0x1de>
 8006ab6:	69fb      	ldr	r3, [r7, #28]
 8006ab8:	f003 0320 	and.w	r3, r3, #32
 8006abc:	2b00      	cmp	r3, #0
 8006abe:	f000 80aa 	beq.w	8006c16 <HAL_SPI_IRQHandler+0x1de>
  {
    /* SPI Overrun error interrupt occurred ----------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_OVR) != RESET)
 8006ac2:	69bb      	ldr	r3, [r7, #24]
 8006ac4:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8006ac8:	2b00      	cmp	r3, #0
 8006aca:	d023      	beq.n	8006b14 <HAL_SPI_IRQHandler+0xdc>
    {
      if (hspi->State != HAL_SPI_STATE_BUSY_TX)
 8006acc:	687b      	ldr	r3, [r7, #4]
 8006ace:	f893 3051 	ldrb.w	r3, [r3, #81]	@ 0x51
 8006ad2:	b2db      	uxtb	r3, r3
 8006ad4:	2b03      	cmp	r3, #3
 8006ad6:	d011      	beq.n	8006afc <HAL_SPI_IRQHandler+0xc4>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_OVR);
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006adc:	f043 0204 	orr.w	r2, r3, #4
 8006ae0:	687b      	ldr	r3, [r7, #4]
 8006ae2:	655a      	str	r2, [r3, #84]	@ 0x54
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006ae4:	2300      	movs	r3, #0
 8006ae6:	617b      	str	r3, [r7, #20]
 8006ae8:	687b      	ldr	r3, [r7, #4]
 8006aea:	681b      	ldr	r3, [r3, #0]
 8006aec:	68db      	ldr	r3, [r3, #12]
 8006aee:	617b      	str	r3, [r7, #20]
 8006af0:	687b      	ldr	r3, [r7, #4]
 8006af2:	681b      	ldr	r3, [r3, #0]
 8006af4:	689b      	ldr	r3, [r3, #8]
 8006af6:	617b      	str	r3, [r7, #20]
 8006af8:	697b      	ldr	r3, [r7, #20]
 8006afa:	e00b      	b.n	8006b14 <HAL_SPI_IRQHandler+0xdc>
      }
      else
      {
        __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006afc:	2300      	movs	r3, #0
 8006afe:	613b      	str	r3, [r7, #16]
 8006b00:	687b      	ldr	r3, [r7, #4]
 8006b02:	681b      	ldr	r3, [r3, #0]
 8006b04:	68db      	ldr	r3, [r3, #12]
 8006b06:	613b      	str	r3, [r7, #16]
 8006b08:	687b      	ldr	r3, [r7, #4]
 8006b0a:	681b      	ldr	r3, [r3, #0]
 8006b0c:	689b      	ldr	r3, [r3, #8]
 8006b0e:	613b      	str	r3, [r7, #16]
 8006b10:	693b      	ldr	r3, [r7, #16]
        return;
 8006b12:	e080      	b.n	8006c16 <HAL_SPI_IRQHandler+0x1de>
      }
    }

    /* SPI Mode Fault error interrupt occurred -------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_MODF) != RESET)
 8006b14:	69bb      	ldr	r3, [r7, #24]
 8006b16:	f003 0320 	and.w	r3, r3, #32
 8006b1a:	2b00      	cmp	r3, #0
 8006b1c:	d014      	beq.n	8006b48 <HAL_SPI_IRQHandler+0x110>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_MODF);
 8006b1e:	687b      	ldr	r3, [r7, #4]
 8006b20:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b22:	f043 0201 	orr.w	r2, r3, #1
 8006b26:	687b      	ldr	r3, [r7, #4]
 8006b28:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_MODFFLAG(hspi);
 8006b2a:	2300      	movs	r3, #0
 8006b2c:	60fb      	str	r3, [r7, #12]
 8006b2e:	687b      	ldr	r3, [r7, #4]
 8006b30:	681b      	ldr	r3, [r3, #0]
 8006b32:	689b      	ldr	r3, [r3, #8]
 8006b34:	60fb      	str	r3, [r7, #12]
 8006b36:	687b      	ldr	r3, [r7, #4]
 8006b38:	681b      	ldr	r3, [r3, #0]
 8006b3a:	681a      	ldr	r2, [r3, #0]
 8006b3c:	687b      	ldr	r3, [r7, #4]
 8006b3e:	681b      	ldr	r3, [r3, #0]
 8006b40:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006b44:	601a      	str	r2, [r3, #0]
 8006b46:	68fb      	ldr	r3, [r7, #12]
    }

    /* SPI Frame error interrupt occurred ------------------------------------*/
    if (SPI_CHECK_FLAG(itflag, SPI_FLAG_FRE) != RESET)
 8006b48:	69bb      	ldr	r3, [r7, #24]
 8006b4a:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006b4e:	2b00      	cmp	r3, #0
 8006b50:	d00c      	beq.n	8006b6c <HAL_SPI_IRQHandler+0x134>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FRE);
 8006b52:	687b      	ldr	r3, [r7, #4]
 8006b54:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b56:	f043 0208 	orr.w	r2, r3, #8
 8006b5a:	687b      	ldr	r3, [r7, #4]
 8006b5c:	655a      	str	r2, [r3, #84]	@ 0x54
      __HAL_SPI_CLEAR_FREFLAG(hspi);
 8006b5e:	2300      	movs	r3, #0
 8006b60:	60bb      	str	r3, [r7, #8]
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	681b      	ldr	r3, [r3, #0]
 8006b66:	689b      	ldr	r3, [r3, #8]
 8006b68:	60bb      	str	r3, [r7, #8]
 8006b6a:	68bb      	ldr	r3, [r7, #8]
    }

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006b6c:	687b      	ldr	r3, [r7, #4]
 8006b6e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006b70:	2b00      	cmp	r3, #0
 8006b72:	d04f      	beq.n	8006c14 <HAL_SPI_IRQHandler+0x1dc>
    {
      /* Disable all interrupts */
      __HAL_SPI_DISABLE_IT(hspi, SPI_IT_RXNE | SPI_IT_TXE | SPI_IT_ERR);
 8006b74:	687b      	ldr	r3, [r7, #4]
 8006b76:	681b      	ldr	r3, [r3, #0]
 8006b78:	685a      	ldr	r2, [r3, #4]
 8006b7a:	687b      	ldr	r3, [r7, #4]
 8006b7c:	681b      	ldr	r3, [r3, #0]
 8006b7e:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006b82:	605a      	str	r2, [r3, #4]

      hspi->State = HAL_SPI_STATE_READY;
 8006b84:	687b      	ldr	r3, [r7, #4]
 8006b86:	2201      	movs	r2, #1
 8006b88:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
      /* Disable the SPI DMA requests if enabled */
      if ((HAL_IS_BIT_SET(itsource, SPI_CR2_TXDMAEN)) || (HAL_IS_BIT_SET(itsource, SPI_CR2_RXDMAEN)))
 8006b8c:	69fb      	ldr	r3, [r7, #28]
 8006b8e:	f003 0302 	and.w	r3, r3, #2
 8006b92:	2b00      	cmp	r3, #0
 8006b94:	d104      	bne.n	8006ba0 <HAL_SPI_IRQHandler+0x168>
 8006b96:	69fb      	ldr	r3, [r7, #28]
 8006b98:	f003 0301 	and.w	r3, r3, #1
 8006b9c:	2b00      	cmp	r3, #0
 8006b9e:	d034      	beq.n	8006c0a <HAL_SPI_IRQHandler+0x1d2>
      {
        CLEAR_BIT(hspi->Instance->CR2, (SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN));
 8006ba0:	687b      	ldr	r3, [r7, #4]
 8006ba2:	681b      	ldr	r3, [r3, #0]
 8006ba4:	685a      	ldr	r2, [r3, #4]
 8006ba6:	687b      	ldr	r3, [r7, #4]
 8006ba8:	681b      	ldr	r3, [r3, #0]
 8006baa:	f022 0203 	bic.w	r2, r2, #3
 8006bae:	605a      	str	r2, [r3, #4]

        /* Abort the SPI DMA Rx channel */
        if (hspi->hdmarx != NULL)
 8006bb0:	687b      	ldr	r3, [r7, #4]
 8006bb2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006bb4:	2b00      	cmp	r3, #0
 8006bb6:	d011      	beq.n	8006bdc <HAL_SPI_IRQHandler+0x1a4>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmarx->XferAbortCallback = SPI_DMAAbortOnError;
 8006bb8:	687b      	ldr	r3, [r7, #4]
 8006bba:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006bbc:	4a17      	ldr	r2, [pc, #92]	@ (8006c1c <HAL_SPI_IRQHandler+0x1e4>)
 8006bbe:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmarx))
 8006bc0:	687b      	ldr	r3, [r7, #4]
 8006bc2:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8006bc4:	4618      	mov	r0, r3
 8006bc6:	f7fc ff53 	bl	8003a70 <HAL_DMA_Abort_IT>
 8006bca:	4603      	mov	r3, r0
 8006bcc:	2b00      	cmp	r3, #0
 8006bce:	d005      	beq.n	8006bdc <HAL_SPI_IRQHandler+0x1a4>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006bd0:	687b      	ldr	r3, [r7, #4]
 8006bd2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006bd4:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006bd8:	687b      	ldr	r3, [r7, #4]
 8006bda:	655a      	str	r2, [r3, #84]	@ 0x54
          }
        }
        /* Abort the SPI DMA Tx channel */
        if (hspi->hdmatx != NULL)
 8006bdc:	687b      	ldr	r3, [r7, #4]
 8006bde:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006be0:	2b00      	cmp	r3, #0
 8006be2:	d016      	beq.n	8006c12 <HAL_SPI_IRQHandler+0x1da>
        {
          /* Set the SPI DMA Abort callback :
          will lead to call HAL_SPI_ErrorCallback() at end of DMA abort procedure */
          hspi->hdmatx->XferAbortCallback = SPI_DMAAbortOnError;
 8006be4:	687b      	ldr	r3, [r7, #4]
 8006be6:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006be8:	4a0c      	ldr	r2, [pc, #48]	@ (8006c1c <HAL_SPI_IRQHandler+0x1e4>)
 8006bea:	651a      	str	r2, [r3, #80]	@ 0x50
          if (HAL_OK != HAL_DMA_Abort_IT(hspi->hdmatx))
 8006bec:	687b      	ldr	r3, [r7, #4]
 8006bee:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8006bf0:	4618      	mov	r0, r3
 8006bf2:	f7fc ff3d 	bl	8003a70 <HAL_DMA_Abort_IT>
 8006bf6:	4603      	mov	r3, r0
 8006bf8:	2b00      	cmp	r3, #0
 8006bfa:	d00a      	beq.n	8006c12 <HAL_SPI_IRQHandler+0x1da>
          {
            SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_ABORT);
 8006bfc:	687b      	ldr	r3, [r7, #4]
 8006bfe:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c00:	f043 0240 	orr.w	r2, r3, #64	@ 0x40
 8006c04:	687b      	ldr	r3, [r7, #4]
 8006c06:	655a      	str	r2, [r3, #84]	@ 0x54
        if (hspi->hdmatx != NULL)
 8006c08:	e003      	b.n	8006c12 <HAL_SPI_IRQHandler+0x1da>
      {
        /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
        hspi->ErrorCallback(hspi);
#else
        HAL_SPI_ErrorCallback(hspi);
 8006c0a:	6878      	ldr	r0, [r7, #4]
 8006c0c:	f7fb fbc2 	bl	8002394 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      }
    }
    return;
 8006c10:	e000      	b.n	8006c14 <HAL_SPI_IRQHandler+0x1dc>
        if (hspi->hdmatx != NULL)
 8006c12:	bf00      	nop
    return;
 8006c14:	bf00      	nop
  }
}
 8006c16:	3720      	adds	r7, #32
 8006c18:	46bd      	mov	sp, r7
 8006c1a:	bd80      	pop	{r7, pc}
 8006c1c:	08006d39 	.word	0x08006d39

08006c20 <HAL_SPI_TxHalfCpltCallback>:
  * @param  hspi pointer to a SPI_HandleTypeDef structure that contains
  *               the configuration information for SPI module.
  * @retval None
  */
__weak void HAL_SPI_TxHalfCpltCallback(SPI_HandleTypeDef *hspi)
{
 8006c20:	b480      	push	{r7}
 8006c22:	b083      	sub	sp, #12
 8006c24:	af00      	add	r7, sp, #0
 8006c26:	6078      	str	r0, [r7, #4]
  UNUSED(hspi);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_SPI_TxHalfCpltCallback should be implemented in the user file
   */
}
 8006c28:	bf00      	nop
 8006c2a:	370c      	adds	r7, #12
 8006c2c:	46bd      	mov	sp, r7
 8006c2e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8006c32:	4770      	bx	lr

08006c34 <SPI_DMATransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMATransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006c34:	b580      	push	{r7, lr}
 8006c36:	b086      	sub	sp, #24
 8006c38:	af00      	add	r7, sp, #0
 8006c3a:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006c3c:	687b      	ldr	r3, [r7, #4]
 8006c3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006c40:	617b      	str	r3, [r7, #20]
  uint32_t tickstart;

  /* Init tickstart for timeout management*/
  tickstart = HAL_GetTick();
 8006c42:	f7fb ff0d 	bl	8002a60 <HAL_GetTick>
 8006c46:	6138      	str	r0, [r7, #16]

  /* DMA Normal Mode */
  if ((hdma->Instance->CR & DMA_SxCR_CIRC) != DMA_SxCR_CIRC)
 8006c48:	687b      	ldr	r3, [r7, #4]
 8006c4a:	681b      	ldr	r3, [r3, #0]
 8006c4c:	681b      	ldr	r3, [r3, #0]
 8006c4e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8006c52:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8006c56:	d03b      	beq.n	8006cd0 <SPI_DMATransmitCplt+0x9c>
  {
    /* Disable ERR interrupt */
    __HAL_SPI_DISABLE_IT(hspi, SPI_IT_ERR);
 8006c58:	697b      	ldr	r3, [r7, #20]
 8006c5a:	681b      	ldr	r3, [r3, #0]
 8006c5c:	685a      	ldr	r2, [r3, #4]
 8006c5e:	697b      	ldr	r3, [r7, #20]
 8006c60:	681b      	ldr	r3, [r3, #0]
 8006c62:	f022 0220 	bic.w	r2, r2, #32
 8006c66:	605a      	str	r2, [r3, #4]

    /* Disable Tx DMA Request */
    CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN);
 8006c68:	697b      	ldr	r3, [r7, #20]
 8006c6a:	681b      	ldr	r3, [r3, #0]
 8006c6c:	685a      	ldr	r2, [r3, #4]
 8006c6e:	697b      	ldr	r3, [r7, #20]
 8006c70:	681b      	ldr	r3, [r3, #0]
 8006c72:	f022 0202 	bic.w	r2, r2, #2
 8006c76:	605a      	str	r2, [r3, #4]

    /* Check the end of the transaction */
    if (SPI_EndRxTxTransaction(hspi, SPI_DEFAULT_TIMEOUT, tickstart) != HAL_OK)
 8006c78:	693a      	ldr	r2, [r7, #16]
 8006c7a:	2164      	movs	r1, #100	@ 0x64
 8006c7c:	6978      	ldr	r0, [r7, #20]
 8006c7e:	f000 f95d 	bl	8006f3c <SPI_EndRxTxTransaction>
 8006c82:	4603      	mov	r3, r0
 8006c84:	2b00      	cmp	r3, #0
 8006c86:	d005      	beq.n	8006c94 <SPI_DMATransmitCplt+0x60>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006c88:	697b      	ldr	r3, [r7, #20]
 8006c8a:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006c8c:	f043 0220 	orr.w	r2, r3, #32
 8006c90:	697b      	ldr	r3, [r7, #20]
 8006c92:	655a      	str	r2, [r3, #84]	@ 0x54
    }

    /* Clear overrun flag in 2 Lines communication mode because received data is not read */
    if (hspi->Init.Direction == SPI_DIRECTION_2LINES)
 8006c94:	697b      	ldr	r3, [r7, #20]
 8006c96:	689b      	ldr	r3, [r3, #8]
 8006c98:	2b00      	cmp	r3, #0
 8006c9a:	d10a      	bne.n	8006cb2 <SPI_DMATransmitCplt+0x7e>
    {
      __HAL_SPI_CLEAR_OVRFLAG(hspi);
 8006c9c:	2300      	movs	r3, #0
 8006c9e:	60fb      	str	r3, [r7, #12]
 8006ca0:	697b      	ldr	r3, [r7, #20]
 8006ca2:	681b      	ldr	r3, [r3, #0]
 8006ca4:	68db      	ldr	r3, [r3, #12]
 8006ca6:	60fb      	str	r3, [r7, #12]
 8006ca8:	697b      	ldr	r3, [r7, #20]
 8006caa:	681b      	ldr	r3, [r3, #0]
 8006cac:	689b      	ldr	r3, [r3, #8]
 8006cae:	60fb      	str	r3, [r7, #12]
 8006cb0:	68fb      	ldr	r3, [r7, #12]
    }

    hspi->TxXferCount = 0U;
 8006cb2:	697b      	ldr	r3, [r7, #20]
 8006cb4:	2200      	movs	r2, #0
 8006cb6:	86da      	strh	r2, [r3, #54]	@ 0x36
    hspi->State = HAL_SPI_STATE_READY;
 8006cb8:	697b      	ldr	r3, [r7, #20]
 8006cba:	2201      	movs	r2, #1
 8006cbc:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

    if (hspi->ErrorCode != HAL_SPI_ERROR_NONE)
 8006cc0:	697b      	ldr	r3, [r7, #20]
 8006cc2:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006cc4:	2b00      	cmp	r3, #0
 8006cc6:	d003      	beq.n	8006cd0 <SPI_DMATransmitCplt+0x9c>
    {
      /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
      hspi->ErrorCallback(hspi);
#else
      HAL_SPI_ErrorCallback(hspi);
 8006cc8:	6978      	ldr	r0, [r7, #20]
 8006cca:	f7fb fb63 	bl	8002394 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
      return;
 8006cce:	e002      	b.n	8006cd6 <SPI_DMATransmitCplt+0xa2>
  }
  /* Call user Tx complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxCpltCallback(hspi);
#else
  HAL_SPI_TxCpltCallback(hspi);
 8006cd0:	6978      	ldr	r0, [r7, #20]
 8006cd2:	f7fb fb75 	bl	80023c0 <HAL_SPI_TxCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cd6:	3718      	adds	r7, #24
 8006cd8:	46bd      	mov	sp, r7
 8006cda:	bd80      	pop	{r7, pc}

08006cdc <SPI_DMAHalfTransmitCplt>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAHalfTransmitCplt(DMA_HandleTypeDef *hdma)
{
 8006cdc:	b580      	push	{r7, lr}
 8006cde:	b084      	sub	sp, #16
 8006ce0:	af00      	add	r7, sp, #0
 8006ce2:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006ce4:	687b      	ldr	r3, [r7, #4]
 8006ce6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006ce8:	60fb      	str	r3, [r7, #12]

  /* Call user Tx half complete callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->TxHalfCpltCallback(hspi);
#else
  HAL_SPI_TxHalfCpltCallback(hspi);
 8006cea:	68f8      	ldr	r0, [r7, #12]
 8006cec:	f7ff ff98 	bl	8006c20 <HAL_SPI_TxHalfCpltCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006cf0:	bf00      	nop
 8006cf2:	3710      	adds	r7, #16
 8006cf4:	46bd      	mov	sp, r7
 8006cf6:	bd80      	pop	{r7, pc}

08006cf8 <SPI_DMAError>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA module.
  * @retval None
  */
static void SPI_DMAError(DMA_HandleTypeDef *hdma)
{
 8006cf8:	b580      	push	{r7, lr}
 8006cfa:	b084      	sub	sp, #16
 8006cfc:	af00      	add	r7, sp, #0
 8006cfe:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006d00:	687b      	ldr	r3, [r7, #4]
 8006d02:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d04:	60fb      	str	r3, [r7, #12]

  /* Stop the disable DMA transfer on SPI side */
  CLEAR_BIT(hspi->Instance->CR2, SPI_CR2_TXDMAEN | SPI_CR2_RXDMAEN);
 8006d06:	68fb      	ldr	r3, [r7, #12]
 8006d08:	681b      	ldr	r3, [r3, #0]
 8006d0a:	685a      	ldr	r2, [r3, #4]
 8006d0c:	68fb      	ldr	r3, [r7, #12]
 8006d0e:	681b      	ldr	r3, [r3, #0]
 8006d10:	f022 0203 	bic.w	r2, r2, #3
 8006d14:	605a      	str	r2, [r3, #4]

  SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_DMA);
 8006d16:	68fb      	ldr	r3, [r7, #12]
 8006d18:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006d1a:	f043 0210 	orr.w	r2, r3, #16
 8006d1e:	68fb      	ldr	r3, [r7, #12]
 8006d20:	655a      	str	r2, [r3, #84]	@ 0x54
  hspi->State = HAL_SPI_STATE_READY;
 8006d22:	68fb      	ldr	r3, [r7, #12]
 8006d24:	2201      	movs	r2, #1
 8006d26:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51
  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d2a:	68f8      	ldr	r0, [r7, #12]
 8006d2c:	f7fb fb32 	bl	8002394 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d30:	bf00      	nop
 8006d32:	3710      	adds	r7, #16
 8006d34:	46bd      	mov	sp, r7
 8006d36:	bd80      	pop	{r7, pc}

08006d38 <SPI_DMAAbortOnError>:
  *         (To be called at end of DMA Abort procedure following error occurrence).
  * @param  hdma DMA handle.
  * @retval None
  */
static void SPI_DMAAbortOnError(DMA_HandleTypeDef *hdma)
{
 8006d38:	b580      	push	{r7, lr}
 8006d3a:	b084      	sub	sp, #16
 8006d3c:	af00      	add	r7, sp, #0
 8006d3e:	6078      	str	r0, [r7, #4]
  SPI_HandleTypeDef *hspi = (SPI_HandleTypeDef *)(((DMA_HandleTypeDef *)hdma)->Parent); /* Derogation MISRAC2012-Rule-11.5 */
 8006d40:	687b      	ldr	r3, [r7, #4]
 8006d42:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8006d44:	60fb      	str	r3, [r7, #12]
  hspi->RxXferCount = 0U;
 8006d46:	68fb      	ldr	r3, [r7, #12]
 8006d48:	2200      	movs	r2, #0
 8006d4a:	87da      	strh	r2, [r3, #62]	@ 0x3e
  hspi->TxXferCount = 0U;
 8006d4c:	68fb      	ldr	r3, [r7, #12]
 8006d4e:	2200      	movs	r2, #0
 8006d50:	86da      	strh	r2, [r3, #54]	@ 0x36

  /* Call user error callback */
#if (USE_HAL_SPI_REGISTER_CALLBACKS == 1U)
  hspi->ErrorCallback(hspi);
#else
  HAL_SPI_ErrorCallback(hspi);
 8006d52:	68f8      	ldr	r0, [r7, #12]
 8006d54:	f7fb fb1e 	bl	8002394 <HAL_SPI_ErrorCallback>
#endif /* USE_HAL_SPI_REGISTER_CALLBACKS */
}
 8006d58:	bf00      	nop
 8006d5a:	3710      	adds	r7, #16
 8006d5c:	46bd      	mov	sp, r7
 8006d5e:	bd80      	pop	{r7, pc}

08006d60 <SPI_WaitFlagStateUntilTimeout>:
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_WaitFlagStateUntilTimeout(SPI_HandleTypeDef *hspi, uint32_t Flag, FlagStatus State,
                                                       uint32_t Timeout, uint32_t Tickstart)
{
 8006d60:	b580      	push	{r7, lr}
 8006d62:	b088      	sub	sp, #32
 8006d64:	af00      	add	r7, sp, #0
 8006d66:	60f8      	str	r0, [r7, #12]
 8006d68:	60b9      	str	r1, [r7, #8]
 8006d6a:	603b      	str	r3, [r7, #0]
 8006d6c:	4613      	mov	r3, r2
 8006d6e:	71fb      	strb	r3, [r7, #7]
  __IO uint32_t count;
  uint32_t tmp_timeout;
  uint32_t tmp_tickstart;

  /* Adjust Timeout value  in case of end of transfer */
  tmp_timeout   = Timeout - (HAL_GetTick() - Tickstart);
 8006d70:	f7fb fe76 	bl	8002a60 <HAL_GetTick>
 8006d74:	4602      	mov	r2, r0
 8006d76:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8006d78:	1a9b      	subs	r3, r3, r2
 8006d7a:	683a      	ldr	r2, [r7, #0]
 8006d7c:	4413      	add	r3, r2
 8006d7e:	61fb      	str	r3, [r7, #28]
  tmp_tickstart = HAL_GetTick();
 8006d80:	f7fb fe6e 	bl	8002a60 <HAL_GetTick>
 8006d84:	61b8      	str	r0, [r7, #24]

  /* Calculate Timeout based on a software loop to avoid blocking issue if Systick is disabled */
  count = tmp_timeout * ((SystemCoreClock * 32U) >> 20U);
 8006d86:	4b39      	ldr	r3, [pc, #228]	@ (8006e6c <SPI_WaitFlagStateUntilTimeout+0x10c>)
 8006d88:	681b      	ldr	r3, [r3, #0]
 8006d8a:	015b      	lsls	r3, r3, #5
 8006d8c:	0d1b      	lsrs	r3, r3, #20
 8006d8e:	69fa      	ldr	r2, [r7, #28]
 8006d90:	fb02 f303 	mul.w	r3, r2, r3
 8006d94:	617b      	str	r3, [r7, #20]

  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006d96:	e054      	b.n	8006e42 <SPI_WaitFlagStateUntilTimeout+0xe2>
  {
    if (Timeout != HAL_MAX_DELAY)
 8006d98:	683b      	ldr	r3, [r7, #0]
 8006d9a:	f1b3 3fff 	cmp.w	r3, #4294967295
 8006d9e:	d050      	beq.n	8006e42 <SPI_WaitFlagStateUntilTimeout+0xe2>
    {
      if (((HAL_GetTick() - tmp_tickstart) >= tmp_timeout) || (tmp_timeout == 0U))
 8006da0:	f7fb fe5e 	bl	8002a60 <HAL_GetTick>
 8006da4:	4602      	mov	r2, r0
 8006da6:	69bb      	ldr	r3, [r7, #24]
 8006da8:	1ad3      	subs	r3, r2, r3
 8006daa:	69fa      	ldr	r2, [r7, #28]
 8006dac:	429a      	cmp	r2, r3
 8006dae:	d902      	bls.n	8006db6 <SPI_WaitFlagStateUntilTimeout+0x56>
 8006db0:	69fb      	ldr	r3, [r7, #28]
 8006db2:	2b00      	cmp	r3, #0
 8006db4:	d13d      	bne.n	8006e32 <SPI_WaitFlagStateUntilTimeout+0xd2>
        /* Disable the SPI and reset the CRC: the CRC value should be cleared
           on both master and slave sides in order to resynchronize the master
           and slave for their respective CRC calculation */

        /* Disable TXE, RXNE and ERR interrupts for the interrupt process */
        __HAL_SPI_DISABLE_IT(hspi, (SPI_IT_TXE | SPI_IT_RXNE | SPI_IT_ERR));
 8006db6:	68fb      	ldr	r3, [r7, #12]
 8006db8:	681b      	ldr	r3, [r3, #0]
 8006dba:	685a      	ldr	r2, [r3, #4]
 8006dbc:	68fb      	ldr	r3, [r7, #12]
 8006dbe:	681b      	ldr	r3, [r3, #0]
 8006dc0:	f022 02e0 	bic.w	r2, r2, #224	@ 0xe0
 8006dc4:	605a      	str	r2, [r3, #4]

        if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006dc6:	68fb      	ldr	r3, [r7, #12]
 8006dc8:	685b      	ldr	r3, [r3, #4]
 8006dca:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006dce:	d111      	bne.n	8006df4 <SPI_WaitFlagStateUntilTimeout+0x94>
 8006dd0:	68fb      	ldr	r3, [r7, #12]
 8006dd2:	689b      	ldr	r3, [r3, #8]
 8006dd4:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006dd8:	d004      	beq.n	8006de4 <SPI_WaitFlagStateUntilTimeout+0x84>
                                                     || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006dda:	68fb      	ldr	r3, [r7, #12]
 8006ddc:	689b      	ldr	r3, [r3, #8]
 8006dde:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006de2:	d107      	bne.n	8006df4 <SPI_WaitFlagStateUntilTimeout+0x94>
        {
          /* Disable SPI peripheral */
          __HAL_SPI_DISABLE(hspi);
 8006de4:	68fb      	ldr	r3, [r7, #12]
 8006de6:	681b      	ldr	r3, [r3, #0]
 8006de8:	681a      	ldr	r2, [r3, #0]
 8006dea:	68fb      	ldr	r3, [r7, #12]
 8006dec:	681b      	ldr	r3, [r3, #0]
 8006dee:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006df2:	601a      	str	r2, [r3, #0]
        }

        /* Reset CRC Calculation */
        if (hspi->Init.CRCCalculation == SPI_CRCCALCULATION_ENABLE)
 8006df4:	68fb      	ldr	r3, [r7, #12]
 8006df6:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8006df8:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8006dfc:	d10f      	bne.n	8006e1e <SPI_WaitFlagStateUntilTimeout+0xbe>
        {
          SPI_RESET_CRC(hspi);
 8006dfe:	68fb      	ldr	r3, [r7, #12]
 8006e00:	681b      	ldr	r3, [r3, #0]
 8006e02:	681a      	ldr	r2, [r3, #0]
 8006e04:	68fb      	ldr	r3, [r7, #12]
 8006e06:	681b      	ldr	r3, [r3, #0]
 8006e08:	f422 5200 	bic.w	r2, r2, #8192	@ 0x2000
 8006e0c:	601a      	str	r2, [r3, #0]
 8006e0e:	68fb      	ldr	r3, [r7, #12]
 8006e10:	681b      	ldr	r3, [r3, #0]
 8006e12:	681a      	ldr	r2, [r3, #0]
 8006e14:	68fb      	ldr	r3, [r7, #12]
 8006e16:	681b      	ldr	r3, [r3, #0]
 8006e18:	f442 5200 	orr.w	r2, r2, #8192	@ 0x2000
 8006e1c:	601a      	str	r2, [r3, #0]
        }

        hspi->State = HAL_SPI_STATE_READY;
 8006e1e:	68fb      	ldr	r3, [r7, #12]
 8006e20:	2201      	movs	r2, #1
 8006e22:	f883 2051 	strb.w	r2, [r3, #81]	@ 0x51

        /* Process Unlocked */
        __HAL_UNLOCK(hspi);
 8006e26:	68fb      	ldr	r3, [r7, #12]
 8006e28:	2200      	movs	r2, #0
 8006e2a:	f883 2050 	strb.w	r2, [r3, #80]	@ 0x50

        return HAL_TIMEOUT;
 8006e2e:	2303      	movs	r3, #3
 8006e30:	e017      	b.n	8006e62 <SPI_WaitFlagStateUntilTimeout+0x102>
      }
      /* If Systick is disabled or not incremented, deactivate timeout to go in disable loop procedure */
      if (count == 0U)
 8006e32:	697b      	ldr	r3, [r7, #20]
 8006e34:	2b00      	cmp	r3, #0
 8006e36:	d101      	bne.n	8006e3c <SPI_WaitFlagStateUntilTimeout+0xdc>
      {
        tmp_timeout = 0U;
 8006e38:	2300      	movs	r3, #0
 8006e3a:	61fb      	str	r3, [r7, #28]
      }
      count--;
 8006e3c:	697b      	ldr	r3, [r7, #20]
 8006e3e:	3b01      	subs	r3, #1
 8006e40:	617b      	str	r3, [r7, #20]
  while ((__HAL_SPI_GET_FLAG(hspi, Flag) ? SET : RESET) != State)
 8006e42:	68fb      	ldr	r3, [r7, #12]
 8006e44:	681b      	ldr	r3, [r3, #0]
 8006e46:	689a      	ldr	r2, [r3, #8]
 8006e48:	68bb      	ldr	r3, [r7, #8]
 8006e4a:	4013      	ands	r3, r2
 8006e4c:	68ba      	ldr	r2, [r7, #8]
 8006e4e:	429a      	cmp	r2, r3
 8006e50:	bf0c      	ite	eq
 8006e52:	2301      	moveq	r3, #1
 8006e54:	2300      	movne	r3, #0
 8006e56:	b2db      	uxtb	r3, r3
 8006e58:	461a      	mov	r2, r3
 8006e5a:	79fb      	ldrb	r3, [r7, #7]
 8006e5c:	429a      	cmp	r2, r3
 8006e5e:	d19b      	bne.n	8006d98 <SPI_WaitFlagStateUntilTimeout+0x38>
    }
  }

  return HAL_OK;
 8006e60:	2300      	movs	r3, #0
}
 8006e62:	4618      	mov	r0, r3
 8006e64:	3720      	adds	r7, #32
 8006e66:	46bd      	mov	sp, r7
 8006e68:	bd80      	pop	{r7, pc}
 8006e6a:	bf00      	nop
 8006e6c:	20000014 	.word	0x20000014

08006e70 <SPI_EndRxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTransaction(SPI_HandleTypeDef *hspi,  uint32_t Timeout, uint32_t Tickstart)
{
 8006e70:	b580      	push	{r7, lr}
 8006e72:	b086      	sub	sp, #24
 8006e74:	af02      	add	r7, sp, #8
 8006e76:	60f8      	str	r0, [r7, #12]
 8006e78:	60b9      	str	r1, [r7, #8]
 8006e7a:	607a      	str	r2, [r7, #4]
  if ((hspi->Init.Mode == SPI_MODE_MASTER) && ((hspi->Init.Direction == SPI_DIRECTION_1LINE)
 8006e7c:	68fb      	ldr	r3, [r7, #12]
 8006e7e:	685b      	ldr	r3, [r3, #4]
 8006e80:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006e84:	d111      	bne.n	8006eaa <SPI_EndRxTransaction+0x3a>
 8006e86:	68fb      	ldr	r3, [r7, #12]
 8006e88:	689b      	ldr	r3, [r3, #8]
 8006e8a:	f5b3 4f00 	cmp.w	r3, #32768	@ 0x8000
 8006e8e:	d004      	beq.n	8006e9a <SPI_EndRxTransaction+0x2a>
                                               || (hspi->Init.Direction == SPI_DIRECTION_2LINES_RXONLY)))
 8006e90:	68fb      	ldr	r3, [r7, #12]
 8006e92:	689b      	ldr	r3, [r3, #8]
 8006e94:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006e98:	d107      	bne.n	8006eaa <SPI_EndRxTransaction+0x3a>
  {
    /* Disable SPI peripheral */
    __HAL_SPI_DISABLE(hspi);
 8006e9a:	68fb      	ldr	r3, [r7, #12]
 8006e9c:	681b      	ldr	r3, [r3, #0]
 8006e9e:	681a      	ldr	r2, [r3, #0]
 8006ea0:	68fb      	ldr	r3, [r7, #12]
 8006ea2:	681b      	ldr	r3, [r3, #0]
 8006ea4:	f022 0240 	bic.w	r2, r2, #64	@ 0x40
 8006ea8:	601a      	str	r2, [r3, #0]
  }

  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006eaa:	68fb      	ldr	r3, [r7, #12]
 8006eac:	685b      	ldr	r3, [r3, #4]
 8006eae:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006eb2:	d12a      	bne.n	8006f0a <SPI_EndRxTransaction+0x9a>
  {
    if (hspi->Init.Direction != SPI_DIRECTION_2LINES_RXONLY)
 8006eb4:	68fb      	ldr	r3, [r7, #12]
 8006eb6:	689b      	ldr	r3, [r3, #8]
 8006eb8:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8006ebc:	d012      	beq.n	8006ee4 <SPI_EndRxTransaction+0x74>
    {
      /* Control the BSY flag */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006ebe:	687b      	ldr	r3, [r7, #4]
 8006ec0:	9300      	str	r3, [sp, #0]
 8006ec2:	68bb      	ldr	r3, [r7, #8]
 8006ec4:	2200      	movs	r2, #0
 8006ec6:	2180      	movs	r1, #128	@ 0x80
 8006ec8:	68f8      	ldr	r0, [r7, #12]
 8006eca:	f7ff ff49 	bl	8006d60 <SPI_WaitFlagStateUntilTimeout>
 8006ece:	4603      	mov	r3, r0
 8006ed0:	2b00      	cmp	r3, #0
 8006ed2:	d02d      	beq.n	8006f30 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006ed4:	68fb      	ldr	r3, [r7, #12]
 8006ed6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006ed8:	f043 0220 	orr.w	r2, r3, #32
 8006edc:	68fb      	ldr	r3, [r7, #12]
 8006ede:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006ee0:	2303      	movs	r3, #3
 8006ee2:	e026      	b.n	8006f32 <SPI_EndRxTransaction+0xc2>
      }
    }
    else
    {
      /* Wait the RXNE reset */
      if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006ee4:	687b      	ldr	r3, [r7, #4]
 8006ee6:	9300      	str	r3, [sp, #0]
 8006ee8:	68bb      	ldr	r3, [r7, #8]
 8006eea:	2200      	movs	r2, #0
 8006eec:	2101      	movs	r1, #1
 8006eee:	68f8      	ldr	r0, [r7, #12]
 8006ef0:	f7ff ff36 	bl	8006d60 <SPI_WaitFlagStateUntilTimeout>
 8006ef4:	4603      	mov	r3, r0
 8006ef6:	2b00      	cmp	r3, #0
 8006ef8:	d01a      	beq.n	8006f30 <SPI_EndRxTransaction+0xc0>
      {
        SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006efa:	68fb      	ldr	r3, [r7, #12]
 8006efc:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006efe:	f043 0220 	orr.w	r2, r3, #32
 8006f02:	68fb      	ldr	r3, [r7, #12]
 8006f04:	655a      	str	r2, [r3, #84]	@ 0x54
        return HAL_TIMEOUT;
 8006f06:	2303      	movs	r3, #3
 8006f08:	e013      	b.n	8006f32 <SPI_EndRxTransaction+0xc2>
    }
  }
  else
  {
    /* Wait the RXNE reset */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_RXNE, RESET, Timeout, Tickstart) != HAL_OK)
 8006f0a:	687b      	ldr	r3, [r7, #4]
 8006f0c:	9300      	str	r3, [sp, #0]
 8006f0e:	68bb      	ldr	r3, [r7, #8]
 8006f10:	2200      	movs	r2, #0
 8006f12:	2101      	movs	r1, #1
 8006f14:	68f8      	ldr	r0, [r7, #12]
 8006f16:	f7ff ff23 	bl	8006d60 <SPI_WaitFlagStateUntilTimeout>
 8006f1a:	4603      	mov	r3, r0
 8006f1c:	2b00      	cmp	r3, #0
 8006f1e:	d007      	beq.n	8006f30 <SPI_EndRxTransaction+0xc0>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f20:	68fb      	ldr	r3, [r7, #12]
 8006f22:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f24:	f043 0220 	orr.w	r2, r3, #32
 8006f28:	68fb      	ldr	r3, [r7, #12]
 8006f2a:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006f2c:	2303      	movs	r3, #3
 8006f2e:	e000      	b.n	8006f32 <SPI_EndRxTransaction+0xc2>
    }
  }
  return HAL_OK;
 8006f30:	2300      	movs	r3, #0
}
 8006f32:	4618      	mov	r0, r3
 8006f34:	3710      	adds	r7, #16
 8006f36:	46bd      	mov	sp, r7
 8006f38:	bd80      	pop	{r7, pc}
	...

08006f3c <SPI_EndRxTxTransaction>:
  * @param  Timeout Timeout duration
  * @param  Tickstart tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef SPI_EndRxTxTransaction(SPI_HandleTypeDef *hspi, uint32_t Timeout, uint32_t Tickstart)
{
 8006f3c:	b580      	push	{r7, lr}
 8006f3e:	b088      	sub	sp, #32
 8006f40:	af02      	add	r7, sp, #8
 8006f42:	60f8      	str	r0, [r7, #12]
 8006f44:	60b9      	str	r1, [r7, #8]
 8006f46:	607a      	str	r2, [r7, #4]
  /* Wait until TXE flag */
  if(SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_TXE, SET, Timeout, Tickstart) != HAL_OK)
 8006f48:	687b      	ldr	r3, [r7, #4]
 8006f4a:	9300      	str	r3, [sp, #0]
 8006f4c:	68bb      	ldr	r3, [r7, #8]
 8006f4e:	2201      	movs	r2, #1
 8006f50:	2102      	movs	r1, #2
 8006f52:	68f8      	ldr	r0, [r7, #12]
 8006f54:	f7ff ff04 	bl	8006d60 <SPI_WaitFlagStateUntilTimeout>
 8006f58:	4603      	mov	r3, r0
 8006f5a:	2b00      	cmp	r3, #0
 8006f5c:	d007      	beq.n	8006f6e <SPI_EndRxTxTransaction+0x32>
  {
    SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006f5e:	68fb      	ldr	r3, [r7, #12]
 8006f60:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006f62:	f043 0220 	orr.w	r2, r3, #32
 8006f66:	68fb      	ldr	r3, [r7, #12]
 8006f68:	655a      	str	r2, [r3, #84]	@ 0x54
    return HAL_TIMEOUT;
 8006f6a:	2303      	movs	r3, #3
 8006f6c:	e032      	b.n	8006fd4 <SPI_EndRxTxTransaction+0x98>
  }

  /* Timeout in µs */
  __IO uint32_t count = SPI_BSY_FLAG_WORKAROUND_TIMEOUT * (SystemCoreClock / 24U / 1000000U);
 8006f6e:	4b1b      	ldr	r3, [pc, #108]	@ (8006fdc <SPI_EndRxTxTransaction+0xa0>)
 8006f70:	681b      	ldr	r3, [r3, #0]
 8006f72:	4a1b      	ldr	r2, [pc, #108]	@ (8006fe0 <SPI_EndRxTxTransaction+0xa4>)
 8006f74:	fba2 2303 	umull	r2, r3, r2, r3
 8006f78:	0d5b      	lsrs	r3, r3, #21
 8006f7a:	f44f 727a 	mov.w	r2, #1000	@ 0x3e8
 8006f7e:	fb02 f303 	mul.w	r3, r2, r3
 8006f82:	617b      	str	r3, [r7, #20]
  /* Erratasheet: BSY bit may stay high at the end of a data transfer in Slave mode */
  if (hspi->Init.Mode == SPI_MODE_MASTER)
 8006f84:	68fb      	ldr	r3, [r7, #12]
 8006f86:	685b      	ldr	r3, [r3, #4]
 8006f88:	f5b3 7f82 	cmp.w	r3, #260	@ 0x104
 8006f8c:	d112      	bne.n	8006fb4 <SPI_EndRxTxTransaction+0x78>
  {
    /* Control the BSY flag */
    if (SPI_WaitFlagStateUntilTimeout(hspi, SPI_FLAG_BSY, RESET, Timeout, Tickstart) != HAL_OK)
 8006f8e:	687b      	ldr	r3, [r7, #4]
 8006f90:	9300      	str	r3, [sp, #0]
 8006f92:	68bb      	ldr	r3, [r7, #8]
 8006f94:	2200      	movs	r2, #0
 8006f96:	2180      	movs	r1, #128	@ 0x80
 8006f98:	68f8      	ldr	r0, [r7, #12]
 8006f9a:	f7ff fee1 	bl	8006d60 <SPI_WaitFlagStateUntilTimeout>
 8006f9e:	4603      	mov	r3, r0
 8006fa0:	2b00      	cmp	r3, #0
 8006fa2:	d016      	beq.n	8006fd2 <SPI_EndRxTxTransaction+0x96>
    {
      SET_BIT(hspi->ErrorCode, HAL_SPI_ERROR_FLAG);
 8006fa4:	68fb      	ldr	r3, [r7, #12]
 8006fa6:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8006fa8:	f043 0220 	orr.w	r2, r3, #32
 8006fac:	68fb      	ldr	r3, [r7, #12]
 8006fae:	655a      	str	r2, [r3, #84]	@ 0x54
      return HAL_TIMEOUT;
 8006fb0:	2303      	movs	r3, #3
 8006fb2:	e00f      	b.n	8006fd4 <SPI_EndRxTxTransaction+0x98>
    * User have to calculate the timeout value to fit with the time of 1 byte transfer.
    * This time is directly link with the SPI clock from Master device.
    */
    do
    {
      if (count == 0U)
 8006fb4:	697b      	ldr	r3, [r7, #20]
 8006fb6:	2b00      	cmp	r3, #0
 8006fb8:	d00a      	beq.n	8006fd0 <SPI_EndRxTxTransaction+0x94>
      {
        break;
      }
      count--;
 8006fba:	697b      	ldr	r3, [r7, #20]
 8006fbc:	3b01      	subs	r3, #1
 8006fbe:	617b      	str	r3, [r7, #20]
    } while (__HAL_SPI_GET_FLAG(hspi, SPI_FLAG_BSY) != RESET);
 8006fc0:	68fb      	ldr	r3, [r7, #12]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	689b      	ldr	r3, [r3, #8]
 8006fc6:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8006fca:	2b80      	cmp	r3, #128	@ 0x80
 8006fcc:	d0f2      	beq.n	8006fb4 <SPI_EndRxTxTransaction+0x78>
 8006fce:	e000      	b.n	8006fd2 <SPI_EndRxTxTransaction+0x96>
        break;
 8006fd0:	bf00      	nop
  }

  return HAL_OK;
 8006fd2:	2300      	movs	r3, #0
}
 8006fd4:	4618      	mov	r0, r3
 8006fd6:	3718      	adds	r7, #24
 8006fd8:	46bd      	mov	sp, r7
 8006fda:	bd80      	pop	{r7, pc}
 8006fdc:	20000014 	.word	0x20000014
 8006fe0:	165e9f81 	.word	0x165e9f81

08006fe4 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8006fe4:	b580      	push	{r7, lr}
 8006fe6:	b082      	sub	sp, #8
 8006fe8:	af00      	add	r7, sp, #0
 8006fea:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 8006fec:	687b      	ldr	r3, [r7, #4]
 8006fee:	2b00      	cmp	r3, #0
 8006ff0:	d101      	bne.n	8006ff6 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8006ff2:	2301      	movs	r3, #1
 8006ff4:	e041      	b.n	800707a <HAL_TIM_Base_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8006ff6:	687b      	ldr	r3, [r7, #4]
 8006ff8:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8006ffc:	b2db      	uxtb	r3, r3
 8006ffe:	2b00      	cmp	r3, #0
 8007000:	d106      	bne.n	8007010 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007002:	687b      	ldr	r3, [r7, #4]
 8007004:	2200      	movs	r2, #0
 8007006:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800700a:	6878      	ldr	r0, [r7, #4]
 800700c:	f7fa fe0a 	bl	8001c24 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007010:	687b      	ldr	r3, [r7, #4]
 8007012:	2202      	movs	r2, #2
 8007014:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007018:	687b      	ldr	r3, [r7, #4]
 800701a:	681a      	ldr	r2, [r3, #0]
 800701c:	687b      	ldr	r3, [r7, #4]
 800701e:	3304      	adds	r3, #4
 8007020:	4619      	mov	r1, r3
 8007022:	4610      	mov	r0, r2
 8007024:	f000 fc62 	bl	80078ec <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 8007028:	687b      	ldr	r3, [r7, #4]
 800702a:	2201      	movs	r2, #1
 800702c:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007030:	687b      	ldr	r3, [r7, #4]
 8007032:	2201      	movs	r2, #1
 8007034:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007038:	687b      	ldr	r3, [r7, #4]
 800703a:	2201      	movs	r2, #1
 800703c:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 8007040:	687b      	ldr	r3, [r7, #4]
 8007042:	2201      	movs	r2, #1
 8007044:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 8007048:	687b      	ldr	r3, [r7, #4]
 800704a:	2201      	movs	r2, #1
 800704c:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 8007050:	687b      	ldr	r3, [r7, #4]
 8007052:	2201      	movs	r2, #1
 8007054:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 8007058:	687b      	ldr	r3, [r7, #4]
 800705a:	2201      	movs	r2, #1
 800705c:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 8007060:	687b      	ldr	r3, [r7, #4]
 8007062:	2201      	movs	r2, #1
 8007064:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 8007068:	687b      	ldr	r3, [r7, #4]
 800706a:	2201      	movs	r2, #1
 800706c:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 8007070:	687b      	ldr	r3, [r7, #4]
 8007072:	2201      	movs	r2, #1
 8007074:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 8007078:	2300      	movs	r3, #0
}
 800707a:	4618      	mov	r0, r3
 800707c:	3708      	adds	r7, #8
 800707e:	46bd      	mov	sp, r7
 8007080:	bd80      	pop	{r7, pc}
	...

08007084 <HAL_TIM_Base_Start_IT>:
  * @brief  Starts the TIM Base generation in interrupt mode.
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Start_IT(TIM_HandleTypeDef *htim)
{
 8007084:	b480      	push	{r7}
 8007086:	b085      	sub	sp, #20
 8007088:	af00      	add	r7, sp, #0
 800708a:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_INSTANCE(htim->Instance));

  /* Check the TIM state */
  if (htim->State != HAL_TIM_STATE_READY)
 800708c:	687b      	ldr	r3, [r7, #4]
 800708e:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 8007092:	b2db      	uxtb	r3, r3
 8007094:	2b01      	cmp	r3, #1
 8007096:	d001      	beq.n	800709c <HAL_TIM_Base_Start_IT+0x18>
  {
    return HAL_ERROR;
 8007098:	2301      	movs	r3, #1
 800709a:	e04e      	b.n	800713a <HAL_TIM_Base_Start_IT+0xb6>
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 800709c:	687b      	ldr	r3, [r7, #4]
 800709e:	2202      	movs	r2, #2
 80070a0:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Enable the TIM Update interrupt */
  __HAL_TIM_ENABLE_IT(htim, TIM_IT_UPDATE);
 80070a4:	687b      	ldr	r3, [r7, #4]
 80070a6:	681b      	ldr	r3, [r3, #0]
 80070a8:	68da      	ldr	r2, [r3, #12]
 80070aa:	687b      	ldr	r3, [r7, #4]
 80070ac:	681b      	ldr	r3, [r3, #0]
 80070ae:	f042 0201 	orr.w	r2, r2, #1
 80070b2:	60da      	str	r2, [r3, #12]

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80070b4:	687b      	ldr	r3, [r7, #4]
 80070b6:	681b      	ldr	r3, [r3, #0]
 80070b8:	4a23      	ldr	r2, [pc, #140]	@ (8007148 <HAL_TIM_Base_Start_IT+0xc4>)
 80070ba:	4293      	cmp	r3, r2
 80070bc:	d022      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070be:	687b      	ldr	r3, [r7, #4]
 80070c0:	681b      	ldr	r3, [r3, #0]
 80070c2:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 80070c6:	d01d      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070c8:	687b      	ldr	r3, [r7, #4]
 80070ca:	681b      	ldr	r3, [r3, #0]
 80070cc:	4a1f      	ldr	r2, [pc, #124]	@ (800714c <HAL_TIM_Base_Start_IT+0xc8>)
 80070ce:	4293      	cmp	r3, r2
 80070d0:	d018      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070d2:	687b      	ldr	r3, [r7, #4]
 80070d4:	681b      	ldr	r3, [r3, #0]
 80070d6:	4a1e      	ldr	r2, [pc, #120]	@ (8007150 <HAL_TIM_Base_Start_IT+0xcc>)
 80070d8:	4293      	cmp	r3, r2
 80070da:	d013      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070dc:	687b      	ldr	r3, [r7, #4]
 80070de:	681b      	ldr	r3, [r3, #0]
 80070e0:	4a1c      	ldr	r2, [pc, #112]	@ (8007154 <HAL_TIM_Base_Start_IT+0xd0>)
 80070e2:	4293      	cmp	r3, r2
 80070e4:	d00e      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070e6:	687b      	ldr	r3, [r7, #4]
 80070e8:	681b      	ldr	r3, [r3, #0]
 80070ea:	4a1b      	ldr	r2, [pc, #108]	@ (8007158 <HAL_TIM_Base_Start_IT+0xd4>)
 80070ec:	4293      	cmp	r3, r2
 80070ee:	d009      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070f0:	687b      	ldr	r3, [r7, #4]
 80070f2:	681b      	ldr	r3, [r3, #0]
 80070f4:	4a19      	ldr	r2, [pc, #100]	@ (800715c <HAL_TIM_Base_Start_IT+0xd8>)
 80070f6:	4293      	cmp	r3, r2
 80070f8:	d004      	beq.n	8007104 <HAL_TIM_Base_Start_IT+0x80>
 80070fa:	687b      	ldr	r3, [r7, #4]
 80070fc:	681b      	ldr	r3, [r3, #0]
 80070fe:	4a18      	ldr	r2, [pc, #96]	@ (8007160 <HAL_TIM_Base_Start_IT+0xdc>)
 8007100:	4293      	cmp	r3, r2
 8007102:	d111      	bne.n	8007128 <HAL_TIM_Base_Start_IT+0xa4>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	681b      	ldr	r3, [r3, #0]
 8007108:	689b      	ldr	r3, [r3, #8]
 800710a:	f003 0307 	and.w	r3, r3, #7
 800710e:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007110:	68fb      	ldr	r3, [r7, #12]
 8007112:	2b06      	cmp	r3, #6
 8007114:	d010      	beq.n	8007138 <HAL_TIM_Base_Start_IT+0xb4>
    {
      __HAL_TIM_ENABLE(htim);
 8007116:	687b      	ldr	r3, [r7, #4]
 8007118:	681b      	ldr	r3, [r3, #0]
 800711a:	681a      	ldr	r2, [r3, #0]
 800711c:	687b      	ldr	r3, [r7, #4]
 800711e:	681b      	ldr	r3, [r3, #0]
 8007120:	f042 0201 	orr.w	r2, r2, #1
 8007124:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007126:	e007      	b.n	8007138 <HAL_TIM_Base_Start_IT+0xb4>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007128:	687b      	ldr	r3, [r7, #4]
 800712a:	681b      	ldr	r3, [r3, #0]
 800712c:	681a      	ldr	r2, [r3, #0]
 800712e:	687b      	ldr	r3, [r7, #4]
 8007130:	681b      	ldr	r3, [r3, #0]
 8007132:	f042 0201 	orr.w	r2, r2, #1
 8007136:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007138:	2300      	movs	r3, #0
}
 800713a:	4618      	mov	r0, r3
 800713c:	3714      	adds	r7, #20
 800713e:	46bd      	mov	sp, r7
 8007140:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007144:	4770      	bx	lr
 8007146:	bf00      	nop
 8007148:	40010000 	.word	0x40010000
 800714c:	40000400 	.word	0x40000400
 8007150:	40000800 	.word	0x40000800
 8007154:	40000c00 	.word	0x40000c00
 8007158:	40010400 	.word	0x40010400
 800715c:	40014000 	.word	0x40014000
 8007160:	40001800 	.word	0x40001800

08007164 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 8007164:	b580      	push	{r7, lr}
 8007166:	b082      	sub	sp, #8
 8007168:	af00      	add	r7, sp, #0
 800716a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800716c:	687b      	ldr	r3, [r7, #4]
 800716e:	2b00      	cmp	r3, #0
 8007170:	d101      	bne.n	8007176 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 8007172:	2301      	movs	r3, #1
 8007174:	e041      	b.n	80071fa <HAL_TIM_PWM_Init+0x96>
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim, htim->Init.Period));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	f893 303d 	ldrb.w	r3, [r3, #61]	@ 0x3d
 800717c:	b2db      	uxtb	r3, r3
 800717e:	2b00      	cmp	r3, #0
 8007180:	d106      	bne.n	8007190 <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8007182:	687b      	ldr	r3, [r7, #4]
 8007184:	2200      	movs	r2, #0
 8007186:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 800718a:	6878      	ldr	r0, [r7, #4]
 800718c:	f000 f839 	bl	8007202 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007190:	687b      	ldr	r3, [r7, #4]
 8007192:	2202      	movs	r2, #2
 8007194:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 8007198:	687b      	ldr	r3, [r7, #4]
 800719a:	681a      	ldr	r2, [r3, #0]
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	3304      	adds	r3, #4
 80071a0:	4619      	mov	r1, r3
 80071a2:	4610      	mov	r0, r2
 80071a4:	f000 fba2 	bl	80078ec <TIM_Base_SetConfig>

  /* Initialize the DMA burst operation state */
  htim->DMABurstState = HAL_DMA_BURST_STATE_READY;
 80071a8:	687b      	ldr	r3, [r7, #4]
 80071aa:	2201      	movs	r2, #1
 80071ac:	f883 2046 	strb.w	r2, [r3, #70]	@ 0x46

  /* Initialize the TIM channels state */
  TIM_CHANNEL_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80071b0:	687b      	ldr	r3, [r7, #4]
 80071b2:	2201      	movs	r2, #1
 80071b4:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 80071b8:	687b      	ldr	r3, [r7, #4]
 80071ba:	2201      	movs	r2, #1
 80071bc:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80071c0:	687b      	ldr	r3, [r7, #4]
 80071c2:	2201      	movs	r2, #1
 80071c4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80071c8:	687b      	ldr	r3, [r7, #4]
 80071ca:	2201      	movs	r2, #1
 80071cc:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41
  TIM_CHANNEL_N_STATE_SET_ALL(htim, HAL_TIM_CHANNEL_STATE_READY);
 80071d0:	687b      	ldr	r3, [r7, #4]
 80071d2:	2201      	movs	r2, #1
 80071d4:	f883 2042 	strb.w	r2, [r3, #66]	@ 0x42
 80071d8:	687b      	ldr	r3, [r7, #4]
 80071da:	2201      	movs	r2, #1
 80071dc:	f883 2043 	strb.w	r2, [r3, #67]	@ 0x43
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	2201      	movs	r2, #1
 80071e4:	f883 2044 	strb.w	r2, [r3, #68]	@ 0x44
 80071e8:	687b      	ldr	r3, [r7, #4]
 80071ea:	2201      	movs	r2, #1
 80071ec:	f883 2045 	strb.w	r2, [r3, #69]	@ 0x45

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 80071f0:	687b      	ldr	r3, [r7, #4]
 80071f2:	2201      	movs	r2, #1
 80071f4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  return HAL_OK;
 80071f8:	2300      	movs	r3, #0
}
 80071fa:	4618      	mov	r0, r3
 80071fc:	3708      	adds	r7, #8
 80071fe:	46bd      	mov	sp, r7
 8007200:	bd80      	pop	{r7, pc}

08007202 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 8007202:	b480      	push	{r7}
 8007204:	b083      	sub	sp, #12
 8007206:	af00      	add	r7, sp, #0
 8007208:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 800720a:	bf00      	nop
 800720c:	370c      	adds	r7, #12
 800720e:	46bd      	mov	sp, r7
 8007210:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007214:	4770      	bx	lr
	...

08007218 <HAL_TIM_PWM_Start>:
  *            @arg TIM_CHANNEL_3: TIM Channel 3 selected
  *            @arg TIM_CHANNEL_4: TIM Channel 4 selected
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Start(TIM_HandleTypeDef *htim, uint32_t Channel)
{
 8007218:	b580      	push	{r7, lr}
 800721a:	b084      	sub	sp, #16
 800721c:	af00      	add	r7, sp, #0
 800721e:	6078      	str	r0, [r7, #4]
 8007220:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_TIM_CCX_INSTANCE(htim->Instance, Channel));

  /* Check the TIM channel state */
  if (TIM_CHANNEL_STATE_GET(htim, Channel) != HAL_TIM_CHANNEL_STATE_READY)
 8007222:	683b      	ldr	r3, [r7, #0]
 8007224:	2b00      	cmp	r3, #0
 8007226:	d109      	bne.n	800723c <HAL_TIM_PWM_Start+0x24>
 8007228:	687b      	ldr	r3, [r7, #4]
 800722a:	f893 303e 	ldrb.w	r3, [r3, #62]	@ 0x3e
 800722e:	b2db      	uxtb	r3, r3
 8007230:	2b01      	cmp	r3, #1
 8007232:	bf14      	ite	ne
 8007234:	2301      	movne	r3, #1
 8007236:	2300      	moveq	r3, #0
 8007238:	b2db      	uxtb	r3, r3
 800723a:	e022      	b.n	8007282 <HAL_TIM_PWM_Start+0x6a>
 800723c:	683b      	ldr	r3, [r7, #0]
 800723e:	2b04      	cmp	r3, #4
 8007240:	d109      	bne.n	8007256 <HAL_TIM_PWM_Start+0x3e>
 8007242:	687b      	ldr	r3, [r7, #4]
 8007244:	f893 303f 	ldrb.w	r3, [r3, #63]	@ 0x3f
 8007248:	b2db      	uxtb	r3, r3
 800724a:	2b01      	cmp	r3, #1
 800724c:	bf14      	ite	ne
 800724e:	2301      	movne	r3, #1
 8007250:	2300      	moveq	r3, #0
 8007252:	b2db      	uxtb	r3, r3
 8007254:	e015      	b.n	8007282 <HAL_TIM_PWM_Start+0x6a>
 8007256:	683b      	ldr	r3, [r7, #0]
 8007258:	2b08      	cmp	r3, #8
 800725a:	d109      	bne.n	8007270 <HAL_TIM_PWM_Start+0x58>
 800725c:	687b      	ldr	r3, [r7, #4]
 800725e:	f893 3040 	ldrb.w	r3, [r3, #64]	@ 0x40
 8007262:	b2db      	uxtb	r3, r3
 8007264:	2b01      	cmp	r3, #1
 8007266:	bf14      	ite	ne
 8007268:	2301      	movne	r3, #1
 800726a:	2300      	moveq	r3, #0
 800726c:	b2db      	uxtb	r3, r3
 800726e:	e008      	b.n	8007282 <HAL_TIM_PWM_Start+0x6a>
 8007270:	687b      	ldr	r3, [r7, #4]
 8007272:	f893 3041 	ldrb.w	r3, [r3, #65]	@ 0x41
 8007276:	b2db      	uxtb	r3, r3
 8007278:	2b01      	cmp	r3, #1
 800727a:	bf14      	ite	ne
 800727c:	2301      	movne	r3, #1
 800727e:	2300      	moveq	r3, #0
 8007280:	b2db      	uxtb	r3, r3
 8007282:	2b00      	cmp	r3, #0
 8007284:	d001      	beq.n	800728a <HAL_TIM_PWM_Start+0x72>
  {
    return HAL_ERROR;
 8007286:	2301      	movs	r3, #1
 8007288:	e07c      	b.n	8007384 <HAL_TIM_PWM_Start+0x16c>
  }

  /* Set the TIM channel state */
  TIM_CHANNEL_STATE_SET(htim, Channel, HAL_TIM_CHANNEL_STATE_BUSY);
 800728a:	683b      	ldr	r3, [r7, #0]
 800728c:	2b00      	cmp	r3, #0
 800728e:	d104      	bne.n	800729a <HAL_TIM_PWM_Start+0x82>
 8007290:	687b      	ldr	r3, [r7, #4]
 8007292:	2202      	movs	r2, #2
 8007294:	f883 203e 	strb.w	r2, [r3, #62]	@ 0x3e
 8007298:	e013      	b.n	80072c2 <HAL_TIM_PWM_Start+0xaa>
 800729a:	683b      	ldr	r3, [r7, #0]
 800729c:	2b04      	cmp	r3, #4
 800729e:	d104      	bne.n	80072aa <HAL_TIM_PWM_Start+0x92>
 80072a0:	687b      	ldr	r3, [r7, #4]
 80072a2:	2202      	movs	r2, #2
 80072a4:	f883 203f 	strb.w	r2, [r3, #63]	@ 0x3f
 80072a8:	e00b      	b.n	80072c2 <HAL_TIM_PWM_Start+0xaa>
 80072aa:	683b      	ldr	r3, [r7, #0]
 80072ac:	2b08      	cmp	r3, #8
 80072ae:	d104      	bne.n	80072ba <HAL_TIM_PWM_Start+0xa2>
 80072b0:	687b      	ldr	r3, [r7, #4]
 80072b2:	2202      	movs	r2, #2
 80072b4:	f883 2040 	strb.w	r2, [r3, #64]	@ 0x40
 80072b8:	e003      	b.n	80072c2 <HAL_TIM_PWM_Start+0xaa>
 80072ba:	687b      	ldr	r3, [r7, #4]
 80072bc:	2202      	movs	r2, #2
 80072be:	f883 2041 	strb.w	r2, [r3, #65]	@ 0x41

  /* Enable the Capture compare channel */
  TIM_CCxChannelCmd(htim->Instance, Channel, TIM_CCx_ENABLE);
 80072c2:	687b      	ldr	r3, [r7, #4]
 80072c4:	681b      	ldr	r3, [r3, #0]
 80072c6:	2201      	movs	r2, #1
 80072c8:	6839      	ldr	r1, [r7, #0]
 80072ca:	4618      	mov	r0, r3
 80072cc:	f000 fe04 	bl	8007ed8 <TIM_CCxChannelCmd>

  if (IS_TIM_BREAK_INSTANCE(htim->Instance) != RESET)
 80072d0:	687b      	ldr	r3, [r7, #4]
 80072d2:	681b      	ldr	r3, [r3, #0]
 80072d4:	4a2d      	ldr	r2, [pc, #180]	@ (800738c <HAL_TIM_PWM_Start+0x174>)
 80072d6:	4293      	cmp	r3, r2
 80072d8:	d004      	beq.n	80072e4 <HAL_TIM_PWM_Start+0xcc>
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	681b      	ldr	r3, [r3, #0]
 80072de:	4a2c      	ldr	r2, [pc, #176]	@ (8007390 <HAL_TIM_PWM_Start+0x178>)
 80072e0:	4293      	cmp	r3, r2
 80072e2:	d101      	bne.n	80072e8 <HAL_TIM_PWM_Start+0xd0>
 80072e4:	2301      	movs	r3, #1
 80072e6:	e000      	b.n	80072ea <HAL_TIM_PWM_Start+0xd2>
 80072e8:	2300      	movs	r3, #0
 80072ea:	2b00      	cmp	r3, #0
 80072ec:	d007      	beq.n	80072fe <HAL_TIM_PWM_Start+0xe6>
  {
    /* Enable the main output */
    __HAL_TIM_MOE_ENABLE(htim);
 80072ee:	687b      	ldr	r3, [r7, #4]
 80072f0:	681b      	ldr	r3, [r3, #0]
 80072f2:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80072f4:	687b      	ldr	r3, [r7, #4]
 80072f6:	681b      	ldr	r3, [r3, #0]
 80072f8:	f442 4200 	orr.w	r2, r2, #32768	@ 0x8000
 80072fc:	645a      	str	r2, [r3, #68]	@ 0x44
  }

  /* Enable the Peripheral, except in trigger mode where enable is automatically done with trigger */
  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 80072fe:	687b      	ldr	r3, [r7, #4]
 8007300:	681b      	ldr	r3, [r3, #0]
 8007302:	4a22      	ldr	r2, [pc, #136]	@ (800738c <HAL_TIM_PWM_Start+0x174>)
 8007304:	4293      	cmp	r3, r2
 8007306:	d022      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	681b      	ldr	r3, [r3, #0]
 800730c:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007310:	d01d      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 8007312:	687b      	ldr	r3, [r7, #4]
 8007314:	681b      	ldr	r3, [r3, #0]
 8007316:	4a1f      	ldr	r2, [pc, #124]	@ (8007394 <HAL_TIM_PWM_Start+0x17c>)
 8007318:	4293      	cmp	r3, r2
 800731a:	d018      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 800731c:	687b      	ldr	r3, [r7, #4]
 800731e:	681b      	ldr	r3, [r3, #0]
 8007320:	4a1d      	ldr	r2, [pc, #116]	@ (8007398 <HAL_TIM_PWM_Start+0x180>)
 8007322:	4293      	cmp	r3, r2
 8007324:	d013      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 8007326:	687b      	ldr	r3, [r7, #4]
 8007328:	681b      	ldr	r3, [r3, #0]
 800732a:	4a1c      	ldr	r2, [pc, #112]	@ (800739c <HAL_TIM_PWM_Start+0x184>)
 800732c:	4293      	cmp	r3, r2
 800732e:	d00e      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 8007330:	687b      	ldr	r3, [r7, #4]
 8007332:	681b      	ldr	r3, [r3, #0]
 8007334:	4a16      	ldr	r2, [pc, #88]	@ (8007390 <HAL_TIM_PWM_Start+0x178>)
 8007336:	4293      	cmp	r3, r2
 8007338:	d009      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 800733a:	687b      	ldr	r3, [r7, #4]
 800733c:	681b      	ldr	r3, [r3, #0]
 800733e:	4a18      	ldr	r2, [pc, #96]	@ (80073a0 <HAL_TIM_PWM_Start+0x188>)
 8007340:	4293      	cmp	r3, r2
 8007342:	d004      	beq.n	800734e <HAL_TIM_PWM_Start+0x136>
 8007344:	687b      	ldr	r3, [r7, #4]
 8007346:	681b      	ldr	r3, [r3, #0]
 8007348:	4a16      	ldr	r2, [pc, #88]	@ (80073a4 <HAL_TIM_PWM_Start+0x18c>)
 800734a:	4293      	cmp	r3, r2
 800734c:	d111      	bne.n	8007372 <HAL_TIM_PWM_Start+0x15a>
  {
    tmpsmcr = htim->Instance->SMCR & TIM_SMCR_SMS;
 800734e:	687b      	ldr	r3, [r7, #4]
 8007350:	681b      	ldr	r3, [r3, #0]
 8007352:	689b      	ldr	r3, [r3, #8]
 8007354:	f003 0307 	and.w	r3, r3, #7
 8007358:	60fb      	str	r3, [r7, #12]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 800735a:	68fb      	ldr	r3, [r7, #12]
 800735c:	2b06      	cmp	r3, #6
 800735e:	d010      	beq.n	8007382 <HAL_TIM_PWM_Start+0x16a>
    {
      __HAL_TIM_ENABLE(htim);
 8007360:	687b      	ldr	r3, [r7, #4]
 8007362:	681b      	ldr	r3, [r3, #0]
 8007364:	681a      	ldr	r2, [r3, #0]
 8007366:	687b      	ldr	r3, [r7, #4]
 8007368:	681b      	ldr	r3, [r3, #0]
 800736a:	f042 0201 	orr.w	r2, r2, #1
 800736e:	601a      	str	r2, [r3, #0]
    if (!IS_TIM_SLAVEMODE_TRIGGER_ENABLED(tmpsmcr))
 8007370:	e007      	b.n	8007382 <HAL_TIM_PWM_Start+0x16a>
    }
  }
  else
  {
    __HAL_TIM_ENABLE(htim);
 8007372:	687b      	ldr	r3, [r7, #4]
 8007374:	681b      	ldr	r3, [r3, #0]
 8007376:	681a      	ldr	r2, [r3, #0]
 8007378:	687b      	ldr	r3, [r7, #4]
 800737a:	681b      	ldr	r3, [r3, #0]
 800737c:	f042 0201 	orr.w	r2, r2, #1
 8007380:	601a      	str	r2, [r3, #0]
  }

  /* Return function status */
  return HAL_OK;
 8007382:	2300      	movs	r3, #0
}
 8007384:	4618      	mov	r0, r3
 8007386:	3710      	adds	r7, #16
 8007388:	46bd      	mov	sp, r7
 800738a:	bd80      	pop	{r7, pc}
 800738c:	40010000 	.word	0x40010000
 8007390:	40010400 	.word	0x40010400
 8007394:	40000400 	.word	0x40000400
 8007398:	40000800 	.word	0x40000800
 800739c:	40000c00 	.word	0x40000c00
 80073a0:	40014000 	.word	0x40014000
 80073a4:	40001800 	.word	0x40001800

080073a8 <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 80073a8:	b580      	push	{r7, lr}
 80073aa:	b084      	sub	sp, #16
 80073ac:	af00      	add	r7, sp, #0
 80073ae:	6078      	str	r0, [r7, #4]
  uint32_t itsource = htim->Instance->DIER;
 80073b0:	687b      	ldr	r3, [r7, #4]
 80073b2:	681b      	ldr	r3, [r3, #0]
 80073b4:	68db      	ldr	r3, [r3, #12]
 80073b6:	60fb      	str	r3, [r7, #12]
  uint32_t itflag   = htim->Instance->SR;
 80073b8:	687b      	ldr	r3, [r7, #4]
 80073ba:	681b      	ldr	r3, [r3, #0]
 80073bc:	691b      	ldr	r3, [r3, #16]
 80073be:	60bb      	str	r3, [r7, #8]

  /* Capture compare 1 event */
  if ((itflag & (TIM_FLAG_CC1)) == (TIM_FLAG_CC1))
 80073c0:	68bb      	ldr	r3, [r7, #8]
 80073c2:	f003 0302 	and.w	r3, r3, #2
 80073c6:	2b00      	cmp	r3, #0
 80073c8:	d020      	beq.n	800740c <HAL_TIM_IRQHandler+0x64>
  {
    if ((itsource & (TIM_IT_CC1)) == (TIM_IT_CC1))
 80073ca:	68fb      	ldr	r3, [r7, #12]
 80073cc:	f003 0302 	and.w	r3, r3, #2
 80073d0:	2b00      	cmp	r3, #0
 80073d2:	d01b      	beq.n	800740c <HAL_TIM_IRQHandler+0x64>
    {
      {
        __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC1);
 80073d4:	687b      	ldr	r3, [r7, #4]
 80073d6:	681b      	ldr	r3, [r3, #0]
 80073d8:	f06f 0202 	mvn.w	r2, #2
 80073dc:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80073de:	687b      	ldr	r3, [r7, #4]
 80073e0:	2201      	movs	r2, #1
 80073e2:	771a      	strb	r2, [r3, #28]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80073e4:	687b      	ldr	r3, [r7, #4]
 80073e6:	681b      	ldr	r3, [r3, #0]
 80073e8:	699b      	ldr	r3, [r3, #24]
 80073ea:	f003 0303 	and.w	r3, r3, #3
 80073ee:	2b00      	cmp	r3, #0
 80073f0:	d003      	beq.n	80073fa <HAL_TIM_IRQHandler+0x52>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80073f2:	6878      	ldr	r0, [r7, #4]
 80073f4:	f000 fa5b 	bl	80078ae <HAL_TIM_IC_CaptureCallback>
 80073f8:	e005      	b.n	8007406 <HAL_TIM_IRQHandler+0x5e>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80073fa:	6878      	ldr	r0, [r7, #4]
 80073fc:	f000 fa4d 	bl	800789a <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007400:	6878      	ldr	r0, [r7, #4]
 8007402:	f000 fa5e 	bl	80078c2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007406:	687b      	ldr	r3, [r7, #4]
 8007408:	2200      	movs	r2, #0
 800740a:	771a      	strb	r2, [r3, #28]
      }
    }
  }
  /* Capture compare 2 event */
  if ((itflag & (TIM_FLAG_CC2)) == (TIM_FLAG_CC2))
 800740c:	68bb      	ldr	r3, [r7, #8]
 800740e:	f003 0304 	and.w	r3, r3, #4
 8007412:	2b00      	cmp	r3, #0
 8007414:	d020      	beq.n	8007458 <HAL_TIM_IRQHandler+0xb0>
  {
    if ((itsource & (TIM_IT_CC2)) == (TIM_IT_CC2))
 8007416:	68fb      	ldr	r3, [r7, #12]
 8007418:	f003 0304 	and.w	r3, r3, #4
 800741c:	2b00      	cmp	r3, #0
 800741e:	d01b      	beq.n	8007458 <HAL_TIM_IRQHandler+0xb0>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC2);
 8007420:	687b      	ldr	r3, [r7, #4]
 8007422:	681b      	ldr	r3, [r3, #0]
 8007424:	f06f 0204 	mvn.w	r2, #4
 8007428:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 800742a:	687b      	ldr	r3, [r7, #4]
 800742c:	2202      	movs	r2, #2
 800742e:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8007430:	687b      	ldr	r3, [r7, #4]
 8007432:	681b      	ldr	r3, [r3, #0]
 8007434:	699b      	ldr	r3, [r3, #24]
 8007436:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 800743a:	2b00      	cmp	r3, #0
 800743c:	d003      	beq.n	8007446 <HAL_TIM_IRQHandler+0x9e>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800743e:	6878      	ldr	r0, [r7, #4]
 8007440:	f000 fa35 	bl	80078ae <HAL_TIM_IC_CaptureCallback>
 8007444:	e005      	b.n	8007452 <HAL_TIM_IRQHandler+0xaa>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007446:	6878      	ldr	r0, [r7, #4]
 8007448:	f000 fa27 	bl	800789a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 800744c:	6878      	ldr	r0, [r7, #4]
 800744e:	f000 fa38 	bl	80078c2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8007452:	687b      	ldr	r3, [r7, #4]
 8007454:	2200      	movs	r2, #0
 8007456:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 3 event */
  if ((itflag & (TIM_FLAG_CC3)) == (TIM_FLAG_CC3))
 8007458:	68bb      	ldr	r3, [r7, #8]
 800745a:	f003 0308 	and.w	r3, r3, #8
 800745e:	2b00      	cmp	r3, #0
 8007460:	d020      	beq.n	80074a4 <HAL_TIM_IRQHandler+0xfc>
  {
    if ((itsource & (TIM_IT_CC3)) == (TIM_IT_CC3))
 8007462:	68fb      	ldr	r3, [r7, #12]
 8007464:	f003 0308 	and.w	r3, r3, #8
 8007468:	2b00      	cmp	r3, #0
 800746a:	d01b      	beq.n	80074a4 <HAL_TIM_IRQHandler+0xfc>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC3);
 800746c:	687b      	ldr	r3, [r7, #4]
 800746e:	681b      	ldr	r3, [r3, #0]
 8007470:	f06f 0208 	mvn.w	r2, #8
 8007474:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	2204      	movs	r2, #4
 800747a:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 800747c:	687b      	ldr	r3, [r7, #4]
 800747e:	681b      	ldr	r3, [r3, #0]
 8007480:	69db      	ldr	r3, [r3, #28]
 8007482:	f003 0303 	and.w	r3, r3, #3
 8007486:	2b00      	cmp	r3, #0
 8007488:	d003      	beq.n	8007492 <HAL_TIM_IRQHandler+0xea>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800748a:	6878      	ldr	r0, [r7, #4]
 800748c:	f000 fa0f 	bl	80078ae <HAL_TIM_IC_CaptureCallback>
 8007490:	e005      	b.n	800749e <HAL_TIM_IRQHandler+0xf6>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8007492:	6878      	ldr	r0, [r7, #4]
 8007494:	f000 fa01 	bl	800789a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8007498:	6878      	ldr	r0, [r7, #4]
 800749a:	f000 fa12 	bl	80078c2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 800749e:	687b      	ldr	r3, [r7, #4]
 80074a0:	2200      	movs	r2, #0
 80074a2:	771a      	strb	r2, [r3, #28]
    }
  }
  /* Capture compare 4 event */
  if ((itflag & (TIM_FLAG_CC4)) == (TIM_FLAG_CC4))
 80074a4:	68bb      	ldr	r3, [r7, #8]
 80074a6:	f003 0310 	and.w	r3, r3, #16
 80074aa:	2b00      	cmp	r3, #0
 80074ac:	d020      	beq.n	80074f0 <HAL_TIM_IRQHandler+0x148>
  {
    if ((itsource & (TIM_IT_CC4)) == (TIM_IT_CC4))
 80074ae:	68fb      	ldr	r3, [r7, #12]
 80074b0:	f003 0310 	and.w	r3, r3, #16
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d01b      	beq.n	80074f0 <HAL_TIM_IRQHandler+0x148>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_CC4);
 80074b8:	687b      	ldr	r3, [r7, #4]
 80074ba:	681b      	ldr	r3, [r3, #0]
 80074bc:	f06f 0210 	mvn.w	r2, #16
 80074c0:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80074c2:	687b      	ldr	r3, [r7, #4]
 80074c4:	2208      	movs	r2, #8
 80074c6:	771a      	strb	r2, [r3, #28]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80074c8:	687b      	ldr	r3, [r7, #4]
 80074ca:	681b      	ldr	r3, [r3, #0]
 80074cc:	69db      	ldr	r3, [r3, #28]
 80074ce:	f403 7340 	and.w	r3, r3, #768	@ 0x300
 80074d2:	2b00      	cmp	r3, #0
 80074d4:	d003      	beq.n	80074de <HAL_TIM_IRQHandler+0x136>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80074d6:	6878      	ldr	r0, [r7, #4]
 80074d8:	f000 f9e9 	bl	80078ae <HAL_TIM_IC_CaptureCallback>
 80074dc:	e005      	b.n	80074ea <HAL_TIM_IRQHandler+0x142>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80074de:	6878      	ldr	r0, [r7, #4]
 80074e0:	f000 f9db 	bl	800789a <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80074e4:	6878      	ldr	r0, [r7, #4]
 80074e6:	f000 f9ec 	bl	80078c2 <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80074ea:	687b      	ldr	r3, [r7, #4]
 80074ec:	2200      	movs	r2, #0
 80074ee:	771a      	strb	r2, [r3, #28]
    }
  }
  /* TIM Update event */
  if ((itflag & (TIM_FLAG_UPDATE)) == (TIM_FLAG_UPDATE))
 80074f0:	68bb      	ldr	r3, [r7, #8]
 80074f2:	f003 0301 	and.w	r3, r3, #1
 80074f6:	2b00      	cmp	r3, #0
 80074f8:	d00c      	beq.n	8007514 <HAL_TIM_IRQHandler+0x16c>
  {
    if ((itsource & (TIM_IT_UPDATE)) == (TIM_IT_UPDATE))
 80074fa:	68fb      	ldr	r3, [r7, #12]
 80074fc:	f003 0301 	and.w	r3, r3, #1
 8007500:	2b00      	cmp	r3, #0
 8007502:	d007      	beq.n	8007514 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_UPDATE);
 8007504:	687b      	ldr	r3, [r7, #4]
 8007506:	681b      	ldr	r3, [r3, #0]
 8007508:	f06f 0201 	mvn.w	r2, #1
 800750c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800750e:	6878      	ldr	r0, [r7, #4]
 8007510:	f7fa f98c 	bl	800182c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Break input event */
  if ((itflag & (TIM_FLAG_BREAK)) == (TIM_FLAG_BREAK))
 8007514:	68bb      	ldr	r3, [r7, #8]
 8007516:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 800751a:	2b00      	cmp	r3, #0
 800751c:	d00c      	beq.n	8007538 <HAL_TIM_IRQHandler+0x190>
  {
    if ((itsource & (TIM_IT_BREAK)) == (TIM_IT_BREAK))
 800751e:	68fb      	ldr	r3, [r7, #12]
 8007520:	f003 0380 	and.w	r3, r3, #128	@ 0x80
 8007524:	2b00      	cmp	r3, #0
 8007526:	d007      	beq.n	8007538 <HAL_TIM_IRQHandler+0x190>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_BREAK);
 8007528:	687b      	ldr	r3, [r7, #4]
 800752a:	681b      	ldr	r3, [r3, #0]
 800752c:	f06f 0280 	mvn.w	r2, #128	@ 0x80
 8007530:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->BreakCallback(htim);
#else
      HAL_TIMEx_BreakCallback(htim);
 8007532:	6878      	ldr	r0, [r7, #4]
 8007534:	f000 fd7c 	bl	8008030 <HAL_TIMEx_BreakCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if ((itflag & (TIM_FLAG_TRIGGER)) == (TIM_FLAG_TRIGGER))
 8007538:	68bb      	ldr	r3, [r7, #8]
 800753a:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 800753e:	2b00      	cmp	r3, #0
 8007540:	d00c      	beq.n	800755c <HAL_TIM_IRQHandler+0x1b4>
  {
    if ((itsource & (TIM_IT_TRIGGER)) == (TIM_IT_TRIGGER))
 8007542:	68fb      	ldr	r3, [r7, #12]
 8007544:	f003 0340 	and.w	r3, r3, #64	@ 0x40
 8007548:	2b00      	cmp	r3, #0
 800754a:	d007      	beq.n	800755c <HAL_TIM_IRQHandler+0x1b4>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_TRIGGER);
 800754c:	687b      	ldr	r3, [r7, #4]
 800754e:	681b      	ldr	r3, [r3, #0]
 8007550:	f06f 0240 	mvn.w	r2, #64	@ 0x40
 8007554:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 8007556:	6878      	ldr	r0, [r7, #4]
 8007558:	f000 f9bd 	bl	80078d6 <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM commutation event */
  if ((itflag & (TIM_FLAG_COM)) == (TIM_FLAG_COM))
 800755c:	68bb      	ldr	r3, [r7, #8]
 800755e:	f003 0320 	and.w	r3, r3, #32
 8007562:	2b00      	cmp	r3, #0
 8007564:	d00c      	beq.n	8007580 <HAL_TIM_IRQHandler+0x1d8>
  {
    if ((itsource & (TIM_IT_COM)) == (TIM_IT_COM))
 8007566:	68fb      	ldr	r3, [r7, #12]
 8007568:	f003 0320 	and.w	r3, r3, #32
 800756c:	2b00      	cmp	r3, #0
 800756e:	d007      	beq.n	8007580 <HAL_TIM_IRQHandler+0x1d8>
    {
      __HAL_TIM_CLEAR_FLAG(htim, TIM_FLAG_COM);
 8007570:	687b      	ldr	r3, [r7, #4]
 8007572:	681b      	ldr	r3, [r3, #0]
 8007574:	f06f 0220 	mvn.w	r2, #32
 8007578:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->CommutationCallback(htim);
#else
      HAL_TIMEx_CommutCallback(htim);
 800757a:	6878      	ldr	r0, [r7, #4]
 800757c:	f000 fd4e 	bl	800801c <HAL_TIMEx_CommutCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8007580:	bf00      	nop
 8007582:	3710      	adds	r7, #16
 8007584:	46bd      	mov	sp, r7
 8007586:	bd80      	pop	{r7, pc}

08007588 <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            const TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 8007588:	b580      	push	{r7, lr}
 800758a:	b086      	sub	sp, #24
 800758c:	af00      	add	r7, sp, #0
 800758e:	60f8      	str	r0, [r7, #12]
 8007590:	60b9      	str	r1, [r7, #8]
 8007592:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8007594:	2300      	movs	r3, #0
 8007596:	75fb      	strb	r3, [r7, #23]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 8007598:	68fb      	ldr	r3, [r7, #12]
 800759a:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 800759e:	2b01      	cmp	r3, #1
 80075a0:	d101      	bne.n	80075a6 <HAL_TIM_PWM_ConfigChannel+0x1e>
 80075a2:	2302      	movs	r3, #2
 80075a4:	e0ae      	b.n	8007704 <HAL_TIM_PWM_ConfigChannel+0x17c>
 80075a6:	68fb      	ldr	r3, [r7, #12]
 80075a8:	2201      	movs	r2, #1
 80075aa:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  switch (Channel)
 80075ae:	687b      	ldr	r3, [r7, #4]
 80075b0:	2b0c      	cmp	r3, #12
 80075b2:	f200 809f 	bhi.w	80076f4 <HAL_TIM_PWM_ConfigChannel+0x16c>
 80075b6:	a201      	add	r2, pc, #4	@ (adr r2, 80075bc <HAL_TIM_PWM_ConfigChannel+0x34>)
 80075b8:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 80075bc:	080075f1 	.word	0x080075f1
 80075c0:	080076f5 	.word	0x080076f5
 80075c4:	080076f5 	.word	0x080076f5
 80075c8:	080076f5 	.word	0x080076f5
 80075cc:	08007631 	.word	0x08007631
 80075d0:	080076f5 	.word	0x080076f5
 80075d4:	080076f5 	.word	0x080076f5
 80075d8:	080076f5 	.word	0x080076f5
 80075dc:	08007673 	.word	0x08007673
 80075e0:	080076f5 	.word	0x080076f5
 80075e4:	080076f5 	.word	0x080076f5
 80075e8:	080076f5 	.word	0x080076f5
 80075ec:	080076b3 	.word	0x080076b3
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 80075f0:	68fb      	ldr	r3, [r7, #12]
 80075f2:	681b      	ldr	r3, [r3, #0]
 80075f4:	68b9      	ldr	r1, [r7, #8]
 80075f6:	4618      	mov	r0, r3
 80075f8:	f000 fa24 	bl	8007a44 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 80075fc:	68fb      	ldr	r3, [r7, #12]
 80075fe:	681b      	ldr	r3, [r3, #0]
 8007600:	699a      	ldr	r2, [r3, #24]
 8007602:	68fb      	ldr	r3, [r7, #12]
 8007604:	681b      	ldr	r3, [r3, #0]
 8007606:	f042 0208 	orr.w	r2, r2, #8
 800760a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 800760c:	68fb      	ldr	r3, [r7, #12]
 800760e:	681b      	ldr	r3, [r3, #0]
 8007610:	699a      	ldr	r2, [r3, #24]
 8007612:	68fb      	ldr	r3, [r7, #12]
 8007614:	681b      	ldr	r3, [r3, #0]
 8007616:	f022 0204 	bic.w	r2, r2, #4
 800761a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 800761c:	68fb      	ldr	r3, [r7, #12]
 800761e:	681b      	ldr	r3, [r3, #0]
 8007620:	6999      	ldr	r1, [r3, #24]
 8007622:	68bb      	ldr	r3, [r7, #8]
 8007624:	691a      	ldr	r2, [r3, #16]
 8007626:	68fb      	ldr	r3, [r7, #12]
 8007628:	681b      	ldr	r3, [r3, #0]
 800762a:	430a      	orrs	r2, r1
 800762c:	619a      	str	r2, [r3, #24]
      break;
 800762e:	e064      	b.n	80076fa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 8007630:	68fb      	ldr	r3, [r7, #12]
 8007632:	681b      	ldr	r3, [r3, #0]
 8007634:	68b9      	ldr	r1, [r7, #8]
 8007636:	4618      	mov	r0, r3
 8007638:	f000 fa74 	bl	8007b24 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 800763c:	68fb      	ldr	r3, [r7, #12]
 800763e:	681b      	ldr	r3, [r3, #0]
 8007640:	699a      	ldr	r2, [r3, #24]
 8007642:	68fb      	ldr	r3, [r7, #12]
 8007644:	681b      	ldr	r3, [r3, #0]
 8007646:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 800764a:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 800764c:	68fb      	ldr	r3, [r7, #12]
 800764e:	681b      	ldr	r3, [r3, #0]
 8007650:	699a      	ldr	r2, [r3, #24]
 8007652:	68fb      	ldr	r3, [r7, #12]
 8007654:	681b      	ldr	r3, [r3, #0]
 8007656:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 800765a:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 800765c:	68fb      	ldr	r3, [r7, #12]
 800765e:	681b      	ldr	r3, [r3, #0]
 8007660:	6999      	ldr	r1, [r3, #24]
 8007662:	68bb      	ldr	r3, [r7, #8]
 8007664:	691b      	ldr	r3, [r3, #16]
 8007666:	021a      	lsls	r2, r3, #8
 8007668:	68fb      	ldr	r3, [r7, #12]
 800766a:	681b      	ldr	r3, [r3, #0]
 800766c:	430a      	orrs	r2, r1
 800766e:	619a      	str	r2, [r3, #24]
      break;
 8007670:	e043      	b.n	80076fa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 8007672:	68fb      	ldr	r3, [r7, #12]
 8007674:	681b      	ldr	r3, [r3, #0]
 8007676:	68b9      	ldr	r1, [r7, #8]
 8007678:	4618      	mov	r0, r3
 800767a:	f000 fac9 	bl	8007c10 <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 800767e:	68fb      	ldr	r3, [r7, #12]
 8007680:	681b      	ldr	r3, [r3, #0]
 8007682:	69da      	ldr	r2, [r3, #28]
 8007684:	68fb      	ldr	r3, [r7, #12]
 8007686:	681b      	ldr	r3, [r3, #0]
 8007688:	f042 0208 	orr.w	r2, r2, #8
 800768c:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 800768e:	68fb      	ldr	r3, [r7, #12]
 8007690:	681b      	ldr	r3, [r3, #0]
 8007692:	69da      	ldr	r2, [r3, #28]
 8007694:	68fb      	ldr	r3, [r7, #12]
 8007696:	681b      	ldr	r3, [r3, #0]
 8007698:	f022 0204 	bic.w	r2, r2, #4
 800769c:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 800769e:	68fb      	ldr	r3, [r7, #12]
 80076a0:	681b      	ldr	r3, [r3, #0]
 80076a2:	69d9      	ldr	r1, [r3, #28]
 80076a4:	68bb      	ldr	r3, [r7, #8]
 80076a6:	691a      	ldr	r2, [r3, #16]
 80076a8:	68fb      	ldr	r3, [r7, #12]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	430a      	orrs	r2, r1
 80076ae:	61da      	str	r2, [r3, #28]
      break;
 80076b0:	e023      	b.n	80076fa <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 80076b2:	68fb      	ldr	r3, [r7, #12]
 80076b4:	681b      	ldr	r3, [r3, #0]
 80076b6:	68b9      	ldr	r1, [r7, #8]
 80076b8:	4618      	mov	r0, r3
 80076ba:	f000 fb1d 	bl	8007cf8 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 80076be:	68fb      	ldr	r3, [r7, #12]
 80076c0:	681b      	ldr	r3, [r3, #0]
 80076c2:	69da      	ldr	r2, [r3, #28]
 80076c4:	68fb      	ldr	r3, [r7, #12]
 80076c6:	681b      	ldr	r3, [r3, #0]
 80076c8:	f442 6200 	orr.w	r2, r2, #2048	@ 0x800
 80076cc:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 80076ce:	68fb      	ldr	r3, [r7, #12]
 80076d0:	681b      	ldr	r3, [r3, #0]
 80076d2:	69da      	ldr	r2, [r3, #28]
 80076d4:	68fb      	ldr	r3, [r7, #12]
 80076d6:	681b      	ldr	r3, [r3, #0]
 80076d8:	f422 6280 	bic.w	r2, r2, #1024	@ 0x400
 80076dc:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 80076de:	68fb      	ldr	r3, [r7, #12]
 80076e0:	681b      	ldr	r3, [r3, #0]
 80076e2:	69d9      	ldr	r1, [r3, #28]
 80076e4:	68bb      	ldr	r3, [r7, #8]
 80076e6:	691b      	ldr	r3, [r3, #16]
 80076e8:	021a      	lsls	r2, r3, #8
 80076ea:	68fb      	ldr	r3, [r7, #12]
 80076ec:	681b      	ldr	r3, [r3, #0]
 80076ee:	430a      	orrs	r2, r1
 80076f0:	61da      	str	r2, [r3, #28]
      break;
 80076f2:	e002      	b.n	80076fa <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      status = HAL_ERROR;
 80076f4:	2301      	movs	r3, #1
 80076f6:	75fb      	strb	r3, [r7, #23]
      break;
 80076f8:	bf00      	nop
  }

  __HAL_UNLOCK(htim);
 80076fa:	68fb      	ldr	r3, [r7, #12]
 80076fc:	2200      	movs	r2, #0
 80076fe:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007702:	7dfb      	ldrb	r3, [r7, #23]
}
 8007704:	4618      	mov	r0, r3
 8007706:	3718      	adds	r7, #24
 8007708:	46bd      	mov	sp, r7
 800770a:	bd80      	pop	{r7, pc}

0800770c <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, const TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 800770c:	b580      	push	{r7, lr}
 800770e:	b084      	sub	sp, #16
 8007710:	af00      	add	r7, sp, #0
 8007712:	6078      	str	r0, [r7, #4]
 8007714:	6039      	str	r1, [r7, #0]
  HAL_StatusTypeDef status = HAL_OK;
 8007716:	2300      	movs	r3, #0
 8007718:	73fb      	strb	r3, [r7, #15]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 800771a:	687b      	ldr	r3, [r7, #4]
 800771c:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007720:	2b01      	cmp	r3, #1
 8007722:	d101      	bne.n	8007728 <HAL_TIM_ConfigClockSource+0x1c>
 8007724:	2302      	movs	r3, #2
 8007726:	e0b4      	b.n	8007892 <HAL_TIM_ConfigClockSource+0x186>
 8007728:	687b      	ldr	r3, [r7, #4]
 800772a:	2201      	movs	r2, #1
 800772c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 8007730:	687b      	ldr	r3, [r7, #4]
 8007732:	2202      	movs	r2, #2
 8007734:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 8007738:	687b      	ldr	r3, [r7, #4]
 800773a:	681b      	ldr	r3, [r3, #0]
 800773c:	689b      	ldr	r3, [r3, #8]
 800773e:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 8007740:	68bb      	ldr	r3, [r7, #8]
 8007742:	f023 0377 	bic.w	r3, r3, #119	@ 0x77
 8007746:	60bb      	str	r3, [r7, #8]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007748:	68bb      	ldr	r3, [r7, #8]
 800774a:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 800774e:	60bb      	str	r3, [r7, #8]
  htim->Instance->SMCR = tmpsmcr;
 8007750:	687b      	ldr	r3, [r7, #4]
 8007752:	681b      	ldr	r3, [r3, #0]
 8007754:	68ba      	ldr	r2, [r7, #8]
 8007756:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 8007758:	683b      	ldr	r3, [r7, #0]
 800775a:	681b      	ldr	r3, [r3, #0]
 800775c:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007760:	d03e      	beq.n	80077e0 <HAL_TIM_ConfigClockSource+0xd4>
 8007762:	f5b3 5f00 	cmp.w	r3, #8192	@ 0x2000
 8007766:	f200 8087 	bhi.w	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 800776a:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 800776e:	f000 8086 	beq.w	800787e <HAL_TIM_ConfigClockSource+0x172>
 8007772:	f5b3 5f80 	cmp.w	r3, #4096	@ 0x1000
 8007776:	d87f      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 8007778:	2b70      	cmp	r3, #112	@ 0x70
 800777a:	d01a      	beq.n	80077b2 <HAL_TIM_ConfigClockSource+0xa6>
 800777c:	2b70      	cmp	r3, #112	@ 0x70
 800777e:	d87b      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 8007780:	2b60      	cmp	r3, #96	@ 0x60
 8007782:	d050      	beq.n	8007826 <HAL_TIM_ConfigClockSource+0x11a>
 8007784:	2b60      	cmp	r3, #96	@ 0x60
 8007786:	d877      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 8007788:	2b50      	cmp	r3, #80	@ 0x50
 800778a:	d03c      	beq.n	8007806 <HAL_TIM_ConfigClockSource+0xfa>
 800778c:	2b50      	cmp	r3, #80	@ 0x50
 800778e:	d873      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 8007790:	2b40      	cmp	r3, #64	@ 0x40
 8007792:	d058      	beq.n	8007846 <HAL_TIM_ConfigClockSource+0x13a>
 8007794:	2b40      	cmp	r3, #64	@ 0x40
 8007796:	d86f      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 8007798:	2b30      	cmp	r3, #48	@ 0x30
 800779a:	d064      	beq.n	8007866 <HAL_TIM_ConfigClockSource+0x15a>
 800779c:	2b30      	cmp	r3, #48	@ 0x30
 800779e:	d86b      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 80077a0:	2b20      	cmp	r3, #32
 80077a2:	d060      	beq.n	8007866 <HAL_TIM_ConfigClockSource+0x15a>
 80077a4:	2b20      	cmp	r3, #32
 80077a6:	d867      	bhi.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
 80077a8:	2b00      	cmp	r3, #0
 80077aa:	d05c      	beq.n	8007866 <HAL_TIM_ConfigClockSource+0x15a>
 80077ac:	2b10      	cmp	r3, #16
 80077ae:	d05a      	beq.n	8007866 <HAL_TIM_ConfigClockSource+0x15a>
 80077b0:	e062      	b.n	8007878 <HAL_TIM_ConfigClockSource+0x16c>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80077b2:	687b      	ldr	r3, [r7, #4]
 80077b4:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80077b6:	683b      	ldr	r3, [r7, #0]
 80077b8:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077ba:	683b      	ldr	r3, [r7, #0]
 80077bc:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077be:	683b      	ldr	r3, [r7, #0]
 80077c0:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077c2:	f000 fb69 	bl	8007e98 <TIM_ETR_SetConfig>

      /* Select the External clock mode1 and the ETRF trigger */
      tmpsmcr = htim->Instance->SMCR;
 80077c6:	687b      	ldr	r3, [r7, #4]
 80077c8:	681b      	ldr	r3, [r3, #0]
 80077ca:	689b      	ldr	r3, [r3, #8]
 80077cc:	60bb      	str	r3, [r7, #8]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 80077ce:	68bb      	ldr	r3, [r7, #8]
 80077d0:	f043 0377 	orr.w	r3, r3, #119	@ 0x77
 80077d4:	60bb      	str	r3, [r7, #8]
      /* Write to TIMx SMCR */
      htim->Instance->SMCR = tmpsmcr;
 80077d6:	687b      	ldr	r3, [r7, #4]
 80077d8:	681b      	ldr	r3, [r3, #0]
 80077da:	68ba      	ldr	r2, [r7, #8]
 80077dc:	609a      	str	r2, [r3, #8]
      break;
 80077de:	e04f      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>
      assert_param(IS_TIM_CLOCKPRESCALER(sClockSourceConfig->ClockPrescaler));
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      /* Configure the ETR Clock source */
      TIM_ETR_SetConfig(htim->Instance,
 80077e0:	687b      	ldr	r3, [r7, #4]
 80077e2:	6818      	ldr	r0, [r3, #0]
                        sClockSourceConfig->ClockPrescaler,
 80077e4:	683b      	ldr	r3, [r7, #0]
 80077e6:	6899      	ldr	r1, [r3, #8]
                        sClockSourceConfig->ClockPolarity,
 80077e8:	683b      	ldr	r3, [r7, #0]
 80077ea:	685a      	ldr	r2, [r3, #4]
                        sClockSourceConfig->ClockFilter);
 80077ec:	683b      	ldr	r3, [r7, #0]
 80077ee:	68db      	ldr	r3, [r3, #12]
      TIM_ETR_SetConfig(htim->Instance,
 80077f0:	f000 fb52 	bl	8007e98 <TIM_ETR_SetConfig>
      /* Enable the External clock mode2 */
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 80077f4:	687b      	ldr	r3, [r7, #4]
 80077f6:	681b      	ldr	r3, [r3, #0]
 80077f8:	689a      	ldr	r2, [r3, #8]
 80077fa:	687b      	ldr	r3, [r7, #4]
 80077fc:	681b      	ldr	r3, [r3, #0]
 80077fe:	f442 4280 	orr.w	r2, r2, #16384	@ 0x4000
 8007802:	609a      	str	r2, [r3, #8]
      break;
 8007804:	e03c      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007806:	687b      	ldr	r3, [r7, #4]
 8007808:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800780a:	683b      	ldr	r3, [r7, #0]
 800780c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800780e:	683b      	ldr	r3, [r7, #0]
 8007810:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007812:	461a      	mov	r2, r3
 8007814:	f000 fac6 	bl	8007da4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 8007818:	687b      	ldr	r3, [r7, #4]
 800781a:	681b      	ldr	r3, [r3, #0]
 800781c:	2150      	movs	r1, #80	@ 0x50
 800781e:	4618      	mov	r0, r3
 8007820:	f000 fb1f 	bl	8007e62 <TIM_ITRx_SetConfig>
      break;
 8007824:	e02c      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI2 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI2_ConfigInputStage(htim->Instance,
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800782a:	683b      	ldr	r3, [r7, #0]
 800782c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800782e:	683b      	ldr	r3, [r7, #0]
 8007830:	68db      	ldr	r3, [r3, #12]
      TIM_TI2_ConfigInputStage(htim->Instance,
 8007832:	461a      	mov	r2, r3
 8007834:	f000 fae5 	bl	8007e02 <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 8007838:	687b      	ldr	r3, [r7, #4]
 800783a:	681b      	ldr	r3, [r3, #0]
 800783c:	2160      	movs	r1, #96	@ 0x60
 800783e:	4618      	mov	r0, r3
 8007840:	f000 fb0f 	bl	8007e62 <TIM_ITRx_SetConfig>
      break;
 8007844:	e01c      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>

      /* Check TI1 input conditioning related parameters */
      assert_param(IS_TIM_CLOCKPOLARITY(sClockSourceConfig->ClockPolarity));
      assert_param(IS_TIM_CLOCKFILTER(sClockSourceConfig->ClockFilter));

      TIM_TI1_ConfigInputStage(htim->Instance,
 8007846:	687b      	ldr	r3, [r7, #4]
 8007848:	6818      	ldr	r0, [r3, #0]
                               sClockSourceConfig->ClockPolarity,
 800784a:	683b      	ldr	r3, [r7, #0]
 800784c:	6859      	ldr	r1, [r3, #4]
                               sClockSourceConfig->ClockFilter);
 800784e:	683b      	ldr	r3, [r7, #0]
 8007850:	68db      	ldr	r3, [r3, #12]
      TIM_TI1_ConfigInputStage(htim->Instance,
 8007852:	461a      	mov	r2, r3
 8007854:	f000 faa6 	bl	8007da4 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 8007858:	687b      	ldr	r3, [r7, #4]
 800785a:	681b      	ldr	r3, [r3, #0]
 800785c:	2140      	movs	r1, #64	@ 0x40
 800785e:	4618      	mov	r0, r3
 8007860:	f000 faff 	bl	8007e62 <TIM_ITRx_SetConfig>
      break;
 8007864:	e00c      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>
    case TIM_CLOCKSOURCE_ITR3:
    {
      /* Check whether or not the timer instance supports internal trigger input */
      assert_param(IS_TIM_CLOCKSOURCE_ITRX_INSTANCE(htim->Instance));

      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	681a      	ldr	r2, [r3, #0]
 800786a:	683b      	ldr	r3, [r7, #0]
 800786c:	681b      	ldr	r3, [r3, #0]
 800786e:	4619      	mov	r1, r3
 8007870:	4610      	mov	r0, r2
 8007872:	f000 faf6 	bl	8007e62 <TIM_ITRx_SetConfig>
      break;
 8007876:	e003      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>
    }

    default:
      status = HAL_ERROR;
 8007878:	2301      	movs	r3, #1
 800787a:	73fb      	strb	r3, [r7, #15]
      break;
 800787c:	e000      	b.n	8007880 <HAL_TIM_ConfigClockSource+0x174>
      break;
 800787e:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 8007880:	687b      	ldr	r3, [r7, #4]
 8007882:	2201      	movs	r2, #1
 8007884:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007888:	687b      	ldr	r3, [r7, #4]
 800788a:	2200      	movs	r2, #0
 800788c:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return status;
 8007890:	7bfb      	ldrb	r3, [r7, #15]
}
 8007892:	4618      	mov	r0, r3
 8007894:	3710      	adds	r7, #16
 8007896:	46bd      	mov	sp, r7
 8007898:	bd80      	pop	{r7, pc}

0800789a <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800789a:	b480      	push	{r7}
 800789c:	b083      	sub	sp, #12
 800789e:	af00      	add	r7, sp, #0
 80078a0:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 80078a2:	bf00      	nop
 80078a4:	370c      	adds	r7, #12
 80078a6:	46bd      	mov	sp, r7
 80078a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078ac:	4770      	bx	lr

080078ae <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 80078ae:	b480      	push	{r7}
 80078b0:	b083      	sub	sp, #12
 80078b2:	af00      	add	r7, sp, #0
 80078b4:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 80078b6:	bf00      	nop
 80078b8:	370c      	adds	r7, #12
 80078ba:	46bd      	mov	sp, r7
 80078bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078c0:	4770      	bx	lr

080078c2 <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 80078c2:	b480      	push	{r7}
 80078c4:	b083      	sub	sp, #12
 80078c6:	af00      	add	r7, sp, #0
 80078c8:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 80078ca:	bf00      	nop
 80078cc:	370c      	adds	r7, #12
 80078ce:	46bd      	mov	sp, r7
 80078d0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078d4:	4770      	bx	lr

080078d6 <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 80078d6:	b480      	push	{r7}
 80078d8:	b083      	sub	sp, #12
 80078da:	af00      	add	r7, sp, #0
 80078dc:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 80078de:	bf00      	nop
 80078e0:	370c      	adds	r7, #12
 80078e2:	46bd      	mov	sp, r7
 80078e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80078e8:	4770      	bx	lr
	...

080078ec <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, const TIM_Base_InitTypeDef *Structure)
{
 80078ec:	b480      	push	{r7}
 80078ee:	b085      	sub	sp, #20
 80078f0:	af00      	add	r7, sp, #0
 80078f2:	6078      	str	r0, [r7, #4]
 80078f4:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80078f6:	687b      	ldr	r3, [r7, #4]
 80078f8:	681b      	ldr	r3, [r3, #0]
 80078fa:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80078fc:	687b      	ldr	r3, [r7, #4]
 80078fe:	4a46      	ldr	r2, [pc, #280]	@ (8007a18 <TIM_Base_SetConfig+0x12c>)
 8007900:	4293      	cmp	r3, r2
 8007902:	d013      	beq.n	800792c <TIM_Base_SetConfig+0x40>
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800790a:	d00f      	beq.n	800792c <TIM_Base_SetConfig+0x40>
 800790c:	687b      	ldr	r3, [r7, #4]
 800790e:	4a43      	ldr	r2, [pc, #268]	@ (8007a1c <TIM_Base_SetConfig+0x130>)
 8007910:	4293      	cmp	r3, r2
 8007912:	d00b      	beq.n	800792c <TIM_Base_SetConfig+0x40>
 8007914:	687b      	ldr	r3, [r7, #4]
 8007916:	4a42      	ldr	r2, [pc, #264]	@ (8007a20 <TIM_Base_SetConfig+0x134>)
 8007918:	4293      	cmp	r3, r2
 800791a:	d007      	beq.n	800792c <TIM_Base_SetConfig+0x40>
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	4a41      	ldr	r2, [pc, #260]	@ (8007a24 <TIM_Base_SetConfig+0x138>)
 8007920:	4293      	cmp	r3, r2
 8007922:	d003      	beq.n	800792c <TIM_Base_SetConfig+0x40>
 8007924:	687b      	ldr	r3, [r7, #4]
 8007926:	4a40      	ldr	r2, [pc, #256]	@ (8007a28 <TIM_Base_SetConfig+0x13c>)
 8007928:	4293      	cmp	r3, r2
 800792a:	d108      	bne.n	800793e <TIM_Base_SetConfig+0x52>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 800792c:	68fb      	ldr	r3, [r7, #12]
 800792e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007932:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 8007934:	683b      	ldr	r3, [r7, #0]
 8007936:	685b      	ldr	r3, [r3, #4]
 8007938:	68fa      	ldr	r2, [r7, #12]
 800793a:	4313      	orrs	r3, r2
 800793c:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 800793e:	687b      	ldr	r3, [r7, #4]
 8007940:	4a35      	ldr	r2, [pc, #212]	@ (8007a18 <TIM_Base_SetConfig+0x12c>)
 8007942:	4293      	cmp	r3, r2
 8007944:	d02b      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007946:	687b      	ldr	r3, [r7, #4]
 8007948:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 800794c:	d027      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 800794e:	687b      	ldr	r3, [r7, #4]
 8007950:	4a32      	ldr	r2, [pc, #200]	@ (8007a1c <TIM_Base_SetConfig+0x130>)
 8007952:	4293      	cmp	r3, r2
 8007954:	d023      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007956:	687b      	ldr	r3, [r7, #4]
 8007958:	4a31      	ldr	r2, [pc, #196]	@ (8007a20 <TIM_Base_SetConfig+0x134>)
 800795a:	4293      	cmp	r3, r2
 800795c:	d01f      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 800795e:	687b      	ldr	r3, [r7, #4]
 8007960:	4a30      	ldr	r2, [pc, #192]	@ (8007a24 <TIM_Base_SetConfig+0x138>)
 8007962:	4293      	cmp	r3, r2
 8007964:	d01b      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007966:	687b      	ldr	r3, [r7, #4]
 8007968:	4a2f      	ldr	r2, [pc, #188]	@ (8007a28 <TIM_Base_SetConfig+0x13c>)
 800796a:	4293      	cmp	r3, r2
 800796c:	d017      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 800796e:	687b      	ldr	r3, [r7, #4]
 8007970:	4a2e      	ldr	r2, [pc, #184]	@ (8007a2c <TIM_Base_SetConfig+0x140>)
 8007972:	4293      	cmp	r3, r2
 8007974:	d013      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007976:	687b      	ldr	r3, [r7, #4]
 8007978:	4a2d      	ldr	r2, [pc, #180]	@ (8007a30 <TIM_Base_SetConfig+0x144>)
 800797a:	4293      	cmp	r3, r2
 800797c:	d00f      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 800797e:	687b      	ldr	r3, [r7, #4]
 8007980:	4a2c      	ldr	r2, [pc, #176]	@ (8007a34 <TIM_Base_SetConfig+0x148>)
 8007982:	4293      	cmp	r3, r2
 8007984:	d00b      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007986:	687b      	ldr	r3, [r7, #4]
 8007988:	4a2b      	ldr	r2, [pc, #172]	@ (8007a38 <TIM_Base_SetConfig+0x14c>)
 800798a:	4293      	cmp	r3, r2
 800798c:	d007      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 800798e:	687b      	ldr	r3, [r7, #4]
 8007990:	4a2a      	ldr	r2, [pc, #168]	@ (8007a3c <TIM_Base_SetConfig+0x150>)
 8007992:	4293      	cmp	r3, r2
 8007994:	d003      	beq.n	800799e <TIM_Base_SetConfig+0xb2>
 8007996:	687b      	ldr	r3, [r7, #4]
 8007998:	4a29      	ldr	r2, [pc, #164]	@ (8007a40 <TIM_Base_SetConfig+0x154>)
 800799a:	4293      	cmp	r3, r2
 800799c:	d108      	bne.n	80079b0 <TIM_Base_SetConfig+0xc4>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 800799e:	68fb      	ldr	r3, [r7, #12]
 80079a0:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 80079a4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 80079a6:	683b      	ldr	r3, [r7, #0]
 80079a8:	68db      	ldr	r3, [r3, #12]
 80079aa:	68fa      	ldr	r2, [r7, #12]
 80079ac:	4313      	orrs	r3, r2
 80079ae:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 80079b0:	68fb      	ldr	r3, [r7, #12]
 80079b2:	f023 0280 	bic.w	r2, r3, #128	@ 0x80
 80079b6:	683b      	ldr	r3, [r7, #0]
 80079b8:	695b      	ldr	r3, [r3, #20]
 80079ba:	4313      	orrs	r3, r2
 80079bc:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 80079be:	687b      	ldr	r3, [r7, #4]
 80079c0:	68fa      	ldr	r2, [r7, #12]
 80079c2:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 80079c4:	683b      	ldr	r3, [r7, #0]
 80079c6:	689a      	ldr	r2, [r3, #8]
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	62da      	str	r2, [r3, #44]	@ 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 80079cc:	683b      	ldr	r3, [r7, #0]
 80079ce:	681a      	ldr	r2, [r3, #0]
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	629a      	str	r2, [r3, #40]	@ 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 80079d4:	687b      	ldr	r3, [r7, #4]
 80079d6:	4a10      	ldr	r2, [pc, #64]	@ (8007a18 <TIM_Base_SetConfig+0x12c>)
 80079d8:	4293      	cmp	r3, r2
 80079da:	d003      	beq.n	80079e4 <TIM_Base_SetConfig+0xf8>
 80079dc:	687b      	ldr	r3, [r7, #4]
 80079de:	4a12      	ldr	r2, [pc, #72]	@ (8007a28 <TIM_Base_SetConfig+0x13c>)
 80079e0:	4293      	cmp	r3, r2
 80079e2:	d103      	bne.n	80079ec <TIM_Base_SetConfig+0x100>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 80079e4:	683b      	ldr	r3, [r7, #0]
 80079e6:	691a      	ldr	r2, [r3, #16]
 80079e8:	687b      	ldr	r3, [r7, #4]
 80079ea:	631a      	str	r2, [r3, #48]	@ 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 80079ec:	687b      	ldr	r3, [r7, #4]
 80079ee:	2201      	movs	r2, #1
 80079f0:	615a      	str	r2, [r3, #20]

  /* Check if the update flag is set after the Update Generation, if so clear the UIF flag */
  if (HAL_IS_BIT_SET(TIMx->SR, TIM_FLAG_UPDATE))
 80079f2:	687b      	ldr	r3, [r7, #4]
 80079f4:	691b      	ldr	r3, [r3, #16]
 80079f6:	f003 0301 	and.w	r3, r3, #1
 80079fa:	2b01      	cmp	r3, #1
 80079fc:	d105      	bne.n	8007a0a <TIM_Base_SetConfig+0x11e>
  {
    /* Clear the update flag */
    CLEAR_BIT(TIMx->SR, TIM_FLAG_UPDATE);
 80079fe:	687b      	ldr	r3, [r7, #4]
 8007a00:	691b      	ldr	r3, [r3, #16]
 8007a02:	f023 0201 	bic.w	r2, r3, #1
 8007a06:	687b      	ldr	r3, [r7, #4]
 8007a08:	611a      	str	r2, [r3, #16]
  }
}
 8007a0a:	bf00      	nop
 8007a0c:	3714      	adds	r7, #20
 8007a0e:	46bd      	mov	sp, r7
 8007a10:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a14:	4770      	bx	lr
 8007a16:	bf00      	nop
 8007a18:	40010000 	.word	0x40010000
 8007a1c:	40000400 	.word	0x40000400
 8007a20:	40000800 	.word	0x40000800
 8007a24:	40000c00 	.word	0x40000c00
 8007a28:	40010400 	.word	0x40010400
 8007a2c:	40014000 	.word	0x40014000
 8007a30:	40014400 	.word	0x40014400
 8007a34:	40014800 	.word	0x40014800
 8007a38:	40001800 	.word	0x40001800
 8007a3c:	40001c00 	.word	0x40001c00
 8007a40:	40002000 	.word	0x40002000

08007a44 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007a44:	b480      	push	{r7}
 8007a46:	b087      	sub	sp, #28
 8007a48:	af00      	add	r7, sp, #0
 8007a4a:	6078      	str	r0, [r7, #4]
 8007a4c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	6a1b      	ldr	r3, [r3, #32]
 8007a52:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	6a1b      	ldr	r3, [r3, #32]
 8007a58:	f023 0201 	bic.w	r2, r3, #1
 8007a5c:	687b      	ldr	r3, [r7, #4]
 8007a5e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007a60:	687b      	ldr	r3, [r7, #4]
 8007a62:	685b      	ldr	r3, [r3, #4]
 8007a64:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007a66:	687b      	ldr	r3, [r7, #4]
 8007a68:	699b      	ldr	r3, [r3, #24]
 8007a6a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 8007a6c:	68fb      	ldr	r3, [r7, #12]
 8007a6e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007a72:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 8007a74:	68fb      	ldr	r3, [r7, #12]
 8007a76:	f023 0303 	bic.w	r3, r3, #3
 8007a7a:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007a7c:	683b      	ldr	r3, [r7, #0]
 8007a7e:	681b      	ldr	r3, [r3, #0]
 8007a80:	68fa      	ldr	r2, [r7, #12]
 8007a82:	4313      	orrs	r3, r2
 8007a84:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 8007a86:	697b      	ldr	r3, [r7, #20]
 8007a88:	f023 0302 	bic.w	r3, r3, #2
 8007a8c:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 8007a8e:	683b      	ldr	r3, [r7, #0]
 8007a90:	689b      	ldr	r3, [r3, #8]
 8007a92:	697a      	ldr	r2, [r7, #20]
 8007a94:	4313      	orrs	r3, r2
 8007a96:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	4a20      	ldr	r2, [pc, #128]	@ (8007b1c <TIM_OC1_SetConfig+0xd8>)
 8007a9c:	4293      	cmp	r3, r2
 8007a9e:	d003      	beq.n	8007aa8 <TIM_OC1_SetConfig+0x64>
 8007aa0:	687b      	ldr	r3, [r7, #4]
 8007aa2:	4a1f      	ldr	r2, [pc, #124]	@ (8007b20 <TIM_OC1_SetConfig+0xdc>)
 8007aa4:	4293      	cmp	r3, r2
 8007aa6:	d10c      	bne.n	8007ac2 <TIM_OC1_SetConfig+0x7e>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 8007aa8:	697b      	ldr	r3, [r7, #20]
 8007aaa:	f023 0308 	bic.w	r3, r3, #8
 8007aae:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 8007ab0:	683b      	ldr	r3, [r7, #0]
 8007ab2:	68db      	ldr	r3, [r3, #12]
 8007ab4:	697a      	ldr	r2, [r7, #20]
 8007ab6:	4313      	orrs	r3, r2
 8007ab8:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 8007aba:	697b      	ldr	r3, [r7, #20]
 8007abc:	f023 0304 	bic.w	r3, r3, #4
 8007ac0:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007ac2:	687b      	ldr	r3, [r7, #4]
 8007ac4:	4a15      	ldr	r2, [pc, #84]	@ (8007b1c <TIM_OC1_SetConfig+0xd8>)
 8007ac6:	4293      	cmp	r3, r2
 8007ac8:	d003      	beq.n	8007ad2 <TIM_OC1_SetConfig+0x8e>
 8007aca:	687b      	ldr	r3, [r7, #4]
 8007acc:	4a14      	ldr	r2, [pc, #80]	@ (8007b20 <TIM_OC1_SetConfig+0xdc>)
 8007ace:	4293      	cmp	r3, r2
 8007ad0:	d111      	bne.n	8007af6 <TIM_OC1_SetConfig+0xb2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 8007ad2:	693b      	ldr	r3, [r7, #16]
 8007ad4:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8007ad8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 8007ada:	693b      	ldr	r3, [r7, #16]
 8007adc:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007ae0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 8007ae2:	683b      	ldr	r3, [r7, #0]
 8007ae4:	695b      	ldr	r3, [r3, #20]
 8007ae6:	693a      	ldr	r2, [r7, #16]
 8007ae8:	4313      	orrs	r3, r2
 8007aea:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 8007aec:	683b      	ldr	r3, [r7, #0]
 8007aee:	699b      	ldr	r3, [r3, #24]
 8007af0:	693a      	ldr	r2, [r7, #16]
 8007af2:	4313      	orrs	r3, r2
 8007af4:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007af6:	687b      	ldr	r3, [r7, #4]
 8007af8:	693a      	ldr	r2, [r7, #16]
 8007afa:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007afc:	687b      	ldr	r3, [r7, #4]
 8007afe:	68fa      	ldr	r2, [r7, #12]
 8007b00:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 8007b02:	683b      	ldr	r3, [r7, #0]
 8007b04:	685a      	ldr	r2, [r3, #4]
 8007b06:	687b      	ldr	r3, [r7, #4]
 8007b08:	635a      	str	r2, [r3, #52]	@ 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007b0a:	687b      	ldr	r3, [r7, #4]
 8007b0c:	697a      	ldr	r2, [r7, #20]
 8007b0e:	621a      	str	r2, [r3, #32]
}
 8007b10:	bf00      	nop
 8007b12:	371c      	adds	r7, #28
 8007b14:	46bd      	mov	sp, r7
 8007b16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007b1a:	4770      	bx	lr
 8007b1c:	40010000 	.word	0x40010000
 8007b20:	40010400 	.word	0x40010400

08007b24 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007b24:	b480      	push	{r7}
 8007b26:	b087      	sub	sp, #28
 8007b28:	af00      	add	r7, sp, #0
 8007b2a:	6078      	str	r0, [r7, #4]
 8007b2c:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007b2e:	687b      	ldr	r3, [r7, #4]
 8007b30:	6a1b      	ldr	r3, [r3, #32]
 8007b32:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007b34:	687b      	ldr	r3, [r7, #4]
 8007b36:	6a1b      	ldr	r3, [r3, #32]
 8007b38:	f023 0210 	bic.w	r2, r3, #16
 8007b3c:	687b      	ldr	r3, [r7, #4]
 8007b3e:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007b40:	687b      	ldr	r3, [r7, #4]
 8007b42:	685b      	ldr	r3, [r3, #4]
 8007b44:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 8007b46:	687b      	ldr	r3, [r7, #4]
 8007b48:	699b      	ldr	r3, [r3, #24]
 8007b4a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 8007b4c:	68fb      	ldr	r3, [r7, #12]
 8007b4e:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007b52:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 8007b54:	68fb      	ldr	r3, [r7, #12]
 8007b56:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007b5a:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007b5c:	683b      	ldr	r3, [r7, #0]
 8007b5e:	681b      	ldr	r3, [r3, #0]
 8007b60:	021b      	lsls	r3, r3, #8
 8007b62:	68fa      	ldr	r2, [r7, #12]
 8007b64:	4313      	orrs	r3, r2
 8007b66:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 8007b68:	697b      	ldr	r3, [r7, #20]
 8007b6a:	f023 0320 	bic.w	r3, r3, #32
 8007b6e:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 8007b70:	683b      	ldr	r3, [r7, #0]
 8007b72:	689b      	ldr	r3, [r3, #8]
 8007b74:	011b      	lsls	r3, r3, #4
 8007b76:	697a      	ldr	r2, [r7, #20]
 8007b78:	4313      	orrs	r3, r2
 8007b7a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 8007b7c:	687b      	ldr	r3, [r7, #4]
 8007b7e:	4a22      	ldr	r2, [pc, #136]	@ (8007c08 <TIM_OC2_SetConfig+0xe4>)
 8007b80:	4293      	cmp	r3, r2
 8007b82:	d003      	beq.n	8007b8c <TIM_OC2_SetConfig+0x68>
 8007b84:	687b      	ldr	r3, [r7, #4]
 8007b86:	4a21      	ldr	r2, [pc, #132]	@ (8007c0c <TIM_OC2_SetConfig+0xe8>)
 8007b88:	4293      	cmp	r3, r2
 8007b8a:	d10d      	bne.n	8007ba8 <TIM_OC2_SetConfig+0x84>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 8007b8c:	697b      	ldr	r3, [r7, #20]
 8007b8e:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007b92:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 8007b94:	683b      	ldr	r3, [r7, #0]
 8007b96:	68db      	ldr	r3, [r3, #12]
 8007b98:	011b      	lsls	r3, r3, #4
 8007b9a:	697a      	ldr	r2, [r7, #20]
 8007b9c:	4313      	orrs	r3, r2
 8007b9e:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 8007ba0:	697b      	ldr	r3, [r7, #20]
 8007ba2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8007ba6:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007ba8:	687b      	ldr	r3, [r7, #4]
 8007baa:	4a17      	ldr	r2, [pc, #92]	@ (8007c08 <TIM_OC2_SetConfig+0xe4>)
 8007bac:	4293      	cmp	r3, r2
 8007bae:	d003      	beq.n	8007bb8 <TIM_OC2_SetConfig+0x94>
 8007bb0:	687b      	ldr	r3, [r7, #4]
 8007bb2:	4a16      	ldr	r2, [pc, #88]	@ (8007c0c <TIM_OC2_SetConfig+0xe8>)
 8007bb4:	4293      	cmp	r3, r2
 8007bb6:	d113      	bne.n	8007be0 <TIM_OC2_SetConfig+0xbc>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 8007bb8:	693b      	ldr	r3, [r7, #16]
 8007bba:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007bbe:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 8007bc0:	693b      	ldr	r3, [r7, #16]
 8007bc2:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007bc6:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 8007bc8:	683b      	ldr	r3, [r7, #0]
 8007bca:	695b      	ldr	r3, [r3, #20]
 8007bcc:	009b      	lsls	r3, r3, #2
 8007bce:	693a      	ldr	r2, [r7, #16]
 8007bd0:	4313      	orrs	r3, r2
 8007bd2:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 8007bd4:	683b      	ldr	r3, [r7, #0]
 8007bd6:	699b      	ldr	r3, [r3, #24]
 8007bd8:	009b      	lsls	r3, r3, #2
 8007bda:	693a      	ldr	r2, [r7, #16]
 8007bdc:	4313      	orrs	r3, r2
 8007bde:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007be0:	687b      	ldr	r3, [r7, #4]
 8007be2:	693a      	ldr	r2, [r7, #16]
 8007be4:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 8007be6:	687b      	ldr	r3, [r7, #4]
 8007be8:	68fa      	ldr	r2, [r7, #12]
 8007bea:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 8007bec:	683b      	ldr	r3, [r7, #0]
 8007bee:	685a      	ldr	r2, [r3, #4]
 8007bf0:	687b      	ldr	r3, [r7, #4]
 8007bf2:	639a      	str	r2, [r3, #56]	@ 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007bf4:	687b      	ldr	r3, [r7, #4]
 8007bf6:	697a      	ldr	r2, [r7, #20]
 8007bf8:	621a      	str	r2, [r3, #32]
}
 8007bfa:	bf00      	nop
 8007bfc:	371c      	adds	r7, #28
 8007bfe:	46bd      	mov	sp, r7
 8007c00:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c04:	4770      	bx	lr
 8007c06:	bf00      	nop
 8007c08:	40010000 	.word	0x40010000
 8007c0c:	40010400 	.word	0x40010400

08007c10 <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007c10:	b480      	push	{r7}
 8007c12:	b087      	sub	sp, #28
 8007c14:	af00      	add	r7, sp, #0
 8007c16:	6078      	str	r0, [r7, #4]
 8007c18:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	6a1b      	ldr	r3, [r3, #32]
 8007c1e:	617b      	str	r3, [r7, #20]

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 8007c20:	687b      	ldr	r3, [r7, #4]
 8007c22:	6a1b      	ldr	r3, [r3, #32]
 8007c24:	f423 7280 	bic.w	r2, r3, #256	@ 0x100
 8007c28:	687b      	ldr	r3, [r7, #4]
 8007c2a:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007c2c:	687b      	ldr	r3, [r7, #4]
 8007c2e:	685b      	ldr	r3, [r3, #4]
 8007c30:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007c32:	687b      	ldr	r3, [r7, #4]
 8007c34:	69db      	ldr	r3, [r3, #28]
 8007c36:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 8007c38:	68fb      	ldr	r3, [r7, #12]
 8007c3a:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007c3e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 8007c40:	68fb      	ldr	r3, [r7, #12]
 8007c42:	f023 0303 	bic.w	r3, r3, #3
 8007c46:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 8007c48:	683b      	ldr	r3, [r7, #0]
 8007c4a:	681b      	ldr	r3, [r3, #0]
 8007c4c:	68fa      	ldr	r2, [r7, #12]
 8007c4e:	4313      	orrs	r3, r2
 8007c50:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 8007c52:	697b      	ldr	r3, [r7, #20]
 8007c54:	f423 7300 	bic.w	r3, r3, #512	@ 0x200
 8007c58:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 8007c5a:	683b      	ldr	r3, [r7, #0]
 8007c5c:	689b      	ldr	r3, [r3, #8]
 8007c5e:	021b      	lsls	r3, r3, #8
 8007c60:	697a      	ldr	r2, [r7, #20]
 8007c62:	4313      	orrs	r3, r2
 8007c64:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	4a21      	ldr	r2, [pc, #132]	@ (8007cf0 <TIM_OC3_SetConfig+0xe0>)
 8007c6a:	4293      	cmp	r3, r2
 8007c6c:	d003      	beq.n	8007c76 <TIM_OC3_SetConfig+0x66>
 8007c6e:	687b      	ldr	r3, [r7, #4]
 8007c70:	4a20      	ldr	r2, [pc, #128]	@ (8007cf4 <TIM_OC3_SetConfig+0xe4>)
 8007c72:	4293      	cmp	r3, r2
 8007c74:	d10d      	bne.n	8007c92 <TIM_OC3_SetConfig+0x82>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 8007c76:	697b      	ldr	r3, [r7, #20]
 8007c78:	f423 6300 	bic.w	r3, r3, #2048	@ 0x800
 8007c7c:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 8007c7e:	683b      	ldr	r3, [r7, #0]
 8007c80:	68db      	ldr	r3, [r3, #12]
 8007c82:	021b      	lsls	r3, r3, #8
 8007c84:	697a      	ldr	r2, [r7, #20]
 8007c86:	4313      	orrs	r3, r2
 8007c88:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 8007c8a:	697b      	ldr	r3, [r7, #20]
 8007c8c:	f423 6380 	bic.w	r3, r3, #1024	@ 0x400
 8007c90:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007c92:	687b      	ldr	r3, [r7, #4]
 8007c94:	4a16      	ldr	r2, [pc, #88]	@ (8007cf0 <TIM_OC3_SetConfig+0xe0>)
 8007c96:	4293      	cmp	r3, r2
 8007c98:	d003      	beq.n	8007ca2 <TIM_OC3_SetConfig+0x92>
 8007c9a:	687b      	ldr	r3, [r7, #4]
 8007c9c:	4a15      	ldr	r2, [pc, #84]	@ (8007cf4 <TIM_OC3_SetConfig+0xe4>)
 8007c9e:	4293      	cmp	r3, r2
 8007ca0:	d113      	bne.n	8007cca <TIM_OC3_SetConfig+0xba>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 8007ca2:	693b      	ldr	r3, [r7, #16]
 8007ca4:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8007ca8:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 8007caa:	693b      	ldr	r3, [r7, #16]
 8007cac:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007cb0:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 8007cb2:	683b      	ldr	r3, [r7, #0]
 8007cb4:	695b      	ldr	r3, [r3, #20]
 8007cb6:	011b      	lsls	r3, r3, #4
 8007cb8:	693a      	ldr	r2, [r7, #16]
 8007cba:	4313      	orrs	r3, r2
 8007cbc:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 8007cbe:	683b      	ldr	r3, [r7, #0]
 8007cc0:	699b      	ldr	r3, [r3, #24]
 8007cc2:	011b      	lsls	r3, r3, #4
 8007cc4:	693a      	ldr	r2, [r7, #16]
 8007cc6:	4313      	orrs	r3, r2
 8007cc8:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007cca:	687b      	ldr	r3, [r7, #4]
 8007ccc:	693a      	ldr	r2, [r7, #16]
 8007cce:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007cd0:	687b      	ldr	r3, [r7, #4]
 8007cd2:	68fa      	ldr	r2, [r7, #12]
 8007cd4:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 8007cd6:	683b      	ldr	r3, [r7, #0]
 8007cd8:	685a      	ldr	r2, [r3, #4]
 8007cda:	687b      	ldr	r3, [r7, #4]
 8007cdc:	63da      	str	r2, [r3, #60]	@ 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007cde:	687b      	ldr	r3, [r7, #4]
 8007ce0:	697a      	ldr	r2, [r7, #20]
 8007ce2:	621a      	str	r2, [r3, #32]
}
 8007ce4:	bf00      	nop
 8007ce6:	371c      	adds	r7, #28
 8007ce8:	46bd      	mov	sp, r7
 8007cea:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cee:	4770      	bx	lr
 8007cf0:	40010000 	.word	0x40010000
 8007cf4:	40010400 	.word	0x40010400

08007cf8 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The output configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, const TIM_OC_InitTypeDef *OC_Config)
{
 8007cf8:	b480      	push	{r7}
 8007cfa:	b087      	sub	sp, #28
 8007cfc:	af00      	add	r7, sp, #0
 8007cfe:	6078      	str	r0, [r7, #4]
 8007d00:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 8007d02:	687b      	ldr	r3, [r7, #4]
 8007d04:	6a1b      	ldr	r3, [r3, #32]
 8007d06:	613b      	str	r3, [r7, #16]

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 8007d08:	687b      	ldr	r3, [r7, #4]
 8007d0a:	6a1b      	ldr	r3, [r3, #32]
 8007d0c:	f423 5280 	bic.w	r2, r3, #4096	@ 0x1000
 8007d10:	687b      	ldr	r3, [r7, #4]
 8007d12:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 8007d14:	687b      	ldr	r3, [r7, #4]
 8007d16:	685b      	ldr	r3, [r3, #4]
 8007d18:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 8007d1a:	687b      	ldr	r3, [r7, #4]
 8007d1c:	69db      	ldr	r3, [r3, #28]
 8007d1e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 8007d20:	68fb      	ldr	r3, [r7, #12]
 8007d22:	f423 43e0 	bic.w	r3, r3, #28672	@ 0x7000
 8007d26:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 8007d28:	68fb      	ldr	r3, [r7, #12]
 8007d2a:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8007d2e:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 8007d30:	683b      	ldr	r3, [r7, #0]
 8007d32:	681b      	ldr	r3, [r3, #0]
 8007d34:	021b      	lsls	r3, r3, #8
 8007d36:	68fa      	ldr	r2, [r7, #12]
 8007d38:	4313      	orrs	r3, r2
 8007d3a:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 8007d3c:	693b      	ldr	r3, [r7, #16]
 8007d3e:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8007d42:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 8007d44:	683b      	ldr	r3, [r7, #0]
 8007d46:	689b      	ldr	r3, [r3, #8]
 8007d48:	031b      	lsls	r3, r3, #12
 8007d4a:	693a      	ldr	r2, [r7, #16]
 8007d4c:	4313      	orrs	r3, r2
 8007d4e:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 8007d50:	687b      	ldr	r3, [r7, #4]
 8007d52:	4a12      	ldr	r2, [pc, #72]	@ (8007d9c <TIM_OC4_SetConfig+0xa4>)
 8007d54:	4293      	cmp	r3, r2
 8007d56:	d003      	beq.n	8007d60 <TIM_OC4_SetConfig+0x68>
 8007d58:	687b      	ldr	r3, [r7, #4]
 8007d5a:	4a11      	ldr	r2, [pc, #68]	@ (8007da0 <TIM_OC4_SetConfig+0xa8>)
 8007d5c:	4293      	cmp	r3, r2
 8007d5e:	d109      	bne.n	8007d74 <TIM_OC4_SetConfig+0x7c>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 8007d60:	697b      	ldr	r3, [r7, #20]
 8007d62:	f423 4380 	bic.w	r3, r3, #16384	@ 0x4000
 8007d66:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 8007d68:	683b      	ldr	r3, [r7, #0]
 8007d6a:	695b      	ldr	r3, [r3, #20]
 8007d6c:	019b      	lsls	r3, r3, #6
 8007d6e:	697a      	ldr	r2, [r7, #20]
 8007d70:	4313      	orrs	r3, r2
 8007d72:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 8007d74:	687b      	ldr	r3, [r7, #4]
 8007d76:	697a      	ldr	r2, [r7, #20]
 8007d78:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 8007d7a:	687b      	ldr	r3, [r7, #4]
 8007d7c:	68fa      	ldr	r2, [r7, #12]
 8007d7e:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 8007d80:	683b      	ldr	r3, [r7, #0]
 8007d82:	685a      	ldr	r2, [r3, #4]
 8007d84:	687b      	ldr	r3, [r7, #4]
 8007d86:	641a      	str	r2, [r3, #64]	@ 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 8007d88:	687b      	ldr	r3, [r7, #4]
 8007d8a:	693a      	ldr	r2, [r7, #16]
 8007d8c:	621a      	str	r2, [r3, #32]
}
 8007d8e:	bf00      	nop
 8007d90:	371c      	adds	r7, #28
 8007d92:	46bd      	mov	sp, r7
 8007d94:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007d98:	4770      	bx	lr
 8007d9a:	bf00      	nop
 8007d9c:	40010000 	.word	0x40010000
 8007da0:	40010400 	.word	0x40010400

08007da4 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007da4:	b480      	push	{r7}
 8007da6:	b087      	sub	sp, #28
 8007da8:	af00      	add	r7, sp, #0
 8007daa:	60f8      	str	r0, [r7, #12]
 8007dac:	60b9      	str	r1, [r7, #8]
 8007dae:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 8007db0:	68fb      	ldr	r3, [r7, #12]
 8007db2:	6a1b      	ldr	r3, [r3, #32]
 8007db4:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 8007db6:	68fb      	ldr	r3, [r7, #12]
 8007db8:	6a1b      	ldr	r3, [r3, #32]
 8007dba:	f023 0201 	bic.w	r2, r3, #1
 8007dbe:	68fb      	ldr	r3, [r7, #12]
 8007dc0:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007dc2:	68fb      	ldr	r3, [r7, #12]
 8007dc4:	699b      	ldr	r3, [r3, #24]
 8007dc6:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 8007dc8:	693b      	ldr	r3, [r7, #16]
 8007dca:	f023 03f0 	bic.w	r3, r3, #240	@ 0xf0
 8007dce:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 8007dd0:	687b      	ldr	r3, [r7, #4]
 8007dd2:	011b      	lsls	r3, r3, #4
 8007dd4:	693a      	ldr	r2, [r7, #16]
 8007dd6:	4313      	orrs	r3, r2
 8007dd8:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 8007dda:	697b      	ldr	r3, [r7, #20]
 8007ddc:	f023 030a 	bic.w	r3, r3, #10
 8007de0:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 8007de2:	697a      	ldr	r2, [r7, #20]
 8007de4:	68bb      	ldr	r3, [r7, #8]
 8007de6:	4313      	orrs	r3, r2
 8007de8:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 8007dea:	68fb      	ldr	r3, [r7, #12]
 8007dec:	693a      	ldr	r2, [r7, #16]
 8007dee:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007df0:	68fb      	ldr	r3, [r7, #12]
 8007df2:	697a      	ldr	r2, [r7, #20]
 8007df4:	621a      	str	r2, [r3, #32]
}
 8007df6:	bf00      	nop
 8007df8:	371c      	adds	r7, #28
 8007dfa:	46bd      	mov	sp, r7
 8007dfc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e00:	4770      	bx	lr

08007e02 <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 8007e02:	b480      	push	{r7}
 8007e04:	b087      	sub	sp, #28
 8007e06:	af00      	add	r7, sp, #0
 8007e08:	60f8      	str	r0, [r7, #12]
 8007e0a:	60b9      	str	r1, [r7, #8]
 8007e0c:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  tmpccer = TIMx->CCER;
 8007e0e:	68fb      	ldr	r3, [r7, #12]
 8007e10:	6a1b      	ldr	r3, [r3, #32]
 8007e12:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC2E;
 8007e14:	68fb      	ldr	r3, [r7, #12]
 8007e16:	6a1b      	ldr	r3, [r3, #32]
 8007e18:	f023 0210 	bic.w	r2, r3, #16
 8007e1c:	68fb      	ldr	r3, [r7, #12]
 8007e1e:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 8007e20:	68fb      	ldr	r3, [r7, #12]
 8007e22:	699b      	ldr	r3, [r3, #24]
 8007e24:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 8007e26:	693b      	ldr	r3, [r7, #16]
 8007e28:	f423 4370 	bic.w	r3, r3, #61440	@ 0xf000
 8007e2c:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 8007e2e:	687b      	ldr	r3, [r7, #4]
 8007e30:	031b      	lsls	r3, r3, #12
 8007e32:	693a      	ldr	r2, [r7, #16]
 8007e34:	4313      	orrs	r3, r2
 8007e36:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 8007e38:	697b      	ldr	r3, [r7, #20]
 8007e3a:	f023 03a0 	bic.w	r3, r3, #160	@ 0xa0
 8007e3e:	617b      	str	r3, [r7, #20]
  tmpccer |= (TIM_ICPolarity << 4U);
 8007e40:	68bb      	ldr	r3, [r7, #8]
 8007e42:	011b      	lsls	r3, r3, #4
 8007e44:	697a      	ldr	r2, [r7, #20]
 8007e46:	4313      	orrs	r3, r2
 8007e48:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 8007e4a:	68fb      	ldr	r3, [r7, #12]
 8007e4c:	693a      	ldr	r2, [r7, #16]
 8007e4e:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 8007e50:	68fb      	ldr	r3, [r7, #12]
 8007e52:	697a      	ldr	r2, [r7, #20]
 8007e54:	621a      	str	r2, [r3, #32]
}
 8007e56:	bf00      	nop
 8007e58:	371c      	adds	r7, #28
 8007e5a:	46bd      	mov	sp, r7
 8007e5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e60:	4770      	bx	lr

08007e62 <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 8007e62:	b480      	push	{r7}
 8007e64:	b085      	sub	sp, #20
 8007e66:	af00      	add	r7, sp, #0
 8007e68:	6078      	str	r0, [r7, #4]
 8007e6a:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 8007e6c:	687b      	ldr	r3, [r7, #4]
 8007e6e:	689b      	ldr	r3, [r3, #8]
 8007e70:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 8007e72:	68fb      	ldr	r3, [r7, #12]
 8007e74:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007e78:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 8007e7a:	683a      	ldr	r2, [r7, #0]
 8007e7c:	68fb      	ldr	r3, [r7, #12]
 8007e7e:	4313      	orrs	r3, r2
 8007e80:	f043 0307 	orr.w	r3, r3, #7
 8007e84:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007e86:	687b      	ldr	r3, [r7, #4]
 8007e88:	68fa      	ldr	r2, [r7, #12]
 8007e8a:	609a      	str	r2, [r3, #8]
}
 8007e8c:	bf00      	nop
 8007e8e:	3714      	adds	r7, #20
 8007e90:	46bd      	mov	sp, r7
 8007e92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007e96:	4770      	bx	lr

08007e98 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 8007e98:	b480      	push	{r7}
 8007e9a:	b087      	sub	sp, #28
 8007e9c:	af00      	add	r7, sp, #0
 8007e9e:	60f8      	str	r0, [r7, #12]
 8007ea0:	60b9      	str	r1, [r7, #8]
 8007ea2:	607a      	str	r2, [r7, #4]
 8007ea4:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 8007ea6:	68fb      	ldr	r3, [r7, #12]
 8007ea8:	689b      	ldr	r3, [r3, #8]
 8007eaa:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 8007eac:	697b      	ldr	r3, [r7, #20]
 8007eae:	f423 437f 	bic.w	r3, r3, #65280	@ 0xff00
 8007eb2:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 8007eb4:	683b      	ldr	r3, [r7, #0]
 8007eb6:	021a      	lsls	r2, r3, #8
 8007eb8:	687b      	ldr	r3, [r7, #4]
 8007eba:	431a      	orrs	r2, r3
 8007ebc:	68bb      	ldr	r3, [r7, #8]
 8007ebe:	4313      	orrs	r3, r2
 8007ec0:	697a      	ldr	r2, [r7, #20]
 8007ec2:	4313      	orrs	r3, r2
 8007ec4:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 8007ec6:	68fb      	ldr	r3, [r7, #12]
 8007ec8:	697a      	ldr	r2, [r7, #20]
 8007eca:	609a      	str	r2, [r3, #8]
}
 8007ecc:	bf00      	nop
 8007ece:	371c      	adds	r7, #28
 8007ed0:	46bd      	mov	sp, r7
 8007ed2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ed6:	4770      	bx	lr

08007ed8 <TIM_CCxChannelCmd>:
  * @param  ChannelState specifies the TIM Channel CCxE bit new state.
  *          This parameter can be: TIM_CCx_ENABLE or TIM_CCx_DISABLE.
  * @retval None
  */
void TIM_CCxChannelCmd(TIM_TypeDef *TIMx, uint32_t Channel, uint32_t ChannelState)
{
 8007ed8:	b480      	push	{r7}
 8007eda:	b087      	sub	sp, #28
 8007edc:	af00      	add	r7, sp, #0
 8007ede:	60f8      	str	r0, [r7, #12]
 8007ee0:	60b9      	str	r1, [r7, #8]
 8007ee2:	607a      	str	r2, [r7, #4]

  /* Check the parameters */
  assert_param(IS_TIM_CC1_INSTANCE(TIMx));
  assert_param(IS_TIM_CHANNELS(Channel));

  tmp = TIM_CCER_CC1E << (Channel & 0x1FU); /* 0x1FU = 31 bits max shift */
 8007ee4:	68bb      	ldr	r3, [r7, #8]
 8007ee6:	f003 031f 	and.w	r3, r3, #31
 8007eea:	2201      	movs	r2, #1
 8007eec:	fa02 f303 	lsl.w	r3, r2, r3
 8007ef0:	617b      	str	r3, [r7, #20]

  /* Reset the CCxE Bit */
  TIMx->CCER &= ~tmp;
 8007ef2:	68fb      	ldr	r3, [r7, #12]
 8007ef4:	6a1a      	ldr	r2, [r3, #32]
 8007ef6:	697b      	ldr	r3, [r7, #20]
 8007ef8:	43db      	mvns	r3, r3
 8007efa:	401a      	ands	r2, r3
 8007efc:	68fb      	ldr	r3, [r7, #12]
 8007efe:	621a      	str	r2, [r3, #32]

  /* Set or reset the CCxE Bit */
  TIMx->CCER |= (uint32_t)(ChannelState << (Channel & 0x1FU)); /* 0x1FU = 31 bits max shift */
 8007f00:	68fb      	ldr	r3, [r7, #12]
 8007f02:	6a1a      	ldr	r2, [r3, #32]
 8007f04:	68bb      	ldr	r3, [r7, #8]
 8007f06:	f003 031f 	and.w	r3, r3, #31
 8007f0a:	6879      	ldr	r1, [r7, #4]
 8007f0c:	fa01 f303 	lsl.w	r3, r1, r3
 8007f10:	431a      	orrs	r2, r3
 8007f12:	68fb      	ldr	r3, [r7, #12]
 8007f14:	621a      	str	r2, [r3, #32]
}
 8007f16:	bf00      	nop
 8007f18:	371c      	adds	r7, #28
 8007f1a:	46bd      	mov	sp, r7
 8007f1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007f20:	4770      	bx	lr
	...

08007f24 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        const TIM_MasterConfigTypeDef *sMasterConfig)
{
 8007f24:	b480      	push	{r7}
 8007f26:	b085      	sub	sp, #20
 8007f28:	af00      	add	r7, sp, #0
 8007f2a:	6078      	str	r0, [r7, #4]
 8007f2c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8007f2e:	687b      	ldr	r3, [r7, #4]
 8007f30:	f893 303c 	ldrb.w	r3, [r3, #60]	@ 0x3c
 8007f34:	2b01      	cmp	r3, #1
 8007f36:	d101      	bne.n	8007f3c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8007f38:	2302      	movs	r3, #2
 8007f3a:	e05a      	b.n	8007ff2 <HAL_TIMEx_MasterConfigSynchronization+0xce>
 8007f3c:	687b      	ldr	r3, [r7, #4]
 8007f3e:	2201      	movs	r2, #1
 8007f40:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8007f44:	687b      	ldr	r3, [r7, #4]
 8007f46:	2202      	movs	r2, #2
 8007f48:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8007f4c:	687b      	ldr	r3, [r7, #4]
 8007f4e:	681b      	ldr	r3, [r3, #0]
 8007f50:	685b      	ldr	r3, [r3, #4]
 8007f52:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8007f54:	687b      	ldr	r3, [r7, #4]
 8007f56:	681b      	ldr	r3, [r3, #0]
 8007f58:	689b      	ldr	r3, [r3, #8]
 8007f5a:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8007f5c:	68fb      	ldr	r3, [r7, #12]
 8007f5e:	f023 0370 	bic.w	r3, r3, #112	@ 0x70
 8007f62:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8007f64:	683b      	ldr	r3, [r7, #0]
 8007f66:	681b      	ldr	r3, [r3, #0]
 8007f68:	68fa      	ldr	r2, [r7, #12]
 8007f6a:	4313      	orrs	r3, r2
 8007f6c:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8007f6e:	687b      	ldr	r3, [r7, #4]
 8007f70:	681b      	ldr	r3, [r3, #0]
 8007f72:	68fa      	ldr	r2, [r7, #12]
 8007f74:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 8007f76:	687b      	ldr	r3, [r7, #4]
 8007f78:	681b      	ldr	r3, [r3, #0]
 8007f7a:	4a21      	ldr	r2, [pc, #132]	@ (8008000 <HAL_TIMEx_MasterConfigSynchronization+0xdc>)
 8007f7c:	4293      	cmp	r3, r2
 8007f7e:	d022      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f80:	687b      	ldr	r3, [r7, #4]
 8007f82:	681b      	ldr	r3, [r3, #0]
 8007f84:	f1b3 4f80 	cmp.w	r3, #1073741824	@ 0x40000000
 8007f88:	d01d      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f8a:	687b      	ldr	r3, [r7, #4]
 8007f8c:	681b      	ldr	r3, [r3, #0]
 8007f8e:	4a1d      	ldr	r2, [pc, #116]	@ (8008004 <HAL_TIMEx_MasterConfigSynchronization+0xe0>)
 8007f90:	4293      	cmp	r3, r2
 8007f92:	d018      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f94:	687b      	ldr	r3, [r7, #4]
 8007f96:	681b      	ldr	r3, [r3, #0]
 8007f98:	4a1b      	ldr	r2, [pc, #108]	@ (8008008 <HAL_TIMEx_MasterConfigSynchronization+0xe4>)
 8007f9a:	4293      	cmp	r3, r2
 8007f9c:	d013      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007f9e:	687b      	ldr	r3, [r7, #4]
 8007fa0:	681b      	ldr	r3, [r3, #0]
 8007fa2:	4a1a      	ldr	r2, [pc, #104]	@ (800800c <HAL_TIMEx_MasterConfigSynchronization+0xe8>)
 8007fa4:	4293      	cmp	r3, r2
 8007fa6:	d00e      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007fa8:	687b      	ldr	r3, [r7, #4]
 8007faa:	681b      	ldr	r3, [r3, #0]
 8007fac:	4a18      	ldr	r2, [pc, #96]	@ (8008010 <HAL_TIMEx_MasterConfigSynchronization+0xec>)
 8007fae:	4293      	cmp	r3, r2
 8007fb0:	d009      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007fb2:	687b      	ldr	r3, [r7, #4]
 8007fb4:	681b      	ldr	r3, [r3, #0]
 8007fb6:	4a17      	ldr	r2, [pc, #92]	@ (8008014 <HAL_TIMEx_MasterConfigSynchronization+0xf0>)
 8007fb8:	4293      	cmp	r3, r2
 8007fba:	d004      	beq.n	8007fc6 <HAL_TIMEx_MasterConfigSynchronization+0xa2>
 8007fbc:	687b      	ldr	r3, [r7, #4]
 8007fbe:	681b      	ldr	r3, [r3, #0]
 8007fc0:	4a15      	ldr	r2, [pc, #84]	@ (8008018 <HAL_TIMEx_MasterConfigSynchronization+0xf4>)
 8007fc2:	4293      	cmp	r3, r2
 8007fc4:	d10c      	bne.n	8007fe0 <HAL_TIMEx_MasterConfigSynchronization+0xbc>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 8007fc6:	68bb      	ldr	r3, [r7, #8]
 8007fc8:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 8007fcc:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8007fce:	683b      	ldr	r3, [r7, #0]
 8007fd0:	685b      	ldr	r3, [r3, #4]
 8007fd2:	68ba      	ldr	r2, [r7, #8]
 8007fd4:	4313      	orrs	r3, r2
 8007fd6:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 8007fd8:	687b      	ldr	r3, [r7, #4]
 8007fda:	681b      	ldr	r3, [r3, #0]
 8007fdc:	68ba      	ldr	r2, [r7, #8]
 8007fde:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8007fe0:	687b      	ldr	r3, [r7, #4]
 8007fe2:	2201      	movs	r2, #1
 8007fe4:	f883 203d 	strb.w	r2, [r3, #61]	@ 0x3d

  __HAL_UNLOCK(htim);
 8007fe8:	687b      	ldr	r3, [r7, #4]
 8007fea:	2200      	movs	r2, #0
 8007fec:	f883 203c 	strb.w	r2, [r3, #60]	@ 0x3c

  return HAL_OK;
 8007ff0:	2300      	movs	r3, #0
}
 8007ff2:	4618      	mov	r0, r3
 8007ff4:	3714      	adds	r7, #20
 8007ff6:	46bd      	mov	sp, r7
 8007ff8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007ffc:	4770      	bx	lr
 8007ffe:	bf00      	nop
 8008000:	40010000 	.word	0x40010000
 8008004:	40000400 	.word	0x40000400
 8008008:	40000800 	.word	0x40000800
 800800c:	40000c00 	.word	0x40000c00
 8008010:	40010400 	.word	0x40010400
 8008014:	40014000 	.word	0x40014000
 8008018:	40001800 	.word	0x40001800

0800801c <HAL_TIMEx_CommutCallback>:
  * @brief  Commutation callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_CommutCallback(TIM_HandleTypeDef *htim)
{
 800801c:	b480      	push	{r7}
 800801e:	b083      	sub	sp, #12
 8008020:	af00      	add	r7, sp, #0
 8008022:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_CommutCallback could be implemented in the user file
   */
}
 8008024:	bf00      	nop
 8008026:	370c      	adds	r7, #12
 8008028:	46bd      	mov	sp, r7
 800802a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800802e:	4770      	bx	lr

08008030 <HAL_TIMEx_BreakCallback>:
  * @brief  Break detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIMEx_BreakCallback(TIM_HandleTypeDef *htim)
{
 8008030:	b480      	push	{r7}
 8008032:	b083      	sub	sp, #12
 8008034:	af00      	add	r7, sp, #0
 8008036:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIMEx_BreakCallback could be implemented in the user file
   */
}
 8008038:	bf00      	nop
 800803a:	370c      	adds	r7, #12
 800803c:	46bd      	mov	sp, r7
 800803e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008042:	4770      	bx	lr

08008044 <MX_TouchGFX_Init>:
 8008044:	b580      	push	{r7, lr}
 8008046:	af00      	add	r7, sp, #0
 8008048:	f007 fbd0 	bl	800f7ec <touchgfx_components_init>
 800804c:	f007 fba4 	bl	800f798 <touchgfx_init>
 8008050:	bf00      	nop
 8008052:	bd80      	pop	{r7, pc}

08008054 <MX_TouchGFX_Process>:
 8008054:	b580      	push	{r7, lr}
 8008056:	af00      	add	r7, sp, #0
 8008058:	f007 fbd0 	bl	800f7fc <touchgfx_taskEntry>
 800805c:	bf00      	nop
 800805e:	bd80      	pop	{r7, pc}

08008060 <_ZN8touchgfx12FontProviderD1Ev>:
     * @return The font with a font id of fontId.
     */
    virtual Font* getFont(FontId fontId) = 0;

    /** Finalizes an instance of the FontProvider class. */
    virtual ~FontProvider()
 8008060:	b480      	push	{r7}
 8008062:	b083      	sub	sp, #12
 8008064:	af00      	add	r7, sp, #0
 8008066:	6078      	str	r0, [r7, #4]
    {
 8008068:	4a04      	ldr	r2, [pc, #16]	@ (800807c <_ZN8touchgfx12FontProviderD1Ev+0x1c>)
 800806a:	687b      	ldr	r3, [r7, #4]
 800806c:	601a      	str	r2, [r3, #0]
    }
 800806e:	687b      	ldr	r3, [r7, #4]
 8008070:	4618      	mov	r0, r3
 8008072:	370c      	adds	r7, #12
 8008074:	46bd      	mov	sp, r7
 8008076:	f85d 7b04 	ldr.w	r7, [sp], #4
 800807a:	4770      	bx	lr
 800807c:	080281f4 	.word	0x080281f4

08008080 <_ZN8touchgfx12FontProviderD0Ev>:
    virtual ~FontProvider()
 8008080:	b580      	push	{r7, lr}
 8008082:	b082      	sub	sp, #8
 8008084:	af00      	add	r7, sp, #0
 8008086:	6078      	str	r0, [r7, #4]
    }
 8008088:	6878      	ldr	r0, [r7, #4]
 800808a:	f7ff ffe9 	bl	8008060 <_ZN8touchgfx12FontProviderD1Ev>
 800808e:	2104      	movs	r1, #4
 8008090:	6878      	ldr	r0, [r7, #4]
 8008092:	f01d fe2e 	bl	8025cf2 <_ZdlPvj>
 8008096:	687b      	ldr	r3, [r7, #4]
 8008098:	4618      	mov	r0, r3
 800809a:	3708      	adds	r7, #8
 800809c:	46bd      	mov	sp, r7
 800809e:	bd80      	pop	{r7, pc}

080080a0 <_ZN23ApplicationFontProvider7getFontEt>:
#include <fonts/ApplicationFontProvider.hpp>
#include <fonts/GeneratedFont.hpp>
#include <texts/TypedTextDatabase.hpp>

touchgfx::Font* ApplicationFontProvider::getFont(touchgfx::FontId typography)
{
 80080a0:	b580      	push	{r7, lr}
 80080a2:	b082      	sub	sp, #8
 80080a4:	af00      	add	r7, sp, #0
 80080a6:	6078      	str	r0, [r7, #4]
 80080a8:	460b      	mov	r3, r1
 80080aa:	807b      	strh	r3, [r7, #2]
    switch (typography)
 80080ac:	887b      	ldrh	r3, [r7, #2]
 80080ae:	2b00      	cmp	r3, #0
 80080b0:	d002      	beq.n	80080b8 <_ZN23ApplicationFontProvider7getFontEt+0x18>
 80080b2:	2b01      	cmp	r3, #1
 80080b4:	d005      	beq.n	80080c2 <_ZN23ApplicationFontProvider7getFontEt+0x22>
 80080b6:	e009      	b.n	80080cc <_ZN23ApplicationFontProvider7getFontEt+0x2c>
    {
    case Typography::DEFAULT:
        // Asap_Regular_80_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[0]);
 80080b8:	f005 fd30 	bl	800db1c <_ZN17TypedTextDatabase8getFontsEv>
 80080bc:	4603      	mov	r3, r0
 80080be:	681b      	ldr	r3, [r3, #0]
 80080c0:	e005      	b.n	80080ce <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    case Typography::TYPOGRAPHY_00:
        // verdana_30_4bpp
        return const_cast<touchgfx::Font*>(TypedTextDatabase::getFonts()[1]);
 80080c2:	f005 fd2b 	bl	800db1c <_ZN17TypedTextDatabase8getFontsEv>
 80080c6:	4603      	mov	r3, r0
 80080c8:	685b      	ldr	r3, [r3, #4]
 80080ca:	e000      	b.n	80080ce <_ZN23ApplicationFontProvider7getFontEt+0x2e>
    default:
        return 0;
 80080cc:	2300      	movs	r3, #0
    }
}
 80080ce:	4618      	mov	r0, r3
 80080d0:	3708      	adds	r7, #8
 80080d2:	46bd      	mov	sp, r7
 80080d4:	bd80      	pop	{r7, pc}
	...

080080d8 <_ZN23ApplicationFontProviderD1Ev>:
    static const touchgfx::FontId DEFAULT = 0;       // Asap_Regular_80_4bpp
    static const touchgfx::FontId TYPOGRAPHY_00 = 1; // verdana_30_4bpp
    static const uint16_t NUMBER_OF_FONTS = 2;
};

class ApplicationFontProvider : public touchgfx::FontProvider
 80080d8:	b580      	push	{r7, lr}
 80080da:	b082      	sub	sp, #8
 80080dc:	af00      	add	r7, sp, #0
 80080de:	6078      	str	r0, [r7, #4]
 80080e0:	4a05      	ldr	r2, [pc, #20]	@ (80080f8 <_ZN23ApplicationFontProviderD1Ev+0x20>)
 80080e2:	687b      	ldr	r3, [r7, #4]
 80080e4:	601a      	str	r2, [r3, #0]
 80080e6:	687b      	ldr	r3, [r7, #4]
 80080e8:	4618      	mov	r0, r3
 80080ea:	f7ff ffb9 	bl	8008060 <_ZN8touchgfx12FontProviderD1Ev>
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	4618      	mov	r0, r3
 80080f2:	3708      	adds	r7, #8
 80080f4:	46bd      	mov	sp, r7
 80080f6:	bd80      	pop	{r7, pc}
 80080f8:	080281e0 	.word	0x080281e0

080080fc <_ZN23ApplicationFontProviderD0Ev>:
 80080fc:	b580      	push	{r7, lr}
 80080fe:	b082      	sub	sp, #8
 8008100:	af00      	add	r7, sp, #0
 8008102:	6078      	str	r0, [r7, #4]
 8008104:	6878      	ldr	r0, [r7, #4]
 8008106:	f7ff ffe7 	bl	80080d8 <_ZN23ApplicationFontProviderD1Ev>
 800810a:	2104      	movs	r1, #4
 800810c:	6878      	ldr	r0, [r7, #4]
 800810e:	f01d fdf0 	bl	8025cf2 <_ZdlPvj>
 8008112:	687b      	ldr	r3, [r7, #4]
 8008114:	4618      	mov	r0, r3
 8008116:	3708      	adds	r7, #8
 8008118:	46bd      	mov	sp, r7
 800811a:	bd80      	pop	{r7, pc}

0800811c <_ZN8touchgfx4FontD1Ev>:
 */
class Font
{
public:
    /** Finalizes an instance of the Font class. */
    virtual ~Font()
 800811c:	b480      	push	{r7}
 800811e:	b083      	sub	sp, #12
 8008120:	af00      	add	r7, sp, #0
 8008122:	6078      	str	r0, [r7, #4]
    {
 8008124:	4a04      	ldr	r2, [pc, #16]	@ (8008138 <_ZN8touchgfx4FontD1Ev+0x1c>)
 8008126:	687b      	ldr	r3, [r7, #4]
 8008128:	601a      	str	r2, [r3, #0]
    }
 800812a:	687b      	ldr	r3, [r7, #4]
 800812c:	4618      	mov	r0, r3
 800812e:	370c      	adds	r7, #12
 8008130:	46bd      	mov	sp, r7
 8008132:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008136:	4770      	bx	lr
 8008138:	080289cc 	.word	0x080289cc

0800813c <_ZN8touchgfx4FontD0Ev>:
    virtual ~Font()
 800813c:	b580      	push	{r7, lr}
 800813e:	b082      	sub	sp, #8
 8008140:	af00      	add	r7, sp, #0
 8008142:	6078      	str	r0, [r7, #4]
    }
 8008144:	6878      	ldr	r0, [r7, #4]
 8008146:	f7ff ffe9 	bl	800811c <_ZN8touchgfx4FontD1Ev>
 800814a:	2114      	movs	r1, #20
 800814c:	6878      	ldr	r0, [r7, #4]
 800814e:	f01d fdd0 	bl	8025cf2 <_ZdlPvj>
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	4618      	mov	r0, r3
 8008156:	3708      	adds	r7, #8
 8008158:	46bd      	mov	sp, r7
 800815a:	bd80      	pop	{r7, pc}

0800815c <_ZNK8touchgfx4Font8getGlyphEt>:
     *
     * @return A pointer to the glyph node or null if the glyph was not found.
     *
     * @see TextProvider::getNextLigature
     */
    virtual const GlyphNode* getGlyph(Unicode::UnicodeChar unicode) const
 800815c:	b590      	push	{r4, r7, lr}
 800815e:	b087      	sub	sp, #28
 8008160:	af00      	add	r7, sp, #0
 8008162:	6078      	str	r0, [r7, #4]
 8008164:	460b      	mov	r3, r1
 8008166:	807b      	strh	r3, [r7, #2]
    {
        if (unicode == 0)
 8008168:	887b      	ldrh	r3, [r7, #2]
 800816a:	2b00      	cmp	r3, #0
 800816c:	d101      	bne.n	8008172 <_ZNK8touchgfx4Font8getGlyphEt+0x16>
        {
            return 0;
 800816e:	2300      	movs	r3, #0
 8008170:	e010      	b.n	8008194 <_ZNK8touchgfx4Font8getGlyphEt+0x38>
        }
        const uint8_t* dummyPixelDataPointer = 0;
 8008172:	2300      	movs	r3, #0
 8008174:	613b      	str	r3, [r7, #16]
        uint8_t bitsPerPixelDummy = 0;
 8008176:	2300      	movs	r3, #0
 8008178:	73fb      	strb	r3, [r7, #15]
        const GlyphNode* glyph = getGlyph(unicode, dummyPixelDataPointer, bitsPerPixelDummy);
 800817a:	687b      	ldr	r3, [r7, #4]
 800817c:	681b      	ldr	r3, [r3, #0]
 800817e:	3308      	adds	r3, #8
 8008180:	681c      	ldr	r4, [r3, #0]
 8008182:	f107 030f 	add.w	r3, r7, #15
 8008186:	f107 0210 	add.w	r2, r7, #16
 800818a:	8879      	ldrh	r1, [r7, #2]
 800818c:	6878      	ldr	r0, [r7, #4]
 800818e:	47a0      	blx	r4
 8008190:	6178      	str	r0, [r7, #20]
        return glyph;
 8008192:	697b      	ldr	r3, [r7, #20]
    }
 8008194:	4618      	mov	r0, r3
 8008196:	371c      	adds	r7, #28
 8008198:	46bd      	mov	sp, r7
 800819a:	bd90      	pop	{r4, r7, pc}

0800819c <_ZNK8touchgfx4Font15getFallbackCharEv>:
     * used when no glyph is available for some character. If 0 (zero) is returned, there is
     * no default character.
     *
     * @return The default character for the typography in case no glyph is available.
     */
    virtual Unicode::UnicodeChar getFallbackChar() const
 800819c:	b480      	push	{r7}
 800819e:	b083      	sub	sp, #12
 80081a0:	af00      	add	r7, sp, #0
 80081a2:	6078      	str	r0, [r7, #4]
    {
        return fallbackCharacter;
 80081a4:	687b      	ldr	r3, [r7, #4]
 80081a6:	89db      	ldrh	r3, [r3, #14]
    }
 80081a8:	4618      	mov	r0, r3
 80081aa:	370c      	adds	r7, #12
 80081ac:	46bd      	mov	sp, r7
 80081ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081b2:	4770      	bx	lr

080081b4 <_ZNK8touchgfx4Font15getEllipsisCharEv>:
     *
     * @return The ellipsis character for the typography.
     *
     * @see TextArea::setWideTextAction
     */
    virtual Unicode::UnicodeChar getEllipsisChar() const
 80081b4:	b480      	push	{r7}
 80081b6:	b083      	sub	sp, #12
 80081b8:	af00      	add	r7, sp, #0
 80081ba:	6078      	str	r0, [r7, #4]
    {
        return ellipsisCharacter;
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	8a1b      	ldrh	r3, [r3, #16]
    }
 80081c0:	4618      	mov	r0, r3
 80081c2:	370c      	adds	r7, #12
 80081c4:	46bd      	mov	sp, r7
 80081c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081ca:	4770      	bx	lr

080081cc <_ZNK8touchgfx4Font11getBaselineEv>:
     * @return The baseline position.
     *
     * @note It is not sufficient to allocate text areas with this height. Use
     *       getHeight for this.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getBaseline() const
 80081cc:	b480      	push	{r7}
 80081ce:	b083      	sub	sp, #12
 80081d0:	af00      	add	r7, sp, #0
 80081d2:	6078      	str	r0, [r7, #4]
    {
        return baselineHeight;
 80081d4:	687b      	ldr	r3, [r7, #4]
 80081d6:	88db      	ldrh	r3, [r3, #6]
    }
 80081d8:	4618      	mov	r0, r3
 80081da:	370c      	adds	r7, #12
 80081dc:	46bd      	mov	sp, r7
 80081de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081e2:	4770      	bx	lr

080081e4 <_ZNK8touchgfx4Font9getHeightEv>:
     * Returns the height of a font. The font may exceed the top by getPixelsAboveTop() or the
     * bottom by getPixelsBelowBottom.
     *
     * @return The font height.
     */
    FORCE_INLINE_FUNCTION virtual uint16_t getHeight() const
 80081e4:	b480      	push	{r7}
 80081e6:	b083      	sub	sp, #12
 80081e8:	af00      	add	r7, sp, #0
 80081ea:	6078      	str	r0, [r7, #4]
    {
        return fontHeight;
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	889b      	ldrh	r3, [r3, #4]
    }
 80081f0:	4618      	mov	r0, r3
 80081f2:	370c      	adds	r7, #12
 80081f4:	46bd      	mov	sp, r7
 80081f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80081fa:	4770      	bx	lr

080081fc <_ZNK8touchgfx4Font15getBitsPerPixelEv>:
    /**
     * Gets bits per pixel for this font.
     *
     * @return The number of bits used per pixel in this font.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getBitsPerPixel() const
 80081fc:	b480      	push	{r7}
 80081fe:	b083      	sub	sp, #12
 8008200:	af00      	add	r7, sp, #0
 8008202:	6078      	str	r0, [r7, #4]
    {
        return bPerPixel;
 8008204:	687b      	ldr	r3, [r7, #4]
 8008206:	7a9b      	ldrb	r3, [r3, #10]
 8008208:	f3c3 0306 	ubfx	r3, r3, #0, #7
 800820c:	b2db      	uxtb	r3, r3
    }
 800820e:	4618      	mov	r0, r3
 8008210:	370c      	adds	r7, #12
 8008212:	46bd      	mov	sp, r7
 8008214:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008218:	4770      	bx	lr

0800821a <_ZNK8touchgfx4Font15getByteAlignRowEv>:
    /**
     * Are the glyphs saved with each glyph row byte aligned?
     *
     * @return True if each glyph row is stored byte aligned, false otherwise.
     */
    FORCE_INLINE_FUNCTION virtual uint8_t getByteAlignRow() const
 800821a:	b480      	push	{r7}
 800821c:	b083      	sub	sp, #12
 800821e:	af00      	add	r7, sp, #0
 8008220:	6078      	str	r0, [r7, #4]
    {
        return bAlignRow;
 8008222:	687b      	ldr	r3, [r7, #4]
 8008224:	7a9b      	ldrb	r3, [r3, #10]
 8008226:	f3c3 13c0 	ubfx	r3, r3, #7, #1
 800822a:	b2db      	uxtb	r3, r3
    }
 800822c:	4618      	mov	r0, r3
 800822e:	370c      	adds	r7, #12
 8008230:	46bd      	mov	sp, r7
 8008232:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008236:	4770      	bx	lr

08008238 <_ZNK8touchgfx4Font17isVectorBasedFontEv>:
    /**
     * Returns true if this Font is vector based. Default is false.
     *
     * @return True if this Font is vector based.
     */
    virtual bool isVectorBasedFont() const
 8008238:	b480      	push	{r7}
 800823a:	b083      	sub	sp, #12
 800823c:	af00      	add	r7, sp, #0
 800823e:	6078      	str	r0, [r7, #4]
    {
        return false;
 8008240:	2300      	movs	r3, #0
    }
 8008242:	4618      	mov	r0, r3
 8008244:	370c      	adds	r7, #12
 8008246:	46bd      	mov	sp, r7
 8008248:	f85d 7b04 	ldr.w	r7, [sp], #4
 800824c:	4770      	bx	lr

0800824e <_ZNK8touchgfx4Font14getScaleFactorEv>:
    /**
     * Returns the scale factor
     *
     * @return The scale factor
     */
    virtual float getScaleFactor() const
 800824e:	b480      	push	{r7}
 8008250:	b083      	sub	sp, #12
 8008252:	af00      	add	r7, sp, #0
 8008254:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8008256:	f04f 0300 	mov.w	r3, #0
 800825a:	ee07 3a90 	vmov	s15, r3
    }
 800825e:	eeb0 0a67 	vmov.f32	s0, s15
 8008262:	370c      	adds	r7, #12
 8008264:	46bd      	mov	sp, r7
 8008266:	f85d 7b04 	ldr.w	r7, [sp], #4
 800826a:	4770      	bx	lr

0800826c <_ZN8touchgfx9ConstFontD1Ev>:
 *
 * @see Font
 *
 * @note Pure virtual class. Create an application-specific implementation of getPixelData().
 */
class ConstFont : public Font
 800826c:	b580      	push	{r7, lr}
 800826e:	b082      	sub	sp, #8
 8008270:	af00      	add	r7, sp, #0
 8008272:	6078      	str	r0, [r7, #4]
 8008274:	4a05      	ldr	r2, [pc, #20]	@ (800828c <_ZN8touchgfx9ConstFontD1Ev+0x20>)
 8008276:	687b      	ldr	r3, [r7, #4]
 8008278:	601a      	str	r2, [r3, #0]
 800827a:	687b      	ldr	r3, [r7, #4]
 800827c:	4618      	mov	r0, r3
 800827e:	f7ff ff4d 	bl	800811c <_ZN8touchgfx4FontD1Ev>
 8008282:	687b      	ldr	r3, [r7, #4]
 8008284:	4618      	mov	r0, r3
 8008286:	3708      	adds	r7, #8
 8008288:	46bd      	mov	sp, r7
 800828a:	bd80      	pop	{r7, pc}
 800828c:	08029758 	.word	0x08029758

08008290 <_ZN8touchgfx9ConstFontD0Ev>:
 8008290:	b580      	push	{r7, lr}
 8008292:	b082      	sub	sp, #8
 8008294:	af00      	add	r7, sp, #0
 8008296:	6078      	str	r0, [r7, #4]
 8008298:	6878      	ldr	r0, [r7, #4]
 800829a:	f7ff ffe7 	bl	800826c <_ZN8touchgfx9ConstFontD1Ev>
 800829e:	211c      	movs	r1, #28
 80082a0:	6878      	ldr	r0, [r7, #4]
 80082a2:	f01d fd26 	bl	8025cf2 <_ZdlPvj>
 80082a6:	687b      	ldr	r3, [r7, #4]
 80082a8:	4618      	mov	r0, r3
 80082aa:	3708      	adds	r7, #8
 80082ac:	46bd      	mov	sp, r7
 80082ae:	bd80      	pop	{r7, pc}

080082b0 <_ZN8touchgfx13GeneratedFontD1Ev>:

#include <touchgfx/ConstFont.hpp>

namespace touchgfx
{
class GeneratedFont : public ConstFont
 80082b0:	b580      	push	{r7, lr}
 80082b2:	b082      	sub	sp, #8
 80082b4:	af00      	add	r7, sp, #0
 80082b6:	6078      	str	r0, [r7, #4]
 80082b8:	4a05      	ldr	r2, [pc, #20]	@ (80082d0 <_ZN8touchgfx13GeneratedFontD1Ev+0x20>)
 80082ba:	687b      	ldr	r3, [r7, #4]
 80082bc:	601a      	str	r2, [r3, #0]
 80082be:	687b      	ldr	r3, [r7, #4]
 80082c0:	4618      	mov	r0, r3
 80082c2:	f7ff ffd3 	bl	800826c <_ZN8touchgfx9ConstFontD1Ev>
 80082c6:	687b      	ldr	r3, [r7, #4]
 80082c8:	4618      	mov	r0, r3
 80082ca:	3708      	adds	r7, #8
 80082cc:	46bd      	mov	sp, r7
 80082ce:	bd80      	pop	{r7, pc}
 80082d0:	08028218 	.word	0x08028218

080082d4 <_ZN8touchgfx13GeneratedFontD0Ev>:
 80082d4:	b580      	push	{r7, lr}
 80082d6:	b082      	sub	sp, #8
 80082d8:	af00      	add	r7, sp, #0
 80082da:	6078      	str	r0, [r7, #4]
 80082dc:	6878      	ldr	r0, [r7, #4]
 80082de:	f7ff ffe7 	bl	80082b0 <_ZN8touchgfx13GeneratedFontD1Ev>
 80082e2:	212c      	movs	r1, #44	@ 0x2c
 80082e4:	6878      	ldr	r0, [r7, #4]
 80082e6:	f01d fd04 	bl	8025cf2 <_ZdlPvj>
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	4618      	mov	r0, r3
 80082ee:	3708      	adds	r7, #8
 80082f0:	46bd      	mov	sp, r7
 80082f2:	bd80      	pop	{r7, pc}

080082f4 <_ZN8touchgfx9TypedTextD1Ev>:
        : typedTextId(id)
    {
    }

    /** Finalizes an instance of the TypedText class. */
    virtual ~TypedText()
 80082f4:	b480      	push	{r7}
 80082f6:	b083      	sub	sp, #12
 80082f8:	af00      	add	r7, sp, #0
 80082fa:	6078      	str	r0, [r7, #4]
    {
 80082fc:	4a04      	ldr	r2, [pc, #16]	@ (8008310 <_ZN8touchgfx9TypedTextD1Ev+0x1c>)
 80082fe:	687b      	ldr	r3, [r7, #4]
 8008300:	601a      	str	r2, [r3, #0]
    }
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	4618      	mov	r0, r3
 8008306:	370c      	adds	r7, #12
 8008308:	46bd      	mov	sp, r7
 800830a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800830e:	4770      	bx	lr
 8008310:	08028208 	.word	0x08028208

08008314 <_ZN8touchgfx9TypedTextD0Ev>:
    virtual ~TypedText()
 8008314:	b580      	push	{r7, lr}
 8008316:	b082      	sub	sp, #8
 8008318:	af00      	add	r7, sp, #0
 800831a:	6078      	str	r0, [r7, #4]
    }
 800831c:	6878      	ldr	r0, [r7, #4]
 800831e:	f7ff ffe9 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
 8008322:	2108      	movs	r1, #8
 8008324:	6878      	ldr	r0, [r7, #4]
 8008326:	f01d fce4 	bl	8025cf2 <_ZdlPvj>
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	4618      	mov	r0, r3
 800832e:	3708      	adds	r7, #8
 8008330:	46bd      	mov	sp, r7
 8008332:	bd80      	pop	{r7, pc}

08008334 <_ZNK8touchgfx13GeneratedFont12getGSUBTableEv>:

    virtual const uint8_t* getPixelData(const GlyphNode* glyph) const;

    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const;

    virtual const uint16_t* getGSUBTable() const
 8008334:	b480      	push	{r7}
 8008336:	b083      	sub	sp, #12
 8008338:	af00      	add	r7, sp, #0
 800833a:	6078      	str	r0, [r7, #4]
    {
        return gsubTable;
 800833c:	687b      	ldr	r3, [r7, #4]
 800833e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
    }
 8008340:	4618      	mov	r0, r3
 8008342:	370c      	adds	r7, #12
 8008344:	46bd      	mov	sp, r7
 8008346:	f85d 7b04 	ldr.w	r7, [sp], #4
 800834a:	4770      	bx	lr

0800834c <_ZNK8touchgfx13GeneratedFont23getContextualFormsTableEv>:

    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800834c:	b480      	push	{r7}
 800834e:	b083      	sub	sp, #12
 8008350:	af00      	add	r7, sp, #0
 8008352:	6078      	str	r0, [r7, #4]
    {
        return arabicTable;
 8008354:	687b      	ldr	r3, [r7, #4]
 8008356:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8008358:	4618      	mov	r0, r3
 800835a:	370c      	adds	r7, #12
 800835c:	46bd      	mov	sp, r7
 800835e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008362:	4770      	bx	lr

08008364 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>:
#include <fonts/GeneratedFont.hpp>
#include <math.h>

namespace touchgfx
{
GeneratedFont::GeneratedFont(const GlyphNode* glyphs, uint16_t numGlyphs, uint16_t height, uint16_t baseline, uint8_t pixAboveTop, uint8_t pixBelowBottom, uint8_t bitsPerPixel, uint8_t byteAlignRow, uint8_t maxLeft, uint8_t maxRight, const uint8_t* const* glyphDataInternalFlash, const KerningNode* kerningList, const Unicode::UnicodeChar fallbackChar, const Unicode::UnicodeChar ellipsisChar, const uint16_t* const gsubData, const FontContextualFormsTable* formsTable)
 8008364:	b580      	push	{r7, lr}
 8008366:	b08e      	sub	sp, #56	@ 0x38
 8008368:	af0a      	add	r7, sp, #40	@ 0x28
 800836a:	60f8      	str	r0, [r7, #12]
 800836c:	60b9      	str	r1, [r7, #8]
 800836e:	4611      	mov	r1, r2
 8008370:	461a      	mov	r2, r3
 8008372:	460b      	mov	r3, r1
 8008374:	80fb      	strh	r3, [r7, #6]
 8008376:	4613      	mov	r3, r2
 8008378:	80bb      	strh	r3, [r7, #4]
    : ConstFont(glyphs, numGlyphs, height, baseline, pixAboveTop, pixBelowBottom, bitsPerPixel, byteAlignRow, maxLeft, maxRight, fallbackChar, ellipsisChar),
      glyphData(glyphDataInternalFlash),
      kerningData(kerningList),
      gsubTable(gsubData),
      arabicTable(formsTable)
 800837a:	68f8      	ldr	r0, [r7, #12]
 800837c:	88b9      	ldrh	r1, [r7, #4]
 800837e:	88fa      	ldrh	r2, [r7, #6]
 8008380:	f8b7 3040 	ldrh.w	r3, [r7, #64]	@ 0x40
 8008384:	9308      	str	r3, [sp, #32]
 8008386:	8fbb      	ldrh	r3, [r7, #60]	@ 0x3c
 8008388:	9307      	str	r3, [sp, #28]
 800838a:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 800838e:	9306      	str	r3, [sp, #24]
 8008390:	f897 302c 	ldrb.w	r3, [r7, #44]	@ 0x2c
 8008394:	9305      	str	r3, [sp, #20]
 8008396:	f897 3028 	ldrb.w	r3, [r7, #40]	@ 0x28
 800839a:	9304      	str	r3, [sp, #16]
 800839c:	f897 3024 	ldrb.w	r3, [r7, #36]	@ 0x24
 80083a0:	9303      	str	r3, [sp, #12]
 80083a2:	f897 3020 	ldrb.w	r3, [r7, #32]
 80083a6:	9302      	str	r3, [sp, #8]
 80083a8:	7f3b      	ldrb	r3, [r7, #28]
 80083aa:	9301      	str	r3, [sp, #4]
 80083ac:	8b3b      	ldrh	r3, [r7, #24]
 80083ae:	9300      	str	r3, [sp, #0]
 80083b0:	460b      	mov	r3, r1
 80083b2:	68b9      	ldr	r1, [r7, #8]
 80083b4:	f00d f868 	bl	8015488 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>
 80083b8:	4a09      	ldr	r2, [pc, #36]	@ (80083e0 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE+0x7c>)
 80083ba:	68fb      	ldr	r3, [r7, #12]
 80083bc:	601a      	str	r2, [r3, #0]
      glyphData(glyphDataInternalFlash),
 80083be:	68fb      	ldr	r3, [r7, #12]
 80083c0:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80083c2:	61da      	str	r2, [r3, #28]
      kerningData(kerningList),
 80083c4:	68fb      	ldr	r3, [r7, #12]
 80083c6:	6bba      	ldr	r2, [r7, #56]	@ 0x38
 80083c8:	621a      	str	r2, [r3, #32]
      gsubTable(gsubData),
 80083ca:	68fb      	ldr	r3, [r7, #12]
 80083cc:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 80083ce:	625a      	str	r2, [r3, #36]	@ 0x24
      arabicTable(formsTable)
 80083d0:	68fb      	ldr	r3, [r7, #12]
 80083d2:	6cba      	ldr	r2, [r7, #72]	@ 0x48
 80083d4:	629a      	str	r2, [r3, #40]	@ 0x28
{
}
 80083d6:	68fb      	ldr	r3, [r7, #12]
 80083d8:	4618      	mov	r0, r3
 80083da:	3710      	adds	r7, #16
 80083dc:	46bd      	mov	sp, r7
 80083de:	bd80      	pop	{r7, pc}
 80083e0:	08028218 	.word	0x08028218

080083e4 <_ZNK8touchgfx13GeneratedFont12getPixelDataEPKNS_9GlyphNodeE>:

const uint8_t* GeneratedFont::getPixelData(const GlyphNode* glyph) const
{
 80083e4:	b480      	push	{r7}
 80083e6:	b085      	sub	sp, #20
 80083e8:	af00      	add	r7, sp, #0
 80083ea:	6078      	str	r0, [r7, #4]
 80083ec:	6039      	str	r1, [r7, #0]
    const uint8_t* const* table = (const uint8_t* const*)glyphData;
 80083ee:	687b      	ldr	r3, [r7, #4]
 80083f0:	69db      	ldr	r3, [r3, #28]
 80083f2:	60fb      	str	r3, [r7, #12]
    return &(table[glyph->unicode / 2048][glyph->dataOffset]);
 80083f4:	683b      	ldr	r3, [r7, #0]
 80083f6:	889b      	ldrh	r3, [r3, #4]
 80083f8:	0adb      	lsrs	r3, r3, #11
 80083fa:	b29b      	uxth	r3, r3
 80083fc:	009b      	lsls	r3, r3, #2
 80083fe:	68fa      	ldr	r2, [r7, #12]
 8008400:	4413      	add	r3, r2
 8008402:	681a      	ldr	r2, [r3, #0]
 8008404:	683b      	ldr	r3, [r7, #0]
 8008406:	681b      	ldr	r3, [r3, #0]
 8008408:	4413      	add	r3, r2
}
 800840a:	4618      	mov	r0, r3
 800840c:	3714      	adds	r7, #20
 800840e:	46bd      	mov	sp, r7
 8008410:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008414:	4770      	bx	lr

08008416 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE>:

int8_t GeneratedFont::getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
{
 8008416:	b480      	push	{r7}
 8008418:	b089      	sub	sp, #36	@ 0x24
 800841a:	af00      	add	r7, sp, #0
 800841c:	60f8      	str	r0, [r7, #12]
 800841e:	460b      	mov	r3, r1
 8008420:	607a      	str	r2, [r7, #4]
 8008422:	817b      	strh	r3, [r7, #10]
    if (!glyph || glyph->kerningTableSize == 0)
 8008424:	687b      	ldr	r3, [r7, #4]
 8008426:	2b00      	cmp	r3, #0
 8008428:	d003      	beq.n	8008432 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x1c>
 800842a:	687b      	ldr	r3, [r7, #4]
 800842c:	7b1b      	ldrb	r3, [r3, #12]
 800842e:	2b00      	cmp	r3, #0
 8008430:	d101      	bne.n	8008436 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x20>
    {
        return 0;
 8008432:	2300      	movs	r3, #0
 8008434:	e031      	b.n	800849a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
    }

    const KerningNode* kerndata = kerningData + glyph->kerningTablePos();
 8008436:	68fb      	ldr	r3, [r7, #12]
 8008438:	6a1a      	ldr	r2, [r3, #32]
 800843a:	687b      	ldr	r3, [r7, #4]
 800843c:	617b      	str	r3, [r7, #20]
        return ((flags & GLYPH_DATA_KERNINGTABLEPOS_BIT8_10) << 8) | _kerningTablePos;
 800843e:	697b      	ldr	r3, [r7, #20]
 8008440:	7b5b      	ldrb	r3, [r3, #13]
 8008442:	021b      	lsls	r3, r3, #8
 8008444:	b21b      	sxth	r3, r3
 8008446:	f403 63e0 	and.w	r3, r3, #1792	@ 0x700
 800844a:	b219      	sxth	r1, r3
 800844c:	697b      	ldr	r3, [r7, #20]
 800844e:	7adb      	ldrb	r3, [r3, #11]
 8008450:	b21b      	sxth	r3, r3
 8008452:	430b      	orrs	r3, r1
 8008454:	b21b      	sxth	r3, r3
 8008456:	b29b      	uxth	r3, r3
 8008458:	009b      	lsls	r3, r3, #2
 800845a:	4413      	add	r3, r2
 800845c:	61fb      	str	r3, [r7, #28]
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 800845e:	687b      	ldr	r3, [r7, #4]
 8008460:	7b1b      	ldrb	r3, [r3, #12]
 8008462:	837b      	strh	r3, [r7, #26]
 8008464:	e013      	b.n	800848e <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x78>
    {
        if (prevChar == kerndata->unicodePrevChar)
 8008466:	69fb      	ldr	r3, [r7, #28]
 8008468:	881b      	ldrh	r3, [r3, #0]
 800846a:	897a      	ldrh	r2, [r7, #10]
 800846c:	429a      	cmp	r2, r3
 800846e:	d103      	bne.n	8008478 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x62>
        {
            return kerndata->distance;
 8008470:	69fb      	ldr	r3, [r7, #28]
 8008472:	f993 3002 	ldrsb.w	r3, [r3, #2]
 8008476:	e010      	b.n	800849a <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x84>
        }
        if (prevChar < kerndata->unicodePrevChar)
 8008478:	69fb      	ldr	r3, [r7, #28]
 800847a:	881b      	ldrh	r3, [r3, #0]
 800847c:	897a      	ldrh	r2, [r7, #10]
 800847e:	429a      	cmp	r2, r3
 8008480:	d309      	bcc.n	8008496 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x80>
    for (uint16_t i = glyph->kerningTableSize; i > 0; i--, kerndata++)
 8008482:	8b7b      	ldrh	r3, [r7, #26]
 8008484:	3b01      	subs	r3, #1
 8008486:	837b      	strh	r3, [r7, #26]
 8008488:	69fb      	ldr	r3, [r7, #28]
 800848a:	3304      	adds	r3, #4
 800848c:	61fb      	str	r3, [r7, #28]
 800848e:	8b7b      	ldrh	r3, [r7, #26]
 8008490:	2b00      	cmp	r3, #0
 8008492:	d1e8      	bne.n	8008466 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x50>
 8008494:	e000      	b.n	8008498 <_ZNK8touchgfx13GeneratedFont10getKerningEtPKNS_9GlyphNodeE+0x82>
        {
            break;
 8008496:	bf00      	nop
        }
    }
    return 0;
 8008498:	2300      	movs	r3, #0
}
 800849a:	4618      	mov	r0, r3
 800849c:	3724      	adds	r7, #36	@ 0x24
 800849e:	46bd      	mov	sp, r7
 80084a0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084a4:	4770      	bx	lr
	...

080084a8 <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_Asap_Regular_80_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp();

touchgfx::GeneratedFont& getFont_Asap_Regular_80_4bpp()
{
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80084a8:	b580      	push	{r7, lr}
 80084aa:	af00      	add	r7, sp, #0
 80084ac:	4801      	ldr	r0, [pc, #4]	@ (80084b4 <__tcf_0+0xc>)
 80084ae:	f7ff feff 	bl	80082b0 <_ZN8touchgfx13GeneratedFontD1Ev>
 80084b2:	bd80      	pop	{r7, pc}
 80084b4:	20000608 	.word	0x20000608

080084b8 <_Z28getFont_Asap_Regular_80_4bppv>:
{
 80084b8:	b580      	push	{r7, lr}
 80084ba:	b08e      	sub	sp, #56	@ 0x38
 80084bc:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont Asap_Regular_80_4bpp(glyphs_Asap_Regular_80_4bpp, 10, 80, 80, 0, 0, 4, 1, 0, 0, unicodes_Asap_Regular_80_4bpp, kerning_Asap_Regular_80_4bpp, 0, 0, 0, 0);
 80084be:	4b21      	ldr	r3, [pc, #132]	@ (8008544 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084c0:	681b      	ldr	r3, [r3, #0]
 80084c2:	f3bf 8f5b 	dmb	ish
 80084c6:	f003 0301 	and.w	r3, r3, #1
 80084ca:	2b00      	cmp	r3, #0
 80084cc:	bf0c      	ite	eq
 80084ce:	2301      	moveq	r3, #1
 80084d0:	2300      	movne	r3, #0
 80084d2:	b2db      	uxtb	r3, r3
 80084d4:	2b00      	cmp	r3, #0
 80084d6:	d030      	beq.n	800853a <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084d8:	481a      	ldr	r0, [pc, #104]	@ (8008544 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 80084da:	f01d fc0c 	bl	8025cf6 <__cxa_guard_acquire>
 80084de:	4603      	mov	r3, r0
 80084e0:	2b00      	cmp	r3, #0
 80084e2:	bf14      	ite	ne
 80084e4:	2301      	movne	r3, #1
 80084e6:	2300      	moveq	r3, #0
 80084e8:	b2db      	uxtb	r3, r3
 80084ea:	2b00      	cmp	r3, #0
 80084ec:	d025      	beq.n	800853a <_Z28getFont_Asap_Regular_80_4bppv+0x82>
 80084ee:	2300      	movs	r3, #0
 80084f0:	930c      	str	r3, [sp, #48]	@ 0x30
 80084f2:	2300      	movs	r3, #0
 80084f4:	930b      	str	r3, [sp, #44]	@ 0x2c
 80084f6:	2300      	movs	r3, #0
 80084f8:	930a      	str	r3, [sp, #40]	@ 0x28
 80084fa:	2300      	movs	r3, #0
 80084fc:	9309      	str	r3, [sp, #36]	@ 0x24
 80084fe:	4b12      	ldr	r3, [pc, #72]	@ (8008548 <_Z28getFont_Asap_Regular_80_4bppv+0x90>)
 8008500:	9308      	str	r3, [sp, #32]
 8008502:	4b12      	ldr	r3, [pc, #72]	@ (800854c <_Z28getFont_Asap_Regular_80_4bppv+0x94>)
 8008504:	9307      	str	r3, [sp, #28]
 8008506:	2300      	movs	r3, #0
 8008508:	9306      	str	r3, [sp, #24]
 800850a:	2300      	movs	r3, #0
 800850c:	9305      	str	r3, [sp, #20]
 800850e:	2301      	movs	r3, #1
 8008510:	9304      	str	r3, [sp, #16]
 8008512:	2304      	movs	r3, #4
 8008514:	9303      	str	r3, [sp, #12]
 8008516:	2300      	movs	r3, #0
 8008518:	9302      	str	r3, [sp, #8]
 800851a:	2300      	movs	r3, #0
 800851c:	9301      	str	r3, [sp, #4]
 800851e:	2350      	movs	r3, #80	@ 0x50
 8008520:	9300      	str	r3, [sp, #0]
 8008522:	2350      	movs	r3, #80	@ 0x50
 8008524:	220a      	movs	r2, #10
 8008526:	490a      	ldr	r1, [pc, #40]	@ (8008550 <_Z28getFont_Asap_Regular_80_4bppv+0x98>)
 8008528:	480a      	ldr	r0, [pc, #40]	@ (8008554 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
 800852a:	f7ff ff1b 	bl	8008364 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 800852e:	480a      	ldr	r0, [pc, #40]	@ (8008558 <_Z28getFont_Asap_Regular_80_4bppv+0xa0>)
 8008530:	f01d fcac 	bl	8025e8c <atexit>
 8008534:	4803      	ldr	r0, [pc, #12]	@ (8008544 <_Z28getFont_Asap_Regular_80_4bppv+0x8c>)
 8008536:	f01d fbea 	bl	8025d0e <__cxa_guard_release>
    return Asap_Regular_80_4bpp;
 800853a:	4b06      	ldr	r3, [pc, #24]	@ (8008554 <_Z28getFont_Asap_Regular_80_4bppv+0x9c>)
}
 800853c:	4618      	mov	r0, r3
 800853e:	46bd      	mov	sp, r7
 8008540:	bd80      	pop	{r7, pc}
 8008542:	bf00      	nop
 8008544:	20000634 	.word	0x20000634
 8008548:	08030528 	.word	0x08030528
 800854c:	080307d4 	.word	0x080307d4
 8008550:	0802ff68 	.word	0x0802ff68
 8008554:	20000608 	.word	0x20000608
 8008558:	080084a9 	.word	0x080084a9

0800855c <__tcf_0>:
KEEP extern const touchgfx::KerningNode kerning_verdana_30_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE;
touchgfx::GeneratedFont& getFont_verdana_30_4bpp();

touchgfx::GeneratedFont& getFont_verdana_30_4bpp()
{
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 800855c:	b580      	push	{r7, lr}
 800855e:	af00      	add	r7, sp, #0
 8008560:	4801      	ldr	r0, [pc, #4]	@ (8008568 <__tcf_0+0xc>)
 8008562:	f7ff fea5 	bl	80082b0 <_ZN8touchgfx13GeneratedFontD1Ev>
 8008566:	bd80      	pop	{r7, pc}
 8008568:	20000638 	.word	0x20000638

0800856c <_Z23getFont_verdana_30_4bppv>:
{
 800856c:	b580      	push	{r7, lr}
 800856e:	b08e      	sub	sp, #56	@ 0x38
 8008570:	af0e      	add	r7, sp, #56	@ 0x38
    static touchgfx::GeneratedFont verdana_30_4bpp(glyphs_verdana_30_4bpp, 95, 36, 30, 0, 0, 4, 1, 1, 1, unicodes_verdana_30_4bpp, kerning_verdana_30_4bpp, 63, 0, 0, 0);
 8008572:	4b21      	ldr	r3, [pc, #132]	@ (80085f8 <_Z23getFont_verdana_30_4bppv+0x8c>)
 8008574:	681b      	ldr	r3, [r3, #0]
 8008576:	f3bf 8f5b 	dmb	ish
 800857a:	f003 0301 	and.w	r3, r3, #1
 800857e:	2b00      	cmp	r3, #0
 8008580:	bf0c      	ite	eq
 8008582:	2301      	moveq	r3, #1
 8008584:	2300      	movne	r3, #0
 8008586:	b2db      	uxtb	r3, r3
 8008588:	2b00      	cmp	r3, #0
 800858a:	d030      	beq.n	80085ee <_Z23getFont_verdana_30_4bppv+0x82>
 800858c:	481a      	ldr	r0, [pc, #104]	@ (80085f8 <_Z23getFont_verdana_30_4bppv+0x8c>)
 800858e:	f01d fbb2 	bl	8025cf6 <__cxa_guard_acquire>
 8008592:	4603      	mov	r3, r0
 8008594:	2b00      	cmp	r3, #0
 8008596:	bf14      	ite	ne
 8008598:	2301      	movne	r3, #1
 800859a:	2300      	moveq	r3, #0
 800859c:	b2db      	uxtb	r3, r3
 800859e:	2b00      	cmp	r3, #0
 80085a0:	d025      	beq.n	80085ee <_Z23getFont_verdana_30_4bppv+0x82>
 80085a2:	2300      	movs	r3, #0
 80085a4:	930c      	str	r3, [sp, #48]	@ 0x30
 80085a6:	2300      	movs	r3, #0
 80085a8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80085aa:	2300      	movs	r3, #0
 80085ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80085ae:	233f      	movs	r3, #63	@ 0x3f
 80085b0:	9309      	str	r3, [sp, #36]	@ 0x24
 80085b2:	4b12      	ldr	r3, [pc, #72]	@ (80085fc <_Z23getFont_verdana_30_4bppv+0x90>)
 80085b4:	9308      	str	r3, [sp, #32]
 80085b6:	4b12      	ldr	r3, [pc, #72]	@ (8008600 <_Z23getFont_verdana_30_4bppv+0x94>)
 80085b8:	9307      	str	r3, [sp, #28]
 80085ba:	2301      	movs	r3, #1
 80085bc:	9306      	str	r3, [sp, #24]
 80085be:	2301      	movs	r3, #1
 80085c0:	9305      	str	r3, [sp, #20]
 80085c2:	2301      	movs	r3, #1
 80085c4:	9304      	str	r3, [sp, #16]
 80085c6:	2304      	movs	r3, #4
 80085c8:	9303      	str	r3, [sp, #12]
 80085ca:	2300      	movs	r3, #0
 80085cc:	9302      	str	r3, [sp, #8]
 80085ce:	2300      	movs	r3, #0
 80085d0:	9301      	str	r3, [sp, #4]
 80085d2:	231e      	movs	r3, #30
 80085d4:	9300      	str	r3, [sp, #0]
 80085d6:	2324      	movs	r3, #36	@ 0x24
 80085d8:	225f      	movs	r2, #95	@ 0x5f
 80085da:	490a      	ldr	r1, [pc, #40]	@ (8008604 <_Z23getFont_verdana_30_4bppv+0x98>)
 80085dc:	480a      	ldr	r0, [pc, #40]	@ (8008608 <_Z23getFont_verdana_30_4bppv+0x9c>)
 80085de:	f7ff fec1 	bl	8008364 <_ZN8touchgfx13GeneratedFontC1EPKNS_9GlyphNodeEttthhhhhhPKPKhPKNS_11KerningNodeEttPKtPKNS_24FontContextualFormsTableE>
 80085e2:	480a      	ldr	r0, [pc, #40]	@ (800860c <_Z23getFont_verdana_30_4bppv+0xa0>)
 80085e4:	f01d fc52 	bl	8025e8c <atexit>
 80085e8:	4803      	ldr	r0, [pc, #12]	@ (80085f8 <_Z23getFont_verdana_30_4bppv+0x8c>)
 80085ea:	f01d fb90 	bl	8025d0e <__cxa_guard_release>
    return verdana_30_4bpp;
 80085ee:	4b06      	ldr	r3, [pc, #24]	@ (8008608 <_Z23getFont_verdana_30_4bppv+0x9c>)
}
 80085f0:	4618      	mov	r0, r3
 80085f2:	46bd      	mov	sp, r7
 80085f4:	bd80      	pop	{r7, pc}
 80085f6:	bf00      	nop
 80085f8:	20000664 	.word	0x20000664
 80085fc:	0803052c 	.word	0x0803052c
 8008600:	080307d8 	.word	0x080307d8
 8008604:	0802fff4 	.word	0x0802fff4
 8008608:	20000638 	.word	0x20000638
 800860c:	0800855d 	.word	0x0800855d

08008610 <_ZnwjPv>:
#endif // __cpp_sized_deallocation
#endif // __cpp_aligned_new

// Default placement versions of operator new.
_GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
{ return __p; }
 8008610:	b480      	push	{r7}
 8008612:	b083      	sub	sp, #12
 8008614:	af00      	add	r7, sp, #0
 8008616:	6078      	str	r0, [r7, #4]
 8008618:	6039      	str	r1, [r7, #0]
 800861a:	683b      	ldr	r3, [r7, #0]
 800861c:	4618      	mov	r0, r3
 800861e:	370c      	adds	r7, #12
 8008620:	46bd      	mov	sp, r7
 8008622:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008626:	4770      	bx	lr

08008628 <_ZN8touchgfx15UIEventListener16handleClickEventERKNS_10ClickEventE>:
     * This handler is invoked when a mouse click or display touch event has been detected
     * by the system.
     *
     * @param  event The event data.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8008628:	b480      	push	{r7}
 800862a:	b083      	sub	sp, #12
 800862c:	af00      	add	r7, sp, #0
 800862e:	6078      	str	r0, [r7, #4]
 8008630:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008632:	bf00      	nop
 8008634:	370c      	adds	r7, #12
 8008636:	46bd      	mov	sp, r7
 8008638:	f85d 7b04 	ldr.w	r7, [sp], #4
 800863c:	4770      	bx	lr

0800863e <_ZN8touchgfx15UIEventListener15handleDragEventERKNS_9DragEventE>:
    /**
     * This handler is invoked when a drag event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleDragEvent(const DragEvent& event)
 800863e:	b480      	push	{r7}
 8008640:	b083      	sub	sp, #12
 8008642:	af00      	add	r7, sp, #0
 8008644:	6078      	str	r0, [r7, #4]
 8008646:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8008648:	bf00      	nop
 800864a:	370c      	adds	r7, #12
 800864c:	46bd      	mov	sp, r7
 800864e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008652:	4770      	bx	lr

08008654 <_ZN8touchgfx15UIEventListener18handleGestureEventERKNS_12GestureEventE>:
    /**
     * This handler is invoked when a gesture event has been detected by the system.
     *
     * @param  event The event data.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8008654:	b480      	push	{r7}
 8008656:	b083      	sub	sp, #12
 8008658:	af00      	add	r7, sp, #0
 800865a:	6078      	str	r0, [r7, #4]
 800865c:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 800865e:	bf00      	nop
 8008660:	370c      	adds	r7, #12
 8008662:	46bd      	mov	sp, r7
 8008664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008668:	4770      	bx	lr

0800866a <_ZN8touchgfx15UIEventListener14handleKeyEventEh>:
    /**
     * This handler is invoked when a key (or button) event has been detected by the system.
     *
     * @param  c The key or button pressed.
     */
    virtual void handleKeyEvent(uint8_t c)
 800866a:	b480      	push	{r7}
 800866c:	b083      	sub	sp, #12
 800866e:	af00      	add	r7, sp, #0
 8008670:	6078      	str	r0, [r7, #4]
 8008672:	460b      	mov	r3, r1
 8008674:	70fb      	strb	r3, [r7, #3]
    {
        (void)c; // Unused variable
    }
 8008676:	bf00      	nop
 8008678:	370c      	adds	r7, #12
 800867a:	46bd      	mov	sp, r7
 800867c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008680:	4770      	bx	lr

08008682 <_ZN8touchgfx15UIEventListener15handleTickEventEv>:

    /**
     * This handler is invoked when a system tick event has been generated. The system tick
     * period is configured in the HAL.
     */
    virtual void handleTickEvent()
 8008682:	b480      	push	{r7}
 8008684:	b083      	sub	sp, #12
 8008686:	af00      	add	r7, sp, #0
 8008688:	6078      	str	r0, [r7, #4]
    {
    }
 800868a:	bf00      	nop
 800868c:	370c      	adds	r7, #12
 800868e:	46bd      	mov	sp, r7
 8008690:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008694:	4770      	bx	lr

08008696 <_ZN8touchgfx15UIEventListener29handlePendingScreenTransitionEv>:

    /** This handler is invoked when a change screen event is pending. */
    virtual void handlePendingScreenTransition()
 8008696:	b480      	push	{r7}
 8008698:	b083      	sub	sp, #12
 800869a:	af00      	add	r7, sp, #0
 800869c:	6078      	str	r0, [r7, #4]
    {
    }
 800869e:	bf00      	nop
 80086a0:	370c      	adds	r7, #12
 80086a2:	46bd      	mov	sp, r7
 80086a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086a8:	4770      	bx	lr
	...

080086ac <_ZN8touchgfx15UIEventListenerD1Ev>:

    /** Finalizes an instance of the UIEventListener class. */
    virtual ~UIEventListener()
 80086ac:	b480      	push	{r7}
 80086ae:	b083      	sub	sp, #12
 80086b0:	af00      	add	r7, sp, #0
 80086b2:	6078      	str	r0, [r7, #4]
    {
 80086b4:	4a04      	ldr	r2, [pc, #16]	@ (80086c8 <_ZN8touchgfx15UIEventListenerD1Ev+0x1c>)
 80086b6:	687b      	ldr	r3, [r7, #4]
 80086b8:	601a      	str	r2, [r3, #0]
    }
 80086ba:	687b      	ldr	r3, [r7, #4]
 80086bc:	4618      	mov	r0, r3
 80086be:	370c      	adds	r7, #12
 80086c0:	46bd      	mov	sp, r7
 80086c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086c6:	4770      	bx	lr
 80086c8:	080283a0 	.word	0x080283a0

080086cc <_ZN8touchgfx15UIEventListenerD0Ev>:
    virtual ~UIEventListener()
 80086cc:	b580      	push	{r7, lr}
 80086ce:	b082      	sub	sp, #8
 80086d0:	af00      	add	r7, sp, #0
 80086d2:	6078      	str	r0, [r7, #4]
    }
 80086d4:	6878      	ldr	r0, [r7, #4]
 80086d6:	f7ff ffe9 	bl	80086ac <_ZN8touchgfx15UIEventListenerD1Ev>
 80086da:	2104      	movs	r1, #4
 80086dc:	6878      	ldr	r0, [r7, #4]
 80086de:	f01d fb08 	bl	8025cf2 <_ZdlPvj>
 80086e2:	687b      	ldr	r3, [r7, #4]
 80086e4:	4618      	mov	r0, r3
 80086e6:	3708      	adds	r7, #8
 80086e8:	46bd      	mov	sp, r7
 80086ea:	bd80      	pop	{r7, pc}

080086ec <_ZN8touchgfx11Application19changeToStartScreenEv>:
     * @note The application will not make a complete restart - if
     *       your Model contains data, this will not be reset, unless
     *       this is explicitly done in your
     *       FrontendApplication::changeToStartScreen().
     */
    virtual void changeToStartScreen()
 80086ec:	b480      	push	{r7}
 80086ee:	b083      	sub	sp, #12
 80086f0:	af00      	add	r7, sp, #0
 80086f2:	6078      	str	r0, [r7, #4]
    {
    }
 80086f4:	bf00      	nop
 80086f6:	370c      	adds	r7, #12
 80086f8:	46bd      	mov	sp, r7
 80086fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80086fe:	4770      	bx	lr

08008700 <_ZN8touchgfx11Application15appSwitchScreenEh>:
     * means to switch screen from places that does not have access to a pointer to the new
     * screen. Base implementation is empty.
     *
     * @param screenId An id that maps to the desired screen.
     */
    virtual void appSwitchScreen(uint8_t screenId)
 8008700:	b480      	push	{r7}
 8008702:	b083      	sub	sp, #12
 8008704:	af00      	add	r7, sp, #0
 8008706:	6078      	str	r0, [r7, #4]
 8008708:	460b      	mov	r3, r1
 800870a:	70fb      	strb	r3, [r7, #3]
    {
        (void)screenId; // Unused variable
    }
 800870c:	bf00      	nop
 800870e:	370c      	adds	r7, #12
 8008710:	46bd      	mov	sp, r7
 8008712:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008716:	4770      	bx	lr

08008718 <_ZN8touchgfx11Application13requestRedrawERNS_4RectE>:
    /**
     * An application specific function for requesting redraw of given Rect.
     *
     * @param [in,out] rect The Rect that must be redrawn.
     */
    virtual void requestRedraw(Rect& rect)
 8008718:	b480      	push	{r7}
 800871a:	b083      	sub	sp, #12
 800871c:	af00      	add	r7, sp, #0
 800871e:	6078      	str	r0, [r7, #4]
 8008720:	6039      	str	r1, [r7, #0]
    {
        redraw = rect;
 8008722:	687b      	ldr	r3, [r7, #4]
 8008724:	683a      	ldr	r2, [r7, #0]
 8008726:	f503 7398 	add.w	r3, r3, #304	@ 0x130
 800872a:	6810      	ldr	r0, [r2, #0]
 800872c:	6851      	ldr	r1, [r2, #4]
 800872e:	c303      	stmia	r3!, {r0, r1}
    }
 8008730:	bf00      	nop
 8008732:	370c      	adds	r7, #12
 8008734:	46bd      	mov	sp, r7
 8008736:	f85d 7b04 	ldr.w	r7, [sp], #4
 800873a:	4770      	bx	lr

0800873c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>:
        timerWidgets.add(w);
    }

    /** Clears all currently registered timer widgets. */

    void clearAllTimerWidgets()
 800873c:	b580      	push	{r7, lr}
 800873e:	b082      	sub	sp, #8
 8008740:	af00      	add	r7, sp, #0
 8008742:	6078      	str	r0, [r7, #4]
    {
        timerWidgets.clear();
 8008744:	687b      	ldr	r3, [r7, #4]
 8008746:	3304      	adds	r3, #4
 8008748:	4618      	mov	r0, r3
 800874a:	f00b fd9e 	bl	801428a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
    }
 800874e:	bf00      	nop
 8008750:	3708      	adds	r7, #8
 8008752:	46bd      	mov	sp, r7
 8008754:	bd80      	pop	{r7, pc}
	...

08008758 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>:
template <>
class GenericCallback<void>
{
public:
    /** Finalizes an instance of the GenericCallback<void> class. */
    virtual ~GenericCallback()
 8008758:	b480      	push	{r7}
 800875a:	b083      	sub	sp, #12
 800875c:	af00      	add	r7, sp, #0
 800875e:	6078      	str	r0, [r7, #4]
    {
 8008760:	4a04      	ldr	r2, [pc, #16]	@ (8008774 <_ZN8touchgfx15GenericCallbackIvvvED1Ev+0x1c>)
 8008762:	687b      	ldr	r3, [r7, #4]
 8008764:	601a      	str	r2, [r3, #0]
    }
 8008766:	687b      	ldr	r3, [r7, #4]
 8008768:	4618      	mov	r0, r3
 800876a:	370c      	adds	r7, #12
 800876c:	46bd      	mov	sp, r7
 800876e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008772:	4770      	bx	lr
 8008774:	08028388 	.word	0x08028388

08008778 <_ZN8touchgfx15GenericCallbackIvvvED0Ev>:
    virtual ~GenericCallback()
 8008778:	b580      	push	{r7, lr}
 800877a:	b082      	sub	sp, #8
 800877c:	af00      	add	r7, sp, #0
 800877e:	6078      	str	r0, [r7, #4]
    }
 8008780:	6878      	ldr	r0, [r7, #4]
 8008782:	f7ff ffe9 	bl	8008758 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 8008786:	2104      	movs	r1, #4
 8008788:	6878      	ldr	r0, [r7, #4]
 800878a:	f01d fab2 	bl	8025cf2 <_ZdlPvj>
 800878e:	687b      	ldr	r3, [r7, #4]
 8008790:	4618      	mov	r0, r3
 8008792:	3708      	adds	r7, #8
 8008794:	46bd      	mov	sp, r7
 8008796:	bd80      	pop	{r7, pc}

08008798 <_ZN8touchgfx3HAL11getInstanceEv>:
    /**
     * Gets the HAL instance.
     *
     * @return The HAL instance.
     */
    static HAL* getInstance()
 8008798:	b480      	push	{r7}
 800879a:	af00      	add	r7, sp, #0
    {
        return instance;
 800879c:	4b03      	ldr	r3, [pc, #12]	@ (80087ac <_ZN8touchgfx3HAL11getInstanceEv+0x14>)
 800879e:	681b      	ldr	r3, [r3, #0]
    }
 80087a0:	4618      	mov	r0, r3
 80087a2:	46bd      	mov	sp, r7
 80087a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087a8:	4770      	bx	lr
 80087aa:	bf00      	nop
 80087ac:	20002f54 	.word	0x20002f54

080087b0 <_ZN8touchgfx3HAL3lcdEv>:
    /**
     * Gets a reference to the LCD.
     *
     * @return A reference to the LCD.
     */
    static LCD& lcd()
 80087b0:	b480      	push	{r7}
 80087b2:	af00      	add	r7, sp, #0
    {
        if (instance->useAuxiliaryLCD && instance->auxiliaryLCD)
 80087b4:	4b0b      	ldr	r3, [pc, #44]	@ (80087e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087b6:	681b      	ldr	r3, [r3, #0]
 80087b8:	f893 3058 	ldrb.w	r3, [r3, #88]	@ 0x58
 80087bc:	2b00      	cmp	r3, #0
 80087be:	d008      	beq.n	80087d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
 80087c0:	4b08      	ldr	r3, [pc, #32]	@ (80087e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087c2:	681b      	ldr	r3, [r3, #0]
 80087c4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087c6:	2b00      	cmp	r3, #0
 80087c8:	d003      	beq.n	80087d2 <_ZN8touchgfx3HAL3lcdEv+0x22>
        {
            return *instance->auxiliaryLCD;
 80087ca:	4b06      	ldr	r3, [pc, #24]	@ (80087e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087cc:	681b      	ldr	r3, [r3, #0]
 80087ce:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80087d0:	e002      	b.n	80087d8 <_ZN8touchgfx3HAL3lcdEv+0x28>
        }
        return instance->lcdRef;
 80087d2:	4b04      	ldr	r3, [pc, #16]	@ (80087e4 <_ZN8touchgfx3HAL3lcdEv+0x34>)
 80087d4:	681b      	ldr	r3, [r3, #0]
 80087d6:	689b      	ldr	r3, [r3, #8]
    }
 80087d8:	4618      	mov	r0, r3
 80087da:	46bd      	mov	sp, r7
 80087dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80087e0:	4770      	bx	lr
 80087e2:	bf00      	nop
 80087e4:	20002f54 	.word	0x20002f54

080087e8 <_ZN8touchgfx10TransitionC1Ev>:
 */
class Transition
{
public:
    /** Initializes a new instance of the Transition class. */
    Transition()
 80087e8:	b480      	push	{r7}
 80087ea:	b083      	sub	sp, #12
 80087ec:	af00      	add	r7, sp, #0
 80087ee:	6078      	str	r0, [r7, #4]
        : screenContainer(0), done(false)
 80087f0:	4a07      	ldr	r2, [pc, #28]	@ (8008810 <_ZN8touchgfx10TransitionC1Ev+0x28>)
 80087f2:	687b      	ldr	r3, [r7, #4]
 80087f4:	601a      	str	r2, [r3, #0]
 80087f6:	687b      	ldr	r3, [r7, #4]
 80087f8:	2200      	movs	r2, #0
 80087fa:	605a      	str	r2, [r3, #4]
 80087fc:	687b      	ldr	r3, [r7, #4]
 80087fe:	2200      	movs	r2, #0
 8008800:	721a      	strb	r2, [r3, #8]
    {
    }
 8008802:	687b      	ldr	r3, [r7, #4]
 8008804:	4618      	mov	r0, r3
 8008806:	370c      	adds	r7, #12
 8008808:	46bd      	mov	sp, r7
 800880a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800880e:	4770      	bx	lr
 8008810:	08028364 	.word	0x08028364

08008814 <_ZN8touchgfx10TransitionD1Ev>:

    /** Finalizes an instance of the Transition class. */
    virtual ~Transition()
 8008814:	b480      	push	{r7}
 8008816:	b083      	sub	sp, #12
 8008818:	af00      	add	r7, sp, #0
 800881a:	6078      	str	r0, [r7, #4]
    {
 800881c:	4a04      	ldr	r2, [pc, #16]	@ (8008830 <_ZN8touchgfx10TransitionD1Ev+0x1c>)
 800881e:	687b      	ldr	r3, [r7, #4]
 8008820:	601a      	str	r2, [r3, #0]
    }
 8008822:	687b      	ldr	r3, [r7, #4]
 8008824:	4618      	mov	r0, r3
 8008826:	370c      	adds	r7, #12
 8008828:	46bd      	mov	sp, r7
 800882a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800882e:	4770      	bx	lr
 8008830:	08028364 	.word	0x08028364

08008834 <_ZN8touchgfx10TransitionD0Ev>:
    virtual ~Transition()
 8008834:	b580      	push	{r7, lr}
 8008836:	b082      	sub	sp, #8
 8008838:	af00      	add	r7, sp, #0
 800883a:	6078      	str	r0, [r7, #4]
    }
 800883c:	6878      	ldr	r0, [r7, #4]
 800883e:	f7ff ffe9 	bl	8008814 <_ZN8touchgfx10TransitionD1Ev>
 8008842:	210c      	movs	r1, #12
 8008844:	6878      	ldr	r0, [r7, #4]
 8008846:	f01d fa54 	bl	8025cf2 <_ZdlPvj>
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	4618      	mov	r0, r3
 800884e:	3708      	adds	r7, #8
 8008850:	46bd      	mov	sp, r7
 8008852:	bd80      	pop	{r7, pc}

08008854 <_ZN8touchgfx10Transition15handleTickEventEv>:

    /** Called for every tick when transitioning. */
    virtual void handleTickEvent()
 8008854:	b480      	push	{r7}
 8008856:	b083      	sub	sp, #12
 8008858:	af00      	add	r7, sp, #0
 800885a:	6078      	str	r0, [r7, #4]
    {
    }
 800885c:	bf00      	nop
 800885e:	370c      	adds	r7, #12
 8008860:	46bd      	mov	sp, r7
 8008862:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008866:	4770      	bx	lr

08008868 <_ZN8touchgfx10Transition8tearDownEv>:

    /**
     * Tears down the Animation. Called before the destructor is called, when the
     * application changes the transition.
     */
    virtual void tearDown()
 8008868:	b480      	push	{r7}
 800886a:	b083      	sub	sp, #12
 800886c:	af00      	add	r7, sp, #0
 800886e:	6078      	str	r0, [r7, #4]
    {
    }
 8008870:	bf00      	nop
 8008872:	370c      	adds	r7, #12
 8008874:	46bd      	mov	sp, r7
 8008876:	f85d 7b04 	ldr.w	r7, [sp], #4
 800887a:	4770      	bx	lr

0800887c <_ZN8touchgfx10Transition4initEv>:

    /**
     * Initializes the transition. Called after the constructor is called, when the
     * application changes the transition.
     */
    virtual void init()
 800887c:	b480      	push	{r7}
 800887e:	b083      	sub	sp, #12
 8008880:	af00      	add	r7, sp, #0
 8008882:	6078      	str	r0, [r7, #4]
    {
    }
 8008884:	bf00      	nop
 8008886:	370c      	adds	r7, #12
 8008888:	46bd      	mov	sp, r7
 800888a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800888e:	4770      	bx	lr

08008890 <_ZN8touchgfx10Transition10invalidateEv>:
    /**
     * Invalidates the screen when starting the Transition. Default is
     * to invalidate the whole screen. Subclasses can do partial
     * invalidation.
     */
    virtual void invalidate()
 8008890:	b580      	push	{r7, lr}
 8008892:	b082      	sub	sp, #8
 8008894:	af00      	add	r7, sp, #0
 8008896:	6078      	str	r0, [r7, #4]
    {
        Application::getInstance()->invalidate();
 8008898:	f00b fcd2 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800889c:	4603      	mov	r3, r0
 800889e:	681a      	ldr	r2, [r3, #0]
 80088a0:	323c      	adds	r2, #60	@ 0x3c
 80088a2:	6812      	ldr	r2, [r2, #0]
 80088a4:	4618      	mov	r0, r3
 80088a6:	4790      	blx	r2
    }
 80088a8:	bf00      	nop
 80088aa:	3708      	adds	r7, #8
 80088ac:	46bd      	mov	sp, r7
 80088ae:	bd80      	pop	{r7, pc}

080088b0 <_ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE>:
     * Sets the Screen Container. Is used by Screen to enable the transition to access the
     * Container.
     *
     * @param [in] cont The Container the transition should have access to.
     */
    virtual void setScreenContainer(Container& cont)
 80088b0:	b480      	push	{r7}
 80088b2:	b083      	sub	sp, #12
 80088b4:	af00      	add	r7, sp, #0
 80088b6:	6078      	str	r0, [r7, #4]
 80088b8:	6039      	str	r1, [r7, #0]
    {
        screenContainer = &cont;
 80088ba:	687b      	ldr	r3, [r7, #4]
 80088bc:	683a      	ldr	r2, [r7, #0]
 80088be:	605a      	str	r2, [r3, #4]
    }
 80088c0:	bf00      	nop
 80088c2:	370c      	adds	r7, #12
 80088c4:	46bd      	mov	sp, r7
 80088c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80088ca:	4770      	bx	lr

080088cc <_ZN8touchgfx11ApplicationD1Ev>:
class Application : public UIEventListener
 80088cc:	b580      	push	{r7, lr}
 80088ce:	b082      	sub	sp, #8
 80088d0:	af00      	add	r7, sp, #0
 80088d2:	6078      	str	r0, [r7, #4]
 80088d4:	4a05      	ldr	r2, [pc, #20]	@ (80088ec <_ZN8touchgfx11ApplicationD1Ev+0x20>)
 80088d6:	687b      	ldr	r3, [r7, #4]
 80088d8:	601a      	str	r2, [r3, #0]
 80088da:	687b      	ldr	r3, [r7, #4]
 80088dc:	4618      	mov	r0, r3
 80088de:	f7ff fee5 	bl	80086ac <_ZN8touchgfx15UIEventListenerD1Ev>
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	4618      	mov	r0, r3
 80088e6:	3708      	adds	r7, #8
 80088e8:	46bd      	mov	sp, r7
 80088ea:	bd80      	pop	{r7, pc}
 80088ec:	0802969c 	.word	0x0802969c

080088f0 <_ZN8touchgfx11ApplicationD0Ev>:
 80088f0:	b580      	push	{r7, lr}
 80088f2:	b082      	sub	sp, #8
 80088f4:	af00      	add	r7, sp, #0
 80088f6:	6078      	str	r0, [r7, #4]
 80088f8:	6878      	ldr	r0, [r7, #4]
 80088fa:	f7ff ffe7 	bl	80088cc <_ZN8touchgfx11ApplicationD1Ev>
 80088fe:	f44f 719e 	mov.w	r1, #316	@ 0x13c
 8008902:	6878      	ldr	r0, [r7, #4]
 8008904:	f01d f9f5 	bl	8025cf2 <_ZdlPvj>
 8008908:	687b      	ldr	r3, [r7, #4]
 800890a:	4618      	mov	r0, r3
 800890c:	3708      	adds	r7, #8
 800890e:	46bd      	mov	sp, r7
 8008910:	bd80      	pop	{r7, pc}
	...

08008914 <_ZN8touchgfx14MVPApplicationC1Ev>:
 */
class MVPApplication : public Application
{
public:
    /** Initializes a new instance of the MVPApplication class. */
    MVPApplication()
 8008914:	b580      	push	{r7, lr}
 8008916:	b082      	sub	sp, #8
 8008918:	af00      	add	r7, sp, #0
 800891a:	6078      	str	r0, [r7, #4]
        : currentPresenter(0),
          pendingScreenTransitionCallback(0)
 800891c:	687b      	ldr	r3, [r7, #4]
 800891e:	4618      	mov	r0, r3
 8008920:	f00b fd50 	bl	80143c4 <_ZN8touchgfx11ApplicationC1Ev>
 8008924:	4a09      	ldr	r2, [pc, #36]	@ (800894c <_ZN8touchgfx14MVPApplicationC1Ev+0x38>)
 8008926:	687b      	ldr	r3, [r7, #4]
 8008928:	601a      	str	r2, [r3, #0]
        : currentPresenter(0),
 800892a:	687b      	ldr	r3, [r7, #4]
 800892c:	2200      	movs	r2, #0
 800892e:	f8c3 213c 	str.w	r2, [r3, #316]	@ 0x13c
          pendingScreenTransitionCallback(0)
 8008932:	687b      	ldr	r3, [r7, #4]
 8008934:	2200      	movs	r2, #0
 8008936:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
    {
        instance = this;
 800893a:	687b      	ldr	r3, [r7, #4]
 800893c:	4a04      	ldr	r2, [pc, #16]	@ (8008950 <_ZN8touchgfx14MVPApplicationC1Ev+0x3c>)
 800893e:	6013      	str	r3, [r2, #0]
    }
 8008940:	687b      	ldr	r3, [r7, #4]
 8008942:	4618      	mov	r0, r3
 8008944:	3708      	adds	r7, #8
 8008946:	46bd      	mov	sp, r7
 8008948:	bd80      	pop	{r7, pc}
 800894a:	bf00      	nop
 800894c:	08028310 	.word	0x08028310
 8008950:	20002fa0 	.word	0x20002fa0

08008954 <_ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv>:
    /**
     * Handles the pending screen transition.
     *
     * Delegates the work to evaluatePendingScreenTransition()
     */
    virtual void handlePendingScreenTransition()
 8008954:	b580      	push	{r7, lr}
 8008956:	b082      	sub	sp, #8
 8008958:	af00      	add	r7, sp, #0
 800895a:	6078      	str	r0, [r7, #4]
    {
        evaluatePendingScreenTransition();
 800895c:	6878      	ldr	r0, [r7, #4]
 800895e:	f000 f804 	bl	800896a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>
    }
 8008962:	bf00      	nop
 8008964:	3708      	adds	r7, #8
 8008966:	46bd      	mov	sp, r7
 8008968:	bd80      	pop	{r7, pc}

0800896a <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv>:

    /**
     * Evaluates the pending Callback instances. If a callback is valid, it is executed and
     * a Screen transition is executed.
     */
    void evaluatePendingScreenTransition()
 800896a:	b580      	push	{r7, lr}
 800896c:	b082      	sub	sp, #8
 800896e:	af00      	add	r7, sp, #0
 8008970:	6078      	str	r0, [r7, #4]
    {
        if (pendingScreenTransitionCallback && pendingScreenTransitionCallback->isValid())
 8008972:	687b      	ldr	r3, [r7, #4]
 8008974:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008978:	2b00      	cmp	r3, #0
 800897a:	d00f      	beq.n	800899c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 800897c:	687b      	ldr	r3, [r7, #4]
 800897e:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 8008982:	687b      	ldr	r3, [r7, #4]
 8008984:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 8008988:	681b      	ldr	r3, [r3, #0]
 800898a:	330c      	adds	r3, #12
 800898c:	681b      	ldr	r3, [r3, #0]
 800898e:	4610      	mov	r0, r2
 8008990:	4798      	blx	r3
 8008992:	4603      	mov	r3, r0
 8008994:	2b00      	cmp	r3, #0
 8008996:	d001      	beq.n	800899c <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x32>
 8008998:	2301      	movs	r3, #1
 800899a:	e000      	b.n	800899e <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x34>
 800899c:	2300      	movs	r3, #0
 800899e:	2b00      	cmp	r3, #0
 80089a0:	d00e      	beq.n	80089c0 <_ZN8touchgfx14MVPApplication31evaluatePendingScreenTransitionEv+0x56>
        {
            pendingScreenTransitionCallback->execute();
 80089a2:	687b      	ldr	r3, [r7, #4]
 80089a4:	f8d3 2140 	ldr.w	r2, [r3, #320]	@ 0x140
 80089a8:	687b      	ldr	r3, [r7, #4]
 80089aa:	f8d3 3140 	ldr.w	r3, [r3, #320]	@ 0x140
 80089ae:	681b      	ldr	r3, [r3, #0]
 80089b0:	3308      	adds	r3, #8
 80089b2:	681b      	ldr	r3, [r3, #0]
 80089b4:	4610      	mov	r0, r2
 80089b6:	4798      	blx	r3
            pendingScreenTransitionCallback = 0;
 80089b8:	687b      	ldr	r3, [r7, #4]
 80089ba:	2200      	movs	r2, #0
 80089bc:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
        }
    }
 80089c0:	bf00      	nop
 80089c2:	3708      	adds	r7, #8
 80089c4:	46bd      	mov	sp, r7
 80089c6:	bd80      	pop	{r7, pc}

080089c8 <_ZN5Model4bindEP13ModelListener>:

    /**
     * Sets the modelListener to point to the currently active presenter. Called automatically
     * when switching screen.
     */
    void bind(ModelListener* listener)
 80089c8:	b480      	push	{r7}
 80089ca:	b083      	sub	sp, #12
 80089cc:	af00      	add	r7, sp, #0
 80089ce:	6078      	str	r0, [r7, #4]
 80089d0:	6039      	str	r1, [r7, #0]
    {
        modelListener = listener;
 80089d2:	687b      	ldr	r3, [r7, #4]
 80089d4:	683a      	ldr	r2, [r7, #0]
 80089d6:	601a      	str	r2, [r3, #0]
    }
 80089d8:	bf00      	nop
 80089da:	370c      	adds	r7, #12
 80089dc:	46bd      	mov	sp, r7
 80089de:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089e2:	4770      	bx	lr

080089e4 <_ZN8touchgfx14MVPApplicationD1Ev>:
class MVPApplication : public Application
 80089e4:	b580      	push	{r7, lr}
 80089e6:	b082      	sub	sp, #8
 80089e8:	af00      	add	r7, sp, #0
 80089ea:	6078      	str	r0, [r7, #4]
 80089ec:	4a05      	ldr	r2, [pc, #20]	@ (8008a04 <_ZN8touchgfx14MVPApplicationD1Ev+0x20>)
 80089ee:	687b      	ldr	r3, [r7, #4]
 80089f0:	601a      	str	r2, [r3, #0]
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	4618      	mov	r0, r3
 80089f6:	f7ff ff69 	bl	80088cc <_ZN8touchgfx11ApplicationD1Ev>
 80089fa:	687b      	ldr	r3, [r7, #4]
 80089fc:	4618      	mov	r0, r3
 80089fe:	3708      	adds	r7, #8
 8008a00:	46bd      	mov	sp, r7
 8008a02:	bd80      	pop	{r7, pc}
 8008a04:	08028310 	.word	0x08028310

08008a08 <_ZN8touchgfx14MVPApplicationD0Ev>:
 8008a08:	b580      	push	{r7, lr}
 8008a0a:	b082      	sub	sp, #8
 8008a0c:	af00      	add	r7, sp, #0
 8008a0e:	6078      	str	r0, [r7, #4]
 8008a10:	6878      	ldr	r0, [r7, #4]
 8008a12:	f7ff ffe7 	bl	80089e4 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008a16:	f44f 71a2 	mov.w	r1, #324	@ 0x144
 8008a1a:	6878      	ldr	r0, [r7, #4]
 8008a1c:	f01d f969 	bl	8025cf2 <_ZdlPvj>
 8008a20:	687b      	ldr	r3, [r7, #4]
 8008a22:	4618      	mov	r0, r3
 8008a24:	3708      	adds	r7, #8
 8008a26:	46bd      	mov	sp, r7
 8008a28:	bd80      	pop	{r7, pc}
	...

08008a2c <_ZN23FrontendApplicationBaseD1Ev>:

class FrontendApplicationBase : public touchgfx::MVPApplication
{
public:
    FrontendApplicationBase(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplicationBase() { }
 8008a2c:	b580      	push	{r7, lr}
 8008a2e:	b082      	sub	sp, #8
 8008a30:	af00      	add	r7, sp, #0
 8008a32:	6078      	str	r0, [r7, #4]
 8008a34:	4a08      	ldr	r2, [pc, #32]	@ (8008a58 <_ZN23FrontendApplicationBaseD1Ev+0x2c>)
 8008a36:	687b      	ldr	r3, [r7, #4]
 8008a38:	601a      	str	r2, [r3, #0]
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008a40:	4618      	mov	r0, r3
 8008a42:	f000 ff8f 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8008a46:	687b      	ldr	r3, [r7, #4]
 8008a48:	4618      	mov	r0, r3
 8008a4a:	f7ff ffcb 	bl	80089e4 <_ZN8touchgfx14MVPApplicationD1Ev>
 8008a4e:	687b      	ldr	r3, [r7, #4]
 8008a50:	4618      	mov	r0, r3
 8008a52:	3708      	adds	r7, #8
 8008a54:	46bd      	mov	sp, r7
 8008a56:	bd80      	pop	{r7, pc}
 8008a58:	080282a4 	.word	0x080282a4

08008a5c <_ZN23FrontendApplicationBaseD0Ev>:
 8008a5c:	b580      	push	{r7, lr}
 8008a5e:	b082      	sub	sp, #8
 8008a60:	af00      	add	r7, sp, #0
 8008a62:	6078      	str	r0, [r7, #4]
 8008a64:	6878      	ldr	r0, [r7, #4]
 8008a66:	f7ff ffe1 	bl	8008a2c <_ZN23FrontendApplicationBaseD1Ev>
 8008a6a:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 8008a6e:	6878      	ldr	r0, [r7, #4]
 8008a70:	f01d f93f 	bl	8025cf2 <_ZdlPvj>
 8008a74:	687b      	ldr	r3, [r7, #4]
 8008a76:	4618      	mov	r0, r3
 8008a78:	3708      	adds	r7, #8
 8008a7a:	46bd      	mov	sp, r7
 8008a7c:	bd80      	pop	{r7, pc}

08008a7e <_ZN23FrontendApplicationBase19changeToStartScreenEv>:

    virtual void changeToStartScreen()
 8008a7e:	b580      	push	{r7, lr}
 8008a80:	b082      	sub	sp, #8
 8008a82:	af00      	add	r7, sp, #0
 8008a84:	6078      	str	r0, [r7, #4]
    {
        gotoMainScreenNoTransition();
 8008a86:	6878      	ldr	r0, [r7, #4]
 8008a88:	f000 f95a 	bl	8008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 8008a8c:	bf00      	nop
 8008a8e:	3708      	adds	r7, #8
 8008a90:	46bd      	mov	sp, r7
 8008a92:	bd80      	pop	{r7, pc}

08008a94 <_ZN8touchgfx12NoTransition15handleTickEventEv>:
 */
class NoTransition : public Transition
{
public:
    /** Indicates that the transition is done after the first tick. */
    virtual void handleTickEvent()
 8008a94:	b480      	push	{r7}
 8008a96:	b083      	sub	sp, #12
 8008a98:	af00      	add	r7, sp, #0
 8008a9a:	6078      	str	r0, [r7, #4]
    {
        done = true;
 8008a9c:	687b      	ldr	r3, [r7, #4]
 8008a9e:	2201      	movs	r2, #1
 8008aa0:	721a      	strb	r2, [r3, #8]
    }
 8008aa2:	bf00      	nop
 8008aa4:	370c      	adds	r7, #12
 8008aa6:	46bd      	mov	sp, r7
 8008aa8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008aac:	4770      	bx	lr

08008aae <_ZN13ModelListener4bindEP5Model>:

    /**
     * Sets the model pointer to point to the Model object. Called automatically
     * when switching screen.
     */
    void bind(Model* m)
 8008aae:	b480      	push	{r7}
 8008ab0:	b083      	sub	sp, #12
 8008ab2:	af00      	add	r7, sp, #0
 8008ab4:	6078      	str	r0, [r7, #4]
 8008ab6:	6039      	str	r1, [r7, #0]
    {
        model = m;
 8008ab8:	687b      	ldr	r3, [r7, #4]
 8008aba:	683a      	ldr	r2, [r7, #0]
 8008abc:	605a      	str	r2, [r3, #4]
    }
 8008abe:	bf00      	nop
 8008ac0:	370c      	adds	r7, #12
 8008ac2:	46bd      	mov	sp, r7
 8008ac4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ac8:	4770      	bx	lr
	...

08008acc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

using namespace touchgfx;

FrontendApplicationBase::FrontendApplicationBase(Model& m, FrontendHeap& heap)
 8008acc:	b580      	push	{r7, lr}
 8008ace:	b084      	sub	sp, #16
 8008ad0:	af00      	add	r7, sp, #0
 8008ad2:	60f8      	str	r0, [r7, #12]
 8008ad4:	60b9      	str	r1, [r7, #8]
 8008ad6:	607a      	str	r2, [r7, #4]
    : touchgfx::MVPApplication(),
      transitionCallback(),
      frontendHeap(heap),
      model(m)
 8008ad8:	68fb      	ldr	r3, [r7, #12]
 8008ada:	4618      	mov	r0, r3
 8008adc:	f7ff ff1a 	bl	8008914 <_ZN8touchgfx14MVPApplicationC1Ev>
 8008ae0:	4a19      	ldr	r2, [pc, #100]	@ (8008b48 <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap+0x7c>)
 8008ae2:	68fb      	ldr	r3, [r7, #12]
 8008ae4:	601a      	str	r2, [r3, #0]
      transitionCallback(),
 8008ae6:	68fb      	ldr	r3, [r7, #12]
 8008ae8:	f503 73a2 	add.w	r3, r3, #324	@ 0x144
 8008aec:	4618      	mov	r0, r3
 8008aee:	f000 f97d 	bl	8008dec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>
      frontendHeap(heap),
 8008af2:	68fb      	ldr	r3, [r7, #12]
 8008af4:	687a      	ldr	r2, [r7, #4]
 8008af6:	f8c3 2154 	str.w	r2, [r3, #340]	@ 0x154
      model(m)
 8008afa:	68fb      	ldr	r3, [r7, #12]
 8008afc:	68ba      	ldr	r2, [r7, #8]
 8008afe:	f8c3 2158 	str.w	r2, [r3, #344]	@ 0x158
{
    touchgfx::HAL::getInstance()->setDisplayOrientation(touchgfx::ORIENTATION_LANDSCAPE);
 8008b02:	f7ff fe49 	bl	8008798 <_ZN8touchgfx3HAL11getInstanceEv>
 8008b06:	4603      	mov	r3, r0
 8008b08:	681a      	ldr	r2, [r3, #0]
 8008b0a:	3208      	adds	r2, #8
 8008b0c:	6812      	ldr	r2, [r2, #0]
 8008b0e:	2100      	movs	r1, #0
 8008b10:	4618      	mov	r0, r3
 8008b12:	4790      	blx	r2
    touchgfx::Texts::setLanguage(GB);
 8008b14:	2000      	movs	r0, #0
 8008b16:	f004 ff89 	bl	800da2c <_ZN8touchgfx5Texts11setLanguageEt>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableTextureMapperAll();
 8008b1a:	f7ff fe49 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8008b1e:	4603      	mov	r3, r0
 8008b20:	4618      	mov	r0, r3
 8008b22:	f015 fd4e 	bl	801e5c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorL8_All();
 8008b26:	f7ff fe43 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8008b2a:	4603      	mov	r3, r0
 8008b2c:	4618      	mov	r0, r3
 8008b2e:	f015 fdc3 	bl	801e6b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>
    reinterpret_cast<touchgfx::LCD16bpp&>(touchgfx::HAL::lcd()).enableDecompressorRGB();
 8008b32:	f7ff fe3d 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8008b36:	4603      	mov	r3, r0
 8008b38:	4618      	mov	r0, r3
 8008b3a:	f015 fdc9 	bl	801e6d0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>
}
 8008b3e:	68fb      	ldr	r3, [r7, #12]
 8008b40:	4618      	mov	r0, r3
 8008b42:	3710      	adds	r7, #16
 8008b44:	46bd      	mov	sp, r7
 8008b46:	bd80      	pop	{r7, pc}
 8008b48:	080282a4 	.word	0x080282a4

08008b4c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>:
class GenericCallback<void>
 8008b4c:	b480      	push	{r7}
 8008b4e:	b083      	sub	sp, #12
 8008b50:	af00      	add	r7, sp, #0
 8008b52:	6078      	str	r0, [r7, #4]
 8008b54:	6039      	str	r1, [r7, #0]
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	4618      	mov	r0, r3
 8008b5a:	370c      	adds	r7, #12
 8008b5c:	46bd      	mov	sp, r7
 8008b5e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b62:	4770      	bx	lr

08008b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>:
 *
 * @note The member function to call must return void. The function can have zero, one, two or
 *       three arguments of any type.
 */
template <class dest_type>
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8008b64:	b580      	push	{r7, lr}
 8008b66:	b082      	sub	sp, #8
 8008b68:	af00      	add	r7, sp, #0
 8008b6a:	6078      	str	r0, [r7, #4]
 8008b6c:	6039      	str	r1, [r7, #0]
 8008b6e:	687b      	ldr	r3, [r7, #4]
 8008b70:	683a      	ldr	r2, [r7, #0]
 8008b72:	4611      	mov	r1, r2
 8008b74:	4618      	mov	r0, r3
 8008b76:	f7ff ffe9 	bl	8008b4c <_ZN8touchgfx15GenericCallbackIvvvEaSERKS1_>
 8008b7a:	683b      	ldr	r3, [r7, #0]
 8008b7c:	685a      	ldr	r2, [r3, #4]
 8008b7e:	687b      	ldr	r3, [r7, #4]
 8008b80:	605a      	str	r2, [r3, #4]
 8008b82:	687b      	ldr	r3, [r7, #4]
 8008b84:	683a      	ldr	r2, [r7, #0]
 8008b86:	3308      	adds	r3, #8
 8008b88:	3208      	adds	r2, #8
 8008b8a:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008b8e:	e883 0003 	stmia.w	r3, {r0, r1}
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	4618      	mov	r0, r3
 8008b96:	3708      	adds	r7, #8
 8008b98:	46bd      	mov	sp, r7
 8008b9a:	bd80      	pop	{r7, pc}

08008b9c <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>:
 */

// humidity_screen

void FrontendApplicationBase::gotohumidity_screenScreenNoTransition()
{
 8008b9c:	b590      	push	{r4, r7, lr}
 8008b9e:	b089      	sub	sp, #36	@ 0x24
 8008ba0:	af00      	add	r7, sp, #0
 8008ba2:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl);
 8008ba4:	687b      	ldr	r3, [r7, #4]
 8008ba6:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008baa:	4b10      	ldr	r3, [pc, #64]	@ (8008bec <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv+0x50>)
 8008bac:	61bb      	str	r3, [r7, #24]
 8008bae:	2300      	movs	r3, #0
 8008bb0:	61fb      	str	r3, [r7, #28]
 8008bb2:	f107 0008 	add.w	r0, r7, #8
 8008bb6:	f107 0318 	add.w	r3, r7, #24
 8008bba:	cb0c      	ldmia	r3, {r2, r3}
 8008bbc:	6879      	ldr	r1, [r7, #4]
 8008bbe:	f000 f931 	bl	8008e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008bc2:	f107 0308 	add.w	r3, r7, #8
 8008bc6:	4619      	mov	r1, r3
 8008bc8:	4620      	mov	r0, r4
 8008bca:	f7ff ffcb 	bl	8008b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008bce:	f107 0308 	add.w	r3, r7, #8
 8008bd2:	4618      	mov	r0, r3
 8008bd4:	f000 fec6 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008bde:	687b      	ldr	r3, [r7, #4]
 8008be0:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008be4:	bf00      	nop
 8008be6:	3724      	adds	r7, #36	@ 0x24
 8008be8:	46bd      	mov	sp, r7
 8008bea:	bd90      	pop	{r4, r7, pc}
 8008bec:	08008bf1 	.word	0x08008bf1

08008bf0 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotohumidity_screenScreenNoTransitionImpl()
{
 8008bf0:	b580      	push	{r7, lr}
 8008bf2:	b084      	sub	sp, #16
 8008bf4:	af02      	add	r7, sp, #8
 8008bf6:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<humidity_screenView, humidity_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008bf8:	687b      	ldr	r3, [r7, #4]
 8008bfa:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008bfe:	687b      	ldr	r3, [r7, #4]
 8008c00:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008c04:	461a      	mov	r2, r3
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008c0c:	9300      	str	r3, [sp, #0]
 8008c0e:	4b04      	ldr	r3, [pc, #16]	@ (8008c20 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x30>)
 8008c10:	4804      	ldr	r0, [pc, #16]	@ (8008c24 <_ZN23FrontendApplicationBase41gotohumidity_screenScreenNoTransitionImplEv+0x34>)
 8008c12:	f000 f939 	bl	8008e88 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008c16:	bf00      	nop
 8008c18:	3708      	adds	r7, #8
 8008c1a:	46bd      	mov	sp, r7
 8008c1c:	bd80      	pop	{r7, pc}
 8008c1e:	bf00      	nop
 8008c20:	20002f94 	.word	0x20002f94
 8008c24:	20002f90 	.word	0x20002f90

08008c28 <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>:

// temperature_screen

void FrontendApplicationBase::gototemperature_screenScreenNoTransition()
{
 8008c28:	b590      	push	{r4, r7, lr}
 8008c2a:	b089      	sub	sp, #36	@ 0x24
 8008c2c:	af00      	add	r7, sp, #0
 8008c2e:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl);
 8008c30:	687b      	ldr	r3, [r7, #4]
 8008c32:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008c36:	4b10      	ldr	r3, [pc, #64]	@ (8008c78 <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv+0x50>)
 8008c38:	61bb      	str	r3, [r7, #24]
 8008c3a:	2300      	movs	r3, #0
 8008c3c:	61fb      	str	r3, [r7, #28]
 8008c3e:	f107 0008 	add.w	r0, r7, #8
 8008c42:	f107 0318 	add.w	r3, r7, #24
 8008c46:	cb0c      	ldmia	r3, {r2, r3}
 8008c48:	6879      	ldr	r1, [r7, #4]
 8008c4a:	f000 f8eb 	bl	8008e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008c4e:	f107 0308 	add.w	r3, r7, #8
 8008c52:	4619      	mov	r1, r3
 8008c54:	4620      	mov	r0, r4
 8008c56:	f7ff ff85 	bl	8008b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008c5a:	f107 0308 	add.w	r3, r7, #8
 8008c5e:	4618      	mov	r0, r3
 8008c60:	f000 fe80 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008c64:	687b      	ldr	r3, [r7, #4]
 8008c66:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008c6a:	687b      	ldr	r3, [r7, #4]
 8008c6c:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008c70:	bf00      	nop
 8008c72:	3724      	adds	r7, #36	@ 0x24
 8008c74:	46bd      	mov	sp, r7
 8008c76:	bd90      	pop	{r4, r7, pc}
 8008c78:	08008c7d 	.word	0x08008c7d

08008c7c <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gototemperature_screenScreenNoTransitionImpl()
{
 8008c7c:	b580      	push	{r7, lr}
 8008c7e:	b084      	sub	sp, #16
 8008c80:	af02      	add	r7, sp, #8
 8008c82:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<temperature_screenView, temperature_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008c84:	687b      	ldr	r3, [r7, #4]
 8008c86:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008c8a:	687b      	ldr	r3, [r7, #4]
 8008c8c:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008c90:	461a      	mov	r2, r3
 8008c92:	687b      	ldr	r3, [r7, #4]
 8008c94:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008c98:	9300      	str	r3, [sp, #0]
 8008c9a:	4b04      	ldr	r3, [pc, #16]	@ (8008cac <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x30>)
 8008c9c:	4804      	ldr	r0, [pc, #16]	@ (8008cb0 <_ZN23FrontendApplicationBase44gototemperature_screenScreenNoTransitionImplEv+0x34>)
 8008c9e:	f000 fa0d 	bl	80090bc <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008ca2:	bf00      	nop
 8008ca4:	3708      	adds	r7, #8
 8008ca6:	46bd      	mov	sp, r7
 8008ca8:	bd80      	pop	{r7, pc}
 8008caa:	bf00      	nop
 8008cac:	20002f94 	.word	0x20002f94
 8008cb0:	20002f90 	.word	0x20002f90

08008cb4 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>:

// light_screen

void FrontendApplicationBase::gotolight_screenScreenNoTransition()
{
 8008cb4:	b590      	push	{r4, r7, lr}
 8008cb6:	b089      	sub	sp, #36	@ 0x24
 8008cb8:	af00      	add	r7, sp, #0
 8008cba:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl);
 8008cbc:	687b      	ldr	r3, [r7, #4]
 8008cbe:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008cc2:	4b10      	ldr	r3, [pc, #64]	@ (8008d04 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv+0x50>)
 8008cc4:	61bb      	str	r3, [r7, #24]
 8008cc6:	2300      	movs	r3, #0
 8008cc8:	61fb      	str	r3, [r7, #28]
 8008cca:	f107 0008 	add.w	r0, r7, #8
 8008cce:	f107 0318 	add.w	r3, r7, #24
 8008cd2:	cb0c      	ldmia	r3, {r2, r3}
 8008cd4:	6879      	ldr	r1, [r7, #4]
 8008cd6:	f000 f8a5 	bl	8008e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008cda:	f107 0308 	add.w	r3, r7, #8
 8008cde:	4619      	mov	r1, r3
 8008ce0:	4620      	mov	r0, r4
 8008ce2:	f7ff ff3f 	bl	8008b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008ce6:	f107 0308 	add.w	r3, r7, #8
 8008cea:	4618      	mov	r0, r3
 8008cec:	f000 fe3a 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008cf0:	687b      	ldr	r3, [r7, #4]
 8008cf2:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008cf6:	687b      	ldr	r3, [r7, #4]
 8008cf8:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008cfc:	bf00      	nop
 8008cfe:	3724      	adds	r7, #36	@ 0x24
 8008d00:	46bd      	mov	sp, r7
 8008d02:	bd90      	pop	{r4, r7, pc}
 8008d04:	08008d09 	.word	0x08008d09

08008d08 <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotolight_screenScreenNoTransitionImpl()
{
 8008d08:	b580      	push	{r7, lr}
 8008d0a:	b084      	sub	sp, #16
 8008d0c:	af02      	add	r7, sp, #8
 8008d0e:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<light_screenView, light_screenPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008d10:	687b      	ldr	r3, [r7, #4]
 8008d12:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008d16:	687b      	ldr	r3, [r7, #4]
 8008d18:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008d1c:	461a      	mov	r2, r3
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008d24:	9300      	str	r3, [sp, #0]
 8008d26:	4b04      	ldr	r3, [pc, #16]	@ (8008d38 <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x30>)
 8008d28:	4804      	ldr	r0, [pc, #16]	@ (8008d3c <_ZN23FrontendApplicationBase38gotolight_screenScreenNoTransitionImplEv+0x34>)
 8008d2a:	f000 fae1 	bl	80092f0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008d2e:	bf00      	nop
 8008d30:	3708      	adds	r7, #8
 8008d32:	46bd      	mov	sp, r7
 8008d34:	bd80      	pop	{r7, pc}
 8008d36:	bf00      	nop
 8008d38:	20002f94 	.word	0x20002f94
 8008d3c:	20002f90 	.word	0x20002f90

08008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>:

// Main

void FrontendApplicationBase::gotoMainScreenNoTransition()
{
 8008d40:	b590      	push	{r4, r7, lr}
 8008d42:	b089      	sub	sp, #36	@ 0x24
 8008d44:	af00      	add	r7, sp, #0
 8008d46:	6078      	str	r0, [r7, #4]
    transitionCallback = touchgfx::Callback<FrontendApplicationBase>(this, &FrontendApplicationBase::gotoMainScreenNoTransitionImpl);
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	f503 74a2 	add.w	r4, r3, #324	@ 0x144
 8008d4e:	4b10      	ldr	r3, [pc, #64]	@ (8008d90 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv+0x50>)
 8008d50:	61bb      	str	r3, [r7, #24]
 8008d52:	2300      	movs	r3, #0
 8008d54:	61fb      	str	r3, [r7, #28]
 8008d56:	f107 0008 	add.w	r0, r7, #8
 8008d5a:	f107 0318 	add.w	r3, r7, #24
 8008d5e:	cb0c      	ldmia	r3, {r2, r3}
 8008d60:	6879      	ldr	r1, [r7, #4]
 8008d62:	f000 f85f 	bl	8008e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>
 8008d66:	f107 0308 	add.w	r3, r7, #8
 8008d6a:	4619      	mov	r1, r3
 8008d6c:	4620      	mov	r0, r4
 8008d6e:	f7ff fef9 	bl	8008b64 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEaSEOS2_>
 8008d72:	f107 0308 	add.w	r3, r7, #8
 8008d76:	4618      	mov	r0, r3
 8008d78:	f000 fdf4 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
    pendingScreenTransitionCallback = &transitionCallback;
 8008d7c:	687b      	ldr	r3, [r7, #4]
 8008d7e:	f503 72a2 	add.w	r2, r3, #324	@ 0x144
 8008d82:	687b      	ldr	r3, [r7, #4]
 8008d84:	f8c3 2140 	str.w	r2, [r3, #320]	@ 0x140
}
 8008d88:	bf00      	nop
 8008d8a:	3724      	adds	r7, #36	@ 0x24
 8008d8c:	46bd      	mov	sp, r7
 8008d8e:	bd90      	pop	{r4, r7, pc}
 8008d90:	08008d95 	.word	0x08008d95

08008d94 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv>:

void FrontendApplicationBase::gotoMainScreenNoTransitionImpl()
{
 8008d94:	b580      	push	{r7, lr}
 8008d96:	b084      	sub	sp, #16
 8008d98:	af02      	add	r7, sp, #8
 8008d9a:	6078      	str	r0, [r7, #4]
    touchgfx::makeTransition<MainView, MainPresenter, touchgfx::NoTransition, Model >(&currentScreen, &currentPresenter, frontendHeap, &currentTransition, &model);
 8008d9c:	687b      	ldr	r3, [r7, #4]
 8008d9e:	f503 719e 	add.w	r1, r3, #316	@ 0x13c
 8008da2:	687b      	ldr	r3, [r7, #4]
 8008da4:	f8d3 3154 	ldr.w	r3, [r3, #340]	@ 0x154
 8008da8:	461a      	mov	r2, r3
 8008daa:	687b      	ldr	r3, [r7, #4]
 8008dac:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 8008db0:	9300      	str	r3, [sp, #0]
 8008db2:	4b04      	ldr	r3, [pc, #16]	@ (8008dc4 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x30>)
 8008db4:	4804      	ldr	r0, [pc, #16]	@ (8008dc8 <_ZN23FrontendApplicationBase30gotoMainScreenNoTransitionImplEv+0x34>)
 8008db6:	f000 fbb5 	bl	8009524 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>
}
 8008dba:	bf00      	nop
 8008dbc:	3708      	adds	r7, #8
 8008dbe:	46bd      	mov	sp, r7
 8008dc0:	bd80      	pop	{r7, pc}
 8008dc2:	bf00      	nop
 8008dc4:	20002f94 	.word	0x20002f94
 8008dc8:	20002f90 	.word	0x20002f90

08008dcc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>:
class GenericCallback<void>
 8008dcc:	b480      	push	{r7}
 8008dce:	b083      	sub	sp, #12
 8008dd0:	af00      	add	r7, sp, #0
 8008dd2:	6078      	str	r0, [r7, #4]
 8008dd4:	4a04      	ldr	r2, [pc, #16]	@ (8008de8 <_ZN8touchgfx15GenericCallbackIvvvEC1Ev+0x1c>)
 8008dd6:	687b      	ldr	r3, [r7, #4]
 8008dd8:	601a      	str	r2, [r3, #0]
 8008dda:	687b      	ldr	r3, [r7, #4]
 8008ddc:	4618      	mov	r0, r3
 8008dde:	370c      	adds	r7, #12
 8008de0:	46bd      	mov	sp, r7
 8008de2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008de6:	4770      	bx	lr
 8008de8:	08028388 	.word	0x08028388

08008dec <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev>:
{
    /** Initializes a new instance of the Callback class. */
    Callback()
 8008dec:	b580      	push	{r7, lr}
 8008dee:	b082      	sub	sp, #8
 8008df0:	af00      	add	r7, sp, #0
 8008df2:	6078      	str	r0, [r7, #4]
        : pobject(0), pmemfun(0)
 8008df4:	687b      	ldr	r3, [r7, #4]
 8008df6:	4618      	mov	r0, r3
 8008df8:	f7ff ffe8 	bl	8008dcc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008dfc:	4a08      	ldr	r2, [pc, #32]	@ (8008e20 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1Ev+0x34>)
 8008dfe:	687b      	ldr	r3, [r7, #4]
 8008e00:	601a      	str	r2, [r3, #0]
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	2200      	movs	r2, #0
 8008e06:	605a      	str	r2, [r3, #4]
 8008e08:	687b      	ldr	r3, [r7, #4]
 8008e0a:	2200      	movs	r2, #0
 8008e0c:	609a      	str	r2, [r3, #8]
 8008e0e:	687b      	ldr	r3, [r7, #4]
 8008e10:	2200      	movs	r2, #0
 8008e12:	60da      	str	r2, [r3, #12]
    {
    }
 8008e14:	687b      	ldr	r3, [r7, #4]
 8008e16:	4618      	mov	r0, r3
 8008e18:	3708      	adds	r7, #8
 8008e1a:	46bd      	mov	sp, r7
 8008e1c:	bd80      	pop	{r7, pc}
 8008e1e:	bf00      	nop
 8008e20:	080282f8 	.word	0x080282f8

08008e24 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE>:
     *
     * @param [in] pObject   Pointer to the object on which the function should be called.
     * @param [in] pmemfun_0 Address of member function. This is the version where function takes zero
     *                       arguments.
     */
    Callback(dest_type* pObject, void (dest_type::*pmemfun_0)())
 8008e24:	b580      	push	{r7, lr}
 8008e26:	b084      	sub	sp, #16
 8008e28:	af00      	add	r7, sp, #0
 8008e2a:	60f8      	str	r0, [r7, #12]
 8008e2c:	60b9      	str	r1, [r7, #8]
 8008e2e:	4639      	mov	r1, r7
 8008e30:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_0)
 8008e34:	68fb      	ldr	r3, [r7, #12]
 8008e36:	4618      	mov	r0, r3
 8008e38:	f7ff ffc8 	bl	8008dcc <_ZN8touchgfx15GenericCallbackIvvvEC1Ev>
 8008e3c:	4a08      	ldr	r2, [pc, #32]	@ (8008e60 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvEC1EPS1_MS1_FvvE+0x3c>)
 8008e3e:	68fb      	ldr	r3, [r7, #12]
 8008e40:	601a      	str	r2, [r3, #0]
 8008e42:	68fb      	ldr	r3, [r7, #12]
 8008e44:	68ba      	ldr	r2, [r7, #8]
 8008e46:	605a      	str	r2, [r3, #4]
 8008e48:	68fb      	ldr	r3, [r7, #12]
 8008e4a:	3308      	adds	r3, #8
 8008e4c:	463a      	mov	r2, r7
 8008e4e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008e52:	e883 0003 	stmia.w	r3, {r0, r1}
    {
    }
 8008e56:	68fb      	ldr	r3, [r7, #12]
 8008e58:	4618      	mov	r0, r3
 8008e5a:	3710      	adds	r7, #16
 8008e5c:	46bd      	mov	sp, r7
 8008e5e:	bd80      	pop	{r7, pc}
 8008e60:	080282f8 	.word	0x080282f8

08008e64 <_ZN8touchgfx12NoTransitionC1Ev>:
class NoTransition : public Transition
 8008e64:	b580      	push	{r7, lr}
 8008e66:	b082      	sub	sp, #8
 8008e68:	af00      	add	r7, sp, #0
 8008e6a:	6078      	str	r0, [r7, #4]
 8008e6c:	687b      	ldr	r3, [r7, #4]
 8008e6e:	4618      	mov	r0, r3
 8008e70:	f7ff fcba 	bl	80087e8 <_ZN8touchgfx10TransitionC1Ev>
 8008e74:	4a03      	ldr	r2, [pc, #12]	@ (8008e84 <_ZN8touchgfx12NoTransitionC1Ev+0x20>)
 8008e76:	687b      	ldr	r3, [r7, #4]
 8008e78:	601a      	str	r2, [r3, #0]
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	4618      	mov	r0, r3
 8008e7e:	3708      	adds	r7, #8
 8008e80:	46bd      	mov	sp, r7
 8008e82:	bd80      	pop	{r7, pc}
 8008e84:	08028280 	.word	0x08028280

08008e88 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
 *
 * @return Pointer to the new Presenter of the requested type. Incidentally it will be the same
 *         value as the old presenter due to memory reuse.
 */
template <class ScreenType, class PresenterType, class TransType, class ModelType>
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8008e88:	b590      	push	{r4, r7, lr}
 8008e8a:	b08f      	sub	sp, #60	@ 0x3c
 8008e8c:	af00      	add	r7, sp, #0
 8008e8e:	60f8      	str	r0, [r7, #12]
 8008e90:	60b9      	str	r1, [r7, #8]
 8008e92:	607a      	str	r2, [r7, #4]
 8008e94:	603b      	str	r3, [r7, #0]
{
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8008e96:	687b      	ldr	r3, [r7, #4]
 8008e98:	689a      	ldr	r2, [r3, #8]
 8008e9a:	687b      	ldr	r3, [r7, #4]
 8008e9c:	689b      	ldr	r3, [r3, #8]
 8008e9e:	681b      	ldr	r3, [r3, #0]
 8008ea0:	3320      	adds	r3, #32
 8008ea2:	681b      	ldr	r3, [r3, #0]
 8008ea4:	4610      	mov	r0, r2
 8008ea6:	4798      	blx	r3
 8008ea8:	4603      	mov	r3, r0
 8008eaa:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8008eae:	d205      	bcs.n	8008ebc <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8008eb0:	4b7d      	ldr	r3, [pc, #500]	@ (80090a8 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 8008eb2:	4a7e      	ldr	r2, [pc, #504]	@ (80090ac <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008eb4:	21a3      	movs	r1, #163	@ 0xa3
 8008eb6:	487e      	ldr	r0, [pc, #504]	@ (80090b0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008eb8:	f01c ffca 	bl	8025e50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8008ebc:	687b      	ldr	r3, [r7, #4]
 8008ebe:	685a      	ldr	r2, [r3, #4]
 8008ec0:	687b      	ldr	r3, [r7, #4]
 8008ec2:	685b      	ldr	r3, [r3, #4]
 8008ec4:	681b      	ldr	r3, [r3, #0]
 8008ec6:	3320      	adds	r3, #32
 8008ec8:	681b      	ldr	r3, [r3, #0]
 8008eca:	4610      	mov	r0, r2
 8008ecc:	4798      	blx	r3
 8008ece:	4603      	mov	r3, r0
 8008ed0:	2b0f      	cmp	r3, #15
 8008ed2:	d805      	bhi.n	8008ee0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8008ed4:	4b77      	ldr	r3, [pc, #476]	@ (80090b4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8008ed6:	4a75      	ldr	r2, [pc, #468]	@ (80090ac <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008ed8:	21a4      	movs	r1, #164	@ 0xa4
 8008eda:	4875      	ldr	r0, [pc, #468]	@ (80090b0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008edc:	f01c ffb8 	bl	8025e50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8008ee0:	687b      	ldr	r3, [r7, #4]
 8008ee2:	68da      	ldr	r2, [r3, #12]
 8008ee4:	687b      	ldr	r3, [r7, #4]
 8008ee6:	68db      	ldr	r3, [r3, #12]
 8008ee8:	681b      	ldr	r3, [r3, #0]
 8008eea:	3320      	adds	r3, #32
 8008eec:	681b      	ldr	r3, [r3, #0]
 8008eee:	4610      	mov	r0, r2
 8008ef0:	4798      	blx	r3
 8008ef2:	4603      	mov	r3, r0
 8008ef4:	2b0b      	cmp	r3, #11
 8008ef6:	d805      	bhi.n	8008f04 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8008ef8:	4b6f      	ldr	r3, [pc, #444]	@ (80090b8 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8008efa:	4a6c      	ldr	r2, [pc, #432]	@ (80090ac <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8008efc:	21a5      	movs	r1, #165	@ 0xa5
 8008efe:	486c      	ldr	r0, [pc, #432]	@ (80090b0 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8008f00:	f01c ffa6 	bl	8025e50 <__assert_func>
 8008f04:	68fb      	ldr	r3, [r7, #12]
 8008f06:	62bb      	str	r3, [r7, #40]	@ 0x28
 8008f08:	68bb      	ldr	r3, [r7, #8]
 8008f0a:	627b      	str	r3, [r7, #36]	@ 0x24
 8008f0c:	683b      	ldr	r3, [r7, #0]
 8008f0e:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8008f10:	f00b f996 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 8008f14:	4603      	mov	r3, r0
 8008f16:	4618      	mov	r0, r3
 8008f18:	f7ff fc10 	bl	800873c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8008f1c:	6a3b      	ldr	r3, [r7, #32]
 8008f1e:	681b      	ldr	r3, [r3, #0]
 8008f20:	2b00      	cmp	r3, #0
 8008f22:	d008      	beq.n	8008f36 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8008f24:	6a3b      	ldr	r3, [r7, #32]
 8008f26:	681a      	ldr	r2, [r3, #0]
 8008f28:	6a3b      	ldr	r3, [r7, #32]
 8008f2a:	681b      	ldr	r3, [r3, #0]
 8008f2c:	681b      	ldr	r3, [r3, #0]
 8008f2e:	330c      	adds	r3, #12
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	4610      	mov	r0, r2
 8008f34:	4798      	blx	r3
    if (*currentTrans)
 8008f36:	6a3b      	ldr	r3, [r7, #32]
 8008f38:	681b      	ldr	r3, [r3, #0]
 8008f3a:	2b00      	cmp	r3, #0
 8008f3c:	d007      	beq.n	8008f4e <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8008f3e:	6a3b      	ldr	r3, [r7, #32]
 8008f40:	681a      	ldr	r2, [r3, #0]
 8008f42:	6a3b      	ldr	r3, [r7, #32]
 8008f44:	681b      	ldr	r3, [r3, #0]
 8008f46:	681b      	ldr	r3, [r3, #0]
 8008f48:	681b      	ldr	r3, [r3, #0]
 8008f4a:	4610      	mov	r0, r2
 8008f4c:	4798      	blx	r3
    if (*currentScreen)
 8008f4e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f50:	681b      	ldr	r3, [r3, #0]
 8008f52:	2b00      	cmp	r3, #0
 8008f54:	d008      	beq.n	8008f68 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 8008f56:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f58:	681a      	ldr	r2, [r3, #0]
 8008f5a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f5c:	681b      	ldr	r3, [r3, #0]
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	3314      	adds	r3, #20
 8008f62:	681b      	ldr	r3, [r3, #0]
 8008f64:	4610      	mov	r0, r2
 8008f66:	4798      	blx	r3
    if (*currentPresenter)
 8008f68:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f6a:	681b      	ldr	r3, [r3, #0]
 8008f6c:	2b00      	cmp	r3, #0
 8008f6e:	d008      	beq.n	8008f82 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 8008f70:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f72:	681a      	ldr	r2, [r3, #0]
 8008f74:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f76:	681b      	ldr	r3, [r3, #0]
 8008f78:	681b      	ldr	r3, [r3, #0]
 8008f7a:	3304      	adds	r3, #4
 8008f7c:	681b      	ldr	r3, [r3, #0]
 8008f7e:	4610      	mov	r0, r2
 8008f80:	4798      	blx	r3
    if (*currentScreen)
 8008f82:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f84:	681b      	ldr	r3, [r3, #0]
 8008f86:	2b00      	cmp	r3, #0
 8008f88:	d007      	beq.n	8008f9a <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8008f8a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f8c:	681a      	ldr	r2, [r3, #0]
 8008f8e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8008f90:	681b      	ldr	r3, [r3, #0]
 8008f92:	681b      	ldr	r3, [r3, #0]
 8008f94:	681b      	ldr	r3, [r3, #0]
 8008f96:	4610      	mov	r0, r2
 8008f98:	4798      	blx	r3
    if (*currentPresenter)
 8008f9a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008f9c:	681b      	ldr	r3, [r3, #0]
 8008f9e:	2b00      	cmp	r3, #0
 8008fa0:	d008      	beq.n	8008fb4 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 8008fa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fa4:	681a      	ldr	r2, [r3, #0]
 8008fa6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8008fa8:	681b      	ldr	r3, [r3, #0]
 8008faa:	681b      	ldr	r3, [r3, #0]
 8008fac:	3308      	adds	r3, #8
 8008fae:	681b      	ldr	r3, [r3, #0]
 8008fb0:	4610      	mov	r0, r2
 8008fb2:	4798      	blx	r3
}
 8008fb4:	bf00      	nop

    prepareTransition(currentScreen, currentPresenter, currentTrans);

    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8008fb6:	687b      	ldr	r3, [r7, #4]
 8008fb8:	68db      	ldr	r3, [r3, #12]
 8008fba:	2100      	movs	r1, #0
 8008fbc:	4618      	mov	r0, r3
 8008fbe:	f000 fbcb 	bl	8009758 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 8008fc2:	4603      	mov	r3, r0
 8008fc4:	4619      	mov	r1, r3
 8008fc6:	200c      	movs	r0, #12
 8008fc8:	f7ff fb22 	bl	8008610 <_ZnwjPv>
 8008fcc:	4604      	mov	r4, r0
 8008fce:	4620      	mov	r0, r4
 8008fd0:	f7ff ff48 	bl	8008e64 <_ZN8touchgfx12NoTransitionC1Ev>
 8008fd4:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8008fd6:	687b      	ldr	r3, [r7, #4]
 8008fd8:	689b      	ldr	r3, [r3, #8]
 8008fda:	2100      	movs	r1, #0
 8008fdc:	4618      	mov	r0, r3
 8008fde:	f000 fbce 	bl	800977e <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>
 8008fe2:	4603      	mov	r3, r0
 8008fe4:	4619      	mov	r1, r3
 8008fe6:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8008fea:	f7ff fb11 	bl	8008610 <_ZnwjPv>
 8008fee:	4604      	mov	r4, r0
 8008ff0:	4620      	mov	r0, r4
 8008ff2:	f004 ff87 	bl	800df04 <_ZN19humidity_screenViewC1Ev>
 8008ff6:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8008ff8:	687b      	ldr	r3, [r7, #4]
 8008ffa:	685b      	ldr	r3, [r3, #4]
 8008ffc:	2100      	movs	r1, #0
 8008ffe:	4618      	mov	r0, r3
 8009000:	f000 fbd0 	bl	80097a4 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>
 8009004:	4603      	mov	r3, r0
 8009006:	4619      	mov	r1, r3
 8009008:	2010      	movs	r0, #16
 800900a:	f7ff fb01 	bl	8008610 <_ZnwjPv>
 800900e:	4604      	mov	r4, r0
 8009010:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009012:	4620      	mov	r0, r4
 8009014:	f004 fef0 	bl	800ddf8 <_ZN24humidity_screenPresenterC1ER19humidity_screenView>
 8009018:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800901a:	683b      	ldr	r3, [r7, #0]
 800901c:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 800901e:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009020:	68bb      	ldr	r3, [r7, #8]
 8009022:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009024:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 8009026:	68fb      	ldr	r3, [r7, #12]
 8009028:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800902a:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 800902c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800902e:	2b00      	cmp	r3, #0
 8009030:	d002      	beq.n	8009038 <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009032:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009034:	3304      	adds	r3, #4
 8009036:	e000      	b.n	800903a <_ZN8touchgfx14makeTransitionI19humidity_screenView24humidity_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 8009038:	2300      	movs	r3, #0
 800903a:	4619      	mov	r1, r3
 800903c:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 800903e:	f7ff fcc3 	bl	80089c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009042:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009044:	3304      	adds	r3, #4
 8009046:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 8009048:	4618      	mov	r0, r3
 800904a:	f7ff fd30 	bl	8008aae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 800904e:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009050:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009052:	4618      	mov	r0, r3
 8009054:	f000 fbb9 	bl	80097ca <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>
 8009058:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800905a:	61fb      	str	r3, [r7, #28]
 800905c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800905e:	61bb      	str	r3, [r7, #24]
 8009060:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009062:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009064:	69fb      	ldr	r3, [r7, #28]
 8009066:	681b      	ldr	r3, [r3, #0]
 8009068:	330c      	adds	r3, #12
 800906a:	681b      	ldr	r3, [r3, #0]
 800906c:	69f8      	ldr	r0, [r7, #28]
 800906e:	4798      	blx	r3
    newPresenter->activate();
 8009070:	69bb      	ldr	r3, [r7, #24]
 8009072:	681b      	ldr	r3, [r3, #0]
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	69b8      	ldr	r0, [r7, #24]
 8009078:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 800907a:	6979      	ldr	r1, [r7, #20]
 800907c:	69f8      	ldr	r0, [r7, #28]
 800907e:	f00c fda1 	bl	8015bc4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 8009082:	697b      	ldr	r3, [r7, #20]
 8009084:	681b      	ldr	r3, [r3, #0]
 8009086:	3310      	adds	r3, #16
 8009088:	681b      	ldr	r3, [r3, #0]
 800908a:	6978      	ldr	r0, [r7, #20]
 800908c:	4798      	blx	r3
    newTransition->invalidate();
 800908e:	697b      	ldr	r3, [r7, #20]
 8009090:	681b      	ldr	r3, [r3, #0]
 8009092:	3314      	adds	r3, #20
 8009094:	681b      	ldr	r3, [r3, #0]
 8009096:	6978      	ldr	r0, [r7, #20]
 8009098:	4798      	blx	r3
}
 800909a:	bf00      	nop

    finalizeTransition((Screen*)newScreen, (Presenter*)newPresenter, (Transition*)newTransition);

    return newPresenter;
 800909c:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800909e:	4618      	mov	r0, r3
 80090a0:	373c      	adds	r7, #60	@ 0x3c
 80090a2:	46bd      	mov	sp, r7
 80090a4:	bd90      	pop	{r4, r7, pc}
 80090a6:	bf00      	nop
 80090a8:	08026eb0 	.word	0x08026eb0
 80090ac:	08026f40 	.word	0x08026f40
 80090b0:	08027024 	.word	0x08027024
 80090b4:	08027068 	.word	0x08027068
 80090b8:	0802710c 	.word	0x0802710c

080090bc <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80090bc:	b590      	push	{r4, r7, lr}
 80090be:	b08f      	sub	sp, #60	@ 0x3c
 80090c0:	af00      	add	r7, sp, #0
 80090c2:	60f8      	str	r0, [r7, #12]
 80090c4:	60b9      	str	r1, [r7, #8]
 80090c6:	607a      	str	r2, [r7, #4]
 80090c8:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80090ca:	687b      	ldr	r3, [r7, #4]
 80090cc:	689a      	ldr	r2, [r3, #8]
 80090ce:	687b      	ldr	r3, [r7, #4]
 80090d0:	689b      	ldr	r3, [r3, #8]
 80090d2:	681b      	ldr	r3, [r3, #0]
 80090d4:	3320      	adds	r3, #32
 80090d6:	681b      	ldr	r3, [r3, #0]
 80090d8:	4610      	mov	r0, r2
 80090da:	4798      	blx	r3
 80090dc:	4603      	mov	r3, r0
 80090de:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 80090e2:	d205      	bcs.n	80090f0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 80090e4:	4b7d      	ldr	r3, [pc, #500]	@ (80092dc <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 80090e6:	4a7e      	ldr	r2, [pc, #504]	@ (80092e0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 80090e8:	21a3      	movs	r1, #163	@ 0xa3
 80090ea:	487e      	ldr	r0, [pc, #504]	@ (80092e4 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 80090ec:	f01c feb0 	bl	8025e50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 80090f0:	687b      	ldr	r3, [r7, #4]
 80090f2:	685a      	ldr	r2, [r3, #4]
 80090f4:	687b      	ldr	r3, [r7, #4]
 80090f6:	685b      	ldr	r3, [r3, #4]
 80090f8:	681b      	ldr	r3, [r3, #0]
 80090fa:	3320      	adds	r3, #32
 80090fc:	681b      	ldr	r3, [r3, #0]
 80090fe:	4610      	mov	r0, r2
 8009100:	4798      	blx	r3
 8009102:	4603      	mov	r3, r0
 8009104:	2b0f      	cmp	r3, #15
 8009106:	d805      	bhi.n	8009114 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8009108:	4b77      	ldr	r3, [pc, #476]	@ (80092e8 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800910a:	4a75      	ldr	r2, [pc, #468]	@ (80092e0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800910c:	21a4      	movs	r1, #164	@ 0xa4
 800910e:	4875      	ldr	r0, [pc, #468]	@ (80092e4 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009110:	f01c fe9e 	bl	8025e50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009114:	687b      	ldr	r3, [r7, #4]
 8009116:	68da      	ldr	r2, [r3, #12]
 8009118:	687b      	ldr	r3, [r7, #4]
 800911a:	68db      	ldr	r3, [r3, #12]
 800911c:	681b      	ldr	r3, [r3, #0]
 800911e:	3320      	adds	r3, #32
 8009120:	681b      	ldr	r3, [r3, #0]
 8009122:	4610      	mov	r0, r2
 8009124:	4798      	blx	r3
 8009126:	4603      	mov	r3, r0
 8009128:	2b0b      	cmp	r3, #11
 800912a:	d805      	bhi.n	8009138 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 800912c:	4b6f      	ldr	r3, [pc, #444]	@ (80092ec <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 800912e:	4a6c      	ldr	r2, [pc, #432]	@ (80092e0 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009130:	21a5      	movs	r1, #165	@ 0xa5
 8009132:	486c      	ldr	r0, [pc, #432]	@ (80092e4 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009134:	f01c fe8c 	bl	8025e50 <__assert_func>
 8009138:	68fb      	ldr	r3, [r7, #12]
 800913a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800913c:	68bb      	ldr	r3, [r7, #8]
 800913e:	627b      	str	r3, [r7, #36]	@ 0x24
 8009140:	683b      	ldr	r3, [r7, #0]
 8009142:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009144:	f00b f87c 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 8009148:	4603      	mov	r3, r0
 800914a:	4618      	mov	r0, r3
 800914c:	f7ff faf6 	bl	800873c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009150:	6a3b      	ldr	r3, [r7, #32]
 8009152:	681b      	ldr	r3, [r3, #0]
 8009154:	2b00      	cmp	r3, #0
 8009156:	d008      	beq.n	800916a <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 8009158:	6a3b      	ldr	r3, [r7, #32]
 800915a:	681a      	ldr	r2, [r3, #0]
 800915c:	6a3b      	ldr	r3, [r7, #32]
 800915e:	681b      	ldr	r3, [r3, #0]
 8009160:	681b      	ldr	r3, [r3, #0]
 8009162:	330c      	adds	r3, #12
 8009164:	681b      	ldr	r3, [r3, #0]
 8009166:	4610      	mov	r0, r2
 8009168:	4798      	blx	r3
    if (*currentTrans)
 800916a:	6a3b      	ldr	r3, [r7, #32]
 800916c:	681b      	ldr	r3, [r3, #0]
 800916e:	2b00      	cmp	r3, #0
 8009170:	d007      	beq.n	8009182 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 8009172:	6a3b      	ldr	r3, [r7, #32]
 8009174:	681a      	ldr	r2, [r3, #0]
 8009176:	6a3b      	ldr	r3, [r7, #32]
 8009178:	681b      	ldr	r3, [r3, #0]
 800917a:	681b      	ldr	r3, [r3, #0]
 800917c:	681b      	ldr	r3, [r3, #0]
 800917e:	4610      	mov	r0, r2
 8009180:	4798      	blx	r3
    if (*currentScreen)
 8009182:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009184:	681b      	ldr	r3, [r3, #0]
 8009186:	2b00      	cmp	r3, #0
 8009188:	d008      	beq.n	800919c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 800918a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800918c:	681a      	ldr	r2, [r3, #0]
 800918e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009190:	681b      	ldr	r3, [r3, #0]
 8009192:	681b      	ldr	r3, [r3, #0]
 8009194:	3314      	adds	r3, #20
 8009196:	681b      	ldr	r3, [r3, #0]
 8009198:	4610      	mov	r0, r2
 800919a:	4798      	blx	r3
    if (*currentPresenter)
 800919c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800919e:	681b      	ldr	r3, [r3, #0]
 80091a0:	2b00      	cmp	r3, #0
 80091a2:	d008      	beq.n	80091b6 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 80091a4:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091a6:	681a      	ldr	r2, [r3, #0]
 80091a8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091aa:	681b      	ldr	r3, [r3, #0]
 80091ac:	681b      	ldr	r3, [r3, #0]
 80091ae:	3304      	adds	r3, #4
 80091b0:	681b      	ldr	r3, [r3, #0]
 80091b2:	4610      	mov	r0, r2
 80091b4:	4798      	blx	r3
    if (*currentScreen)
 80091b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091b8:	681b      	ldr	r3, [r3, #0]
 80091ba:	2b00      	cmp	r3, #0
 80091bc:	d007      	beq.n	80091ce <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 80091be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091c0:	681a      	ldr	r2, [r3, #0]
 80091c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80091c4:	681b      	ldr	r3, [r3, #0]
 80091c6:	681b      	ldr	r3, [r3, #0]
 80091c8:	681b      	ldr	r3, [r3, #0]
 80091ca:	4610      	mov	r0, r2
 80091cc:	4798      	blx	r3
    if (*currentPresenter)
 80091ce:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091d0:	681b      	ldr	r3, [r3, #0]
 80091d2:	2b00      	cmp	r3, #0
 80091d4:	d008      	beq.n	80091e8 <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 80091d6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091d8:	681a      	ldr	r2, [r3, #0]
 80091da:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80091dc:	681b      	ldr	r3, [r3, #0]
 80091de:	681b      	ldr	r3, [r3, #0]
 80091e0:	3308      	adds	r3, #8
 80091e2:	681b      	ldr	r3, [r3, #0]
 80091e4:	4610      	mov	r0, r2
 80091e6:	4798      	blx	r3
}
 80091e8:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 80091ea:	687b      	ldr	r3, [r7, #4]
 80091ec:	68db      	ldr	r3, [r3, #12]
 80091ee:	2100      	movs	r1, #0
 80091f0:	4618      	mov	r0, r3
 80091f2:	f000 fab1 	bl	8009758 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 80091f6:	4603      	mov	r3, r0
 80091f8:	4619      	mov	r1, r3
 80091fa:	200c      	movs	r0, #12
 80091fc:	f7ff fa08 	bl	8008610 <_ZnwjPv>
 8009200:	4604      	mov	r4, r0
 8009202:	4620      	mov	r0, r4
 8009204:	f7ff fe2e 	bl	8008e64 <_ZN8touchgfx12NoTransitionC1Ev>
 8009208:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800920a:	687b      	ldr	r3, [r7, #4]
 800920c:	689b      	ldr	r3, [r3, #8]
 800920e:	2100      	movs	r1, #0
 8009210:	4618      	mov	r0, r3
 8009212:	f000 fae8 	bl	80097e6 <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>
 8009216:	4603      	mov	r3, r0
 8009218:	4619      	mov	r1, r3
 800921a:	f44f 7009 	mov.w	r0, #548	@ 0x224
 800921e:	f7ff f9f7 	bl	8008610 <_ZnwjPv>
 8009222:	4604      	mov	r4, r0
 8009224:	4620      	mov	r0, r4
 8009226:	f005 fab3 	bl	800e790 <_ZN22temperature_screenViewC1Ev>
 800922a:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 800922c:	687b      	ldr	r3, [r7, #4]
 800922e:	685b      	ldr	r3, [r3, #4]
 8009230:	2100      	movs	r1, #0
 8009232:	4618      	mov	r0, r3
 8009234:	f000 faea 	bl	800980c <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>
 8009238:	4603      	mov	r3, r0
 800923a:	4619      	mov	r1, r3
 800923c:	2010      	movs	r0, #16
 800923e:	f7ff f9e7 	bl	8008610 <_ZnwjPv>
 8009242:	4604      	mov	r4, r0
 8009244:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8009246:	4620      	mov	r0, r4
 8009248:	f005 fa30 	bl	800e6ac <_ZN27temperature_screenPresenterC1ER22temperature_screenView>
 800924c:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 800924e:	683b      	ldr	r3, [r7, #0]
 8009250:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009252:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009254:	68bb      	ldr	r3, [r7, #8]
 8009256:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 8009258:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800925a:	68fb      	ldr	r3, [r7, #12]
 800925c:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 800925e:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009260:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009262:	2b00      	cmp	r3, #0
 8009264:	d002      	beq.n	800926c <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 8009266:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009268:	3304      	adds	r3, #4
 800926a:	e000      	b.n	800926e <_ZN8touchgfx14makeTransitionI22temperature_screenView27temperature_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 800926c:	2300      	movs	r3, #0
 800926e:	4619      	mov	r1, r3
 8009270:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 8009272:	f7ff fba9 	bl	80089c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 8009276:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009278:	3304      	adds	r3, #4
 800927a:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 800927c:	4618      	mov	r0, r3
 800927e:	f7ff fc16 	bl	8008aae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 8009282:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8009284:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 8009286:	4618      	mov	r0, r3
 8009288:	f000 fad3 	bl	8009832 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>
 800928c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 800928e:	61fb      	str	r3, [r7, #28]
 8009290:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009292:	61bb      	str	r3, [r7, #24]
 8009294:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 8009296:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009298:	69fb      	ldr	r3, [r7, #28]
 800929a:	681b      	ldr	r3, [r3, #0]
 800929c:	330c      	adds	r3, #12
 800929e:	681b      	ldr	r3, [r3, #0]
 80092a0:	69f8      	ldr	r0, [r7, #28]
 80092a2:	4798      	blx	r3
    newPresenter->activate();
 80092a4:	69bb      	ldr	r3, [r7, #24]
 80092a6:	681b      	ldr	r3, [r3, #0]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	69b8      	ldr	r0, [r7, #24]
 80092ac:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80092ae:	6979      	ldr	r1, [r7, #20]
 80092b0:	69f8      	ldr	r0, [r7, #28]
 80092b2:	f00c fc87 	bl	8015bc4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80092b6:	697b      	ldr	r3, [r7, #20]
 80092b8:	681b      	ldr	r3, [r3, #0]
 80092ba:	3310      	adds	r3, #16
 80092bc:	681b      	ldr	r3, [r3, #0]
 80092be:	6978      	ldr	r0, [r7, #20]
 80092c0:	4798      	blx	r3
    newTransition->invalidate();
 80092c2:	697b      	ldr	r3, [r7, #20]
 80092c4:	681b      	ldr	r3, [r3, #0]
 80092c6:	3314      	adds	r3, #20
 80092c8:	681b      	ldr	r3, [r3, #0]
 80092ca:	6978      	ldr	r0, [r7, #20]
 80092cc:	4798      	blx	r3
}
 80092ce:	bf00      	nop
    return newPresenter;
 80092d0:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 80092d2:	4618      	mov	r0, r3
 80092d4:	373c      	adds	r7, #60	@ 0x3c
 80092d6:	46bd      	mov	sp, r7
 80092d8:	bd90      	pop	{r4, r7, pc}
 80092da:	bf00      	nop
 80092dc:	08026eb0 	.word	0x08026eb0
 80092e0:	080271b0 	.word	0x080271b0
 80092e4:	08027024 	.word	0x08027024
 80092e8:	08027068 	.word	0x08027068
 80092ec:	0802710c 	.word	0x0802710c

080092f0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 80092f0:	b590      	push	{r4, r7, lr}
 80092f2:	b08f      	sub	sp, #60	@ 0x3c
 80092f4:	af00      	add	r7, sp, #0
 80092f6:	60f8      	str	r0, [r7, #12]
 80092f8:	60b9      	str	r1, [r7, #8]
 80092fa:	607a      	str	r2, [r7, #4]
 80092fc:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 80092fe:	687b      	ldr	r3, [r7, #4]
 8009300:	689a      	ldr	r2, [r3, #8]
 8009302:	687b      	ldr	r3, [r7, #4]
 8009304:	689b      	ldr	r3, [r3, #8]
 8009306:	681b      	ldr	r3, [r3, #0]
 8009308:	3320      	adds	r3, #32
 800930a:	681b      	ldr	r3, [r3, #0]
 800930c:	4610      	mov	r0, r2
 800930e:	4798      	blx	r3
 8009310:	4603      	mov	r3, r0
 8009312:	f5b3 7f09 	cmp.w	r3, #548	@ 0x224
 8009316:	d205      	bcs.n	8009324 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 8009318:	4b7d      	ldr	r3, [pc, #500]	@ (8009510 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800931a:	4a7e      	ldr	r2, [pc, #504]	@ (8009514 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 800931c:	21a3      	movs	r1, #163	@ 0xa3
 800931e:	487e      	ldr	r0, [pc, #504]	@ (8009518 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009320:	f01c fd96 	bl	8025e50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009324:	687b      	ldr	r3, [r7, #4]
 8009326:	685a      	ldr	r2, [r3, #4]
 8009328:	687b      	ldr	r3, [r7, #4]
 800932a:	685b      	ldr	r3, [r3, #4]
 800932c:	681b      	ldr	r3, [r3, #0]
 800932e:	3320      	adds	r3, #32
 8009330:	681b      	ldr	r3, [r3, #0]
 8009332:	4610      	mov	r0, r2
 8009334:	4798      	blx	r3
 8009336:	4603      	mov	r3, r0
 8009338:	2b0f      	cmp	r3, #15
 800933a:	d805      	bhi.n	8009348 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 800933c:	4b77      	ldr	r3, [pc, #476]	@ (800951c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 800933e:	4a75      	ldr	r2, [pc, #468]	@ (8009514 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009340:	21a4      	movs	r1, #164	@ 0xa4
 8009342:	4875      	ldr	r0, [pc, #468]	@ (8009518 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009344:	f01c fd84 	bl	8025e50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 8009348:	687b      	ldr	r3, [r7, #4]
 800934a:	68da      	ldr	r2, [r3, #12]
 800934c:	687b      	ldr	r3, [r7, #4]
 800934e:	68db      	ldr	r3, [r3, #12]
 8009350:	681b      	ldr	r3, [r3, #0]
 8009352:	3320      	adds	r3, #32
 8009354:	681b      	ldr	r3, [r3, #0]
 8009356:	4610      	mov	r0, r2
 8009358:	4798      	blx	r3
 800935a:	4603      	mov	r3, r0
 800935c:	2b0b      	cmp	r3, #11
 800935e:	d805      	bhi.n	800936c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8009360:	4b6f      	ldr	r3, [pc, #444]	@ (8009520 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009362:	4a6c      	ldr	r2, [pc, #432]	@ (8009514 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009364:	21a5      	movs	r1, #165	@ 0xa5
 8009366:	486c      	ldr	r0, [pc, #432]	@ (8009518 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009368:	f01c fd72 	bl	8025e50 <__assert_func>
 800936c:	68fb      	ldr	r3, [r7, #12]
 800936e:	62bb      	str	r3, [r7, #40]	@ 0x28
 8009370:	68bb      	ldr	r3, [r7, #8]
 8009372:	627b      	str	r3, [r7, #36]	@ 0x24
 8009374:	683b      	ldr	r3, [r7, #0]
 8009376:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 8009378:	f00a ff62 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800937c:	4603      	mov	r3, r0
 800937e:	4618      	mov	r0, r3
 8009380:	f7ff f9dc 	bl	800873c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 8009384:	6a3b      	ldr	r3, [r7, #32]
 8009386:	681b      	ldr	r3, [r3, #0]
 8009388:	2b00      	cmp	r3, #0
 800938a:	d008      	beq.n	800939e <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 800938c:	6a3b      	ldr	r3, [r7, #32]
 800938e:	681a      	ldr	r2, [r3, #0]
 8009390:	6a3b      	ldr	r3, [r7, #32]
 8009392:	681b      	ldr	r3, [r3, #0]
 8009394:	681b      	ldr	r3, [r3, #0]
 8009396:	330c      	adds	r3, #12
 8009398:	681b      	ldr	r3, [r3, #0]
 800939a:	4610      	mov	r0, r2
 800939c:	4798      	blx	r3
    if (*currentTrans)
 800939e:	6a3b      	ldr	r3, [r7, #32]
 80093a0:	681b      	ldr	r3, [r3, #0]
 80093a2:	2b00      	cmp	r3, #0
 80093a4:	d007      	beq.n	80093b6 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 80093a6:	6a3b      	ldr	r3, [r7, #32]
 80093a8:	681a      	ldr	r2, [r3, #0]
 80093aa:	6a3b      	ldr	r3, [r7, #32]
 80093ac:	681b      	ldr	r3, [r3, #0]
 80093ae:	681b      	ldr	r3, [r3, #0]
 80093b0:	681b      	ldr	r3, [r3, #0]
 80093b2:	4610      	mov	r0, r2
 80093b4:	4798      	blx	r3
    if (*currentScreen)
 80093b6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093b8:	681b      	ldr	r3, [r3, #0]
 80093ba:	2b00      	cmp	r3, #0
 80093bc:	d008      	beq.n	80093d0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 80093be:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093c0:	681a      	ldr	r2, [r3, #0]
 80093c2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093c4:	681b      	ldr	r3, [r3, #0]
 80093c6:	681b      	ldr	r3, [r3, #0]
 80093c8:	3314      	adds	r3, #20
 80093ca:	681b      	ldr	r3, [r3, #0]
 80093cc:	4610      	mov	r0, r2
 80093ce:	4798      	blx	r3
    if (*currentPresenter)
 80093d0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093d2:	681b      	ldr	r3, [r3, #0]
 80093d4:	2b00      	cmp	r3, #0
 80093d6:	d008      	beq.n	80093ea <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 80093d8:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093da:	681a      	ldr	r2, [r3, #0]
 80093dc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 80093de:	681b      	ldr	r3, [r3, #0]
 80093e0:	681b      	ldr	r3, [r3, #0]
 80093e2:	3304      	adds	r3, #4
 80093e4:	681b      	ldr	r3, [r3, #0]
 80093e6:	4610      	mov	r0, r2
 80093e8:	4798      	blx	r3
    if (*currentScreen)
 80093ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093ec:	681b      	ldr	r3, [r3, #0]
 80093ee:	2b00      	cmp	r3, #0
 80093f0:	d007      	beq.n	8009402 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 80093f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093f4:	681a      	ldr	r2, [r3, #0]
 80093f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80093f8:	681b      	ldr	r3, [r3, #0]
 80093fa:	681b      	ldr	r3, [r3, #0]
 80093fc:	681b      	ldr	r3, [r3, #0]
 80093fe:	4610      	mov	r0, r2
 8009400:	4798      	blx	r3
    if (*currentPresenter)
 8009402:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009404:	681b      	ldr	r3, [r3, #0]
 8009406:	2b00      	cmp	r3, #0
 8009408:	d008      	beq.n	800941c <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800940a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800940c:	681a      	ldr	r2, [r3, #0]
 800940e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009410:	681b      	ldr	r3, [r3, #0]
 8009412:	681b      	ldr	r3, [r3, #0]
 8009414:	3308      	adds	r3, #8
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	4610      	mov	r0, r2
 800941a:	4798      	blx	r3
}
 800941c:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 800941e:	687b      	ldr	r3, [r7, #4]
 8009420:	68db      	ldr	r3, [r3, #12]
 8009422:	2100      	movs	r1, #0
 8009424:	4618      	mov	r0, r3
 8009426:	f000 f997 	bl	8009758 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800942a:	4603      	mov	r3, r0
 800942c:	4619      	mov	r1, r3
 800942e:	200c      	movs	r0, #12
 8009430:	f7ff f8ee 	bl	8008610 <_ZnwjPv>
 8009434:	4604      	mov	r4, r0
 8009436:	4620      	mov	r0, r4
 8009438:	f7ff fd14 	bl	8008e64 <_ZN8touchgfx12NoTransitionC1Ev>
 800943c:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 800943e:	687b      	ldr	r3, [r7, #4]
 8009440:	689b      	ldr	r3, [r3, #8]
 8009442:	2100      	movs	r1, #0
 8009444:	4618      	mov	r0, r3
 8009446:	f000 fa02 	bl	800984e <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>
 800944a:	4603      	mov	r3, r0
 800944c:	4619      	mov	r1, r3
 800944e:	f44f 7009 	mov.w	r0, #548	@ 0x224
 8009452:	f7ff f8dd 	bl	8008610 <_ZnwjPv>
 8009456:	4604      	mov	r4, r0
 8009458:	4620      	mov	r0, r4
 800945a:	f004 fe69 	bl	800e130 <_ZN16light_screenViewC1Ev>
 800945e:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009460:	687b      	ldr	r3, [r7, #4]
 8009462:	685b      	ldr	r3, [r3, #4]
 8009464:	2100      	movs	r1, #0
 8009466:	4618      	mov	r0, r3
 8009468:	f000 fa04 	bl	8009874 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>
 800946c:	4603      	mov	r3, r0
 800946e:	4619      	mov	r1, r3
 8009470:	2010      	movs	r0, #16
 8009472:	f7ff f8cd 	bl	8008610 <_ZnwjPv>
 8009476:	4604      	mov	r4, r0
 8009478:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 800947a:	4620      	mov	r0, r4
 800947c:	f004 fde8 	bl	800e050 <_ZN21light_screenPresenterC1ER16light_screenView>
 8009480:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 8009482:	683b      	ldr	r3, [r7, #0]
 8009484:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 8009486:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 8009488:	68bb      	ldr	r3, [r7, #8]
 800948a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800948c:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 800948e:	68fb      	ldr	r3, [r7, #12]
 8009490:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8009492:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 8009494:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 8009496:	2b00      	cmp	r3, #0
 8009498:	d002      	beq.n	80094a0 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 800949a:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800949c:	3304      	adds	r3, #4
 800949e:	e000      	b.n	80094a2 <_ZN8touchgfx14makeTransitionI16light_screenView21light_screenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 80094a0:	2300      	movs	r3, #0
 80094a2:	4619      	mov	r1, r3
 80094a4:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80094a6:	f7ff fa8f 	bl	80089c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80094aa:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80094ac:	3304      	adds	r3, #4
 80094ae:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80094b0:	4618      	mov	r0, r3
 80094b2:	f7ff fafc 	bl	8008aae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 80094b6:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094b8:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80094ba:	4618      	mov	r0, r3
 80094bc:	f000 f9ed 	bl	800989a <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>
 80094c0:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80094c2:	61fb      	str	r3, [r7, #28]
 80094c4:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80094c6:	61bb      	str	r3, [r7, #24]
 80094c8:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80094ca:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 80094cc:	69fb      	ldr	r3, [r7, #28]
 80094ce:	681b      	ldr	r3, [r3, #0]
 80094d0:	330c      	adds	r3, #12
 80094d2:	681b      	ldr	r3, [r3, #0]
 80094d4:	69f8      	ldr	r0, [r7, #28]
 80094d6:	4798      	blx	r3
    newPresenter->activate();
 80094d8:	69bb      	ldr	r3, [r7, #24]
 80094da:	681b      	ldr	r3, [r3, #0]
 80094dc:	681b      	ldr	r3, [r3, #0]
 80094de:	69b8      	ldr	r0, [r7, #24]
 80094e0:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 80094e2:	6979      	ldr	r1, [r7, #20]
 80094e4:	69f8      	ldr	r0, [r7, #28]
 80094e6:	f00c fb6d 	bl	8015bc4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 80094ea:	697b      	ldr	r3, [r7, #20]
 80094ec:	681b      	ldr	r3, [r3, #0]
 80094ee:	3310      	adds	r3, #16
 80094f0:	681b      	ldr	r3, [r3, #0]
 80094f2:	6978      	ldr	r0, [r7, #20]
 80094f4:	4798      	blx	r3
    newTransition->invalidate();
 80094f6:	697b      	ldr	r3, [r7, #20]
 80094f8:	681b      	ldr	r3, [r3, #0]
 80094fa:	3314      	adds	r3, #20
 80094fc:	681b      	ldr	r3, [r3, #0]
 80094fe:	6978      	ldr	r0, [r7, #20]
 8009500:	4798      	blx	r3
}
 8009502:	bf00      	nop
    return newPresenter;
 8009504:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 8009506:	4618      	mov	r0, r3
 8009508:	373c      	adds	r7, #60	@ 0x3c
 800950a:	46bd      	mov	sp, r7
 800950c:	bd90      	pop	{r4, r7, pc}
 800950e:	bf00      	nop
 8009510:	08026eb0 	.word	0x08026eb0
 8009514:	08027298 	.word	0x08027298
 8009518:	08027024 	.word	0x08027024
 800951c:	08027068 	.word	0x08027068
 8009520:	0802710c 	.word	0x0802710c

08009524 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_>:
PresenterType* makeTransition(Screen** currentScreen, Presenter** currentPresenter, MVPHeap& heap, Transition** currentTrans, ModelType* model)
 8009524:	b590      	push	{r4, r7, lr}
 8009526:	b08f      	sub	sp, #60	@ 0x3c
 8009528:	af00      	add	r7, sp, #0
 800952a:	60f8      	str	r0, [r7, #12]
 800952c:	60b9      	str	r1, [r7, #8]
 800952e:	607a      	str	r2, [r7, #4]
 8009530:	603b      	str	r3, [r7, #0]
    assert(sizeof(ScreenType) <= heap.screenStorage.element_size() && "View allocation error: Check that all views are added to FrontendHeap::ViewTypes");
 8009532:	687b      	ldr	r3, [r7, #4]
 8009534:	689a      	ldr	r2, [r3, #8]
 8009536:	687b      	ldr	r3, [r7, #4]
 8009538:	689b      	ldr	r3, [r3, #8]
 800953a:	681b      	ldr	r3, [r3, #0]
 800953c:	3320      	adds	r3, #32
 800953e:	681b      	ldr	r3, [r3, #0]
 8009540:	4610      	mov	r0, r2
 8009542:	4798      	blx	r3
 8009544:	4603      	mov	r3, r0
 8009546:	f5b3 7f76 	cmp.w	r3, #984	@ 0x3d8
 800954a:	d205      	bcs.n	8009558 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x34>
 800954c:	4b7d      	ldr	r3, [pc, #500]	@ (8009744 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x220>)
 800954e:	4a7e      	ldr	r2, [pc, #504]	@ (8009748 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009550:	21a3      	movs	r1, #163	@ 0xa3
 8009552:	487e      	ldr	r0, [pc, #504]	@ (800974c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009554:	f01c fc7c 	bl	8025e50 <__assert_func>
    assert(sizeof(PresenterType) <= heap.presenterStorage.element_size() && "Presenter allocation error: Check that all presenters are added to FrontendHeap::PresenterTypes");
 8009558:	687b      	ldr	r3, [r7, #4]
 800955a:	685a      	ldr	r2, [r3, #4]
 800955c:	687b      	ldr	r3, [r7, #4]
 800955e:	685b      	ldr	r3, [r3, #4]
 8009560:	681b      	ldr	r3, [r3, #0]
 8009562:	3320      	adds	r3, #32
 8009564:	681b      	ldr	r3, [r3, #0]
 8009566:	4610      	mov	r0, r2
 8009568:	4798      	blx	r3
 800956a:	4603      	mov	r3, r0
 800956c:	2b0f      	cmp	r3, #15
 800956e:	d805      	bhi.n	800957c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x58>
 8009570:	4b77      	ldr	r3, [pc, #476]	@ (8009750 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x22c>)
 8009572:	4a75      	ldr	r2, [pc, #468]	@ (8009748 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009574:	21a4      	movs	r1, #164	@ 0xa4
 8009576:	4875      	ldr	r0, [pc, #468]	@ (800974c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 8009578:	f01c fc6a 	bl	8025e50 <__assert_func>
    assert(sizeof(TransType) <= heap.transitionStorage.element_size() && "Transition allocation error: Check that all transitions are added to FrontendHeap::TransitionTypes");
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	68da      	ldr	r2, [r3, #12]
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	68db      	ldr	r3, [r3, #12]
 8009584:	681b      	ldr	r3, [r3, #0]
 8009586:	3320      	adds	r3, #32
 8009588:	681b      	ldr	r3, [r3, #0]
 800958a:	4610      	mov	r0, r2
 800958c:	4798      	blx	r3
 800958e:	4603      	mov	r3, r0
 8009590:	2b0b      	cmp	r3, #11
 8009592:	d805      	bhi.n	80095a0 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x7c>
 8009594:	4b6f      	ldr	r3, [pc, #444]	@ (8009754 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x230>)
 8009596:	4a6c      	ldr	r2, [pc, #432]	@ (8009748 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x224>)
 8009598:	21a5      	movs	r1, #165	@ 0xa5
 800959a:	486c      	ldr	r0, [pc, #432]	@ (800974c <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x228>)
 800959c:	f01c fc58 	bl	8025e50 <__assert_func>
 80095a0:	68fb      	ldr	r3, [r7, #12]
 80095a2:	62bb      	str	r3, [r7, #40]	@ 0x28
 80095a4:	68bb      	ldr	r3, [r7, #8]
 80095a6:	627b      	str	r3, [r7, #36]	@ 0x24
 80095a8:	683b      	ldr	r3, [r7, #0]
 80095aa:	623b      	str	r3, [r7, #32]
    Application::getInstance()->clearAllTimerWidgets();
 80095ac:	f00a fe48 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 80095b0:	4603      	mov	r3, r0
 80095b2:	4618      	mov	r0, r3
 80095b4:	f7ff f8c2 	bl	800873c <_ZN8touchgfx11Application20clearAllTimerWidgetsEv>
    if (*currentTrans)
 80095b8:	6a3b      	ldr	r3, [r7, #32]
 80095ba:	681b      	ldr	r3, [r3, #0]
 80095bc:	2b00      	cmp	r3, #0
 80095be:	d008      	beq.n	80095d2 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xae>
        (*currentTrans)->tearDown();
 80095c0:	6a3b      	ldr	r3, [r7, #32]
 80095c2:	681a      	ldr	r2, [r3, #0]
 80095c4:	6a3b      	ldr	r3, [r7, #32]
 80095c6:	681b      	ldr	r3, [r3, #0]
 80095c8:	681b      	ldr	r3, [r3, #0]
 80095ca:	330c      	adds	r3, #12
 80095cc:	681b      	ldr	r3, [r3, #0]
 80095ce:	4610      	mov	r0, r2
 80095d0:	4798      	blx	r3
    if (*currentTrans)
 80095d2:	6a3b      	ldr	r3, [r7, #32]
 80095d4:	681b      	ldr	r3, [r3, #0]
 80095d6:	2b00      	cmp	r3, #0
 80095d8:	d007      	beq.n	80095ea <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xc6>
        (*currentTrans)->~Transition();
 80095da:	6a3b      	ldr	r3, [r7, #32]
 80095dc:	681a      	ldr	r2, [r3, #0]
 80095de:	6a3b      	ldr	r3, [r7, #32]
 80095e0:	681b      	ldr	r3, [r3, #0]
 80095e2:	681b      	ldr	r3, [r3, #0]
 80095e4:	681b      	ldr	r3, [r3, #0]
 80095e6:	4610      	mov	r0, r2
 80095e8:	4798      	blx	r3
    if (*currentScreen)
 80095ea:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80095ec:	681b      	ldr	r3, [r3, #0]
 80095ee:	2b00      	cmp	r3, #0
 80095f0:	d008      	beq.n	8009604 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xe0>
        (*currentScreen)->tearDownScreen();
 80095f2:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80095f4:	681a      	ldr	r2, [r3, #0]
 80095f6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 80095f8:	681b      	ldr	r3, [r3, #0]
 80095fa:	681b      	ldr	r3, [r3, #0]
 80095fc:	3314      	adds	r3, #20
 80095fe:	681b      	ldr	r3, [r3, #0]
 8009600:	4610      	mov	r0, r2
 8009602:	4798      	blx	r3
    if (*currentPresenter)
 8009604:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009606:	681b      	ldr	r3, [r3, #0]
 8009608:	2b00      	cmp	r3, #0
 800960a:	d008      	beq.n	800961e <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0xfa>
        (*currentPresenter)->deactivate();
 800960c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800960e:	681a      	ldr	r2, [r3, #0]
 8009610:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009612:	681b      	ldr	r3, [r3, #0]
 8009614:	681b      	ldr	r3, [r3, #0]
 8009616:	3304      	adds	r3, #4
 8009618:	681b      	ldr	r3, [r3, #0]
 800961a:	4610      	mov	r0, r2
 800961c:	4798      	blx	r3
    if (*currentScreen)
 800961e:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009620:	681b      	ldr	r3, [r3, #0]
 8009622:	2b00      	cmp	r3, #0
 8009624:	d007      	beq.n	8009636 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x112>
        (*currentScreen)->~Screen();
 8009626:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8009628:	681a      	ldr	r2, [r3, #0]
 800962a:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800962c:	681b      	ldr	r3, [r3, #0]
 800962e:	681b      	ldr	r3, [r3, #0]
 8009630:	681b      	ldr	r3, [r3, #0]
 8009632:	4610      	mov	r0, r2
 8009634:	4798      	blx	r3
    if (*currentPresenter)
 8009636:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009638:	681b      	ldr	r3, [r3, #0]
 800963a:	2b00      	cmp	r3, #0
 800963c:	d008      	beq.n	8009650 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x12c>
        (*currentPresenter)->~Presenter();
 800963e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009640:	681a      	ldr	r2, [r3, #0]
 8009642:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8009644:	681b      	ldr	r3, [r3, #0]
 8009646:	681b      	ldr	r3, [r3, #0]
 8009648:	3308      	adds	r3, #8
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	4610      	mov	r0, r2
 800964e:	4798      	blx	r3
}
 8009650:	bf00      	nop
    TransType* newTransition = new (&heap.transitionStorage.at<TransType>(0)) TransType;
 8009652:	687b      	ldr	r3, [r7, #4]
 8009654:	68db      	ldr	r3, [r3, #12]
 8009656:	2100      	movs	r1, #0
 8009658:	4618      	mov	r0, r3
 800965a:	f000 f87d 	bl	8009758 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>
 800965e:	4603      	mov	r3, r0
 8009660:	4619      	mov	r1, r3
 8009662:	200c      	movs	r0, #12
 8009664:	f7fe ffd4 	bl	8008610 <_ZnwjPv>
 8009668:	4604      	mov	r4, r0
 800966a:	4620      	mov	r0, r4
 800966c:	f7ff fbfa 	bl	8008e64 <_ZN8touchgfx12NoTransitionC1Ev>
 8009670:	637c      	str	r4, [r7, #52]	@ 0x34
    ScreenType* newScreen = new (&heap.screenStorage.at<ScreenType>(0)) ScreenType;
 8009672:	687b      	ldr	r3, [r7, #4]
 8009674:	689b      	ldr	r3, [r3, #8]
 8009676:	2100      	movs	r1, #0
 8009678:	4618      	mov	r0, r3
 800967a:	f000 f91c 	bl	80098b6 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>
 800967e:	4603      	mov	r3, r0
 8009680:	4619      	mov	r1, r3
 8009682:	f44f 7076 	mov.w	r0, #984	@ 0x3d8
 8009686:	f7fe ffc3 	bl	8008610 <_ZnwjPv>
 800968a:	4604      	mov	r4, r0
 800968c:	4620      	mov	r0, r4
 800968e:	f004 fe93 	bl	800e3b8 <_ZN8MainViewC1Ev>
 8009692:	633c      	str	r4, [r7, #48]	@ 0x30
    PresenterType* newPresenter = new (&heap.presenterStorage.at<PresenterType>(0)) PresenterType(*newScreen);
 8009694:	687b      	ldr	r3, [r7, #4]
 8009696:	685b      	ldr	r3, [r3, #4]
 8009698:	2100      	movs	r1, #0
 800969a:	4618      	mov	r0, r3
 800969c:	f000 f91e 	bl	80098dc <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>
 80096a0:	4603      	mov	r3, r0
 80096a2:	4619      	mov	r1, r3
 80096a4:	2010      	movs	r0, #16
 80096a6:	f7fe ffb3 	bl	8008610 <_ZnwjPv>
 80096aa:	4604      	mov	r4, r0
 80096ac:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 80096ae:	4620      	mov	r0, r4
 80096b0:	f004 fde0 	bl	800e274 <_ZN13MainPresenterC1ER8MainView>
 80096b4:	62fc      	str	r4, [r7, #44]	@ 0x2c
    *currentTrans = newTransition;
 80096b6:	683b      	ldr	r3, [r7, #0]
 80096b8:	6b7a      	ldr	r2, [r7, #52]	@ 0x34
 80096ba:	601a      	str	r2, [r3, #0]
    *currentPresenter = newPresenter;
 80096bc:	68bb      	ldr	r3, [r7, #8]
 80096be:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 80096c0:	601a      	str	r2, [r3, #0]
    *currentScreen = newScreen;
 80096c2:	68fb      	ldr	r3, [r7, #12]
 80096c4:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 80096c6:	601a      	str	r2, [r3, #0]
    model->bind(newPresenter);
 80096c8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d002      	beq.n	80096d4 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b0>
 80096ce:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80096d0:	3304      	adds	r3, #4
 80096d2:	e000      	b.n	80096d6 <_ZN8touchgfx14makeTransitionI8MainView13MainPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_+0x1b2>
 80096d4:	2300      	movs	r3, #0
 80096d6:	4619      	mov	r1, r3
 80096d8:	6cb8      	ldr	r0, [r7, #72]	@ 0x48
 80096da:	f7ff f975 	bl	80089c8 <_ZN5Model4bindEP13ModelListener>
    newPresenter->bind(model);
 80096de:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80096e0:	3304      	adds	r3, #4
 80096e2:	6cb9      	ldr	r1, [r7, #72]	@ 0x48
 80096e4:	4618      	mov	r0, r3
 80096e6:	f7ff f9e2 	bl	8008aae <_ZN13ModelListener4bindEP5Model>
    newScreen->bind(*newPresenter);
 80096ea:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80096ec:	6af9      	ldr	r1, [r7, #44]	@ 0x2c
 80096ee:	4618      	mov	r0, r3
 80096f0:	f000 f907 	bl	8009902 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>
 80096f4:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 80096f6:	61fb      	str	r3, [r7, #28]
 80096f8:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 80096fa:	61bb      	str	r3, [r7, #24]
 80096fc:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 80096fe:	617b      	str	r3, [r7, #20]
    newScreen->setupScreen();
 8009700:	69fb      	ldr	r3, [r7, #28]
 8009702:	681b      	ldr	r3, [r3, #0]
 8009704:	330c      	adds	r3, #12
 8009706:	681b      	ldr	r3, [r3, #0]
 8009708:	69f8      	ldr	r0, [r7, #28]
 800970a:	4798      	blx	r3
    newPresenter->activate();
 800970c:	69bb      	ldr	r3, [r7, #24]
 800970e:	681b      	ldr	r3, [r3, #0]
 8009710:	681b      	ldr	r3, [r3, #0]
 8009712:	69b8      	ldr	r0, [r7, #24]
 8009714:	4798      	blx	r3
    newScreen->bindTransition(*newTransition);
 8009716:	6979      	ldr	r1, [r7, #20]
 8009718:	69f8      	ldr	r0, [r7, #28]
 800971a:	f00c fa53 	bl	8015bc4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>
    newTransition->init();
 800971e:	697b      	ldr	r3, [r7, #20]
 8009720:	681b      	ldr	r3, [r3, #0]
 8009722:	3310      	adds	r3, #16
 8009724:	681b      	ldr	r3, [r3, #0]
 8009726:	6978      	ldr	r0, [r7, #20]
 8009728:	4798      	blx	r3
    newTransition->invalidate();
 800972a:	697b      	ldr	r3, [r7, #20]
 800972c:	681b      	ldr	r3, [r3, #0]
 800972e:	3314      	adds	r3, #20
 8009730:	681b      	ldr	r3, [r3, #0]
 8009732:	6978      	ldr	r0, [r7, #20]
 8009734:	4798      	blx	r3
}
 8009736:	bf00      	nop
    return newPresenter;
 8009738:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
}
 800973a:	4618      	mov	r0, r3
 800973c:	373c      	adds	r7, #60	@ 0x3c
 800973e:	46bd      	mov	sp, r7
 8009740:	bd90      	pop	{r4, r7, pc}
 8009742:	bf00      	nop
 8009744:	08026eb0 	.word	0x08026eb0
 8009748:	08027374 	.word	0x08027374
 800974c:	08027024 	.word	0x08027024
 8009750:	08027068 	.word	0x08027068
 8009754:	0802710c 	.word	0x0802710c

08009758 <_ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t>:
     * @param  index The index into the Partition storage where the returned object is located.
     *
     * @return A typed reference to the object at the specified index.
     */
    template <typename T>
    T& at(const uint16_t index)
 8009758:	b580      	push	{r7, lr}
 800975a:	b082      	sub	sp, #8
 800975c:	af00      	add	r7, sp, #0
 800975e:	6078      	str	r0, [r7, #4]
 8009760:	460b      	mov	r3, r1
 8009762:	807b      	strh	r3, [r7, #2]
    {
        return *static_cast<T*>(element(index));
 8009764:	687b      	ldr	r3, [r7, #4]
 8009766:	681b      	ldr	r3, [r3, #0]
 8009768:	3324      	adds	r3, #36	@ 0x24
 800976a:	681b      	ldr	r3, [r3, #0]
 800976c:	887a      	ldrh	r2, [r7, #2]
 800976e:	4611      	mov	r1, r2
 8009770:	6878      	ldr	r0, [r7, #4]
 8009772:	4798      	blx	r3
 8009774:	4603      	mov	r3, r0
    }
 8009776:	4618      	mov	r0, r3
 8009778:	3708      	adds	r7, #8
 800977a:	46bd      	mov	sp, r7
 800977c:	bd80      	pop	{r7, pc}

0800977e <_ZN8touchgfx17AbstractPartition2atI19humidity_screenViewEERT_t>:
    T& at(const uint16_t index)
 800977e:	b580      	push	{r7, lr}
 8009780:	b082      	sub	sp, #8
 8009782:	af00      	add	r7, sp, #0
 8009784:	6078      	str	r0, [r7, #4]
 8009786:	460b      	mov	r3, r1
 8009788:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800978a:	687b      	ldr	r3, [r7, #4]
 800978c:	681b      	ldr	r3, [r3, #0]
 800978e:	3324      	adds	r3, #36	@ 0x24
 8009790:	681b      	ldr	r3, [r3, #0]
 8009792:	887a      	ldrh	r2, [r7, #2]
 8009794:	4611      	mov	r1, r2
 8009796:	6878      	ldr	r0, [r7, #4]
 8009798:	4798      	blx	r3
 800979a:	4603      	mov	r3, r0
    }
 800979c:	4618      	mov	r0, r3
 800979e:	3708      	adds	r7, #8
 80097a0:	46bd      	mov	sp, r7
 80097a2:	bd80      	pop	{r7, pc}

080097a4 <_ZN8touchgfx17AbstractPartition2atI24humidity_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 80097a4:	b580      	push	{r7, lr}
 80097a6:	b082      	sub	sp, #8
 80097a8:	af00      	add	r7, sp, #0
 80097aa:	6078      	str	r0, [r7, #4]
 80097ac:	460b      	mov	r3, r1
 80097ae:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80097b0:	687b      	ldr	r3, [r7, #4]
 80097b2:	681b      	ldr	r3, [r3, #0]
 80097b4:	3324      	adds	r3, #36	@ 0x24
 80097b6:	681b      	ldr	r3, [r3, #0]
 80097b8:	887a      	ldrh	r2, [r7, #2]
 80097ba:	4611      	mov	r1, r2
 80097bc:	6878      	ldr	r0, [r7, #4]
 80097be:	4798      	blx	r3
 80097c0:	4603      	mov	r3, r0
    }
 80097c2:	4618      	mov	r0, r3
 80097c4:	3708      	adds	r7, #8
 80097c6:	46bd      	mov	sp, r7
 80097c8:	bd80      	pop	{r7, pc}

080097ca <_ZN8touchgfx4ViewI24humidity_screenPresenterE4bindERS1_>:
     * Binds an instance of a specific Presenter type (subclass) to the View instance. This function
     * is called automatically when a new presenter/view pair is activated.
     *
     * @param [in] newPresenter The specific Presenter to be associated with the View.
     */
    void bind(T& newPresenter)
 80097ca:	b480      	push	{r7}
 80097cc:	b083      	sub	sp, #12
 80097ce:	af00      	add	r7, sp, #0
 80097d0:	6078      	str	r0, [r7, #4]
 80097d2:	6039      	str	r1, [r7, #0]
    {
        presenter = &newPresenter;
 80097d4:	687b      	ldr	r3, [r7, #4]
 80097d6:	683a      	ldr	r2, [r7, #0]
 80097d8:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80097da:	bf00      	nop
 80097dc:	370c      	adds	r7, #12
 80097de:	46bd      	mov	sp, r7
 80097e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80097e4:	4770      	bx	lr

080097e6 <_ZN8touchgfx17AbstractPartition2atI22temperature_screenViewEERT_t>:
    T& at(const uint16_t index)
 80097e6:	b580      	push	{r7, lr}
 80097e8:	b082      	sub	sp, #8
 80097ea:	af00      	add	r7, sp, #0
 80097ec:	6078      	str	r0, [r7, #4]
 80097ee:	460b      	mov	r3, r1
 80097f0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80097f2:	687b      	ldr	r3, [r7, #4]
 80097f4:	681b      	ldr	r3, [r3, #0]
 80097f6:	3324      	adds	r3, #36	@ 0x24
 80097f8:	681b      	ldr	r3, [r3, #0]
 80097fa:	887a      	ldrh	r2, [r7, #2]
 80097fc:	4611      	mov	r1, r2
 80097fe:	6878      	ldr	r0, [r7, #4]
 8009800:	4798      	blx	r3
 8009802:	4603      	mov	r3, r0
    }
 8009804:	4618      	mov	r0, r3
 8009806:	3708      	adds	r7, #8
 8009808:	46bd      	mov	sp, r7
 800980a:	bd80      	pop	{r7, pc}

0800980c <_ZN8touchgfx17AbstractPartition2atI27temperature_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 800980c:	b580      	push	{r7, lr}
 800980e:	b082      	sub	sp, #8
 8009810:	af00      	add	r7, sp, #0
 8009812:	6078      	str	r0, [r7, #4]
 8009814:	460b      	mov	r3, r1
 8009816:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009818:	687b      	ldr	r3, [r7, #4]
 800981a:	681b      	ldr	r3, [r3, #0]
 800981c:	3324      	adds	r3, #36	@ 0x24
 800981e:	681b      	ldr	r3, [r3, #0]
 8009820:	887a      	ldrh	r2, [r7, #2]
 8009822:	4611      	mov	r1, r2
 8009824:	6878      	ldr	r0, [r7, #4]
 8009826:	4798      	blx	r3
 8009828:	4603      	mov	r3, r0
    }
 800982a:	4618      	mov	r0, r3
 800982c:	3708      	adds	r7, #8
 800982e:	46bd      	mov	sp, r7
 8009830:	bd80      	pop	{r7, pc}

08009832 <_ZN8touchgfx4ViewI27temperature_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009832:	b480      	push	{r7}
 8009834:	b083      	sub	sp, #12
 8009836:	af00      	add	r7, sp, #0
 8009838:	6078      	str	r0, [r7, #4]
 800983a:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800983c:	687b      	ldr	r3, [r7, #4]
 800983e:	683a      	ldr	r2, [r7, #0]
 8009840:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009842:	bf00      	nop
 8009844:	370c      	adds	r7, #12
 8009846:	46bd      	mov	sp, r7
 8009848:	f85d 7b04 	ldr.w	r7, [sp], #4
 800984c:	4770      	bx	lr

0800984e <_ZN8touchgfx17AbstractPartition2atI16light_screenViewEERT_t>:
    T& at(const uint16_t index)
 800984e:	b580      	push	{r7, lr}
 8009850:	b082      	sub	sp, #8
 8009852:	af00      	add	r7, sp, #0
 8009854:	6078      	str	r0, [r7, #4]
 8009856:	460b      	mov	r3, r1
 8009858:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 800985a:	687b      	ldr	r3, [r7, #4]
 800985c:	681b      	ldr	r3, [r3, #0]
 800985e:	3324      	adds	r3, #36	@ 0x24
 8009860:	681b      	ldr	r3, [r3, #0]
 8009862:	887a      	ldrh	r2, [r7, #2]
 8009864:	4611      	mov	r1, r2
 8009866:	6878      	ldr	r0, [r7, #4]
 8009868:	4798      	blx	r3
 800986a:	4603      	mov	r3, r0
    }
 800986c:	4618      	mov	r0, r3
 800986e:	3708      	adds	r7, #8
 8009870:	46bd      	mov	sp, r7
 8009872:	bd80      	pop	{r7, pc}

08009874 <_ZN8touchgfx17AbstractPartition2atI21light_screenPresenterEERT_t>:
    T& at(const uint16_t index)
 8009874:	b580      	push	{r7, lr}
 8009876:	b082      	sub	sp, #8
 8009878:	af00      	add	r7, sp, #0
 800987a:	6078      	str	r0, [r7, #4]
 800987c:	460b      	mov	r3, r1
 800987e:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 8009880:	687b      	ldr	r3, [r7, #4]
 8009882:	681b      	ldr	r3, [r3, #0]
 8009884:	3324      	adds	r3, #36	@ 0x24
 8009886:	681b      	ldr	r3, [r3, #0]
 8009888:	887a      	ldrh	r2, [r7, #2]
 800988a:	4611      	mov	r1, r2
 800988c:	6878      	ldr	r0, [r7, #4]
 800988e:	4798      	blx	r3
 8009890:	4603      	mov	r3, r0
    }
 8009892:	4618      	mov	r0, r3
 8009894:	3708      	adds	r7, #8
 8009896:	46bd      	mov	sp, r7
 8009898:	bd80      	pop	{r7, pc}

0800989a <_ZN8touchgfx4ViewI21light_screenPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 800989a:	b480      	push	{r7}
 800989c:	b083      	sub	sp, #12
 800989e:	af00      	add	r7, sp, #0
 80098a0:	6078      	str	r0, [r7, #4]
 80098a2:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 80098a4:	687b      	ldr	r3, [r7, #4]
 80098a6:	683a      	ldr	r2, [r7, #0]
 80098a8:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 80098aa:	bf00      	nop
 80098ac:	370c      	adds	r7, #12
 80098ae:	46bd      	mov	sp, r7
 80098b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80098b4:	4770      	bx	lr

080098b6 <_ZN8touchgfx17AbstractPartition2atI8MainViewEERT_t>:
    T& at(const uint16_t index)
 80098b6:	b580      	push	{r7, lr}
 80098b8:	b082      	sub	sp, #8
 80098ba:	af00      	add	r7, sp, #0
 80098bc:	6078      	str	r0, [r7, #4]
 80098be:	460b      	mov	r3, r1
 80098c0:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80098c2:	687b      	ldr	r3, [r7, #4]
 80098c4:	681b      	ldr	r3, [r3, #0]
 80098c6:	3324      	adds	r3, #36	@ 0x24
 80098c8:	681b      	ldr	r3, [r3, #0]
 80098ca:	887a      	ldrh	r2, [r7, #2]
 80098cc:	4611      	mov	r1, r2
 80098ce:	6878      	ldr	r0, [r7, #4]
 80098d0:	4798      	blx	r3
 80098d2:	4603      	mov	r3, r0
    }
 80098d4:	4618      	mov	r0, r3
 80098d6:	3708      	adds	r7, #8
 80098d8:	46bd      	mov	sp, r7
 80098da:	bd80      	pop	{r7, pc}

080098dc <_ZN8touchgfx17AbstractPartition2atI13MainPresenterEERT_t>:
    T& at(const uint16_t index)
 80098dc:	b580      	push	{r7, lr}
 80098de:	b082      	sub	sp, #8
 80098e0:	af00      	add	r7, sp, #0
 80098e2:	6078      	str	r0, [r7, #4]
 80098e4:	460b      	mov	r3, r1
 80098e6:	807b      	strh	r3, [r7, #2]
        return *static_cast<T*>(element(index));
 80098e8:	687b      	ldr	r3, [r7, #4]
 80098ea:	681b      	ldr	r3, [r3, #0]
 80098ec:	3324      	adds	r3, #36	@ 0x24
 80098ee:	681b      	ldr	r3, [r3, #0]
 80098f0:	887a      	ldrh	r2, [r7, #2]
 80098f2:	4611      	mov	r1, r2
 80098f4:	6878      	ldr	r0, [r7, #4]
 80098f6:	4798      	blx	r3
 80098f8:	4603      	mov	r3, r0
    }
 80098fa:	4618      	mov	r0, r3
 80098fc:	3708      	adds	r7, #8
 80098fe:	46bd      	mov	sp, r7
 8009900:	bd80      	pop	{r7, pc}

08009902 <_ZN8touchgfx4ViewI13MainPresenterE4bindERS1_>:
    void bind(T& newPresenter)
 8009902:	b480      	push	{r7}
 8009904:	b083      	sub	sp, #12
 8009906:	af00      	add	r7, sp, #0
 8009908:	6078      	str	r0, [r7, #4]
 800990a:	6039      	str	r1, [r7, #0]
        presenter = &newPresenter;
 800990c:	687b      	ldr	r3, [r7, #4]
 800990e:	683a      	ldr	r2, [r7, #0]
 8009910:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 8009912:	bf00      	nop
 8009914:	370c      	adds	r7, #12
 8009916:	46bd      	mov	sp, r7
 8009918:	f85d 7b04 	ldr.w	r7, [sp], #4
 800991c:	4770      	bx	lr
	...

08009920 <_ZN8touchgfx12NoTransitionD1Ev>:
 8009920:	b580      	push	{r7, lr}
 8009922:	b082      	sub	sp, #8
 8009924:	af00      	add	r7, sp, #0
 8009926:	6078      	str	r0, [r7, #4]
 8009928:	4a05      	ldr	r2, [pc, #20]	@ (8009940 <_ZN8touchgfx12NoTransitionD1Ev+0x20>)
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	601a      	str	r2, [r3, #0]
 800992e:	687b      	ldr	r3, [r7, #4]
 8009930:	4618      	mov	r0, r3
 8009932:	f7fe ff6f 	bl	8008814 <_ZN8touchgfx10TransitionD1Ev>
 8009936:	687b      	ldr	r3, [r7, #4]
 8009938:	4618      	mov	r0, r3
 800993a:	3708      	adds	r7, #8
 800993c:	46bd      	mov	sp, r7
 800993e:	bd80      	pop	{r7, pc}
 8009940:	08028280 	.word	0x08028280

08009944 <_ZN8touchgfx12NoTransitionD0Ev>:
 8009944:	b580      	push	{r7, lr}
 8009946:	b082      	sub	sp, #8
 8009948:	af00      	add	r7, sp, #0
 800994a:	6078      	str	r0, [r7, #4]
 800994c:	6878      	ldr	r0, [r7, #4]
 800994e:	f7ff ffe7 	bl	8009920 <_ZN8touchgfx12NoTransitionD1Ev>
 8009952:	210c      	movs	r1, #12
 8009954:	6878      	ldr	r0, [r7, #4]
 8009956:	f01c f9cc 	bl	8025cf2 <_ZdlPvj>
 800995a:	687b      	ldr	r3, [r7, #4]
 800995c:	4618      	mov	r0, r3
 800995e:	3708      	adds	r7, #8
 8009960:	46bd      	mov	sp, r7
 8009962:	bd80      	pop	{r7, pc}

08009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>:
struct Callback<dest_type, void, void, void> : public GenericCallback<>
 8009964:	b580      	push	{r7, lr}
 8009966:	b082      	sub	sp, #8
 8009968:	af00      	add	r7, sp, #0
 800996a:	6078      	str	r0, [r7, #4]
 800996c:	4a05      	ldr	r2, [pc, #20]	@ (8009984 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev+0x20>)
 800996e:	687b      	ldr	r3, [r7, #4]
 8009970:	601a      	str	r2, [r3, #0]
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	4618      	mov	r0, r3
 8009976:	f7fe feef 	bl	8008758 <_ZN8touchgfx15GenericCallbackIvvvED1Ev>
 800997a:	687b      	ldr	r3, [r7, #4]
 800997c:	4618      	mov	r0, r3
 800997e:	3708      	adds	r7, #8
 8009980:	46bd      	mov	sp, r7
 8009982:	bd80      	pop	{r7, pc}
 8009984:	080282f8 	.word	0x080282f8

08009988 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED0Ev>:
 8009988:	b580      	push	{r7, lr}
 800998a:	b082      	sub	sp, #8
 800998c:	af00      	add	r7, sp, #0
 800998e:	6078      	str	r0, [r7, #4]
 8009990:	6878      	ldr	r0, [r7, #4]
 8009992:	f7ff ffe7 	bl	8009964 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvED1Ev>
 8009996:	2110      	movs	r1, #16
 8009998:	6878      	ldr	r0, [r7, #4]
 800999a:	f01c f9aa 	bl	8025cf2 <_ZdlPvj>
 800999e:	687b      	ldr	r3, [r7, #4]
 80099a0:	4618      	mov	r0, r3
 80099a2:	3708      	adds	r7, #8
 80099a4:	46bd      	mov	sp, r7
 80099a6:	bd80      	pop	{r7, pc}

080099a8 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv>:

    /**
     * Calls the member function. Do not call execute unless isValid() returns true (ie. a
     * pointer to the object and the function has been set).
     */
    virtual void execute()
 80099a8:	b580      	push	{r7, lr}
 80099aa:	b082      	sub	sp, #8
 80099ac:	af00      	add	r7, sp, #0
 80099ae:	6078      	str	r0, [r7, #4]
    {
        (pobject->*pmemfun)();
 80099b0:	687b      	ldr	r3, [r7, #4]
 80099b2:	685b      	ldr	r3, [r3, #4]
 80099b4:	687a      	ldr	r2, [r7, #4]
 80099b6:	68d2      	ldr	r2, [r2, #12]
 80099b8:	1052      	asrs	r2, r2, #1
 80099ba:	1899      	adds	r1, r3, r2
 80099bc:	687b      	ldr	r3, [r7, #4]
 80099be:	68db      	ldr	r3, [r3, #12]
 80099c0:	f003 0301 	and.w	r3, r3, #1
 80099c4:	2b00      	cmp	r3, #0
 80099c6:	d102      	bne.n	80099ce <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x26>
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	689b      	ldr	r3, [r3, #8]
 80099cc:	e00a      	b.n	80099e4 <_ZN8touchgfx8CallbackI23FrontendApplicationBasevvvE7executeEv+0x3c>
 80099ce:	687b      	ldr	r3, [r7, #4]
 80099d0:	685b      	ldr	r3, [r3, #4]
 80099d2:	687a      	ldr	r2, [r7, #4]
 80099d4:	68d2      	ldr	r2, [r2, #12]
 80099d6:	1052      	asrs	r2, r2, #1
 80099d8:	4413      	add	r3, r2
 80099da:	681b      	ldr	r3, [r3, #0]
 80099dc:	687a      	ldr	r2, [r7, #4]
 80099de:	6892      	ldr	r2, [r2, #8]
 80099e0:	4413      	add	r3, r2
 80099e2:	681b      	ldr	r3, [r3, #0]
 80099e4:	4608      	mov	r0, r1
 80099e6:	4798      	blx	r3
    }
 80099e8:	bf00      	nop
 80099ea:	3708      	adds	r7, #8
 80099ec:	46bd      	mov	sp, r7
 80099ee:	bd80      	pop	{r7, pc}

080099f0 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv>:
    /**
     * Function to check whether the Callback has been initialized with values.
     *
     * @return true If the callback is valid (i.e. safe to call execute).
     */
    virtual bool isValid() const
 80099f0:	b480      	push	{r7}
 80099f2:	b083      	sub	sp, #12
 80099f4:	af00      	add	r7, sp, #0
 80099f6:	6078      	str	r0, [r7, #4]
    {
        return (pobject != 0) && (pmemfun != 0);
 80099f8:	687b      	ldr	r3, [r7, #4]
 80099fa:	685b      	ldr	r3, [r3, #4]
 80099fc:	2b00      	cmp	r3, #0
 80099fe:	d010      	beq.n	8009a22 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	689b      	ldr	r3, [r3, #8]
 8009a04:	2b00      	cmp	r3, #0
 8009a06:	d107      	bne.n	8009a18 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009a08:	687b      	ldr	r3, [r7, #4]
 8009a0a:	68db      	ldr	r3, [r3, #12]
 8009a0c:	f003 0301 	and.w	r3, r3, #1
 8009a10:	2b00      	cmp	r3, #0
 8009a12:	d101      	bne.n	8009a18 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x28>
 8009a14:	2301      	movs	r3, #1
 8009a16:	e000      	b.n	8009a1a <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x2a>
 8009a18:	2300      	movs	r3, #0
 8009a1a:	2b01      	cmp	r3, #1
 8009a1c:	d001      	beq.n	8009a22 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x32>
 8009a1e:	2301      	movs	r3, #1
 8009a20:	e000      	b.n	8009a24 <_ZNK8touchgfx8CallbackI23FrontendApplicationBasevvvE7isValidEv+0x34>
 8009a22:	2300      	movs	r3, #0
    }
 8009a24:	4618      	mov	r0, r3
 8009a26:	370c      	adds	r7, #12
 8009a28:	46bd      	mov	sp, r7
 8009a2a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a2e:	4770      	bx	lr

08009a30 <_ZN8touchgfx9colortypeC1Ev>:
 * extract a 24/32-bit color from this type, use the getColor32 function.
 */
struct colortype
{
    /** Default constructor. Creates a black (0) color. */
    colortype()
 8009a30:	b480      	push	{r7}
 8009a32:	b083      	sub	sp, #12
 8009a34:	af00      	add	r7, sp, #0
 8009a36:	6078      	str	r0, [r7, #4]
        : color(0)
 8009a38:	687b      	ldr	r3, [r7, #4]
 8009a3a:	2200      	movs	r2, #0
 8009a3c:	601a      	str	r2, [r3, #0]
    {
    }
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	4618      	mov	r0, r3
 8009a42:	370c      	adds	r7, #12
 8009a44:	46bd      	mov	sp, r7
 8009a46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a4a:	4770      	bx	lr

08009a4c <_ZN8touchgfx9colortypeC1Em>:
     *
     * @param  col The color.
     *
     * @see Color::getColorFromRGB
     */
    colortype(uint32_t col)
 8009a4c:	b480      	push	{r7}
 8009a4e:	b083      	sub	sp, #12
 8009a50:	af00      	add	r7, sp, #0
 8009a52:	6078      	str	r0, [r7, #4]
 8009a54:	6039      	str	r1, [r7, #0]
        : color(col)
 8009a56:	687b      	ldr	r3, [r7, #4]
 8009a58:	683a      	ldr	r2, [r7, #0]
 8009a5a:	601a      	str	r2, [r3, #0]
    {
    }
 8009a5c:	687b      	ldr	r3, [r7, #4]
 8009a5e:	4618      	mov	r0, r3
 8009a60:	370c      	adds	r7, #12
 8009a62:	46bd      	mov	sp, r7
 8009a64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a68:	4770      	bx	lr

08009a6a <_ZN8touchgfx4RectC1Ev>:
/** Class representing a Rectangle with a few convenient methods. */
class Rect
{
public:
    /** Default constructor. Resulting in an empty Rect with coordinates 0,0. */
    Rect()
 8009a6a:	b480      	push	{r7}
 8009a6c:	b083      	sub	sp, #12
 8009a6e:	af00      	add	r7, sp, #0
 8009a70:	6078      	str	r0, [r7, #4]
        : x(0), y(0), width(0), height(0)
 8009a72:	687b      	ldr	r3, [r7, #4]
 8009a74:	2200      	movs	r2, #0
 8009a76:	801a      	strh	r2, [r3, #0]
 8009a78:	687b      	ldr	r3, [r7, #4]
 8009a7a:	2200      	movs	r2, #0
 8009a7c:	805a      	strh	r2, [r3, #2]
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	2200      	movs	r2, #0
 8009a82:	809a      	strh	r2, [r3, #4]
 8009a84:	687b      	ldr	r3, [r7, #4]
 8009a86:	2200      	movs	r2, #0
 8009a88:	80da      	strh	r2, [r3, #6]
    {
    }
 8009a8a:	687b      	ldr	r3, [r7, #4]
 8009a8c:	4618      	mov	r0, r3
 8009a8e:	370c      	adds	r7, #12
 8009a90:	46bd      	mov	sp, r7
 8009a92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009a96:	4770      	bx	lr

08009a98 <_ZN8touchgfx4RectC1Essss>:
     * @param  rectX      The x coordinate.
     * @param  rectY      The y coordinate.
     * @param  rectWidth  The width.
     * @param  rectHeight The height.
     */
    Rect(int16_t rectX, int16_t rectY, int16_t rectWidth, int16_t rectHeight)
 8009a98:	b480      	push	{r7}
 8009a9a:	b085      	sub	sp, #20
 8009a9c:	af00      	add	r7, sp, #0
 8009a9e:	60f8      	str	r0, [r7, #12]
 8009aa0:	4608      	mov	r0, r1
 8009aa2:	4611      	mov	r1, r2
 8009aa4:	461a      	mov	r2, r3
 8009aa6:	4603      	mov	r3, r0
 8009aa8:	817b      	strh	r3, [r7, #10]
 8009aaa:	460b      	mov	r3, r1
 8009aac:	813b      	strh	r3, [r7, #8]
 8009aae:	4613      	mov	r3, r2
 8009ab0:	80fb      	strh	r3, [r7, #6]
        : x(rectX), y(rectY), width(rectWidth), height(rectHeight)
 8009ab2:	68fb      	ldr	r3, [r7, #12]
 8009ab4:	897a      	ldrh	r2, [r7, #10]
 8009ab6:	801a      	strh	r2, [r3, #0]
 8009ab8:	68fb      	ldr	r3, [r7, #12]
 8009aba:	893a      	ldrh	r2, [r7, #8]
 8009abc:	805a      	strh	r2, [r3, #2]
 8009abe:	68fb      	ldr	r3, [r7, #12]
 8009ac0:	88fa      	ldrh	r2, [r7, #6]
 8009ac2:	809a      	strh	r2, [r3, #4]
 8009ac4:	68fb      	ldr	r3, [r7, #12]
 8009ac6:	8b3a      	ldrh	r2, [r7, #24]
 8009ac8:	80da      	strh	r2, [r3, #6]
    {
    }
 8009aca:	68fb      	ldr	r3, [r7, #12]
 8009acc:	4618      	mov	r0, r3
 8009ace:	3714      	adds	r7, #20
 8009ad0:	46bd      	mov	sp, r7
 8009ad2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ad6:	4770      	bx	lr

08009ad8 <_ZN8touchgfx6BitmapC1Et>:
     * Creates and binds a Bitmap instance to the corresponding entry in the BitmapData
     * array.
     *
     * @param  id (Optional) The unique bitmap identifier.
     */
    Bitmap(const BitmapId id = BITMAP_INVALID)
 8009ad8:	b480      	push	{r7}
 8009ada:	b083      	sub	sp, #12
 8009adc:	af00      	add	r7, sp, #0
 8009ade:	6078      	str	r0, [r7, #4]
 8009ae0:	460b      	mov	r3, r1
 8009ae2:	807b      	strh	r3, [r7, #2]
        : bitmapId(id)
 8009ae4:	687b      	ldr	r3, [r7, #4]
 8009ae6:	887a      	ldrh	r2, [r7, #2]
 8009ae8:	801a      	strh	r2, [r3, #0]
    {
    }
 8009aea:	687b      	ldr	r3, [r7, #4]
 8009aec:	4618      	mov	r0, r3
 8009aee:	370c      	adds	r7, #12
 8009af0:	46bd      	mov	sp, r7
 8009af2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009af6:	4770      	bx	lr

08009af8 <_ZNK8touchgfx10ClickEvent7getTypeEv>:
    /**
     * Gets the click type of this event.
     *
     * @return The click type of this event.
     */
    ClickEventType getType() const
 8009af8:	b480      	push	{r7}
 8009afa:	b083      	sub	sp, #12
 8009afc:	af00      	add	r7, sp, #0
 8009afe:	6078      	str	r0, [r7, #4]
    {
        return clickEventType;
 8009b00:	687b      	ldr	r3, [r7, #4]
 8009b02:	791b      	ldrb	r3, [r3, #4]
    }
 8009b04:	4618      	mov	r0, r3
 8009b06:	370c      	adds	r7, #12
 8009b08:	46bd      	mov	sp, r7
 8009b0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b0e:	4770      	bx	lr

08009b10 <_ZN8touchgfx8DrawableC1Ev>:
 */
class Drawable
{
public:
    /** Initializes a new instance of the Drawable class. */
    Drawable()
 8009b10:	b580      	push	{r7, lr}
 8009b12:	b082      	sub	sp, #8
 8009b14:	af00      	add	r7, sp, #0
 8009b16:	6078      	str	r0, [r7, #4]
          nextSibling(0),
          nextDrawChainElement(0),
          cachedAbsX(0),
          cachedAbsY(0),
          touchable(false),
          visible(true)
 8009b18:	4a14      	ldr	r2, [pc, #80]	@ (8009b6c <_ZN8touchgfx8DrawableC1Ev+0x5c>)
 8009b1a:	687b      	ldr	r3, [r7, #4]
 8009b1c:	601a      	str	r2, [r3, #0]
        : rect(),
 8009b1e:	687b      	ldr	r3, [r7, #4]
 8009b20:	3304      	adds	r3, #4
 8009b22:	4618      	mov	r0, r3
 8009b24:	f7ff ffa1 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
          cachedVisibleRect(),
 8009b28:	687b      	ldr	r3, [r7, #4]
 8009b2a:	330c      	adds	r3, #12
 8009b2c:	4618      	mov	r0, r3
 8009b2e:	f7ff ff9c 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
          parent(0),
 8009b32:	687b      	ldr	r3, [r7, #4]
 8009b34:	2200      	movs	r2, #0
 8009b36:	615a      	str	r2, [r3, #20]
          nextSibling(0),
 8009b38:	687b      	ldr	r3, [r7, #4]
 8009b3a:	2200      	movs	r2, #0
 8009b3c:	619a      	str	r2, [r3, #24]
          nextDrawChainElement(0),
 8009b3e:	687b      	ldr	r3, [r7, #4]
 8009b40:	2200      	movs	r2, #0
 8009b42:	61da      	str	r2, [r3, #28]
          cachedAbsX(0),
 8009b44:	687b      	ldr	r3, [r7, #4]
 8009b46:	2200      	movs	r2, #0
 8009b48:	841a      	strh	r2, [r3, #32]
          cachedAbsY(0),
 8009b4a:	687b      	ldr	r3, [r7, #4]
 8009b4c:	2200      	movs	r2, #0
 8009b4e:	845a      	strh	r2, [r3, #34]	@ 0x22
          touchable(false),
 8009b50:	687b      	ldr	r3, [r7, #4]
 8009b52:	2200      	movs	r2, #0
 8009b54:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
          visible(true)
 8009b58:	687b      	ldr	r3, [r7, #4]
 8009b5a:	2201      	movs	r2, #1
 8009b5c:	f883 2025 	strb.w	r2, [r3, #37]	@ 0x25
    {
    }
 8009b60:	687b      	ldr	r3, [r7, #4]
 8009b62:	4618      	mov	r0, r3
 8009b64:	3708      	adds	r7, #8
 8009b66:	46bd      	mov	sp, r7
 8009b68:	bd80      	pop	{r7, pc}
 8009b6a:	bf00      	nop
 8009b6c:	080296f0 	.word	0x080296f0

08009b70 <_ZN8touchgfx8DrawableD1Ev>:

    /** Finalizes an instance of the Drawable class. */
    virtual ~Drawable()
 8009b70:	b480      	push	{r7}
 8009b72:	b083      	sub	sp, #12
 8009b74:	af00      	add	r7, sp, #0
 8009b76:	6078      	str	r0, [r7, #4]
    {
 8009b78:	4a04      	ldr	r2, [pc, #16]	@ (8009b8c <_ZN8touchgfx8DrawableD1Ev+0x1c>)
 8009b7a:	687b      	ldr	r3, [r7, #4]
 8009b7c:	601a      	str	r2, [r3, #0]
    }
 8009b7e:	687b      	ldr	r3, [r7, #4]
 8009b80:	4618      	mov	r0, r3
 8009b82:	370c      	adds	r7, #12
 8009b84:	46bd      	mov	sp, r7
 8009b86:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009b8a:	4770      	bx	lr
 8009b8c:	080296f0 	.word	0x080296f0

08009b90 <_ZN8touchgfx8DrawableD0Ev>:
    virtual ~Drawable()
 8009b90:	b580      	push	{r7, lr}
 8009b92:	b082      	sub	sp, #8
 8009b94:	af00      	add	r7, sp, #0
 8009b96:	6078      	str	r0, [r7, #4]
    }
 8009b98:	6878      	ldr	r0, [r7, #4]
 8009b9a:	f7ff ffe9 	bl	8009b70 <_ZN8touchgfx8DrawableD1Ev>
 8009b9e:	2128      	movs	r1, #40	@ 0x28
 8009ba0:	6878      	ldr	r0, [r7, #4]
 8009ba2:	f01c f8a6 	bl	8025cf2 <_ZdlPvj>
 8009ba6:	687b      	ldr	r3, [r7, #4]
 8009ba8:	4618      	mov	r0, r3
 8009baa:	3708      	adds	r7, #8
 8009bac:	46bd      	mov	sp, r7
 8009bae:	bd80      	pop	{r7, pc}

08009bb0 <_ZNK8touchgfx8Drawable17invalidateContentEv>:
     * Tell the framework that the contents of the Drawable needs to be redrawn. If the Drawable is
     * invisible, nothing happens. Subclasses of Drawable are encouraged to implement this function
     * and invalidate as little as possible, i.e. the smallest rectangle covering the visual element(s)
     * drawn by the widget.
     */
    virtual void invalidateContent() const
 8009bb0:	b580      	push	{r7, lr}
 8009bb2:	b082      	sub	sp, #8
 8009bb4:	af00      	add	r7, sp, #0
 8009bb6:	6078      	str	r0, [r7, #4]
    {
        // Consider checking if *this is in the draw chain
        if (visible)
 8009bb8:	687b      	ldr	r3, [r7, #4]
 8009bba:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
 8009bbe:	2b00      	cmp	r3, #0
 8009bc0:	d005      	beq.n	8009bce <_ZNK8touchgfx8Drawable17invalidateContentEv+0x1e>
        {
            invalidate();
 8009bc2:	687b      	ldr	r3, [r7, #4]
 8009bc4:	681b      	ldr	r3, [r3, #0]
 8009bc6:	3314      	adds	r3, #20
 8009bc8:	681b      	ldr	r3, [r3, #0]
 8009bca:	6878      	ldr	r0, [r7, #4]
 8009bcc:	4798      	blx	r3
        }
    }
 8009bce:	bf00      	nop
 8009bd0:	3708      	adds	r7, #8
 8009bd2:	46bd      	mov	sp, r7
 8009bd4:	bd80      	pop	{r7, pc}

08009bd6 <_ZN8touchgfx8Drawable13getFirstChildEv>:
     * Function for obtaining the first child of this drawable if any.
     *
     * @return A pointer on the first child drawable if any.
     * @see Container::getFirstChild
     */
    virtual Drawable* getFirstChild()
 8009bd6:	b480      	push	{r7}
 8009bd8:	b083      	sub	sp, #12
 8009bda:	af00      	add	r7, sp, #0
 8009bdc:	6078      	str	r0, [r7, #4]
    {
        return 0;
 8009bde:	2300      	movs	r3, #0
    }
 8009be0:	4618      	mov	r0, r3
 8009be2:	370c      	adds	r7, #12
 8009be4:	46bd      	mov	sp, r7
 8009be6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009bea:	4770      	bx	lr

08009bec <_ZN8touchgfx8Drawable11setPositionEssss>:
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     *
     * @see setXY,setWidthHeight,setPosition(const Drawable&)
     */
    void setPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 8009bec:	b580      	push	{r7, lr}
 8009bee:	b084      	sub	sp, #16
 8009bf0:	af00      	add	r7, sp, #0
 8009bf2:	60f8      	str	r0, [r7, #12]
 8009bf4:	4608      	mov	r0, r1
 8009bf6:	4611      	mov	r1, r2
 8009bf8:	461a      	mov	r2, r3
 8009bfa:	4603      	mov	r3, r0
 8009bfc:	817b      	strh	r3, [r7, #10]
 8009bfe:	460b      	mov	r3, r1
 8009c00:	813b      	strh	r3, [r7, #8]
 8009c02:	4613      	mov	r3, r2
 8009c04:	80fb      	strh	r3, [r7, #6]
    {
        setXY(x, y);
 8009c06:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 8009c0a:	f9b7 300a 	ldrsh.w	r3, [r7, #10]
 8009c0e:	4619      	mov	r1, r3
 8009c10:	68f8      	ldr	r0, [r7, #12]
 8009c12:	f000 f82a 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
        setWidthHeight(width, height);
 8009c16:	f9b7 2018 	ldrsh.w	r2, [r7, #24]
 8009c1a:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 8009c1e:	4619      	mov	r1, r3
 8009c20:	68f8      	ldr	r0, [r7, #12]
 8009c22:	f000 f87e 	bl	8009d22 <_ZN8touchgfx8Drawable14setWidthHeightEss>
    }
 8009c26:	bf00      	nop
 8009c28:	3710      	adds	r7, #16
 8009c2a:	46bd      	mov	sp, r7
 8009c2c:	bd80      	pop	{r7, pc}

08009c2e <_ZN8touchgfx8Drawable4setXEs>:
     *
     * @param  x The new x value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setX(int16_t x)
 8009c2e:	b480      	push	{r7}
 8009c30:	b083      	sub	sp, #12
 8009c32:	af00      	add	r7, sp, #0
 8009c34:	6078      	str	r0, [r7, #4]
 8009c36:	460b      	mov	r3, r1
 8009c38:	807b      	strh	r3, [r7, #2]
    {
        rect.x = x;
 8009c3a:	687b      	ldr	r3, [r7, #4]
 8009c3c:	887a      	ldrh	r2, [r7, #2]
 8009c3e:	809a      	strh	r2, [r3, #4]
    }
 8009c40:	bf00      	nop
 8009c42:	370c      	adds	r7, #12
 8009c44:	46bd      	mov	sp, r7
 8009c46:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c4a:	4770      	bx	lr

08009c4c <_ZN8touchgfx8Drawable4setYEs>:
     *
     * @param  y The new y value, relative to the parent. A negative value is allowed.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setY(int16_t y)
 8009c4c:	b480      	push	{r7}
 8009c4e:	b083      	sub	sp, #12
 8009c50:	af00      	add	r7, sp, #0
 8009c52:	6078      	str	r0, [r7, #4]
 8009c54:	460b      	mov	r3, r1
 8009c56:	807b      	strh	r3, [r7, #2]
    {
        rect.y = y;
 8009c58:	687b      	ldr	r3, [r7, #4]
 8009c5a:	887a      	ldrh	r2, [r7, #2]
 8009c5c:	80da      	strh	r2, [r3, #6]
    }
 8009c5e:	bf00      	nop
 8009c60:	370c      	adds	r7, #12
 8009c62:	46bd      	mov	sp, r7
 8009c64:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c68:	4770      	bx	lr

08009c6a <_ZN8touchgfx8Drawable5setXYEss>:
     *
     * @see moveTo
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    void setXY(int16_t x, int16_t y)
 8009c6a:	b580      	push	{r7, lr}
 8009c6c:	b082      	sub	sp, #8
 8009c6e:	af00      	add	r7, sp, #0
 8009c70:	6078      	str	r0, [r7, #4]
 8009c72:	460b      	mov	r3, r1
 8009c74:	807b      	strh	r3, [r7, #2]
 8009c76:	4613      	mov	r3, r2
 8009c78:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 8009c7a:	687b      	ldr	r3, [r7, #4]
 8009c7c:	681b      	ldr	r3, [r3, #0]
 8009c7e:	3330      	adds	r3, #48	@ 0x30
 8009c80:	681b      	ldr	r3, [r3, #0]
 8009c82:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009c86:	4611      	mov	r1, r2
 8009c88:	6878      	ldr	r0, [r7, #4]
 8009c8a:	4798      	blx	r3
        setY(y);
 8009c8c:	687b      	ldr	r3, [r7, #4]
 8009c8e:	681b      	ldr	r3, [r3, #0]
 8009c90:	3334      	adds	r3, #52	@ 0x34
 8009c92:	681b      	ldr	r3, [r3, #0]
 8009c94:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009c98:	4611      	mov	r1, r2
 8009c9a:	6878      	ldr	r0, [r7, #4]
 8009c9c:	4798      	blx	r3
    }
 8009c9e:	bf00      	nop
 8009ca0:	3708      	adds	r7, #8
 8009ca2:	46bd      	mov	sp, r7
 8009ca4:	bd80      	pop	{r7, pc}

08009ca6 <_ZN8touchgfx8Drawable8setWidthEs>:
     *
     * @param  width The new width.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setWidth(int16_t width)
 8009ca6:	b480      	push	{r7}
 8009ca8:	b083      	sub	sp, #12
 8009caa:	af00      	add	r7, sp, #0
 8009cac:	6078      	str	r0, [r7, #4]
 8009cae:	460b      	mov	r3, r1
 8009cb0:	807b      	strh	r3, [r7, #2]
    {
        rect.width = width;
 8009cb2:	687b      	ldr	r3, [r7, #4]
 8009cb4:	887a      	ldrh	r2, [r7, #2]
 8009cb6:	811a      	strh	r2, [r3, #8]
    }
 8009cb8:	bf00      	nop
 8009cba:	370c      	adds	r7, #12
 8009cbc:	46bd      	mov	sp, r7
 8009cbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cc2:	4770      	bx	lr

08009cc4 <_ZN8touchgfx8Drawable9setHeightEs>:
     *
     * @param  height The new height.
     *
     * @note For most Drawable widgets, changing this does normally not automatically yield a redraw.
     */
    virtual void setHeight(int16_t height)
 8009cc4:	b480      	push	{r7}
 8009cc6:	b083      	sub	sp, #12
 8009cc8:	af00      	add	r7, sp, #0
 8009cca:	6078      	str	r0, [r7, #4]
 8009ccc:	460b      	mov	r3, r1
 8009cce:	807b      	strh	r3, [r7, #2]
    {
        rect.height = height;
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	887a      	ldrh	r2, [r7, #2]
 8009cd4:	815a      	strh	r2, [r3, #10]
    }
 8009cd6:	bf00      	nop
 8009cd8:	370c      	adds	r7, #12
 8009cda:	46bd      	mov	sp, r7
 8009cdc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ce0:	4770      	bx	lr

08009ce2 <_ZN8touchgfx8Drawable20childGeometryChangedEv>:
    /**
     * This function can be called on parent nodes to signal that the size or position of
     * one or more of its children has changed. Currently only used in ScrollableContainer
     * to redraw scrollbars when the size of the scrolling contents changes.
     */
    virtual void childGeometryChanged()
 8009ce2:	b480      	push	{r7}
 8009ce4:	b083      	sub	sp, #12
 8009ce6:	af00      	add	r7, sp, #0
 8009ce8:	6078      	str	r0, [r7, #4]
    {
    }
 8009cea:	bf00      	nop
 8009cec:	370c      	adds	r7, #12
 8009cee:	46bd      	mov	sp, r7
 8009cf0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009cf4:	4770      	bx	lr

08009cf6 <_ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The ClickEvent received from the HAL.
     */
    virtual void handleClickEvent(const ClickEvent& event)
 8009cf6:	b480      	push	{r7}
 8009cf8:	b083      	sub	sp, #12
 8009cfa:	af00      	add	r7, sp, #0
 8009cfc:	6078      	str	r0, [r7, #4]
 8009cfe:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009d00:	bf00      	nop
 8009d02:	370c      	adds	r7, #12
 8009d04:	46bd      	mov	sp, r7
 8009d06:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d0a:	4770      	bx	lr

08009d0c <_ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE>:
     * ignores the event. The event is only received if the Drawable is touchable and
     * visible.
     *
     * @param  event The GestureEvent received from the HAL.
     */
    virtual void handleGestureEvent(const GestureEvent& event)
 8009d0c:	b480      	push	{r7}
 8009d0e:	b083      	sub	sp, #12
 8009d10:	af00      	add	r7, sp, #0
 8009d12:	6078      	str	r0, [r7, #4]
 8009d14:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009d16:	bf00      	nop
 8009d18:	370c      	adds	r7, #12
 8009d1a:	46bd      	mov	sp, r7
 8009d1c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d20:	4770      	bx	lr

08009d22 <_ZN8touchgfx8Drawable14setWidthHeightEss>:
     * coordinates).
     *
     * @param  width  The width.
     * @param  height The height.
     */
    void setWidthHeight(int16_t width, int16_t height)
 8009d22:	b580      	push	{r7, lr}
 8009d24:	b082      	sub	sp, #8
 8009d26:	af00      	add	r7, sp, #0
 8009d28:	6078      	str	r0, [r7, #4]
 8009d2a:	460b      	mov	r3, r1
 8009d2c:	807b      	strh	r3, [r7, #2]
 8009d2e:	4613      	mov	r3, r2
 8009d30:	803b      	strh	r3, [r7, #0]
    {
        setWidth(width);
 8009d32:	687b      	ldr	r3, [r7, #4]
 8009d34:	681b      	ldr	r3, [r3, #0]
 8009d36:	3338      	adds	r3, #56	@ 0x38
 8009d38:	681b      	ldr	r3, [r3, #0]
 8009d3a:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8009d3e:	4611      	mov	r1, r2
 8009d40:	6878      	ldr	r0, [r7, #4]
 8009d42:	4798      	blx	r3
        setHeight(height);
 8009d44:	687b      	ldr	r3, [r7, #4]
 8009d46:	681b      	ldr	r3, [r3, #0]
 8009d48:	333c      	adds	r3, #60	@ 0x3c
 8009d4a:	681b      	ldr	r3, [r3, #0]
 8009d4c:	f9b7 2000 	ldrsh.w	r2, [r7]
 8009d50:	4611      	mov	r1, r2
 8009d52:	6878      	ldr	r0, [r7, #4]
 8009d54:	4798      	blx	r3
    }
 8009d56:	bf00      	nop
 8009d58:	3708      	adds	r7, #8
 8009d5a:	46bd      	mov	sp, r7
 8009d5c:	bd80      	pop	{r7, pc}

08009d5e <_ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE>:
     * ignores the event. The event is only received if the drawable is touchable and
     * visible.
     *
     * @param  event The DragEvent received from the HAL.
     */
    virtual void handleDragEvent(const DragEvent& event)
 8009d5e:	b480      	push	{r7}
 8009d60:	b083      	sub	sp, #12
 8009d62:	af00      	add	r7, sp, #0
 8009d64:	6078      	str	r0, [r7, #4]
 8009d66:	6039      	str	r1, [r7, #0]
    {
        (void)event; // Unused variable
    }
 8009d68:	bf00      	nop
 8009d6a:	370c      	adds	r7, #12
 8009d6c:	46bd      	mov	sp, r7
 8009d6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d72:	4770      	bx	lr

08009d74 <_ZN8touchgfx8Drawable15handleTickEventEv>:
     * Called periodically by the framework if the Drawable instance has subscribed to timer
     * ticks.
     *
     * @see Application::registerTimerWidget
     */
    virtual void handleTickEvent()
 8009d74:	b480      	push	{r7}
 8009d76:	b083      	sub	sp, #12
 8009d78:	af00      	add	r7, sp, #0
 8009d7a:	6078      	str	r0, [r7, #4]
    {
    }
 8009d7c:	bf00      	nop
 8009d7e:	370c      	adds	r7, #12
 8009d80:	46bd      	mov	sp, r7
 8009d82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d86:	4770      	bx	lr

08009d88 <_ZN8touchgfx8Drawable12setTouchableEb>:
    /**
     * Controls whether this Drawable receives touch events or not.
     *
     * @param  touch If true it will receive touch events, if false it will not.
     */
    void setTouchable(bool touch)
 8009d88:	b480      	push	{r7}
 8009d8a:	b083      	sub	sp, #12
 8009d8c:	af00      	add	r7, sp, #0
 8009d8e:	6078      	str	r0, [r7, #4]
 8009d90:	460b      	mov	r3, r1
 8009d92:	70fb      	strb	r3, [r7, #3]
    {
        touchable = touch;
 8009d94:	687b      	ldr	r3, [r7, #4]
 8009d96:	78fa      	ldrb	r2, [r7, #3]
 8009d98:	f883 2024 	strb.w	r2, [r3, #36]	@ 0x24
    }
 8009d9c:	bf00      	nop
 8009d9e:	370c      	adds	r7, #12
 8009da0:	46bd      	mov	sp, r7
 8009da2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009da6:	4770      	bx	lr

08009da8 <_ZNK8touchgfx8Drawable9isVisibleEv>:
     *
     * @return true if the Drawable is visible.
     *
     * @see setVisible
     */
    bool isVisible() const
 8009da8:	b480      	push	{r7}
 8009daa:	b083      	sub	sp, #12
 8009dac:	af00      	add	r7, sp, #0
 8009dae:	6078      	str	r0, [r7, #4]
    {
        return visible;
 8009db0:	687b      	ldr	r3, [r7, #4]
 8009db2:	f893 3025 	ldrb.w	r3, [r3, #37]	@ 0x25
    }
 8009db6:	4618      	mov	r0, r3
 8009db8:	370c      	adds	r7, #12
 8009dba:	46bd      	mov	sp, r7
 8009dbc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dc0:	4770      	bx	lr

08009dc2 <_ZNK8touchgfx8Drawable11isTouchableEv>:
     *
     * @return True if touch events are received.
     *
     * @see setTouchable
     */
    bool isTouchable() const
 8009dc2:	b480      	push	{r7}
 8009dc4:	b083      	sub	sp, #12
 8009dc6:	af00      	add	r7, sp, #0
 8009dc8:	6078      	str	r0, [r7, #4]
    {
        return touchable;
 8009dca:	687b      	ldr	r3, [r7, #4]
 8009dcc:	f893 3024 	ldrb.w	r3, [r3, #36]	@ 0x24
    }
 8009dd0:	4618      	mov	r0, r3
 8009dd2:	370c      	adds	r7, #12
 8009dd4:	46bd      	mov	sp, r7
 8009dd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009dda:	4770      	bx	lr

08009ddc <_ZN8touchgfx8Drawable6moveToEss>:
     *
     * @see moveRelative, setXY
     *
     * @note Will redraw the appropriate areas of the screen.
     */
    virtual void moveTo(int16_t x, int16_t y)
 8009ddc:	b580      	push	{r7, lr}
 8009dde:	b082      	sub	sp, #8
 8009de0:	af00      	add	r7, sp, #0
 8009de2:	6078      	str	r0, [r7, #4]
 8009de4:	460b      	mov	r3, r1
 8009de6:	807b      	strh	r3, [r7, #2]
 8009de8:	4613      	mov	r3, r2
 8009dea:	803b      	strh	r3, [r7, #0]
    {
        moveRelative(x - rect.x, y - rect.y);
 8009dec:	687b      	ldr	r3, [r7, #4]
 8009dee:	681b      	ldr	r3, [r3, #0]
 8009df0:	3354      	adds	r3, #84	@ 0x54
 8009df2:	681b      	ldr	r3, [r3, #0]
 8009df4:	8879      	ldrh	r1, [r7, #2]
 8009df6:	687a      	ldr	r2, [r7, #4]
 8009df8:	f9b2 2004 	ldrsh.w	r2, [r2, #4]
 8009dfc:	b292      	uxth	r2, r2
 8009dfe:	1a8a      	subs	r2, r1, r2
 8009e00:	b292      	uxth	r2, r2
 8009e02:	b210      	sxth	r0, r2
 8009e04:	8839      	ldrh	r1, [r7, #0]
 8009e06:	687a      	ldr	r2, [r7, #4]
 8009e08:	f9b2 2006 	ldrsh.w	r2, [r2, #6]
 8009e0c:	b292      	uxth	r2, r2
 8009e0e:	1a8a      	subs	r2, r1, r2
 8009e10:	b292      	uxth	r2, r2
 8009e12:	b212      	sxth	r2, r2
 8009e14:	4601      	mov	r1, r0
 8009e16:	6878      	ldr	r0, [r7, #4]
 8009e18:	4798      	blx	r3
    }
 8009e1a:	bf00      	nop
 8009e1c:	3708      	adds	r7, #8
 8009e1e:	46bd      	mov	sp, r7
 8009e20:	bd80      	pop	{r7, pc}

08009e22 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>:
     *
     * Reset cached coordinate data.
     *
     * @note For TouchGFX internal use only.
     */
    void resetDrawChainCache()
 8009e22:	b480      	push	{r7}
 8009e24:	b083      	sub	sp, #12
 8009e26:	af00      	add	r7, sp, #0
 8009e28:	6078      	str	r0, [r7, #4]
    {
        // Resetting the cached indicators
        cachedVisibleRect.x = UNCACHED_INDICATOR;
 8009e2a:	687b      	ldr	r3, [r7, #4]
 8009e2c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009e30:	819a      	strh	r2, [r3, #12]
        cachedAbsX = UNCACHED_INDICATOR;
 8009e32:	687b      	ldr	r3, [r7, #4]
 8009e34:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009e38:	841a      	strh	r2, [r3, #32]
        cachedAbsY = UNCACHED_INDICATOR;
 8009e3a:	687b      	ldr	r3, [r7, #4]
 8009e3c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8009e40:	845a      	strh	r2, [r3, #34]	@ 0x22
    }
 8009e42:	bf00      	nop
 8009e44:	370c      	adds	r7, #12
 8009e46:	46bd      	mov	sp, r7
 8009e48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009e4c:	4770      	bx	lr

08009e4e <_ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_>:
     * @param          invalidatedArea     Include drawables that intersect with this area only.
     * @param [in,out] nextPreviousElement Modifiable element in linked list.
     *
     * @note For TouchGFX internal use only.
     */
    virtual void setupDrawChain(const Rect& invalidatedArea, Drawable** nextPreviousElement)
 8009e4e:	b580      	push	{r7, lr}
 8009e50:	b084      	sub	sp, #16
 8009e52:	af00      	add	r7, sp, #0
 8009e54:	60f8      	str	r0, [r7, #12]
 8009e56:	60b9      	str	r1, [r7, #8]
 8009e58:	607a      	str	r2, [r7, #4]
    {
        (void)invalidatedArea; // Unused variable
        resetDrawChainCache();
 8009e5a:	68f8      	ldr	r0, [r7, #12]
 8009e5c:	f7ff ffe1 	bl	8009e22 <_ZN8touchgfx8Drawable19resetDrawChainCacheEv>
        nextDrawChainElement = *nextPreviousElement;
 8009e60:	687b      	ldr	r3, [r7, #4]
 8009e62:	681a      	ldr	r2, [r3, #0]
 8009e64:	68fb      	ldr	r3, [r7, #12]
 8009e66:	61da      	str	r2, [r3, #28]
        *nextPreviousElement = this;
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	68fa      	ldr	r2, [r7, #12]
 8009e6c:	601a      	str	r2, [r3, #0]
    }
 8009e6e:	bf00      	nop
 8009e70:	3710      	adds	r7, #16
 8009e72:	46bd      	mov	sp, r7
 8009e74:	bd80      	pop	{r7, pc}

08009e76 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE>:
     * Since a Widget is only one Drawable, Widget::getLastChild simply yields itself as
     * result, but only if the Widget isVisible and isTouchable.
     *
     * @param [out] last Result, the address of the actual instance of the Widget.
     */
    virtual void getLastChild(int16_t /*x*/, int16_t /*y*/, Drawable** last)
 8009e76:	b580      	push	{r7, lr}
 8009e78:	b084      	sub	sp, #16
 8009e7a:	af00      	add	r7, sp, #0
 8009e7c:	60f8      	str	r0, [r7, #12]
 8009e7e:	607b      	str	r3, [r7, #4]
 8009e80:	460b      	mov	r3, r1
 8009e82:	817b      	strh	r3, [r7, #10]
 8009e84:	4613      	mov	r3, r2
 8009e86:	813b      	strh	r3, [r7, #8]
    {
        if (isVisible() && isTouchable())
 8009e88:	68fb      	ldr	r3, [r7, #12]
 8009e8a:	4618      	mov	r0, r3
 8009e8c:	f7ff ff8c 	bl	8009da8 <_ZNK8touchgfx8Drawable9isVisibleEv>
 8009e90:	4603      	mov	r3, r0
 8009e92:	2b00      	cmp	r3, #0
 8009e94:	d008      	beq.n	8009ea8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009e96:	68fb      	ldr	r3, [r7, #12]
 8009e98:	4618      	mov	r0, r3
 8009e9a:	f7ff ff92 	bl	8009dc2 <_ZNK8touchgfx8Drawable11isTouchableEv>
 8009e9e:	4603      	mov	r3, r0
 8009ea0:	2b00      	cmp	r3, #0
 8009ea2:	d001      	beq.n	8009ea8 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x32>
 8009ea4:	2301      	movs	r3, #1
 8009ea6:	e000      	b.n	8009eaa <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x34>
 8009ea8:	2300      	movs	r3, #0
 8009eaa:	2b00      	cmp	r3, #0
 8009eac:	d002      	beq.n	8009eb4 <_ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE+0x3e>
        {
            *last = this;
 8009eae:	68fa      	ldr	r2, [r7, #12]
 8009eb0:	687b      	ldr	r3, [r7, #4]
 8009eb2:	601a      	str	r2, [r3, #0]
        }
    }
 8009eb4:	bf00      	nop
 8009eb6:	3710      	adds	r7, #16
 8009eb8:	46bd      	mov	sp, r7
 8009eba:	bd80      	pop	{r7, pc}

08009ebc <_ZN8touchgfx9ContainerC1Ev>:
 * @see Drawable
 */
class Container : public Drawable
{
public:
    Container()
 8009ebc:	b580      	push	{r7, lr}
 8009ebe:	b082      	sub	sp, #8
 8009ec0:	af00      	add	r7, sp, #0
 8009ec2:	6078      	str	r0, [r7, #4]
        : Drawable(),
          firstChild(0)
 8009ec4:	687b      	ldr	r3, [r7, #4]
 8009ec6:	4618      	mov	r0, r3
 8009ec8:	f7ff fe22 	bl	8009b10 <_ZN8touchgfx8DrawableC1Ev>
 8009ecc:	4a05      	ldr	r2, [pc, #20]	@ (8009ee4 <_ZN8touchgfx9ContainerC1Ev+0x28>)
 8009ece:	687b      	ldr	r3, [r7, #4]
 8009ed0:	601a      	str	r2, [r3, #0]
 8009ed2:	687b      	ldr	r3, [r7, #4]
 8009ed4:	2200      	movs	r2, #0
 8009ed6:	629a      	str	r2, [r3, #40]	@ 0x28
    {
    }
 8009ed8:	687b      	ldr	r3, [r7, #4]
 8009eda:	4618      	mov	r0, r3
 8009edc:	3708      	adds	r7, #8
 8009ede:	46bd      	mov	sp, r7
 8009ee0:	bd80      	pop	{r7, pc}
 8009ee2:	bf00      	nop
 8009ee4:	0802909c 	.word	0x0802909c

08009ee8 <_ZN8touchgfx9Container13getFirstChildEv>:
     * @return Pointer to the first drawable added to this container. If nothing has been
     *         added return zero.
     *
     * @see getNextSibling
     */
    virtual Drawable* getFirstChild()
 8009ee8:	b480      	push	{r7}
 8009eea:	b083      	sub	sp, #12
 8009eec:	af00      	add	r7, sp, #0
 8009eee:	6078      	str	r0, [r7, #4]
    {
        return firstChild;
 8009ef0:	687b      	ldr	r3, [r7, #4]
 8009ef2:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
    }
 8009ef4:	4618      	mov	r0, r3
 8009ef6:	370c      	adds	r7, #12
 8009ef8:	46bd      	mov	sp, r7
 8009efa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009efe:	4770      	bx	lr

08009f00 <_ZN8touchgfx6ScreenD1Ev>:
public:
    /** Initializes a new instance of the Screen class. */
    Screen();

    /** Finalizes an instance of the Screen class. */
    virtual ~Screen()
 8009f00:	b580      	push	{r7, lr}
 8009f02:	b082      	sub	sp, #8
 8009f04:	af00      	add	r7, sp, #0
 8009f06:	6078      	str	r0, [r7, #4]
    {
 8009f08:	4a06      	ldr	r2, [pc, #24]	@ (8009f24 <_ZN8touchgfx6ScreenD1Ev+0x24>)
 8009f0a:	687b      	ldr	r3, [r7, #4]
 8009f0c:	601a      	str	r2, [r3, #0]
    }
 8009f0e:	687b      	ldr	r3, [r7, #4]
 8009f10:	3304      	adds	r3, #4
 8009f12:	4618      	mov	r0, r3
 8009f14:	f000 fa26 	bl	800a364 <_ZN8touchgfx9ContainerD1Ev>
 8009f18:	687b      	ldr	r3, [r7, #4]
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	3708      	adds	r7, #8
 8009f1e:	46bd      	mov	sp, r7
 8009f20:	bd80      	pop	{r7, pc}
 8009f22:	bf00      	nop
 8009f24:	080297fc 	.word	0x080297fc

08009f28 <_ZN8touchgfx6ScreenD0Ev>:
    virtual ~Screen()
 8009f28:	b580      	push	{r7, lr}
 8009f2a:	b082      	sub	sp, #8
 8009f2c:	af00      	add	r7, sp, #0
 8009f2e:	6078      	str	r0, [r7, #4]
    }
 8009f30:	6878      	ldr	r0, [r7, #4]
 8009f32:	f7ff ffe5 	bl	8009f00 <_ZN8touchgfx6ScreenD1Ev>
 8009f36:	213c      	movs	r1, #60	@ 0x3c
 8009f38:	6878      	ldr	r0, [r7, #4]
 8009f3a:	f01b feda 	bl	8025cf2 <_ZdlPvj>
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	4618      	mov	r0, r3
 8009f42:	3708      	adds	r7, #8
 8009f44:	46bd      	mov	sp, r7
 8009f46:	bd80      	pop	{r7, pc}

08009f48 <_ZN8touchgfx6Screen11setupScreenEv>:
     * version does nothing, but place any screen specific initialization code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void setupScreen()
 8009f48:	b480      	push	{r7}
 8009f4a:	b083      	sub	sp, #12
 8009f4c:	af00      	add	r7, sp, #0
 8009f4e:	6078      	str	r0, [r7, #4]
    {
    }
 8009f50:	bf00      	nop
 8009f52:	370c      	adds	r7, #12
 8009f54:	46bd      	mov	sp, r7
 8009f56:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f5a:	4770      	bx	lr

08009f5c <_ZN8touchgfx6Screen15afterTransitionEv>:
     * version does nothing, but override to do screen specific initialization code that has
     * to be done after the transition to the screen.
     *
     * @see Application::handleTickEvent
     */
    virtual void afterTransition()
 8009f5c:	b480      	push	{r7}
 8009f5e:	b083      	sub	sp, #12
 8009f60:	af00      	add	r7, sp, #0
 8009f62:	6078      	str	r0, [r7, #4]
    {
    }
 8009f64:	bf00      	nop
 8009f66:	370c      	adds	r7, #12
 8009f68:	46bd      	mov	sp, r7
 8009f6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f6e:	4770      	bx	lr

08009f70 <_ZN8touchgfx6Screen14tearDownScreenEv>:
     * Base version does nothing, but place any screen specific cleanup code in an
     * overridden version.
     *
     * @see Application::switchScreen
     */
    virtual void tearDownScreen()
 8009f70:	b480      	push	{r7}
 8009f72:	b083      	sub	sp, #12
 8009f74:	af00      	add	r7, sp, #0
 8009f76:	6078      	str	r0, [r7, #4]
    {
    }
 8009f78:	bf00      	nop
 8009f7a:	370c      	adds	r7, #12
 8009f7c:	46bd      	mov	sp, r7
 8009f7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f82:	4770      	bx	lr

08009f84 <_ZN8touchgfx6Screen15handleTickEventEv>:

    /**
     * Called by the Application on the current screen with a frequency of
     * Application::TICK_INTERVAL_MS.
     */
    virtual void handleTickEvent()
 8009f84:	b480      	push	{r7}
 8009f86:	b083      	sub	sp, #12
 8009f88:	af00      	add	r7, sp, #0
 8009f8a:	6078      	str	r0, [r7, #4]
    {
    }
 8009f8c:	bf00      	nop
 8009f8e:	370c      	adds	r7, #12
 8009f90:	46bd      	mov	sp, r7
 8009f92:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009f96:	4770      	bx	lr

08009f98 <_ZN8touchgfx6Screen14handleKeyEventEh>:
     * Called by the Application on the reception of a "key", the meaning of which is
     * platform/application specific. Default implementation does nothing.
     *
     * @param  key The key to handle.
     */
    virtual void handleKeyEvent(uint8_t key)
 8009f98:	b480      	push	{r7}
 8009f9a:	b083      	sub	sp, #12
 8009f9c:	af00      	add	r7, sp, #0
 8009f9e:	6078      	str	r0, [r7, #4]
 8009fa0:	460b      	mov	r3, r1
 8009fa2:	70fb      	strb	r3, [r7, #3]
    {
        (void)key; // Unused variable
    }
 8009fa4:	bf00      	nop
 8009fa6:	370c      	adds	r7, #12
 8009fa8:	46bd      	mov	sp, r7
 8009faa:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009fae:	4770      	bx	lr

08009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>:
     * @param [in] d The Drawable to add.
     *
     * @note Must not be called with a Drawable that was already added to the screen. If in doubt,
     *       call remove() first.
     */
    void add(Drawable& d)
 8009fb0:	b580      	push	{r7, lr}
 8009fb2:	b082      	sub	sp, #8
 8009fb4:	af00      	add	r7, sp, #0
 8009fb6:	6078      	str	r0, [r7, #4]
 8009fb8:	6039      	str	r1, [r7, #0]
    {
        container.add(d);
 8009fba:	687b      	ldr	r3, [r7, #4]
 8009fbc:	3304      	adds	r3, #4
 8009fbe:	6839      	ldr	r1, [r7, #0]
 8009fc0:	4618      	mov	r0, r3
 8009fc2:	f006 fc6d 	bl	80108a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 8009fc6:	bf00      	nop
 8009fc8:	3708      	adds	r7, #8
 8009fca:	46bd      	mov	sp, r7
 8009fcc:	bd80      	pop	{r7, pc}
	...

08009fd0 <_ZN8touchgfx6WidgetC1Ev>:
class Widget : public Drawable
 8009fd0:	b580      	push	{r7, lr}
 8009fd2:	b082      	sub	sp, #8
 8009fd4:	af00      	add	r7, sp, #0
 8009fd6:	6078      	str	r0, [r7, #4]
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	4618      	mov	r0, r3
 8009fdc:	f7ff fd98 	bl	8009b10 <_ZN8touchgfx8DrawableC1Ev>
 8009fe0:	4a03      	ldr	r2, [pc, #12]	@ (8009ff0 <_ZN8touchgfx6WidgetC1Ev+0x20>)
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	601a      	str	r2, [r3, #0]
 8009fe6:	687b      	ldr	r3, [r7, #4]
 8009fe8:	4618      	mov	r0, r3
 8009fea:	3708      	adds	r7, #8
 8009fec:	46bd      	mov	sp, r7
 8009fee:	bd80      	pop	{r7, pc}
 8009ff0:	080286fc 	.word	0x080286fc

08009ff4 <_ZN8touchgfx6WidgetD1Ev>:
 8009ff4:	b580      	push	{r7, lr}
 8009ff6:	b082      	sub	sp, #8
 8009ff8:	af00      	add	r7, sp, #0
 8009ffa:	6078      	str	r0, [r7, #4]
 8009ffc:	4a05      	ldr	r2, [pc, #20]	@ (800a014 <_ZN8touchgfx6WidgetD1Ev+0x20>)
 8009ffe:	687b      	ldr	r3, [r7, #4]
 800a000:	601a      	str	r2, [r3, #0]
 800a002:	687b      	ldr	r3, [r7, #4]
 800a004:	4618      	mov	r0, r3
 800a006:	f7ff fdb3 	bl	8009b70 <_ZN8touchgfx8DrawableD1Ev>
 800a00a:	687b      	ldr	r3, [r7, #4]
 800a00c:	4618      	mov	r0, r3
 800a00e:	3708      	adds	r7, #8
 800a010:	46bd      	mov	sp, r7
 800a012:	bd80      	pop	{r7, pc}
 800a014:	080286fc 	.word	0x080286fc

0800a018 <_ZN8touchgfx6WidgetD0Ev>:
 800a018:	b580      	push	{r7, lr}
 800a01a:	b082      	sub	sp, #8
 800a01c:	af00      	add	r7, sp, #0
 800a01e:	6078      	str	r0, [r7, #4]
 800a020:	6878      	ldr	r0, [r7, #4]
 800a022:	f7ff ffe7 	bl	8009ff4 <_ZN8touchgfx6WidgetD1Ev>
 800a026:	2128      	movs	r1, #40	@ 0x28
 800a028:	6878      	ldr	r0, [r7, #4]
 800a02a:	f01b fe62 	bl	8025cf2 <_ZdlPvj>
 800a02e:	687b      	ldr	r3, [r7, #4]
 800a030:	4618      	mov	r0, r3
 800a032:	3708      	adds	r7, #8
 800a034:	46bd      	mov	sp, r7
 800a036:	bd80      	pop	{r7, pc}

0800a038 <_ZN8touchgfx3BoxC1Ev>:
 */
class Box : public Widget
{
public:
    /** Construct a new Box with a default alpha value of 255 (solid) */
    Box()
 800a038:	b580      	push	{r7, lr}
 800a03a:	b082      	sub	sp, #8
 800a03c:	af00      	add	r7, sp, #0
 800a03e:	6078      	str	r0, [r7, #4]
        : Widget(), alpha(255), color(0)
 800a040:	687b      	ldr	r3, [r7, #4]
 800a042:	4618      	mov	r0, r3
 800a044:	2326      	movs	r3, #38	@ 0x26
 800a046:	461a      	mov	r2, r3
 800a048:	2100      	movs	r1, #0
 800a04a:	f01c f908 	bl	802625e <memset>
 800a04e:	687b      	ldr	r3, [r7, #4]
 800a050:	4618      	mov	r0, r3
 800a052:	f7ff ffbd 	bl	8009fd0 <_ZN8touchgfx6WidgetC1Ev>
 800a056:	4a09      	ldr	r2, [pc, #36]	@ (800a07c <_ZN8touchgfx3BoxC1Ev+0x44>)
 800a058:	687b      	ldr	r3, [r7, #4]
 800a05a:	601a      	str	r2, [r3, #0]
 800a05c:	687b      	ldr	r3, [r7, #4]
 800a05e:	22ff      	movs	r2, #255	@ 0xff
 800a060:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
 800a064:	687b      	ldr	r3, [r7, #4]
 800a066:	3328      	adds	r3, #40	@ 0x28
 800a068:	2100      	movs	r1, #0
 800a06a:	4618      	mov	r0, r3
 800a06c:	f7ff fcee 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
    {
    }
 800a070:	687b      	ldr	r3, [r7, #4]
 800a072:	4618      	mov	r0, r3
 800a074:	3708      	adds	r7, #8
 800a076:	46bd      	mov	sp, r7
 800a078:	bd80      	pop	{r7, pc}
 800a07a:	bf00      	nop
 800a07c:	080293f8 	.word	0x080293f8

0800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>:
     *
     * @param  newColor The color of the box.
     *
     * @see getColor, Color::getColorFromRGB
     */
    void setColor(colortype newColor)
 800a080:	b480      	push	{r7}
 800a082:	b083      	sub	sp, #12
 800a084:	af00      	add	r7, sp, #0
 800a086:	6078      	str	r0, [r7, #4]
 800a088:	6039      	str	r1, [r7, #0]
    {
        color = newColor;
 800a08a:	687b      	ldr	r3, [r7, #4]
 800a08c:	683a      	ldr	r2, [r7, #0]
 800a08e:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800a090:	bf00      	nop
 800a092:	370c      	adds	r7, #12
 800a094:	46bd      	mov	sp, r7
 800a096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a09a:	4770      	bx	lr

0800a09c <_ZN8touchgfx3Box8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    void setAlpha(uint8_t newAlpha)
 800a09c:	b480      	push	{r7}
 800a09e:	b083      	sub	sp, #12
 800a0a0:	af00      	add	r7, sp, #0
 800a0a2:	6078      	str	r0, [r7, #4]
 800a0a4:	460b      	mov	r3, r1
 800a0a6:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a0a8:	687b      	ldr	r3, [r7, #4]
 800a0aa:	78fa      	ldrb	r2, [r7, #3]
 800a0ac:	f883 2026 	strb.w	r2, [r3, #38]	@ 0x26
    }
 800a0b0:	bf00      	nop
 800a0b2:	370c      	adds	r7, #12
 800a0b4:	46bd      	mov	sp, r7
 800a0b6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0ba:	4770      	bx	lr

0800a0bc <_ZN8touchgfx9TypedTextC1Et>:
    TypedText(const TypedTextId id = TYPED_TEXT_INVALID)
 800a0bc:	b480      	push	{r7}
 800a0be:	b083      	sub	sp, #12
 800a0c0:	af00      	add	r7, sp, #0
 800a0c2:	6078      	str	r0, [r7, #4]
 800a0c4:	460b      	mov	r3, r1
 800a0c6:	807b      	strh	r3, [r7, #2]
        : typedTextId(id)
 800a0c8:	4a06      	ldr	r2, [pc, #24]	@ (800a0e4 <_ZN8touchgfx9TypedTextC1Et+0x28>)
 800a0ca:	687b      	ldr	r3, [r7, #4]
 800a0cc:	601a      	str	r2, [r3, #0]
 800a0ce:	687b      	ldr	r3, [r7, #4]
 800a0d0:	887a      	ldrh	r2, [r7, #2]
 800a0d2:	809a      	strh	r2, [r3, #4]
    }
 800a0d4:	687b      	ldr	r3, [r7, #4]
 800a0d6:	4618      	mov	r0, r3
 800a0d8:	370c      	adds	r7, #12
 800a0da:	46bd      	mov	sp, r7
 800a0dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a0e0:	4770      	bx	lr
 800a0e2:	bf00      	nop
 800a0e4:	08028208 	.word	0x08028208

0800a0e8 <_ZN8touchgfx8TextAreaC1Ev>:
 *       the pointer remains valid when drawing.
 */
class TextArea : public Widget
{
public:
    TextArea()
 800a0e8:	b580      	push	{r7, lr}
 800a0ea:	b082      	sub	sp, #8
 800a0ec:	af00      	add	r7, sp, #0
 800a0ee:	6078      	str	r0, [r7, #4]
        : Widget(), typedText(TYPED_TEXT_INVALID), color(0), linespace(0), alpha(255), indentation(0), rotation(TEXT_ROTATE_0), wideTextAction(WIDE_TEXT_NONE), boundingArea()
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	4618      	mov	r0, r3
 800a0f4:	2326      	movs	r3, #38	@ 0x26
 800a0f6:	461a      	mov	r2, r3
 800a0f8:	2100      	movs	r1, #0
 800a0fa:	f01c f8b0 	bl	802625e <memset>
 800a0fe:	687b      	ldr	r3, [r7, #4]
 800a100:	4618      	mov	r0, r3
 800a102:	f7ff ff65 	bl	8009fd0 <_ZN8touchgfx6WidgetC1Ev>
 800a106:	4a16      	ldr	r2, [pc, #88]	@ (800a160 <_ZN8touchgfx8TextAreaC1Ev+0x78>)
 800a108:	687b      	ldr	r3, [r7, #4]
 800a10a:	601a      	str	r2, [r3, #0]
 800a10c:	687b      	ldr	r3, [r7, #4]
 800a10e:	3328      	adds	r3, #40	@ 0x28
 800a110:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800a114:	4618      	mov	r0, r3
 800a116:	f7ff ffd1 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800a11a:	687b      	ldr	r3, [r7, #4]
 800a11c:	3330      	adds	r3, #48	@ 0x30
 800a11e:	2100      	movs	r1, #0
 800a120:	4618      	mov	r0, r3
 800a122:	f7ff fc93 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800a126:	687b      	ldr	r3, [r7, #4]
 800a128:	2200      	movs	r2, #0
 800a12a:	869a      	strh	r2, [r3, #52]	@ 0x34
 800a12c:	687b      	ldr	r3, [r7, #4]
 800a12e:	22ff      	movs	r2, #255	@ 0xff
 800a130:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
 800a134:	687b      	ldr	r3, [r7, #4]
 800a136:	2200      	movs	r2, #0
 800a138:	f883 2037 	strb.w	r2, [r3, #55]	@ 0x37
 800a13c:	687b      	ldr	r3, [r7, #4]
 800a13e:	2200      	movs	r2, #0
 800a140:	f883 2038 	strb.w	r2, [r3, #56]	@ 0x38
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	2200      	movs	r2, #0
 800a148:	f883 2039 	strb.w	r2, [r3, #57]	@ 0x39
 800a14c:	687b      	ldr	r3, [r7, #4]
 800a14e:	333c      	adds	r3, #60	@ 0x3c
 800a150:	4618      	mov	r0, r3
 800a152:	f000 f8f0 	bl	800a336 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    {
    }
 800a156:	687b      	ldr	r3, [r7, #4]
 800a158:	4618      	mov	r0, r3
 800a15a:	3708      	adds	r7, #8
 800a15c:	46bd      	mov	sp, r7
 800a15e:	bd80      	pop	{r7, pc}
 800a160:	08029368 	.word	0x08029368

0800a164 <_ZN8touchgfx8TextArea8setWidthEs>:

    virtual void setWidth(int16_t width)
 800a164:	b590      	push	{r4, r7, lr}
 800a166:	b087      	sub	sp, #28
 800a168:	af00      	add	r7, sp, #0
 800a16a:	6178      	str	r0, [r7, #20]
 800a16c:	460b      	mov	r3, r1
 800a16e:	827b      	strh	r3, [r7, #18]
    {
        Widget::setWidth(width);
 800a170:	697b      	ldr	r3, [r7, #20]
 800a172:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a176:	4611      	mov	r1, r2
 800a178:	4618      	mov	r0, r3
 800a17a:	f7ff fd94 	bl	8009ca6 <_ZN8touchgfx8Drawable8setWidthEs>
        boundingArea = calculateBoundingArea();
 800a17e:	697b      	ldr	r3, [r7, #20]
 800a180:	681b      	ldr	r3, [r3, #0]
 800a182:	3384      	adds	r3, #132	@ 0x84
 800a184:	681b      	ldr	r3, [r3, #0]
 800a186:	697c      	ldr	r4, [r7, #20]
 800a188:	463a      	mov	r2, r7
 800a18a:	6979      	ldr	r1, [r7, #20]
 800a18c:	4610      	mov	r0, r2
 800a18e:	4798      	blx	r3
 800a190:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a194:	463a      	mov	r2, r7
 800a196:	ca07      	ldmia	r2, {r0, r1, r2}
 800a198:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a19c:	bf00      	nop
 800a19e:	371c      	adds	r7, #28
 800a1a0:	46bd      	mov	sp, r7
 800a1a2:	bd90      	pop	{r4, r7, pc}

0800a1a4 <_ZN8touchgfx8TextArea9setHeightEs>:

    virtual void setHeight(int16_t height)
 800a1a4:	b590      	push	{r4, r7, lr}
 800a1a6:	b087      	sub	sp, #28
 800a1a8:	af00      	add	r7, sp, #0
 800a1aa:	6178      	str	r0, [r7, #20]
 800a1ac:	460b      	mov	r3, r1
 800a1ae:	827b      	strh	r3, [r7, #18]
    {
        Widget::setHeight(height);
 800a1b0:	697b      	ldr	r3, [r7, #20]
 800a1b2:	f9b7 2012 	ldrsh.w	r2, [r7, #18]
 800a1b6:	4611      	mov	r1, r2
 800a1b8:	4618      	mov	r0, r3
 800a1ba:	f7ff fd83 	bl	8009cc4 <_ZN8touchgfx8Drawable9setHeightEs>
        boundingArea = calculateBoundingArea();
 800a1be:	697b      	ldr	r3, [r7, #20]
 800a1c0:	681b      	ldr	r3, [r3, #0]
 800a1c2:	3384      	adds	r3, #132	@ 0x84
 800a1c4:	681b      	ldr	r3, [r3, #0]
 800a1c6:	697c      	ldr	r4, [r7, #20]
 800a1c8:	463a      	mov	r2, r7
 800a1ca:	6979      	ldr	r1, [r7, #20]
 800a1cc:	4610      	mov	r0, r2
 800a1ce:	4798      	blx	r3
 800a1d0:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800a1d4:	463a      	mov	r2, r7
 800a1d6:	ca07      	ldmia	r2, {r0, r1, r2}
 800a1d8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800a1dc:	bf00      	nop
 800a1de:	371c      	adds	r7, #28
 800a1e0:	46bd      	mov	sp, r7
 800a1e2:	bd90      	pop	{r4, r7, pc}

0800a1e4 <_ZNK8touchgfx8TextArea12getSolidRectEv>:

    virtual Rect getSolidRect() const
 800a1e4:	b580      	push	{r7, lr}
 800a1e6:	b082      	sub	sp, #8
 800a1e8:	af00      	add	r7, sp, #0
 800a1ea:	6078      	str	r0, [r7, #4]
 800a1ec:	6039      	str	r1, [r7, #0]
    {
        return Rect();
 800a1ee:	6878      	ldr	r0, [r7, #4]
 800a1f0:	f7ff fc3b 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
    }
 800a1f4:	6878      	ldr	r0, [r7, #4]
 800a1f6:	3708      	adds	r7, #8
 800a1f8:	46bd      	mov	sp, r7
 800a1fa:	bd80      	pop	{r7, pc}

0800a1fc <_ZN8touchgfx8TextArea8setAlphaEh>:
    }

    /**
     * @copydoc Image::setAlpha
     */
    virtual void setAlpha(uint8_t newAlpha)
 800a1fc:	b480      	push	{r7}
 800a1fe:	b083      	sub	sp, #12
 800a200:	af00      	add	r7, sp, #0
 800a202:	6078      	str	r0, [r7, #4]
 800a204:	460b      	mov	r3, r1
 800a206:	70fb      	strb	r3, [r7, #3]
    {
        alpha = newAlpha;
 800a208:	687b      	ldr	r3, [r7, #4]
 800a20a:	78fa      	ldrb	r2, [r7, #3]
 800a20c:	f883 2036 	strb.w	r2, [r3, #54]	@ 0x36
    }
 800a210:	bf00      	nop
 800a212:	370c      	adds	r7, #12
 800a214:	46bd      	mov	sp, r7
 800a216:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a21a:	4770      	bx	lr

0800a21c <_ZN8touchgfx8TextArea12setBaselineYEs>:
     *
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setBaselineY(int16_t baselineY)
 800a21c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800a21e:	b085      	sub	sp, #20
 800a220:	af00      	add	r7, sp, #0
 800a222:	6078      	str	r0, [r7, #4]
 800a224:	460b      	mov	r3, r1
 800a226:	807b      	strh	r3, [r7, #2]
    {
        setY(baselineY - getTypedText().getFont()->getBaseline());
 800a228:	687e      	ldr	r6, [r7, #4]
 800a22a:	687b      	ldr	r3, [r7, #4]
 800a22c:	681b      	ldr	r3, [r3, #0]
 800a22e:	3334      	adds	r3, #52	@ 0x34
 800a230:	681c      	ldr	r4, [r3, #0]
 800a232:	887d      	ldrh	r5, [r7, #2]
 800a234:	6878      	ldr	r0, [r7, #4]
 800a236:	f000 f867 	bl	800a308 <_ZNK8touchgfx8TextArea12getTypedTextEv>
 800a23a:	4603      	mov	r3, r0
 800a23c:	60fb      	str	r3, [r7, #12]
     *
     * @return The font.
     */
    FORCE_INLINE_FUNCTION const Font* getFont() const
    {
        assert(typedTexts != 0 && "TypedText database has not been initialized.");
 800a23e:	4b1c      	ldr	r3, [pc, #112]	@ (800a2b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a240:	681b      	ldr	r3, [r3, #0]
 800a242:	2b00      	cmp	r3, #0
 800a244:	d105      	bne.n	800a252 <_ZN8touchgfx8TextArea12setBaselineYEs+0x36>
 800a246:	4b1b      	ldr	r3, [pc, #108]	@ (800a2b4 <_ZN8touchgfx8TextArea12setBaselineYEs+0x98>)
 800a248:	4a1b      	ldr	r2, [pc, #108]	@ (800a2b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a24a:	216c      	movs	r1, #108	@ 0x6c
 800a24c:	481b      	ldr	r0, [pc, #108]	@ (800a2bc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a24e:	f01b fdff 	bl	8025e50 <__assert_func>
 800a252:	68fb      	ldr	r3, [r7, #12]
 800a254:	60bb      	str	r3, [r7, #8]
        return typedTextId < numberOfTypedTexts;
 800a256:	68bb      	ldr	r3, [r7, #8]
 800a258:	889a      	ldrh	r2, [r3, #4]
 800a25a:	4b19      	ldr	r3, [pc, #100]	@ (800a2c0 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa4>)
 800a25c:	881b      	ldrh	r3, [r3, #0]
 800a25e:	429a      	cmp	r2, r3
 800a260:	bf34      	ite	cc
 800a262:	2301      	movcc	r3, #1
 800a264:	2300      	movcs	r3, #0
 800a266:	b2db      	uxtb	r3, r3
        assert(hasValidId() && "typedTextId larger than numberOfTypedTexts.");
 800a268:	2b00      	cmp	r3, #0
 800a26a:	d105      	bne.n	800a278 <_ZN8touchgfx8TextArea12setBaselineYEs+0x5c>
 800a26c:	4b15      	ldr	r3, [pc, #84]	@ (800a2c4 <_ZN8touchgfx8TextArea12setBaselineYEs+0xa8>)
 800a26e:	4a12      	ldr	r2, [pc, #72]	@ (800a2b8 <_ZN8touchgfx8TextArea12setBaselineYEs+0x9c>)
 800a270:	216d      	movs	r1, #109	@ 0x6d
 800a272:	4812      	ldr	r0, [pc, #72]	@ (800a2bc <_ZN8touchgfx8TextArea12setBaselineYEs+0xa0>)
 800a274:	f01b fdec 	bl	8025e50 <__assert_func>
        return fonts[typedTexts[typedTextId].fontIdx];
 800a278:	4b13      	ldr	r3, [pc, #76]	@ (800a2c8 <_ZN8touchgfx8TextArea12setBaselineYEs+0xac>)
 800a27a:	681a      	ldr	r2, [r3, #0]
 800a27c:	4b0c      	ldr	r3, [pc, #48]	@ (800a2b0 <_ZN8touchgfx8TextArea12setBaselineYEs+0x94>)
 800a27e:	6819      	ldr	r1, [r3, #0]
 800a280:	68fb      	ldr	r3, [r7, #12]
 800a282:	889b      	ldrh	r3, [r3, #4]
 800a284:	005b      	lsls	r3, r3, #1
 800a286:	440b      	add	r3, r1
 800a288:	781b      	ldrb	r3, [r3, #0]
 800a28a:	009b      	lsls	r3, r3, #2
 800a28c:	4413      	add	r3, r2
 800a28e:	681b      	ldr	r3, [r3, #0]
 800a290:	681a      	ldr	r2, [r3, #0]
 800a292:	3230      	adds	r2, #48	@ 0x30
 800a294:	6812      	ldr	r2, [r2, #0]
 800a296:	4618      	mov	r0, r3
 800a298:	4790      	blx	r2
 800a29a:	4603      	mov	r3, r0
 800a29c:	1aeb      	subs	r3, r5, r3
 800a29e:	b29b      	uxth	r3, r3
 800a2a0:	b21b      	sxth	r3, r3
 800a2a2:	4619      	mov	r1, r3
 800a2a4:	4630      	mov	r0, r6
 800a2a6:	47a0      	blx	r4
    }
 800a2a8:	bf00      	nop
 800a2aa:	3714      	adds	r7, #20
 800a2ac:	46bd      	mov	sp, r7
 800a2ae:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800a2b0:	20002fa4 	.word	0x20002fa4
 800a2b4:	08027440 	.word	0x08027440
 800a2b8:	08027484 	.word	0x08027484
 800a2bc:	080274c0 	.word	0x080274c0
 800a2c0:	20002fa8 	.word	0x20002fa8
 800a2c4:	08027504 	.word	0x08027504
 800a2c8:	20002fac 	.word	0x20002fac

0800a2cc <_ZN8touchgfx8TextArea13setXBaselineYEss>:
     * @param  x         The x coordinate of the TextArea.
     * @param  baselineY The y coordinate of the baseline of the text.
     *
     * @note setTypedText() must be called prior to setting the baseline.
     */
    virtual void setXBaselineY(int16_t x, int16_t baselineY)
 800a2cc:	b580      	push	{r7, lr}
 800a2ce:	b082      	sub	sp, #8
 800a2d0:	af00      	add	r7, sp, #0
 800a2d2:	6078      	str	r0, [r7, #4]
 800a2d4:	460b      	mov	r3, r1
 800a2d6:	807b      	strh	r3, [r7, #2]
 800a2d8:	4613      	mov	r3, r2
 800a2da:	803b      	strh	r3, [r7, #0]
    {
        setX(x);
 800a2dc:	687a      	ldr	r2, [r7, #4]
 800a2de:	687b      	ldr	r3, [r7, #4]
 800a2e0:	681b      	ldr	r3, [r3, #0]
 800a2e2:	3330      	adds	r3, #48	@ 0x30
 800a2e4:	681b      	ldr	r3, [r3, #0]
 800a2e6:	f9b7 1002 	ldrsh.w	r1, [r7, #2]
 800a2ea:	4610      	mov	r0, r2
 800a2ec:	4798      	blx	r3
        setBaselineY(baselineY);
 800a2ee:	687b      	ldr	r3, [r7, #4]
 800a2f0:	681b      	ldr	r3, [r3, #0]
 800a2f2:	3364      	adds	r3, #100	@ 0x64
 800a2f4:	681b      	ldr	r3, [r3, #0]
 800a2f6:	f9b7 2000 	ldrsh.w	r2, [r7]
 800a2fa:	4611      	mov	r1, r2
 800a2fc:	6878      	ldr	r0, [r7, #4]
 800a2fe:	4798      	blx	r3
    }
 800a300:	bf00      	nop
 800a302:	3708      	adds	r7, #8
 800a304:	46bd      	mov	sp, r7
 800a306:	bd80      	pop	{r7, pc}

0800a308 <_ZNK8touchgfx8TextArea12getTypedTextEv>:
    /**
     * Gets the TypedText of the text area.
     *
     * @return The currently used TypedText.
     */
    const TypedText& getTypedText() const
 800a308:	b480      	push	{r7}
 800a30a:	b083      	sub	sp, #12
 800a30c:	af00      	add	r7, sp, #0
 800a30e:	6078      	str	r0, [r7, #4]
    {
        return typedText;
 800a310:	687b      	ldr	r3, [r7, #4]
 800a312:	3328      	adds	r3, #40	@ 0x28
    }
 800a314:	4618      	mov	r0, r3
 800a316:	370c      	adds	r7, #12
 800a318:	46bd      	mov	sp, r7
 800a31a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a31e:	4770      	bx	lr

0800a320 <_ZNK8touchgfx8TextArea12getWildcard2Ev>:
     *
     * @return A pointer to the second wildcard, if this text area has two wildcards, otherwise 0.
     *
     * @see TextAreaWithOneWildcard, TextAreaWithTwoWildcards
     */
    virtual const Unicode::UnicodeChar* getWildcard2() const
 800a320:	b480      	push	{r7}
 800a322:	b083      	sub	sp, #12
 800a324:	af00      	add	r7, sp, #0
 800a326:	6078      	str	r0, [r7, #4]
    {
        return 0;
 800a328:	2300      	movs	r3, #0
    }
 800a32a:	4618      	mov	r0, r3
 800a32c:	370c      	adds	r7, #12
 800a32e:	46bd      	mov	sp, r7
 800a330:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a334:	4770      	bx	lr

0800a336 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>:
        }

        /**
         * Initializes a new instance of the BoundingArea class which is invalid by default.
         */
        BoundingArea()
 800a336:	b580      	push	{r7, lr}
 800a338:	b084      	sub	sp, #16
 800a33a:	af02      	add	r7, sp, #8
 800a33c:	6078      	str	r0, [r7, #4]
            : rect(Rect(0, 0, -1, -1)), // Negative width and height means invalid rectangle
 800a33e:	6878      	ldr	r0, [r7, #4]
 800a340:	f04f 33ff 	mov.w	r3, #4294967295
 800a344:	9300      	str	r3, [sp, #0]
 800a346:	f04f 33ff 	mov.w	r3, #4294967295
 800a34a:	2200      	movs	r2, #0
 800a34c:	2100      	movs	r1, #0
 800a34e:	f7ff fba3 	bl	8009a98 <_ZN8touchgfx4RectC1Essss>
              text(0)
 800a352:	687b      	ldr	r3, [r7, #4]
 800a354:	2200      	movs	r2, #0
 800a356:	609a      	str	r2, [r3, #8]
        {
        }
 800a358:	687b      	ldr	r3, [r7, #4]
 800a35a:	4618      	mov	r0, r3
 800a35c:	3708      	adds	r7, #8
 800a35e:	46bd      	mov	sp, r7
 800a360:	bd80      	pop	{r7, pc}
	...

0800a364 <_ZN8touchgfx9ContainerD1Ev>:
class Container : public Drawable
 800a364:	b580      	push	{r7, lr}
 800a366:	b082      	sub	sp, #8
 800a368:	af00      	add	r7, sp, #0
 800a36a:	6078      	str	r0, [r7, #4]
 800a36c:	4a05      	ldr	r2, [pc, #20]	@ (800a384 <_ZN8touchgfx9ContainerD1Ev+0x20>)
 800a36e:	687b      	ldr	r3, [r7, #4]
 800a370:	601a      	str	r2, [r3, #0]
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	4618      	mov	r0, r3
 800a376:	f7ff fbfb 	bl	8009b70 <_ZN8touchgfx8DrawableD1Ev>
 800a37a:	687b      	ldr	r3, [r7, #4]
 800a37c:	4618      	mov	r0, r3
 800a37e:	3708      	adds	r7, #8
 800a380:	46bd      	mov	sp, r7
 800a382:	bd80      	pop	{r7, pc}
 800a384:	0802909c 	.word	0x0802909c

0800a388 <_ZN8touchgfx9ContainerD0Ev>:
 800a388:	b580      	push	{r7, lr}
 800a38a:	b082      	sub	sp, #8
 800a38c:	af00      	add	r7, sp, #0
 800a38e:	6078      	str	r0, [r7, #4]
 800a390:	6878      	ldr	r0, [r7, #4]
 800a392:	f7ff ffe7 	bl	800a364 <_ZN8touchgfx9ContainerD1Ev>
 800a396:	212c      	movs	r1, #44	@ 0x2c
 800a398:	6878      	ldr	r0, [r7, #4]
 800a39a:	f01b fcaa 	bl	8025cf2 <_ZdlPvj>
 800a39e:	687b      	ldr	r3, [r7, #4]
 800a3a0:	4618      	mov	r0, r3
 800a3a2:	3708      	adds	r7, #8
 800a3a4:	46bd      	mov	sp, r7
 800a3a6:	bd80      	pop	{r7, pc}

0800a3a8 <_ZN8touchgfx23AbstractButtonContainerC1Ev>:
 * @see ClickButtonTrigger, RepeatButtonTrigger, ToggleButtonTrigger, TouchButtonTrigger
 */
class AbstractButtonContainer : public Container
{
public:
    AbstractButtonContainer()
 800a3a8:	b580      	push	{r7, lr}
 800a3aa:	b082      	sub	sp, #8
 800a3ac:	af00      	add	r7, sp, #0
 800a3ae:	6078      	str	r0, [r7, #4]
        : pressed(false), alpha(255), action(0)
 800a3b0:	687b      	ldr	r3, [r7, #4]
 800a3b2:	4618      	mov	r0, r3
 800a3b4:	f7ff fd82 	bl	8009ebc <_ZN8touchgfx9ContainerC1Ev>
 800a3b8:	4a0b      	ldr	r2, [pc, #44]	@ (800a3e8 <_ZN8touchgfx23AbstractButtonContainerC1Ev+0x40>)
 800a3ba:	687b      	ldr	r3, [r7, #4]
 800a3bc:	601a      	str	r2, [r3, #0]
 800a3be:	687b      	ldr	r3, [r7, #4]
 800a3c0:	2200      	movs	r2, #0
 800a3c2:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
 800a3c6:	687b      	ldr	r3, [r7, #4]
 800a3c8:	22ff      	movs	r2, #255	@ 0xff
 800a3ca:	f883 202d 	strb.w	r2, [r3, #45]	@ 0x2d
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	2200      	movs	r2, #0
 800a3d2:	631a      	str	r2, [r3, #48]	@ 0x30
    {
        setTouchable(true);
 800a3d4:	687b      	ldr	r3, [r7, #4]
 800a3d6:	2101      	movs	r1, #1
 800a3d8:	4618      	mov	r0, r3
 800a3da:	f7ff fcd5 	bl	8009d88 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800a3de:	687b      	ldr	r3, [r7, #4]
 800a3e0:	4618      	mov	r0, r3
 800a3e2:	3708      	adds	r7, #8
 800a3e4:	46bd      	mov	sp, r7
 800a3e6:	bd80      	pop	{r7, pc}
 800a3e8:	08028660 	.word	0x08028660

0800a3ec <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>:
     *
     * @param  isPressed True if is pressed, false if not.
     *
     * @see getPressed, handlePressedUpdated
     */
    void setPressed(bool isPressed)
 800a3ec:	b580      	push	{r7, lr}
 800a3ee:	b082      	sub	sp, #8
 800a3f0:	af00      	add	r7, sp, #0
 800a3f2:	6078      	str	r0, [r7, #4]
 800a3f4:	460b      	mov	r3, r1
 800a3f6:	70fb      	strb	r3, [r7, #3]
    {
        pressed = isPressed;
 800a3f8:	687b      	ldr	r3, [r7, #4]
 800a3fa:	78fa      	ldrb	r2, [r7, #3]
 800a3fc:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        handlePressedUpdated();
 800a400:	687b      	ldr	r3, [r7, #4]
 800a402:	681b      	ldr	r3, [r3, #0]
 800a404:	338c      	adds	r3, #140	@ 0x8c
 800a406:	681b      	ldr	r3, [r3, #0]
 800a408:	6878      	ldr	r0, [r7, #4]
 800a40a:	4798      	blx	r3
    }
 800a40c:	bf00      	nop
 800a40e:	3708      	adds	r7, #8
 800a410:	46bd      	mov	sp, r7
 800a412:	bd80      	pop	{r7, pc}

0800a414 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>:
     *
     * @return True if it succeeds, false if it fails.
     *
     * @see setPressed
     */
    bool getPressed() const
 800a414:	b480      	push	{r7}
 800a416:	b083      	sub	sp, #12
 800a418:	af00      	add	r7, sp, #0
 800a41a:	6078      	str	r0, [r7, #4]
    {
        return pressed;
 800a41c:	687b      	ldr	r3, [r7, #4]
 800a41e:	f893 302c 	ldrb.w	r3, [r3, #44]	@ 0x2c
    }
 800a422:	4618      	mov	r0, r3
 800a424:	370c      	adds	r7, #12
 800a426:	46bd      	mov	sp, r7
 800a428:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a42c:	4770      	bx	lr

0800a42e <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>:
        alpha = newAlpha;
        handleAlphaUpdated();
    }

    /** @copydoc Image::getAlpha() */
    uint8_t getAlpha() const
 800a42e:	b480      	push	{r7}
 800a430:	b083      	sub	sp, #12
 800a432:	af00      	add	r7, sp, #0
 800a434:	6078      	str	r0, [r7, #4]
    {
        return alpha;
 800a436:	687b      	ldr	r3, [r7, #4]
 800a438:	f893 302d 	ldrb.w	r3, [r3, #45]	@ 0x2d
    }
 800a43c:	4618      	mov	r0, r3
 800a43e:	370c      	adds	r7, #12
 800a440:	46bd      	mov	sp, r7
 800a442:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a446:	4770      	bx	lr

0800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     *
     * @param  callback The callback.
     *
     * @see executeAction
     */
    void setAction(GenericCallback<const AbstractButtonContainer&>& callback)
 800a448:	b480      	push	{r7}
 800a44a:	b083      	sub	sp, #12
 800a44c:	af00      	add	r7, sp, #0
 800a44e:	6078      	str	r0, [r7, #4]
 800a450:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	683a      	ldr	r2, [r7, #0]
 800a456:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800a458:	bf00      	nop
 800a45a:	370c      	adds	r7, #12
 800a45c:	46bd      	mov	sp, r7
 800a45e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a462:	4770      	bx	lr

0800a464 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv>:
    /**
     * Executes the previously set action.
     *
     * @see setAction
     */
    virtual void executeAction()
 800a464:	b580      	push	{r7, lr}
 800a466:	b082      	sub	sp, #8
 800a468:	af00      	add	r7, sp, #0
 800a46a:	6078      	str	r0, [r7, #4]
    {
        if (action && action->isValid())
 800a46c:	687b      	ldr	r3, [r7, #4]
 800a46e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a470:	2b00      	cmp	r3, #0
 800a472:	d00d      	beq.n	800a490 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a47c:	681b      	ldr	r3, [r3, #0]
 800a47e:	330c      	adds	r3, #12
 800a480:	681b      	ldr	r3, [r3, #0]
 800a482:	4610      	mov	r0, r2
 800a484:	4798      	blx	r3
 800a486:	4603      	mov	r3, r0
 800a488:	2b00      	cmp	r3, #0
 800a48a:	d001      	beq.n	800a490 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2c>
 800a48c:	2301      	movs	r3, #1
 800a48e:	e000      	b.n	800a492 <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x2e>
 800a490:	2300      	movs	r3, #0
 800a492:	2b00      	cmp	r3, #0
 800a494:	d009      	beq.n	800a4aa <_ZN8touchgfx23AbstractButtonContainer13executeActionEv+0x46>
        {
            action->execute(*this);
 800a496:	687b      	ldr	r3, [r7, #4]
 800a498:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 800a49a:	687b      	ldr	r3, [r7, #4]
 800a49c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800a49e:	681b      	ldr	r3, [r3, #0]
 800a4a0:	3308      	adds	r3, #8
 800a4a2:	681b      	ldr	r3, [r3, #0]
 800a4a4:	6879      	ldr	r1, [r7, #4]
 800a4a6:	4610      	mov	r0, r2
 800a4a8:	4798      	blx	r3
        }
    }
 800a4aa:	bf00      	nop
 800a4ac:	3708      	adds	r7, #8
 800a4ae:	46bd      	mov	sp, r7
 800a4b0:	bd80      	pop	{r7, pc}

0800a4b2 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>:
    uint8_t alpha; ///< The current alpha value. 255 denotes solid, 0 denotes completely invisible.

    GenericCallback<const AbstractButtonContainer&>* action; ///< The action to be executed

    /** Handles what should happen when the pressed state is updated. */
    virtual void handlePressedUpdated()
 800a4b2:	b480      	push	{r7}
 800a4b4:	b083      	sub	sp, #12
 800a4b6:	af00      	add	r7, sp, #0
 800a4b8:	6078      	str	r0, [r7, #4]
    {
    }
 800a4ba:	bf00      	nop
 800a4bc:	370c      	adds	r7, #12
 800a4be:	46bd      	mov	sp, r7
 800a4c0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4c4:	4770      	bx	lr

0800a4c6 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>:

    /** Handles what should happen when the alpha is updated. */
    virtual void handleAlphaUpdated()
 800a4c6:	b480      	push	{r7}
 800a4c8:	b083      	sub	sp, #12
 800a4ca:	af00      	add	r7, sp, #0
 800a4cc:	6078      	str	r0, [r7, #4]
    {
    }
 800a4ce:	bf00      	nop
 800a4d0:	370c      	adds	r7, #12
 800a4d2:	46bd      	mov	sp, r7
 800a4d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a4d8:	4770      	bx	lr
	...

0800a4dc <_ZN8touchgfx3BoxD1Ev>:
class Box : public Widget
 800a4dc:	b580      	push	{r7, lr}
 800a4de:	b082      	sub	sp, #8
 800a4e0:	af00      	add	r7, sp, #0
 800a4e2:	6078      	str	r0, [r7, #4]
 800a4e4:	4a05      	ldr	r2, [pc, #20]	@ (800a4fc <_ZN8touchgfx3BoxD1Ev+0x20>)
 800a4e6:	687b      	ldr	r3, [r7, #4]
 800a4e8:	601a      	str	r2, [r3, #0]
 800a4ea:	687b      	ldr	r3, [r7, #4]
 800a4ec:	4618      	mov	r0, r3
 800a4ee:	f7ff fd81 	bl	8009ff4 <_ZN8touchgfx6WidgetD1Ev>
 800a4f2:	687b      	ldr	r3, [r7, #4]
 800a4f4:	4618      	mov	r0, r3
 800a4f6:	3708      	adds	r7, #8
 800a4f8:	46bd      	mov	sp, r7
 800a4fa:	bd80      	pop	{r7, pc}
 800a4fc:	080293f8 	.word	0x080293f8

0800a500 <_ZN8touchgfx3BoxD0Ev>:
 800a500:	b580      	push	{r7, lr}
 800a502:	b082      	sub	sp, #8
 800a504:	af00      	add	r7, sp, #0
 800a506:	6078      	str	r0, [r7, #4]
 800a508:	6878      	ldr	r0, [r7, #4]
 800a50a:	f7ff ffe7 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800a50e:	212c      	movs	r1, #44	@ 0x2c
 800a510:	6878      	ldr	r0, [r7, #4]
 800a512:	f01b fbee 	bl	8025cf2 <_ZdlPvj>
 800a516:	687b      	ldr	r3, [r7, #4]
 800a518:	4618      	mov	r0, r3
 800a51a:	3708      	adds	r7, #8
 800a51c:	46bd      	mov	sp, r7
 800a51e:	bd80      	pop	{r7, pc}

0800a520 <_ZN8touchgfx13BoxWithBorderC1Ev>:
 * BoxWithBorder will function just like a Box.
 */
class BoxWithBorder : public Box
{
public:
    BoxWithBorder()
 800a520:	b580      	push	{r7, lr}
 800a522:	b082      	sub	sp, #8
 800a524:	af00      	add	r7, sp, #0
 800a526:	6078      	str	r0, [r7, #4]
        : Box(), borderColor(0), borderSize(0)
 800a528:	687b      	ldr	r3, [r7, #4]
 800a52a:	4618      	mov	r0, r3
 800a52c:	f7ff fd84 	bl	800a038 <_ZN8touchgfx3BoxC1Ev>
 800a530:	4a08      	ldr	r2, [pc, #32]	@ (800a554 <_ZN8touchgfx13BoxWithBorderC1Ev+0x34>)
 800a532:	687b      	ldr	r3, [r7, #4]
 800a534:	601a      	str	r2, [r3, #0]
 800a536:	687b      	ldr	r3, [r7, #4]
 800a538:	332c      	adds	r3, #44	@ 0x2c
 800a53a:	2100      	movs	r1, #0
 800a53c:	4618      	mov	r0, r3
 800a53e:	f7ff fa85 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800a542:	687b      	ldr	r3, [r7, #4]
 800a544:	2200      	movs	r2, #0
 800a546:	861a      	strh	r2, [r3, #48]	@ 0x30
    {
    }
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	4618      	mov	r0, r3
 800a54c:	3708      	adds	r7, #8
 800a54e:	46bd      	mov	sp, r7
 800a550:	bd80      	pop	{r7, pc}
 800a552:	bf00      	nop
 800a554:	08029564 	.word	0x08029564

0800a558 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>:
     *
     * @param  colorBorder The color of the border.
     *
     * @see setColor, getBorderColor, Color::getColorFromRGB
     */
    void setBorderColor(colortype colorBorder)
 800a558:	b480      	push	{r7}
 800a55a:	b083      	sub	sp, #12
 800a55c:	af00      	add	r7, sp, #0
 800a55e:	6078      	str	r0, [r7, #4]
 800a560:	6039      	str	r1, [r7, #0]
    {
        borderColor = colorBorder;
 800a562:	687b      	ldr	r3, [r7, #4]
 800a564:	683a      	ldr	r2, [r7, #0]
 800a566:	62da      	str	r2, [r3, #44]	@ 0x2c
    }
 800a568:	bf00      	nop
 800a56a:	370c      	adds	r7, #12
 800a56c:	46bd      	mov	sp, r7
 800a56e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a572:	4770      	bx	lr

0800a574 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>:
     *
     * @param  size The width of the border.
     *
     * @see getBorderSize
     */
    void setBorderSize(uint16_t size)
 800a574:	b480      	push	{r7}
 800a576:	b083      	sub	sp, #12
 800a578:	af00      	add	r7, sp, #0
 800a57a:	6078      	str	r0, [r7, #4]
 800a57c:	460b      	mov	r3, r1
 800a57e:	807b      	strh	r3, [r7, #2]
    {
        borderSize = size;
 800a580:	687b      	ldr	r3, [r7, #4]
 800a582:	887a      	ldrh	r2, [r7, #2]
 800a584:	861a      	strh	r2, [r3, #48]	@ 0x30
    }
 800a586:	bf00      	nop
 800a588:	370c      	adds	r7, #12
 800a58a:	46bd      	mov	sp, r7
 800a58c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a590:	4770      	bx	lr

0800a592 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE>:
     *
     * @param  event The click event.
     *
     * @see setAction, setPressed, getPressed
     */
    virtual void handleClickEvent(const ClickEvent& event)
 800a592:	b580      	push	{r7, lr}
 800a594:	b084      	sub	sp, #16
 800a596:	af00      	add	r7, sp, #0
 800a598:	6078      	str	r0, [r7, #4]
 800a59a:	6039      	str	r1, [r7, #0]
    {
        bool wasPressed = getPressed();
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	4618      	mov	r0, r3
 800a5a0:	f7ff ff38 	bl	800a414 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800a5a4:	4603      	mov	r3, r0
 800a5a6:	73fb      	strb	r3, [r7, #15]
        bool newPressedValue = (event.getType() == ClickEvent::PRESSED);
 800a5a8:	6838      	ldr	r0, [r7, #0]
 800a5aa:	f7ff faa5 	bl	8009af8 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a5ae:	4603      	mov	r3, r0
 800a5b0:	2b00      	cmp	r3, #0
 800a5b2:	bf0c      	ite	eq
 800a5b4:	2301      	moveq	r3, #1
 800a5b6:	2300      	movne	r3, #0
 800a5b8:	73bb      	strb	r3, [r7, #14]
        if ((newPressedValue && !wasPressed) || (!newPressedValue && wasPressed))
 800a5ba:	7bbb      	ldrb	r3, [r7, #14]
 800a5bc:	2b00      	cmp	r3, #0
 800a5be:	d005      	beq.n	800a5cc <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x3a>
 800a5c0:	7bfb      	ldrb	r3, [r7, #15]
 800a5c2:	f083 0301 	eor.w	r3, r3, #1
 800a5c6:	b2db      	uxtb	r3, r3
 800a5c8:	2b00      	cmp	r3, #0
 800a5ca:	d108      	bne.n	800a5de <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x4c>
 800a5cc:	7bbb      	ldrb	r3, [r7, #14]
 800a5ce:	f083 0301 	eor.w	r3, r3, #1
 800a5d2:	b2db      	uxtb	r3, r3
 800a5d4:	2b00      	cmp	r3, #0
 800a5d6:	d00f      	beq.n	800a5f8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
 800a5d8:	7bfb      	ldrb	r3, [r7, #15]
 800a5da:	2b00      	cmp	r3, #0
 800a5dc:	d00c      	beq.n	800a5f8 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x66>
        {
            setPressed(newPressedValue);
 800a5de:	687b      	ldr	r3, [r7, #4]
 800a5e0:	7bba      	ldrb	r2, [r7, #14]
 800a5e2:	4611      	mov	r1, r2
 800a5e4:	4618      	mov	r0, r3
 800a5e6:	f7ff ff01 	bl	800a3ec <_ZN8touchgfx23AbstractButtonContainer10setPressedEb>
            invalidate();
 800a5ea:	687a      	ldr	r2, [r7, #4]
 800a5ec:	687b      	ldr	r3, [r7, #4]
 800a5ee:	681b      	ldr	r3, [r3, #0]
 800a5f0:	3314      	adds	r3, #20
 800a5f2:	681b      	ldr	r3, [r3, #0]
 800a5f4:	4610      	mov	r0, r2
 800a5f6:	4798      	blx	r3
        }
        if (wasPressed && (event.getType() == ClickEvent::RELEASED))
 800a5f8:	7bfb      	ldrb	r3, [r7, #15]
 800a5fa:	2b00      	cmp	r3, #0
 800a5fc:	d007      	beq.n	800a60e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a5fe:	6838      	ldr	r0, [r7, #0]
 800a600:	f7ff fa7a 	bl	8009af8 <_ZNK8touchgfx10ClickEvent7getTypeEv>
 800a604:	4603      	mov	r3, r0
 800a606:	2b01      	cmp	r3, #1
 800a608:	d101      	bne.n	800a60e <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7c>
 800a60a:	2301      	movs	r3, #1
 800a60c:	e000      	b.n	800a610 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x7e>
 800a60e:	2300      	movs	r3, #0
 800a610:	2b00      	cmp	r3, #0
 800a612:	d006      	beq.n	800a622 <_ZN8touchgfx18ClickButtonTrigger16handleClickEventERKNS_10ClickEventE+0x90>
        {
            executeAction();
 800a614:	687a      	ldr	r2, [r7, #4]
 800a616:	687b      	ldr	r3, [r7, #4]
 800a618:	681b      	ldr	r3, [r3, #0]
 800a61a:	3388      	adds	r3, #136	@ 0x88
 800a61c:	681b      	ldr	r3, [r3, #0]
 800a61e:	4610      	mov	r0, r2
 800a620:	4798      	blx	r3
        }
    }
 800a622:	bf00      	nop
 800a624:	3710      	adds	r7, #16
 800a626:	46bd      	mov	sp, r7
 800a628:	bd80      	pop	{r7, pc}
	...

0800a62c <_ZN8touchgfx23AbstractButtonContainerD1Ev>:
class AbstractButtonContainer : public Container
 800a62c:	b580      	push	{r7, lr}
 800a62e:	b082      	sub	sp, #8
 800a630:	af00      	add	r7, sp, #0
 800a632:	6078      	str	r0, [r7, #4]
 800a634:	4a05      	ldr	r2, [pc, #20]	@ (800a64c <_ZN8touchgfx23AbstractButtonContainerD1Ev+0x20>)
 800a636:	687b      	ldr	r3, [r7, #4]
 800a638:	601a      	str	r2, [r3, #0]
 800a63a:	687b      	ldr	r3, [r7, #4]
 800a63c:	4618      	mov	r0, r3
 800a63e:	f7ff fe91 	bl	800a364 <_ZN8touchgfx9ContainerD1Ev>
 800a642:	687b      	ldr	r3, [r7, #4]
 800a644:	4618      	mov	r0, r3
 800a646:	3708      	adds	r7, #8
 800a648:	46bd      	mov	sp, r7
 800a64a:	bd80      	pop	{r7, pc}
 800a64c:	08028660 	.word	0x08028660

0800a650 <_ZN8touchgfx23AbstractButtonContainerD0Ev>:
 800a650:	b580      	push	{r7, lr}
 800a652:	b082      	sub	sp, #8
 800a654:	af00      	add	r7, sp, #0
 800a656:	6078      	str	r0, [r7, #4]
 800a658:	6878      	ldr	r0, [r7, #4]
 800a65a:	f7ff ffe7 	bl	800a62c <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800a65e:	2134      	movs	r1, #52	@ 0x34
 800a660:	6878      	ldr	r0, [r7, #4]
 800a662:	f01b fb46 	bl	8025cf2 <_ZdlPvj>
 800a666:	687b      	ldr	r3, [r7, #4]
 800a668:	4618      	mov	r0, r3
 800a66a:	3708      	adds	r7, #8
 800a66c:	46bd      	mov	sp, r7
 800a66e:	bd80      	pop	{r7, pc}

0800a670 <_ZN8touchgfx8TextAreaD1Ev>:
class TextArea : public Widget
 800a670:	b580      	push	{r7, lr}
 800a672:	b082      	sub	sp, #8
 800a674:	af00      	add	r7, sp, #0
 800a676:	6078      	str	r0, [r7, #4]
 800a678:	4a08      	ldr	r2, [pc, #32]	@ (800a69c <_ZN8touchgfx8TextAreaD1Ev+0x2c>)
 800a67a:	687b      	ldr	r3, [r7, #4]
 800a67c:	601a      	str	r2, [r3, #0]
 800a67e:	687b      	ldr	r3, [r7, #4]
 800a680:	3328      	adds	r3, #40	@ 0x28
 800a682:	4618      	mov	r0, r3
 800a684:	f7fd fe36 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
 800a688:	687b      	ldr	r3, [r7, #4]
 800a68a:	4618      	mov	r0, r3
 800a68c:	f7ff fcb2 	bl	8009ff4 <_ZN8touchgfx6WidgetD1Ev>
 800a690:	687b      	ldr	r3, [r7, #4]
 800a692:	4618      	mov	r0, r3
 800a694:	3708      	adds	r7, #8
 800a696:	46bd      	mov	sp, r7
 800a698:	bd80      	pop	{r7, pc}
 800a69a:	bf00      	nop
 800a69c:	08029368 	.word	0x08029368

0800a6a0 <_ZN8touchgfx8TextAreaD0Ev>:
 800a6a0:	b580      	push	{r7, lr}
 800a6a2:	b082      	sub	sp, #8
 800a6a4:	af00      	add	r7, sp, #0
 800a6a6:	6078      	str	r0, [r7, #4]
 800a6a8:	6878      	ldr	r0, [r7, #4]
 800a6aa:	f7ff ffe1 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800a6ae:	2148      	movs	r1, #72	@ 0x48
 800a6b0:	6878      	ldr	r0, [r7, #4]
 800a6b2:	f01b fb1e 	bl	8025cf2 <_ZdlPvj>
 800a6b6:	687b      	ldr	r3, [r7, #4]
 800a6b8:	4618      	mov	r0, r3
 800a6ba:	3708      	adds	r7, #8
 800a6bc:	46bd      	mov	sp, r7
 800a6be:	bd80      	pop	{r7, pc}

0800a6c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>:
 *
 */
class TextAreaWithWildcardBase : public TextArea
{
public:
    TextAreaWithWildcardBase()
 800a6c0:	b580      	push	{r7, lr}
 800a6c2:	b082      	sub	sp, #8
 800a6c4:	af00      	add	r7, sp, #0
 800a6c6:	6078      	str	r0, [r7, #4]
        : TextArea()
 800a6c8:	687b      	ldr	r3, [r7, #4]
 800a6ca:	4618      	mov	r0, r3
 800a6cc:	f7ff fd0c 	bl	800a0e8 <_ZN8touchgfx8TextAreaC1Ev>
 800a6d0:	4a03      	ldr	r2, [pc, #12]	@ (800a6e0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev+0x20>)
 800a6d2:	687b      	ldr	r3, [r7, #4]
 800a6d4:	601a      	str	r2, [r3, #0]
    {
    }
 800a6d6:	687b      	ldr	r3, [r7, #4]
 800a6d8:	4618      	mov	r0, r3
 800a6da:	3708      	adds	r7, #8
 800a6dc:	46bd      	mov	sp, r7
 800a6de:	bd80      	pop	{r7, pc}
 800a6e0:	080294d4 	.word	0x080294d4

0800a6e4 <_ZNK8touchgfx24TextAreaWithWildcardBase17invalidateContentEv>:

    virtual void draw(const Rect& area) const;

    virtual void invalidateContent() const
 800a6e4:	b580      	push	{r7, lr}
 800a6e6:	b082      	sub	sp, #8
 800a6e8:	af00      	add	r7, sp, #0
 800a6ea:	6078      	str	r0, [r7, #4]
    {
        Widget::invalidateContent();
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	4618      	mov	r0, r3
 800a6f0:	f7ff fa5e 	bl	8009bb0 <_ZNK8touchgfx8Drawable17invalidateContentEv>
    }
 800a6f4:	bf00      	nop
 800a6f6:	3708      	adds	r7, #8
 800a6f8:	46bd      	mov	sp, r7
 800a6fa:	bd80      	pop	{r7, pc}

0800a6fc <_ZNK8touchgfx24TextAreaWithWildcardBase21calculateBoundingAreaEv>:

protected:
    virtual TextArea::BoundingArea calculateBoundingArea() const
 800a6fc:	b580      	push	{r7, lr}
 800a6fe:	b082      	sub	sp, #8
 800a700:	af00      	add	r7, sp, #0
 800a702:	6078      	str	r0, [r7, #4]
 800a704:	6039      	str	r1, [r7, #0]
    {
        return TextArea::BoundingArea();
 800a706:	6878      	ldr	r0, [r7, #4]
 800a708:	f7ff fe15 	bl	800a336 <_ZN8touchgfx8TextArea12BoundingAreaC1Ev>
    }
 800a70c:	6878      	ldr	r0, [r7, #4]
 800a70e:	3708      	adds	r7, #8
 800a710:	46bd      	mov	sp, r7
 800a712:	bd80      	pop	{r7, pc}

0800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>:
class TextAreaWithWildcardBase : public TextArea
 800a714:	b580      	push	{r7, lr}
 800a716:	b082      	sub	sp, #8
 800a718:	af00      	add	r7, sp, #0
 800a71a:	6078      	str	r0, [r7, #4]
 800a71c:	4a05      	ldr	r2, [pc, #20]	@ (800a734 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev+0x20>)
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	601a      	str	r2, [r3, #0]
 800a722:	687b      	ldr	r3, [r7, #4]
 800a724:	4618      	mov	r0, r3
 800a726:	f7ff ffa3 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	4618      	mov	r0, r3
 800a72e:	3708      	adds	r7, #8
 800a730:	46bd      	mov	sp, r7
 800a732:	bd80      	pop	{r7, pc}
 800a734:	080294d4 	.word	0x080294d4

0800a738 <_ZN8touchgfx24TextAreaWithWildcardBaseD0Ev>:
 800a738:	b580      	push	{r7, lr}
 800a73a:	b082      	sub	sp, #8
 800a73c:	af00      	add	r7, sp, #0
 800a73e:	6078      	str	r0, [r7, #4]
 800a740:	6878      	ldr	r0, [r7, #4]
 800a742:	f7ff ffe7 	bl	800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800a746:	2148      	movs	r1, #72	@ 0x48
 800a748:	6878      	ldr	r0, [r7, #4]
 800a74a:	f01b fad2 	bl	8025cf2 <_ZdlPvj>
 800a74e:	687b      	ldr	r3, [r7, #4]
 800a750:	4618      	mov	r0, r3
 800a752:	3708      	adds	r7, #8
 800a754:	46bd      	mov	sp, r7
 800a756:	bd80      	pop	{r7, pc}

0800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>:
 *       replaced by a wildcard text.
 */
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
{
public:
    TextAreaWithOneWildcard()
 800a758:	b580      	push	{r7, lr}
 800a75a:	b082      	sub	sp, #8
 800a75c:	af00      	add	r7, sp, #0
 800a75e:	6078      	str	r0, [r7, #4]
        : TextAreaWithWildcardBase(), wc1(0)
 800a760:	687b      	ldr	r3, [r7, #4]
 800a762:	4618      	mov	r0, r3
 800a764:	f7ff ffac 	bl	800a6c0 <_ZN8touchgfx24TextAreaWithWildcardBaseC1Ev>
 800a768:	4a05      	ldr	r2, [pc, #20]	@ (800a780 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev+0x28>)
 800a76a:	687b      	ldr	r3, [r7, #4]
 800a76c:	601a      	str	r2, [r3, #0]
 800a76e:	687b      	ldr	r3, [r7, #4]
 800a770:	2200      	movs	r2, #0
 800a772:	649a      	str	r2, [r3, #72]	@ 0x48
    {
    }
 800a774:	687b      	ldr	r3, [r7, #4]
 800a776:	4618      	mov	r0, r3
 800a778:	3708      	adds	r7, #8
 800a77a:	46bd      	mov	sp, r7
 800a77c:	bd80      	pop	{r7, pc}
 800a77e:	bf00      	nop
 800a780:	0802851c 	.word	0x0802851c

0800a784 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard1(const Unicode::UnicodeChar* value)
 800a784:	b480      	push	{r7}
 800a786:	b083      	sub	sp, #12
 800a788:	af00      	add	r7, sp, #0
 800a78a:	6078      	str	r0, [r7, #4]
 800a78c:	6039      	str	r1, [r7, #0]
    {
        wc1 = value;
 800a78e:	687b      	ldr	r3, [r7, #4]
 800a790:	683a      	ldr	r2, [r7, #0]
 800a792:	649a      	str	r2, [r3, #72]	@ 0x48
    }
 800a794:	bf00      	nop
 800a796:	370c      	adds	r7, #12
 800a798:	46bd      	mov	sp, r7
 800a79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a79e:	4770      	bx	lr

0800a7a0 <_ZNK8touchgfx23TextAreaWithOneWildcard12getWildcard1Ev>:

    virtual const Unicode::UnicodeChar* getWildcard1() const
 800a7a0:	b480      	push	{r7}
 800a7a2:	b083      	sub	sp, #12
 800a7a4:	af00      	add	r7, sp, #0
 800a7a6:	6078      	str	r0, [r7, #4]
    {
        return wc1;
 800a7a8:	687b      	ldr	r3, [r7, #4]
 800a7aa:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
    }
 800a7ac:	4618      	mov	r0, r3
 800a7ae:	370c      	adds	r7, #12
 800a7b0:	46bd      	mov	sp, r7
 800a7b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7b6:	4770      	bx	lr

0800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>:
     * @param  value A pointer to the UnicodeChar to set the wildcard to.
     *
     * @note The pointer passed is saved, and must be accessible whenever TextAreaWithOneWildcard
     *       may need it.
     */
    void setWildcard(const Unicode::UnicodeChar* value)
 800a7b8:	b580      	push	{r7, lr}
 800a7ba:	b082      	sub	sp, #8
 800a7bc:	af00      	add	r7, sp, #0
 800a7be:	6078      	str	r0, [r7, #4]
 800a7c0:	6039      	str	r1, [r7, #0]
    {
        setWildcard1(value);
 800a7c2:	6839      	ldr	r1, [r7, #0]
 800a7c4:	6878      	ldr	r0, [r7, #4]
 800a7c6:	f7ff ffdd 	bl	800a784 <_ZN8touchgfx23TextAreaWithOneWildcard12setWildcard1EPKt>
    }
 800a7ca:	bf00      	nop
 800a7cc:	3708      	adds	r7, #8
 800a7ce:	46bd      	mov	sp, r7
 800a7d0:	bd80      	pop	{r7, pc}

0800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>:
     * @param  callback The callback to be executed. The callback will be executed with a
     *                  reference to the AbstractButton.
     *
     * @see GenericCallback, handleClickEvent, ClickEvent
     */
    void setAction(GenericCallback<const AbstractButton&>& callback)
 800a7d2:	b480      	push	{r7}
 800a7d4:	b083      	sub	sp, #12
 800a7d6:	af00      	add	r7, sp, #0
 800a7d8:	6078      	str	r0, [r7, #4]
 800a7da:	6039      	str	r1, [r7, #0]
    {
        action = &callback;
 800a7dc:	687b      	ldr	r3, [r7, #4]
 800a7de:	683a      	ldr	r2, [r7, #0]
 800a7e0:	629a      	str	r2, [r3, #40]	@ 0x28
    }
 800a7e2:	bf00      	nop
 800a7e4:	370c      	adds	r7, #12
 800a7e6:	46bd      	mov	sp, r7
 800a7e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a7ec:	4770      	bx	lr
	...

0800a7f0 <_ZN8touchgfx14AbstractButtonD1Ev>:
class AbstractButton : public Widget
 800a7f0:	b580      	push	{r7, lr}
 800a7f2:	b082      	sub	sp, #8
 800a7f4:	af00      	add	r7, sp, #0
 800a7f6:	6078      	str	r0, [r7, #4]
 800a7f8:	4a05      	ldr	r2, [pc, #20]	@ (800a810 <_ZN8touchgfx14AbstractButtonD1Ev+0x20>)
 800a7fa:	687b      	ldr	r3, [r7, #4]
 800a7fc:	601a      	str	r2, [r3, #0]
 800a7fe:	687b      	ldr	r3, [r7, #4]
 800a800:	4618      	mov	r0, r3
 800a802:	f7ff fbf7 	bl	8009ff4 <_ZN8touchgfx6WidgetD1Ev>
 800a806:	687b      	ldr	r3, [r7, #4]
 800a808:	4618      	mov	r0, r3
 800a80a:	3708      	adds	r7, #8
 800a80c:	46bd      	mov	sp, r7
 800a80e:	bd80      	pop	{r7, pc}
 800a810:	08029284 	.word	0x08029284

0800a814 <_ZN8touchgfx14AbstractButtonD0Ev>:
 800a814:	b580      	push	{r7, lr}
 800a816:	b082      	sub	sp, #8
 800a818:	af00      	add	r7, sp, #0
 800a81a:	6078      	str	r0, [r7, #4]
 800a81c:	6878      	ldr	r0, [r7, #4]
 800a81e:	f7ff ffe7 	bl	800a7f0 <_ZN8touchgfx14AbstractButtonD1Ev>
 800a822:	2130      	movs	r1, #48	@ 0x30
 800a824:	6878      	ldr	r0, [r7, #4]
 800a826:	f01b fa64 	bl	8025cf2 <_ZdlPvj>
 800a82a:	687b      	ldr	r3, [r7, #4]
 800a82c:	4618      	mov	r0, r3
 800a82e:	3708      	adds	r7, #8
 800a830:	46bd      	mov	sp, r7
 800a832:	bd80      	pop	{r7, pc}

0800a834 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconX(int16_t x)
 800a834:	b480      	push	{r7}
 800a836:	b083      	sub	sp, #12
 800a838:	af00      	add	r7, sp, #0
 800a83a:	6078      	str	r0, [r7, #4]
 800a83c:	460b      	mov	r3, r1
 800a83e:	807b      	strh	r3, [r7, #2]
    {
        iconX = x;
 800a840:	687b      	ldr	r3, [r7, #4]
 800a842:	887a      	ldrh	r2, [r7, #2]
 800a844:	871a      	strh	r2, [r3, #56]	@ 0x38
    }
 800a846:	bf00      	nop
 800a848:	370c      	adds	r7, #12
 800a84a:	46bd      	mov	sp, r7
 800a84c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a850:	4770      	bx	lr

0800a852 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The value set is overwritten on a subsequent call to setBitmaps.
     */
    void setIconY(int16_t y)
 800a852:	b480      	push	{r7}
 800a854:	b083      	sub	sp, #12
 800a856:	af00      	add	r7, sp, #0
 800a858:	6078      	str	r0, [r7, #4]
 800a85a:	460b      	mov	r3, r1
 800a85c:	807b      	strh	r3, [r7, #2]
    {
        iconY = y;
 800a85e:	687b      	ldr	r3, [r7, #4]
 800a860:	887a      	ldrh	r2, [r7, #2]
 800a862:	875a      	strh	r2, [r3, #58]	@ 0x3a
    }
 800a864:	bf00      	nop
 800a866:	370c      	adds	r7, #12
 800a868:	46bd      	mov	sp, r7
 800a86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a86e:	4770      	bx	lr

0800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>:
     *           allowed.
     *
     * @note The user code must call invalidate() in order to update the button on the display.
     * @note The values set are overwritten on a subsequent call to setBitmaps.
     */
    void setIconXY(int16_t x, int16_t y)
 800a870:	b580      	push	{r7, lr}
 800a872:	b082      	sub	sp, #8
 800a874:	af00      	add	r7, sp, #0
 800a876:	6078      	str	r0, [r7, #4]
 800a878:	460b      	mov	r3, r1
 800a87a:	807b      	strh	r3, [r7, #2]
 800a87c:	4613      	mov	r3, r2
 800a87e:	803b      	strh	r3, [r7, #0]
    {
        setIconX(x);
 800a880:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 800a884:	4619      	mov	r1, r3
 800a886:	6878      	ldr	r0, [r7, #4]
 800a888:	f7ff ffd4 	bl	800a834 <_ZN8touchgfx14ButtonWithIcon8setIconXEs>
        setIconY(y);
 800a88c:	f9b7 3000 	ldrsh.w	r3, [r7]
 800a890:	4619      	mov	r1, r3
 800a892:	6878      	ldr	r0, [r7, #4]
 800a894:	f7ff ffdd 	bl	800a852 <_ZN8touchgfx14ButtonWithIcon8setIconYEs>
    }
 800a898:	bf00      	nop
 800a89a:	3708      	adds	r7, #8
 800a89c:	46bd      	mov	sp, r7
 800a89e:	bd80      	pop	{r7, pc}

0800a8a0 <_ZN23humidity_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800a8a0:	b480      	push	{r7}
 800a8a2:	b083      	sub	sp, #12
 800a8a4:	af00      	add	r7, sp, #0
 800a8a6:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a8a8:	bf00      	nop
 800a8aa:	370c      	adds	r7, #12
 800a8ac:	46bd      	mov	sp, r7
 800a8ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8b2:	4770      	bx	lr

0800a8b4 <_ZN23humidity_screenViewBase8decreaseEv>:
    virtual void decrease()
 800a8b4:	b480      	push	{r7}
 800a8b6:	b083      	sub	sp, #12
 800a8b8:	af00      	add	r7, sp, #0
 800a8ba:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in humidity_screen
    }
 800a8bc:	bf00      	nop
 800a8be:	370c      	adds	r7, #12
 800a8c0:	46bd      	mov	sp, r7
 800a8c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a8c6:	4770      	bx	lr

0800a8c8 <_ZN23humidity_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800a8c8:	b580      	push	{r7, lr}
 800a8ca:	b082      	sub	sp, #8
 800a8cc:	af00      	add	r7, sp, #0
 800a8ce:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800a8d0:	f009 fcb6 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800a8d4:	4603      	mov	r3, r0
    }
 800a8d6:	4618      	mov	r0, r3
 800a8d8:	3708      	adds	r7, #8
 800a8da:	46bd      	mov	sp, r7
 800a8dc:	bd80      	pop	{r7, pc}
	...

0800a8e0 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>:
class View : public Screen
 800a8e0:	b580      	push	{r7, lr}
 800a8e2:	b082      	sub	sp, #8
 800a8e4:	af00      	add	r7, sp, #0
 800a8e6:	6078      	str	r0, [r7, #4]
 800a8e8:	4a05      	ldr	r2, [pc, #20]	@ (800a900 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev+0x20>)
 800a8ea:	687b      	ldr	r3, [r7, #4]
 800a8ec:	601a      	str	r2, [r3, #0]
 800a8ee:	687b      	ldr	r3, [r7, #4]
 800a8f0:	4618      	mov	r0, r3
 800a8f2:	f7ff fb05 	bl	8009f00 <_ZN8touchgfx6ScreenD1Ev>
 800a8f6:	687b      	ldr	r3, [r7, #4]
 800a8f8:	4618      	mov	r0, r3
 800a8fa:	3708      	adds	r7, #8
 800a8fc:	46bd      	mov	sp, r7
 800a8fe:	bd80      	pop	{r7, pc}
 800a900:	080284d0 	.word	0x080284d0

0800a904 <_ZN8touchgfx4ViewI24humidity_screenPresenterED0Ev>:
 800a904:	b580      	push	{r7, lr}
 800a906:	b082      	sub	sp, #8
 800a908:	af00      	add	r7, sp, #0
 800a90a:	6078      	str	r0, [r7, #4]
 800a90c:	6878      	ldr	r0, [r7, #4]
 800a90e:	f7ff ffe7 	bl	800a8e0 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800a912:	2140      	movs	r1, #64	@ 0x40
 800a914:	6878      	ldr	r0, [r7, #4]
 800a916:	f01b f9ec 	bl	8025cf2 <_ZdlPvj>
 800a91a:	687b      	ldr	r3, [r7, #4]
 800a91c:	4618      	mov	r0, r3
 800a91e:	3708      	adds	r7, #8
 800a920:	46bd      	mov	sp, r7
 800a922:	bd80      	pop	{r7, pc}

0800a924 <_ZN23humidity_screenViewBaseC1Ev>:
#include <gui_generated/humidity_screen_screen/humidity_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

humidity_screenViewBase::humidity_screenViewBase() :
 800a924:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800a928:	b0ae      	sub	sp, #184	@ 0xb8
 800a92a:	af02      	add	r7, sp, #8
 800a92c:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a92e:	697b      	ldr	r3, [r7, #20]
 800a930:	4618      	mov	r0, r3
 800a932:	f000 fb37 	bl	800afa4 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>
 800a936:	4add      	ldr	r2, [pc, #884]	@ (800acac <_ZN23humidity_screenViewBaseC1Ev+0x388>)
 800a938:	697b      	ldr	r3, [r7, #20]
 800a93a:	601a      	str	r2, [r3, #0]
 800a93c:	697b      	ldr	r3, [r7, #20]
 800a93e:	3340      	adds	r3, #64	@ 0x40
 800a940:	4618      	mov	r0, r3
 800a942:	f7ff fb79 	bl	800a038 <_ZN8touchgfx3BoxC1Ev>
 800a946:	697b      	ldr	r3, [r7, #20]
 800a948:	336c      	adds	r3, #108	@ 0x6c
 800a94a:	4618      	mov	r0, r3
 800a94c:	f7ff fbcc 	bl	800a0e8 <_ZN8touchgfx8TextAreaC1Ev>
 800a950:	697b      	ldr	r3, [r7, #20]
 800a952:	33b4      	adds	r3, #180	@ 0xb4
 800a954:	4618      	mov	r0, r3
 800a956:	f000 fb91 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800a95a:	697b      	ldr	r3, [r7, #20]
 800a95c:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800a960:	4618      	mov	r0, r3
 800a962:	f7ff fef9 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800a966:	697b      	ldr	r3, [r7, #20]
 800a968:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800a96c:	4618      	mov	r0, r3
 800a96e:	f007 ff65 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800a972:	697b      	ldr	r3, [r7, #20]
 800a974:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800a978:	4618      	mov	r0, r3
 800a97a:	f007 ff5f 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &humidity_screenViewBase::flexButtonCallbackHandler),
 800a97e:	697b      	ldr	r3, [r7, #20]
 800a980:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800a984:	4bca      	ldr	r3, [pc, #808]	@ (800acb0 <_ZN23humidity_screenViewBaseC1Ev+0x38c>)
 800a986:	627b      	str	r3, [r7, #36]	@ 0x24
 800a988:	2300      	movs	r3, #0
 800a98a:	62bb      	str	r3, [r7, #40]	@ 0x28
 800a98c:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800a990:	cb0c      	ldmia	r3, {r2, r3}
 800a992:	6979      	ldr	r1, [r7, #20]
 800a994:	f000 fbc2 	bl	800b11c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &humidity_screenViewBase::buttonCallbackHandler)
 800a998:	697b      	ldr	r3, [r7, #20]
 800a99a:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800a99e:	4bc5      	ldr	r3, [pc, #788]	@ (800acb4 <_ZN23humidity_screenViewBaseC1Ev+0x390>)
 800a9a0:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800a9a2:	2300      	movs	r3, #0
 800a9a4:	633b      	str	r3, [r7, #48]	@ 0x30
 800a9a6:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800a9aa:	cb0c      	ldmia	r3, {r2, r3}
 800a9ac:	6979      	ldr	r1, [r7, #20]
 800a9ae:	f000 fbe5 	bl	800b17c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800a9b2:	697b      	ldr	r3, [r7, #20]
 800a9b4:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800a9b8:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800a9bc:	9300      	str	r3, [sp, #0]
 800a9be:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800a9c2:	2200      	movs	r2, #0
 800a9c4:	2100      	movs	r1, #0
 800a9c6:	f7ff f911 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800a9ca:	697b      	ldr	r3, [r7, #20]
 800a9cc:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800a9d0:	2300      	movs	r3, #0
 800a9d2:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800a9d6:	2300      	movs	r3, #0
 800a9d8:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800a9dc:	2300      	movs	r3, #0
 800a9de:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
     *
     * @return The color representation depending on LCD color format.
     */
    FORCE_INLINE_FUNCTION static colortype getColorFromRGB(uint8_t red, uint8_t green, uint8_t blue)
    {
        return 0xFF000000 | (red << 16) | (green << 8) | (blue);
 800a9e2:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800a9e6:	041a      	lsls	r2, r3, #16
 800a9e8:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800a9ec:	021b      	lsls	r3, r3, #8
 800a9ee:	431a      	orrs	r2, r3
 800a9f0:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800a9f4:	4313      	orrs	r3, r2
 800a9f6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800a9fa:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800a9fe:	4611      	mov	r1, r2
 800aa00:	4618      	mov	r0, r3
 800aa02:	f7ff f823 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800aa06:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800aa08:	4619      	mov	r1, r3
 800aa0a:	4620      	mov	r0, r4
 800aa0c:	f7ff fb38 	bl	800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800aa10:	697a      	ldr	r2, [r7, #20]
 800aa12:	697b      	ldr	r3, [r7, #20]
 800aa14:	3340      	adds	r3, #64	@ 0x40
 800aa16:	4619      	mov	r1, r3
 800aa18:	4610      	mov	r0, r2
 800aa1a:	f7ff fac9 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800aa1e:	697b      	ldr	r3, [r7, #20]
 800aa20:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800aa24:	2330      	movs	r3, #48	@ 0x30
 800aa26:	9300      	str	r3, [sp, #0]
 800aa28:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800aa2c:	2212      	movs	r2, #18
 800aa2e:	2157      	movs	r1, #87	@ 0x57
 800aa30:	f7ff f8dc 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800aa34:	697b      	ldr	r3, [r7, #20]
 800aa36:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800aa3a:	23ff      	movs	r3, #255	@ 0xff
 800aa3c:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800aa40:	23ff      	movs	r3, #255	@ 0xff
 800aa42:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800aa46:	23ff      	movs	r3, #255	@ 0xff
 800aa48:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800aa4c:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800aa50:	041a      	lsls	r2, r3, #16
 800aa52:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800aa56:	021b      	lsls	r3, r3, #8
 800aa58:	431a      	orrs	r2, r3
 800aa5a:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800aa5e:	4313      	orrs	r3, r2
 800aa60:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800aa64:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800aa68:	4611      	mov	r1, r2
 800aa6a:	4618      	mov	r0, r3
 800aa6c:	f7fe ffee 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800aa70:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800aa72:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800aa76:	623b      	str	r3, [r7, #32]
        color = newColor;
 800aa78:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800aa7c:	6a3a      	ldr	r2, [r7, #32]
 800aa7e:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800aa80:	bf00      	nop
    text.setLinespacing(0);
 800aa82:	697b      	ldr	r3, [r7, #20]
 800aa84:	336c      	adds	r3, #108	@ 0x6c
 800aa86:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800aa8a:	2300      	movs	r3, #0
 800aa8c:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800aa90:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800aa94:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800aa98:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800aa9a:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800aa9e:	681b      	ldr	r3, [r3, #0]
 800aaa0:	3384      	adds	r3, #132	@ 0x84
 800aaa2:	681b      	ldr	r3, [r3, #0]
 800aaa4:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800aaa8:	463a      	mov	r2, r7
 800aaaa:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800aaae:	4610      	mov	r0, r2
 800aab0:	4798      	blx	r3
 800aab2:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800aab6:	463a      	mov	r2, r7
 800aab8:	ca07      	ldmia	r2, {r0, r1, r2}
 800aaba:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800aabe:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_GXOO));
 800aac0:	697b      	ldr	r3, [r7, #20]
 800aac2:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800aac6:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800aaca:	2102      	movs	r1, #2
 800aacc:	4618      	mov	r0, r3
 800aace:	f7ff faf5 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800aad2:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800aad6:	4619      	mov	r1, r3
 800aad8:	4620      	mov	r0, r4
 800aada:	f007 fc23 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800aade:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800aae2:	4618      	mov	r0, r3
 800aae4:	f7fd fc06 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800aae8:	697a      	ldr	r2, [r7, #20]
 800aaea:	697b      	ldr	r3, [r7, #20]
 800aaec:	336c      	adds	r3, #108	@ 0x6c
 800aaee:	4619      	mov	r1, r3
 800aaf0:	4610      	mov	r0, r2
 800aaf2:	f7ff fa5d 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800aaf6:	697b      	ldr	r3, [r7, #20]
 800aaf8:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800aafc:	2332      	movs	r3, #50	@ 0x32
 800aafe:	9300      	str	r3, [sp, #0]
 800ab00:	2332      	movs	r3, #50	@ 0x32
 800ab02:	2200      	movs	r2, #0
 800ab04:	2100      	movs	r1, #0
 800ab06:	f000 fb59 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800ab0a:	697b      	ldr	r3, [r7, #20]
 800ab0c:	33b4      	adds	r3, #180	@ 0xb4
 800ab0e:	2105      	movs	r1, #5
 800ab10:	4618      	mov	r0, r3
 800ab12:	f000 fb73 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800ab16:	697b      	ldr	r3, [r7, #20]
 800ab18:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800ab1c:	2300      	movs	r3, #0
 800ab1e:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800ab22:	2366      	movs	r3, #102	@ 0x66
 800ab24:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800ab28:	2399      	movs	r3, #153	@ 0x99
 800ab2a:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800ab2e:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800ab32:	041a      	lsls	r2, r3, #16
 800ab34:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800ab38:	021b      	lsls	r3, r3, #8
 800ab3a:	431a      	orrs	r2, r3
 800ab3c:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800ab40:	4313      	orrs	r3, r2
 800ab42:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ab46:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800ab4a:	4611      	mov	r1, r2
 800ab4c:	4618      	mov	r0, r3
 800ab4e:	f7fe ff7d 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ab52:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800ab54:	461d      	mov	r5, r3
 800ab56:	2300      	movs	r3, #0
 800ab58:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800ab5c:	2399      	movs	r3, #153	@ 0x99
 800ab5e:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800ab62:	23cc      	movs	r3, #204	@ 0xcc
 800ab64:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800ab68:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800ab6c:	041a      	lsls	r2, r3, #16
 800ab6e:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800ab72:	021b      	lsls	r3, r3, #8
 800ab74:	431a      	orrs	r2, r3
 800ab76:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800ab7a:	4313      	orrs	r3, r2
 800ab7c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ab80:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800ab84:	4611      	mov	r1, r2
 800ab86:	4618      	mov	r0, r3
 800ab88:	f7fe ff60 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ab8c:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800ab8e:	461e      	mov	r6, r3
 800ab90:	2300      	movs	r3, #0
 800ab92:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800ab96:	2333      	movs	r3, #51	@ 0x33
 800ab98:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800ab9c:	2366      	movs	r3, #102	@ 0x66
 800ab9e:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800aba2:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800aba6:	041a      	lsls	r2, r3, #16
 800aba8:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800abac:	021b      	lsls	r3, r3, #8
 800abae:	431a      	orrs	r2, r3
 800abb0:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800abb4:	4313      	orrs	r3, r2
 800abb6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800abba:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800abbe:	4611      	mov	r1, r2
 800abc0:	4618      	mov	r0, r3
 800abc2:	f7fe ff43 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800abc6:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800abc8:	4698      	mov	r8, r3
 800abca:	2333      	movs	r3, #51	@ 0x33
 800abcc:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800abd0:	2366      	movs	r3, #102	@ 0x66
 800abd2:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800abd6:	2399      	movs	r3, #153	@ 0x99
 800abd8:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800abdc:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800abe0:	041a      	lsls	r2, r3, #16
 800abe2:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800abe6:	021b      	lsls	r3, r3, #8
 800abe8:	431a      	orrs	r2, r3
 800abea:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800abee:	4313      	orrs	r3, r2
 800abf0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800abf4:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800abf8:	4611      	mov	r1, r2
 800abfa:	4618      	mov	r0, r3
 800abfc:	f7fe ff26 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ac00:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800ac02:	9300      	str	r3, [sp, #0]
 800ac04:	4643      	mov	r3, r8
 800ac06:	4632      	mov	r2, r6
 800ac08:	4629      	mov	r1, r5
 800ac0a:	4620      	mov	r0, r4
 800ac0c:	f000 fb08 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800ac10:	697b      	ldr	r3, [r7, #20]
 800ac12:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800ac16:	697b      	ldr	r3, [r7, #20]
 800ac18:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800ac1c:	4619      	mov	r1, r3
 800ac1e:	4610      	mov	r0, r2
 800ac20:	f7ff fc12 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800ac24:	697b      	ldr	r3, [r7, #20]
 800ac26:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800ac2a:	2332      	movs	r3, #50	@ 0x32
 800ac2c:	9300      	str	r3, [sp, #0]
 800ac2e:	2332      	movs	r3, #50	@ 0x32
 800ac30:	22f5      	movs	r2, #245	@ 0xf5
 800ac32:	f240 1189 	movw	r1, #393	@ 0x189
 800ac36:	f7fe ffd9 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800ac3a:	697a      	ldr	r2, [r7, #20]
 800ac3c:	697b      	ldr	r3, [r7, #20]
 800ac3e:	33b4      	adds	r3, #180	@ 0xb4
 800ac40:	4619      	mov	r1, r3
 800ac42:	4610      	mov	r0, r2
 800ac44:	f7ff f9b4 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    humVal.setPosition(131, 140, 200, 40);
 800ac48:	697b      	ldr	r3, [r7, #20]
 800ac4a:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800ac4e:	2328      	movs	r3, #40	@ 0x28
 800ac50:	9300      	str	r3, [sp, #0]
 800ac52:	23c8      	movs	r3, #200	@ 0xc8
 800ac54:	228c      	movs	r2, #140	@ 0x8c
 800ac56:	2183      	movs	r1, #131	@ 0x83
 800ac58:	f7fe ffc8 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    humVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800ac5c:	697b      	ldr	r3, [r7, #20]
 800ac5e:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800ac62:	23ff      	movs	r3, #255	@ 0xff
 800ac64:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800ac68:	23ff      	movs	r3, #255	@ 0xff
 800ac6a:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800ac6e:	23ff      	movs	r3, #255	@ 0xff
 800ac70:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800ac74:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800ac78:	041a      	lsls	r2, r3, #16
 800ac7a:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800ac7e:	021b      	lsls	r3, r3, #8
 800ac80:	431a      	orrs	r2, r3
 800ac82:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800ac86:	4313      	orrs	r3, r2
 800ac88:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ac8c:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800ac90:	4611      	mov	r1, r2
 800ac92:	4618      	mov	r0, r3
 800ac94:	f7fe feda 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ac98:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800ac9a:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800ac9e:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800aca0:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800aca4:	69fa      	ldr	r2, [r7, #28]
 800aca6:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800aca8:	bf00      	nop
 800acaa:	e005      	b.n	800acb8 <_ZN23humidity_screenViewBaseC1Ev+0x394>
 800acac:	080283c8 	.word	0x080283c8
 800acb0:	0800af37 	.word	0x0800af37
 800acb4:	0800af61 	.word	0x0800af61
    humVal.setLinespacing(0);
 800acb8:	697b      	ldr	r3, [r7, #20]
 800acba:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800acbe:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800acc2:	2300      	movs	r3, #0
 800acc4:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800acc8:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800accc:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800acd0:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800acd2:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800acd6:	681b      	ldr	r3, [r3, #0]
 800acd8:	3384      	adds	r3, #132	@ 0x84
 800acda:	681b      	ldr	r3, [r3, #0]
 800acdc:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800ace0:	463a      	mov	r2, r7
 800ace2:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800ace6:	4610      	mov	r0, r2
 800ace8:	4798      	blx	r3
 800acea:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800acee:	463a      	mov	r2, r7
 800acf0:	ca07      	ldmia	r2, {r0, r1, r2}
 800acf2:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800acf6:	bf00      	nop
    humValBuffer[0] = 0;
 800acf8:	697b      	ldr	r3, [r7, #20]
 800acfa:	2200      	movs	r2, #0
 800acfc:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    humVal.setWildcard(humValBuffer);
 800ad00:	697b      	ldr	r3, [r7, #20]
 800ad02:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800ad06:	697b      	ldr	r3, [r7, #20]
 800ad08:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800ad0c:	4619      	mov	r1, r3
 800ad0e:	4610      	mov	r0, r2
 800ad10:	f7ff fd52 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    humVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_BMB8));
 800ad14:	697b      	ldr	r3, [r7, #20]
 800ad16:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800ad1a:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ad1e:	2101      	movs	r1, #1
 800ad20:	4618      	mov	r0, r3
 800ad22:	f7ff f9cb 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800ad26:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ad2a:	4619      	mov	r1, r3
 800ad2c:	4620      	mov	r0, r4
 800ad2e:	f007 faf9 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800ad32:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800ad36:	4618      	mov	r0, r3
 800ad38:	f7fd fadc 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(humVal);
 800ad3c:	697a      	ldr	r2, [r7, #20]
 800ad3e:	697b      	ldr	r3, [r7, #20]
 800ad40:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800ad44:	4619      	mov	r1, r3
 800ad46:	4610      	mov	r0, r2
 800ad48:	f7ff f932 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800ad4c:	697b      	ldr	r3, [r7, #20]
 800ad4e:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800ad52:	2248      	movs	r2, #72	@ 0x48
 800ad54:	216f      	movs	r1, #111	@ 0x6f
 800ad56:	4618      	mov	r0, r3
 800ad58:	f7fe ff87 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800ad5c:	697b      	ldr	r3, [r7, #20]
 800ad5e:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800ad62:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800ad66:	2100      	movs	r1, #0
 800ad68:	4618      	mov	r0, r3
 800ad6a:	f7fe feb5 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ad6e:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800ad72:	2101      	movs	r1, #1
 800ad74:	4618      	mov	r0, r3
 800ad76:	f7fe feaf 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ad7a:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800ad7e:	2106      	movs	r1, #6
 800ad80:	4618      	mov	r0, r3
 800ad82:	f7fe fea9 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ad86:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800ad8a:	2104      	movs	r1, #4
 800ad8c:	4618      	mov	r0, r3
 800ad8e:	f7fe fea3 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ad92:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800ad96:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800ad9a:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800ad9e:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800ada2:	9300      	str	r3, [sp, #0]
 800ada4:	4603      	mov	r3, r0
 800ada6:	4620      	mov	r0, r4
 800ada8:	f007 fcb2 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800adac:	697b      	ldr	r3, [r7, #20]
 800adae:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800adb2:	2200      	movs	r2, #0
 800adb4:	2161      	movs	r1, #97	@ 0x61
 800adb6:	4618      	mov	r0, r3
 800adb8:	f7ff fd5a 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800adbc:	697b      	ldr	r3, [r7, #20]
 800adbe:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800adc2:	697b      	ldr	r3, [r7, #20]
 800adc4:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800adc8:	4619      	mov	r1, r3
 800adca:	4610      	mov	r0, r2
 800adcc:	f7ff fd01 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800add0:	697a      	ldr	r2, [r7, #20]
 800add2:	697b      	ldr	r3, [r7, #20]
 800add4:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800add8:	4619      	mov	r1, r3
 800adda:	4610      	mov	r0, r2
 800addc:	f7ff f8e8 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800ade0:	697b      	ldr	r3, [r7, #20]
 800ade2:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ade6:	22c3      	movs	r2, #195	@ 0xc3
 800ade8:	216f      	movs	r1, #111	@ 0x6f
 800adea:	4618      	mov	r0, r3
 800adec:	f7fe ff3d 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800adf0:	697b      	ldr	r3, [r7, #20]
 800adf2:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800adf6:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800adfa:	2100      	movs	r1, #0
 800adfc:	4618      	mov	r0, r3
 800adfe:	f7fe fe6b 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ae02:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800ae06:	2101      	movs	r1, #1
 800ae08:	4618      	mov	r0, r3
 800ae0a:	f7fe fe65 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ae0e:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800ae12:	2105      	movs	r1, #5
 800ae14:	4618      	mov	r0, r3
 800ae16:	f7fe fe5f 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ae1a:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800ae1e:	2104      	movs	r1, #4
 800ae20:	4618      	mov	r0, r3
 800ae22:	f7fe fe59 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800ae26:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800ae2a:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800ae2e:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800ae32:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800ae36:	9300      	str	r3, [sp, #0]
 800ae38:	4603      	mov	r3, r0
 800ae3a:	4620      	mov	r0, r4
 800ae3c:	f007 fc68 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800ae40:	697b      	ldr	r3, [r7, #20]
 800ae42:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ae46:	2200      	movs	r2, #0
 800ae48:	215f      	movs	r1, #95	@ 0x5f
 800ae4a:	4618      	mov	r0, r3
 800ae4c:	f7ff fd10 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800ae50:	697b      	ldr	r3, [r7, #20]
 800ae52:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800ae56:	697b      	ldr	r3, [r7, #20]
 800ae58:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800ae5c:	4619      	mov	r1, r3
 800ae5e:	4610      	mov	r0, r2
 800ae60:	f7ff fcb7 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800ae64:	697a      	ldr	r2, [r7, #20]
 800ae66:	697b      	ldr	r3, [r7, #20]
 800ae68:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800ae6c:	4619      	mov	r1, r3
 800ae6e:	4610      	mov	r0, r2
 800ae70:	f7ff f89e 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ae74:	697b      	ldr	r3, [r7, #20]
 800ae76:	4618      	mov	r0, r3
 800ae78:	37b0      	adds	r7, #176	@ 0xb0
 800ae7a:	46bd      	mov	sp, r7
 800ae7c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ae80 <_ZN23humidity_screenViewBaseD1Ev>:

humidity_screenViewBase::~humidity_screenViewBase()
 800ae80:	b580      	push	{r7, lr}
 800ae82:	b082      	sub	sp, #8
 800ae84:	af00      	add	r7, sp, #0
 800ae86:	6078      	str	r0, [r7, #4]
 800ae88:	4a1c      	ldr	r2, [pc, #112]	@ (800aefc <_ZN23humidity_screenViewBaseD1Ev+0x7c>)
 800ae8a:	687b      	ldr	r3, [r7, #4]
 800ae8c:	601a      	str	r2, [r3, #0]
{

}
 800ae8e:	687b      	ldr	r3, [r7, #4]
 800ae90:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800ae94:	4618      	mov	r0, r3
 800ae96:	f000 fa53 	bl	800b340 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ae9a:	687b      	ldr	r3, [r7, #4]
 800ae9c:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800aea0:	4618      	mov	r0, r3
 800aea2:	f000 fa6f 	bl	800b384 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800aea6:	687b      	ldr	r3, [r7, #4]
 800aea8:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800aeac:	4618      	mov	r0, r3
 800aeae:	f000 faf7 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800aeb2:	687b      	ldr	r3, [r7, #4]
 800aeb4:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800aeb8:	4618      	mov	r0, r3
 800aeba:	f000 faf1 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800aebe:	687b      	ldr	r3, [r7, #4]
 800aec0:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800aec4:	4618      	mov	r0, r3
 800aec6:	f000 faa7 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800aeca:	687b      	ldr	r3, [r7, #4]
 800aecc:	33b4      	adds	r3, #180	@ 0xb4
 800aece:	4618      	mov	r0, r3
 800aed0:	f000 fa7a 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800aed4:	687b      	ldr	r3, [r7, #4]
 800aed6:	336c      	adds	r3, #108	@ 0x6c
 800aed8:	4618      	mov	r0, r3
 800aeda:	f7ff fbc9 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800aede:	687b      	ldr	r3, [r7, #4]
 800aee0:	3340      	adds	r3, #64	@ 0x40
 800aee2:	4618      	mov	r0, r3
 800aee4:	f7ff fafa 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	4618      	mov	r0, r3
 800aeec:	f7ff fcf8 	bl	800a8e0 <_ZN8touchgfx4ViewI24humidity_screenPresenterED1Ev>
 800aef0:	687b      	ldr	r3, [r7, #4]
 800aef2:	4618      	mov	r0, r3
 800aef4:	3708      	adds	r7, #8
 800aef6:	46bd      	mov	sp, r7
 800aef8:	bd80      	pop	{r7, pc}
 800aefa:	bf00      	nop
 800aefc:	080283c8 	.word	0x080283c8

0800af00 <_ZN23humidity_screenViewBaseD0Ev>:
humidity_screenViewBase::~humidity_screenViewBase()
 800af00:	b580      	push	{r7, lr}
 800af02:	b082      	sub	sp, #8
 800af04:	af00      	add	r7, sp, #0
 800af06:	6078      	str	r0, [r7, #4]
}
 800af08:	6878      	ldr	r0, [r7, #4]
 800af0a:	f7ff ffb9 	bl	800ae80 <_ZN23humidity_screenViewBaseD1Ev>
 800af0e:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800af12:	6878      	ldr	r0, [r7, #4]
 800af14:	f01a feed 	bl	8025cf2 <_ZdlPvj>
 800af18:	687b      	ldr	r3, [r7, #4]
 800af1a:	4618      	mov	r0, r3
 800af1c:	3708      	adds	r7, #8
 800af1e:	46bd      	mov	sp, r7
 800af20:	bd80      	pop	{r7, pc}

0800af22 <_ZN23humidity_screenViewBase11setupScreenEv>:

void humidity_screenViewBase::setupScreen()
{
 800af22:	b480      	push	{r7}
 800af24:	b083      	sub	sp, #12
 800af26:	af00      	add	r7, sp, #0
 800af28:	6078      	str	r0, [r7, #4]

}
 800af2a:	bf00      	nop
 800af2c:	370c      	adds	r7, #12
 800af2e:	46bd      	mov	sp, r7
 800af30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800af34:	4770      	bx	lr

0800af36 <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void humidity_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800af36:	b580      	push	{r7, lr}
 800af38:	b082      	sub	sp, #8
 800af3a:	af00      	add	r7, sp, #0
 800af3c:	6078      	str	r0, [r7, #4]
 800af3e:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800af40:	687b      	ldr	r3, [r7, #4]
 800af42:	33b4      	adds	r3, #180	@ 0xb4
 800af44:	683a      	ldr	r2, [r7, #0]
 800af46:	429a      	cmp	r2, r3
 800af48:	d106      	bne.n	800af58 <_ZN23humidity_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800af4a:	6878      	ldr	r0, [r7, #4]
 800af4c:	f7ff fcbc 	bl	800a8c8 <_ZN23humidity_screenViewBase11applicationEv>
 800af50:	4603      	mov	r3, r0
 800af52:	4618      	mov	r0, r3
 800af54:	f7fd fef4 	bl	8008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800af58:	bf00      	nop
 800af5a:	3708      	adds	r7, #8
 800af5c:	46bd      	mov	sp, r7
 800af5e:	bd80      	pop	{r7, pc}

0800af60 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void humidity_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800af60:	b580      	push	{r7, lr}
 800af62:	b082      	sub	sp, #8
 800af64:	af00      	add	r7, sp, #0
 800af66:	6078      	str	r0, [r7, #4]
 800af68:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800af6a:	687b      	ldr	r3, [r7, #4]
 800af6c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800af70:	683a      	ldr	r2, [r7, #0]
 800af72:	429a      	cmp	r2, r3
 800af74:	d105      	bne.n	800af82 <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800af76:	687b      	ldr	r3, [r7, #4]
 800af78:	681b      	ldr	r3, [r3, #0]
 800af7a:	332c      	adds	r3, #44	@ 0x2c
 800af7c:	681b      	ldr	r3, [r3, #0]
 800af7e:	6878      	ldr	r0, [r7, #4]
 800af80:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800af82:	687b      	ldr	r3, [r7, #4]
 800af84:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800af88:	683a      	ldr	r2, [r7, #0]
 800af8a:	429a      	cmp	r2, r3
 800af8c:	d105      	bne.n	800af9a <_ZN23humidity_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800af8e:	687b      	ldr	r3, [r7, #4]
 800af90:	681b      	ldr	r3, [r3, #0]
 800af92:	3330      	adds	r3, #48	@ 0x30
 800af94:	681b      	ldr	r3, [r3, #0]
 800af96:	6878      	ldr	r0, [r7, #4]
 800af98:	4798      	blx	r3
    }
}
 800af9a:	bf00      	nop
 800af9c:	3708      	adds	r7, #8
 800af9e:	46bd      	mov	sp, r7
 800afa0:	bd80      	pop	{r7, pc}
	...

0800afa4 <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev>:
    View()
 800afa4:	b580      	push	{r7, lr}
 800afa6:	b082      	sub	sp, #8
 800afa8:	af00      	add	r7, sp, #0
 800afaa:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800afac:	687b      	ldr	r3, [r7, #4]
 800afae:	4618      	mov	r0, r3
 800afb0:	f00a fc5c 	bl	801586c <_ZN8touchgfx6ScreenC1Ev>
 800afb4:	4a05      	ldr	r2, [pc, #20]	@ (800afcc <_ZN8touchgfx4ViewI24humidity_screenPresenterEC1Ev+0x28>)
 800afb6:	687b      	ldr	r3, [r7, #4]
 800afb8:	601a      	str	r2, [r3, #0]
 800afba:	687b      	ldr	r3, [r7, #4]
 800afbc:	2200      	movs	r2, #0
 800afbe:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800afc0:	687b      	ldr	r3, [r7, #4]
 800afc2:	4618      	mov	r0, r3
 800afc4:	3708      	adds	r7, #8
 800afc6:	46bd      	mov	sp, r7
 800afc8:	bd80      	pop	{r7, pc}
 800afca:	bf00      	nop
 800afcc:	080284d0 	.word	0x080284d0

0800afd0 <_ZN8touchgfx18ClickButtonTriggerC1Ev>:
class ClickButtonTrigger : public AbstractButtonContainer
 800afd0:	b580      	push	{r7, lr}
 800afd2:	b082      	sub	sp, #8
 800afd4:	af00      	add	r7, sp, #0
 800afd6:	6078      	str	r0, [r7, #4]
 800afd8:	687b      	ldr	r3, [r7, #4]
 800afda:	4618      	mov	r0, r3
 800afdc:	f7ff f9e4 	bl	800a3a8 <_ZN8touchgfx23AbstractButtonContainerC1Ev>
 800afe0:	4a03      	ldr	r2, [pc, #12]	@ (800aff0 <_ZN8touchgfx18ClickButtonTriggerC1Ev+0x20>)
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	601a      	str	r2, [r3, #0]
 800afe6:	687b      	ldr	r3, [r7, #4]
 800afe8:	4618      	mov	r0, r3
 800afea:	3708      	adds	r7, #8
 800afec:	46bd      	mov	sp, r7
 800afee:	bd80      	pop	{r7, pc}
 800aff0:	080285ac 	.word	0x080285ac

0800aff4 <_ZN8touchgfx18ClickButtonTriggerD1Ev>:
 800aff4:	b580      	push	{r7, lr}
 800aff6:	b082      	sub	sp, #8
 800aff8:	af00      	add	r7, sp, #0
 800affa:	6078      	str	r0, [r7, #4]
 800affc:	4a05      	ldr	r2, [pc, #20]	@ (800b014 <_ZN8touchgfx18ClickButtonTriggerD1Ev+0x20>)
 800affe:	687b      	ldr	r3, [r7, #4]
 800b000:	601a      	str	r2, [r3, #0]
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	4618      	mov	r0, r3
 800b006:	f7ff fb11 	bl	800a62c <_ZN8touchgfx23AbstractButtonContainerD1Ev>
 800b00a:	687b      	ldr	r3, [r7, #4]
 800b00c:	4618      	mov	r0, r3
 800b00e:	3708      	adds	r7, #8
 800b010:	46bd      	mov	sp, r7
 800b012:	bd80      	pop	{r7, pc}
 800b014:	080285ac 	.word	0x080285ac

0800b018 <_ZN8touchgfx18ClickButtonTriggerD0Ev>:
 800b018:	b580      	push	{r7, lr}
 800b01a:	b082      	sub	sp, #8
 800b01c:	af00      	add	r7, sp, #0
 800b01e:	6078      	str	r0, [r7, #4]
 800b020:	6878      	ldr	r0, [r7, #4]
 800b022:	f7ff ffe7 	bl	800aff4 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b026:	2134      	movs	r1, #52	@ 0x34
 800b028:	6878      	ldr	r0, [r7, #4]
 800b02a:	f01a fe62 	bl	8025cf2 <_ZdlPvj>
 800b02e:	687b      	ldr	r3, [r7, #4]
 800b030:	4618      	mov	r0, r3
 800b032:	3708      	adds	r7, #8
 800b034:	46bd      	mov	sp, r7
 800b036:	bd80      	pop	{r7, pc}

0800b038 <_ZN8touchgfx13BoxWithBorderD1Ev>:
class BoxWithBorder : public Box
 800b038:	b580      	push	{r7, lr}
 800b03a:	b082      	sub	sp, #8
 800b03c:	af00      	add	r7, sp, #0
 800b03e:	6078      	str	r0, [r7, #4]
 800b040:	4a05      	ldr	r2, [pc, #20]	@ (800b058 <_ZN8touchgfx13BoxWithBorderD1Ev+0x20>)
 800b042:	687b      	ldr	r3, [r7, #4]
 800b044:	601a      	str	r2, [r3, #0]
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	4618      	mov	r0, r3
 800b04a:	f7ff fa47 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800b04e:	687b      	ldr	r3, [r7, #4]
 800b050:	4618      	mov	r0, r3
 800b052:	3708      	adds	r7, #8
 800b054:	46bd      	mov	sp, r7
 800b056:	bd80      	pop	{r7, pc}
 800b058:	08029564 	.word	0x08029564

0800b05c <_ZN8touchgfx13BoxWithBorderD0Ev>:
 800b05c:	b580      	push	{r7, lr}
 800b05e:	b082      	sub	sp, #8
 800b060:	af00      	add	r7, sp, #0
 800b062:	6078      	str	r0, [r7, #4]
 800b064:	6878      	ldr	r0, [r7, #4]
 800b066:	f7ff ffe7 	bl	800b038 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b06a:	2134      	movs	r1, #52	@ 0x34
 800b06c:	6878      	ldr	r0, [r7, #4]
 800b06e:	f01a fe40 	bl	8025cf2 <_ZdlPvj>
 800b072:	687b      	ldr	r3, [r7, #4]
 800b074:	4618      	mov	r0, r3
 800b076:	3708      	adds	r7, #8
 800b078:	46bd      	mov	sp, r7
 800b07a:	bd80      	pop	{r7, pc}

0800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>:
 */
template <class T>
class BoxWithBorderButtonStyle : public T
{
public:
    BoxWithBorderButtonStyle()
 800b07c:	b580      	push	{r7, lr}
 800b07e:	b082      	sub	sp, #8
 800b080:	af00      	add	r7, sp, #0
 800b082:	6078      	str	r0, [r7, #4]
        : T(), up(), down()
 800b084:	687b      	ldr	r3, [r7, #4]
 800b086:	4618      	mov	r0, r3
 800b088:	2334      	movs	r3, #52	@ 0x34
 800b08a:	461a      	mov	r2, r3
 800b08c:	2100      	movs	r1, #0
 800b08e:	f01b f8e6 	bl	802625e <memset>
 800b092:	687b      	ldr	r3, [r7, #4]
 800b094:	4618      	mov	r0, r3
 800b096:	f7ff ff9b 	bl	800afd0 <_ZN8touchgfx18ClickButtonTriggerC1Ev>
 800b09a:	4a17      	ldr	r2, [pc, #92]	@ (800b0f8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev+0x7c>)
 800b09c:	687b      	ldr	r3, [r7, #4]
 800b09e:	601a      	str	r2, [r3, #0]
 800b0a0:	687b      	ldr	r3, [r7, #4]
 800b0a2:	3334      	adds	r3, #52	@ 0x34
 800b0a4:	4618      	mov	r0, r3
 800b0a6:	f7ff fa3b 	bl	800a520 <_ZN8touchgfx13BoxWithBorderC1Ev>
 800b0aa:	687b      	ldr	r3, [r7, #4]
 800b0ac:	3368      	adds	r3, #104	@ 0x68
 800b0ae:	4618      	mov	r0, r3
 800b0b0:	f7fe fcbe 	bl	8009a30 <_ZN8touchgfx9colortypeC1Ev>
 800b0b4:	687b      	ldr	r3, [r7, #4]
 800b0b6:	336c      	adds	r3, #108	@ 0x6c
 800b0b8:	4618      	mov	r0, r3
 800b0ba:	f7fe fcb9 	bl	8009a30 <_ZN8touchgfx9colortypeC1Ev>
 800b0be:	687b      	ldr	r3, [r7, #4]
 800b0c0:	3370      	adds	r3, #112	@ 0x70
 800b0c2:	4618      	mov	r0, r3
 800b0c4:	f7fe fcb4 	bl	8009a30 <_ZN8touchgfx9colortypeC1Ev>
 800b0c8:	687b      	ldr	r3, [r7, #4]
 800b0ca:	3374      	adds	r3, #116	@ 0x74
 800b0cc:	4618      	mov	r0, r3
 800b0ce:	f7fe fcaf 	bl	8009a30 <_ZN8touchgfx9colortypeC1Ev>
    {
        borderBox.setXY(0, 0);
 800b0d2:	687b      	ldr	r3, [r7, #4]
 800b0d4:	3334      	adds	r3, #52	@ 0x34
 800b0d6:	2200      	movs	r2, #0
 800b0d8:	2100      	movs	r1, #0
 800b0da:	4618      	mov	r0, r3
 800b0dc:	f7fe fdc5 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
        T::add(borderBox);
 800b0e0:	687a      	ldr	r2, [r7, #4]
 800b0e2:	687b      	ldr	r3, [r7, #4]
 800b0e4:	3334      	adds	r3, #52	@ 0x34
 800b0e6:	4619      	mov	r1, r3
 800b0e8:	4610      	mov	r0, r2
 800b0ea:	f005 fbd9 	bl	80108a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>
    }
 800b0ee:	687b      	ldr	r3, [r7, #4]
 800b0f0:	4618      	mov	r0, r3
 800b0f2:	3708      	adds	r7, #8
 800b0f4:	46bd      	mov	sp, r7
 800b0f6:	bd80      	pop	{r7, pc}
 800b0f8:	08028434 	.word	0x08028434

0800b0fc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800b0fc:	b480      	push	{r7}
 800b0fe:	b083      	sub	sp, #12
 800b100:	af00      	add	r7, sp, #0
 800b102:	6078      	str	r0, [r7, #4]
 800b104:	4a04      	ldr	r2, [pc, #16]	@ (800b118 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev+0x1c>)
 800b106:	687b      	ldr	r3, [r7, #4]
 800b108:	601a      	str	r2, [r3, #0]
 800b10a:	687b      	ldr	r3, [r7, #4]
 800b10c:	4618      	mov	r0, r3
 800b10e:	370c      	adds	r7, #12
 800b110:	46bd      	mov	sp, r7
 800b112:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b116:	4770      	bx	lr
 800b118:	08028648 	.word	0x08028648

0800b11c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800b11c:	b580      	push	{r7, lr}
 800b11e:	b084      	sub	sp, #16
 800b120:	af00      	add	r7, sp, #0
 800b122:	60f8      	str	r0, [r7, #12]
 800b124:	60b9      	str	r1, [r7, #8]
 800b126:	4639      	mov	r1, r7
 800b128:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800b12c:	68fb      	ldr	r3, [r7, #12]
 800b12e:	4618      	mov	r0, r3
 800b130:	f7ff ffe4 	bl	800b0fc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800b134:	4a08      	ldr	r2, [pc, #32]	@ (800b158 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800b136:	68fb      	ldr	r3, [r7, #12]
 800b138:	601a      	str	r2, [r3, #0]
 800b13a:	68fb      	ldr	r3, [r7, #12]
 800b13c:	68ba      	ldr	r2, [r7, #8]
 800b13e:	605a      	str	r2, [r3, #4]
 800b140:	68fb      	ldr	r3, [r7, #12]
 800b142:	3308      	adds	r3, #8
 800b144:	463a      	mov	r2, r7
 800b146:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b14a:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800b14e:	68fb      	ldr	r3, [r7, #12]
 800b150:	4618      	mov	r0, r3
 800b152:	3710      	adds	r7, #16
 800b154:	46bd      	mov	sp, r7
 800b156:	bd80      	pop	{r7, pc}
 800b158:	0802841c 	.word	0x0802841c

0800b15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>:
class GenericCallback<T1, void, void>
 800b15c:	b480      	push	{r7}
 800b15e:	b083      	sub	sp, #12
 800b160:	af00      	add	r7, sp, #0
 800b162:	6078      	str	r0, [r7, #4]
 800b164:	4a04      	ldr	r2, [pc, #16]	@ (800b178 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev+0x1c>)
 800b166:	687b      	ldr	r3, [r7, #4]
 800b168:	601a      	str	r2, [r3, #0]
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	4618      	mov	r0, r3
 800b16e:	370c      	adds	r7, #12
 800b170:	46bd      	mov	sp, r7
 800b172:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b176:	4770      	bx	lr
 800b178:	08028504 	.word	0x08028504

0800b17c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800b17c:	b580      	push	{r7, lr}
 800b17e:	b084      	sub	sp, #16
 800b180:	af00      	add	r7, sp, #0
 800b182:	60f8      	str	r0, [r7, #12]
 800b184:	60b9      	str	r1, [r7, #8]
 800b186:	4639      	mov	r1, r7
 800b188:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800b18c:	68fb      	ldr	r3, [r7, #12]
 800b18e:	4618      	mov	r0, r3
 800b190:	f7ff ffe4 	bl	800b15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800b194:	4a08      	ldr	r2, [pc, #32]	@ (800b1b8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800b196:	68fb      	ldr	r3, [r7, #12]
 800b198:	601a      	str	r2, [r3, #0]
 800b19a:	68fb      	ldr	r3, [r7, #12]
 800b19c:	68ba      	ldr	r2, [r7, #8]
 800b19e:	605a      	str	r2, [r3, #4]
 800b1a0:	68fb      	ldr	r3, [r7, #12]
 800b1a2:	3308      	adds	r3, #8
 800b1a4:	463a      	mov	r2, r7
 800b1a6:	e892 0003 	ldmia.w	r2, {r0, r1}
 800b1aa:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800b1ae:	68fb      	ldr	r3, [r7, #12]
 800b1b0:	4618      	mov	r0, r3
 800b1b2:	3710      	adds	r7, #16
 800b1b4:	46bd      	mov	sp, r7
 800b1b6:	bd80      	pop	{r7, pc}
 800b1b8:	08028404 	.word	0x08028404

0800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>:
     * @param  width  The width of this BoxWithBorderButtonStyle.
     * @param  height The height of this BoxWithBorderButtonStyle.
     *
     * @note Changing this does not automatically yield a redraw.
     */
    void setBoxWithBorderPosition(int16_t x, int16_t y, int16_t width, int16_t height)
 800b1bc:	b590      	push	{r4, r7, lr}
 800b1be:	b087      	sub	sp, #28
 800b1c0:	af02      	add	r7, sp, #8
 800b1c2:	60f8      	str	r0, [r7, #12]
 800b1c4:	4608      	mov	r0, r1
 800b1c6:	4611      	mov	r1, r2
 800b1c8:	461a      	mov	r2, r3
 800b1ca:	4603      	mov	r3, r0
 800b1cc:	817b      	strh	r3, [r7, #10]
 800b1ce:	460b      	mov	r3, r1
 800b1d0:	813b      	strh	r3, [r7, #8]
 800b1d2:	4613      	mov	r3, r2
 800b1d4:	80fb      	strh	r3, [r7, #6]
    {
        borderBox.setPosition(x, y, width, height);
 800b1d6:	68fb      	ldr	r3, [r7, #12]
 800b1d8:	f103 0034 	add.w	r0, r3, #52	@ 0x34
 800b1dc:	f9b7 4006 	ldrsh.w	r4, [r7, #6]
 800b1e0:	f9b7 2008 	ldrsh.w	r2, [r7, #8]
 800b1e4:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 800b1e8:	f9b7 3020 	ldrsh.w	r3, [r7, #32]
 800b1ec:	9300      	str	r3, [sp, #0]
 800b1ee:	4623      	mov	r3, r4
 800b1f0:	f7fe fcfc 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    }
 800b1f4:	bf00      	nop
 800b1f6:	3714      	adds	r7, #20
 800b1f8:	46bd      	mov	sp, r7
 800b1fa:	bd90      	pop	{r4, r7, pc}

0800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>:
    /**
     * Sets border size.
     *
     * @param  size The size.
     */
    void setBorderSize(uint8_t size)
 800b1fc:	b580      	push	{r7, lr}
 800b1fe:	b082      	sub	sp, #8
 800b200:	af00      	add	r7, sp, #0
 800b202:	6078      	str	r0, [r7, #4]
 800b204:	460b      	mov	r3, r1
 800b206:	70fb      	strb	r3, [r7, #3]
    {
        borderBox.setBorderSize(size);
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	3334      	adds	r3, #52	@ 0x34
 800b20c:	78fa      	ldrb	r2, [r7, #3]
 800b20e:	b292      	uxth	r2, r2
 800b210:	4611      	mov	r1, r2
 800b212:	4618      	mov	r0, r3
 800b214:	f7ff f9ae 	bl	800a574 <_ZN8touchgfx13BoxWithBorder13setBorderSizeEt>
    }
 800b218:	bf00      	nop
 800b21a:	3708      	adds	r7, #8
 800b21c:	46bd      	mov	sp, r7
 800b21e:	bd80      	pop	{r7, pc}

0800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>:
    void setBoxWithBorderColors(const colortype colorReleased, const colortype colorPressed, const colortype borderColorReleased, const colortype borderColorPressed)
 800b220:	b580      	push	{r7, lr}
 800b222:	b084      	sub	sp, #16
 800b224:	af00      	add	r7, sp, #0
 800b226:	60f8      	str	r0, [r7, #12]
 800b228:	60b9      	str	r1, [r7, #8]
 800b22a:	607a      	str	r2, [r7, #4]
 800b22c:	603b      	str	r3, [r7, #0]
        up = colorReleased;
 800b22e:	68fb      	ldr	r3, [r7, #12]
 800b230:	68ba      	ldr	r2, [r7, #8]
 800b232:	669a      	str	r2, [r3, #104]	@ 0x68
        down = colorPressed;
 800b234:	68fb      	ldr	r3, [r7, #12]
 800b236:	687a      	ldr	r2, [r7, #4]
 800b238:	66da      	str	r2, [r3, #108]	@ 0x6c
        borderUp = borderColorReleased;
 800b23a:	68fb      	ldr	r3, [r7, #12]
 800b23c:	683a      	ldr	r2, [r7, #0]
 800b23e:	671a      	str	r2, [r3, #112]	@ 0x70
        borderDown = borderColorPressed;
 800b240:	68fb      	ldr	r3, [r7, #12]
 800b242:	69ba      	ldr	r2, [r7, #24]
 800b244:	675a      	str	r2, [r3, #116]	@ 0x74
        handlePressedUpdated();
 800b246:	68fb      	ldr	r3, [r7, #12]
 800b248:	681b      	ldr	r3, [r3, #0]
 800b24a:	338c      	adds	r3, #140	@ 0x8c
 800b24c:	681b      	ldr	r3, [r3, #0]
 800b24e:	68f8      	ldr	r0, [r7, #12]
 800b250:	4798      	blx	r3
    }
 800b252:	bf00      	nop
 800b254:	3710      	adds	r7, #16
 800b256:	46bd      	mov	sp, r7
 800b258:	bd80      	pop	{r7, pc}
	...

0800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>:
    virtual ~GenericCallback()
 800b25c:	b480      	push	{r7}
 800b25e:	b083      	sub	sp, #12
 800b260:	af00      	add	r7, sp, #0
 800b262:	6078      	str	r0, [r7, #4]
    }
 800b264:	4a04      	ldr	r2, [pc, #16]	@ (800b278 <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev+0x1c>)
 800b266:	687b      	ldr	r3, [r7, #4]
 800b268:	601a      	str	r2, [r3, #0]
 800b26a:	687b      	ldr	r3, [r7, #4]
 800b26c:	4618      	mov	r0, r3
 800b26e:	370c      	adds	r7, #12
 800b270:	46bd      	mov	sp, r7
 800b272:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b276:	4770      	bx	lr
 800b278:	08028648 	.word	0x08028648

0800b27c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED0Ev>:
    virtual ~GenericCallback()
 800b27c:	b580      	push	{r7, lr}
 800b27e:	b082      	sub	sp, #8
 800b280:	af00      	add	r7, sp, #0
 800b282:	6078      	str	r0, [r7, #4]
    }
 800b284:	6878      	ldr	r0, [r7, #4]
 800b286:	f7ff ffe9 	bl	800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b28a:	2104      	movs	r1, #4
 800b28c:	6878      	ldr	r0, [r7, #4]
 800b28e:	f01a fd30 	bl	8025cf2 <_ZdlPvj>
 800b292:	687b      	ldr	r3, [r7, #4]
 800b294:	4618      	mov	r0, r3
 800b296:	3708      	adds	r7, #8
 800b298:	46bd      	mov	sp, r7
 800b29a:	bd80      	pop	{r7, pc}

0800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>:
    virtual ~GenericCallback()
 800b29c:	b480      	push	{r7}
 800b29e:	b083      	sub	sp, #12
 800b2a0:	af00      	add	r7, sp, #0
 800b2a2:	6078      	str	r0, [r7, #4]
    }
 800b2a4:	4a04      	ldr	r2, [pc, #16]	@ (800b2b8 <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev+0x1c>)
 800b2a6:	687b      	ldr	r3, [r7, #4]
 800b2a8:	601a      	str	r2, [r3, #0]
 800b2aa:	687b      	ldr	r3, [r7, #4]
 800b2ac:	4618      	mov	r0, r3
 800b2ae:	370c      	adds	r7, #12
 800b2b0:	46bd      	mov	sp, r7
 800b2b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2b6:	4770      	bx	lr
 800b2b8:	08028504 	.word	0x08028504

0800b2bc <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED0Ev>:
    virtual ~GenericCallback()
 800b2bc:	b580      	push	{r7, lr}
 800b2be:	b082      	sub	sp, #8
 800b2c0:	af00      	add	r7, sp, #0
 800b2c2:	6078      	str	r0, [r7, #4]
    }
 800b2c4:	6878      	ldr	r0, [r7, #4]
 800b2c6:	f7ff ffe9 	bl	800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800b2ca:	2104      	movs	r1, #4
 800b2cc:	6878      	ldr	r0, [r7, #4]
 800b2ce:	f01a fd10 	bl	8025cf2 <_ZdlPvj>
 800b2d2:	687b      	ldr	r3, [r7, #4]
 800b2d4:	4618      	mov	r0, r3
 800b2d6:	3708      	adds	r7, #8
 800b2d8:	46bd      	mov	sp, r7
 800b2da:	bd80      	pop	{r7, pc}

0800b2dc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv>:
    colortype down;          ///< The down
    colortype borderUp;      ///< The border up
    colortype borderDown;    ///< The border down

    /** @copydoc AbstractButtonContainer::handlePressedUpdated() */
    virtual void handlePressedUpdated()
 800b2dc:	b590      	push	{r4, r7, lr}
 800b2de:	b083      	sub	sp, #12
 800b2e0:	af00      	add	r7, sp, #0
 800b2e2:	6078      	str	r0, [r7, #4]
    {
        borderBox.setColor(T::getPressed() ? down : up);
 800b2e4:	687b      	ldr	r3, [r7, #4]
 800b2e6:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b2ea:	687b      	ldr	r3, [r7, #4]
 800b2ec:	4618      	mov	r0, r3
 800b2ee:	f7ff f891 	bl	800a414 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b2f2:	4603      	mov	r3, r0
 800b2f4:	2b00      	cmp	r3, #0
 800b2f6:	d002      	beq.n	800b2fe <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x22>
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	336c      	adds	r3, #108	@ 0x6c
 800b2fc:	e001      	b.n	800b302 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x26>
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	3368      	adds	r3, #104	@ 0x68
 800b302:	6819      	ldr	r1, [r3, #0]
 800b304:	4620      	mov	r0, r4
 800b306:	f7fe febb 	bl	800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
        borderBox.setBorderColor(T::getPressed() ? borderDown : borderUp);
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	4618      	mov	r0, r3
 800b314:	f7ff f87e 	bl	800a414 <_ZNK8touchgfx23AbstractButtonContainer10getPressedEv>
 800b318:	4603      	mov	r3, r0
 800b31a:	2b00      	cmp	r3, #0
 800b31c:	d002      	beq.n	800b324 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x48>
 800b31e:	687b      	ldr	r3, [r7, #4]
 800b320:	3374      	adds	r3, #116	@ 0x74
 800b322:	e001      	b.n	800b328 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE20handlePressedUpdatedEv+0x4c>
 800b324:	687b      	ldr	r3, [r7, #4]
 800b326:	3370      	adds	r3, #112	@ 0x70
 800b328:	6819      	ldr	r1, [r3, #0]
 800b32a:	4620      	mov	r0, r4
 800b32c:	f7ff f914 	bl	800a558 <_ZN8touchgfx13BoxWithBorder14setBorderColorENS_9colortypeE>
        T::handlePressedUpdated();
 800b330:	687b      	ldr	r3, [r7, #4]
 800b332:	4618      	mov	r0, r3
 800b334:	f7ff f8bd 	bl	800a4b2 <_ZN8touchgfx23AbstractButtonContainer20handlePressedUpdatedEv>
    }
 800b338:	bf00      	nop
 800b33a:	370c      	adds	r7, #12
 800b33c:	46bd      	mov	sp, r7
 800b33e:	bd90      	pop	{r4, r7, pc}

0800b340 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800b340:	b580      	push	{r7, lr}
 800b342:	b082      	sub	sp, #8
 800b344:	af00      	add	r7, sp, #0
 800b346:	6078      	str	r0, [r7, #4]
 800b348:	4a05      	ldr	r2, [pc, #20]	@ (800b360 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800b34a:	687b      	ldr	r3, [r7, #4]
 800b34c:	601a      	str	r2, [r3, #0]
 800b34e:	687b      	ldr	r3, [r7, #4]
 800b350:	4618      	mov	r0, r3
 800b352:	f7ff ffa3 	bl	800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800b356:	687b      	ldr	r3, [r7, #4]
 800b358:	4618      	mov	r0, r3
 800b35a:	3708      	adds	r7, #8
 800b35c:	46bd      	mov	sp, r7
 800b35e:	bd80      	pop	{r7, pc}
 800b360:	08028404 	.word	0x08028404

0800b364 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800b364:	b580      	push	{r7, lr}
 800b366:	b082      	sub	sp, #8
 800b368:	af00      	add	r7, sp, #0
 800b36a:	6078      	str	r0, [r7, #4]
 800b36c:	6878      	ldr	r0, [r7, #4]
 800b36e:	f7ff ffe7 	bl	800b340 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800b372:	2110      	movs	r1, #16
 800b374:	6878      	ldr	r0, [r7, #4]
 800b376:	f01a fcbc 	bl	8025cf2 <_ZdlPvj>
 800b37a:	687b      	ldr	r3, [r7, #4]
 800b37c:	4618      	mov	r0, r3
 800b37e:	3708      	adds	r7, #8
 800b380:	46bd      	mov	sp, r7
 800b382:	bd80      	pop	{r7, pc}

0800b384 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800b384:	b580      	push	{r7, lr}
 800b386:	b082      	sub	sp, #8
 800b388:	af00      	add	r7, sp, #0
 800b38a:	6078      	str	r0, [r7, #4]
 800b38c:	4a05      	ldr	r2, [pc, #20]	@ (800b3a4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	601a      	str	r2, [r3, #0]
 800b392:	687b      	ldr	r3, [r7, #4]
 800b394:	4618      	mov	r0, r3
 800b396:	f7ff ff61 	bl	800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800b39a:	687b      	ldr	r3, [r7, #4]
 800b39c:	4618      	mov	r0, r3
 800b39e:	3708      	adds	r7, #8
 800b3a0:	46bd      	mov	sp, r7
 800b3a2:	bd80      	pop	{r7, pc}
 800b3a4:	0802841c 	.word	0x0802841c

0800b3a8 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800b3a8:	b580      	push	{r7, lr}
 800b3aa:	b082      	sub	sp, #8
 800b3ac:	af00      	add	r7, sp, #0
 800b3ae:	6078      	str	r0, [r7, #4]
 800b3b0:	6878      	ldr	r0, [r7, #4]
 800b3b2:	f7ff ffe7 	bl	800b384 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800b3b6:	2110      	movs	r1, #16
 800b3b8:	6878      	ldr	r0, [r7, #4]
 800b3ba:	f01a fc9a 	bl	8025cf2 <_ZdlPvj>
 800b3be:	687b      	ldr	r3, [r7, #4]
 800b3c0:	4618      	mov	r0, r3
 800b3c2:	3708      	adds	r7, #8
 800b3c4:	46bd      	mov	sp, r7
 800b3c6:	bd80      	pop	{r7, pc}

0800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>:
class BoxWithBorderButtonStyle : public T
 800b3c8:	b580      	push	{r7, lr}
 800b3ca:	b082      	sub	sp, #8
 800b3cc:	af00      	add	r7, sp, #0
 800b3ce:	6078      	str	r0, [r7, #4]
 800b3d0:	4a08      	ldr	r2, [pc, #32]	@ (800b3f4 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev+0x2c>)
 800b3d2:	687b      	ldr	r3, [r7, #4]
 800b3d4:	601a      	str	r2, [r3, #0]
 800b3d6:	687b      	ldr	r3, [r7, #4]
 800b3d8:	3334      	adds	r3, #52	@ 0x34
 800b3da:	4618      	mov	r0, r3
 800b3dc:	f7ff fe2c 	bl	800b038 <_ZN8touchgfx13BoxWithBorderD1Ev>
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	4618      	mov	r0, r3
 800b3e4:	f7ff fe06 	bl	800aff4 <_ZN8touchgfx18ClickButtonTriggerD1Ev>
 800b3e8:	687b      	ldr	r3, [r7, #4]
 800b3ea:	4618      	mov	r0, r3
 800b3ec:	3708      	adds	r7, #8
 800b3ee:	46bd      	mov	sp, r7
 800b3f0:	bd80      	pop	{r7, pc}
 800b3f2:	bf00      	nop
 800b3f4:	08028434 	.word	0x08028434

0800b3f8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED0Ev>:
 800b3f8:	b580      	push	{r7, lr}
 800b3fa:	b082      	sub	sp, #8
 800b3fc:	af00      	add	r7, sp, #0
 800b3fe:	6078      	str	r0, [r7, #4]
 800b400:	6878      	ldr	r0, [r7, #4]
 800b402:	f7ff ffe1 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800b406:	2178      	movs	r1, #120	@ 0x78
 800b408:	6878      	ldr	r0, [r7, #4]
 800b40a:	f01a fc72 	bl	8025cf2 <_ZdlPvj>
 800b40e:	687b      	ldr	r3, [r7, #4]
 800b410:	4618      	mov	r0, r3
 800b412:	3708      	adds	r7, #8
 800b414:	46bd      	mov	sp, r7
 800b416:	bd80      	pop	{r7, pc}

0800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>:
class TextAreaWithOneWildcard : public TextAreaWithWildcardBase
 800b418:	b580      	push	{r7, lr}
 800b41a:	b082      	sub	sp, #8
 800b41c:	af00      	add	r7, sp, #0
 800b41e:	6078      	str	r0, [r7, #4]
 800b420:	4a05      	ldr	r2, [pc, #20]	@ (800b438 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev+0x20>)
 800b422:	687b      	ldr	r3, [r7, #4]
 800b424:	601a      	str	r2, [r3, #0]
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	4618      	mov	r0, r3
 800b42a:	f7ff f973 	bl	800a714 <_ZN8touchgfx24TextAreaWithWildcardBaseD1Ev>
 800b42e:	687b      	ldr	r3, [r7, #4]
 800b430:	4618      	mov	r0, r3
 800b432:	3708      	adds	r7, #8
 800b434:	46bd      	mov	sp, r7
 800b436:	bd80      	pop	{r7, pc}
 800b438:	0802851c 	.word	0x0802851c

0800b43c <_ZN8touchgfx23TextAreaWithOneWildcardD0Ev>:
 800b43c:	b580      	push	{r7, lr}
 800b43e:	b082      	sub	sp, #8
 800b440:	af00      	add	r7, sp, #0
 800b442:	6078      	str	r0, [r7, #4]
 800b444:	6878      	ldr	r0, [r7, #4]
 800b446:	f7ff ffe7 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800b44a:	214c      	movs	r1, #76	@ 0x4c
 800b44c:	6878      	ldr	r0, [r7, #4]
 800b44e:	f01a fc50 	bl	8025cf2 <_ZdlPvj>
 800b452:	687b      	ldr	r3, [r7, #4]
 800b454:	4618      	mov	r0, r3
 800b456:	3708      	adds	r7, #8
 800b458:	46bd      	mov	sp, r7
 800b45a:	bd80      	pop	{r7, pc}

0800b45c <_ZN8touchgfx6ButtonD1Ev>:
{
/**
 * A button with two images. One image showing the unpressed button and one image showing the
 * pressed state.
 */
class Button : public AbstractButton
 800b45c:	b580      	push	{r7, lr}
 800b45e:	b082      	sub	sp, #8
 800b460:	af00      	add	r7, sp, #0
 800b462:	6078      	str	r0, [r7, #4]
 800b464:	4a05      	ldr	r2, [pc, #20]	@ (800b47c <_ZN8touchgfx6ButtonD1Ev+0x20>)
 800b466:	687b      	ldr	r3, [r7, #4]
 800b468:	601a      	str	r2, [r3, #0]
 800b46a:	687b      	ldr	r3, [r7, #4]
 800b46c:	4618      	mov	r0, r3
 800b46e:	f7ff f9bf 	bl	800a7f0 <_ZN8touchgfx14AbstractButtonD1Ev>
 800b472:	687b      	ldr	r3, [r7, #4]
 800b474:	4618      	mov	r0, r3
 800b476:	3708      	adds	r7, #8
 800b478:	46bd      	mov	sp, r7
 800b47a:	bd80      	pop	{r7, pc}
 800b47c:	08029460 	.word	0x08029460

0800b480 <_ZN8touchgfx6ButtonD0Ev>:
 800b480:	b580      	push	{r7, lr}
 800b482:	b082      	sub	sp, #8
 800b484:	af00      	add	r7, sp, #0
 800b486:	6078      	str	r0, [r7, #4]
 800b488:	6878      	ldr	r0, [r7, #4]
 800b48a:	f7ff ffe7 	bl	800b45c <_ZN8touchgfx6ButtonD1Ev>
 800b48e:	2134      	movs	r1, #52	@ 0x34
 800b490:	6878      	ldr	r0, [r7, #4]
 800b492:	f01a fc2e 	bl	8025cf2 <_ZdlPvj>
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	4618      	mov	r0, r3
 800b49a:	3708      	adds	r7, #8
 800b49c:	46bd      	mov	sp, r7
 800b49e:	bd80      	pop	{r7, pc}

0800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>:
class ButtonWithIcon : public Button
 800b4a0:	b580      	push	{r7, lr}
 800b4a2:	b082      	sub	sp, #8
 800b4a4:	af00      	add	r7, sp, #0
 800b4a6:	6078      	str	r0, [r7, #4]
 800b4a8:	4a05      	ldr	r2, [pc, #20]	@ (800b4c0 <_ZN8touchgfx14ButtonWithIconD1Ev+0x20>)
 800b4aa:	687b      	ldr	r3, [r7, #4]
 800b4ac:	601a      	str	r2, [r3, #0]
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	4618      	mov	r0, r3
 800b4b2:	f7ff ffd3 	bl	800b45c <_ZN8touchgfx6ButtonD1Ev>
 800b4b6:	687b      	ldr	r3, [r7, #4]
 800b4b8:	4618      	mov	r0, r3
 800b4ba:	3708      	adds	r7, #8
 800b4bc:	46bd      	mov	sp, r7
 800b4be:	bd80      	pop	{r7, pc}
 800b4c0:	080295cc 	.word	0x080295cc

0800b4c4 <_ZN8touchgfx14ButtonWithIconD0Ev>:
 800b4c4:	b580      	push	{r7, lr}
 800b4c6:	b082      	sub	sp, #8
 800b4c8:	af00      	add	r7, sp, #0
 800b4ca:	6078      	str	r0, [r7, #4]
 800b4cc:	6878      	ldr	r0, [r7, #4]
 800b4ce:	f7ff ffe7 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800b4d2:	213c      	movs	r1, #60	@ 0x3c
 800b4d4:	6878      	ldr	r0, [r7, #4]
 800b4d6:	f01a fc0c 	bl	8025cf2 <_ZdlPvj>
 800b4da:	687b      	ldr	r3, [r7, #4]
 800b4dc:	4618      	mov	r0, r3
 800b4de:	3708      	adds	r7, #8
 800b4e0:	46bd      	mov	sp, r7
 800b4e2:	bd80      	pop	{r7, pc}

0800b4e4 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b4e4:	b580      	push	{r7, lr}
 800b4e6:	b082      	sub	sp, #8
 800b4e8:	af00      	add	r7, sp, #0
 800b4ea:	6078      	str	r0, [r7, #4]
 800b4ec:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b4ee:	687b      	ldr	r3, [r7, #4]
 800b4f0:	685b      	ldr	r3, [r3, #4]
 800b4f2:	687a      	ldr	r2, [r7, #4]
 800b4f4:	68d2      	ldr	r2, [r2, #12]
 800b4f6:	1052      	asrs	r2, r2, #1
 800b4f8:	1898      	adds	r0, r3, r2
 800b4fa:	687b      	ldr	r3, [r7, #4]
 800b4fc:	68db      	ldr	r3, [r3, #12]
 800b4fe:	f003 0301 	and.w	r3, r3, #1
 800b502:	2b00      	cmp	r3, #0
 800b504:	d102      	bne.n	800b50c <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800b506:	687b      	ldr	r3, [r7, #4]
 800b508:	689b      	ldr	r3, [r3, #8]
 800b50a:	e00a      	b.n	800b522 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800b50c:	687b      	ldr	r3, [r7, #4]
 800b50e:	685b      	ldr	r3, [r3, #4]
 800b510:	687a      	ldr	r2, [r7, #4]
 800b512:	68d2      	ldr	r2, [r2, #12]
 800b514:	1052      	asrs	r2, r2, #1
 800b516:	4413      	add	r3, r2
 800b518:	681b      	ldr	r3, [r3, #0]
 800b51a:	687a      	ldr	r2, [r7, #4]
 800b51c:	6892      	ldr	r2, [r2, #8]
 800b51e:	4413      	add	r3, r2
 800b520:	681b      	ldr	r3, [r3, #0]
 800b522:	6839      	ldr	r1, [r7, #0]
 800b524:	4798      	blx	r3
    }
 800b526:	bf00      	nop
 800b528:	3708      	adds	r7, #8
 800b52a:	46bd      	mov	sp, r7
 800b52c:	bd80      	pop	{r7, pc}

0800b52e <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800b52e:	b480      	push	{r7}
 800b530:	b083      	sub	sp, #12
 800b532:	af00      	add	r7, sp, #0
 800b534:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b536:	687b      	ldr	r3, [r7, #4]
 800b538:	685b      	ldr	r3, [r3, #4]
 800b53a:	2b00      	cmp	r3, #0
 800b53c:	d010      	beq.n	800b560 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	689b      	ldr	r3, [r3, #8]
 800b542:	2b00      	cmp	r3, #0
 800b544:	d107      	bne.n	800b556 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b546:	687b      	ldr	r3, [r7, #4]
 800b548:	68db      	ldr	r3, [r3, #12]
 800b54a:	f003 0301 	and.w	r3, r3, #1
 800b54e:	2b00      	cmp	r3, #0
 800b550:	d101      	bne.n	800b556 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800b552:	2301      	movs	r3, #1
 800b554:	e000      	b.n	800b558 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800b556:	2300      	movs	r3, #0
 800b558:	2b01      	cmp	r3, #1
 800b55a:	d001      	beq.n	800b560 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800b55c:	2301      	movs	r3, #1
 800b55e:	e000      	b.n	800b562 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800b560:	2300      	movs	r3, #0
    }
 800b562:	4618      	mov	r0, r3
 800b564:	370c      	adds	r7, #12
 800b566:	46bd      	mov	sp, r7
 800b568:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b56c:	4770      	bx	lr

0800b56e <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800b56e:	b580      	push	{r7, lr}
 800b570:	b082      	sub	sp, #8
 800b572:	af00      	add	r7, sp, #0
 800b574:	6078      	str	r0, [r7, #4]
 800b576:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800b578:	687b      	ldr	r3, [r7, #4]
 800b57a:	685b      	ldr	r3, [r3, #4]
 800b57c:	687a      	ldr	r2, [r7, #4]
 800b57e:	68d2      	ldr	r2, [r2, #12]
 800b580:	1052      	asrs	r2, r2, #1
 800b582:	1898      	adds	r0, r3, r2
 800b584:	687b      	ldr	r3, [r7, #4]
 800b586:	68db      	ldr	r3, [r3, #12]
 800b588:	f003 0301 	and.w	r3, r3, #1
 800b58c:	2b00      	cmp	r3, #0
 800b58e:	d102      	bne.n	800b596 <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800b590:	687b      	ldr	r3, [r7, #4]
 800b592:	689b      	ldr	r3, [r3, #8]
 800b594:	e00a      	b.n	800b5ac <_ZN8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800b596:	687b      	ldr	r3, [r7, #4]
 800b598:	685b      	ldr	r3, [r3, #4]
 800b59a:	687a      	ldr	r2, [r7, #4]
 800b59c:	68d2      	ldr	r2, [r2, #12]
 800b59e:	1052      	asrs	r2, r2, #1
 800b5a0:	4413      	add	r3, r2
 800b5a2:	681b      	ldr	r3, [r3, #0]
 800b5a4:	687a      	ldr	r2, [r7, #4]
 800b5a6:	6892      	ldr	r2, [r2, #8]
 800b5a8:	4413      	add	r3, r2
 800b5aa:	681b      	ldr	r3, [r3, #0]
 800b5ac:	6839      	ldr	r1, [r7, #0]
 800b5ae:	4798      	blx	r3
    }
 800b5b0:	bf00      	nop
 800b5b2:	3708      	adds	r7, #8
 800b5b4:	46bd      	mov	sp, r7
 800b5b6:	bd80      	pop	{r7, pc}

0800b5b8 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800b5b8:	b480      	push	{r7}
 800b5ba:	b083      	sub	sp, #12
 800b5bc:	af00      	add	r7, sp, #0
 800b5be:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	685b      	ldr	r3, [r3, #4]
 800b5c4:	2b00      	cmp	r3, #0
 800b5c6:	d010      	beq.n	800b5ea <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b5c8:	687b      	ldr	r3, [r7, #4]
 800b5ca:	689b      	ldr	r3, [r3, #8]
 800b5cc:	2b00      	cmp	r3, #0
 800b5ce:	d107      	bne.n	800b5e0 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b5d0:	687b      	ldr	r3, [r7, #4]
 800b5d2:	68db      	ldr	r3, [r3, #12]
 800b5d4:	f003 0301 	and.w	r3, r3, #1
 800b5d8:	2b00      	cmp	r3, #0
 800b5da:	d101      	bne.n	800b5e0 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800b5dc:	2301      	movs	r3, #1
 800b5de:	e000      	b.n	800b5e2 <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800b5e0:	2300      	movs	r3, #0
 800b5e2:	2b01      	cmp	r3, #1
 800b5e4:	d001      	beq.n	800b5ea <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800b5e6:	2301      	movs	r3, #1
 800b5e8:	e000      	b.n	800b5ec <_ZNK8touchgfx8CallbackI23humidity_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800b5ea:	2300      	movs	r3, #0
    }
 800b5ec:	4618      	mov	r0, r3
 800b5ee:	370c      	adds	r7, #12
 800b5f0:	46bd      	mov	sp, r7
 800b5f2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b5f6:	4770      	bx	lr

0800b5f8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE18handleAlphaUpdatedEv>:

    /** @copydoc AbstractButtonContainer::handleAlphaUpdated() */
    virtual void handleAlphaUpdated()
 800b5f8:	b590      	push	{r4, r7, lr}
 800b5fa:	b083      	sub	sp, #12
 800b5fc:	af00      	add	r7, sp, #0
 800b5fe:	6078      	str	r0, [r7, #4]
    {
        borderBox.setAlpha(T::getAlpha());
 800b600:	687b      	ldr	r3, [r7, #4]
 800b602:	f103 0434 	add.w	r4, r3, #52	@ 0x34
 800b606:	687b      	ldr	r3, [r7, #4]
 800b608:	4618      	mov	r0, r3
 800b60a:	f7fe ff10 	bl	800a42e <_ZNK8touchgfx23AbstractButtonContainer8getAlphaEv>
 800b60e:	4603      	mov	r3, r0
 800b610:	4619      	mov	r1, r3
 800b612:	4620      	mov	r0, r4
 800b614:	f7fe fd42 	bl	800a09c <_ZN8touchgfx3Box8setAlphaEh>
        T::handleAlphaUpdated();
 800b618:	687b      	ldr	r3, [r7, #4]
 800b61a:	4618      	mov	r0, r3
 800b61c:	f7fe ff53 	bl	800a4c6 <_ZN8touchgfx23AbstractButtonContainer18handleAlphaUpdatedEv>
    }
 800b620:	bf00      	nop
 800b622:	370c      	adds	r7, #12
 800b624:	46bd      	mov	sp, r7
 800b626:	bd90      	pop	{r4, r7, pc}

0800b628 <_ZN20light_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800b628:	b480      	push	{r7}
 800b62a:	b083      	sub	sp, #12
 800b62c:	af00      	add	r7, sp, #0
 800b62e:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b630:	bf00      	nop
 800b632:	370c      	adds	r7, #12
 800b634:	46bd      	mov	sp, r7
 800b636:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b63a:	4770      	bx	lr

0800b63c <_ZN20light_screenViewBase8decreaseEv>:
    virtual void decrease()
 800b63c:	b480      	push	{r7}
 800b63e:	b083      	sub	sp, #12
 800b640:	af00      	add	r7, sp, #0
 800b642:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in light_screen
    }
 800b644:	bf00      	nop
 800b646:	370c      	adds	r7, #12
 800b648:	46bd      	mov	sp, r7
 800b64a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b64e:	4770      	bx	lr

0800b650 <_ZN20light_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800b650:	b580      	push	{r7, lr}
 800b652:	b082      	sub	sp, #8
 800b654:	af00      	add	r7, sp, #0
 800b656:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800b658:	f008 fdf2 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800b65c:	4603      	mov	r3, r0
    }
 800b65e:	4618      	mov	r0, r3
 800b660:	3708      	adds	r7, #8
 800b662:	46bd      	mov	sp, r7
 800b664:	bd80      	pop	{r7, pc}
	...

0800b668 <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>:
class View : public Screen
 800b668:	b580      	push	{r7, lr}
 800b66a:	b082      	sub	sp, #8
 800b66c:	af00      	add	r7, sp, #0
 800b66e:	6078      	str	r0, [r7, #4]
 800b670:	4a05      	ldr	r2, [pc, #20]	@ (800b688 <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev+0x20>)
 800b672:	687b      	ldr	r3, [r7, #4]
 800b674:	601a      	str	r2, [r3, #0]
 800b676:	687b      	ldr	r3, [r7, #4]
 800b678:	4618      	mov	r0, r3
 800b67a:	f7fe fc41 	bl	8009f00 <_ZN8touchgfx6ScreenD1Ev>
 800b67e:	687b      	ldr	r3, [r7, #4]
 800b680:	4618      	mov	r0, r3
 800b682:	3708      	adds	r7, #8
 800b684:	46bd      	mov	sp, r7
 800b686:	bd80      	pop	{r7, pc}
 800b688:	080287d0 	.word	0x080287d0

0800b68c <_ZN8touchgfx4ViewI21light_screenPresenterED0Ev>:
 800b68c:	b580      	push	{r7, lr}
 800b68e:	b082      	sub	sp, #8
 800b690:	af00      	add	r7, sp, #0
 800b692:	6078      	str	r0, [r7, #4]
 800b694:	6878      	ldr	r0, [r7, #4]
 800b696:	f7ff ffe7 	bl	800b668 <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800b69a:	2140      	movs	r1, #64	@ 0x40
 800b69c:	6878      	ldr	r0, [r7, #4]
 800b69e:	f01a fb28 	bl	8025cf2 <_ZdlPvj>
 800b6a2:	687b      	ldr	r3, [r7, #4]
 800b6a4:	4618      	mov	r0, r3
 800b6a6:	3708      	adds	r7, #8
 800b6a8:	46bd      	mov	sp, r7
 800b6aa:	bd80      	pop	{r7, pc}

0800b6ac <_ZN20light_screenViewBaseC1Ev>:
#include <gui_generated/light_screen_screen/light_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

light_screenViewBase::light_screenViewBase() :
 800b6ac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800b6b0:	b0ae      	sub	sp, #184	@ 0xb8
 800b6b2:	af02      	add	r7, sp, #8
 800b6b4:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b6b6:	697b      	ldr	r3, [r7, #20]
 800b6b8:	4618      	mov	r0, r3
 800b6ba:	f000 fb37 	bl	800bd2c <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>
 800b6be:	4add      	ldr	r2, [pc, #884]	@ (800ba34 <_ZN20light_screenViewBaseC1Ev+0x388>)
 800b6c0:	697b      	ldr	r3, [r7, #20]
 800b6c2:	601a      	str	r2, [r3, #0]
 800b6c4:	697b      	ldr	r3, [r7, #20]
 800b6c6:	3340      	adds	r3, #64	@ 0x40
 800b6c8:	4618      	mov	r0, r3
 800b6ca:	f7fe fcb5 	bl	800a038 <_ZN8touchgfx3BoxC1Ev>
 800b6ce:	697b      	ldr	r3, [r7, #20]
 800b6d0:	336c      	adds	r3, #108	@ 0x6c
 800b6d2:	4618      	mov	r0, r3
 800b6d4:	f7fe fd08 	bl	800a0e8 <_ZN8touchgfx8TextAreaC1Ev>
 800b6d8:	697b      	ldr	r3, [r7, #20]
 800b6da:	33b4      	adds	r3, #180	@ 0xb4
 800b6dc:	4618      	mov	r0, r3
 800b6de:	f7ff fccd 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800b6e2:	697b      	ldr	r3, [r7, #20]
 800b6e4:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800b6e8:	4618      	mov	r0, r3
 800b6ea:	f7ff f835 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800b6ee:	697b      	ldr	r3, [r7, #20]
 800b6f0:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800b6f4:	4618      	mov	r0, r3
 800b6f6:	f007 f8a1 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800b6fa:	697b      	ldr	r3, [r7, #20]
 800b6fc:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800b700:	4618      	mov	r0, r3
 800b702:	f007 f89b 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &light_screenViewBase::flexButtonCallbackHandler),
 800b706:	697b      	ldr	r3, [r7, #20]
 800b708:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800b70c:	4bca      	ldr	r3, [pc, #808]	@ (800ba38 <_ZN20light_screenViewBaseC1Ev+0x38c>)
 800b70e:	627b      	str	r3, [r7, #36]	@ 0x24
 800b710:	2300      	movs	r3, #0
 800b712:	62bb      	str	r3, [r7, #40]	@ 0x28
 800b714:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800b718:	cb0c      	ldmia	r3, {r2, r3}
 800b71a:	6979      	ldr	r1, [r7, #20]
 800b71c:	f000 fb1c 	bl	800bd58 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &light_screenViewBase::buttonCallbackHandler)
 800b720:	697b      	ldr	r3, [r7, #20]
 800b722:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800b726:	4bc5      	ldr	r3, [pc, #788]	@ (800ba3c <_ZN20light_screenViewBaseC1Ev+0x390>)
 800b728:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800b72a:	2300      	movs	r3, #0
 800b72c:	633b      	str	r3, [r7, #48]	@ 0x30
 800b72e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800b732:	cb0c      	ldmia	r3, {r2, r3}
 800b734:	6979      	ldr	r1, [r7, #20]
 800b736:	f000 fb2f 	bl	800bd98 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800b73a:	697b      	ldr	r3, [r7, #20]
 800b73c:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800b740:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800b744:	9300      	str	r3, [sp, #0]
 800b746:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800b74a:	2200      	movs	r2, #0
 800b74c:	2100      	movs	r1, #0
 800b74e:	f7fe fa4d 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800b752:	697b      	ldr	r3, [r7, #20]
 800b754:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800b758:	2300      	movs	r3, #0
 800b75a:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800b75e:	2300      	movs	r3, #0
 800b760:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800b764:	2300      	movs	r3, #0
 800b766:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800b76a:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800b76e:	041a      	lsls	r2, r3, #16
 800b770:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800b774:	021b      	lsls	r3, r3, #8
 800b776:	431a      	orrs	r2, r3
 800b778:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800b77c:	4313      	orrs	r3, r2
 800b77e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b782:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800b786:	4611      	mov	r1, r2
 800b788:	4618      	mov	r0, r3
 800b78a:	f7fe f95f 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b78e:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800b790:	4619      	mov	r1, r3
 800b792:	4620      	mov	r0, r4
 800b794:	f7fe fc74 	bl	800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800b798:	697a      	ldr	r2, [r7, #20]
 800b79a:	697b      	ldr	r3, [r7, #20]
 800b79c:	3340      	adds	r3, #64	@ 0x40
 800b79e:	4619      	mov	r1, r3
 800b7a0:	4610      	mov	r0, r2
 800b7a2:	f7fe fc05 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    text.setPosition(87, 18, 306, 48);
 800b7a6:	697b      	ldr	r3, [r7, #20]
 800b7a8:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800b7ac:	2330      	movs	r3, #48	@ 0x30
 800b7ae:	9300      	str	r3, [sp, #0]
 800b7b0:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800b7b4:	2212      	movs	r2, #18
 800b7b6:	2157      	movs	r1, #87	@ 0x57
 800b7b8:	f7fe fa18 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    text.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b7bc:	697b      	ldr	r3, [r7, #20]
 800b7be:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b7c2:	23ff      	movs	r3, #255	@ 0xff
 800b7c4:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800b7c8:	23ff      	movs	r3, #255	@ 0xff
 800b7ca:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800b7ce:	23ff      	movs	r3, #255	@ 0xff
 800b7d0:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800b7d4:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800b7d8:	041a      	lsls	r2, r3, #16
 800b7da:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800b7de:	021b      	lsls	r3, r3, #8
 800b7e0:	431a      	orrs	r2, r3
 800b7e2:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800b7e6:	4313      	orrs	r3, r2
 800b7e8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b7ec:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800b7f0:	4611      	mov	r1, r2
 800b7f2:	4618      	mov	r0, r3
 800b7f4:	f7fe f92a 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b7f8:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800b7fa:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800b7fe:	623b      	str	r3, [r7, #32]
        color = newColor;
 800b800:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800b804:	6a3a      	ldr	r2, [r7, #32]
 800b806:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800b808:	bf00      	nop
    text.setLinespacing(0);
 800b80a:	697b      	ldr	r3, [r7, #20]
 800b80c:	336c      	adds	r3, #108	@ 0x6c
 800b80e:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800b812:	2300      	movs	r3, #0
 800b814:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800b818:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b81c:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800b820:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800b822:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800b826:	681b      	ldr	r3, [r3, #0]
 800b828:	3384      	adds	r3, #132	@ 0x84
 800b82a:	681b      	ldr	r3, [r3, #0]
 800b82c:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800b830:	463a      	mov	r2, r7
 800b832:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800b836:	4610      	mov	r0, r2
 800b838:	4798      	blx	r3
 800b83a:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800b83e:	463a      	mov	r2, r7
 800b840:	ca07      	ldmia	r2, {r0, r1, r2}
 800b842:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800b846:	bf00      	nop
    text.setTypedText(touchgfx::TypedText(T___SINGLEUSE_MZWR));
 800b848:	697b      	ldr	r3, [r7, #20]
 800b84a:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800b84e:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b852:	2106      	movs	r1, #6
 800b854:	4618      	mov	r0, r3
 800b856:	f7fe fc31 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800b85a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b85e:	4619      	mov	r1, r3
 800b860:	4620      	mov	r0, r4
 800b862:	f006 fd5f 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800b866:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800b86a:	4618      	mov	r0, r3
 800b86c:	f7fc fd42 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(text);
 800b870:	697a      	ldr	r2, [r7, #20]
 800b872:	697b      	ldr	r3, [r7, #20]
 800b874:	336c      	adds	r3, #108	@ 0x6c
 800b876:	4619      	mov	r1, r3
 800b878:	4610      	mov	r0, r2
 800b87a:	f7fe fb99 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800b87e:	697b      	ldr	r3, [r7, #20]
 800b880:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b884:	2332      	movs	r3, #50	@ 0x32
 800b886:	9300      	str	r3, [sp, #0]
 800b888:	2332      	movs	r3, #50	@ 0x32
 800b88a:	2200      	movs	r2, #0
 800b88c:	2100      	movs	r1, #0
 800b88e:	f7ff fc95 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800b892:	697b      	ldr	r3, [r7, #20]
 800b894:	33b4      	adds	r3, #180	@ 0xb4
 800b896:	2105      	movs	r1, #5
 800b898:	4618      	mov	r0, r3
 800b89a:	f7ff fcaf 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800b89e:	697b      	ldr	r3, [r7, #20]
 800b8a0:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800b8a4:	2300      	movs	r3, #0
 800b8a6:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800b8aa:	2366      	movs	r3, #102	@ 0x66
 800b8ac:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800b8b0:	2399      	movs	r3, #153	@ 0x99
 800b8b2:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800b8b6:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800b8ba:	041a      	lsls	r2, r3, #16
 800b8bc:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800b8c0:	021b      	lsls	r3, r3, #8
 800b8c2:	431a      	orrs	r2, r3
 800b8c4:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800b8c8:	4313      	orrs	r3, r2
 800b8ca:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b8ce:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800b8d2:	4611      	mov	r1, r2
 800b8d4:	4618      	mov	r0, r3
 800b8d6:	f7fe f8b9 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b8da:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800b8dc:	461d      	mov	r5, r3
 800b8de:	2300      	movs	r3, #0
 800b8e0:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800b8e4:	2399      	movs	r3, #153	@ 0x99
 800b8e6:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800b8ea:	23cc      	movs	r3, #204	@ 0xcc
 800b8ec:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800b8f0:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800b8f4:	041a      	lsls	r2, r3, #16
 800b8f6:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800b8fa:	021b      	lsls	r3, r3, #8
 800b8fc:	431a      	orrs	r2, r3
 800b8fe:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800b902:	4313      	orrs	r3, r2
 800b904:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b908:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800b90c:	4611      	mov	r1, r2
 800b90e:	4618      	mov	r0, r3
 800b910:	f7fe f89c 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b914:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800b916:	461e      	mov	r6, r3
 800b918:	2300      	movs	r3, #0
 800b91a:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800b91e:	2333      	movs	r3, #51	@ 0x33
 800b920:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800b924:	2366      	movs	r3, #102	@ 0x66
 800b926:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800b92a:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800b92e:	041a      	lsls	r2, r3, #16
 800b930:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800b934:	021b      	lsls	r3, r3, #8
 800b936:	431a      	orrs	r2, r3
 800b938:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800b93c:	4313      	orrs	r3, r2
 800b93e:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b942:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800b946:	4611      	mov	r1, r2
 800b948:	4618      	mov	r0, r3
 800b94a:	f7fe f87f 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b94e:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800b950:	4698      	mov	r8, r3
 800b952:	2333      	movs	r3, #51	@ 0x33
 800b954:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800b958:	2366      	movs	r3, #102	@ 0x66
 800b95a:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800b95e:	2399      	movs	r3, #153	@ 0x99
 800b960:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800b964:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800b968:	041a      	lsls	r2, r3, #16
 800b96a:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800b96e:	021b      	lsls	r3, r3, #8
 800b970:	431a      	orrs	r2, r3
 800b972:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800b976:	4313      	orrs	r3, r2
 800b978:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800b97c:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800b980:	4611      	mov	r1, r2
 800b982:	4618      	mov	r0, r3
 800b984:	f7fe f862 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800b988:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800b98a:	9300      	str	r3, [sp, #0]
 800b98c:	4643      	mov	r3, r8
 800b98e:	4632      	mov	r2, r6
 800b990:	4629      	mov	r1, r5
 800b992:	4620      	mov	r0, r4
 800b994:	f7ff fc44 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800b998:	697b      	ldr	r3, [r7, #20]
 800b99a:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800b99e:	697b      	ldr	r3, [r7, #20]
 800b9a0:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800b9a4:	4619      	mov	r1, r3
 800b9a6:	4610      	mov	r0, r2
 800b9a8:	f7fe fd4e 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800b9ac:	697b      	ldr	r3, [r7, #20]
 800b9ae:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800b9b2:	2332      	movs	r3, #50	@ 0x32
 800b9b4:	9300      	str	r3, [sp, #0]
 800b9b6:	2332      	movs	r3, #50	@ 0x32
 800b9b8:	22f5      	movs	r2, #245	@ 0xf5
 800b9ba:	f240 1189 	movw	r1, #393	@ 0x189
 800b9be:	f7fe f915 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800b9c2:	697a      	ldr	r2, [r7, #20]
 800b9c4:	697b      	ldr	r3, [r7, #20]
 800b9c6:	33b4      	adds	r3, #180	@ 0xb4
 800b9c8:	4619      	mov	r1, r3
 800b9ca:	4610      	mov	r0, r2
 800b9cc:	f7fe faf0 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    lightsVal.setPosition(131, 140, 200, 40);
 800b9d0:	697b      	ldr	r3, [r7, #20]
 800b9d2:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800b9d6:	2328      	movs	r3, #40	@ 0x28
 800b9d8:	9300      	str	r3, [sp, #0]
 800b9da:	23c8      	movs	r3, #200	@ 0xc8
 800b9dc:	228c      	movs	r2, #140	@ 0x8c
 800b9de:	2183      	movs	r1, #131	@ 0x83
 800b9e0:	f7fe f904 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    lightsVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800b9e4:	697b      	ldr	r3, [r7, #20]
 800b9e6:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800b9ea:	23ff      	movs	r3, #255	@ 0xff
 800b9ec:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800b9f0:	23ff      	movs	r3, #255	@ 0xff
 800b9f2:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800b9f6:	23ff      	movs	r3, #255	@ 0xff
 800b9f8:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800b9fc:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800ba00:	041a      	lsls	r2, r3, #16
 800ba02:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800ba06:	021b      	lsls	r3, r3, #8
 800ba08:	431a      	orrs	r2, r3
 800ba0a:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800ba0e:	4313      	orrs	r3, r2
 800ba10:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800ba14:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800ba18:	4611      	mov	r1, r2
 800ba1a:	4618      	mov	r0, r3
 800ba1c:	f7fe f816 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ba20:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800ba22:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800ba26:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800ba28:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800ba2c:	69fa      	ldr	r2, [r7, #28]
 800ba2e:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800ba30:	bf00      	nop
 800ba32:	e005      	b.n	800ba40 <_ZN20light_screenViewBaseC1Ev+0x394>
 800ba34:	08028764 	.word	0x08028764
 800ba38:	0800bcbf 	.word	0x0800bcbf
 800ba3c:	0800bce9 	.word	0x0800bce9
    lightsVal.setLinespacing(0);
 800ba40:	697b      	ldr	r3, [r7, #20]
 800ba42:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800ba46:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800ba4a:	2300      	movs	r3, #0
 800ba4c:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800ba50:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800ba54:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800ba58:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800ba5a:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800ba5e:	681b      	ldr	r3, [r3, #0]
 800ba60:	3384      	adds	r3, #132	@ 0x84
 800ba62:	681b      	ldr	r3, [r3, #0]
 800ba64:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800ba68:	463a      	mov	r2, r7
 800ba6a:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800ba6e:	4610      	mov	r0, r2
 800ba70:	4798      	blx	r3
 800ba72:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800ba76:	463a      	mov	r2, r7
 800ba78:	ca07      	ldmia	r2, {r0, r1, r2}
 800ba7a:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800ba7e:	bf00      	nop
    lightsValBuffer[0] = 0;
 800ba80:	697b      	ldr	r3, [r7, #20]
 800ba82:	2200      	movs	r2, #0
 800ba84:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    lightsVal.setWildcard(lightsValBuffer);
 800ba88:	697b      	ldr	r3, [r7, #20]
 800ba8a:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800ba8e:	697b      	ldr	r3, [r7, #20]
 800ba90:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800ba94:	4619      	mov	r1, r3
 800ba96:	4610      	mov	r0, r2
 800ba98:	f7fe fe8e 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    lightsVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_4NA0));
 800ba9c:	697b      	ldr	r3, [r7, #20]
 800ba9e:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800baa2:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800baa6:	2105      	movs	r1, #5
 800baa8:	4618      	mov	r0, r3
 800baaa:	f7fe fb07 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800baae:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800bab2:	4619      	mov	r1, r3
 800bab4:	4620      	mov	r0, r4
 800bab6:	f006 fc35 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800baba:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800babe:	4618      	mov	r0, r3
 800bac0:	f7fc fc18 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(lightsVal);
 800bac4:	697a      	ldr	r2, [r7, #20]
 800bac6:	697b      	ldr	r3, [r7, #20]
 800bac8:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800bacc:	4619      	mov	r1, r3
 800bace:	4610      	mov	r0, r2
 800bad0:	f7fe fa6e 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800bad4:	697b      	ldr	r3, [r7, #20]
 800bad6:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800bada:	2248      	movs	r2, #72	@ 0x48
 800badc:	216f      	movs	r1, #111	@ 0x6f
 800bade:	4618      	mov	r0, r3
 800bae0:	f7fe f8c3 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800bae4:	697b      	ldr	r3, [r7, #20]
 800bae6:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800baea:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800baee:	2100      	movs	r1, #0
 800baf0:	4618      	mov	r0, r3
 800baf2:	f7fd fff1 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800baf6:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800bafa:	2101      	movs	r1, #1
 800bafc:	4618      	mov	r0, r3
 800bafe:	f7fd ffeb 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bb02:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800bb06:	2106      	movs	r1, #6
 800bb08:	4618      	mov	r0, r3
 800bb0a:	f7fd ffe5 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bb0e:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800bb12:	2104      	movs	r1, #4
 800bb14:	4618      	mov	r0, r3
 800bb16:	f7fd ffdf 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bb1a:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800bb1e:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800bb22:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800bb26:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800bb2a:	9300      	str	r3, [sp, #0]
 800bb2c:	4603      	mov	r3, r0
 800bb2e:	4620      	mov	r0, r4
 800bb30:	f006 fdee 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800bb34:	697b      	ldr	r3, [r7, #20]
 800bb36:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800bb3a:	2200      	movs	r2, #0
 800bb3c:	2161      	movs	r1, #97	@ 0x61
 800bb3e:	4618      	mov	r0, r3
 800bb40:	f7fe fe96 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800bb44:	697b      	ldr	r3, [r7, #20]
 800bb46:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800bb4a:	697b      	ldr	r3, [r7, #20]
 800bb4c:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800bb50:	4619      	mov	r1, r3
 800bb52:	4610      	mov	r0, r2
 800bb54:	f7fe fe3d 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800bb58:	697a      	ldr	r2, [r7, #20]
 800bb5a:	697b      	ldr	r3, [r7, #20]
 800bb5c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800bb60:	4619      	mov	r1, r3
 800bb62:	4610      	mov	r0, r2
 800bb64:	f7fe fa24 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800bb68:	697b      	ldr	r3, [r7, #20]
 800bb6a:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800bb6e:	22c3      	movs	r2, #195	@ 0xc3
 800bb70:	216f      	movs	r1, #111	@ 0x6f
 800bb72:	4618      	mov	r0, r3
 800bb74:	f7fe f879 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800bb78:	697b      	ldr	r3, [r7, #20]
 800bb7a:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800bb7e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800bb82:	2100      	movs	r1, #0
 800bb84:	4618      	mov	r0, r3
 800bb86:	f7fd ffa7 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bb8a:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800bb8e:	2101      	movs	r1, #1
 800bb90:	4618      	mov	r0, r3
 800bb92:	f7fd ffa1 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bb96:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800bb9a:	2105      	movs	r1, #5
 800bb9c:	4618      	mov	r0, r3
 800bb9e:	f7fd ff9b 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bba2:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800bba6:	2104      	movs	r1, #4
 800bba8:	4618      	mov	r0, r3
 800bbaa:	f7fd ff95 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bbae:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800bbb2:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800bbb6:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800bbba:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800bbbe:	9300      	str	r3, [sp, #0]
 800bbc0:	4603      	mov	r3, r0
 800bbc2:	4620      	mov	r0, r4
 800bbc4:	f006 fda4 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800bbc8:	697b      	ldr	r3, [r7, #20]
 800bbca:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800bbce:	2200      	movs	r2, #0
 800bbd0:	215f      	movs	r1, #95	@ 0x5f
 800bbd2:	4618      	mov	r0, r3
 800bbd4:	f7fe fe4c 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800bbd8:	697b      	ldr	r3, [r7, #20]
 800bbda:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800bbde:	697b      	ldr	r3, [r7, #20]
 800bbe0:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800bbe4:	4619      	mov	r1, r3
 800bbe6:	4610      	mov	r0, r2
 800bbe8:	f7fe fdf3 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800bbec:	697a      	ldr	r2, [r7, #20]
 800bbee:	697b      	ldr	r3, [r7, #20]
 800bbf0:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800bbf4:	4619      	mov	r1, r3
 800bbf6:	4610      	mov	r0, r2
 800bbf8:	f7fe f9da 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800bbfc:	697b      	ldr	r3, [r7, #20]
 800bbfe:	4618      	mov	r0, r3
 800bc00:	37b0      	adds	r7, #176	@ 0xb0
 800bc02:	46bd      	mov	sp, r7
 800bc04:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800bc08 <_ZN20light_screenViewBaseD1Ev>:

light_screenViewBase::~light_screenViewBase()
 800bc08:	b580      	push	{r7, lr}
 800bc0a:	b082      	sub	sp, #8
 800bc0c:	af00      	add	r7, sp, #0
 800bc0e:	6078      	str	r0, [r7, #4]
 800bc10:	4a1c      	ldr	r2, [pc, #112]	@ (800bc84 <_ZN20light_screenViewBaseD1Ev+0x7c>)
 800bc12:	687b      	ldr	r3, [r7, #4]
 800bc14:	601a      	str	r2, [r3, #0]
{

}
 800bc16:	687b      	ldr	r3, [r7, #4]
 800bc18:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800bc1c:	4618      	mov	r0, r3
 800bc1e:	f000 f8db 	bl	800bdd8 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800bc22:	687b      	ldr	r3, [r7, #4]
 800bc24:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800bc28:	4618      	mov	r0, r3
 800bc2a:	f000 f8f7 	bl	800be1c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800bc2e:	687b      	ldr	r3, [r7, #4]
 800bc30:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800bc34:	4618      	mov	r0, r3
 800bc36:	f7ff fc33 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800bc40:	4618      	mov	r0, r3
 800bc42:	f7ff fc2d 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800bc46:	687b      	ldr	r3, [r7, #4]
 800bc48:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800bc4c:	4618      	mov	r0, r3
 800bc4e:	f7ff fbe3 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800bc52:	687b      	ldr	r3, [r7, #4]
 800bc54:	33b4      	adds	r3, #180	@ 0xb4
 800bc56:	4618      	mov	r0, r3
 800bc58:	f7ff fbb6 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800bc5c:	687b      	ldr	r3, [r7, #4]
 800bc5e:	336c      	adds	r3, #108	@ 0x6c
 800bc60:	4618      	mov	r0, r3
 800bc62:	f7fe fd05 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800bc66:	687b      	ldr	r3, [r7, #4]
 800bc68:	3340      	adds	r3, #64	@ 0x40
 800bc6a:	4618      	mov	r0, r3
 800bc6c:	f7fe fc36 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800bc70:	687b      	ldr	r3, [r7, #4]
 800bc72:	4618      	mov	r0, r3
 800bc74:	f7ff fcf8 	bl	800b668 <_ZN8touchgfx4ViewI21light_screenPresenterED1Ev>
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	4618      	mov	r0, r3
 800bc7c:	3708      	adds	r7, #8
 800bc7e:	46bd      	mov	sp, r7
 800bc80:	bd80      	pop	{r7, pc}
 800bc82:	bf00      	nop
 800bc84:	08028764 	.word	0x08028764

0800bc88 <_ZN20light_screenViewBaseD0Ev>:
light_screenViewBase::~light_screenViewBase()
 800bc88:	b580      	push	{r7, lr}
 800bc8a:	b082      	sub	sp, #8
 800bc8c:	af00      	add	r7, sp, #0
 800bc8e:	6078      	str	r0, [r7, #4]
}
 800bc90:	6878      	ldr	r0, [r7, #4]
 800bc92:	f7ff ffb9 	bl	800bc08 <_ZN20light_screenViewBaseD1Ev>
 800bc96:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800bc9a:	6878      	ldr	r0, [r7, #4]
 800bc9c:	f01a f829 	bl	8025cf2 <_ZdlPvj>
 800bca0:	687b      	ldr	r3, [r7, #4]
 800bca2:	4618      	mov	r0, r3
 800bca4:	3708      	adds	r7, #8
 800bca6:	46bd      	mov	sp, r7
 800bca8:	bd80      	pop	{r7, pc}

0800bcaa <_ZN20light_screenViewBase11setupScreenEv>:

void light_screenViewBase::setupScreen()
{
 800bcaa:	b480      	push	{r7}
 800bcac:	b083      	sub	sp, #12
 800bcae:	af00      	add	r7, sp, #0
 800bcb0:	6078      	str	r0, [r7, #4]

}
 800bcb2:	bf00      	nop
 800bcb4:	370c      	adds	r7, #12
 800bcb6:	46bd      	mov	sp, r7
 800bcb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bcbc:	4770      	bx	lr

0800bcbe <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void light_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800bcbe:	b580      	push	{r7, lr}
 800bcc0:	b082      	sub	sp, #8
 800bcc2:	af00      	add	r7, sp, #0
 800bcc4:	6078      	str	r0, [r7, #4]
 800bcc6:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800bcc8:	687b      	ldr	r3, [r7, #4]
 800bcca:	33b4      	adds	r3, #180	@ 0xb4
 800bccc:	683a      	ldr	r2, [r7, #0]
 800bcce:	429a      	cmp	r2, r3
 800bcd0:	d106      	bne.n	800bce0 <_ZN20light_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800bcd2:	6878      	ldr	r0, [r7, #4]
 800bcd4:	f7ff fcbc 	bl	800b650 <_ZN20light_screenViewBase11applicationEv>
 800bcd8:	4603      	mov	r3, r0
 800bcda:	4618      	mov	r0, r3
 800bcdc:	f7fd f830 	bl	8008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800bce0:	bf00      	nop
 800bce2:	3708      	adds	r7, #8
 800bce4:	46bd      	mov	sp, r7
 800bce6:	bd80      	pop	{r7, pc}

0800bce8 <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void light_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800bce8:	b580      	push	{r7, lr}
 800bcea:	b082      	sub	sp, #8
 800bcec:	af00      	add	r7, sp, #0
 800bcee:	6078      	str	r0, [r7, #4]
 800bcf0:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800bcf2:	687b      	ldr	r3, [r7, #4]
 800bcf4:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800bcf8:	683a      	ldr	r2, [r7, #0]
 800bcfa:	429a      	cmp	r2, r3
 800bcfc:	d105      	bne.n	800bd0a <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800bcfe:	687b      	ldr	r3, [r7, #4]
 800bd00:	681b      	ldr	r3, [r3, #0]
 800bd02:	332c      	adds	r3, #44	@ 0x2c
 800bd04:	681b      	ldr	r3, [r3, #0]
 800bd06:	6878      	ldr	r0, [r7, #4]
 800bd08:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800bd0a:	687b      	ldr	r3, [r7, #4]
 800bd0c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800bd10:	683a      	ldr	r2, [r7, #0]
 800bd12:	429a      	cmp	r2, r3
 800bd14:	d105      	bne.n	800bd22 <_ZN20light_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800bd16:	687b      	ldr	r3, [r7, #4]
 800bd18:	681b      	ldr	r3, [r3, #0]
 800bd1a:	3330      	adds	r3, #48	@ 0x30
 800bd1c:	681b      	ldr	r3, [r3, #0]
 800bd1e:	6878      	ldr	r0, [r7, #4]
 800bd20:	4798      	blx	r3
    }
}
 800bd22:	bf00      	nop
 800bd24:	3708      	adds	r7, #8
 800bd26:	46bd      	mov	sp, r7
 800bd28:	bd80      	pop	{r7, pc}
	...

0800bd2c <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev>:
    View()
 800bd2c:	b580      	push	{r7, lr}
 800bd2e:	b082      	sub	sp, #8
 800bd30:	af00      	add	r7, sp, #0
 800bd32:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800bd34:	687b      	ldr	r3, [r7, #4]
 800bd36:	4618      	mov	r0, r3
 800bd38:	f009 fd98 	bl	801586c <_ZN8touchgfx6ScreenC1Ev>
 800bd3c:	4a05      	ldr	r2, [pc, #20]	@ (800bd54 <_ZN8touchgfx4ViewI21light_screenPresenterEC1Ev+0x28>)
 800bd3e:	687b      	ldr	r3, [r7, #4]
 800bd40:	601a      	str	r2, [r3, #0]
 800bd42:	687b      	ldr	r3, [r7, #4]
 800bd44:	2200      	movs	r2, #0
 800bd46:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800bd48:	687b      	ldr	r3, [r7, #4]
 800bd4a:	4618      	mov	r0, r3
 800bd4c:	3708      	adds	r7, #8
 800bd4e:	46bd      	mov	sp, r7
 800bd50:	bd80      	pop	{r7, pc}
 800bd52:	bf00      	nop
 800bd54:	080287d0 	.word	0x080287d0

0800bd58 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800bd58:	b580      	push	{r7, lr}
 800bd5a:	b084      	sub	sp, #16
 800bd5c:	af00      	add	r7, sp, #0
 800bd5e:	60f8      	str	r0, [r7, #12]
 800bd60:	60b9      	str	r1, [r7, #8]
 800bd62:	4639      	mov	r1, r7
 800bd64:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800bd68:	68fb      	ldr	r3, [r7, #12]
 800bd6a:	4618      	mov	r0, r3
 800bd6c:	f7ff f9c6 	bl	800b0fc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800bd70:	4a08      	ldr	r2, [pc, #32]	@ (800bd94 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800bd72:	68fb      	ldr	r3, [r7, #12]
 800bd74:	601a      	str	r2, [r3, #0]
 800bd76:	68fb      	ldr	r3, [r7, #12]
 800bd78:	68ba      	ldr	r2, [r7, #8]
 800bd7a:	605a      	str	r2, [r3, #4]
 800bd7c:	68fb      	ldr	r3, [r7, #12]
 800bd7e:	3308      	adds	r3, #8
 800bd80:	463a      	mov	r2, r7
 800bd82:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bd86:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800bd8a:	68fb      	ldr	r3, [r7, #12]
 800bd8c:	4618      	mov	r0, r3
 800bd8e:	3710      	adds	r7, #16
 800bd90:	46bd      	mov	sp, r7
 800bd92:	bd80      	pop	{r7, pc}
 800bd94:	080287b8 	.word	0x080287b8

0800bd98 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800bd98:	b580      	push	{r7, lr}
 800bd9a:	b084      	sub	sp, #16
 800bd9c:	af00      	add	r7, sp, #0
 800bd9e:	60f8      	str	r0, [r7, #12]
 800bda0:	60b9      	str	r1, [r7, #8]
 800bda2:	4639      	mov	r1, r7
 800bda4:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800bda8:	68fb      	ldr	r3, [r7, #12]
 800bdaa:	4618      	mov	r0, r3
 800bdac:	f7ff f9d6 	bl	800b15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800bdb0:	4a08      	ldr	r2, [pc, #32]	@ (800bdd4 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800bdb2:	68fb      	ldr	r3, [r7, #12]
 800bdb4:	601a      	str	r2, [r3, #0]
 800bdb6:	68fb      	ldr	r3, [r7, #12]
 800bdb8:	68ba      	ldr	r2, [r7, #8]
 800bdba:	605a      	str	r2, [r3, #4]
 800bdbc:	68fb      	ldr	r3, [r7, #12]
 800bdbe:	3308      	adds	r3, #8
 800bdc0:	463a      	mov	r2, r7
 800bdc2:	e892 0003 	ldmia.w	r2, {r0, r1}
 800bdc6:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800bdca:	68fb      	ldr	r3, [r7, #12]
 800bdcc:	4618      	mov	r0, r3
 800bdce:	3710      	adds	r7, #16
 800bdd0:	46bd      	mov	sp, r7
 800bdd2:	bd80      	pop	{r7, pc}
 800bdd4:	080287a0 	.word	0x080287a0

0800bdd8 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800bdd8:	b580      	push	{r7, lr}
 800bdda:	b082      	sub	sp, #8
 800bddc:	af00      	add	r7, sp, #0
 800bdde:	6078      	str	r0, [r7, #4]
 800bde0:	4a05      	ldr	r2, [pc, #20]	@ (800bdf8 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	601a      	str	r2, [r3, #0]
 800bde6:	687b      	ldr	r3, [r7, #4]
 800bde8:	4618      	mov	r0, r3
 800bdea:	f7ff fa57 	bl	800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800bdee:	687b      	ldr	r3, [r7, #4]
 800bdf0:	4618      	mov	r0, r3
 800bdf2:	3708      	adds	r7, #8
 800bdf4:	46bd      	mov	sp, r7
 800bdf6:	bd80      	pop	{r7, pc}
 800bdf8:	080287a0 	.word	0x080287a0

0800bdfc <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800bdfc:	b580      	push	{r7, lr}
 800bdfe:	b082      	sub	sp, #8
 800be00:	af00      	add	r7, sp, #0
 800be02:	6078      	str	r0, [r7, #4]
 800be04:	6878      	ldr	r0, [r7, #4]
 800be06:	f7ff ffe7 	bl	800bdd8 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800be0a:	2110      	movs	r1, #16
 800be0c:	6878      	ldr	r0, [r7, #4]
 800be0e:	f019 ff70 	bl	8025cf2 <_ZdlPvj>
 800be12:	687b      	ldr	r3, [r7, #4]
 800be14:	4618      	mov	r0, r3
 800be16:	3708      	adds	r7, #8
 800be18:	46bd      	mov	sp, r7
 800be1a:	bd80      	pop	{r7, pc}

0800be1c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800be1c:	b580      	push	{r7, lr}
 800be1e:	b082      	sub	sp, #8
 800be20:	af00      	add	r7, sp, #0
 800be22:	6078      	str	r0, [r7, #4]
 800be24:	4a05      	ldr	r2, [pc, #20]	@ (800be3c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800be26:	687b      	ldr	r3, [r7, #4]
 800be28:	601a      	str	r2, [r3, #0]
 800be2a:	687b      	ldr	r3, [r7, #4]
 800be2c:	4618      	mov	r0, r3
 800be2e:	f7ff fa15 	bl	800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800be32:	687b      	ldr	r3, [r7, #4]
 800be34:	4618      	mov	r0, r3
 800be36:	3708      	adds	r7, #8
 800be38:	46bd      	mov	sp, r7
 800be3a:	bd80      	pop	{r7, pc}
 800be3c:	080287b8 	.word	0x080287b8

0800be40 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800be40:	b580      	push	{r7, lr}
 800be42:	b082      	sub	sp, #8
 800be44:	af00      	add	r7, sp, #0
 800be46:	6078      	str	r0, [r7, #4]
 800be48:	6878      	ldr	r0, [r7, #4]
 800be4a:	f7ff ffe7 	bl	800be1c <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800be4e:	2110      	movs	r1, #16
 800be50:	6878      	ldr	r0, [r7, #4]
 800be52:	f019 ff4e 	bl	8025cf2 <_ZdlPvj>
 800be56:	687b      	ldr	r3, [r7, #4]
 800be58:	4618      	mov	r0, r3
 800be5a:	3708      	adds	r7, #8
 800be5c:	46bd      	mov	sp, r7
 800be5e:	bd80      	pop	{r7, pc}

0800be60 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800be60:	b580      	push	{r7, lr}
 800be62:	b082      	sub	sp, #8
 800be64:	af00      	add	r7, sp, #0
 800be66:	6078      	str	r0, [r7, #4]
 800be68:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800be6a:	687b      	ldr	r3, [r7, #4]
 800be6c:	685b      	ldr	r3, [r3, #4]
 800be6e:	687a      	ldr	r2, [r7, #4]
 800be70:	68d2      	ldr	r2, [r2, #12]
 800be72:	1052      	asrs	r2, r2, #1
 800be74:	1898      	adds	r0, r3, r2
 800be76:	687b      	ldr	r3, [r7, #4]
 800be78:	68db      	ldr	r3, [r3, #12]
 800be7a:	f003 0301 	and.w	r3, r3, #1
 800be7e:	2b00      	cmp	r3, #0
 800be80:	d102      	bne.n	800be88 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800be82:	687b      	ldr	r3, [r7, #4]
 800be84:	689b      	ldr	r3, [r3, #8]
 800be86:	e00a      	b.n	800be9e <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800be88:	687b      	ldr	r3, [r7, #4]
 800be8a:	685b      	ldr	r3, [r3, #4]
 800be8c:	687a      	ldr	r2, [r7, #4]
 800be8e:	68d2      	ldr	r2, [r2, #12]
 800be90:	1052      	asrs	r2, r2, #1
 800be92:	4413      	add	r3, r2
 800be94:	681b      	ldr	r3, [r3, #0]
 800be96:	687a      	ldr	r2, [r7, #4]
 800be98:	6892      	ldr	r2, [r2, #8]
 800be9a:	4413      	add	r3, r2
 800be9c:	681b      	ldr	r3, [r3, #0]
 800be9e:	6839      	ldr	r1, [r7, #0]
 800bea0:	4798      	blx	r3
    }
 800bea2:	bf00      	nop
 800bea4:	3708      	adds	r7, #8
 800bea6:	46bd      	mov	sp, r7
 800bea8:	bd80      	pop	{r7, pc}

0800beaa <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800beaa:	b480      	push	{r7}
 800beac:	b083      	sub	sp, #12
 800beae:	af00      	add	r7, sp, #0
 800beb0:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800beb2:	687b      	ldr	r3, [r7, #4]
 800beb4:	685b      	ldr	r3, [r3, #4]
 800beb6:	2b00      	cmp	r3, #0
 800beb8:	d010      	beq.n	800bedc <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800beba:	687b      	ldr	r3, [r7, #4]
 800bebc:	689b      	ldr	r3, [r3, #8]
 800bebe:	2b00      	cmp	r3, #0
 800bec0:	d107      	bne.n	800bed2 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bec2:	687b      	ldr	r3, [r7, #4]
 800bec4:	68db      	ldr	r3, [r3, #12]
 800bec6:	f003 0301 	and.w	r3, r3, #1
 800beca:	2b00      	cmp	r3, #0
 800becc:	d101      	bne.n	800bed2 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800bece:	2301      	movs	r3, #1
 800bed0:	e000      	b.n	800bed4 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800bed2:	2300      	movs	r3, #0
 800bed4:	2b01      	cmp	r3, #1
 800bed6:	d001      	beq.n	800bedc <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800bed8:	2301      	movs	r3, #1
 800beda:	e000      	b.n	800bede <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800bedc:	2300      	movs	r3, #0
    }
 800bede:	4618      	mov	r0, r3
 800bee0:	370c      	adds	r7, #12
 800bee2:	46bd      	mov	sp, r7
 800bee4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bee8:	4770      	bx	lr

0800beea <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800beea:	b580      	push	{r7, lr}
 800beec:	b082      	sub	sp, #8
 800beee:	af00      	add	r7, sp, #0
 800bef0:	6078      	str	r0, [r7, #4]
 800bef2:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800bef4:	687b      	ldr	r3, [r7, #4]
 800bef6:	685b      	ldr	r3, [r3, #4]
 800bef8:	687a      	ldr	r2, [r7, #4]
 800befa:	68d2      	ldr	r2, [r2, #12]
 800befc:	1052      	asrs	r2, r2, #1
 800befe:	1898      	adds	r0, r3, r2
 800bf00:	687b      	ldr	r3, [r7, #4]
 800bf02:	68db      	ldr	r3, [r3, #12]
 800bf04:	f003 0301 	and.w	r3, r3, #1
 800bf08:	2b00      	cmp	r3, #0
 800bf0a:	d102      	bne.n	800bf12 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800bf0c:	687b      	ldr	r3, [r7, #4]
 800bf0e:	689b      	ldr	r3, [r3, #8]
 800bf10:	e00a      	b.n	800bf28 <_ZN8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800bf12:	687b      	ldr	r3, [r7, #4]
 800bf14:	685b      	ldr	r3, [r3, #4]
 800bf16:	687a      	ldr	r2, [r7, #4]
 800bf18:	68d2      	ldr	r2, [r2, #12]
 800bf1a:	1052      	asrs	r2, r2, #1
 800bf1c:	4413      	add	r3, r2
 800bf1e:	681b      	ldr	r3, [r3, #0]
 800bf20:	687a      	ldr	r2, [r7, #4]
 800bf22:	6892      	ldr	r2, [r2, #8]
 800bf24:	4413      	add	r3, r2
 800bf26:	681b      	ldr	r3, [r3, #0]
 800bf28:	6839      	ldr	r1, [r7, #0]
 800bf2a:	4798      	blx	r3
    }
 800bf2c:	bf00      	nop
 800bf2e:	3708      	adds	r7, #8
 800bf30:	46bd      	mov	sp, r7
 800bf32:	bd80      	pop	{r7, pc}

0800bf34 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800bf34:	b480      	push	{r7}
 800bf36:	b083      	sub	sp, #12
 800bf38:	af00      	add	r7, sp, #0
 800bf3a:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800bf3c:	687b      	ldr	r3, [r7, #4]
 800bf3e:	685b      	ldr	r3, [r3, #4]
 800bf40:	2b00      	cmp	r3, #0
 800bf42:	d010      	beq.n	800bf66 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	689b      	ldr	r3, [r3, #8]
 800bf48:	2b00      	cmp	r3, #0
 800bf4a:	d107      	bne.n	800bf5c <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bf4c:	687b      	ldr	r3, [r7, #4]
 800bf4e:	68db      	ldr	r3, [r3, #12]
 800bf50:	f003 0301 	and.w	r3, r3, #1
 800bf54:	2b00      	cmp	r3, #0
 800bf56:	d101      	bne.n	800bf5c <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800bf58:	2301      	movs	r3, #1
 800bf5a:	e000      	b.n	800bf5e <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800bf5c:	2300      	movs	r3, #0
 800bf5e:	2b01      	cmp	r3, #1
 800bf60:	d001      	beq.n	800bf66 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800bf62:	2301      	movs	r3, #1
 800bf64:	e000      	b.n	800bf68 <_ZNK8touchgfx8CallbackI20light_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800bf66:	2300      	movs	r3, #0
    }
 800bf68:	4618      	mov	r0, r3
 800bf6a:	370c      	adds	r7, #12
 800bf6c:	46bd      	mov	sp, r7
 800bf6e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bf72:	4770      	bx	lr

0800bf74 <_ZN8touchgfx14AbstractButtonC1Ev>:
    AbstractButton()
 800bf74:	b580      	push	{r7, lr}
 800bf76:	b082      	sub	sp, #8
 800bf78:	af00      	add	r7, sp, #0
 800bf7a:	6078      	str	r0, [r7, #4]
        : Widget(), action(), pressed(false)
 800bf7c:	687b      	ldr	r3, [r7, #4]
 800bf7e:	4618      	mov	r0, r3
 800bf80:	2326      	movs	r3, #38	@ 0x26
 800bf82:	461a      	mov	r2, r3
 800bf84:	2100      	movs	r1, #0
 800bf86:	f01a f96a 	bl	802625e <memset>
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	4618      	mov	r0, r3
 800bf8e:	f7fe f81f 	bl	8009fd0 <_ZN8touchgfx6WidgetC1Ev>
 800bf92:	4a0a      	ldr	r2, [pc, #40]	@ (800bfbc <_ZN8touchgfx14AbstractButtonC1Ev+0x48>)
 800bf94:	687b      	ldr	r3, [r7, #4]
 800bf96:	601a      	str	r2, [r3, #0]
 800bf98:	687b      	ldr	r3, [r7, #4]
 800bf9a:	2200      	movs	r2, #0
 800bf9c:	629a      	str	r2, [r3, #40]	@ 0x28
 800bf9e:	687b      	ldr	r3, [r7, #4]
 800bfa0:	2200      	movs	r2, #0
 800bfa2:	f883 202c 	strb.w	r2, [r3, #44]	@ 0x2c
        setTouchable(true);
 800bfa6:	687b      	ldr	r3, [r7, #4]
 800bfa8:	2101      	movs	r1, #1
 800bfaa:	4618      	mov	r0, r3
 800bfac:	f7fd feec 	bl	8009d88 <_ZN8touchgfx8Drawable12setTouchableEb>
    }
 800bfb0:	687b      	ldr	r3, [r7, #4]
 800bfb2:	4618      	mov	r0, r3
 800bfb4:	3708      	adds	r7, #8
 800bfb6:	46bd      	mov	sp, r7
 800bfb8:	bd80      	pop	{r7, pc}
 800bfba:	bf00      	nop
 800bfbc:	08029284 	.word	0x08029284

0800bfc0 <_ZN8touchgfx6ButtonC1Ev>:
{
public:
    Button()
 800bfc0:	b580      	push	{r7, lr}
 800bfc2:	b082      	sub	sp, #8
 800bfc4:	af00      	add	r7, sp, #0
 800bfc6:	6078      	str	r0, [r7, #4]
        : AbstractButton(), up(), down(), alpha(255)
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	4618      	mov	r0, r3
 800bfcc:	f7ff ffd2 	bl	800bf74 <_ZN8touchgfx14AbstractButtonC1Ev>
 800bfd0:	4a0c      	ldr	r2, [pc, #48]	@ (800c004 <_ZN8touchgfx6ButtonC1Ev+0x44>)
 800bfd2:	687b      	ldr	r3, [r7, #4]
 800bfd4:	601a      	str	r2, [r3, #0]
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	332e      	adds	r3, #46	@ 0x2e
 800bfda:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bfde:	4618      	mov	r0, r3
 800bfe0:	f7fd fd7a 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bfe4:	687b      	ldr	r3, [r7, #4]
 800bfe6:	3330      	adds	r3, #48	@ 0x30
 800bfe8:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800bfec:	4618      	mov	r0, r3
 800bfee:	f7fd fd73 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800bff2:	687b      	ldr	r3, [r7, #4]
 800bff4:	22ff      	movs	r2, #255	@ 0xff
 800bff6:	f883 2032 	strb.w	r2, [r3, #50]	@ 0x32
    {
    }
 800bffa:	687b      	ldr	r3, [r7, #4]
 800bffc:	4618      	mov	r0, r3
 800bffe:	3708      	adds	r7, #8
 800c000:	46bd      	mov	sp, r7
 800c002:	bd80      	pop	{r7, pc}
 800c004:	08029460 	.word	0x08029460

0800c008 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>:
 * when it is subsequently pressed, it will pop back out.
 */
class ToggleButton : public Button
{
public:
    virtual void setBitmaps(const Bitmap& bitmapReleased, const Bitmap& bitmapPressed)
 800c008:	b580      	push	{r7, lr}
 800c00a:	b084      	sub	sp, #16
 800c00c:	af00      	add	r7, sp, #0
 800c00e:	60f8      	str	r0, [r7, #12]
 800c010:	60b9      	str	r1, [r7, #8]
 800c012:	607a      	str	r2, [r7, #4]
    {
        originalPressed = bitmapPressed;
 800c014:	68fb      	ldr	r3, [r7, #12]
 800c016:	687a      	ldr	r2, [r7, #4]
 800c018:	8812      	ldrh	r2, [r2, #0]
 800c01a:	869a      	strh	r2, [r3, #52]	@ 0x34
        Button::setBitmaps(bitmapReleased, bitmapPressed);
 800c01c:	68fb      	ldr	r3, [r7, #12]
 800c01e:	687a      	ldr	r2, [r7, #4]
 800c020:	68b9      	ldr	r1, [r7, #8]
 800c022:	4618      	mov	r0, r3
 800c024:	f006 f9d0 	bl	80123c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
    }
 800c028:	bf00      	nop
 800c02a:	3710      	adds	r7, #16
 800c02c:	46bd      	mov	sp, r7
 800c02e:	bd80      	pop	{r7, pc}

0800c030 <_ZN12MainViewBase12ToggleLightsEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
 800c030:	b480      	push	{r7}
 800c032:	b083      	sub	sp, #12
 800c034:	af00      	add	r7, sp, #0
 800c036:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in Main
    }
 800c038:	bf00      	nop
 800c03a:	370c      	adds	r7, #12
 800c03c:	46bd      	mov	sp, r7
 800c03e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800c042:	4770      	bx	lr

0800c044 <_ZN12MainViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800c044:	b580      	push	{r7, lr}
 800c046:	b082      	sub	sp, #8
 800c048:	af00      	add	r7, sp, #0
 800c04a:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800c04c:	f008 f8f8 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800c050:	4603      	mov	r3, r0
    }
 800c052:	4618      	mov	r0, r3
 800c054:	3708      	adds	r7, #8
 800c056:	46bd      	mov	sp, r7
 800c058:	bd80      	pop	{r7, pc}
	...

0800c05c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>:
class View : public Screen
 800c05c:	b580      	push	{r7, lr}
 800c05e:	b082      	sub	sp, #8
 800c060:	af00      	add	r7, sp, #0
 800c062:	6078      	str	r0, [r7, #4]
 800c064:	4a05      	ldr	r2, [pc, #20]	@ (800c07c <_ZN8touchgfx4ViewI13MainPresenterED1Ev+0x20>)
 800c066:	687b      	ldr	r3, [r7, #4]
 800c068:	601a      	str	r2, [r3, #0]
 800c06a:	687b      	ldr	r3, [r7, #4]
 800c06c:	4618      	mov	r0, r3
 800c06e:	f7fd ff47 	bl	8009f00 <_ZN8touchgfx6ScreenD1Ev>
 800c072:	687b      	ldr	r3, [r7, #4]
 800c074:	4618      	mov	r0, r3
 800c076:	3708      	adds	r7, #8
 800c078:	46bd      	mov	sp, r7
 800c07a:	bd80      	pop	{r7, pc}
 800c07c:	0802886c 	.word	0x0802886c

0800c080 <_ZN8touchgfx4ViewI13MainPresenterED0Ev>:
 800c080:	b580      	push	{r7, lr}
 800c082:	b082      	sub	sp, #8
 800c084:	af00      	add	r7, sp, #0
 800c086:	6078      	str	r0, [r7, #4]
 800c088:	6878      	ldr	r0, [r7, #4]
 800c08a:	f7ff ffe7 	bl	800c05c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800c08e:	2140      	movs	r1, #64	@ 0x40
 800c090:	6878      	ldr	r0, [r7, #4]
 800c092:	f019 fe2e 	bl	8025cf2 <_ZdlPvj>
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	4618      	mov	r0, r3
 800c09a:	3708      	adds	r7, #8
 800c09c:	46bd      	mov	sp, r7
 800c09e:	bd80      	pop	{r7, pc}

0800c0a0 <_ZN8touchgfx12ToggleButtonC1Ev>:
class ToggleButton : public Button
 800c0a0:	b580      	push	{r7, lr}
 800c0a2:	b082      	sub	sp, #8
 800c0a4:	af00      	add	r7, sp, #0
 800c0a6:	6078      	str	r0, [r7, #4]
 800c0a8:	687b      	ldr	r3, [r7, #4]
 800c0aa:	4618      	mov	r0, r3
 800c0ac:	f7ff ff88 	bl	800bfc0 <_ZN8touchgfx6ButtonC1Ev>
 800c0b0:	4a07      	ldr	r2, [pc, #28]	@ (800c0d0 <_ZN8touchgfx12ToggleButtonC1Ev+0x30>)
 800c0b2:	687b      	ldr	r3, [r7, #4]
 800c0b4:	601a      	str	r2, [r3, #0]
 800c0b6:	687b      	ldr	r3, [r7, #4]
 800c0b8:	3334      	adds	r3, #52	@ 0x34
 800c0ba:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800c0be:	4618      	mov	r0, r3
 800c0c0:	f7fd fd0a 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800c0c4:	687b      	ldr	r3, [r7, #4]
 800c0c6:	4618      	mov	r0, r3
 800c0c8:	3708      	adds	r7, #8
 800c0ca:	46bd      	mov	sp, r7
 800c0cc:	bd80      	pop	{r7, pc}
 800c0ce:	bf00      	nop
 800c0d0:	080292f4 	.word	0x080292f4

0800c0d4 <_ZN12MainViewBaseC1Ev>:
#include <gui_generated/main_screen/MainViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

MainViewBase::MainViewBase() :
 800c0d4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800c0d8:	b0c6      	sub	sp, #280	@ 0x118
 800c0da:	af02      	add	r7, sp, #8
 800c0dc:	6178      	str	r0, [r7, #20]
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800c0de:	697b      	ldr	r3, [r7, #20]
 800c0e0:	4618      	mov	r0, r3
 800c0e2:	f000 fd69 	bl	800cbb8 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>
 800c0e6:	4ada      	ldr	r2, [pc, #872]	@ (800c450 <_ZN12MainViewBaseC1Ev+0x37c>)
 800c0e8:	697b      	ldr	r3, [r7, #20]
 800c0ea:	601a      	str	r2, [r3, #0]
 800c0ec:	697b      	ldr	r3, [r7, #20]
 800c0ee:	3340      	adds	r3, #64	@ 0x40
 800c0f0:	4618      	mov	r0, r3
 800c0f2:	f7fd ffa1 	bl	800a038 <_ZN8touchgfx3BoxC1Ev>
 800c0f6:	697b      	ldr	r3, [r7, #20]
 800c0f8:	336c      	adds	r3, #108	@ 0x6c
 800c0fa:	4618      	mov	r0, r3
 800c0fc:	f7ff ffd0 	bl	800c0a0 <_ZN8touchgfx12ToggleButtonC1Ev>
 800c100:	697b      	ldr	r3, [r7, #20]
 800c102:	33a4      	adds	r3, #164	@ 0xa4
 800c104:	4618      	mov	r0, r3
 800c106:	f7fe fb27 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c10a:	697b      	ldr	r3, [r7, #20]
 800c10c:	33f0      	adds	r3, #240	@ 0xf0
 800c10e:	4618      	mov	r0, r3
 800c110:	f7fe fb22 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c114:	697b      	ldr	r3, [r7, #20]
 800c116:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c11a:	4618      	mov	r0, r3
 800c11c:	f7fe fb1c 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c120:	697b      	ldr	r3, [r7, #20]
 800c122:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c126:	4618      	mov	r0, r3
 800c128:	f7fe fb16 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800c12c:	697b      	ldr	r3, [r7, #20]
 800c12e:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c132:	4618      	mov	r0, r3
 800c134:	f7fe ffa2 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800c138:	697b      	ldr	r3, [r7, #20]
 800c13a:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c13e:	4618      	mov	r0, r3
 800c140:	f7fe ff9c 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800c144:	697b      	ldr	r3, [r7, #20]
 800c146:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c14a:	4618      	mov	r0, r3
 800c14c:	f7fe ff96 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
    buttonCallback(this, &MainViewBase::buttonCallbackHandler),
 800c150:	697b      	ldr	r3, [r7, #20]
 800c152:	f503 706d 	add.w	r0, r3, #948	@ 0x3b4
 800c156:	4bbf      	ldr	r3, [pc, #764]	@ (800c454 <_ZN12MainViewBaseC1Ev+0x380>)
 800c158:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800c15a:	2300      	movs	r3, #0
 800c15c:	633b      	str	r3, [r7, #48]	@ 0x30
 800c15e:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800c162:	cb0c      	ldmia	r3, {r2, r3}
 800c164:	6979      	ldr	r1, [r7, #20]
 800c166:	f000 fd3d 	bl	800cbe4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
    flexButtonCallback(this, &MainViewBase::flexButtonCallbackHandler)
 800c16a:	697b      	ldr	r3, [r7, #20]
 800c16c:	f503 7071 	add.w	r0, r3, #964	@ 0x3c4
 800c170:	4bb9      	ldr	r3, [pc, #740]	@ (800c458 <_ZN12MainViewBaseC1Ev+0x384>)
 800c172:	637b      	str	r3, [r7, #52]	@ 0x34
 800c174:	2300      	movs	r3, #0
 800c176:	63bb      	str	r3, [r7, #56]	@ 0x38
 800c178:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800c17c:	cb0c      	ldmia	r3, {r2, r3}
 800c17e:	6979      	ldr	r1, [r7, #20]
 800c180:	f000 fd50 	bl	800cc24 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800c184:	697b      	ldr	r3, [r7, #20]
 800c186:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800c18a:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800c18e:	9300      	str	r3, [sp, #0]
 800c190:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800c194:	2200      	movs	r2, #0
 800c196:	2100      	movs	r1, #0
 800c198:	f7fd fd28 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800c19c:	697b      	ldr	r3, [r7, #20]
 800c19e:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800c1a2:	2300      	movs	r3, #0
 800c1a4:	f887 30ac 	strb.w	r3, [r7, #172]	@ 0xac
 800c1a8:	2300      	movs	r3, #0
 800c1aa:	f887 30ab 	strb.w	r3, [r7, #171]	@ 0xab
 800c1ae:	2300      	movs	r3, #0
 800c1b0:	f887 30aa 	strb.w	r3, [r7, #170]	@ 0xaa
 800c1b4:	f897 30ac 	ldrb.w	r3, [r7, #172]	@ 0xac
 800c1b8:	041a      	lsls	r2, r3, #16
 800c1ba:	f897 30ab 	ldrb.w	r3, [r7, #171]	@ 0xab
 800c1be:	021b      	lsls	r3, r3, #8
 800c1c0:	431a      	orrs	r2, r3
 800c1c2:	f897 30aa 	ldrb.w	r3, [r7, #170]	@ 0xaa
 800c1c6:	4313      	orrs	r3, r2
 800c1c8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c1cc:	f107 03a4 	add.w	r3, r7, #164	@ 0xa4
 800c1d0:	4611      	mov	r1, r2
 800c1d2:	4618      	mov	r0, r3
 800c1d4:	f7fd fc3a 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c1d8:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800c1dc:	4619      	mov	r1, r3
 800c1de:	4620      	mov	r0, r4
 800c1e0:	f7fd ff4e 	bl	800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800c1e4:	697a      	ldr	r2, [r7, #20]
 800c1e6:	697b      	ldr	r3, [r7, #20]
 800c1e8:	3340      	adds	r3, #64	@ 0x40
 800c1ea:	4619      	mov	r1, r3
 800c1ec:	4610      	mov	r0, r2
 800c1ee:	f7fd fedf 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    toggleButton1.setXY(229, 236);
 800c1f2:	697b      	ldr	r3, [r7, #20]
 800c1f4:	336c      	adds	r3, #108	@ 0x6c
 800c1f6:	22ec      	movs	r2, #236	@ 0xec
 800c1f8:	21e5      	movs	r1, #229	@ 0xe5
 800c1fa:	4618      	mov	r0, r3
 800c1fc:	f7fd fd35 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    toggleButton1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_ON_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_TOGGLEBUTTON_LARGE_ROUNDED_OFF_NORMAL_ID));
 800c200:	697b      	ldr	r3, [r7, #20]
 800c202:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800c206:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800c20a:	2103      	movs	r1, #3
 800c20c:	4618      	mov	r0, r3
 800c20e:	f7fd fc63 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800c212:	f107 0340 	add.w	r3, r7, #64	@ 0x40
 800c216:	2102      	movs	r1, #2
 800c218:	4618      	mov	r0, r3
 800c21a:	f7fd fc5d 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800c21e:	f107 0240 	add.w	r2, r7, #64	@ 0x40
 800c222:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800c226:	4619      	mov	r1, r3
 800c228:	4620      	mov	r0, r4
 800c22a:	f7ff feed 	bl	800c008 <_ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_>
    toggleButton1.forceState(true);
 800c22e:	697b      	ldr	r3, [r7, #20]
 800c230:	336c      	adds	r3, #108	@ 0x6c
 800c232:	2101      	movs	r1, #1
 800c234:	4618      	mov	r0, r3
 800c236:	f005 fcf5 	bl	8011c24 <_ZN8touchgfx12ToggleButton10forceStateEb>
    toggleButton1.setAction(buttonCallback);
 800c23a:	697b      	ldr	r3, [r7, #20]
 800c23c:	f103 026c 	add.w	r2, r3, #108	@ 0x6c
 800c240:	697b      	ldr	r3, [r7, #20]
 800c242:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800c246:	4619      	mov	r1, r3
 800c248:	4610      	mov	r0, r2
 800c24a:	f7fe fac2 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(toggleButton1);
 800c24e:	697a      	ldr	r2, [r7, #20]
 800c250:	697b      	ldr	r3, [r7, #20]
 800c252:	336c      	adds	r3, #108	@ 0x6c
 800c254:	4619      	mov	r1, r3
 800c256:	4610      	mov	r0, r2
 800c258:	f7fd feaa 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    HUMVAL.setPosition(9, 24, 178, 48);
 800c25c:	697b      	ldr	r3, [r7, #20]
 800c25e:	f103 00a4 	add.w	r0, r3, #164	@ 0xa4
 800c262:	2330      	movs	r3, #48	@ 0x30
 800c264:	9300      	str	r3, [sp, #0]
 800c266:	23b2      	movs	r3, #178	@ 0xb2
 800c268:	2218      	movs	r2, #24
 800c26a:	2109      	movs	r1, #9
 800c26c:	f7fd fcbe 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    HUMVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c270:	697b      	ldr	r3, [r7, #20]
 800c272:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c276:	23ff      	movs	r3, #255	@ 0xff
 800c278:	f887 30af 	strb.w	r3, [r7, #175]	@ 0xaf
 800c27c:	23ff      	movs	r3, #255	@ 0xff
 800c27e:	f887 30ae 	strb.w	r3, [r7, #174]	@ 0xae
 800c282:	23ff      	movs	r3, #255	@ 0xff
 800c284:	f887 30ad 	strb.w	r3, [r7, #173]	@ 0xad
 800c288:	f897 30af 	ldrb.w	r3, [r7, #175]	@ 0xaf
 800c28c:	041a      	lsls	r2, r3, #16
 800c28e:	f897 30ae 	ldrb.w	r3, [r7, #174]	@ 0xae
 800c292:	021b      	lsls	r3, r3, #8
 800c294:	431a      	orrs	r2, r3
 800c296:	f897 30ad 	ldrb.w	r3, [r7, #173]	@ 0xad
 800c29a:	4313      	orrs	r3, r2
 800c29c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c2a0:	f107 03a0 	add.w	r3, r7, #160	@ 0xa0
 800c2a4:	4611      	mov	r1, r2
 800c2a6:	4618      	mov	r0, r3
 800c2a8:	f7fd fbd0 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c2ac:	f8d7 30a0 	ldr.w	r3, [r7, #160]	@ 0xa0
 800c2b0:	f8c7 40b0 	str.w	r4, [r7, #176]	@ 0xb0
 800c2b4:	62bb      	str	r3, [r7, #40]	@ 0x28
        color = newColor;
 800c2b6:	f8d7 30b0 	ldr.w	r3, [r7, #176]	@ 0xb0
 800c2ba:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 800c2bc:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c2be:	bf00      	nop
    HUMVAL.setLinespacing(0);
 800c2c0:	697b      	ldr	r3, [r7, #20]
 800c2c2:	33a4      	adds	r3, #164	@ 0xa4
 800c2c4:	f8c7 30b8 	str.w	r3, [r7, #184]	@ 0xb8
 800c2c8:	2300      	movs	r3, #0
 800c2ca:	f8a7 30b6 	strh.w	r3, [r7, #182]	@ 0xb6
        linespace = space;
 800c2ce:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c2d2:	f8b7 20b6 	ldrh.w	r2, [r7, #182]	@ 0xb6
 800c2d6:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c2d8:	f8d7 30b8 	ldr.w	r3, [r7, #184]	@ 0xb8
 800c2dc:	681b      	ldr	r3, [r3, #0]
 800c2de:	3384      	adds	r3, #132	@ 0x84
 800c2e0:	681b      	ldr	r3, [r3, #0]
 800c2e2:	f8d7 40b8 	ldr.w	r4, [r7, #184]	@ 0xb8
 800c2e6:	463a      	mov	r2, r7
 800c2e8:	f8d7 10b8 	ldr.w	r1, [r7, #184]	@ 0xb8
 800c2ec:	4610      	mov	r0, r2
 800c2ee:	4798      	blx	r3
 800c2f0:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c2f4:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c2f8:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c2fc:	ca07      	ldmia	r2, {r0, r1, r2}
 800c2fe:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c302:	bf00      	nop
    HUMVALBuffer[0] = 0;
 800c304:	697b      	ldr	r3, [r7, #20]
 800c306:	2200      	movs	r2, #0
 800c308:	f8a3 233c 	strh.w	r2, [r3, #828]	@ 0x33c
    HUMVAL.setWildcard(HUMVALBuffer);
 800c30c:	697b      	ldr	r3, [r7, #20]
 800c30e:	f103 02a4 	add.w	r2, r3, #164	@ 0xa4
 800c312:	697b      	ldr	r3, [r7, #20]
 800c314:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800c318:	4619      	mov	r1, r3
 800c31a:	4610      	mov	r0, r2
 800c31c:	f7fe fa4c 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    HUMVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_OPPC));
 800c320:	697b      	ldr	r3, [r7, #20]
 800c322:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 800c326:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c32a:	210a      	movs	r1, #10
 800c32c:	4618      	mov	r0, r3
 800c32e:	f7fd fec5 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800c332:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c336:	4619      	mov	r1, r3
 800c338:	4620      	mov	r0, r4
 800c33a:	f005 fff3 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c33e:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800c342:	4618      	mov	r0, r3
 800c344:	f7fb ffd6 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(HUMVAL);
 800c348:	697a      	ldr	r2, [r7, #20]
 800c34a:	697b      	ldr	r3, [r7, #20]
 800c34c:	33a4      	adds	r3, #164	@ 0xa4
 800c34e:	4619      	mov	r1, r3
 800c350:	4610      	mov	r0, r2
 800c352:	f7fd fe2d 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    TEMPVAL.setPosition(9, 79, 178, 46);
 800c356:	697b      	ldr	r3, [r7, #20]
 800c358:	f103 00f0 	add.w	r0, r3, #240	@ 0xf0
 800c35c:	232e      	movs	r3, #46	@ 0x2e
 800c35e:	9300      	str	r3, [sp, #0]
 800c360:	23b2      	movs	r3, #178	@ 0xb2
 800c362:	224f      	movs	r2, #79	@ 0x4f
 800c364:	2109      	movs	r1, #9
 800c366:	f7fd fc41 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    TEMPVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c36a:	697b      	ldr	r3, [r7, #20]
 800c36c:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c370:	23ff      	movs	r3, #255	@ 0xff
 800c372:	f887 30bf 	strb.w	r3, [r7, #191]	@ 0xbf
 800c376:	23ff      	movs	r3, #255	@ 0xff
 800c378:	f887 30be 	strb.w	r3, [r7, #190]	@ 0xbe
 800c37c:	23ff      	movs	r3, #255	@ 0xff
 800c37e:	f887 30bd 	strb.w	r3, [r7, #189]	@ 0xbd
 800c382:	f897 30bf 	ldrb.w	r3, [r7, #191]	@ 0xbf
 800c386:	041a      	lsls	r2, r3, #16
 800c388:	f897 30be 	ldrb.w	r3, [r7, #190]	@ 0xbe
 800c38c:	021b      	lsls	r3, r3, #8
 800c38e:	431a      	orrs	r2, r3
 800c390:	f897 30bd 	ldrb.w	r3, [r7, #189]	@ 0xbd
 800c394:	4313      	orrs	r3, r2
 800c396:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c39a:	f107 039c 	add.w	r3, r7, #156	@ 0x9c
 800c39e:	4611      	mov	r1, r2
 800c3a0:	4618      	mov	r0, r3
 800c3a2:	f7fd fb53 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c3a6:	f8d7 309c 	ldr.w	r3, [r7, #156]	@ 0x9c
 800c3aa:	f8c7 40c0 	str.w	r4, [r7, #192]	@ 0xc0
 800c3ae:	627b      	str	r3, [r7, #36]	@ 0x24
        color = newColor;
 800c3b0:	f8d7 30c0 	ldr.w	r3, [r7, #192]	@ 0xc0
 800c3b4:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 800c3b6:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c3b8:	bf00      	nop
    TEMPVAL.setLinespacing(0);
 800c3ba:	697b      	ldr	r3, [r7, #20]
 800c3bc:	33f0      	adds	r3, #240	@ 0xf0
 800c3be:	f8c7 30c8 	str.w	r3, [r7, #200]	@ 0xc8
 800c3c2:	2300      	movs	r3, #0
 800c3c4:	f8a7 30c6 	strh.w	r3, [r7, #198]	@ 0xc6
        linespace = space;
 800c3c8:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c3cc:	f8b7 20c6 	ldrh.w	r2, [r7, #198]	@ 0xc6
 800c3d0:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c3d2:	f8d7 30c8 	ldr.w	r3, [r7, #200]	@ 0xc8
 800c3d6:	681b      	ldr	r3, [r3, #0]
 800c3d8:	3384      	adds	r3, #132	@ 0x84
 800c3da:	681b      	ldr	r3, [r3, #0]
 800c3dc:	f8d7 40c8 	ldr.w	r4, [r7, #200]	@ 0xc8
 800c3e0:	463a      	mov	r2, r7
 800c3e2:	f8d7 10c8 	ldr.w	r1, [r7, #200]	@ 0xc8
 800c3e6:	4610      	mov	r0, r2
 800c3e8:	4798      	blx	r3
 800c3ea:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c3ee:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c3f2:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c3f6:	ca07      	ldmia	r2, {r0, r1, r2}
 800c3f8:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c3fc:	bf00      	nop
    TEMPVALBuffer[0] = 0;
 800c3fe:	697b      	ldr	r3, [r7, #20]
 800c400:	2200      	movs	r2, #0
 800c402:	f8a3 2364 	strh.w	r2, [r3, #868]	@ 0x364
    TEMPVAL.setWildcard(TEMPVALBuffer);
 800c406:	697b      	ldr	r3, [r7, #20]
 800c408:	f103 02f0 	add.w	r2, r3, #240	@ 0xf0
 800c40c:	697b      	ldr	r3, [r7, #20]
 800c40e:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800c412:	4619      	mov	r1, r3
 800c414:	4610      	mov	r0, r2
 800c416:	f7fe f9cf 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    TEMPVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_0MT1));
 800c41a:	697b      	ldr	r3, [r7, #20]
 800c41c:	f103 04f0 	add.w	r4, r3, #240	@ 0xf0
 800c420:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c424:	2109      	movs	r1, #9
 800c426:	4618      	mov	r0, r3
 800c428:	f7fd fe48 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800c42c:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c430:	4619      	mov	r1, r3
 800c432:	4620      	mov	r0, r4
 800c434:	f005 ff76 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c438:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800c43c:	4618      	mov	r0, r3
 800c43e:	f7fb ff59 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(TEMPVAL);
 800c442:	697a      	ldr	r2, [r7, #20]
 800c444:	697b      	ldr	r3, [r7, #20]
 800c446:	33f0      	adds	r3, #240	@ 0xf0
 800c448:	4619      	mov	r1, r3
 800c44a:	4610      	mov	r0, r2
 800c44c:	e006      	b.n	800c45c <_ZN12MainViewBaseC1Ev+0x388>
 800c44e:	bf00      	nop
 800c450:	08028804 	.word	0x08028804
 800c454:	0800cb2f 	.word	0x0800cb2f
 800c458:	0800cb57 	.word	0x0800cb57
 800c45c:	f7fd fda8 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    ADCVAL.setPosition(98, 183, 303, 43);
 800c460:	697b      	ldr	r3, [r7, #20]
 800c462:	f503 709e 	add.w	r0, r3, #316	@ 0x13c
 800c466:	232b      	movs	r3, #43	@ 0x2b
 800c468:	9300      	str	r3, [sp, #0]
 800c46a:	f240 132f 	movw	r3, #303	@ 0x12f
 800c46e:	22b7      	movs	r2, #183	@ 0xb7
 800c470:	2162      	movs	r1, #98	@ 0x62
 800c472:	f7fd fbbb 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    ADCVAL.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c476:	697b      	ldr	r3, [r7, #20]
 800c478:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c47c:	23ff      	movs	r3, #255	@ 0xff
 800c47e:	f887 30cf 	strb.w	r3, [r7, #207]	@ 0xcf
 800c482:	23ff      	movs	r3, #255	@ 0xff
 800c484:	f887 30ce 	strb.w	r3, [r7, #206]	@ 0xce
 800c488:	23ff      	movs	r3, #255	@ 0xff
 800c48a:	f887 30cd 	strb.w	r3, [r7, #205]	@ 0xcd
 800c48e:	f897 30cf 	ldrb.w	r3, [r7, #207]	@ 0xcf
 800c492:	041a      	lsls	r2, r3, #16
 800c494:	f897 30ce 	ldrb.w	r3, [r7, #206]	@ 0xce
 800c498:	021b      	lsls	r3, r3, #8
 800c49a:	431a      	orrs	r2, r3
 800c49c:	f897 30cd 	ldrb.w	r3, [r7, #205]	@ 0xcd
 800c4a0:	4313      	orrs	r3, r2
 800c4a2:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c4a6:	f107 0398 	add.w	r3, r7, #152	@ 0x98
 800c4aa:	4611      	mov	r1, r2
 800c4ac:	4618      	mov	r0, r3
 800c4ae:	f7fd facd 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c4b2:	f8d7 3098 	ldr.w	r3, [r7, #152]	@ 0x98
 800c4b6:	f8c7 40d0 	str.w	r4, [r7, #208]	@ 0xd0
 800c4ba:	623b      	str	r3, [r7, #32]
        color = newColor;
 800c4bc:	f8d7 30d0 	ldr.w	r3, [r7, #208]	@ 0xd0
 800c4c0:	6a3a      	ldr	r2, [r7, #32]
 800c4c2:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c4c4:	bf00      	nop
    ADCVAL.setLinespacing(0);
 800c4c6:	697b      	ldr	r3, [r7, #20]
 800c4c8:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c4cc:	f8c7 30d8 	str.w	r3, [r7, #216]	@ 0xd8
 800c4d0:	2300      	movs	r3, #0
 800c4d2:	f8a7 30d6 	strh.w	r3, [r7, #214]	@ 0xd6
        linespace = space;
 800c4d6:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c4da:	f8b7 20d6 	ldrh.w	r2, [r7, #214]	@ 0xd6
 800c4de:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c4e0:	f8d7 30d8 	ldr.w	r3, [r7, #216]	@ 0xd8
 800c4e4:	681b      	ldr	r3, [r3, #0]
 800c4e6:	3384      	adds	r3, #132	@ 0x84
 800c4e8:	681b      	ldr	r3, [r3, #0]
 800c4ea:	f8d7 40d8 	ldr.w	r4, [r7, #216]	@ 0xd8
 800c4ee:	463a      	mov	r2, r7
 800c4f0:	f8d7 10d8 	ldr.w	r1, [r7, #216]	@ 0xd8
 800c4f4:	4610      	mov	r0, r2
 800c4f6:	4798      	blx	r3
 800c4f8:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c4fc:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c500:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c504:	ca07      	ldmia	r2, {r0, r1, r2}
 800c506:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c50a:	bf00      	nop
    ADCVALBuffer[0] = 0;
 800c50c:	697b      	ldr	r3, [r7, #20]
 800c50e:	2200      	movs	r2, #0
 800c510:	f8a3 238c 	strh.w	r2, [r3, #908]	@ 0x38c
    ADCVAL.setWildcard(ADCVALBuffer);
 800c514:	697b      	ldr	r3, [r7, #20]
 800c516:	f503 729e 	add.w	r2, r3, #316	@ 0x13c
 800c51a:	697b      	ldr	r3, [r7, #20]
 800c51c:	f503 7363 	add.w	r3, r3, #908	@ 0x38c
 800c520:	4619      	mov	r1, r3
 800c522:	4610      	mov	r0, r2
 800c524:	f7fe f948 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    ADCVAL.setTypedText(touchgfx::TypedText(T___SINGLEUSE_JSQP));
 800c528:	697b      	ldr	r3, [r7, #20]
 800c52a:	f503 749e 	add.w	r4, r3, #316	@ 0x13c
 800c52e:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c532:	2108      	movs	r1, #8
 800c534:	4618      	mov	r0, r3
 800c536:	f7fd fdc1 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800c53a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c53e:	4619      	mov	r1, r3
 800c540:	4620      	mov	r0, r4
 800c542:	f005 feef 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c546:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800c54a:	4618      	mov	r0, r3
 800c54c:	f7fb fed2 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(ADCVAL);
 800c550:	697a      	ldr	r2, [r7, #20]
 800c552:	697b      	ldr	r3, [r7, #20]
 800c554:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800c558:	4619      	mov	r1, r3
 800c55a:	4610      	mov	r0, r2
 800c55c:	f7fd fd28 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textArea1.setXY(0, 135);
 800c560:	697b      	ldr	r3, [r7, #20]
 800c562:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c566:	2287      	movs	r2, #135	@ 0x87
 800c568:	2100      	movs	r1, #0
 800c56a:	4618      	mov	r0, r3
 800c56c:	f7fd fb7d 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    textArea1.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800c570:	697b      	ldr	r3, [r7, #20]
 800c572:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c576:	23ff      	movs	r3, #255	@ 0xff
 800c578:	f887 30df 	strb.w	r3, [r7, #223]	@ 0xdf
 800c57c:	23ff      	movs	r3, #255	@ 0xff
 800c57e:	f887 30de 	strb.w	r3, [r7, #222]	@ 0xde
 800c582:	23ff      	movs	r3, #255	@ 0xff
 800c584:	f887 30dd 	strb.w	r3, [r7, #221]	@ 0xdd
 800c588:	f897 30df 	ldrb.w	r3, [r7, #223]	@ 0xdf
 800c58c:	041a      	lsls	r2, r3, #16
 800c58e:	f897 30de 	ldrb.w	r3, [r7, #222]	@ 0xde
 800c592:	021b      	lsls	r3, r3, #8
 800c594:	431a      	orrs	r2, r3
 800c596:	f897 30dd 	ldrb.w	r3, [r7, #221]	@ 0xdd
 800c59a:	4313      	orrs	r3, r2
 800c59c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c5a0:	f107 0394 	add.w	r3, r7, #148	@ 0x94
 800c5a4:	4611      	mov	r1, r2
 800c5a6:	4618      	mov	r0, r3
 800c5a8:	f7fd fa50 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c5ac:	f8d7 3094 	ldr.w	r3, [r7, #148]	@ 0x94
 800c5b0:	f8c7 40e0 	str.w	r4, [r7, #224]	@ 0xe0
 800c5b4:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800c5b6:	f8d7 30e0 	ldr.w	r3, [r7, #224]	@ 0xe0
 800c5ba:	69fa      	ldr	r2, [r7, #28]
 800c5bc:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800c5be:	bf00      	nop
    textArea1.setLinespacing(0);
 800c5c0:	697b      	ldr	r3, [r7, #20]
 800c5c2:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c5c6:	f8c7 30e8 	str.w	r3, [r7, #232]	@ 0xe8
 800c5ca:	2300      	movs	r3, #0
 800c5cc:	f8a7 30e6 	strh.w	r3, [r7, #230]	@ 0xe6
        linespace = space;
 800c5d0:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c5d4:	f8b7 20e6 	ldrh.w	r2, [r7, #230]	@ 0xe6
 800c5d8:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800c5da:	f8d7 30e8 	ldr.w	r3, [r7, #232]	@ 0xe8
 800c5de:	681b      	ldr	r3, [r3, #0]
 800c5e0:	3384      	adds	r3, #132	@ 0x84
 800c5e2:	681b      	ldr	r3, [r3, #0]
 800c5e4:	f8d7 40e8 	ldr.w	r4, [r7, #232]	@ 0xe8
 800c5e8:	463a      	mov	r2, r7
 800c5ea:	f8d7 10e8 	ldr.w	r1, [r7, #232]	@ 0xe8
 800c5ee:	4610      	mov	r0, r2
 800c5f0:	4798      	blx	r3
 800c5f2:	f507 7388 	add.w	r3, r7, #272	@ 0x110
 800c5f6:	f5a3 7288 	sub.w	r2, r3, #272	@ 0x110
 800c5fa:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800c5fe:	ca07      	ldmia	r2, {r0, r1, r2}
 800c600:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800c604:	bf00      	nop
    textArea1.setTypedText(touchgfx::TypedText(T___SINGLEUSE_E175));
 800c606:	697b      	ldr	r3, [r7, #20]
 800c608:	f503 74c4 	add.w	r4, r3, #392	@ 0x188
 800c60c:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c610:	2107      	movs	r1, #7
 800c612:	4618      	mov	r0, r3
 800c614:	f7fd fd52 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800c618:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c61c:	4619      	mov	r1, r3
 800c61e:	4620      	mov	r0, r4
 800c620:	f005 fe80 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800c624:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800c628:	4618      	mov	r0, r3
 800c62a:	f7fb fe63 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(textArea1);
 800c62e:	697a      	ldr	r2, [r7, #20]
 800c630:	697b      	ldr	r3, [r7, #20]
 800c632:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800c636:	4619      	mov	r1, r3
 800c638:	4610      	mov	r0, r2
 800c63a:	f7fd fcb9 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c63e:	697b      	ldr	r3, [r7, #20]
 800c640:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c644:	2332      	movs	r3, #50	@ 0x32
 800c646:	9300      	str	r3, [sp, #0]
 800c648:	2332      	movs	r3, #50	@ 0x32
 800c64a:	2200      	movs	r2, #0
 800c64c:	2100      	movs	r1, #0
 800c64e:	f7fe fdb5 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800c652:	697b      	ldr	r3, [r7, #20]
 800c654:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c658:	2105      	movs	r1, #5
 800c65a:	4618      	mov	r0, r3
 800c65c:	f7fe fdce 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c660:	697b      	ldr	r3, [r7, #20]
 800c662:	f503 74ea 	add.w	r4, r3, #468	@ 0x1d4
 800c666:	2300      	movs	r3, #0
 800c668:	f887 30ee 	strb.w	r3, [r7, #238]	@ 0xee
 800c66c:	2366      	movs	r3, #102	@ 0x66
 800c66e:	f887 30ed 	strb.w	r3, [r7, #237]	@ 0xed
 800c672:	2399      	movs	r3, #153	@ 0x99
 800c674:	f887 30ec 	strb.w	r3, [r7, #236]	@ 0xec
 800c678:	f897 30ee 	ldrb.w	r3, [r7, #238]	@ 0xee
 800c67c:	041a      	lsls	r2, r3, #16
 800c67e:	f897 30ed 	ldrb.w	r3, [r7, #237]	@ 0xed
 800c682:	021b      	lsls	r3, r3, #8
 800c684:	431a      	orrs	r2, r3
 800c686:	f897 30ec 	ldrb.w	r3, [r7, #236]	@ 0xec
 800c68a:	4313      	orrs	r3, r2
 800c68c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c690:	f107 0390 	add.w	r3, r7, #144	@ 0x90
 800c694:	4611      	mov	r1, r2
 800c696:	4618      	mov	r0, r3
 800c698:	f7fd f9d8 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c69c:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800c6a0:	461d      	mov	r5, r3
 800c6a2:	2300      	movs	r3, #0
 800c6a4:	f887 30f1 	strb.w	r3, [r7, #241]	@ 0xf1
 800c6a8:	2399      	movs	r3, #153	@ 0x99
 800c6aa:	f887 30f0 	strb.w	r3, [r7, #240]	@ 0xf0
 800c6ae:	23cc      	movs	r3, #204	@ 0xcc
 800c6b0:	f887 30ef 	strb.w	r3, [r7, #239]	@ 0xef
 800c6b4:	f897 30f1 	ldrb.w	r3, [r7, #241]	@ 0xf1
 800c6b8:	041a      	lsls	r2, r3, #16
 800c6ba:	f897 30f0 	ldrb.w	r3, [r7, #240]	@ 0xf0
 800c6be:	021b      	lsls	r3, r3, #8
 800c6c0:	431a      	orrs	r2, r3
 800c6c2:	f897 30ef 	ldrb.w	r3, [r7, #239]	@ 0xef
 800c6c6:	4313      	orrs	r3, r2
 800c6c8:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c6cc:	f107 038c 	add.w	r3, r7, #140	@ 0x8c
 800c6d0:	4611      	mov	r1, r2
 800c6d2:	4618      	mov	r0, r3
 800c6d4:	f7fd f9ba 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c6d8:	f8d7 308c 	ldr.w	r3, [r7, #140]	@ 0x8c
 800c6dc:	461e      	mov	r6, r3
 800c6de:	2300      	movs	r3, #0
 800c6e0:	f887 30f4 	strb.w	r3, [r7, #244]	@ 0xf4
 800c6e4:	2333      	movs	r3, #51	@ 0x33
 800c6e6:	f887 30f3 	strb.w	r3, [r7, #243]	@ 0xf3
 800c6ea:	2366      	movs	r3, #102	@ 0x66
 800c6ec:	f887 30f2 	strb.w	r3, [r7, #242]	@ 0xf2
 800c6f0:	f897 30f4 	ldrb.w	r3, [r7, #244]	@ 0xf4
 800c6f4:	041a      	lsls	r2, r3, #16
 800c6f6:	f897 30f3 	ldrb.w	r3, [r7, #243]	@ 0xf3
 800c6fa:	021b      	lsls	r3, r3, #8
 800c6fc:	431a      	orrs	r2, r3
 800c6fe:	f897 30f2 	ldrb.w	r3, [r7, #242]	@ 0xf2
 800c702:	4313      	orrs	r3, r2
 800c704:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c708:	f107 0388 	add.w	r3, r7, #136	@ 0x88
 800c70c:	4611      	mov	r1, r2
 800c70e:	4618      	mov	r0, r3
 800c710:	f7fd f99c 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c714:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800c718:	4698      	mov	r8, r3
 800c71a:	2333      	movs	r3, #51	@ 0x33
 800c71c:	f887 30f7 	strb.w	r3, [r7, #247]	@ 0xf7
 800c720:	2366      	movs	r3, #102	@ 0x66
 800c722:	f887 30f6 	strb.w	r3, [r7, #246]	@ 0xf6
 800c726:	2399      	movs	r3, #153	@ 0x99
 800c728:	f887 30f5 	strb.w	r3, [r7, #245]	@ 0xf5
 800c72c:	f897 30f7 	ldrb.w	r3, [r7, #247]	@ 0xf7
 800c730:	041a      	lsls	r2, r3, #16
 800c732:	f897 30f6 	ldrb.w	r3, [r7, #246]	@ 0xf6
 800c736:	021b      	lsls	r3, r3, #8
 800c738:	431a      	orrs	r2, r3
 800c73a:	f897 30f5 	ldrb.w	r3, [r7, #245]	@ 0xf5
 800c73e:	4313      	orrs	r3, r2
 800c740:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c744:	f107 0384 	add.w	r3, r7, #132	@ 0x84
 800c748:	4611      	mov	r1, r2
 800c74a:	4618      	mov	r0, r3
 800c74c:	f7fd f97e 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c750:	f8d7 3084 	ldr.w	r3, [r7, #132]	@ 0x84
 800c754:	9300      	str	r3, [sp, #0]
 800c756:	4643      	mov	r3, r8
 800c758:	4632      	mov	r2, r6
 800c75a:	4629      	mov	r1, r5
 800c75c:	4620      	mov	r0, r4
 800c75e:	f7fe fd5f 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800c762:	697b      	ldr	r3, [r7, #20]
 800c764:	f503 72ea 	add.w	r2, r3, #468	@ 0x1d4
 800c768:	697b      	ldr	r3, [r7, #20]
 800c76a:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c76e:	4619      	mov	r1, r3
 800c770:	4610      	mov	r0, r2
 800c772:	f7fd fe69 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(401, 13, 50, 50);
 800c776:	697b      	ldr	r3, [r7, #20]
 800c778:	f503 70ea 	add.w	r0, r3, #468	@ 0x1d4
 800c77c:	2332      	movs	r3, #50	@ 0x32
 800c77e:	9300      	str	r3, [sp, #0]
 800c780:	2332      	movs	r3, #50	@ 0x32
 800c782:	220d      	movs	r2, #13
 800c784:	f240 1191 	movw	r1, #401	@ 0x191
 800c788:	f7fd fa30 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800c78c:	697a      	ldr	r2, [r7, #20]
 800c78e:	697b      	ldr	r3, [r7, #20]
 800c790:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800c794:	4619      	mov	r1, r3
 800c796:	4610      	mov	r0, r2
 800c798:	f7fd fc0a 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_1.setBoxWithBorderPosition(0, 0, 50, 50);
 800c79c:	697b      	ldr	r3, [r7, #20]
 800c79e:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c7a2:	2332      	movs	r3, #50	@ 0x32
 800c7a4:	9300      	str	r3, [sp, #0]
 800c7a6:	2332      	movs	r3, #50	@ 0x32
 800c7a8:	2200      	movs	r2, #0
 800c7aa:	2100      	movs	r1, #0
 800c7ac:	f7fe fd06 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_1.setBorderSize(5);
 800c7b0:	697b      	ldr	r3, [r7, #20]
 800c7b2:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c7b6:	2105      	movs	r1, #5
 800c7b8:	4618      	mov	r0, r3
 800c7ba:	f7fe fd1f 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c7be:	697b      	ldr	r3, [r7, #20]
 800c7c0:	f503 7413 	add.w	r4, r3, #588	@ 0x24c
 800c7c4:	2300      	movs	r3, #0
 800c7c6:	f887 30fa 	strb.w	r3, [r7, #250]	@ 0xfa
 800c7ca:	2366      	movs	r3, #102	@ 0x66
 800c7cc:	f887 30f9 	strb.w	r3, [r7, #249]	@ 0xf9
 800c7d0:	2399      	movs	r3, #153	@ 0x99
 800c7d2:	f887 30f8 	strb.w	r3, [r7, #248]	@ 0xf8
 800c7d6:	f897 30fa 	ldrb.w	r3, [r7, #250]	@ 0xfa
 800c7da:	041a      	lsls	r2, r3, #16
 800c7dc:	f897 30f9 	ldrb.w	r3, [r7, #249]	@ 0xf9
 800c7e0:	021b      	lsls	r3, r3, #8
 800c7e2:	431a      	orrs	r2, r3
 800c7e4:	f897 30f8 	ldrb.w	r3, [r7, #248]	@ 0xf8
 800c7e8:	4313      	orrs	r3, r2
 800c7ea:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c7ee:	f107 0380 	add.w	r3, r7, #128	@ 0x80
 800c7f2:	4611      	mov	r1, r2
 800c7f4:	4618      	mov	r0, r3
 800c7f6:	f7fd f929 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c7fa:	f8d7 3080 	ldr.w	r3, [r7, #128]	@ 0x80
 800c7fe:	461d      	mov	r5, r3
 800c800:	2300      	movs	r3, #0
 800c802:	f887 30fd 	strb.w	r3, [r7, #253]	@ 0xfd
 800c806:	2399      	movs	r3, #153	@ 0x99
 800c808:	f887 30fc 	strb.w	r3, [r7, #252]	@ 0xfc
 800c80c:	23cc      	movs	r3, #204	@ 0xcc
 800c80e:	f887 30fb 	strb.w	r3, [r7, #251]	@ 0xfb
 800c812:	f897 30fd 	ldrb.w	r3, [r7, #253]	@ 0xfd
 800c816:	041a      	lsls	r2, r3, #16
 800c818:	f897 30fc 	ldrb.w	r3, [r7, #252]	@ 0xfc
 800c81c:	021b      	lsls	r3, r3, #8
 800c81e:	431a      	orrs	r2, r3
 800c820:	f897 30fb 	ldrb.w	r3, [r7, #251]	@ 0xfb
 800c824:	4313      	orrs	r3, r2
 800c826:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c82a:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800c82e:	4611      	mov	r1, r2
 800c830:	4618      	mov	r0, r3
 800c832:	f7fd f90b 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c836:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800c838:	461e      	mov	r6, r3
 800c83a:	2300      	movs	r3, #0
 800c83c:	f887 3100 	strb.w	r3, [r7, #256]	@ 0x100
 800c840:	2333      	movs	r3, #51	@ 0x33
 800c842:	f887 30ff 	strb.w	r3, [r7, #255]	@ 0xff
 800c846:	2366      	movs	r3, #102	@ 0x66
 800c848:	f887 30fe 	strb.w	r3, [r7, #254]	@ 0xfe
 800c84c:	f897 3100 	ldrb.w	r3, [r7, #256]	@ 0x100
 800c850:	041a      	lsls	r2, r3, #16
 800c852:	f897 30ff 	ldrb.w	r3, [r7, #255]	@ 0xff
 800c856:	021b      	lsls	r3, r3, #8
 800c858:	431a      	orrs	r2, r3
 800c85a:	f897 30fe 	ldrb.w	r3, [r7, #254]	@ 0xfe
 800c85e:	4313      	orrs	r3, r2
 800c860:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c864:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800c868:	4611      	mov	r1, r2
 800c86a:	4618      	mov	r0, r3
 800c86c:	f7fd f8ee 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c870:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800c872:	4698      	mov	r8, r3
 800c874:	2333      	movs	r3, #51	@ 0x33
 800c876:	f887 3103 	strb.w	r3, [r7, #259]	@ 0x103
 800c87a:	2366      	movs	r3, #102	@ 0x66
 800c87c:	f887 3102 	strb.w	r3, [r7, #258]	@ 0x102
 800c880:	2399      	movs	r3, #153	@ 0x99
 800c882:	f887 3101 	strb.w	r3, [r7, #257]	@ 0x101
 800c886:	f897 3103 	ldrb.w	r3, [r7, #259]	@ 0x103
 800c88a:	041a      	lsls	r2, r3, #16
 800c88c:	f897 3102 	ldrb.w	r3, [r7, #258]	@ 0x102
 800c890:	021b      	lsls	r3, r3, #8
 800c892:	431a      	orrs	r2, r3
 800c894:	f897 3101 	ldrb.w	r3, [r7, #257]	@ 0x101
 800c898:	4313      	orrs	r3, r2
 800c89a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c89e:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800c8a2:	4611      	mov	r1, r2
 800c8a4:	4618      	mov	r0, r3
 800c8a6:	f7fd f8d1 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c8aa:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800c8ac:	9300      	str	r3, [sp, #0]
 800c8ae:	4643      	mov	r3, r8
 800c8b0:	4632      	mov	r2, r6
 800c8b2:	4629      	mov	r1, r5
 800c8b4:	4620      	mov	r0, r4
 800c8b6:	f7fe fcb3 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_1.setAction(flexButtonCallback);
 800c8ba:	697b      	ldr	r3, [r7, #20]
 800c8bc:	f503 7213 	add.w	r2, r3, #588	@ 0x24c
 800c8c0:	697b      	ldr	r3, [r7, #20]
 800c8c2:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800c8c6:	4619      	mov	r1, r3
 800c8c8:	4610      	mov	r0, r2
 800c8ca:	f7fd fdbd 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_1.setPosition(401, 72, 50, 50);
 800c8ce:	697b      	ldr	r3, [r7, #20]
 800c8d0:	f503 7013 	add.w	r0, r3, #588	@ 0x24c
 800c8d4:	2332      	movs	r3, #50	@ 0x32
 800c8d6:	9300      	str	r3, [sp, #0]
 800c8d8:	2332      	movs	r3, #50	@ 0x32
 800c8da:	2248      	movs	r2, #72	@ 0x48
 800c8dc:	f240 1191 	movw	r1, #401	@ 0x191
 800c8e0:	f7fd f984 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_1);
 800c8e4:	697a      	ldr	r2, [r7, #20]
 800c8e6:	697b      	ldr	r3, [r7, #20]
 800c8e8:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800c8ec:	4619      	mov	r1, r3
 800c8ee:	4610      	mov	r0, r2
 800c8f0:	f7fd fb5e 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1_2.setBoxWithBorderPosition(0, 0, 50, 50);
 800c8f4:	697b      	ldr	r3, [r7, #20]
 800c8f6:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800c8fa:	2332      	movs	r3, #50	@ 0x32
 800c8fc:	9300      	str	r3, [sp, #0]
 800c8fe:	2332      	movs	r3, #50	@ 0x32
 800c900:	2200      	movs	r2, #0
 800c902:	2100      	movs	r1, #0
 800c904:	f7fe fc5a 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1_2.setBorderSize(5);
 800c908:	697b      	ldr	r3, [r7, #20]
 800c90a:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800c90e:	2105      	movs	r1, #5
 800c910:	4618      	mov	r0, r3
 800c912:	f7fe fc73 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1_2.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800c916:	697b      	ldr	r3, [r7, #20]
 800c918:	f503 7431 	add.w	r4, r3, #708	@ 0x2c4
 800c91c:	2300      	movs	r3, #0
 800c91e:	f887 3106 	strb.w	r3, [r7, #262]	@ 0x106
 800c922:	2366      	movs	r3, #102	@ 0x66
 800c924:	f887 3105 	strb.w	r3, [r7, #261]	@ 0x105
 800c928:	2399      	movs	r3, #153	@ 0x99
 800c92a:	f887 3104 	strb.w	r3, [r7, #260]	@ 0x104
 800c92e:	f897 3106 	ldrb.w	r3, [r7, #262]	@ 0x106
 800c932:	041a      	lsls	r2, r3, #16
 800c934:	f897 3105 	ldrb.w	r3, [r7, #261]	@ 0x105
 800c938:	021b      	lsls	r3, r3, #8
 800c93a:	431a      	orrs	r2, r3
 800c93c:	f897 3104 	ldrb.w	r3, [r7, #260]	@ 0x104
 800c940:	4313      	orrs	r3, r2
 800c942:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c946:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800c94a:	4611      	mov	r1, r2
 800c94c:	4618      	mov	r0, r3
 800c94e:	f7fd f87d 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c952:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800c954:	461d      	mov	r5, r3
 800c956:	2300      	movs	r3, #0
 800c958:	f887 3109 	strb.w	r3, [r7, #265]	@ 0x109
 800c95c:	2399      	movs	r3, #153	@ 0x99
 800c95e:	f887 3108 	strb.w	r3, [r7, #264]	@ 0x108
 800c962:	23cc      	movs	r3, #204	@ 0xcc
 800c964:	f887 3107 	strb.w	r3, [r7, #263]	@ 0x107
 800c968:	f897 3109 	ldrb.w	r3, [r7, #265]	@ 0x109
 800c96c:	041a      	lsls	r2, r3, #16
 800c96e:	f897 3108 	ldrb.w	r3, [r7, #264]	@ 0x108
 800c972:	021b      	lsls	r3, r3, #8
 800c974:	431a      	orrs	r2, r3
 800c976:	f897 3107 	ldrb.w	r3, [r7, #263]	@ 0x107
 800c97a:	4313      	orrs	r3, r2
 800c97c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c980:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800c984:	4611      	mov	r1, r2
 800c986:	4618      	mov	r0, r3
 800c988:	f7fd f860 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c98c:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800c98e:	461e      	mov	r6, r3
 800c990:	2300      	movs	r3, #0
 800c992:	f887 310c 	strb.w	r3, [r7, #268]	@ 0x10c
 800c996:	2333      	movs	r3, #51	@ 0x33
 800c998:	f887 310b 	strb.w	r3, [r7, #267]	@ 0x10b
 800c99c:	2366      	movs	r3, #102	@ 0x66
 800c99e:	f887 310a 	strb.w	r3, [r7, #266]	@ 0x10a
 800c9a2:	f897 310c 	ldrb.w	r3, [r7, #268]	@ 0x10c
 800c9a6:	041a      	lsls	r2, r3, #16
 800c9a8:	f897 310b 	ldrb.w	r3, [r7, #267]	@ 0x10b
 800c9ac:	021b      	lsls	r3, r3, #8
 800c9ae:	431a      	orrs	r2, r3
 800c9b0:	f897 310a 	ldrb.w	r3, [r7, #266]	@ 0x10a
 800c9b4:	4313      	orrs	r3, r2
 800c9b6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c9ba:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800c9be:	4611      	mov	r1, r2
 800c9c0:	4618      	mov	r0, r3
 800c9c2:	f7fd f843 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800c9c6:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800c9c8:	4698      	mov	r8, r3
 800c9ca:	2333      	movs	r3, #51	@ 0x33
 800c9cc:	f887 310f 	strb.w	r3, [r7, #271]	@ 0x10f
 800c9d0:	2366      	movs	r3, #102	@ 0x66
 800c9d2:	f887 310e 	strb.w	r3, [r7, #270]	@ 0x10e
 800c9d6:	2399      	movs	r3, #153	@ 0x99
 800c9d8:	f887 310d 	strb.w	r3, [r7, #269]	@ 0x10d
 800c9dc:	f897 310f 	ldrb.w	r3, [r7, #271]	@ 0x10f
 800c9e0:	041a      	lsls	r2, r3, #16
 800c9e2:	f897 310e 	ldrb.w	r3, [r7, #270]	@ 0x10e
 800c9e6:	021b      	lsls	r3, r3, #8
 800c9e8:	431a      	orrs	r2, r3
 800c9ea:	f897 310d 	ldrb.w	r3, [r7, #269]	@ 0x10d
 800c9ee:	4313      	orrs	r3, r2
 800c9f0:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800c9f4:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800c9f8:	4611      	mov	r1, r2
 800c9fa:	4618      	mov	r0, r3
 800c9fc:	f7fd f826 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800ca00:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800ca02:	9300      	str	r3, [sp, #0]
 800ca04:	4643      	mov	r3, r8
 800ca06:	4632      	mov	r2, r6
 800ca08:	4629      	mov	r1, r5
 800ca0a:	4620      	mov	r0, r4
 800ca0c:	f7fe fc08 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1_2.setAction(flexButtonCallback);
 800ca10:	697b      	ldr	r3, [r7, #20]
 800ca12:	f503 7231 	add.w	r2, r3, #708	@ 0x2c4
 800ca16:	697b      	ldr	r3, [r7, #20]
 800ca18:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800ca1c:	4619      	mov	r1, r3
 800ca1e:	4610      	mov	r0, r2
 800ca20:	f7fd fd12 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1_2.setPosition(401, 127, 50, 50);
 800ca24:	697b      	ldr	r3, [r7, #20]
 800ca26:	f503 7031 	add.w	r0, r3, #708	@ 0x2c4
 800ca2a:	2332      	movs	r3, #50	@ 0x32
 800ca2c:	9300      	str	r3, [sp, #0]
 800ca2e:	2332      	movs	r3, #50	@ 0x32
 800ca30:	227f      	movs	r2, #127	@ 0x7f
 800ca32:	f240 1191 	movw	r1, #401	@ 0x191
 800ca36:	f7fd f8d9 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1_2);
 800ca3a:	697a      	ldr	r2, [r7, #20]
 800ca3c:	697b      	ldr	r3, [r7, #20]
 800ca3e:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800ca42:	4619      	mov	r1, r3
 800ca44:	4610      	mov	r0, r2
 800ca46:	f7fd fab3 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800ca4a:	697b      	ldr	r3, [r7, #20]
 800ca4c:	4618      	mov	r0, r3
 800ca4e:	f507 7788 	add.w	r7, r7, #272	@ 0x110
 800ca52:	46bd      	mov	sp, r7
 800ca54:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800ca58 <_ZN12MainViewBaseD1Ev>:

MainViewBase::~MainViewBase()
 800ca58:	b580      	push	{r7, lr}
 800ca5a:	b082      	sub	sp, #8
 800ca5c:	af00      	add	r7, sp, #0
 800ca5e:	6078      	str	r0, [r7, #4]
 800ca60:	4a24      	ldr	r2, [pc, #144]	@ (800caf4 <_ZN12MainViewBaseD1Ev+0x9c>)
 800ca62:	687b      	ldr	r3, [r7, #4]
 800ca64:	601a      	str	r2, [r3, #0]
{

}
 800ca66:	687b      	ldr	r3, [r7, #4]
 800ca68:	f503 7371 	add.w	r3, r3, #964	@ 0x3c4
 800ca6c:	4618      	mov	r0, r3
 800ca6e:	f000 f8f9 	bl	800cc64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800ca72:	687b      	ldr	r3, [r7, #4]
 800ca74:	f503 736d 	add.w	r3, r3, #948	@ 0x3b4
 800ca78:	4618      	mov	r0, r3
 800ca7a:	f000 f915 	bl	800cca8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ca7e:	687b      	ldr	r3, [r7, #4]
 800ca80:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800ca84:	4618      	mov	r0, r3
 800ca86:	f7fe fc9f 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ca8a:	687b      	ldr	r3, [r7, #4]
 800ca8c:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800ca90:	4618      	mov	r0, r3
 800ca92:	f7fe fc99 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800ca96:	687b      	ldr	r3, [r7, #4]
 800ca98:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800ca9c:	4618      	mov	r0, r3
 800ca9e:	f7fe fc93 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800caa2:	687b      	ldr	r3, [r7, #4]
 800caa4:	f503 73c4 	add.w	r3, r3, #392	@ 0x188
 800caa8:	4618      	mov	r0, r3
 800caaa:	f7fe fcb5 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800caae:	687b      	ldr	r3, [r7, #4]
 800cab0:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800cab4:	4618      	mov	r0, r3
 800cab6:	f7fe fcaf 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800caba:	687b      	ldr	r3, [r7, #4]
 800cabc:	33f0      	adds	r3, #240	@ 0xf0
 800cabe:	4618      	mov	r0, r3
 800cac0:	f7fe fcaa 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800cac4:	687b      	ldr	r3, [r7, #4]
 800cac6:	33a4      	adds	r3, #164	@ 0xa4
 800cac8:	4618      	mov	r0, r3
 800caca:	f7fe fca5 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800cace:	687b      	ldr	r3, [r7, #4]
 800cad0:	336c      	adds	r3, #108	@ 0x6c
 800cad2:	4618      	mov	r0, r3
 800cad4:	f000 f90a 	bl	800ccec <_ZN8touchgfx12ToggleButtonD1Ev>
 800cad8:	687b      	ldr	r3, [r7, #4]
 800cada:	3340      	adds	r3, #64	@ 0x40
 800cadc:	4618      	mov	r0, r3
 800cade:	f7fd fcfd 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800cae2:	687b      	ldr	r3, [r7, #4]
 800cae4:	4618      	mov	r0, r3
 800cae6:	f7ff fab9 	bl	800c05c <_ZN8touchgfx4ViewI13MainPresenterED1Ev>
 800caea:	687b      	ldr	r3, [r7, #4]
 800caec:	4618      	mov	r0, r3
 800caee:	3708      	adds	r7, #8
 800caf0:	46bd      	mov	sp, r7
 800caf2:	bd80      	pop	{r7, pc}
 800caf4:	08028804 	.word	0x08028804

0800caf8 <_ZN12MainViewBaseD0Ev>:
MainViewBase::~MainViewBase()
 800caf8:	b580      	push	{r7, lr}
 800cafa:	b082      	sub	sp, #8
 800cafc:	af00      	add	r7, sp, #0
 800cafe:	6078      	str	r0, [r7, #4]
}
 800cb00:	6878      	ldr	r0, [r7, #4]
 800cb02:	f7ff ffa9 	bl	800ca58 <_ZN12MainViewBaseD1Ev>
 800cb06:	f44f 7175 	mov.w	r1, #980	@ 0x3d4
 800cb0a:	6878      	ldr	r0, [r7, #4]
 800cb0c:	f019 f8f1 	bl	8025cf2 <_ZdlPvj>
 800cb10:	687b      	ldr	r3, [r7, #4]
 800cb12:	4618      	mov	r0, r3
 800cb14:	3708      	adds	r7, #8
 800cb16:	46bd      	mov	sp, r7
 800cb18:	bd80      	pop	{r7, pc}

0800cb1a <_ZN12MainViewBase11setupScreenEv>:

void MainViewBase::setupScreen()
{
 800cb1a:	b480      	push	{r7}
 800cb1c:	b083      	sub	sp, #12
 800cb1e:	af00      	add	r7, sp, #0
 800cb20:	6078      	str	r0, [r7, #4]

}
 800cb22:	bf00      	nop
 800cb24:	370c      	adds	r7, #12
 800cb26:	46bd      	mov	sp, r7
 800cb28:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cb2c:	4770      	bx	lr

0800cb2e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void MainViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800cb2e:	b580      	push	{r7, lr}
 800cb30:	b082      	sub	sp, #8
 800cb32:	af00      	add	r7, sp, #0
 800cb34:	6078      	str	r0, [r7, #4]
 800cb36:	6039      	str	r1, [r7, #0]
    if (&src == &toggleButton1)
 800cb38:	687b      	ldr	r3, [r7, #4]
 800cb3a:	336c      	adds	r3, #108	@ 0x6c
 800cb3c:	683a      	ldr	r2, [r7, #0]
 800cb3e:	429a      	cmp	r2, r3
 800cb40:	d105      	bne.n	800cb4e <_ZN12MainViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x20>
    {
        //Interaction1
        //When toggleButton1 clicked call virtual function
        //Call ToggleLights
        ToggleLights();
 800cb42:	687b      	ldr	r3, [r7, #4]
 800cb44:	681b      	ldr	r3, [r3, #0]
 800cb46:	332c      	adds	r3, #44	@ 0x2c
 800cb48:	681b      	ldr	r3, [r3, #0]
 800cb4a:	6878      	ldr	r0, [r7, #4]
 800cb4c:	4798      	blx	r3
    }
}
 800cb4e:	bf00      	nop
 800cb50:	3708      	adds	r7, #8
 800cb52:	46bd      	mov	sp, r7
 800cb54:	bd80      	pop	{r7, pc}

0800cb56 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void MainViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800cb56:	b580      	push	{r7, lr}
 800cb58:	b082      	sub	sp, #8
 800cb5a:	af00      	add	r7, sp, #0
 800cb5c:	6078      	str	r0, [r7, #4]
 800cb5e:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800cb60:	687b      	ldr	r3, [r7, #4]
 800cb62:	f503 73ea 	add.w	r3, r3, #468	@ 0x1d4
 800cb66:	683a      	ldr	r2, [r7, #0]
 800cb68:	429a      	cmp	r2, r3
 800cb6a:	d106      	bne.n	800cb7a <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x24>
    {
        //Interaction2
        //When flexButton1 clicked change screen to humidity_screen
        //Go to humidity_screen with no screen transition
        application().gotohumidity_screenScreenNoTransition();
 800cb6c:	6878      	ldr	r0, [r7, #4]
 800cb6e:	f7ff fa69 	bl	800c044 <_ZN12MainViewBase11applicationEv>
 800cb72:	4603      	mov	r3, r0
 800cb74:	4618      	mov	r0, r3
 800cb76:	f7fc f811 	bl	8008b9c <_ZN23FrontendApplicationBase37gotohumidity_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_1)
 800cb7a:	687b      	ldr	r3, [r7, #4]
 800cb7c:	f503 7313 	add.w	r3, r3, #588	@ 0x24c
 800cb80:	683a      	ldr	r2, [r7, #0]
 800cb82:	429a      	cmp	r2, r3
 800cb84:	d106      	bne.n	800cb94 <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x3e>
    {
        //Interaction3
        //When flexButton1_1 clicked change screen to temperature_screen
        //Go to temperature_screen with no screen transition
        application().gototemperature_screenScreenNoTransition();
 800cb86:	6878      	ldr	r0, [r7, #4]
 800cb88:	f7ff fa5c 	bl	800c044 <_ZN12MainViewBase11applicationEv>
 800cb8c:	4603      	mov	r3, r0
 800cb8e:	4618      	mov	r0, r3
 800cb90:	f7fc f84a 	bl	8008c28 <_ZN23FrontendApplicationBase40gototemperature_screenScreenNoTransitionEv>
    }
    if (&src == &flexButton1_2)
 800cb94:	687b      	ldr	r3, [r7, #4]
 800cb96:	f503 7331 	add.w	r3, r3, #708	@ 0x2c4
 800cb9a:	683a      	ldr	r2, [r7, #0]
 800cb9c:	429a      	cmp	r2, r3
 800cb9e:	d106      	bne.n	800cbae <_ZN12MainViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x58>
    {
        //Interaction4
        //When flexButton1_2 clicked change screen to light_screen
        //Go to light_screen with no screen transition
        application().gotolight_screenScreenNoTransition();
 800cba0:	6878      	ldr	r0, [r7, #4]
 800cba2:	f7ff fa4f 	bl	800c044 <_ZN12MainViewBase11applicationEv>
 800cba6:	4603      	mov	r3, r0
 800cba8:	4618      	mov	r0, r3
 800cbaa:	f7fc f883 	bl	8008cb4 <_ZN23FrontendApplicationBase34gotolight_screenScreenNoTransitionEv>
    }
}
 800cbae:	bf00      	nop
 800cbb0:	3708      	adds	r7, #8
 800cbb2:	46bd      	mov	sp, r7
 800cbb4:	bd80      	pop	{r7, pc}
	...

0800cbb8 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev>:
    View()
 800cbb8:	b580      	push	{r7, lr}
 800cbba:	b082      	sub	sp, #8
 800cbbc:	af00      	add	r7, sp, #0
 800cbbe:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800cbc0:	687b      	ldr	r3, [r7, #4]
 800cbc2:	4618      	mov	r0, r3
 800cbc4:	f008 fe52 	bl	801586c <_ZN8touchgfx6ScreenC1Ev>
 800cbc8:	4a05      	ldr	r2, [pc, #20]	@ (800cbe0 <_ZN8touchgfx4ViewI13MainPresenterEC1Ev+0x28>)
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	601a      	str	r2, [r3, #0]
 800cbce:	687b      	ldr	r3, [r7, #4]
 800cbd0:	2200      	movs	r2, #0
 800cbd2:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800cbd4:	687b      	ldr	r3, [r7, #4]
 800cbd6:	4618      	mov	r0, r3
 800cbd8:	3708      	adds	r7, #8
 800cbda:	46bd      	mov	sp, r7
 800cbdc:	bd80      	pop	{r7, pc}
 800cbde:	bf00      	nop
 800cbe0:	0802886c 	.word	0x0802886c

0800cbe4 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800cbe4:	b580      	push	{r7, lr}
 800cbe6:	b084      	sub	sp, #16
 800cbe8:	af00      	add	r7, sp, #0
 800cbea:	60f8      	str	r0, [r7, #12]
 800cbec:	60b9      	str	r1, [r7, #8]
 800cbee:	4639      	mov	r1, r7
 800cbf0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800cbf4:	68fb      	ldr	r3, [r7, #12]
 800cbf6:	4618      	mov	r0, r3
 800cbf8:	f7fe fab0 	bl	800b15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800cbfc:	4a08      	ldr	r2, [pc, #32]	@ (800cc20 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800cbfe:	68fb      	ldr	r3, [r7, #12]
 800cc00:	601a      	str	r2, [r3, #0]
 800cc02:	68fb      	ldr	r3, [r7, #12]
 800cc04:	68ba      	ldr	r2, [r7, #8]
 800cc06:	605a      	str	r2, [r3, #4]
 800cc08:	68fb      	ldr	r3, [r7, #12]
 800cc0a:	3308      	adds	r3, #8
 800cc0c:	463a      	mov	r2, r7
 800cc0e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cc12:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800cc16:	68fb      	ldr	r3, [r7, #12]
 800cc18:	4618      	mov	r0, r3
 800cc1a:	3710      	adds	r7, #16
 800cc1c:	46bd      	mov	sp, r7
 800cc1e:	bd80      	pop	{r7, pc}
 800cc20:	08028854 	.word	0x08028854

0800cc24 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800cc24:	b580      	push	{r7, lr}
 800cc26:	b084      	sub	sp, #16
 800cc28:	af00      	add	r7, sp, #0
 800cc2a:	60f8      	str	r0, [r7, #12]
 800cc2c:	60b9      	str	r1, [r7, #8]
 800cc2e:	4639      	mov	r1, r7
 800cc30:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800cc34:	68fb      	ldr	r3, [r7, #12]
 800cc36:	4618      	mov	r0, r3
 800cc38:	f7fe fa60 	bl	800b0fc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800cc3c:	4a08      	ldr	r2, [pc, #32]	@ (800cc60 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800cc3e:	68fb      	ldr	r3, [r7, #12]
 800cc40:	601a      	str	r2, [r3, #0]
 800cc42:	68fb      	ldr	r3, [r7, #12]
 800cc44:	68ba      	ldr	r2, [r7, #8]
 800cc46:	605a      	str	r2, [r3, #4]
 800cc48:	68fb      	ldr	r3, [r7, #12]
 800cc4a:	3308      	adds	r3, #8
 800cc4c:	463a      	mov	r2, r7
 800cc4e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800cc52:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800cc56:	68fb      	ldr	r3, [r7, #12]
 800cc58:	4618      	mov	r0, r3
 800cc5a:	3710      	adds	r7, #16
 800cc5c:	46bd      	mov	sp, r7
 800cc5e:	bd80      	pop	{r7, pc}
 800cc60:	0802883c 	.word	0x0802883c

0800cc64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800cc64:	b580      	push	{r7, lr}
 800cc66:	b082      	sub	sp, #8
 800cc68:	af00      	add	r7, sp, #0
 800cc6a:	6078      	str	r0, [r7, #4]
 800cc6c:	4a05      	ldr	r2, [pc, #20]	@ (800cc84 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800cc6e:	687b      	ldr	r3, [r7, #4]
 800cc70:	601a      	str	r2, [r3, #0]
 800cc72:	687b      	ldr	r3, [r7, #4]
 800cc74:	4618      	mov	r0, r3
 800cc76:	f7fe faf1 	bl	800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800cc7a:	687b      	ldr	r3, [r7, #4]
 800cc7c:	4618      	mov	r0, r3
 800cc7e:	3708      	adds	r7, #8
 800cc80:	46bd      	mov	sp, r7
 800cc82:	bd80      	pop	{r7, pc}
 800cc84:	0802883c 	.word	0x0802883c

0800cc88 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800cc88:	b580      	push	{r7, lr}
 800cc8a:	b082      	sub	sp, #8
 800cc8c:	af00      	add	r7, sp, #0
 800cc8e:	6078      	str	r0, [r7, #4]
 800cc90:	6878      	ldr	r0, [r7, #4]
 800cc92:	f7ff ffe7 	bl	800cc64 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800cc96:	2110      	movs	r1, #16
 800cc98:	6878      	ldr	r0, [r7, #4]
 800cc9a:	f019 f82a 	bl	8025cf2 <_ZdlPvj>
 800cc9e:	687b      	ldr	r3, [r7, #4]
 800cca0:	4618      	mov	r0, r3
 800cca2:	3708      	adds	r7, #8
 800cca4:	46bd      	mov	sp, r7
 800cca6:	bd80      	pop	{r7, pc}

0800cca8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>:
 800cca8:	b580      	push	{r7, lr}
 800ccaa:	b082      	sub	sp, #8
 800ccac:	af00      	add	r7, sp, #0
 800ccae:	6078      	str	r0, [r7, #4]
 800ccb0:	4a05      	ldr	r2, [pc, #20]	@ (800ccc8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800ccb2:	687b      	ldr	r3, [r7, #4]
 800ccb4:	601a      	str	r2, [r3, #0]
 800ccb6:	687b      	ldr	r3, [r7, #4]
 800ccb8:	4618      	mov	r0, r3
 800ccba:	f7fe faef 	bl	800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800ccbe:	687b      	ldr	r3, [r7, #4]
 800ccc0:	4618      	mov	r0, r3
 800ccc2:	3708      	adds	r7, #8
 800ccc4:	46bd      	mov	sp, r7
 800ccc6:	bd80      	pop	{r7, pc}
 800ccc8:	08028854 	.word	0x08028854

0800cccc <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800cccc:	b580      	push	{r7, lr}
 800ccce:	b082      	sub	sp, #8
 800ccd0:	af00      	add	r7, sp, #0
 800ccd2:	6078      	str	r0, [r7, #4]
 800ccd4:	6878      	ldr	r0, [r7, #4]
 800ccd6:	f7ff ffe7 	bl	800cca8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800ccda:	2110      	movs	r1, #16
 800ccdc:	6878      	ldr	r0, [r7, #4]
 800ccde:	f019 f808 	bl	8025cf2 <_ZdlPvj>
 800cce2:	687b      	ldr	r3, [r7, #4]
 800cce4:	4618      	mov	r0, r3
 800cce6:	3708      	adds	r7, #8
 800cce8:	46bd      	mov	sp, r7
 800ccea:	bd80      	pop	{r7, pc}

0800ccec <_ZN8touchgfx12ToggleButtonD1Ev>:
 800ccec:	b580      	push	{r7, lr}
 800ccee:	b082      	sub	sp, #8
 800ccf0:	af00      	add	r7, sp, #0
 800ccf2:	6078      	str	r0, [r7, #4]
 800ccf4:	4a05      	ldr	r2, [pc, #20]	@ (800cd0c <_ZN8touchgfx12ToggleButtonD1Ev+0x20>)
 800ccf6:	687b      	ldr	r3, [r7, #4]
 800ccf8:	601a      	str	r2, [r3, #0]
 800ccfa:	687b      	ldr	r3, [r7, #4]
 800ccfc:	4618      	mov	r0, r3
 800ccfe:	f7fe fbad 	bl	800b45c <_ZN8touchgfx6ButtonD1Ev>
 800cd02:	687b      	ldr	r3, [r7, #4]
 800cd04:	4618      	mov	r0, r3
 800cd06:	3708      	adds	r7, #8
 800cd08:	46bd      	mov	sp, r7
 800cd0a:	bd80      	pop	{r7, pc}
 800cd0c:	080292f4 	.word	0x080292f4

0800cd10 <_ZN8touchgfx12ToggleButtonD0Ev>:
 800cd10:	b580      	push	{r7, lr}
 800cd12:	b082      	sub	sp, #8
 800cd14:	af00      	add	r7, sp, #0
 800cd16:	6078      	str	r0, [r7, #4]
 800cd18:	6878      	ldr	r0, [r7, #4]
 800cd1a:	f7ff ffe7 	bl	800ccec <_ZN8touchgfx12ToggleButtonD1Ev>
 800cd1e:	2138      	movs	r1, #56	@ 0x38
 800cd20:	6878      	ldr	r0, [r7, #4]
 800cd22:	f018 ffe6 	bl	8025cf2 <_ZdlPvj>
 800cd26:	687b      	ldr	r3, [r7, #4]
 800cd28:	4618      	mov	r0, r3
 800cd2a:	3708      	adds	r7, #8
 800cd2c:	46bd      	mov	sp, r7
 800cd2e:	bd80      	pop	{r7, pc}

0800cd30 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800cd30:	b580      	push	{r7, lr}
 800cd32:	b082      	sub	sp, #8
 800cd34:	af00      	add	r7, sp, #0
 800cd36:	6078      	str	r0, [r7, #4]
 800cd38:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cd3a:	687b      	ldr	r3, [r7, #4]
 800cd3c:	685b      	ldr	r3, [r3, #4]
 800cd3e:	687a      	ldr	r2, [r7, #4]
 800cd40:	68d2      	ldr	r2, [r2, #12]
 800cd42:	1052      	asrs	r2, r2, #1
 800cd44:	1898      	adds	r0, r3, r2
 800cd46:	687b      	ldr	r3, [r7, #4]
 800cd48:	68db      	ldr	r3, [r3, #12]
 800cd4a:	f003 0301 	and.w	r3, r3, #1
 800cd4e:	2b00      	cmp	r3, #0
 800cd50:	d102      	bne.n	800cd58 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800cd52:	687b      	ldr	r3, [r7, #4]
 800cd54:	689b      	ldr	r3, [r3, #8]
 800cd56:	e00a      	b.n	800cd6e <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800cd58:	687b      	ldr	r3, [r7, #4]
 800cd5a:	685b      	ldr	r3, [r3, #4]
 800cd5c:	687a      	ldr	r2, [r7, #4]
 800cd5e:	68d2      	ldr	r2, [r2, #12]
 800cd60:	1052      	asrs	r2, r2, #1
 800cd62:	4413      	add	r3, r2
 800cd64:	681b      	ldr	r3, [r3, #0]
 800cd66:	687a      	ldr	r2, [r7, #4]
 800cd68:	6892      	ldr	r2, [r2, #8]
 800cd6a:	4413      	add	r3, r2
 800cd6c:	681b      	ldr	r3, [r3, #0]
 800cd6e:	6839      	ldr	r1, [r7, #0]
 800cd70:	4798      	blx	r3
    }
 800cd72:	bf00      	nop
 800cd74:	3708      	adds	r7, #8
 800cd76:	46bd      	mov	sp, r7
 800cd78:	bd80      	pop	{r7, pc}

0800cd7a <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800cd7a:	b480      	push	{r7}
 800cd7c:	b083      	sub	sp, #12
 800cd7e:	af00      	add	r7, sp, #0
 800cd80:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800cd82:	687b      	ldr	r3, [r7, #4]
 800cd84:	685b      	ldr	r3, [r3, #4]
 800cd86:	2b00      	cmp	r3, #0
 800cd88:	d010      	beq.n	800cdac <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cd8a:	687b      	ldr	r3, [r7, #4]
 800cd8c:	689b      	ldr	r3, [r3, #8]
 800cd8e:	2b00      	cmp	r3, #0
 800cd90:	d107      	bne.n	800cda2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cd92:	687b      	ldr	r3, [r7, #4]
 800cd94:	68db      	ldr	r3, [r3, #12]
 800cd96:	f003 0301 	and.w	r3, r3, #1
 800cd9a:	2b00      	cmp	r3, #0
 800cd9c:	d101      	bne.n	800cda2 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800cd9e:	2301      	movs	r3, #1
 800cda0:	e000      	b.n	800cda4 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800cda2:	2300      	movs	r3, #0
 800cda4:	2b01      	cmp	r3, #1
 800cda6:	d001      	beq.n	800cdac <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800cda8:	2301      	movs	r3, #1
 800cdaa:	e000      	b.n	800cdae <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800cdac:	2300      	movs	r3, #0
    }
 800cdae:	4618      	mov	r0, r3
 800cdb0:	370c      	adds	r7, #12
 800cdb2:	46bd      	mov	sp, r7
 800cdb4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800cdb8:	4770      	bx	lr

0800cdba <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800cdba:	b580      	push	{r7, lr}
 800cdbc:	b082      	sub	sp, #8
 800cdbe:	af00      	add	r7, sp, #0
 800cdc0:	6078      	str	r0, [r7, #4]
 800cdc2:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800cdc4:	687b      	ldr	r3, [r7, #4]
 800cdc6:	685b      	ldr	r3, [r3, #4]
 800cdc8:	687a      	ldr	r2, [r7, #4]
 800cdca:	68d2      	ldr	r2, [r2, #12]
 800cdcc:	1052      	asrs	r2, r2, #1
 800cdce:	1898      	adds	r0, r3, r2
 800cdd0:	687b      	ldr	r3, [r7, #4]
 800cdd2:	68db      	ldr	r3, [r3, #12]
 800cdd4:	f003 0301 	and.w	r3, r3, #1
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	d102      	bne.n	800cde2 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800cddc:	687b      	ldr	r3, [r7, #4]
 800cdde:	689b      	ldr	r3, [r3, #8]
 800cde0:	e00a      	b.n	800cdf8 <_ZN8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800cde2:	687b      	ldr	r3, [r7, #4]
 800cde4:	685b      	ldr	r3, [r3, #4]
 800cde6:	687a      	ldr	r2, [r7, #4]
 800cde8:	68d2      	ldr	r2, [r2, #12]
 800cdea:	1052      	asrs	r2, r2, #1
 800cdec:	4413      	add	r3, r2
 800cdee:	681b      	ldr	r3, [r3, #0]
 800cdf0:	687a      	ldr	r2, [r7, #4]
 800cdf2:	6892      	ldr	r2, [r2, #8]
 800cdf4:	4413      	add	r3, r2
 800cdf6:	681b      	ldr	r3, [r3, #0]
 800cdf8:	6839      	ldr	r1, [r7, #0]
 800cdfa:	4798      	blx	r3
    }
 800cdfc:	bf00      	nop
 800cdfe:	3708      	adds	r7, #8
 800ce00:	46bd      	mov	sp, r7
 800ce02:	bd80      	pop	{r7, pc}

0800ce04 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800ce04:	b480      	push	{r7}
 800ce06:	b083      	sub	sp, #12
 800ce08:	af00      	add	r7, sp, #0
 800ce0a:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800ce0c:	687b      	ldr	r3, [r7, #4]
 800ce0e:	685b      	ldr	r3, [r3, #4]
 800ce10:	2b00      	cmp	r3, #0
 800ce12:	d010      	beq.n	800ce36 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ce14:	687b      	ldr	r3, [r7, #4]
 800ce16:	689b      	ldr	r3, [r3, #8]
 800ce18:	2b00      	cmp	r3, #0
 800ce1a:	d107      	bne.n	800ce2c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ce1c:	687b      	ldr	r3, [r7, #4]
 800ce1e:	68db      	ldr	r3, [r3, #12]
 800ce20:	f003 0301 	and.w	r3, r3, #1
 800ce24:	2b00      	cmp	r3, #0
 800ce26:	d101      	bne.n	800ce2c <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800ce28:	2301      	movs	r3, #1
 800ce2a:	e000      	b.n	800ce2e <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800ce2c:	2300      	movs	r3, #0
 800ce2e:	2b01      	cmp	r3, #1
 800ce30:	d001      	beq.n	800ce36 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800ce32:	2301      	movs	r3, #1
 800ce34:	e000      	b.n	800ce38 <_ZNK8touchgfx8CallbackI12MainViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800ce36:	2300      	movs	r3, #0
    }
 800ce38:	4618      	mov	r0, r3
 800ce3a:	370c      	adds	r7, #12
 800ce3c:	46bd      	mov	sp, r7
 800ce3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce42:	4770      	bx	lr

0800ce44 <_ZN26temperature_screenViewBase8increaseEv>:
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void increase()
 800ce44:	b480      	push	{r7}
 800ce46:	b083      	sub	sp, #12
 800ce48:	af00      	add	r7, sp, #0
 800ce4a:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800ce4c:	bf00      	nop
 800ce4e:	370c      	adds	r7, #12
 800ce50:	46bd      	mov	sp, r7
 800ce52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce56:	4770      	bx	lr

0800ce58 <_ZN26temperature_screenViewBase8decreaseEv>:
    virtual void decrease()
 800ce58:	b480      	push	{r7}
 800ce5a:	b083      	sub	sp, #12
 800ce5c:	af00      	add	r7, sp, #0
 800ce5e:	6078      	str	r0, [r7, #4]
    {
        // Override and implement this function in temperature_screen
    }
 800ce60:	bf00      	nop
 800ce62:	370c      	adds	r7, #12
 800ce64:	46bd      	mov	sp, r7
 800ce66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ce6a:	4770      	bx	lr

0800ce6c <_ZN26temperature_screenViewBase11applicationEv>:

protected:
    FrontendApplication& application() {
 800ce6c:	b580      	push	{r7, lr}
 800ce6e:	b082      	sub	sp, #8
 800ce70:	af00      	add	r7, sp, #0
 800ce72:	6078      	str	r0, [r7, #4]
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
 800ce74:	f007 f9e4 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 800ce78:	4603      	mov	r3, r0
    }
 800ce7a:	4618      	mov	r0, r3
 800ce7c:	3708      	adds	r7, #8
 800ce7e:	46bd      	mov	sp, r7
 800ce80:	bd80      	pop	{r7, pc}
	...

0800ce84 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>:
class View : public Screen
 800ce84:	b580      	push	{r7, lr}
 800ce86:	b082      	sub	sp, #8
 800ce88:	af00      	add	r7, sp, #0
 800ce8a:	6078      	str	r0, [r7, #4]
 800ce8c:	4a05      	ldr	r2, [pc, #20]	@ (800cea4 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev+0x20>)
 800ce8e:	687b      	ldr	r3, [r7, #4]
 800ce90:	601a      	str	r2, [r3, #0]
 800ce92:	687b      	ldr	r3, [r7, #4]
 800ce94:	4618      	mov	r0, r3
 800ce96:	f7fd f833 	bl	8009f00 <_ZN8touchgfx6ScreenD1Ev>
 800ce9a:	687b      	ldr	r3, [r7, #4]
 800ce9c:	4618      	mov	r0, r3
 800ce9e:	3708      	adds	r7, #8
 800cea0:	46bd      	mov	sp, r7
 800cea2:	bd80      	pop	{r7, pc}
 800cea4:	0802890c 	.word	0x0802890c

0800cea8 <_ZN8touchgfx4ViewI27temperature_screenPresenterED0Ev>:
 800cea8:	b580      	push	{r7, lr}
 800ceaa:	b082      	sub	sp, #8
 800ceac:	af00      	add	r7, sp, #0
 800ceae:	6078      	str	r0, [r7, #4]
 800ceb0:	6878      	ldr	r0, [r7, #4]
 800ceb2:	f7ff ffe7 	bl	800ce84 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800ceb6:	2140      	movs	r1, #64	@ 0x40
 800ceb8:	6878      	ldr	r0, [r7, #4]
 800ceba:	f018 ff1a 	bl	8025cf2 <_ZdlPvj>
 800cebe:	687b      	ldr	r3, [r7, #4]
 800cec0:	4618      	mov	r0, r3
 800cec2:	3708      	adds	r7, #8
 800cec4:	46bd      	mov	sp, r7
 800cec6:	bd80      	pop	{r7, pc}

0800cec8 <_ZN26temperature_screenViewBaseC1Ev>:
#include <gui_generated/temperature_screen_screen/temperature_screenViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>
#include <images/BitmapDatabase.hpp>

temperature_screenViewBase::temperature_screenViewBase() :
 800cec8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800cecc:	b0ae      	sub	sp, #184	@ 0xb8
 800cece:	af02      	add	r7, sp, #8
 800ced0:	6178      	str	r0, [r7, #20]
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800ced2:	697b      	ldr	r3, [r7, #20]
 800ced4:	4618      	mov	r0, r3
 800ced6:	f000 fb37 	bl	800d548 <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>
 800ceda:	4add      	ldr	r2, [pc, #884]	@ (800d250 <_ZN26temperature_screenViewBaseC1Ev+0x388>)
 800cedc:	697b      	ldr	r3, [r7, #20]
 800cede:	601a      	str	r2, [r3, #0]
 800cee0:	697b      	ldr	r3, [r7, #20]
 800cee2:	3340      	adds	r3, #64	@ 0x40
 800cee4:	4618      	mov	r0, r3
 800cee6:	f7fd f8a7 	bl	800a038 <_ZN8touchgfx3BoxC1Ev>
 800ceea:	697b      	ldr	r3, [r7, #20]
 800ceec:	336c      	adds	r3, #108	@ 0x6c
 800ceee:	4618      	mov	r0, r3
 800cef0:	f7fd f8fa 	bl	800a0e8 <_ZN8touchgfx8TextAreaC1Ev>
 800cef4:	697b      	ldr	r3, [r7, #20]
 800cef6:	33b4      	adds	r3, #180	@ 0xb4
 800cef8:	4618      	mov	r0, r3
 800cefa:	f7fe f8bf 	bl	800b07c <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEEC1Ev>
 800cefe:	697b      	ldr	r3, [r7, #20]
 800cf00:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800cf04:	4618      	mov	r0, r3
 800cf06:	f7fd fc27 	bl	800a758 <_ZN8touchgfx23TextAreaWithOneWildcardC1Ev>
 800cf0a:	697b      	ldr	r3, [r7, #20]
 800cf0c:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800cf10:	4618      	mov	r0, r3
 800cf12:	f005 fc93 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
 800cf16:	697b      	ldr	r3, [r7, #20]
 800cf18:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800cf1c:	4618      	mov	r0, r3
 800cf1e:	f005 fc8d 	bl	801283c <_ZN8touchgfx14ButtonWithIconC1Ev>
    flexButtonCallback(this, &temperature_screenViewBase::flexButtonCallbackHandler),
 800cf22:	697b      	ldr	r3, [r7, #20]
 800cf24:	f503 7001 	add.w	r0, r3, #516	@ 0x204
 800cf28:	4bca      	ldr	r3, [pc, #808]	@ (800d254 <_ZN26temperature_screenViewBaseC1Ev+0x38c>)
 800cf2a:	627b      	str	r3, [r7, #36]	@ 0x24
 800cf2c:	2300      	movs	r3, #0
 800cf2e:	62bb      	str	r3, [r7, #40]	@ 0x28
 800cf30:	f107 0324 	add.w	r3, r7, #36	@ 0x24
 800cf34:	cb0c      	ldmia	r3, {r2, r3}
 800cf36:	6979      	ldr	r1, [r7, #20]
 800cf38:	f000 fb1c 	bl	800d574 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>
    buttonCallback(this, &temperature_screenViewBase::buttonCallbackHandler)
 800cf3c:	697b      	ldr	r3, [r7, #20]
 800cf3e:	f503 7005 	add.w	r0, r3, #532	@ 0x214
 800cf42:	4bc5      	ldr	r3, [pc, #788]	@ (800d258 <_ZN26temperature_screenViewBaseC1Ev+0x390>)
 800cf44:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800cf46:	2300      	movs	r3, #0
 800cf48:	633b      	str	r3, [r7, #48]	@ 0x30
 800cf4a:	f107 032c 	add.w	r3, r7, #44	@ 0x2c
 800cf4e:	cb0c      	ldmia	r3, {r2, r3}
 800cf50:	6979      	ldr	r1, [r7, #20]
 800cf52:	f000 fb2f 	bl	800d5b4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>
{
    __background.setPosition(0, 0, 480, 320);
 800cf56:	697b      	ldr	r3, [r7, #20]
 800cf58:	f103 0040 	add.w	r0, r3, #64	@ 0x40
 800cf5c:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800cf60:	9300      	str	r3, [sp, #0]
 800cf62:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800cf66:	2200      	movs	r2, #0
 800cf68:	2100      	movs	r1, #0
 800cf6a:	f7fc fe3f 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
 800cf6e:	697b      	ldr	r3, [r7, #20]
 800cf70:	f103 0440 	add.w	r4, r3, #64	@ 0x40
 800cf74:	2300      	movs	r3, #0
 800cf76:	f887 3084 	strb.w	r3, [r7, #132]	@ 0x84
 800cf7a:	2300      	movs	r3, #0
 800cf7c:	f887 3083 	strb.w	r3, [r7, #131]	@ 0x83
 800cf80:	2300      	movs	r3, #0
 800cf82:	f887 3082 	strb.w	r3, [r7, #130]	@ 0x82
 800cf86:	f897 3084 	ldrb.w	r3, [r7, #132]	@ 0x84
 800cf8a:	041a      	lsls	r2, r3, #16
 800cf8c:	f897 3083 	ldrb.w	r3, [r7, #131]	@ 0x83
 800cf90:	021b      	lsls	r3, r3, #8
 800cf92:	431a      	orrs	r2, r3
 800cf94:	f897 3082 	ldrb.w	r3, [r7, #130]	@ 0x82
 800cf98:	4313      	orrs	r3, r2
 800cf9a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800cf9e:	f107 037c 	add.w	r3, r7, #124	@ 0x7c
 800cfa2:	4611      	mov	r1, r2
 800cfa4:	4618      	mov	r0, r3
 800cfa6:	f7fc fd51 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800cfaa:	6ffb      	ldr	r3, [r7, #124]	@ 0x7c
 800cfac:	4619      	mov	r1, r3
 800cfae:	4620      	mov	r0, r4
 800cfb0:	f7fd f866 	bl	800a080 <_ZN8touchgfx3Box8setColorENS_9colortypeE>
    add(__background);
 800cfb4:	697a      	ldr	r2, [r7, #20]
 800cfb6:	697b      	ldr	r3, [r7, #20]
 800cfb8:	3340      	adds	r3, #64	@ 0x40
 800cfba:	4619      	mov	r1, r3
 800cfbc:	4610      	mov	r0, r2
 800cfbe:	f7fc fff7 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    textarea.setPosition(87, 18, 306, 48);
 800cfc2:	697b      	ldr	r3, [r7, #20]
 800cfc4:	f103 006c 	add.w	r0, r3, #108	@ 0x6c
 800cfc8:	2330      	movs	r3, #48	@ 0x30
 800cfca:	9300      	str	r3, [sp, #0]
 800cfcc:	f44f 7399 	mov.w	r3, #306	@ 0x132
 800cfd0:	2212      	movs	r2, #18
 800cfd2:	2157      	movs	r1, #87	@ 0x57
 800cfd4:	f7fc fe0a 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    textarea.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800cfd8:	697b      	ldr	r3, [r7, #20]
 800cfda:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800cfde:	23ff      	movs	r3, #255	@ 0xff
 800cfe0:	f887 3087 	strb.w	r3, [r7, #135]	@ 0x87
 800cfe4:	23ff      	movs	r3, #255	@ 0xff
 800cfe6:	f887 3086 	strb.w	r3, [r7, #134]	@ 0x86
 800cfea:	23ff      	movs	r3, #255	@ 0xff
 800cfec:	f887 3085 	strb.w	r3, [r7, #133]	@ 0x85
 800cff0:	f897 3087 	ldrb.w	r3, [r7, #135]	@ 0x87
 800cff4:	041a      	lsls	r2, r3, #16
 800cff6:	f897 3086 	ldrb.w	r3, [r7, #134]	@ 0x86
 800cffa:	021b      	lsls	r3, r3, #8
 800cffc:	431a      	orrs	r2, r3
 800cffe:	f897 3085 	ldrb.w	r3, [r7, #133]	@ 0x85
 800d002:	4313      	orrs	r3, r2
 800d004:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d008:	f107 0378 	add.w	r3, r7, #120	@ 0x78
 800d00c:	4611      	mov	r1, r2
 800d00e:	4618      	mov	r0, r3
 800d010:	f7fc fd1c 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d014:	6fbb      	ldr	r3, [r7, #120]	@ 0x78
 800d016:	f8c7 4088 	str.w	r4, [r7, #136]	@ 0x88
 800d01a:	623b      	str	r3, [r7, #32]
        color = newColor;
 800d01c:	f8d7 3088 	ldr.w	r3, [r7, #136]	@ 0x88
 800d020:	6a3a      	ldr	r2, [r7, #32]
 800d022:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800d024:	bf00      	nop
    textarea.setLinespacing(0);
 800d026:	697b      	ldr	r3, [r7, #20]
 800d028:	336c      	adds	r3, #108	@ 0x6c
 800d02a:	f8c7 3090 	str.w	r3, [r7, #144]	@ 0x90
 800d02e:	2300      	movs	r3, #0
 800d030:	f8a7 308e 	strh.w	r3, [r7, #142]	@ 0x8e
        linespace = space;
 800d034:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800d038:	f8b7 208e 	ldrh.w	r2, [r7, #142]	@ 0x8e
 800d03c:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800d03e:	f8d7 3090 	ldr.w	r3, [r7, #144]	@ 0x90
 800d042:	681b      	ldr	r3, [r3, #0]
 800d044:	3384      	adds	r3, #132	@ 0x84
 800d046:	681b      	ldr	r3, [r3, #0]
 800d048:	f8d7 4090 	ldr.w	r4, [r7, #144]	@ 0x90
 800d04c:	463a      	mov	r2, r7
 800d04e:	f8d7 1090 	ldr.w	r1, [r7, #144]	@ 0x90
 800d052:	4610      	mov	r0, r2
 800d054:	4798      	blx	r3
 800d056:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800d05a:	463a      	mov	r2, r7
 800d05c:	ca07      	ldmia	r2, {r0, r1, r2}
 800d05e:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d062:	bf00      	nop
    textarea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_Z66R));
 800d064:	697b      	ldr	r3, [r7, #20]
 800d066:	f103 046c 	add.w	r4, r3, #108	@ 0x6c
 800d06a:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800d06e:	2104      	movs	r1, #4
 800d070:	4618      	mov	r0, r3
 800d072:	f7fd f823 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800d076:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800d07a:	4619      	mov	r1, r3
 800d07c:	4620      	mov	r0, r4
 800d07e:	f005 f951 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d082:	f107 0334 	add.w	r3, r7, #52	@ 0x34
 800d086:	4618      	mov	r0, r3
 800d088:	f7fb f934 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(textarea);
 800d08c:	697a      	ldr	r2, [r7, #20]
 800d08e:	697b      	ldr	r3, [r7, #20]
 800d090:	336c      	adds	r3, #108	@ 0x6c
 800d092:	4619      	mov	r1, r3
 800d094:	4610      	mov	r0, r2
 800d096:	f7fc ff8b 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    flexButton1.setBoxWithBorderPosition(0, 0, 50, 50);
 800d09a:	697b      	ldr	r3, [r7, #20]
 800d09c:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800d0a0:	2332      	movs	r3, #50	@ 0x32
 800d0a2:	9300      	str	r3, [sp, #0]
 800d0a4:	2332      	movs	r3, #50	@ 0x32
 800d0a6:	2200      	movs	r2, #0
 800d0a8:	2100      	movs	r1, #0
 800d0aa:	f7fe f887 	bl	800b1bc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE24setBoxWithBorderPositionEssss>
    flexButton1.setBorderSize(5);
 800d0ae:	697b      	ldr	r3, [r7, #20]
 800d0b0:	33b4      	adds	r3, #180	@ 0xb4
 800d0b2:	2105      	movs	r1, #5
 800d0b4:	4618      	mov	r0, r3
 800d0b6:	f7fe f8a1 	bl	800b1fc <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE13setBorderSizeEh>
    flexButton1.setBoxWithBorderColors(touchgfx::Color::getColorFromRGB(0, 102, 153), touchgfx::Color::getColorFromRGB(0, 153, 204), touchgfx::Color::getColorFromRGB(0, 51, 102), touchgfx::Color::getColorFromRGB(51, 102, 153));
 800d0ba:	697b      	ldr	r3, [r7, #20]
 800d0bc:	f103 04b4 	add.w	r4, r3, #180	@ 0xb4
 800d0c0:	2300      	movs	r3, #0
 800d0c2:	f887 3097 	strb.w	r3, [r7, #151]	@ 0x97
 800d0c6:	2366      	movs	r3, #102	@ 0x66
 800d0c8:	f887 3096 	strb.w	r3, [r7, #150]	@ 0x96
 800d0cc:	2399      	movs	r3, #153	@ 0x99
 800d0ce:	f887 3095 	strb.w	r3, [r7, #149]	@ 0x95
 800d0d2:	f897 3097 	ldrb.w	r3, [r7, #151]	@ 0x97
 800d0d6:	041a      	lsls	r2, r3, #16
 800d0d8:	f897 3096 	ldrb.w	r3, [r7, #150]	@ 0x96
 800d0dc:	021b      	lsls	r3, r3, #8
 800d0de:	431a      	orrs	r2, r3
 800d0e0:	f897 3095 	ldrb.w	r3, [r7, #149]	@ 0x95
 800d0e4:	4313      	orrs	r3, r2
 800d0e6:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d0ea:	f107 0374 	add.w	r3, r7, #116	@ 0x74
 800d0ee:	4611      	mov	r1, r2
 800d0f0:	4618      	mov	r0, r3
 800d0f2:	f7fc fcab 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d0f6:	6f7b      	ldr	r3, [r7, #116]	@ 0x74
 800d0f8:	461d      	mov	r5, r3
 800d0fa:	2300      	movs	r3, #0
 800d0fc:	f887 309a 	strb.w	r3, [r7, #154]	@ 0x9a
 800d100:	2399      	movs	r3, #153	@ 0x99
 800d102:	f887 3099 	strb.w	r3, [r7, #153]	@ 0x99
 800d106:	23cc      	movs	r3, #204	@ 0xcc
 800d108:	f887 3098 	strb.w	r3, [r7, #152]	@ 0x98
 800d10c:	f897 309a 	ldrb.w	r3, [r7, #154]	@ 0x9a
 800d110:	041a      	lsls	r2, r3, #16
 800d112:	f897 3099 	ldrb.w	r3, [r7, #153]	@ 0x99
 800d116:	021b      	lsls	r3, r3, #8
 800d118:	431a      	orrs	r2, r3
 800d11a:	f897 3098 	ldrb.w	r3, [r7, #152]	@ 0x98
 800d11e:	4313      	orrs	r3, r2
 800d120:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d124:	f107 0370 	add.w	r3, r7, #112	@ 0x70
 800d128:	4611      	mov	r1, r2
 800d12a:	4618      	mov	r0, r3
 800d12c:	f7fc fc8e 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d130:	6f3b      	ldr	r3, [r7, #112]	@ 0x70
 800d132:	461e      	mov	r6, r3
 800d134:	2300      	movs	r3, #0
 800d136:	f887 309d 	strb.w	r3, [r7, #157]	@ 0x9d
 800d13a:	2333      	movs	r3, #51	@ 0x33
 800d13c:	f887 309c 	strb.w	r3, [r7, #156]	@ 0x9c
 800d140:	2366      	movs	r3, #102	@ 0x66
 800d142:	f887 309b 	strb.w	r3, [r7, #155]	@ 0x9b
 800d146:	f897 309d 	ldrb.w	r3, [r7, #157]	@ 0x9d
 800d14a:	041a      	lsls	r2, r3, #16
 800d14c:	f897 309c 	ldrb.w	r3, [r7, #156]	@ 0x9c
 800d150:	021b      	lsls	r3, r3, #8
 800d152:	431a      	orrs	r2, r3
 800d154:	f897 309b 	ldrb.w	r3, [r7, #155]	@ 0x9b
 800d158:	4313      	orrs	r3, r2
 800d15a:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d15e:	f107 036c 	add.w	r3, r7, #108	@ 0x6c
 800d162:	4611      	mov	r1, r2
 800d164:	4618      	mov	r0, r3
 800d166:	f7fc fc71 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d16a:	6efb      	ldr	r3, [r7, #108]	@ 0x6c
 800d16c:	4698      	mov	r8, r3
 800d16e:	2333      	movs	r3, #51	@ 0x33
 800d170:	f887 30a0 	strb.w	r3, [r7, #160]	@ 0xa0
 800d174:	2366      	movs	r3, #102	@ 0x66
 800d176:	f887 309f 	strb.w	r3, [r7, #159]	@ 0x9f
 800d17a:	2399      	movs	r3, #153	@ 0x99
 800d17c:	f887 309e 	strb.w	r3, [r7, #158]	@ 0x9e
 800d180:	f897 30a0 	ldrb.w	r3, [r7, #160]	@ 0xa0
 800d184:	041a      	lsls	r2, r3, #16
 800d186:	f897 309f 	ldrb.w	r3, [r7, #159]	@ 0x9f
 800d18a:	021b      	lsls	r3, r3, #8
 800d18c:	431a      	orrs	r2, r3
 800d18e:	f897 309e 	ldrb.w	r3, [r7, #158]	@ 0x9e
 800d192:	4313      	orrs	r3, r2
 800d194:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d198:	f107 0368 	add.w	r3, r7, #104	@ 0x68
 800d19c:	4611      	mov	r1, r2
 800d19e:	4618      	mov	r0, r3
 800d1a0:	f7fc fc54 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d1a4:	6ebb      	ldr	r3, [r7, #104]	@ 0x68
 800d1a6:	9300      	str	r3, [sp, #0]
 800d1a8:	4643      	mov	r3, r8
 800d1aa:	4632      	mov	r2, r6
 800d1ac:	4629      	mov	r1, r5
 800d1ae:	4620      	mov	r0, r4
 800d1b0:	f7fe f836 	bl	800b220 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEE22setBoxWithBorderColorsENS_9colortypeES3_S3_S3_>
    flexButton1.setAction(flexButtonCallback);
 800d1b4:	697b      	ldr	r3, [r7, #20]
 800d1b6:	f103 02b4 	add.w	r2, r3, #180	@ 0xb4
 800d1ba:	697b      	ldr	r3, [r7, #20]
 800d1bc:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800d1c0:	4619      	mov	r1, r3
 800d1c2:	4610      	mov	r0, r2
 800d1c4:	f7fd f940 	bl	800a448 <_ZN8touchgfx23AbstractButtonContainer9setActionERNS_15GenericCallbackIRKS0_vvEE>
    flexButton1.setPosition(393, 245, 50, 50);
 800d1c8:	697b      	ldr	r3, [r7, #20]
 800d1ca:	f103 00b4 	add.w	r0, r3, #180	@ 0xb4
 800d1ce:	2332      	movs	r3, #50	@ 0x32
 800d1d0:	9300      	str	r3, [sp, #0]
 800d1d2:	2332      	movs	r3, #50	@ 0x32
 800d1d4:	22f5      	movs	r2, #245	@ 0xf5
 800d1d6:	f240 1189 	movw	r1, #393	@ 0x189
 800d1da:	f7fc fd07 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    add(flexButton1);
 800d1de:	697a      	ldr	r2, [r7, #20]
 800d1e0:	697b      	ldr	r3, [r7, #20]
 800d1e2:	33b4      	adds	r3, #180	@ 0xb4
 800d1e4:	4619      	mov	r1, r3
 800d1e6:	4610      	mov	r0, r2
 800d1e8:	f7fc fee2 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    tempVal.setPosition(140, 140, 200, 40);
 800d1ec:	697b      	ldr	r3, [r7, #20]
 800d1ee:	f503 7096 	add.w	r0, r3, #300	@ 0x12c
 800d1f2:	2328      	movs	r3, #40	@ 0x28
 800d1f4:	9300      	str	r3, [sp, #0]
 800d1f6:	23c8      	movs	r3, #200	@ 0xc8
 800d1f8:	228c      	movs	r2, #140	@ 0x8c
 800d1fa:	218c      	movs	r1, #140	@ 0x8c
 800d1fc:	f7fc fcf6 	bl	8009bec <_ZN8touchgfx8Drawable11setPositionEssss>
    tempVal.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
 800d200:	697b      	ldr	r3, [r7, #20]
 800d202:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800d206:	23ff      	movs	r3, #255	@ 0xff
 800d208:	f887 30a3 	strb.w	r3, [r7, #163]	@ 0xa3
 800d20c:	23ff      	movs	r3, #255	@ 0xff
 800d20e:	f887 30a2 	strb.w	r3, [r7, #162]	@ 0xa2
 800d212:	23ff      	movs	r3, #255	@ 0xff
 800d214:	f887 30a1 	strb.w	r3, [r7, #161]	@ 0xa1
 800d218:	f897 30a3 	ldrb.w	r3, [r7, #163]	@ 0xa3
 800d21c:	041a      	lsls	r2, r3, #16
 800d21e:	f897 30a2 	ldrb.w	r3, [r7, #162]	@ 0xa2
 800d222:	021b      	lsls	r3, r3, #8
 800d224:	431a      	orrs	r2, r3
 800d226:	f897 30a1 	ldrb.w	r3, [r7, #161]	@ 0xa1
 800d22a:	4313      	orrs	r3, r2
 800d22c:	f043 427f 	orr.w	r2, r3, #4278190080	@ 0xff000000
 800d230:	f107 0364 	add.w	r3, r7, #100	@ 0x64
 800d234:	4611      	mov	r1, r2
 800d236:	4618      	mov	r0, r3
 800d238:	f7fc fc08 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800d23c:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 800d23e:	f8c7 40a4 	str.w	r4, [r7, #164]	@ 0xa4
 800d242:	61fb      	str	r3, [r7, #28]
        color = newColor;
 800d244:	f8d7 30a4 	ldr.w	r3, [r7, #164]	@ 0xa4
 800d248:	69fa      	ldr	r2, [r7, #28]
 800d24a:	631a      	str	r2, [r3, #48]	@ 0x30
    }
 800d24c:	bf00      	nop
 800d24e:	e005      	b.n	800d25c <_ZN26temperature_screenViewBaseC1Ev+0x394>
 800d250:	080288a0 	.word	0x080288a0
 800d254:	0800d4db 	.word	0x0800d4db
 800d258:	0800d505 	.word	0x0800d505
    tempVal.setLinespacing(0);
 800d25c:	697b      	ldr	r3, [r7, #20]
 800d25e:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d262:	f8c7 30ac 	str.w	r3, [r7, #172]	@ 0xac
 800d266:	2300      	movs	r3, #0
 800d268:	f8a7 30aa 	strh.w	r3, [r7, #170]	@ 0xaa
        linespace = space;
 800d26c:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800d270:	f8b7 20aa 	ldrh.w	r2, [r7, #170]	@ 0xaa
 800d274:	869a      	strh	r2, [r3, #52]	@ 0x34
        boundingArea = calculateBoundingArea();
 800d276:	f8d7 30ac 	ldr.w	r3, [r7, #172]	@ 0xac
 800d27a:	681b      	ldr	r3, [r3, #0]
 800d27c:	3384      	adds	r3, #132	@ 0x84
 800d27e:	681b      	ldr	r3, [r3, #0]
 800d280:	f8d7 40ac 	ldr.w	r4, [r7, #172]	@ 0xac
 800d284:	463a      	mov	r2, r7
 800d286:	f8d7 10ac 	ldr.w	r1, [r7, #172]	@ 0xac
 800d28a:	4610      	mov	r0, r2
 800d28c:	4798      	blx	r3
 800d28e:	f104 033c 	add.w	r3, r4, #60	@ 0x3c
 800d292:	463a      	mov	r2, r7
 800d294:	ca07      	ldmia	r2, {r0, r1, r2}
 800d296:	e883 0007 	stmia.w	r3, {r0, r1, r2}
    }
 800d29a:	bf00      	nop
    tempValBuffer[0] = 0;
 800d29c:	697b      	ldr	r3, [r7, #20]
 800d29e:	2200      	movs	r2, #0
 800d2a0:	f8a3 21f0 	strh.w	r2, [r3, #496]	@ 0x1f0
    tempVal.setWildcard(tempValBuffer);
 800d2a4:	697b      	ldr	r3, [r7, #20]
 800d2a6:	f503 7296 	add.w	r2, r3, #300	@ 0x12c
 800d2aa:	697b      	ldr	r3, [r7, #20]
 800d2ac:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800d2b0:	4619      	mov	r1, r3
 800d2b2:	4610      	mov	r0, r2
 800d2b4:	f7fd fa80 	bl	800a7b8 <_ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt>
    tempVal.setTypedText(touchgfx::TypedText(T___SINGLEUSE_VVL5));
 800d2b8:	697b      	ldr	r3, [r7, #20]
 800d2ba:	f503 7496 	add.w	r4, r3, #300	@ 0x12c
 800d2be:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d2c2:	2103      	movs	r1, #3
 800d2c4:	4618      	mov	r0, r3
 800d2c6:	f7fc fef9 	bl	800a0bc <_ZN8touchgfx9TypedTextC1Et>
 800d2ca:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d2ce:	4619      	mov	r1, r3
 800d2d0:	4620      	mov	r0, r4
 800d2d2:	f005 f827 	bl	8012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>
 800d2d6:	f107 033c 	add.w	r3, r7, #60	@ 0x3c
 800d2da:	4618      	mov	r0, r3
 800d2dc:	f7fb f80a 	bl	80082f4 <_ZN8touchgfx9TypedTextD1Ev>
    add(tempVal);
 800d2e0:	697a      	ldr	r2, [r7, #20]
 800d2e2:	697b      	ldr	r3, [r7, #20]
 800d2e4:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d2e8:	4619      	mov	r1, r3
 800d2ea:	4610      	mov	r0, r2
 800d2ec:	f7fc fe60 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1.setXY(111, 72);
 800d2f0:	697b      	ldr	r3, [r7, #20]
 800d2f2:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d2f6:	2248      	movs	r2, #72	@ 0x48
 800d2f8:	216f      	movs	r1, #111	@ 0x6f
 800d2fa:	4618      	mov	r0, r3
 800d2fc:	f7fc fcb5 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_UPWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d300:	697b      	ldr	r3, [r7, #20]
 800d302:	f503 74bc 	add.w	r4, r3, #376	@ 0x178
 800d306:	f107 0344 	add.w	r3, r7, #68	@ 0x44
 800d30a:	2100      	movs	r1, #0
 800d30c:	4618      	mov	r0, r3
 800d30e:	f7fc fbe3 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d312:	f107 0348 	add.w	r3, r7, #72	@ 0x48
 800d316:	2101      	movs	r1, #1
 800d318:	4618      	mov	r0, r3
 800d31a:	f7fc fbdd 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d31e:	f107 034c 	add.w	r3, r7, #76	@ 0x4c
 800d322:	2106      	movs	r1, #6
 800d324:	4618      	mov	r0, r3
 800d326:	f7fc fbd7 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d32a:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d32e:	2104      	movs	r1, #4
 800d330:	4618      	mov	r0, r3
 800d332:	f7fc fbd1 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d336:	f107 004c 	add.w	r0, r7, #76	@ 0x4c
 800d33a:	f107 0248 	add.w	r2, r7, #72	@ 0x48
 800d33e:	f107 0144 	add.w	r1, r7, #68	@ 0x44
 800d342:	f107 0350 	add.w	r3, r7, #80	@ 0x50
 800d346:	9300      	str	r3, [sp, #0]
 800d348:	4603      	mov	r3, r0
 800d34a:	4620      	mov	r0, r4
 800d34c:	f005 f9e0 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1.setIconXY(97, 0);
 800d350:	697b      	ldr	r3, [r7, #20]
 800d352:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d356:	2200      	movs	r2, #0
 800d358:	2161      	movs	r1, #97	@ 0x61
 800d35a:	4618      	mov	r0, r3
 800d35c:	f7fd fa88 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1.setAction(buttonCallback);
 800d360:	697b      	ldr	r3, [r7, #20]
 800d362:	f503 72bc 	add.w	r2, r3, #376	@ 0x178
 800d366:	697b      	ldr	r3, [r7, #20]
 800d368:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d36c:	4619      	mov	r1, r3
 800d36e:	4610      	mov	r0, r2
 800d370:	f7fd fa2f 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1);
 800d374:	697a      	ldr	r2, [r7, #20]
 800d376:	697b      	ldr	r3, [r7, #20]
 800d378:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d37c:	4619      	mov	r1, r3
 800d37e:	4610      	mov	r0, r2
 800d380:	f7fc fe16 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>

    buttonWithIcon1_1.setXY(111, 195);
 800d384:	697b      	ldr	r3, [r7, #20]
 800d386:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d38a:	22c3      	movs	r2, #195	@ 0xc3
 800d38c:	216f      	movs	r1, #111	@ 0x6f
 800d38e:	4618      	mov	r0, r3
 800d390:	f7fc fc6b 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
    buttonWithIcon1_1.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_50_MEDIUM_ROUNDED_PRESSED_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_NAVIGATION_ARROW_DOWNWARD_50_50_E8F6FB_SVG_ID), touchgfx::Bitmap(BITMAP_ICON_THEME_IMAGES_ACTION_DONE_50_50_E8F6FB_SVG_ID));
 800d394:	697b      	ldr	r3, [r7, #20]
 800d396:	f503 74da 	add.w	r4, r3, #436	@ 0x1b4
 800d39a:	f107 0354 	add.w	r3, r7, #84	@ 0x54
 800d39e:	2100      	movs	r1, #0
 800d3a0:	4618      	mov	r0, r3
 800d3a2:	f7fc fb99 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d3a6:	f107 0358 	add.w	r3, r7, #88	@ 0x58
 800d3aa:	2101      	movs	r1, #1
 800d3ac:	4618      	mov	r0, r3
 800d3ae:	f7fc fb93 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d3b2:	f107 035c 	add.w	r3, r7, #92	@ 0x5c
 800d3b6:	2105      	movs	r1, #5
 800d3b8:	4618      	mov	r0, r3
 800d3ba:	f7fc fb8d 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d3be:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d3c2:	2104      	movs	r1, #4
 800d3c4:	4618      	mov	r0, r3
 800d3c6:	f7fc fb87 	bl	8009ad8 <_ZN8touchgfx6BitmapC1Et>
 800d3ca:	f107 005c 	add.w	r0, r7, #92	@ 0x5c
 800d3ce:	f107 0258 	add.w	r2, r7, #88	@ 0x58
 800d3d2:	f107 0154 	add.w	r1, r7, #84	@ 0x54
 800d3d6:	f107 0360 	add.w	r3, r7, #96	@ 0x60
 800d3da:	9300      	str	r3, [sp, #0]
 800d3dc:	4603      	mov	r3, r0
 800d3de:	4620      	mov	r0, r4
 800d3e0:	f005 f996 	bl	8012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>
    buttonWithIcon1_1.setIconXY(95, 0);
 800d3e4:	697b      	ldr	r3, [r7, #20]
 800d3e6:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d3ea:	2200      	movs	r2, #0
 800d3ec:	215f      	movs	r1, #95	@ 0x5f
 800d3ee:	4618      	mov	r0, r3
 800d3f0:	f7fd fa3e 	bl	800a870 <_ZN8touchgfx14ButtonWithIcon9setIconXYEss>
    buttonWithIcon1_1.setAction(buttonCallback);
 800d3f4:	697b      	ldr	r3, [r7, #20]
 800d3f6:	f503 72da 	add.w	r2, r3, #436	@ 0x1b4
 800d3fa:	697b      	ldr	r3, [r7, #20]
 800d3fc:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d400:	4619      	mov	r1, r3
 800d402:	4610      	mov	r0, r2
 800d404:	f7fd f9e5 	bl	800a7d2 <_ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vvEE>
    add(buttonWithIcon1_1);
 800d408:	697a      	ldr	r2, [r7, #20]
 800d40a:	697b      	ldr	r3, [r7, #20]
 800d40c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d410:	4619      	mov	r1, r3
 800d412:	4610      	mov	r0, r2
 800d414:	f7fc fdcc 	bl	8009fb0 <_ZN8touchgfx6Screen3addERNS_8DrawableE>
}
 800d418:	697b      	ldr	r3, [r7, #20]
 800d41a:	4618      	mov	r0, r3
 800d41c:	37b0      	adds	r7, #176	@ 0xb0
 800d41e:	46bd      	mov	sp, r7
 800d420:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0800d424 <_ZN26temperature_screenViewBaseD1Ev>:

temperature_screenViewBase::~temperature_screenViewBase()
 800d424:	b580      	push	{r7, lr}
 800d426:	b082      	sub	sp, #8
 800d428:	af00      	add	r7, sp, #0
 800d42a:	6078      	str	r0, [r7, #4]
 800d42c:	4a1c      	ldr	r2, [pc, #112]	@ (800d4a0 <_ZN26temperature_screenViewBaseD1Ev+0x7c>)
 800d42e:	687b      	ldr	r3, [r7, #4]
 800d430:	601a      	str	r2, [r3, #0]
{

}
 800d432:	687b      	ldr	r3, [r7, #4]
 800d434:	f503 7305 	add.w	r3, r3, #532	@ 0x214
 800d438:	4618      	mov	r0, r3
 800d43a:	f000 f8db 	bl	800d5f4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d43e:	687b      	ldr	r3, [r7, #4]
 800d440:	f503 7301 	add.w	r3, r3, #516	@ 0x204
 800d444:	4618      	mov	r0, r3
 800d446:	f000 f8f7 	bl	800d638 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d44a:	687b      	ldr	r3, [r7, #4]
 800d44c:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d450:	4618      	mov	r0, r3
 800d452:	f7fe f825 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d456:	687b      	ldr	r3, [r7, #4]
 800d458:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d45c:	4618      	mov	r0, r3
 800d45e:	f7fe f81f 	bl	800b4a0 <_ZN8touchgfx14ButtonWithIconD1Ev>
 800d462:	687b      	ldr	r3, [r7, #4]
 800d464:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800d468:	4618      	mov	r0, r3
 800d46a:	f7fd ffd5 	bl	800b418 <_ZN8touchgfx23TextAreaWithOneWildcardD1Ev>
 800d46e:	687b      	ldr	r3, [r7, #4]
 800d470:	33b4      	adds	r3, #180	@ 0xb4
 800d472:	4618      	mov	r0, r3
 800d474:	f7fd ffa8 	bl	800b3c8 <_ZN8touchgfx24BoxWithBorderButtonStyleINS_18ClickButtonTriggerEED1Ev>
 800d478:	687b      	ldr	r3, [r7, #4]
 800d47a:	336c      	adds	r3, #108	@ 0x6c
 800d47c:	4618      	mov	r0, r3
 800d47e:	f7fd f8f7 	bl	800a670 <_ZN8touchgfx8TextAreaD1Ev>
 800d482:	687b      	ldr	r3, [r7, #4]
 800d484:	3340      	adds	r3, #64	@ 0x40
 800d486:	4618      	mov	r0, r3
 800d488:	f7fd f828 	bl	800a4dc <_ZN8touchgfx3BoxD1Ev>
 800d48c:	687b      	ldr	r3, [r7, #4]
 800d48e:	4618      	mov	r0, r3
 800d490:	f7ff fcf8 	bl	800ce84 <_ZN8touchgfx4ViewI27temperature_screenPresenterED1Ev>
 800d494:	687b      	ldr	r3, [r7, #4]
 800d496:	4618      	mov	r0, r3
 800d498:	3708      	adds	r7, #8
 800d49a:	46bd      	mov	sp, r7
 800d49c:	bd80      	pop	{r7, pc}
 800d49e:	bf00      	nop
 800d4a0:	080288a0 	.word	0x080288a0

0800d4a4 <_ZN26temperature_screenViewBaseD0Ev>:
temperature_screenViewBase::~temperature_screenViewBase()
 800d4a4:	b580      	push	{r7, lr}
 800d4a6:	b082      	sub	sp, #8
 800d4a8:	af00      	add	r7, sp, #0
 800d4aa:	6078      	str	r0, [r7, #4]
}
 800d4ac:	6878      	ldr	r0, [r7, #4]
 800d4ae:	f7ff ffb9 	bl	800d424 <_ZN26temperature_screenViewBaseD1Ev>
 800d4b2:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800d4b6:	6878      	ldr	r0, [r7, #4]
 800d4b8:	f018 fc1b 	bl	8025cf2 <_ZdlPvj>
 800d4bc:	687b      	ldr	r3, [r7, #4]
 800d4be:	4618      	mov	r0, r3
 800d4c0:	3708      	adds	r7, #8
 800d4c2:	46bd      	mov	sp, r7
 800d4c4:	bd80      	pop	{r7, pc}

0800d4c6 <_ZN26temperature_screenViewBase11setupScreenEv>:

void temperature_screenViewBase::setupScreen()
{
 800d4c6:	b480      	push	{r7}
 800d4c8:	b083      	sub	sp, #12
 800d4ca:	af00      	add	r7, sp, #0
 800d4cc:	6078      	str	r0, [r7, #4]

}
 800d4ce:	bf00      	nop
 800d4d0:	370c      	adds	r7, #12
 800d4d2:	46bd      	mov	sp, r7
 800d4d4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d4d8:	4770      	bx	lr

0800d4da <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE>:

void temperature_screenViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
 800d4da:	b580      	push	{r7, lr}
 800d4dc:	b082      	sub	sp, #8
 800d4de:	af00      	add	r7, sp, #0
 800d4e0:	6078      	str	r0, [r7, #4]
 800d4e2:	6039      	str	r1, [r7, #0]
    if (&src == &flexButton1)
 800d4e4:	687b      	ldr	r3, [r7, #4]
 800d4e6:	33b4      	adds	r3, #180	@ 0xb4
 800d4e8:	683a      	ldr	r2, [r7, #0]
 800d4ea:	429a      	cmp	r2, r3
 800d4ec:	d106      	bne.n	800d4fc <_ZN26temperature_screenViewBase25flexButtonCallbackHandlerERKN8touchgfx23AbstractButtonContainerE+0x22>
    {
        //Interaction2
        //When flexButton1 clicked change screen to Main
        //Go to Main with no screen transition
        application().gotoMainScreenNoTransition();
 800d4ee:	6878      	ldr	r0, [r7, #4]
 800d4f0:	f7ff fcbc 	bl	800ce6c <_ZN26temperature_screenViewBase11applicationEv>
 800d4f4:	4603      	mov	r3, r0
 800d4f6:	4618      	mov	r0, r3
 800d4f8:	f7fb fc22 	bl	8008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
}
 800d4fc:	bf00      	nop
 800d4fe:	3708      	adds	r7, #8
 800d500:	46bd      	mov	sp, r7
 800d502:	bd80      	pop	{r7, pc}

0800d504 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE>:

void temperature_screenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
 800d504:	b580      	push	{r7, lr}
 800d506:	b082      	sub	sp, #8
 800d508:	af00      	add	r7, sp, #0
 800d50a:	6078      	str	r0, [r7, #4]
 800d50c:	6039      	str	r1, [r7, #0]
    if (&src == &buttonWithIcon1)
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	f503 73bc 	add.w	r3, r3, #376	@ 0x178
 800d514:	683a      	ldr	r2, [r7, #0]
 800d516:	429a      	cmp	r2, r3
 800d518:	d105      	bne.n	800d526 <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x22>
    {
        //Interaction3
        //When buttonWithIcon1 clicked call virtual function
        //Call increase
        increase();
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	681b      	ldr	r3, [r3, #0]
 800d51e:	332c      	adds	r3, #44	@ 0x2c
 800d520:	681b      	ldr	r3, [r3, #0]
 800d522:	6878      	ldr	r0, [r7, #4]
 800d524:	4798      	blx	r3
    }
    if (&src == &buttonWithIcon1_1)
 800d526:	687b      	ldr	r3, [r7, #4]
 800d528:	f503 73da 	add.w	r3, r3, #436	@ 0x1b4
 800d52c:	683a      	ldr	r2, [r7, #0]
 800d52e:	429a      	cmp	r2, r3
 800d530:	d105      	bne.n	800d53e <_ZN26temperature_screenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE+0x3a>
    {
        //Interaction4
        //When buttonWithIcon1_1 clicked call virtual function
        //Call decrease
        decrease();
 800d532:	687b      	ldr	r3, [r7, #4]
 800d534:	681b      	ldr	r3, [r3, #0]
 800d536:	3330      	adds	r3, #48	@ 0x30
 800d538:	681b      	ldr	r3, [r3, #0]
 800d53a:	6878      	ldr	r0, [r7, #4]
 800d53c:	4798      	blx	r3
    }
}
 800d53e:	bf00      	nop
 800d540:	3708      	adds	r7, #8
 800d542:	46bd      	mov	sp, r7
 800d544:	bd80      	pop	{r7, pc}
	...

0800d548 <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev>:
    View()
 800d548:	b580      	push	{r7, lr}
 800d54a:	b082      	sub	sp, #8
 800d54c:	af00      	add	r7, sp, #0
 800d54e:	6078      	str	r0, [r7, #4]
        : presenter(0)
 800d550:	687b      	ldr	r3, [r7, #4]
 800d552:	4618      	mov	r0, r3
 800d554:	f008 f98a 	bl	801586c <_ZN8touchgfx6ScreenC1Ev>
 800d558:	4a05      	ldr	r2, [pc, #20]	@ (800d570 <_ZN8touchgfx4ViewI27temperature_screenPresenterEC1Ev+0x28>)
 800d55a:	687b      	ldr	r3, [r7, #4]
 800d55c:	601a      	str	r2, [r3, #0]
 800d55e:	687b      	ldr	r3, [r7, #4]
 800d560:	2200      	movs	r2, #0
 800d562:	63da      	str	r2, [r3, #60]	@ 0x3c
    }
 800d564:	687b      	ldr	r3, [r7, #4]
 800d566:	4618      	mov	r0, r3
 800d568:	3708      	adds	r7, #8
 800d56a:	46bd      	mov	sp, r7
 800d56c:	bd80      	pop	{r7, pc}
 800d56e:	bf00      	nop
 800d570:	0802890c 	.word	0x0802890c

0800d574 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d574:	b580      	push	{r7, lr}
 800d576:	b084      	sub	sp, #16
 800d578:	af00      	add	r7, sp, #0
 800d57a:	60f8      	str	r0, [r7, #12]
 800d57c:	60b9      	str	r1, [r7, #8]
 800d57e:	4639      	mov	r1, r7
 800d580:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d584:	68fb      	ldr	r3, [r7, #12]
 800d586:	4618      	mov	r0, r3
 800d588:	f7fd fdb8 	bl	800b0fc <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvEC1Ev>
 800d58c:	4a08      	ldr	r2, [pc, #32]	@ (800d5b0 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d58e:	68fb      	ldr	r3, [r7, #12]
 800d590:	601a      	str	r2, [r3, #0]
 800d592:	68fb      	ldr	r3, [r7, #12]
 800d594:	68ba      	ldr	r2, [r7, #8]
 800d596:	605a      	str	r2, [r3, #4]
 800d598:	68fb      	ldr	r3, [r7, #12]
 800d59a:	3308      	adds	r3, #8
 800d59c:	463a      	mov	r2, r7
 800d59e:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d5a2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d5a6:	68fb      	ldr	r3, [r7, #12]
 800d5a8:	4618      	mov	r0, r3
 800d5aa:	3710      	adds	r7, #16
 800d5ac:	46bd      	mov	sp, r7
 800d5ae:	bd80      	pop	{r7, pc}
 800d5b0:	080288f4 	.word	0x080288f4

0800d5b4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E>:
    Callback(dest_type* pObject, void (dest_type::*pmemfun_1)(T1))
 800d5b4:	b580      	push	{r7, lr}
 800d5b6:	b084      	sub	sp, #16
 800d5b8:	af00      	add	r7, sp, #0
 800d5ba:	60f8      	str	r0, [r7, #12]
 800d5bc:	60b9      	str	r1, [r7, #8]
 800d5be:	4639      	mov	r1, r7
 800d5c0:	e881 000c 	stmia.w	r1, {r2, r3}
        : pobject(pObject), pmemfun(pmemfun_1)
 800d5c4:	68fb      	ldr	r3, [r7, #12]
 800d5c6:	4618      	mov	r0, r3
 800d5c8:	f7fd fdc8 	bl	800b15c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvEC1Ev>
 800d5cc:	4a08      	ldr	r2, [pc, #32]	@ (800d5f0 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvEC1EPS1_MS1_FvS4_E+0x3c>)
 800d5ce:	68fb      	ldr	r3, [r7, #12]
 800d5d0:	601a      	str	r2, [r3, #0]
 800d5d2:	68fb      	ldr	r3, [r7, #12]
 800d5d4:	68ba      	ldr	r2, [r7, #8]
 800d5d6:	605a      	str	r2, [r3, #4]
 800d5d8:	68fb      	ldr	r3, [r7, #12]
 800d5da:	3308      	adds	r3, #8
 800d5dc:	463a      	mov	r2, r7
 800d5de:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d5e2:	e883 0003 	stmia.w	r3, {r0, r1}
    }
 800d5e6:	68fb      	ldr	r3, [r7, #12]
 800d5e8:	4618      	mov	r0, r3
 800d5ea:	3710      	adds	r7, #16
 800d5ec:	46bd      	mov	sp, r7
 800d5ee:	bd80      	pop	{r7, pc}
 800d5f0:	080288dc 	.word	0x080288dc

0800d5f4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>:
struct Callback<dest_type, T1, void, void> : public GenericCallback<T1>
 800d5f4:	b580      	push	{r7, lr}
 800d5f6:	b082      	sub	sp, #8
 800d5f8:	af00      	add	r7, sp, #0
 800d5fa:	6078      	str	r0, [r7, #4]
 800d5fc:	4a05      	ldr	r2, [pc, #20]	@ (800d614 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev+0x20>)
 800d5fe:	687b      	ldr	r3, [r7, #4]
 800d600:	601a      	str	r2, [r3, #0]
 800d602:	687b      	ldr	r3, [r7, #4]
 800d604:	4618      	mov	r0, r3
 800d606:	f7fd fe49 	bl	800b29c <_ZN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvvED1Ev>
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	4618      	mov	r0, r3
 800d60e:	3708      	adds	r7, #8
 800d610:	46bd      	mov	sp, r7
 800d612:	bd80      	pop	{r7, pc}
 800d614:	080288dc 	.word	0x080288dc

0800d618 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED0Ev>:
 800d618:	b580      	push	{r7, lr}
 800d61a:	b082      	sub	sp, #8
 800d61c:	af00      	add	r7, sp, #0
 800d61e:	6078      	str	r0, [r7, #4]
 800d620:	6878      	ldr	r0, [r7, #4]
 800d622:	f7ff ffe7 	bl	800d5f4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvED1Ev>
 800d626:	2110      	movs	r1, #16
 800d628:	6878      	ldr	r0, [r7, #4]
 800d62a:	f018 fb62 	bl	8025cf2 <_ZdlPvj>
 800d62e:	687b      	ldr	r3, [r7, #4]
 800d630:	4618      	mov	r0, r3
 800d632:	3708      	adds	r7, #8
 800d634:	46bd      	mov	sp, r7
 800d636:	bd80      	pop	{r7, pc}

0800d638 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>:
 800d638:	b580      	push	{r7, lr}
 800d63a:	b082      	sub	sp, #8
 800d63c:	af00      	add	r7, sp, #0
 800d63e:	6078      	str	r0, [r7, #4]
 800d640:	4a05      	ldr	r2, [pc, #20]	@ (800d658 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev+0x20>)
 800d642:	687b      	ldr	r3, [r7, #4]
 800d644:	601a      	str	r2, [r3, #0]
 800d646:	687b      	ldr	r3, [r7, #4]
 800d648:	4618      	mov	r0, r3
 800d64a:	f7fd fe07 	bl	800b25c <_ZN8touchgfx15GenericCallbackIRKNS_23AbstractButtonContainerEvvED1Ev>
 800d64e:	687b      	ldr	r3, [r7, #4]
 800d650:	4618      	mov	r0, r3
 800d652:	3708      	adds	r7, #8
 800d654:	46bd      	mov	sp, r7
 800d656:	bd80      	pop	{r7, pc}
 800d658:	080288f4 	.word	0x080288f4

0800d65c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED0Ev>:
 800d65c:	b580      	push	{r7, lr}
 800d65e:	b082      	sub	sp, #8
 800d660:	af00      	add	r7, sp, #0
 800d662:	6078      	str	r0, [r7, #4]
 800d664:	6878      	ldr	r0, [r7, #4]
 800d666:	f7ff ffe7 	bl	800d638 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvED1Ev>
 800d66a:	2110      	movs	r1, #16
 800d66c:	6878      	ldr	r0, [r7, #4]
 800d66e:	f018 fb40 	bl	8025cf2 <_ZdlPvj>
 800d672:	687b      	ldr	r3, [r7, #4]
 800d674:	4618      	mov	r0, r3
 800d676:	3708      	adds	r7, #8
 800d678:	46bd      	mov	sp, r7
 800d67a:	bd80      	pop	{r7, pc}

0800d67c <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d67c:	b580      	push	{r7, lr}
 800d67e:	b082      	sub	sp, #8
 800d680:	af00      	add	r7, sp, #0
 800d682:	6078      	str	r0, [r7, #4]
 800d684:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d686:	687b      	ldr	r3, [r7, #4]
 800d688:	685b      	ldr	r3, [r3, #4]
 800d68a:	687a      	ldr	r2, [r7, #4]
 800d68c:	68d2      	ldr	r2, [r2, #12]
 800d68e:	1052      	asrs	r2, r2, #1
 800d690:	1898      	adds	r0, r3, r2
 800d692:	687b      	ldr	r3, [r7, #4]
 800d694:	68db      	ldr	r3, [r3, #12]
 800d696:	f003 0301 	and.w	r3, r3, #1
 800d69a:	2b00      	cmp	r3, #0
 800d69c:	d102      	bne.n	800d6a4 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x28>
 800d69e:	687b      	ldr	r3, [r7, #4]
 800d6a0:	689b      	ldr	r3, [r3, #8]
 800d6a2:	e00a      	b.n	800d6ba <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7executeES4_+0x3e>
 800d6a4:	687b      	ldr	r3, [r7, #4]
 800d6a6:	685b      	ldr	r3, [r3, #4]
 800d6a8:	687a      	ldr	r2, [r7, #4]
 800d6aa:	68d2      	ldr	r2, [r2, #12]
 800d6ac:	1052      	asrs	r2, r2, #1
 800d6ae:	4413      	add	r3, r2
 800d6b0:	681b      	ldr	r3, [r3, #0]
 800d6b2:	687a      	ldr	r2, [r7, #4]
 800d6b4:	6892      	ldr	r2, [r2, #8]
 800d6b6:	4413      	add	r3, r2
 800d6b8:	681b      	ldr	r3, [r3, #0]
 800d6ba:	6839      	ldr	r1, [r7, #0]
 800d6bc:	4798      	blx	r3
    }
 800d6be:	bf00      	nop
 800d6c0:	3708      	adds	r7, #8
 800d6c2:	46bd      	mov	sp, r7
 800d6c4:	bd80      	pop	{r7, pc}

0800d6c6 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv>:
    virtual bool isValid() const
 800d6c6:	b480      	push	{r7}
 800d6c8:	b083      	sub	sp, #12
 800d6ca:	af00      	add	r7, sp, #0
 800d6cc:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d6ce:	687b      	ldr	r3, [r7, #4]
 800d6d0:	685b      	ldr	r3, [r3, #4]
 800d6d2:	2b00      	cmp	r3, #0
 800d6d4:	d010      	beq.n	800d6f8 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d6d6:	687b      	ldr	r3, [r7, #4]
 800d6d8:	689b      	ldr	r3, [r3, #8]
 800d6da:	2b00      	cmp	r3, #0
 800d6dc:	d107      	bne.n	800d6ee <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d6de:	687b      	ldr	r3, [r7, #4]
 800d6e0:	68db      	ldr	r3, [r3, #12]
 800d6e2:	f003 0301 	and.w	r3, r3, #1
 800d6e6:	2b00      	cmp	r3, #0
 800d6e8:	d101      	bne.n	800d6ee <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x28>
 800d6ea:	2301      	movs	r3, #1
 800d6ec:	e000      	b.n	800d6f0 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x2a>
 800d6ee:	2300      	movs	r3, #0
 800d6f0:	2b01      	cmp	r3, #1
 800d6f2:	d001      	beq.n	800d6f8 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x32>
 800d6f4:	2301      	movs	r3, #1
 800d6f6:	e000      	b.n	800d6fa <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_14AbstractButtonEvvE7isValidEv+0x34>
 800d6f8:	2300      	movs	r3, #0
    }
 800d6fa:	4618      	mov	r0, r3
 800d6fc:	370c      	adds	r7, #12
 800d6fe:	46bd      	mov	sp, r7
 800d700:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d704:	4770      	bx	lr

0800d706 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_>:
    virtual void execute(T1 t1)
 800d706:	b580      	push	{r7, lr}
 800d708:	b082      	sub	sp, #8
 800d70a:	af00      	add	r7, sp, #0
 800d70c:	6078      	str	r0, [r7, #4]
 800d70e:	6039      	str	r1, [r7, #0]
        (pobject->*pmemfun)(t1);
 800d710:	687b      	ldr	r3, [r7, #4]
 800d712:	685b      	ldr	r3, [r3, #4]
 800d714:	687a      	ldr	r2, [r7, #4]
 800d716:	68d2      	ldr	r2, [r2, #12]
 800d718:	1052      	asrs	r2, r2, #1
 800d71a:	1898      	adds	r0, r3, r2
 800d71c:	687b      	ldr	r3, [r7, #4]
 800d71e:	68db      	ldr	r3, [r3, #12]
 800d720:	f003 0301 	and.w	r3, r3, #1
 800d724:	2b00      	cmp	r3, #0
 800d726:	d102      	bne.n	800d72e <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x28>
 800d728:	687b      	ldr	r3, [r7, #4]
 800d72a:	689b      	ldr	r3, [r3, #8]
 800d72c:	e00a      	b.n	800d744 <_ZN8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7executeES4_+0x3e>
 800d72e:	687b      	ldr	r3, [r7, #4]
 800d730:	685b      	ldr	r3, [r3, #4]
 800d732:	687a      	ldr	r2, [r7, #4]
 800d734:	68d2      	ldr	r2, [r2, #12]
 800d736:	1052      	asrs	r2, r2, #1
 800d738:	4413      	add	r3, r2
 800d73a:	681b      	ldr	r3, [r3, #0]
 800d73c:	687a      	ldr	r2, [r7, #4]
 800d73e:	6892      	ldr	r2, [r2, #8]
 800d740:	4413      	add	r3, r2
 800d742:	681b      	ldr	r3, [r3, #0]
 800d744:	6839      	ldr	r1, [r7, #0]
 800d746:	4798      	blx	r3
    }
 800d748:	bf00      	nop
 800d74a:	3708      	adds	r7, #8
 800d74c:	46bd      	mov	sp, r7
 800d74e:	bd80      	pop	{r7, pc}

0800d750 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv>:
    virtual bool isValid() const
 800d750:	b480      	push	{r7}
 800d752:	b083      	sub	sp, #12
 800d754:	af00      	add	r7, sp, #0
 800d756:	6078      	str	r0, [r7, #4]
        return (pobject != 0) && (pmemfun != 0);
 800d758:	687b      	ldr	r3, [r7, #4]
 800d75a:	685b      	ldr	r3, [r3, #4]
 800d75c:	2b00      	cmp	r3, #0
 800d75e:	d010      	beq.n	800d782 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d760:	687b      	ldr	r3, [r7, #4]
 800d762:	689b      	ldr	r3, [r3, #8]
 800d764:	2b00      	cmp	r3, #0
 800d766:	d107      	bne.n	800d778 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d768:	687b      	ldr	r3, [r7, #4]
 800d76a:	68db      	ldr	r3, [r3, #12]
 800d76c:	f003 0301 	and.w	r3, r3, #1
 800d770:	2b00      	cmp	r3, #0
 800d772:	d101      	bne.n	800d778 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x28>
 800d774:	2301      	movs	r3, #1
 800d776:	e000      	b.n	800d77a <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x2a>
 800d778:	2300      	movs	r3, #0
 800d77a:	2b01      	cmp	r3, #1
 800d77c:	d001      	beq.n	800d782 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x32>
 800d77e:	2301      	movs	r3, #1
 800d780:	e000      	b.n	800d784 <_ZNK8touchgfx8CallbackI26temperature_screenViewBaseRKNS_23AbstractButtonContainerEvvE7isValidEv+0x34>
 800d782:	2300      	movs	r3, #0
    }
 800d784:	4618      	mov	r0, r3
 800d786:	370c      	adds	r7, #12
 800d788:	46bd      	mov	sp, r7
 800d78a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d78e:	4770      	bx	lr

0800d790 <_ZN14BitmapDatabase11getInstanceEv>:
};

namespace BitmapDatabase
{
const touchgfx::Bitmap::BitmapData* getInstance()
{
 800d790:	b480      	push	{r7}
 800d792:	af00      	add	r7, sp, #0
    return bitmap_database;
 800d794:	4b02      	ldr	r3, [pc, #8]	@ (800d7a0 <_ZN14BitmapDatabase11getInstanceEv+0x10>)
}
 800d796:	4618      	mov	r0, r3
 800d798:	46bd      	mov	sp, r7
 800d79a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d79e:	4770      	bx	lr
 800d7a0:	08028938 	.word	0x08028938

0800d7a4 <_ZN14BitmapDatabase15getInstanceSizeEv>:

uint16_t getInstanceSize()
{
 800d7a4:	b480      	push	{r7}
 800d7a6:	af00      	add	r7, sp, #0
    return (uint16_t)(sizeof(bitmap_database) / sizeof(touchgfx::Bitmap::BitmapData));
 800d7a8:	2307      	movs	r3, #7
}
 800d7aa:	4618      	mov	r0, r3
 800d7ac:	46bd      	mov	sp, r7
 800d7ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7b2:	4770      	bx	lr

0800d7b4 <_ZNK8touchgfx4Font10getKerningEtPKNS_9GlyphNodeE>:
    virtual int8_t getKerning(Unicode::UnicodeChar prevChar, const GlyphNode* glyph) const
 800d7b4:	b480      	push	{r7}
 800d7b6:	b085      	sub	sp, #20
 800d7b8:	af00      	add	r7, sp, #0
 800d7ba:	60f8      	str	r0, [r7, #12]
 800d7bc:	460b      	mov	r3, r1
 800d7be:	607a      	str	r2, [r7, #4]
 800d7c0:	817b      	strh	r3, [r7, #10]
        return 0;
 800d7c2:	2300      	movs	r3, #0
    }
 800d7c4:	4618      	mov	r0, r3
 800d7c6:	3714      	adds	r7, #20
 800d7c8:	46bd      	mov	sp, r7
 800d7ca:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7ce:	4770      	bx	lr

0800d7d0 <_ZNK8touchgfx4Font12getGSUBTableEv>:
    virtual const uint16_t* getGSUBTable() const
 800d7d0:	b480      	push	{r7}
 800d7d2:	b083      	sub	sp, #12
 800d7d4:	af00      	add	r7, sp, #0
 800d7d6:	6078      	str	r0, [r7, #4]
        return 0;
 800d7d8:	2300      	movs	r3, #0
    }
 800d7da:	4618      	mov	r0, r3
 800d7dc:	370c      	adds	r7, #12
 800d7de:	46bd      	mov	sp, r7
 800d7e0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7e4:	4770      	bx	lr

0800d7e6 <_ZNK8touchgfx4Font23getContextualFormsTableEv>:
    virtual const FontContextualFormsTable* getContextualFormsTable() const
 800d7e6:	b480      	push	{r7}
 800d7e8:	b083      	sub	sp, #12
 800d7ea:	af00      	add	r7, sp, #0
 800d7ec:	6078      	str	r0, [r7, #4]
        return 0;
 800d7ee:	2300      	movs	r3, #0
    }
 800d7f0:	4618      	mov	r0, r3
 800d7f2:	370c      	adds	r7, #12
 800d7f4:	46bd      	mov	sp, r7
 800d7f6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d7fa:	4770      	bx	lr

0800d7fc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>:
     *
     * @param  data A reference to the TypedTextData storage array.
     * @param  f    The fonts associated with the array.
     * @param  n    The number of typed texts in the array.
     */
    static void registerTypedTextDatabase(const TypedTextData* data, const Font* const* f, const uint16_t n)
 800d7fc:	b480      	push	{r7}
 800d7fe:	b085      	sub	sp, #20
 800d800:	af00      	add	r7, sp, #0
 800d802:	60f8      	str	r0, [r7, #12]
 800d804:	60b9      	str	r1, [r7, #8]
 800d806:	4613      	mov	r3, r2
 800d808:	80fb      	strh	r3, [r7, #6]
    {
        typedTexts = data;
 800d80a:	4a07      	ldr	r2, [pc, #28]	@ (800d828 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x2c>)
 800d80c:	68fb      	ldr	r3, [r7, #12]
 800d80e:	6013      	str	r3, [r2, #0]
        fonts = f;
 800d810:	4a06      	ldr	r2, [pc, #24]	@ (800d82c <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x30>)
 800d812:	68bb      	ldr	r3, [r7, #8]
 800d814:	6013      	str	r3, [r2, #0]
        numberOfTypedTexts = n;
 800d816:	4a06      	ldr	r2, [pc, #24]	@ (800d830 <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt+0x34>)
 800d818:	88fb      	ldrh	r3, [r7, #6]
 800d81a:	8013      	strh	r3, [r2, #0]
    }
 800d81c:	bf00      	nop
 800d81e:	3714      	adds	r7, #20
 800d820:	46bd      	mov	sp, r7
 800d822:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d826:	4770      	bx	lr
 800d828:	20002fa4 	.word	0x20002fa4
 800d82c:	20002fac 	.word	0x20002fac
 800d830:	20002fa8 	.word	0x20002fa8

0800d834 <_ZNK8touchgfx4Font14getStringWidthEPKtz>:
#include <touchgfx/hal/HAL.hpp>
#include <touchgfx/lcd/LCD.hpp>
#include <texts/TypedTextDatabase.hpp>

uint16_t touchgfx::Font::getStringWidth(const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d834:	b40e      	push	{r1, r2, r3}
 800d836:	b580      	push	{r7, lr}
 800d838:	b085      	sub	sp, #20
 800d83a:	af00      	add	r7, sp, #0
 800d83c:	6078      	str	r0, [r7, #4]
    va_list pArg;
    va_start(pArg, text);
 800d83e:	f107 0320 	add.w	r3, r7, #32
 800d842:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(TEXT_DIRECTION_LTR, text, pArg);
 800d844:	68bb      	ldr	r3, [r7, #8]
 800d846:	69fa      	ldr	r2, [r7, #28]
 800d848:	2100      	movs	r1, #0
 800d84a:	6878      	ldr	r0, [r7, #4]
 800d84c:	f007 fc44 	bl	80150d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d850:	4603      	mov	r3, r0
 800d852:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d854:	89fb      	ldrh	r3, [r7, #14]
}
 800d856:	4618      	mov	r0, r3
 800d858:	3714      	adds	r7, #20
 800d85a:	46bd      	mov	sp, r7
 800d85c:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d860:	b003      	add	sp, #12
 800d862:	4770      	bx	lr

0800d864 <_ZNK8touchgfx4Font14getStringWidthEhPKtz>:

uint16_t touchgfx::Font::getStringWidth(touchgfx::TextDirection textDirection, const touchgfx::Unicode::UnicodeChar* text, ...) const
{
 800d864:	b40c      	push	{r2, r3}
 800d866:	b580      	push	{r7, lr}
 800d868:	b084      	sub	sp, #16
 800d86a:	af00      	add	r7, sp, #0
 800d86c:	6078      	str	r0, [r7, #4]
 800d86e:	460b      	mov	r3, r1
 800d870:	70fb      	strb	r3, [r7, #3]
    va_list pArg;
    va_start(pArg, text);
 800d872:	f107 031c 	add.w	r3, r7, #28
 800d876:	60bb      	str	r3, [r7, #8]
    uint16_t width = getStringWidthLTR(textDirection, text, pArg);
 800d878:	78f9      	ldrb	r1, [r7, #3]
 800d87a:	68bb      	ldr	r3, [r7, #8]
 800d87c:	69ba      	ldr	r2, [r7, #24]
 800d87e:	6878      	ldr	r0, [r7, #4]
 800d880:	f007 fc2a 	bl	80150d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>
 800d884:	4603      	mov	r3, r0
 800d886:	81fb      	strh	r3, [r7, #14]
    va_end(pArg);
    return width;
 800d888:	89fb      	ldrh	r3, [r7, #14]
}
 800d88a:	4618      	mov	r0, r3
 800d88c:	3710      	adds	r7, #16
 800d88e:	46bd      	mov	sp, r7
 800d890:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d894:	b002      	add	sp, #8
 800d896:	4770      	bx	lr

0800d898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>:

touchgfx::Unicode::UnicodeChar touchgfx::TextProvider::getNextLigature(TextDirection direction)
{
 800d898:	b580      	push	{r7, lr}
 800d89a:	b08a      	sub	sp, #40	@ 0x28
 800d89c:	af00      	add	r7, sp, #0
 800d89e:	6078      	str	r0, [r7, #4]
 800d8a0:	460b      	mov	r3, r1
 800d8a2:	70fb      	strb	r3, [r7, #3]
    if (fontGsubTable && nextCharacters.peekChar())
 800d8a4:	687b      	ldr	r3, [r7, #4]
 800d8a6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800d8a8:	2b00      	cmp	r3, #0
 800d8aa:	d016      	beq.n	800d8da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d8ac:	687b      	ldr	r3, [r7, #4]
 800d8ae:	3322      	adds	r3, #34	@ 0x22
 800d8b0:	627b      	str	r3, [r7, #36]	@ 0x24
            return used == size;
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar()
        {
            assert(used > 0);
 800d8b2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d8b4:	8adb      	ldrh	r3, [r3, #22]
 800d8b6:	2b00      	cmp	r3, #0
 800d8b8:	d105      	bne.n	800d8c6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x2e>
 800d8ba:	4b43      	ldr	r3, [pc, #268]	@ (800d9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d8bc:	4a43      	ldr	r2, [pc, #268]	@ (800d9cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d8be:	21c5      	movs	r1, #197	@ 0xc5
 800d8c0:	4843      	ldr	r0, [pc, #268]	@ (800d9d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d8c2:	f018 fac5 	bl	8025e50 <__assert_func>
            return buffer[pos];
 800d8c6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d8c8:	8a9b      	ldrh	r3, [r3, #20]
 800d8ca:	461a      	mov	r2, r3
 800d8cc:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800d8ce:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 800d8d2:	2b00      	cmp	r3, #0
 800d8d4:	d001      	beq.n	800d8da <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x42>
 800d8d6:	2301      	movs	r3, #1
 800d8d8:	e000      	b.n	800d8dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x44>
 800d8da:	2300      	movs	r3, #0
 800d8dc:	2b00      	cmp	r3, #0
 800d8de:	d06a      	beq.n	800d9b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
    {
        substituteGlyphs();
 800d8e0:	6878      	ldr	r0, [r7, #4]
 800d8e2:	f008 fec8 	bl	8016676 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>
        if (nextCharacters.peekChar(1) == 0x093F) // Hindi I-matra
 800d8e6:	687b      	ldr	r3, [r7, #4]
 800d8e8:	3322      	adds	r3, #34	@ 0x22
 800d8ea:	623b      	str	r3, [r7, #32]
 800d8ec:	2301      	movs	r3, #1
 800d8ee:	83fb      	strh	r3, [r7, #30]
        }

        FORCE_INLINE_FUNCTION Unicode::UnicodeChar peekChar(uint16_t offset)
        {
            assert(offset < used);
 800d8f0:	6a3b      	ldr	r3, [r7, #32]
 800d8f2:	8adb      	ldrh	r3, [r3, #22]
 800d8f4:	8bfa      	ldrh	r2, [r7, #30]
 800d8f6:	429a      	cmp	r2, r3
 800d8f8:	d305      	bcc.n	800d906 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x6e>
 800d8fa:	4b36      	ldr	r3, [pc, #216]	@ (800d9d4 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x13c>)
 800d8fc:	4a36      	ldr	r2, [pc, #216]	@ (800d9d8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x140>)
 800d8fe:	21cb      	movs	r1, #203	@ 0xcb
 800d900:	4833      	ldr	r0, [pc, #204]	@ (800d9d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d902:	f018 faa5 	bl	8025e50 <__assert_func>
            const uint16_t index = pos + offset;
 800d906:	6a3b      	ldr	r3, [r7, #32]
 800d908:	8a9a      	ldrh	r2, [r3, #20]
 800d90a:	8bfb      	ldrh	r3, [r7, #30]
 800d90c:	4413      	add	r3, r2
 800d90e:	83bb      	strh	r3, [r7, #28]
            return buffer[index < size ? index : index - size];
 800d910:	8bbb      	ldrh	r3, [r7, #28]
 800d912:	2b09      	cmp	r3, #9
 800d914:	d801      	bhi.n	800d91a <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x82>
 800d916:	8bbb      	ldrh	r3, [r7, #28]
 800d918:	e001      	b.n	800d91e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x86>
 800d91a:	8bbb      	ldrh	r3, [r7, #28]
 800d91c:	3b0a      	subs	r3, #10
 800d91e:	6a3a      	ldr	r2, [r7, #32]
 800d920:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 800d924:	f640 123f 	movw	r2, #2367	@ 0x93f
 800d928:	4293      	cmp	r3, r2
 800d92a:	bf0c      	ite	eq
 800d92c:	2301      	moveq	r3, #1
 800d92e:	2300      	movne	r3, #0
 800d930:	b2db      	uxtb	r3, r3
 800d932:	2b00      	cmp	r3, #0
 800d934:	d03f      	beq.n	800d9b6 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x11e>
        {
            nextCharacters.replaceAt1(nextCharacters.peekChar());
 800d936:	687b      	ldr	r3, [r7, #4]
 800d938:	3322      	adds	r3, #34	@ 0x22
 800d93a:	687a      	ldr	r2, [r7, #4]
 800d93c:	3222      	adds	r2, #34	@ 0x22
 800d93e:	60ba      	str	r2, [r7, #8]
            assert(used > 0);
 800d940:	68ba      	ldr	r2, [r7, #8]
 800d942:	8ad2      	ldrh	r2, [r2, #22]
 800d944:	2a00      	cmp	r2, #0
 800d946:	d105      	bne.n	800d954 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xbc>
 800d948:	4b1f      	ldr	r3, [pc, #124]	@ (800d9c8 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x130>)
 800d94a:	4a20      	ldr	r2, [pc, #128]	@ (800d9cc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x134>)
 800d94c:	21c5      	movs	r1, #197	@ 0xc5
 800d94e:	4820      	ldr	r0, [pc, #128]	@ (800d9d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d950:	f018 fa7e 	bl	8025e50 <__assert_func>
            return buffer[pos];
 800d954:	68ba      	ldr	r2, [r7, #8]
 800d956:	8a92      	ldrh	r2, [r2, #20]
 800d958:	4611      	mov	r1, r2
 800d95a:	68ba      	ldr	r2, [r7, #8]
 800d95c:	f832 2011 	ldrh.w	r2, [r2, r1, lsl #1]
 800d960:	613b      	str	r3, [r7, #16]
 800d962:	4613      	mov	r3, r2
 800d964:	81fb      	strh	r3, [r7, #14]
            buffer[pos] = newChar;
        }

        FORCE_INLINE_FUNCTION void replaceAt1(Unicode::UnicodeChar newChar)
        {
            assert(used > 1);
 800d966:	693b      	ldr	r3, [r7, #16]
 800d968:	8adb      	ldrh	r3, [r3, #22]
 800d96a:	2b01      	cmp	r3, #1
 800d96c:	d806      	bhi.n	800d97c <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xe4>
 800d96e:	4b1b      	ldr	r3, [pc, #108]	@ (800d9dc <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x144>)
 800d970:	4a1b      	ldr	r2, [pc, #108]	@ (800d9e0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x148>)
 800d972:	f44f 718e 	mov.w	r1, #284	@ 0x11c
 800d976:	4816      	ldr	r0, [pc, #88]	@ (800d9d0 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0x138>)
 800d978:	f018 fa6a 	bl	8025e50 <__assert_func>
            const uint16_t index = pos + 1;
 800d97c:	693b      	ldr	r3, [r7, #16]
 800d97e:	8a9b      	ldrh	r3, [r3, #20]
 800d980:	3301      	adds	r3, #1
 800d982:	81bb      	strh	r3, [r7, #12]
            buffer[index < size ? index : 0] = newChar;
 800d984:	89bb      	ldrh	r3, [r7, #12]
 800d986:	2b09      	cmp	r3, #9
 800d988:	d801      	bhi.n	800d98e <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf6>
 800d98a:	89bb      	ldrh	r3, [r7, #12]
 800d98c:	e000      	b.n	800d990 <_ZN8touchgfx12TextProvider15getNextLigatureEh+0xf8>
 800d98e:	2300      	movs	r3, #0
 800d990:	693a      	ldr	r2, [r7, #16]
 800d992:	89f9      	ldrh	r1, [r7, #14]
 800d994:	f822 1013 	strh.w	r1, [r2, r3, lsl #1]
        }
 800d998:	bf00      	nop
            nextCharacters.replaceAt0(0x093F);
 800d99a:	687b      	ldr	r3, [r7, #4]
 800d99c:	3322      	adds	r3, #34	@ 0x22
 800d99e:	61bb      	str	r3, [r7, #24]
 800d9a0:	f640 133f 	movw	r3, #2367	@ 0x93f
 800d9a4:	82fb      	strh	r3, [r7, #22]
            buffer[pos] = newChar;
 800d9a6:	69bb      	ldr	r3, [r7, #24]
 800d9a8:	8a9b      	ldrh	r3, [r3, #20]
 800d9aa:	4619      	mov	r1, r3
 800d9ac:	69bb      	ldr	r3, [r7, #24]
 800d9ae:	8afa      	ldrh	r2, [r7, #22]
 800d9b0:	f823 2011 	strh.w	r2, [r3, r1, lsl #1]
        }
 800d9b4:	bf00      	nop
        }
    }
    return getNextChar();
 800d9b6:	6878      	ldr	r0, [r7, #4]
 800d9b8:	f008 fd60 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 800d9bc:	4603      	mov	r3, r0
}
 800d9be:	4618      	mov	r0, r3
 800d9c0:	3728      	adds	r7, #40	@ 0x28
 800d9c2:	46bd      	mov	sp, r7
 800d9c4:	bd80      	pop	{r7, pc}
 800d9c6:	bf00      	nop
 800d9c8:	08027544 	.word	0x08027544
 800d9cc:	08027550 	.word	0x08027550
 800d9d0:	080275fc 	.word	0x080275fc
 800d9d4:	08027644 	.word	0x08027644
 800d9d8:	08027654 	.word	0x08027654
 800d9dc:	08027728 	.word	0x08027728
 800d9e0:	08027734 	.word	0x08027734

0800d9e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>:

void touchgfx::TextProvider::initializeInternal()
{
 800d9e4:	b580      	push	{r7, lr}
 800d9e6:	b082      	sub	sp, #8
 800d9e8:	af00      	add	r7, sp, #0
 800d9ea:	6078      	str	r0, [r7, #4]
    fillInputBuffer();
 800d9ec:	6878      	ldr	r0, [r7, #4]
 800d9ee:	f008 fd0c 	bl	801640a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
}
 800d9f2:	bf00      	nop
 800d9f4:	3708      	adds	r7, #8
 800d9f6:	46bd      	mov	sp, r7
 800d9f8:	bd80      	pop	{r7, pc}

0800d9fa <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>:

void touchgfx::LCD::drawString(touchgfx::Rect widgetArea, const touchgfx::Rect& invalidatedArea, const touchgfx::LCD::StringVisuals& stringVisuals, const touchgfx::Unicode::UnicodeChar* format, ...)
{
 800d9fa:	b580      	push	{r7, lr}
 800d9fc:	b088      	sub	sp, #32
 800d9fe:	af02      	add	r7, sp, #8
 800da00:	60f8      	str	r0, [r7, #12]
 800da02:	1d38      	adds	r0, r7, #4
 800da04:	e880 0006 	stmia.w	r0, {r1, r2}
 800da08:	603b      	str	r3, [r7, #0]
    va_list pArg;
    va_start(pArg, format);
 800da0a:	f107 0328 	add.w	r3, r7, #40	@ 0x28
 800da0e:	617b      	str	r3, [r7, #20]
    drawStringLTR(widgetArea, invalidatedArea, stringVisuals, format, pArg);
 800da10:	1d39      	adds	r1, r7, #4
 800da12:	697b      	ldr	r3, [r7, #20]
 800da14:	9301      	str	r3, [sp, #4]
 800da16:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800da18:	9300      	str	r3, [sp, #0]
 800da1a:	6a3b      	ldr	r3, [r7, #32]
 800da1c:	683a      	ldr	r2, [r7, #0]
 800da1e:	68f8      	ldr	r0, [r7, #12]
 800da20:	f005 ffb6 	bl	8013990 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>
    va_end(pArg);
}
 800da24:	bf00      	nop
 800da26:	3718      	adds	r7, #24
 800da28:	46bd      	mov	sp, r7
 800da2a:	bd80      	pop	{r7, pc}

0800da2c <_ZN8touchgfx5Texts11setLanguageEt>:
touchgfx::LanguageId touchgfx::Texts::currentLanguage = static_cast<touchgfx::LanguageId>(0);
static const touchgfx::Unicode::UnicodeChar* currentLanguagePtr = 0;
static const uint32_t* currentLanguageIndices = 0;

void touchgfx::Texts::setLanguage(touchgfx::LanguageId id)
{
 800da2c:	b590      	push	{r4, r7, lr}
 800da2e:	b085      	sub	sp, #20
 800da30:	af00      	add	r7, sp, #0
 800da32:	4603      	mov	r3, r0
 800da34:	80fb      	strh	r3, [r7, #6]
    const touchgfx::TypedText::TypedTextData* currentLanguageTypedText = 0;
 800da36:	2300      	movs	r3, #0
 800da38:	60fb      	str	r3, [r7, #12]
    if (id < 1)
 800da3a:	88fb      	ldrh	r3, [r7, #6]
 800da3c:	2b00      	cmp	r3, #0
 800da3e:	d127      	bne.n	800da90 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
    {
        if (languagesArray[id] != 0)
 800da40:	88fb      	ldrh	r3, [r7, #6]
 800da42:	4a1e      	ldr	r2, [pc, #120]	@ (800dabc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800da44:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800da48:	2b00      	cmp	r3, #0
 800da4a:	d016      	beq.n	800da7a <_ZN8touchgfx5Texts11setLanguageEt+0x4e>
        {
            // Dynamic translation is added
            const TranslationHeader* translation = languagesArray[id];
 800da4c:	88fb      	ldrh	r3, [r7, #6]
 800da4e:	4a1b      	ldr	r2, [pc, #108]	@ (800dabc <_ZN8touchgfx5Texts11setLanguageEt+0x90>)
 800da50:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800da54:	60bb      	str	r3, [r7, #8]
            currentLanguagePtr = (const touchgfx::Unicode::UnicodeChar*)(((const uint8_t*)translation) + translation->offset_to_texts);
 800da56:	68bb      	ldr	r3, [r7, #8]
 800da58:	681b      	ldr	r3, [r3, #0]
 800da5a:	68ba      	ldr	r2, [r7, #8]
 800da5c:	4413      	add	r3, r2
 800da5e:	4a18      	ldr	r2, [pc, #96]	@ (800dac0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800da60:	6013      	str	r3, [r2, #0]
            currentLanguageIndices = (const uint32_t*)(((const uint8_t*)translation) + translation->offset_to_indices);
 800da62:	68bb      	ldr	r3, [r7, #8]
 800da64:	685b      	ldr	r3, [r3, #4]
 800da66:	68ba      	ldr	r2, [r7, #8]
 800da68:	4413      	add	r3, r2
 800da6a:	4a16      	ldr	r2, [pc, #88]	@ (800dac4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800da6c:	6013      	str	r3, [r2, #0]
            currentLanguageTypedText = (const touchgfx::TypedText::TypedTextData*)(((const uint8_t*)translation) + translation->offset_to_typedtext);
 800da6e:	68bb      	ldr	r3, [r7, #8]
 800da70:	689b      	ldr	r3, [r3, #8]
 800da72:	68ba      	ldr	r2, [r7, #8]
 800da74:	4413      	add	r3, r2
 800da76:	60fb      	str	r3, [r7, #12]
 800da78:	e00a      	b.n	800da90 <_ZN8touchgfx5Texts11setLanguageEt+0x64>
        }
        else
        {
            // Compiled and linked in languages
            currentLanguagePtr = texts_all_languages;
 800da7a:	4b11      	ldr	r3, [pc, #68]	@ (800dac0 <_ZN8touchgfx5Texts11setLanguageEt+0x94>)
 800da7c:	4a12      	ldr	r2, [pc, #72]	@ (800dac8 <_ZN8touchgfx5Texts11setLanguageEt+0x9c>)
 800da7e:	601a      	str	r2, [r3, #0]
            currentLanguageIndices = staticLanguageIndices[id];
 800da80:	4a12      	ldr	r2, [pc, #72]	@ (800dacc <_ZN8touchgfx5Texts11setLanguageEt+0xa0>)
 800da82:	4b10      	ldr	r3, [pc, #64]	@ (800dac4 <_ZN8touchgfx5Texts11setLanguageEt+0x98>)
 800da84:	601a      	str	r2, [r3, #0]
            currentLanguageTypedText = typedTextDatabaseArray[id];
 800da86:	88fb      	ldrh	r3, [r7, #6]
 800da88:	4a11      	ldr	r2, [pc, #68]	@ (800dad0 <_ZN8touchgfx5Texts11setLanguageEt+0xa4>)
 800da8a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 800da8e:	60fb      	str	r3, [r7, #12]
        }
    }

    if (currentLanguageTypedText)
 800da90:	68fb      	ldr	r3, [r7, #12]
 800da92:	2b00      	cmp	r3, #0
 800da94:	d00d      	beq.n	800dab2 <_ZN8touchgfx5Texts11setLanguageEt+0x86>
    {
        currentLanguage = id;
 800da96:	4a0f      	ldr	r2, [pc, #60]	@ (800dad4 <_ZN8touchgfx5Texts11setLanguageEt+0xa8>)
 800da98:	88fb      	ldrh	r3, [r7, #6]
 800da9a:	8013      	strh	r3, [r2, #0]
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
                                                       TypedTextDatabase::getFonts(), TypedTextDatabase::getInstanceSize());
 800da9c:	f000 f83e 	bl	800db1c <_ZN17TypedTextDatabase8getFontsEv>
 800daa0:	4604      	mov	r4, r0
        touchgfx::TypedText::registerTypedTextDatabase(currentLanguageTypedText,
 800daa2:	f000 f833 	bl	800db0c <_ZN17TypedTextDatabase15getInstanceSizeEv>
 800daa6:	4603      	mov	r3, r0
 800daa8:	461a      	mov	r2, r3
 800daaa:	4621      	mov	r1, r4
 800daac:	68f8      	ldr	r0, [r7, #12]
 800daae:	f7ff fea5 	bl	800d7fc <_ZN8touchgfx9TypedText25registerTypedTextDatabaseEPKNS0_13TypedTextDataEPKPKNS_4FontEt>
    }
}
 800dab2:	bf00      	nop
 800dab4:	3714      	adds	r7, #20
 800dab6:	46bd      	mov	sp, r7
 800dab8:	bd90      	pop	{r4, r7, pc}
 800daba:	bf00      	nop
 800dabc:	20000668 	.word	0x20000668
 800dac0:	20000670 	.word	0x20000670
 800dac4:	20000674 	.word	0x20000674
 800dac8:	08060238 	.word	0x08060238
 800dacc:	0806020c 	.word	0x0806020c
 800dad0:	08060328 	.word	0x08060328
 800dad4:	2000066c 	.word	0x2000066c

0800dad8 <_ZNK8touchgfx5Texts7getTextEt>:
{
    languagesArray[id] = (const TranslationHeader*)translation;
}

const touchgfx::Unicode::UnicodeChar* touchgfx::Texts::getText(TypedTextId id) const
{
 800dad8:	b480      	push	{r7}
 800dada:	b083      	sub	sp, #12
 800dadc:	af00      	add	r7, sp, #0
 800dade:	6078      	str	r0, [r7, #4]
 800dae0:	460b      	mov	r3, r1
 800dae2:	807b      	strh	r3, [r7, #2]
    return &currentLanguagePtr[currentLanguageIndices[id]];
 800dae4:	4b07      	ldr	r3, [pc, #28]	@ (800db04 <_ZNK8touchgfx5Texts7getTextEt+0x2c>)
 800dae6:	681a      	ldr	r2, [r3, #0]
 800dae8:	4b07      	ldr	r3, [pc, #28]	@ (800db08 <_ZNK8touchgfx5Texts7getTextEt+0x30>)
 800daea:	6819      	ldr	r1, [r3, #0]
 800daec:	887b      	ldrh	r3, [r7, #2]
 800daee:	009b      	lsls	r3, r3, #2
 800daf0:	440b      	add	r3, r1
 800daf2:	681b      	ldr	r3, [r3, #0]
 800daf4:	005b      	lsls	r3, r3, #1
 800daf6:	4413      	add	r3, r2
}
 800daf8:	4618      	mov	r0, r3
 800dafa:	370c      	adds	r7, #12
 800dafc:	46bd      	mov	sp, r7
 800dafe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db02:	4770      	bx	lr
 800db04:	20000670 	.word	0x20000670
 800db08:	20000674 	.word	0x20000674

0800db0c <_ZN17TypedTextDatabase15getInstanceSizeEv>:
{
    return typedTextDatabaseArray[id];
}

uint16_t getInstanceSize()
{
 800db0c:	b480      	push	{r7}
 800db0e:	af00      	add	r7, sp, #0
    return sizeof(typedText_database_DEFAULT) / sizeof(touchgfx::TypedText::TypedTextData);
 800db10:	230b      	movs	r3, #11
}
 800db12:	4618      	mov	r0, r3
 800db14:	46bd      	mov	sp, r7
 800db16:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db1a:	4770      	bx	lr

0800db1c <_ZN17TypedTextDatabase8getFontsEv>:

const touchgfx::Font** getFonts()
{
 800db1c:	b480      	push	{r7}
 800db1e:	af00      	add	r7, sp, #0
    return touchgfx_fonts;
 800db20:	4b02      	ldr	r3, [pc, #8]	@ (800db2c <_ZN17TypedTextDatabase8getFontsEv+0x10>)
}
 800db22:	4618      	mov	r0, r3
 800db24:	46bd      	mov	sp, r7
 800db26:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db2a:	4770      	bx	lr
 800db2c:	20000678 	.word	0x20000678

0800db30 <_Z41__static_initialization_and_destruction_0ii>:
    case 1:
        touchgfx_fonts[1] = &(getFont_verdana_30_4bpp());
        break;
    }
}
} // namespace TypedTextDatabase
 800db30:	b580      	push	{r7, lr}
 800db32:	b082      	sub	sp, #8
 800db34:	af00      	add	r7, sp, #0
 800db36:	6078      	str	r0, [r7, #4]
 800db38:	6039      	str	r1, [r7, #0]
 800db3a:	687b      	ldr	r3, [r7, #4]
 800db3c:	2b01      	cmp	r3, #1
 800db3e:	d10e      	bne.n	800db5e <_Z41__static_initialization_and_destruction_0ii+0x2e>
 800db40:	683b      	ldr	r3, [r7, #0]
 800db42:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800db46:	4293      	cmp	r3, r2
 800db48:	d109      	bne.n	800db5e <_Z41__static_initialization_and_destruction_0ii+0x2e>
    &(getFont_Asap_Regular_80_4bpp()),
 800db4a:	f7fa fcb5 	bl	80084b8 <_Z28getFont_Asap_Regular_80_4bppv>
 800db4e:	4603      	mov	r3, r0
};
 800db50:	4a05      	ldr	r2, [pc, #20]	@ (800db68 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800db52:	6013      	str	r3, [r2, #0]
    &(getFont_verdana_30_4bpp())
 800db54:	f7fa fd0a 	bl	800856c <_Z23getFont_verdana_30_4bppv>
 800db58:	4603      	mov	r3, r0
};
 800db5a:	4a03      	ldr	r2, [pc, #12]	@ (800db68 <_Z41__static_initialization_and_destruction_0ii+0x38>)
 800db5c:	6053      	str	r3, [r2, #4]
} // namespace TypedTextDatabase
 800db5e:	bf00      	nop
 800db60:	3708      	adds	r7, #8
 800db62:	46bd      	mov	sp, r7
 800db64:	bd80      	pop	{r7, pc}
 800db66:	bf00      	nop
 800db68:	20000678 	.word	0x20000678

0800db6c <_GLOBAL__sub_I_touchgfx_fonts>:
 800db6c:	b580      	push	{r7, lr}
 800db6e:	af00      	add	r7, sp, #0
 800db70:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800db74:	2001      	movs	r0, #1
 800db76:	f7ff ffdb 	bl	800db30 <_Z41__static_initialization_and_destruction_0ii>
 800db7a:	bd80      	pop	{r7, pc}

0800db7c <_ZN19FrontendApplicationD1Ev>:

class FrontendApplication : public FrontendApplicationBase
{
public:
    FrontendApplication(Model& m, FrontendHeap& heap);
    virtual ~FrontendApplication() { }
 800db7c:	b580      	push	{r7, lr}
 800db7e:	b082      	sub	sp, #8
 800db80:	af00      	add	r7, sp, #0
 800db82:	6078      	str	r0, [r7, #4]
 800db84:	4a05      	ldr	r2, [pc, #20]	@ (800db9c <_ZN19FrontendApplicationD1Ev+0x20>)
 800db86:	687b      	ldr	r3, [r7, #4]
 800db88:	601a      	str	r2, [r3, #0]
 800db8a:	687b      	ldr	r3, [r7, #4]
 800db8c:	4618      	mov	r0, r3
 800db8e:	f7fa ff4d 	bl	8008a2c <_ZN23FrontendApplicationBaseD1Ev>
 800db92:	687b      	ldr	r3, [r7, #4]
 800db94:	4618      	mov	r0, r3
 800db96:	3708      	adds	r7, #8
 800db98:	46bd      	mov	sp, r7
 800db9a:	bd80      	pop	{r7, pc}
 800db9c:	08028a30 	.word	0x08028a30

0800dba0 <_ZN19FrontendApplicationD0Ev>:
 800dba0:	b580      	push	{r7, lr}
 800dba2:	b082      	sub	sp, #8
 800dba4:	af00      	add	r7, sp, #0
 800dba6:	6078      	str	r0, [r7, #4]
 800dba8:	6878      	ldr	r0, [r7, #4]
 800dbaa:	f7ff ffe7 	bl	800db7c <_ZN19FrontendApplicationD1Ev>
 800dbae:	f44f 71ae 	mov.w	r1, #348	@ 0x15c
 800dbb2:	6878      	ldr	r0, [r7, #4]
 800dbb4:	f018 f89d 	bl	8025cf2 <_ZdlPvj>
 800dbb8:	687b      	ldr	r3, [r7, #4]
 800dbba:	4618      	mov	r0, r3
 800dbbc:	3708      	adds	r7, #8
 800dbbe:	46bd      	mov	sp, r7
 800dbc0:	bd80      	pop	{r7, pc}

0800dbc2 <_ZN19FrontendApplication15handleTickEventEv>:

    virtual void handleTickEvent()
 800dbc2:	b580      	push	{r7, lr}
 800dbc4:	b082      	sub	sp, #8
 800dbc6:	af00      	add	r7, sp, #0
 800dbc8:	6078      	str	r0, [r7, #4]
    {
        model.tick();
 800dbca:	687b      	ldr	r3, [r7, #4]
 800dbcc:	f8d3 3158 	ldr.w	r3, [r3, #344]	@ 0x158
 800dbd0:	4618      	mov	r0, r3
 800dbd2:	f000 fccd 	bl	800e570 <_ZN5Model4tickEv>
        FrontendApplicationBase::handleTickEvent();
 800dbd6:	687b      	ldr	r3, [r7, #4]
 800dbd8:	4618      	mov	r0, r3
 800dbda:	f006 fbb3 	bl	8014344 <_ZN8touchgfx11Application15handleTickEventEv>
    }
 800dbde:	bf00      	nop
 800dbe0:	3708      	adds	r7, #8
 800dbe2:	46bd      	mov	sp, r7
 800dbe4:	bd80      	pop	{r7, pc}
	...

0800dbe8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>:
#include <gui/common/FrontendApplication.hpp>

FrontendApplication::FrontendApplication(Model& m, FrontendHeap& heap)
 800dbe8:	b580      	push	{r7, lr}
 800dbea:	b084      	sub	sp, #16
 800dbec:	af00      	add	r7, sp, #0
 800dbee:	60f8      	str	r0, [r7, #12]
 800dbf0:	60b9      	str	r1, [r7, #8]
 800dbf2:	607a      	str	r2, [r7, #4]
    : FrontendApplicationBase(m, heap)
 800dbf4:	68fb      	ldr	r3, [r7, #12]
 800dbf6:	687a      	ldr	r2, [r7, #4]
 800dbf8:	68b9      	ldr	r1, [r7, #8]
 800dbfa:	4618      	mov	r0, r3
 800dbfc:	f7fa ff66 	bl	8008acc <_ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap>
 800dc00:	4a03      	ldr	r2, [pc, #12]	@ (800dc10 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap+0x28>)
 800dc02:	68fb      	ldr	r3, [r7, #12]
 800dc04:	601a      	str	r2, [r3, #0]
{
}
 800dc06:	68fb      	ldr	r3, [r7, #12]
 800dc08:	4618      	mov	r0, r3
 800dc0a:	3710      	adds	r7, #16
 800dc0c:	46bd      	mov	sp, r7
 800dc0e:	bd80      	pop	{r7, pc}
 800dc10:	08028a30 	.word	0x08028a30

0800dc14 <_ZN8touchgfx9Presenter8activateEv>:
     * Place initialization code for the Presenter here.
     *
     * The activate function is called automatically when a screen transition causes this
     * Presenter to become active. Place initialization code for the Presenter here.
     */
    virtual void activate()
 800dc14:	b480      	push	{r7}
 800dc16:	b083      	sub	sp, #12
 800dc18:	af00      	add	r7, sp, #0
 800dc1a:	6078      	str	r0, [r7, #4]
    {
    }
 800dc1c:	bf00      	nop
 800dc1e:	370c      	adds	r7, #12
 800dc20:	46bd      	mov	sp, r7
 800dc22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc26:	4770      	bx	lr

0800dc28 <_ZN8touchgfx9Presenter10deactivateEv>:
     * Place cleanup code for the Presenter here.
     *
     * The deactivate function is called automatically when a screen transition causes this
     * Presenter to become inactive. Place cleanup code for the Presenter here.
     */
    virtual void deactivate()
 800dc28:	b480      	push	{r7}
 800dc2a:	b083      	sub	sp, #12
 800dc2c:	af00      	add	r7, sp, #0
 800dc2e:	6078      	str	r0, [r7, #4]
    {
    }
 800dc30:	bf00      	nop
 800dc32:	370c      	adds	r7, #12
 800dc34:	46bd      	mov	sp, r7
 800dc36:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc3a:	4770      	bx	lr

0800dc3c <_ZN8touchgfx9PresenterD1Ev>:

    /** Finalizes an instance of the Presenter class. */
    virtual ~Presenter()
 800dc3c:	b480      	push	{r7}
 800dc3e:	b083      	sub	sp, #12
 800dc40:	af00      	add	r7, sp, #0
 800dc42:	6078      	str	r0, [r7, #4]
    {
 800dc44:	4a04      	ldr	r2, [pc, #16]	@ (800dc58 <_ZN8touchgfx9PresenterD1Ev+0x1c>)
 800dc46:	687b      	ldr	r3, [r7, #4]
 800dc48:	601a      	str	r2, [r3, #0]
    }
 800dc4a:	687b      	ldr	r3, [r7, #4]
 800dc4c:	4618      	mov	r0, r3
 800dc4e:	370c      	adds	r7, #12
 800dc50:	46bd      	mov	sp, r7
 800dc52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc56:	4770      	bx	lr
 800dc58:	08028af0 	.word	0x08028af0

0800dc5c <_ZN8touchgfx9PresenterD0Ev>:
    virtual ~Presenter()
 800dc5c:	b580      	push	{r7, lr}
 800dc5e:	b082      	sub	sp, #8
 800dc60:	af00      	add	r7, sp, #0
 800dc62:	6078      	str	r0, [r7, #4]
    }
 800dc64:	6878      	ldr	r0, [r7, #4]
 800dc66:	f7ff ffe9 	bl	800dc3c <_ZN8touchgfx9PresenterD1Ev>
 800dc6a:	2104      	movs	r1, #4
 800dc6c:	6878      	ldr	r0, [r7, #4]
 800dc6e:	f018 f840 	bl	8025cf2 <_ZdlPvj>
 800dc72:	687b      	ldr	r3, [r7, #4]
 800dc74:	4618      	mov	r0, r3
 800dc76:	3708      	adds	r7, #8
 800dc78:	46bd      	mov	sp, r7
 800dc7a:	bd80      	pop	{r7, pc}

0800dc7c <_ZN8touchgfx9PresenterC1Ev>:

protected:
    /** Initializes a new instance of the Presenter class. */
    Presenter()
 800dc7c:	b480      	push	{r7}
 800dc7e:	b083      	sub	sp, #12
 800dc80:	af00      	add	r7, sp, #0
 800dc82:	6078      	str	r0, [r7, #4]
    {
 800dc84:	4a04      	ldr	r2, [pc, #16]	@ (800dc98 <_ZN8touchgfx9PresenterC1Ev+0x1c>)
 800dc86:	687b      	ldr	r3, [r7, #4]
 800dc88:	601a      	str	r2, [r3, #0]
    }
 800dc8a:	687b      	ldr	r3, [r7, #4]
 800dc8c:	4618      	mov	r0, r3
 800dc8e:	370c      	adds	r7, #12
 800dc90:	46bd      	mov	sp, r7
 800dc92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dc96:	4770      	bx	lr
 800dc98:	08028af0 	.word	0x08028af0

0800dc9c <_ZN13ModelListenerC1Ev>:
    ModelListener() : model(0) {}
 800dc9c:	b480      	push	{r7}
 800dc9e:	b083      	sub	sp, #12
 800dca0:	af00      	add	r7, sp, #0
 800dca2:	6078      	str	r0, [r7, #4]
 800dca4:	4a06      	ldr	r2, [pc, #24]	@ (800dcc0 <_ZN13ModelListenerC1Ev+0x24>)
 800dca6:	687b      	ldr	r3, [r7, #4]
 800dca8:	601a      	str	r2, [r3, #0]
 800dcaa:	687b      	ldr	r3, [r7, #4]
 800dcac:	2200      	movs	r2, #0
 800dcae:	605a      	str	r2, [r3, #4]
 800dcb0:	687b      	ldr	r3, [r7, #4]
 800dcb2:	4618      	mov	r0, r3
 800dcb4:	370c      	adds	r7, #12
 800dcb6:	46bd      	mov	sp, r7
 800dcb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcbc:	4770      	bx	lr
 800dcbe:	bf00      	nop
 800dcc0:	08028ac8 	.word	0x08028ac8

0800dcc4 <_ZN13ModelListenerD1Ev>:
    virtual ~ModelListener() {}
 800dcc4:	b480      	push	{r7}
 800dcc6:	b083      	sub	sp, #12
 800dcc8:	af00      	add	r7, sp, #0
 800dcca:	6078      	str	r0, [r7, #4]
 800dccc:	4a04      	ldr	r2, [pc, #16]	@ (800dce0 <_ZN13ModelListenerD1Ev+0x1c>)
 800dcce:	687b      	ldr	r3, [r7, #4]
 800dcd0:	601a      	str	r2, [r3, #0]
 800dcd2:	687b      	ldr	r3, [r7, #4]
 800dcd4:	4618      	mov	r0, r3
 800dcd6:	370c      	adds	r7, #12
 800dcd8:	46bd      	mov	sp, r7
 800dcda:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dcde:	4770      	bx	lr
 800dce0:	08028ac8 	.word	0x08028ac8

0800dce4 <_ZN13ModelListenerD0Ev>:
 800dce4:	b580      	push	{r7, lr}
 800dce6:	b082      	sub	sp, #8
 800dce8:	af00      	add	r7, sp, #0
 800dcea:	6078      	str	r0, [r7, #4]
 800dcec:	6878      	ldr	r0, [r7, #4]
 800dcee:	f7ff ffe9 	bl	800dcc4 <_ZN13ModelListenerD1Ev>
 800dcf2:	2108      	movs	r1, #8
 800dcf4:	6878      	ldr	r0, [r7, #4]
 800dcf6:	f017 fffc 	bl	8025cf2 <_ZdlPvj>
 800dcfa:	687b      	ldr	r3, [r7, #4]
 800dcfc:	4618      	mov	r0, r3
 800dcfe:	3708      	adds	r7, #8
 800dd00:	46bd      	mov	sp, r7
 800dd02:	bd80      	pop	{r7, pc}

0800dd04 <_ZN13ModelListener16notifyADCChangedEm>:


    virtual void notifyADCChanged(uint32_t newVal) {}
 800dd04:	b480      	push	{r7}
 800dd06:	b083      	sub	sp, #12
 800dd08:	af00      	add	r7, sp, #0
 800dd0a:	6078      	str	r0, [r7, #4]
 800dd0c:	6039      	str	r1, [r7, #0]
 800dd0e:	bf00      	nop
 800dd10:	370c      	adds	r7, #12
 800dd12:	46bd      	mov	sp, r7
 800dd14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd18:	4770      	bx	lr

0800dd1a <_ZN13ModelListener24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp) {}
 800dd1a:	b480      	push	{r7}
 800dd1c:	b083      	sub	sp, #12
 800dd1e:	af00      	add	r7, sp, #0
 800dd20:	6078      	str	r0, [r7, #4]
 800dd22:	ed87 0a00 	vstr	s0, [r7]
 800dd26:	bf00      	nop
 800dd28:	370c      	adds	r7, #12
 800dd2a:	46bd      	mov	sp, r7
 800dd2c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd30:	4770      	bx	lr

0800dd32 <_ZN13ModelListener21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity) {}
 800dd32:	b480      	push	{r7}
 800dd34:	b083      	sub	sp, #12
 800dd36:	af00      	add	r7, sp, #0
 800dd38:	6078      	str	r0, [r7, #4]
 800dd3a:	ed87 0a00 	vstr	s0, [r7]
 800dd3e:	bf00      	nop
 800dd40:	370c      	adds	r7, #12
 800dd42:	46bd      	mov	sp, r7
 800dd44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd48:	4770      	bx	lr

0800dd4a <_ZN13ModelListener29notifyHumiditySetPointChangedEf>:
    virtual void notifyHumiditySetPointChanged(float setPoint) {}
 800dd4a:	b480      	push	{r7}
 800dd4c:	b083      	sub	sp, #12
 800dd4e:	af00      	add	r7, sp, #0
 800dd50:	6078      	str	r0, [r7, #4]
 800dd52:	ed87 0a00 	vstr	s0, [r7]
 800dd56:	bf00      	nop
 800dd58:	370c      	adds	r7, #12
 800dd5a:	46bd      	mov	sp, r7
 800dd5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd60:	4770      	bx	lr

0800dd62 <_ZN13ModelListener32notifyTemperatureSetPointChangedEf>:
    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
 800dd62:	b480      	push	{r7}
 800dd64:	b083      	sub	sp, #12
 800dd66:	af00      	add	r7, sp, #0
 800dd68:	6078      	str	r0, [r7, #4]
 800dd6a:	ed87 0a00 	vstr	s0, [r7]
 800dd6e:	bf00      	nop
 800dd70:	370c      	adds	r7, #12
 800dd72:	46bd      	mov	sp, r7
 800dd74:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd78:	4770      	bx	lr

0800dd7a <_ZN13ModelListener27notifyLightsSetPointChangedEi>:
    virtual void notifyLightsSetPointChanged(int setPoint) {}
 800dd7a:	b480      	push	{r7}
 800dd7c:	b083      	sub	sp, #12
 800dd7e:	af00      	add	r7, sp, #0
 800dd80:	6078      	str	r0, [r7, #4]
 800dd82:	6039      	str	r1, [r7, #0]
 800dd84:	bf00      	nop
 800dd86:	370c      	adds	r7, #12
 800dd88:	46bd      	mov	sp, r7
 800dd8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dd8e:	4770      	bx	lr

0800dd90 <_ZN24humidity_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~humidity_screenPresenter() {}
 800dd90:	b580      	push	{r7, lr}
 800dd92:	b082      	sub	sp, #8
 800dd94:	af00      	add	r7, sp, #0
 800dd96:	6078      	str	r0, [r7, #4]
 800dd98:	4a09      	ldr	r2, [pc, #36]	@ (800ddc0 <_ZN24humidity_screenPresenterD1Ev+0x30>)
 800dd9a:	687b      	ldr	r3, [r7, #4]
 800dd9c:	601a      	str	r2, [r3, #0]
 800dd9e:	4a09      	ldr	r2, [pc, #36]	@ (800ddc4 <_ZN24humidity_screenPresenterD1Ev+0x34>)
 800dda0:	687b      	ldr	r3, [r7, #4]
 800dda2:	605a      	str	r2, [r3, #4]
 800dda4:	687b      	ldr	r3, [r7, #4]
 800dda6:	3304      	adds	r3, #4
 800dda8:	4618      	mov	r0, r3
 800ddaa:	f7ff ff8b 	bl	800dcc4 <_ZN13ModelListenerD1Ev>
 800ddae:	687b      	ldr	r3, [r7, #4]
 800ddb0:	4618      	mov	r0, r3
 800ddb2:	f7ff ff43 	bl	800dc3c <_ZN8touchgfx9PresenterD1Ev>
 800ddb6:	687b      	ldr	r3, [r7, #4]
 800ddb8:	4618      	mov	r0, r3
 800ddba:	3708      	adds	r7, #8
 800ddbc:	46bd      	mov	sp, r7
 800ddbe:	bd80      	pop	{r7, pc}
 800ddc0:	08028a84 	.word	0x08028a84
 800ddc4:	08028aa0 	.word	0x08028aa0

0800ddc8 <_ZThn4_N24humidity_screenPresenterD1Ev>:
 800ddc8:	f1a0 0004 	sub.w	r0, r0, #4
 800ddcc:	e7e0      	b.n	800dd90 <_ZN24humidity_screenPresenterD1Ev>
 800ddce:	bf00      	nop

0800ddd0 <_ZN24humidity_screenPresenterD0Ev>:
 800ddd0:	b580      	push	{r7, lr}
 800ddd2:	b082      	sub	sp, #8
 800ddd4:	af00      	add	r7, sp, #0
 800ddd6:	6078      	str	r0, [r7, #4]
 800ddd8:	6878      	ldr	r0, [r7, #4]
 800ddda:	f7ff ffd9 	bl	800dd90 <_ZN24humidity_screenPresenterD1Ev>
 800ddde:	2110      	movs	r1, #16
 800dde0:	6878      	ldr	r0, [r7, #4]
 800dde2:	f017 ff86 	bl	8025cf2 <_ZdlPvj>
 800dde6:	687b      	ldr	r3, [r7, #4]
 800dde8:	4618      	mov	r0, r3
 800ddea:	3708      	adds	r7, #8
 800ddec:	46bd      	mov	sp, r7
 800ddee:	bd80      	pop	{r7, pc}

0800ddf0 <_ZThn4_N24humidity_screenPresenterD0Ev>:
 800ddf0:	f1a0 0004 	sub.w	r0, r0, #4
 800ddf4:	e7ec      	b.n	800ddd0 <_ZN24humidity_screenPresenterD0Ev>
	...

0800ddf8 <_ZN24humidity_screenPresenterC1ER19humidity_screenView>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>
#include <gui/humidity_screen_screen/humidity_screenPresenter.hpp>

humidity_screenPresenter::humidity_screenPresenter(humidity_screenView& v)
 800ddf8:	b580      	push	{r7, lr}
 800ddfa:	b082      	sub	sp, #8
 800ddfc:	af00      	add	r7, sp, #0
 800ddfe:	6078      	str	r0, [r7, #4]
 800de00:	6039      	str	r1, [r7, #0]
    : view(v)
 800de02:	687b      	ldr	r3, [r7, #4]
 800de04:	4618      	mov	r0, r3
 800de06:	f7ff ff39 	bl	800dc7c <_ZN8touchgfx9PresenterC1Ev>
 800de0a:	687b      	ldr	r3, [r7, #4]
 800de0c:	3304      	adds	r3, #4
 800de0e:	4618      	mov	r0, r3
 800de10:	f7ff ff44 	bl	800dc9c <_ZN13ModelListenerC1Ev>
 800de14:	4a06      	ldr	r2, [pc, #24]	@ (800de30 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x38>)
 800de16:	687b      	ldr	r3, [r7, #4]
 800de18:	601a      	str	r2, [r3, #0]
 800de1a:	4a06      	ldr	r2, [pc, #24]	@ (800de34 <_ZN24humidity_screenPresenterC1ER19humidity_screenView+0x3c>)
 800de1c:	687b      	ldr	r3, [r7, #4]
 800de1e:	605a      	str	r2, [r3, #4]
 800de20:	687b      	ldr	r3, [r7, #4]
 800de22:	683a      	ldr	r2, [r7, #0]
 800de24:	60da      	str	r2, [r3, #12]
{

}
 800de26:	687b      	ldr	r3, [r7, #4]
 800de28:	4618      	mov	r0, r3
 800de2a:	3708      	adds	r7, #8
 800de2c:	46bd      	mov	sp, r7
 800de2e:	bd80      	pop	{r7, pc}
 800de30:	08028a84 	.word	0x08028a84
 800de34:	08028aa0 	.word	0x08028aa0

0800de38 <_ZN24humidity_screenPresenter8activateEv>:

void humidity_screenPresenter::activate()
{
 800de38:	b480      	push	{r7}
 800de3a:	b083      	sub	sp, #12
 800de3c:	af00      	add	r7, sp, #0
 800de3e:	6078      	str	r0, [r7, #4]

}
 800de40:	bf00      	nop
 800de42:	370c      	adds	r7, #12
 800de44:	46bd      	mov	sp, r7
 800de46:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de4a:	4770      	bx	lr

0800de4c <_ZN24humidity_screenPresenter10deactivateEv>:

void humidity_screenPresenter::deactivate()
{
 800de4c:	b480      	push	{r7}
 800de4e:	b083      	sub	sp, #12
 800de50:	af00      	add	r7, sp, #0
 800de52:	6078      	str	r0, [r7, #4]

}
 800de54:	bf00      	nop
 800de56:	370c      	adds	r7, #12
 800de58:	46bd      	mov	sp, r7
 800de5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de5e:	4770      	bx	lr

0800de60 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

void humidity_screenPresenter::notifyHumiditySetPointChanged(float setPoint){
 800de60:	b580      	push	{r7, lr}
 800de62:	b082      	sub	sp, #8
 800de64:	af00      	add	r7, sp, #0
 800de66:	6078      	str	r0, [r7, #4]
 800de68:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(setPoint);
 800de6c:	687b      	ldr	r3, [r7, #4]
 800de6e:	68da      	ldr	r2, [r3, #12]
 800de70:	687b      	ldr	r3, [r7, #4]
 800de72:	68db      	ldr	r3, [r3, #12]
 800de74:	681b      	ldr	r3, [r3, #0]
 800de76:	3334      	adds	r3, #52	@ 0x34
 800de78:	681b      	ldr	r3, [r3, #0]
 800de7a:	ed97 0a00 	vldr	s0, [r7]
 800de7e:	4610      	mov	r0, r2
 800de80:	4798      	blx	r3
}
 800de82:	bf00      	nop
 800de84:	3708      	adds	r7, #8
 800de86:	46bd      	mov	sp, r7
 800de88:	bd80      	pop	{r7, pc}

0800de8a <_ZThn4_N24humidity_screenPresenter29notifyHumiditySetPointChangedEf>:

    virtual void notifyHumiditySetPointChanged(float setPoint);
 800de8a:	f1a0 0004 	sub.w	r0, r0, #4
 800de8e:	f7ff bfe7 	b.w	800de60 <_ZN24humidity_screenPresenter29notifyHumiditySetPointChangedEf>

0800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>:
     * @return pointer to the first element in the buffer where the formatted string is
     *         placed.
     *
     * @see snprintf, snprintfFloats
     */
    static UnicodeChar* snprintfFloat(UnicodeChar* dst, uint16_t dstSize, const char* format, const float value)
 800de92:	b580      	push	{r7, lr}
 800de94:	b084      	sub	sp, #16
 800de96:	af00      	add	r7, sp, #0
 800de98:	60f8      	str	r0, [r7, #12]
 800de9a:	460b      	mov	r3, r1
 800de9c:	607a      	str	r2, [r7, #4]
 800de9e:	ed87 0a00 	vstr	s0, [r7]
 800dea2:	817b      	strh	r3, [r7, #10]
    {
        return snprintfFloats(dst, dstSize, format, &value);
 800dea4:	463b      	mov	r3, r7
 800dea6:	8979      	ldrh	r1, [r7, #10]
 800dea8:	687a      	ldr	r2, [r7, #4]
 800deaa:	68f8      	ldr	r0, [r7, #12]
 800deac:	f009 fb98 	bl	80175e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>
 800deb0:	4603      	mov	r3, r0
    }
 800deb2:	4618      	mov	r0, r3
 800deb4:	3710      	adds	r7, #16
 800deb6:	46bd      	mov	sp, r7
 800deb8:	bd80      	pop	{r7, pc}
	...

0800debc <_ZN19humidity_screenViewD1Ev>:

class humidity_screenView : public humidity_screenViewBase
{
public:
    humidity_screenView();
    virtual ~humidity_screenView() {}
 800debc:	b580      	push	{r7, lr}
 800debe:	b082      	sub	sp, #8
 800dec0:	af00      	add	r7, sp, #0
 800dec2:	6078      	str	r0, [r7, #4]
 800dec4:	4a05      	ldr	r2, [pc, #20]	@ (800dedc <_ZN19humidity_screenViewD1Ev+0x20>)
 800dec6:	687b      	ldr	r3, [r7, #4]
 800dec8:	601a      	str	r2, [r3, #0]
 800deca:	687b      	ldr	r3, [r7, #4]
 800decc:	4618      	mov	r0, r3
 800dece:	f7fc ffd7 	bl	800ae80 <_ZN23humidity_screenViewBaseD1Ev>
 800ded2:	687b      	ldr	r3, [r7, #4]
 800ded4:	4618      	mov	r0, r3
 800ded6:	3708      	adds	r7, #8
 800ded8:	46bd      	mov	sp, r7
 800deda:	bd80      	pop	{r7, pc}
 800dedc:	08028b08 	.word	0x08028b08

0800dee0 <_ZN19humidity_screenViewD0Ev>:
 800dee0:	b580      	push	{r7, lr}
 800dee2:	b082      	sub	sp, #8
 800dee4:	af00      	add	r7, sp, #0
 800dee6:	6078      	str	r0, [r7, #4]
 800dee8:	6878      	ldr	r0, [r7, #4]
 800deea:	f7ff ffe7 	bl	800debc <_ZN19humidity_screenViewD1Ev>
 800deee:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800def2:	6878      	ldr	r0, [r7, #4]
 800def4:	f017 fefd 	bl	8025cf2 <_ZdlPvj>
 800def8:	687b      	ldr	r3, [r7, #4]
 800defa:	4618      	mov	r0, r3
 800defc:	3708      	adds	r7, #8
 800defe:	46bd      	mov	sp, r7
 800df00:	bd80      	pop	{r7, pc}
	...

0800df04 <_ZN19humidity_screenViewC1Ev>:
#include <gui/humidity_screen_screen/humidity_screenView.hpp>

humidity_screenView::humidity_screenView()
 800df04:	b580      	push	{r7, lr}
 800df06:	b082      	sub	sp, #8
 800df08:	af00      	add	r7, sp, #0
 800df0a:	6078      	str	r0, [r7, #4]
 800df0c:	687b      	ldr	r3, [r7, #4]
 800df0e:	4618      	mov	r0, r3
 800df10:	f7fc fd08 	bl	800a924 <_ZN23humidity_screenViewBaseC1Ev>
 800df14:	4a03      	ldr	r2, [pc, #12]	@ (800df24 <_ZN19humidity_screenViewC1Ev+0x20>)
 800df16:	687b      	ldr	r3, [r7, #4]
 800df18:	601a      	str	r2, [r3, #0]
{

}
 800df1a:	687b      	ldr	r3, [r7, #4]
 800df1c:	4618      	mov	r0, r3
 800df1e:	3708      	adds	r7, #8
 800df20:	46bd      	mov	sp, r7
 800df22:	bd80      	pop	{r7, pc}
 800df24:	08028b08 	.word	0x08028b08

0800df28 <_ZN19humidity_screenView11setupScreenEv>:

void humidity_screenView::setupScreen()
{
 800df28:	b580      	push	{r7, lr}
 800df2a:	b082      	sub	sp, #8
 800df2c:	af00      	add	r7, sp, #0
 800df2e:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::setupScreen();
 800df30:	687b      	ldr	r3, [r7, #4]
 800df32:	4618      	mov	r0, r3
 800df34:	f7fc fff5 	bl	800af22 <_ZN23humidity_screenViewBase11setupScreenEv>
}
 800df38:	bf00      	nop
 800df3a:	3708      	adds	r7, #8
 800df3c:	46bd      	mov	sp, r7
 800df3e:	bd80      	pop	{r7, pc}

0800df40 <_ZN19humidity_screenView14tearDownScreenEv>:

void humidity_screenView::tearDownScreen()
{
 800df40:	b580      	push	{r7, lr}
 800df42:	b082      	sub	sp, #8
 800df44:	af00      	add	r7, sp, #0
 800df46:	6078      	str	r0, [r7, #4]
    humidity_screenViewBase::tearDownScreen();
 800df48:	687b      	ldr	r3, [r7, #4]
 800df4a:	4618      	mov	r0, r3
 800df4c:	f7fc f810 	bl	8009f70 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800df50:	bf00      	nop
 800df52:	3708      	adds	r7, #8
 800df54:	46bd      	mov	sp, r7
 800df56:	bd80      	pop	{r7, pc}

0800df58 <_ZN19humidity_screenView11setHumidityEf>:

void humidity_screenView::setHumidity(float newVal){
 800df58:	b580      	push	{r7, lr}
 800df5a:	b082      	sub	sp, #8
 800df5c:	af00      	add	r7, sp, #0
 800df5e:	6078      	str	r0, [r7, #4]
 800df60:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(humValBuffer, HUMVAL_SIZE, "%.1f", newVal);
 800df64:	687b      	ldr	r3, [r7, #4]
 800df66:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800df6a:	ed97 0a00 	vldr	s0, [r7]
 800df6e:	4a07      	ldr	r2, [pc, #28]	@ (800df8c <_ZN19humidity_screenView11setHumidityEf+0x34>)
 800df70:	210a      	movs	r1, #10
 800df72:	4618      	mov	r0, r3
 800df74:	f7ff ff8d 	bl	800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	humVal.invalidate();
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800df7e:	4618      	mov	r0, r3
 800df80:	f007 f9d4 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800df84:	bf00      	nop
 800df86:	3708      	adds	r7, #8
 800df88:	46bd      	mov	sp, r7
 800df8a:	bd80      	pop	{r7, pc}
 800df8c:	080277e8 	.word	0x080277e8

0800df90 <_ZN19humidity_screenView8increaseEv>:

void humidity_screenView::increase()
{
 800df90:	b480      	push	{r7}
 800df92:	b083      	sub	sp, #12
 800df94:	af00      	add	r7, sp, #0
 800df96:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point + 5;
 800df98:	4b07      	ldr	r3, [pc, #28]	@ (800dfb8 <_ZN19humidity_screenView8increaseEv+0x28>)
 800df9a:	edd3 7a00 	vldr	s15, [r3]
 800df9e:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dfa2:	ee77 7a87 	vadd.f32	s15, s15, s14
 800dfa6:	4b04      	ldr	r3, [pc, #16]	@ (800dfb8 <_ZN19humidity_screenView8increaseEv+0x28>)
 800dfa8:	edc3 7a00 	vstr	s15, [r3]
}
 800dfac:	bf00      	nop
 800dfae:	370c      	adds	r7, #12
 800dfb0:	46bd      	mov	sp, r7
 800dfb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfb6:	4770      	bx	lr
 800dfb8:	20000008 	.word	0x20000008

0800dfbc <_ZN19humidity_screenView8decreaseEv>:

void humidity_screenView::decrease()
{
 800dfbc:	b480      	push	{r7}
 800dfbe:	b083      	sub	sp, #12
 800dfc0:	af00      	add	r7, sp, #0
 800dfc2:	6078      	str	r0, [r7, #4]
	humidity_set_point = humidity_set_point - 5;
 800dfc4:	4b07      	ldr	r3, [pc, #28]	@ (800dfe4 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dfc6:	edd3 7a00 	vldr	s15, [r3]
 800dfca:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800dfce:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800dfd2:	4b04      	ldr	r3, [pc, #16]	@ (800dfe4 <_ZN19humidity_screenView8decreaseEv+0x28>)
 800dfd4:	edc3 7a00 	vstr	s15, [r3]
}
 800dfd8:	bf00      	nop
 800dfda:	370c      	adds	r7, #12
 800dfdc:	46bd      	mov	sp, r7
 800dfde:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dfe2:	4770      	bx	lr
 800dfe4:	20000008 	.word	0x20000008

0800dfe8 <_ZN21light_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~light_screenPresenter() {}
 800dfe8:	b580      	push	{r7, lr}
 800dfea:	b082      	sub	sp, #8
 800dfec:	af00      	add	r7, sp, #0
 800dfee:	6078      	str	r0, [r7, #4]
 800dff0:	4a09      	ldr	r2, [pc, #36]	@ (800e018 <_ZN21light_screenPresenterD1Ev+0x30>)
 800dff2:	687b      	ldr	r3, [r7, #4]
 800dff4:	601a      	str	r2, [r3, #0]
 800dff6:	4a09      	ldr	r2, [pc, #36]	@ (800e01c <_ZN21light_screenPresenterD1Ev+0x34>)
 800dff8:	687b      	ldr	r3, [r7, #4]
 800dffa:	605a      	str	r2, [r3, #4]
 800dffc:	687b      	ldr	r3, [r7, #4]
 800dffe:	3304      	adds	r3, #4
 800e000:	4618      	mov	r0, r3
 800e002:	f7ff fe5f 	bl	800dcc4 <_ZN13ModelListenerD1Ev>
 800e006:	687b      	ldr	r3, [r7, #4]
 800e008:	4618      	mov	r0, r3
 800e00a:	f7ff fe17 	bl	800dc3c <_ZN8touchgfx9PresenterD1Ev>
 800e00e:	687b      	ldr	r3, [r7, #4]
 800e010:	4618      	mov	r0, r3
 800e012:	3708      	adds	r7, #8
 800e014:	46bd      	mov	sp, r7
 800e016:	bd80      	pop	{r7, pc}
 800e018:	08028b48 	.word	0x08028b48
 800e01c:	08028b64 	.word	0x08028b64

0800e020 <_ZThn4_N21light_screenPresenterD1Ev>:
 800e020:	f1a0 0004 	sub.w	r0, r0, #4
 800e024:	e7e0      	b.n	800dfe8 <_ZN21light_screenPresenterD1Ev>
 800e026:	bf00      	nop

0800e028 <_ZN21light_screenPresenterD0Ev>:
 800e028:	b580      	push	{r7, lr}
 800e02a:	b082      	sub	sp, #8
 800e02c:	af00      	add	r7, sp, #0
 800e02e:	6078      	str	r0, [r7, #4]
 800e030:	6878      	ldr	r0, [r7, #4]
 800e032:	f7ff ffd9 	bl	800dfe8 <_ZN21light_screenPresenterD1Ev>
 800e036:	2110      	movs	r1, #16
 800e038:	6878      	ldr	r0, [r7, #4]
 800e03a:	f017 fe5a 	bl	8025cf2 <_ZdlPvj>
 800e03e:	687b      	ldr	r3, [r7, #4]
 800e040:	4618      	mov	r0, r3
 800e042:	3708      	adds	r7, #8
 800e044:	46bd      	mov	sp, r7
 800e046:	bd80      	pop	{r7, pc}

0800e048 <_ZThn4_N21light_screenPresenterD0Ev>:
 800e048:	f1a0 0004 	sub.w	r0, r0, #4
 800e04c:	e7ec      	b.n	800e028 <_ZN21light_screenPresenterD0Ev>
	...

0800e050 <_ZN21light_screenPresenterC1ER16light_screenView>:
#include <gui/light_screen_screen/light_screenView.hpp>
#include <gui/light_screen_screen/light_screenPresenter.hpp>

light_screenPresenter::light_screenPresenter(light_screenView& v)
 800e050:	b580      	push	{r7, lr}
 800e052:	b082      	sub	sp, #8
 800e054:	af00      	add	r7, sp, #0
 800e056:	6078      	str	r0, [r7, #4]
 800e058:	6039      	str	r1, [r7, #0]
    : view(v)
 800e05a:	687b      	ldr	r3, [r7, #4]
 800e05c:	4618      	mov	r0, r3
 800e05e:	f7ff fe0d 	bl	800dc7c <_ZN8touchgfx9PresenterC1Ev>
 800e062:	687b      	ldr	r3, [r7, #4]
 800e064:	3304      	adds	r3, #4
 800e066:	4618      	mov	r0, r3
 800e068:	f7ff fe18 	bl	800dc9c <_ZN13ModelListenerC1Ev>
 800e06c:	4a06      	ldr	r2, [pc, #24]	@ (800e088 <_ZN21light_screenPresenterC1ER16light_screenView+0x38>)
 800e06e:	687b      	ldr	r3, [r7, #4]
 800e070:	601a      	str	r2, [r3, #0]
 800e072:	4a06      	ldr	r2, [pc, #24]	@ (800e08c <_ZN21light_screenPresenterC1ER16light_screenView+0x3c>)
 800e074:	687b      	ldr	r3, [r7, #4]
 800e076:	605a      	str	r2, [r3, #4]
 800e078:	687b      	ldr	r3, [r7, #4]
 800e07a:	683a      	ldr	r2, [r7, #0]
 800e07c:	60da      	str	r2, [r3, #12]
{

}
 800e07e:	687b      	ldr	r3, [r7, #4]
 800e080:	4618      	mov	r0, r3
 800e082:	3708      	adds	r7, #8
 800e084:	46bd      	mov	sp, r7
 800e086:	bd80      	pop	{r7, pc}
 800e088:	08028b48 	.word	0x08028b48
 800e08c:	08028b64 	.word	0x08028b64

0800e090 <_ZN21light_screenPresenter8activateEv>:

void light_screenPresenter::activate()
{
 800e090:	b480      	push	{r7}
 800e092:	b083      	sub	sp, #12
 800e094:	af00      	add	r7, sp, #0
 800e096:	6078      	str	r0, [r7, #4]

}
 800e098:	bf00      	nop
 800e09a:	370c      	adds	r7, #12
 800e09c:	46bd      	mov	sp, r7
 800e09e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0a2:	4770      	bx	lr

0800e0a4 <_ZN21light_screenPresenter10deactivateEv>:

void light_screenPresenter::deactivate()
{
 800e0a4:	b480      	push	{r7}
 800e0a6:	b083      	sub	sp, #12
 800e0a8:	af00      	add	r7, sp, #0
 800e0aa:	6078      	str	r0, [r7, #4]

}
 800e0ac:	bf00      	nop
 800e0ae:	370c      	adds	r7, #12
 800e0b0:	46bd      	mov	sp, r7
 800e0b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e0b6:	4770      	bx	lr

0800e0b8 <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>:

void light_screenPresenter::notifyLightsSetPointChanged(int setPoint)
{
 800e0b8:	b580      	push	{r7, lr}
 800e0ba:	b082      	sub	sp, #8
 800e0bc:	af00      	add	r7, sp, #0
 800e0be:	6078      	str	r0, [r7, #4]
 800e0c0:	6039      	str	r1, [r7, #0]
	view.setLights(setPoint);
 800e0c2:	687b      	ldr	r3, [r7, #4]
 800e0c4:	68da      	ldr	r2, [r3, #12]
 800e0c6:	687b      	ldr	r3, [r7, #4]
 800e0c8:	68db      	ldr	r3, [r3, #12]
 800e0ca:	681b      	ldr	r3, [r3, #0]
 800e0cc:	3334      	adds	r3, #52	@ 0x34
 800e0ce:	681b      	ldr	r3, [r3, #0]
 800e0d0:	6839      	ldr	r1, [r7, #0]
 800e0d2:	4610      	mov	r0, r2
 800e0d4:	4798      	blx	r3
}
 800e0d6:	bf00      	nop
 800e0d8:	3708      	adds	r7, #8
 800e0da:	46bd      	mov	sp, r7
 800e0dc:	bd80      	pop	{r7, pc}

0800e0de <_ZThn4_N21light_screenPresenter27notifyLightsSetPointChangedEi>:

    virtual void notifyLightsSetPointChanged(int setPoint);
 800e0de:	f1a0 0004 	sub.w	r0, r0, #4
 800e0e2:	f7ff bfe9 	b.w	800e0b8 <_ZN21light_screenPresenter27notifyLightsSetPointChangedEi>
	...

0800e0e8 <_ZN16light_screenViewD1Ev>:

class light_screenView : public light_screenViewBase
{
public:
    light_screenView();
    virtual ~light_screenView() {}
 800e0e8:	b580      	push	{r7, lr}
 800e0ea:	b082      	sub	sp, #8
 800e0ec:	af00      	add	r7, sp, #0
 800e0ee:	6078      	str	r0, [r7, #4]
 800e0f0:	4a05      	ldr	r2, [pc, #20]	@ (800e108 <_ZN16light_screenViewD1Ev+0x20>)
 800e0f2:	687b      	ldr	r3, [r7, #4]
 800e0f4:	601a      	str	r2, [r3, #0]
 800e0f6:	687b      	ldr	r3, [r7, #4]
 800e0f8:	4618      	mov	r0, r3
 800e0fa:	f7fd fd85 	bl	800bc08 <_ZN20light_screenViewBaseD1Ev>
 800e0fe:	687b      	ldr	r3, [r7, #4]
 800e100:	4618      	mov	r0, r3
 800e102:	3708      	adds	r7, #8
 800e104:	46bd      	mov	sp, r7
 800e106:	bd80      	pop	{r7, pc}
 800e108:	08028b8c 	.word	0x08028b8c

0800e10c <_ZN16light_screenViewD0Ev>:
 800e10c:	b580      	push	{r7, lr}
 800e10e:	b082      	sub	sp, #8
 800e110:	af00      	add	r7, sp, #0
 800e112:	6078      	str	r0, [r7, #4]
 800e114:	6878      	ldr	r0, [r7, #4]
 800e116:	f7ff ffe7 	bl	800e0e8 <_ZN16light_screenViewD1Ev>
 800e11a:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800e11e:	6878      	ldr	r0, [r7, #4]
 800e120:	f017 fde7 	bl	8025cf2 <_ZdlPvj>
 800e124:	687b      	ldr	r3, [r7, #4]
 800e126:	4618      	mov	r0, r3
 800e128:	3708      	adds	r7, #8
 800e12a:	46bd      	mov	sp, r7
 800e12c:	bd80      	pop	{r7, pc}
	...

0800e130 <_ZN16light_screenViewC1Ev>:
#include <gui/light_screen_screen/light_screenView.hpp>

light_screenView::light_screenView()
 800e130:	b580      	push	{r7, lr}
 800e132:	b082      	sub	sp, #8
 800e134:	af00      	add	r7, sp, #0
 800e136:	6078      	str	r0, [r7, #4]
 800e138:	687b      	ldr	r3, [r7, #4]
 800e13a:	4618      	mov	r0, r3
 800e13c:	f7fd fab6 	bl	800b6ac <_ZN20light_screenViewBaseC1Ev>
 800e140:	4a03      	ldr	r2, [pc, #12]	@ (800e150 <_ZN16light_screenViewC1Ev+0x20>)
 800e142:	687b      	ldr	r3, [r7, #4]
 800e144:	601a      	str	r2, [r3, #0]
{

}
 800e146:	687b      	ldr	r3, [r7, #4]
 800e148:	4618      	mov	r0, r3
 800e14a:	3708      	adds	r7, #8
 800e14c:	46bd      	mov	sp, r7
 800e14e:	bd80      	pop	{r7, pc}
 800e150:	08028b8c 	.word	0x08028b8c

0800e154 <_ZN16light_screenView11setupScreenEv>:

void light_screenView::setupScreen()
{
 800e154:	b580      	push	{r7, lr}
 800e156:	b082      	sub	sp, #8
 800e158:	af00      	add	r7, sp, #0
 800e15a:	6078      	str	r0, [r7, #4]
    light_screenViewBase::setupScreen();
 800e15c:	687b      	ldr	r3, [r7, #4]
 800e15e:	4618      	mov	r0, r3
 800e160:	f7fd fda3 	bl	800bcaa <_ZN20light_screenViewBase11setupScreenEv>
}
 800e164:	bf00      	nop
 800e166:	3708      	adds	r7, #8
 800e168:	46bd      	mov	sp, r7
 800e16a:	bd80      	pop	{r7, pc}

0800e16c <_ZN16light_screenView14tearDownScreenEv>:

void light_screenView::tearDownScreen()
{
 800e16c:	b580      	push	{r7, lr}
 800e16e:	b082      	sub	sp, #8
 800e170:	af00      	add	r7, sp, #0
 800e172:	6078      	str	r0, [r7, #4]
    light_screenViewBase::tearDownScreen();
 800e174:	687b      	ldr	r3, [r7, #4]
 800e176:	4618      	mov	r0, r3
 800e178:	f7fb fefa 	bl	8009f70 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800e17c:	bf00      	nop
 800e17e:	3708      	adds	r7, #8
 800e180:	46bd      	mov	sp, r7
 800e182:	bd80      	pop	{r7, pc}

0800e184 <_ZN16light_screenView9setLightsEi>:

void light_screenView::setLights(int newVal){
 800e184:	b580      	push	{r7, lr}
 800e186:	b082      	sub	sp, #8
 800e188:	af00      	add	r7, sp, #0
 800e18a:	6078      	str	r0, [r7, #4]
 800e18c:	6039      	str	r1, [r7, #0]
	Unicode::snprintfFloat(lightsValBuffer, LIGHTSVAL_SIZE, "%.0f", newVal);
 800e18e:	687b      	ldr	r3, [r7, #4]
 800e190:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800e194:	683a      	ldr	r2, [r7, #0]
 800e196:	ee07 2a90 	vmov	s15, r2
 800e19a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800e19e:	eeb0 0a67 	vmov.f32	s0, s15
 800e1a2:	4a07      	ldr	r2, [pc, #28]	@ (800e1c0 <_ZN16light_screenView9setLightsEi+0x3c>)
 800e1a4:	210a      	movs	r1, #10
 800e1a6:	4618      	mov	r0, r3
 800e1a8:	f7ff fe73 	bl	800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	lightsVal.invalidate();
 800e1ac:	687b      	ldr	r3, [r7, #4]
 800e1ae:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e1b2:	4618      	mov	r0, r3
 800e1b4:	f007 f8ba 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e1b8:	bf00      	nop
 800e1ba:	3708      	adds	r7, #8
 800e1bc:	46bd      	mov	sp, r7
 800e1be:	bd80      	pop	{r7, pc}
 800e1c0:	080277f0 	.word	0x080277f0

0800e1c4 <_ZN16light_screenView8increaseEv>:

void light_screenView::increase()
{
 800e1c4:	b480      	push	{r7}
 800e1c6:	b083      	sub	sp, #12
 800e1c8:	af00      	add	r7, sp, #0
 800e1ca:	6078      	str	r0, [r7, #4]
	lights_set_point++;
 800e1cc:	4b05      	ldr	r3, [pc, #20]	@ (800e1e4 <_ZN16light_screenView8increaseEv+0x20>)
 800e1ce:	681b      	ldr	r3, [r3, #0]
 800e1d0:	3301      	adds	r3, #1
 800e1d2:	4a04      	ldr	r2, [pc, #16]	@ (800e1e4 <_ZN16light_screenView8increaseEv+0x20>)
 800e1d4:	6013      	str	r3, [r2, #0]
}
 800e1d6:	bf00      	nop
 800e1d8:	370c      	adds	r7, #12
 800e1da:	46bd      	mov	sp, r7
 800e1dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e1e0:	4770      	bx	lr
 800e1e2:	bf00      	nop
 800e1e4:	2000000c 	.word	0x2000000c

0800e1e8 <_ZN16light_screenView8decreaseEv>:

void light_screenView::decrease()
{
 800e1e8:	b480      	push	{r7}
 800e1ea:	b083      	sub	sp, #12
 800e1ec:	af00      	add	r7, sp, #0
 800e1ee:	6078      	str	r0, [r7, #4]
	lights_set_point--;
 800e1f0:	4b05      	ldr	r3, [pc, #20]	@ (800e208 <_ZN16light_screenView8decreaseEv+0x20>)
 800e1f2:	681b      	ldr	r3, [r3, #0]
 800e1f4:	3b01      	subs	r3, #1
 800e1f6:	4a04      	ldr	r2, [pc, #16]	@ (800e208 <_ZN16light_screenView8decreaseEv+0x20>)
 800e1f8:	6013      	str	r3, [r2, #0]
}
 800e1fa:	bf00      	nop
 800e1fc:	370c      	adds	r7, #12
 800e1fe:	46bd      	mov	sp, r7
 800e200:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e204:	4770      	bx	lr
 800e206:	bf00      	nop
 800e208:	2000000c 	.word	0x2000000c

0800e20c <_ZN13MainPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~MainPresenter() {};
 800e20c:	b580      	push	{r7, lr}
 800e20e:	b082      	sub	sp, #8
 800e210:	af00      	add	r7, sp, #0
 800e212:	6078      	str	r0, [r7, #4]
 800e214:	4a09      	ldr	r2, [pc, #36]	@ (800e23c <_ZN13MainPresenterD1Ev+0x30>)
 800e216:	687b      	ldr	r3, [r7, #4]
 800e218:	601a      	str	r2, [r3, #0]
 800e21a:	4a09      	ldr	r2, [pc, #36]	@ (800e240 <_ZN13MainPresenterD1Ev+0x34>)
 800e21c:	687b      	ldr	r3, [r7, #4]
 800e21e:	605a      	str	r2, [r3, #4]
 800e220:	687b      	ldr	r3, [r7, #4]
 800e222:	3304      	adds	r3, #4
 800e224:	4618      	mov	r0, r3
 800e226:	f7ff fd4d 	bl	800dcc4 <_ZN13ModelListenerD1Ev>
 800e22a:	687b      	ldr	r3, [r7, #4]
 800e22c:	4618      	mov	r0, r3
 800e22e:	f7ff fd05 	bl	800dc3c <_ZN8touchgfx9PresenterD1Ev>
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	4618      	mov	r0, r3
 800e236:	3708      	adds	r7, #8
 800e238:	46bd      	mov	sp, r7
 800e23a:	bd80      	pop	{r7, pc}
 800e23c:	08028bcc 	.word	0x08028bcc
 800e240:	08028bf0 	.word	0x08028bf0

0800e244 <_ZThn4_N13MainPresenterD1Ev>:
 800e244:	f1a0 0004 	sub.w	r0, r0, #4
 800e248:	e7e0      	b.n	800e20c <_ZN13MainPresenterD1Ev>
 800e24a:	bf00      	nop

0800e24c <_ZN13MainPresenterD0Ev>:
 800e24c:	b580      	push	{r7, lr}
 800e24e:	b082      	sub	sp, #8
 800e250:	af00      	add	r7, sp, #0
 800e252:	6078      	str	r0, [r7, #4]
 800e254:	6878      	ldr	r0, [r7, #4]
 800e256:	f7ff ffd9 	bl	800e20c <_ZN13MainPresenterD1Ev>
 800e25a:	2110      	movs	r1, #16
 800e25c:	6878      	ldr	r0, [r7, #4]
 800e25e:	f017 fd48 	bl	8025cf2 <_ZdlPvj>
 800e262:	687b      	ldr	r3, [r7, #4]
 800e264:	4618      	mov	r0, r3
 800e266:	3708      	adds	r7, #8
 800e268:	46bd      	mov	sp, r7
 800e26a:	bd80      	pop	{r7, pc}

0800e26c <_ZThn4_N13MainPresenterD0Ev>:
 800e26c:	f1a0 0004 	sub.w	r0, r0, #4
 800e270:	e7ec      	b.n	800e24c <_ZN13MainPresenterD0Ev>
	...

0800e274 <_ZN13MainPresenterC1ER8MainView>:
#include <gui/main_screen/MainView.hpp>
#include <gui/main_screen/MainPresenter.hpp>

MainPresenter::MainPresenter(MainView& v)
 800e274:	b580      	push	{r7, lr}
 800e276:	b082      	sub	sp, #8
 800e278:	af00      	add	r7, sp, #0
 800e27a:	6078      	str	r0, [r7, #4]
 800e27c:	6039      	str	r1, [r7, #0]
    : view(v)
 800e27e:	687b      	ldr	r3, [r7, #4]
 800e280:	4618      	mov	r0, r3
 800e282:	f7ff fcfb 	bl	800dc7c <_ZN8touchgfx9PresenterC1Ev>
 800e286:	687b      	ldr	r3, [r7, #4]
 800e288:	3304      	adds	r3, #4
 800e28a:	4618      	mov	r0, r3
 800e28c:	f7ff fd06 	bl	800dc9c <_ZN13ModelListenerC1Ev>
 800e290:	4a06      	ldr	r2, [pc, #24]	@ (800e2ac <_ZN13MainPresenterC1ER8MainView+0x38>)
 800e292:	687b      	ldr	r3, [r7, #4]
 800e294:	601a      	str	r2, [r3, #0]
 800e296:	4a06      	ldr	r2, [pc, #24]	@ (800e2b0 <_ZN13MainPresenterC1ER8MainView+0x3c>)
 800e298:	687b      	ldr	r3, [r7, #4]
 800e29a:	605a      	str	r2, [r3, #4]
 800e29c:	687b      	ldr	r3, [r7, #4]
 800e29e:	683a      	ldr	r2, [r7, #0]
 800e2a0:	60da      	str	r2, [r3, #12]
{
}
 800e2a2:	687b      	ldr	r3, [r7, #4]
 800e2a4:	4618      	mov	r0, r3
 800e2a6:	3708      	adds	r7, #8
 800e2a8:	46bd      	mov	sp, r7
 800e2aa:	bd80      	pop	{r7, pc}
 800e2ac:	08028bcc 	.word	0x08028bcc
 800e2b0:	08028bf0 	.word	0x08028bf0

0800e2b4 <_ZN13MainPresenter8activateEv>:

void MainPresenter::activate()
{
 800e2b4:	b480      	push	{r7}
 800e2b6:	b083      	sub	sp, #12
 800e2b8:	af00      	add	r7, sp, #0
 800e2ba:	6078      	str	r0, [r7, #4]
}
 800e2bc:	bf00      	nop
 800e2be:	370c      	adds	r7, #12
 800e2c0:	46bd      	mov	sp, r7
 800e2c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2c6:	4770      	bx	lr

0800e2c8 <_ZN13MainPresenter10deactivateEv>:

void MainPresenter::deactivate()
{
 800e2c8:	b480      	push	{r7}
 800e2ca:	b083      	sub	sp, #12
 800e2cc:	af00      	add	r7, sp, #0
 800e2ce:	6078      	str	r0, [r7, #4]
}
 800e2d0:	bf00      	nop
 800e2d2:	370c      	adds	r7, #12
 800e2d4:	46bd      	mov	sp, r7
 800e2d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e2da:	4770      	bx	lr

0800e2dc <_ZN13MainPresenter16notifyADCChangedEm>:


void MainPresenter::notifyADCChanged(uint32_t newVal){
 800e2dc:	b580      	push	{r7, lr}
 800e2de:	b082      	sub	sp, #8
 800e2e0:	af00      	add	r7, sp, #0
 800e2e2:	6078      	str	r0, [r7, #4]
 800e2e4:	6039      	str	r1, [r7, #0]
	view.setVal(newVal);
 800e2e6:	687b      	ldr	r3, [r7, #4]
 800e2e8:	68da      	ldr	r2, [r3, #12]
 800e2ea:	687b      	ldr	r3, [r7, #4]
 800e2ec:	68db      	ldr	r3, [r3, #12]
 800e2ee:	681b      	ldr	r3, [r3, #0]
 800e2f0:	3338      	adds	r3, #56	@ 0x38
 800e2f2:	681b      	ldr	r3, [r3, #0]
 800e2f4:	6839      	ldr	r1, [r7, #0]
 800e2f6:	4610      	mov	r0, r2
 800e2f8:	4798      	blx	r3
}
 800e2fa:	bf00      	nop
 800e2fc:	3708      	adds	r7, #8
 800e2fe:	46bd      	mov	sp, r7
 800e300:	bd80      	pop	{r7, pc}

0800e302 <_ZThn4_N13MainPresenter16notifyADCChangedEm>:

    virtual void notifyADCChanged(uint32_t newVal);
 800e302:	f1a0 0004 	sub.w	r0, r0, #4
 800e306:	f7ff bfe9 	b.w	800e2dc <_ZN13MainPresenter16notifyADCChangedEm>

0800e30a <_ZN13MainPresenter24notifyTemperatureChangedEf>:

void MainPresenter::notifyTemperatureChanged(float newTemp){
 800e30a:	b580      	push	{r7, lr}
 800e30c:	b082      	sub	sp, #8
 800e30e:	af00      	add	r7, sp, #0
 800e310:	6078      	str	r0, [r7, #4]
 800e312:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(newTemp);
 800e316:	687b      	ldr	r3, [r7, #4]
 800e318:	68da      	ldr	r2, [r3, #12]
 800e31a:	687b      	ldr	r3, [r7, #4]
 800e31c:	68db      	ldr	r3, [r3, #12]
 800e31e:	681b      	ldr	r3, [r3, #0]
 800e320:	3340      	adds	r3, #64	@ 0x40
 800e322:	681b      	ldr	r3, [r3, #0]
 800e324:	ed97 0a00 	vldr	s0, [r7]
 800e328:	4610      	mov	r0, r2
 800e32a:	4798      	blx	r3

}
 800e32c:	bf00      	nop
 800e32e:	3708      	adds	r7, #8
 800e330:	46bd      	mov	sp, r7
 800e332:	bd80      	pop	{r7, pc}

0800e334 <_ZThn4_N13MainPresenter24notifyTemperatureChangedEf>:
    virtual void notifyTemperatureChanged(float newTemp);
 800e334:	f1a0 0004 	sub.w	r0, r0, #4
 800e338:	f7ff bfe7 	b.w	800e30a <_ZN13MainPresenter24notifyTemperatureChangedEf>

0800e33c <_ZN13MainPresenter21notifyHumidityChangedEf>:

void MainPresenter::notifyHumidityChanged(float newHumidity){
 800e33c:	b580      	push	{r7, lr}
 800e33e:	b082      	sub	sp, #8
 800e340:	af00      	add	r7, sp, #0
 800e342:	6078      	str	r0, [r7, #4]
 800e344:	ed87 0a00 	vstr	s0, [r7]
	view.setHumidity(newHumidity);
 800e348:	687b      	ldr	r3, [r7, #4]
 800e34a:	68da      	ldr	r2, [r3, #12]
 800e34c:	687b      	ldr	r3, [r7, #4]
 800e34e:	68db      	ldr	r3, [r3, #12]
 800e350:	681b      	ldr	r3, [r3, #0]
 800e352:	333c      	adds	r3, #60	@ 0x3c
 800e354:	681b      	ldr	r3, [r3, #0]
 800e356:	ed97 0a00 	vldr	s0, [r7]
 800e35a:	4610      	mov	r0, r2
 800e35c:	4798      	blx	r3
}
 800e35e:	bf00      	nop
 800e360:	3708      	adds	r7, #8
 800e362:	46bd      	mov	sp, r7
 800e364:	bd80      	pop	{r7, pc}

0800e366 <_ZThn4_N13MainPresenter21notifyHumidityChangedEf>:
    virtual void notifyHumidityChanged(float newHumidity);
 800e366:	f1a0 0004 	sub.w	r0, r0, #4
 800e36a:	f7ff bfe7 	b.w	800e33c <_ZN13MainPresenter21notifyHumidityChangedEf>
	...

0800e370 <_ZN8MainViewD1Ev>:

class MainView : public MainViewBase
{
public:
    MainView();
    ~MainView() {};
 800e370:	b580      	push	{r7, lr}
 800e372:	b082      	sub	sp, #8
 800e374:	af00      	add	r7, sp, #0
 800e376:	6078      	str	r0, [r7, #4]
 800e378:	4a05      	ldr	r2, [pc, #20]	@ (800e390 <_ZN8MainViewD1Ev+0x20>)
 800e37a:	687b      	ldr	r3, [r7, #4]
 800e37c:	601a      	str	r2, [r3, #0]
 800e37e:	687b      	ldr	r3, [r7, #4]
 800e380:	4618      	mov	r0, r3
 800e382:	f7fe fb69 	bl	800ca58 <_ZN12MainViewBaseD1Ev>
 800e386:	687b      	ldr	r3, [r7, #4]
 800e388:	4618      	mov	r0, r3
 800e38a:	3708      	adds	r7, #8
 800e38c:	46bd      	mov	sp, r7
 800e38e:	bd80      	pop	{r7, pc}
 800e390:	08028c18 	.word	0x08028c18

0800e394 <_ZN8MainViewD0Ev>:
 800e394:	b580      	push	{r7, lr}
 800e396:	b082      	sub	sp, #8
 800e398:	af00      	add	r7, sp, #0
 800e39a:	6078      	str	r0, [r7, #4]
 800e39c:	6878      	ldr	r0, [r7, #4]
 800e39e:	f7ff ffe7 	bl	800e370 <_ZN8MainViewD1Ev>
 800e3a2:	f44f 7176 	mov.w	r1, #984	@ 0x3d8
 800e3a6:	6878      	ldr	r0, [r7, #4]
 800e3a8:	f017 fca3 	bl	8025cf2 <_ZdlPvj>
 800e3ac:	687b      	ldr	r3, [r7, #4]
 800e3ae:	4618      	mov	r0, r3
 800e3b0:	3708      	adds	r7, #8
 800e3b2:	46bd      	mov	sp, r7
 800e3b4:	bd80      	pop	{r7, pc}
	...

0800e3b8 <_ZN8MainViewC1Ev>:

const uint8_t UPPER_LIMIT = 42;
const uint8_t LOWER_LIMIT = 0;


MainView::MainView() : count(0) {}
 800e3b8:	b580      	push	{r7, lr}
 800e3ba:	b082      	sub	sp, #8
 800e3bc:	af00      	add	r7, sp, #0
 800e3be:	6078      	str	r0, [r7, #4]
 800e3c0:	687b      	ldr	r3, [r7, #4]
 800e3c2:	4618      	mov	r0, r3
 800e3c4:	f7fd fe86 	bl	800c0d4 <_ZN12MainViewBaseC1Ev>
 800e3c8:	4a05      	ldr	r2, [pc, #20]	@ (800e3e0 <_ZN8MainViewC1Ev+0x28>)
 800e3ca:	687b      	ldr	r3, [r7, #4]
 800e3cc:	601a      	str	r2, [r3, #0]
 800e3ce:	687b      	ldr	r3, [r7, #4]
 800e3d0:	2200      	movs	r2, #0
 800e3d2:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
 800e3d6:	687b      	ldr	r3, [r7, #4]
 800e3d8:	4618      	mov	r0, r3
 800e3da:	3708      	adds	r7, #8
 800e3dc:	46bd      	mov	sp, r7
 800e3de:	bd80      	pop	{r7, pc}
 800e3e0:	08028c18 	.word	0x08028c18

0800e3e4 <_ZN8MainView11setupScreenEv>:

void MainView::setupScreen()
{
 800e3e4:	b580      	push	{r7, lr}
 800e3e6:	b082      	sub	sp, #8
 800e3e8:	af00      	add	r7, sp, #0
 800e3ea:	6078      	str	r0, [r7, #4]
    updateGFXElements();
 800e3ec:	6878      	ldr	r0, [r7, #4]
 800e3ee:	f000 f855 	bl	800e49c <_ZN8MainView17updateGFXElementsEv>
    MainViewBase::setupScreen();
 800e3f2:	687b      	ldr	r3, [r7, #4]
 800e3f4:	4618      	mov	r0, r3
 800e3f6:	f7fe fb90 	bl	800cb1a <_ZN12MainViewBase11setupScreenEv>

}
 800e3fa:	bf00      	nop
 800e3fc:	3708      	adds	r7, #8
 800e3fe:	46bd      	mov	sp, r7
 800e400:	bd80      	pop	{r7, pc}

0800e402 <_ZN8MainView13increaseValueEv>:

void MainView::increaseValue()
{
 800e402:	b580      	push	{r7, lr}
 800e404:	b082      	sub	sp, #8
 800e406:	af00      	add	r7, sp, #0
 800e408:	6078      	str	r0, [r7, #4]
    count = (count++ > UPPER_LIMIT) ? UPPER_LIMIT : count;
 800e40a:	687b      	ldr	r3, [r7, #4]
 800e40c:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e410:	1c5a      	adds	r2, r3, #1
 800e412:	b2d1      	uxtb	r1, r2
 800e414:	687a      	ldr	r2, [r7, #4]
 800e416:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e41a:	2b2a      	cmp	r3, #42	@ 0x2a
 800e41c:	d804      	bhi.n	800e428 <_ZN8MainView13increaseValueEv+0x26>
 800e41e:	687b      	ldr	r3, [r7, #4]
 800e420:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e424:	781a      	ldrb	r2, [r3, #0]
 800e426:	e000      	b.n	800e42a <_ZN8MainView13increaseValueEv+0x28>
 800e428:	222a      	movs	r2, #42	@ 0x2a
 800e42a:	687b      	ldr	r3, [r7, #4]
 800e42c:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e430:	6878      	ldr	r0, [r7, #4]
 800e432:	f000 f833 	bl	800e49c <_ZN8MainView17updateGFXElementsEv>
}
 800e436:	bf00      	nop
 800e438:	3708      	adds	r7, #8
 800e43a:	46bd      	mov	sp, r7
 800e43c:	bd80      	pop	{r7, pc}

0800e43e <_ZN8MainView13decreaseValueEv>:

void MainView::decreaseValue()
{
 800e43e:	b580      	push	{r7, lr}
 800e440:	b082      	sub	sp, #8
 800e442:	af00      	add	r7, sp, #0
 800e444:	6078      	str	r0, [r7, #4]
    count = (count-- <= LOWER_LIMIT) ? LOWER_LIMIT : count;
 800e446:	687b      	ldr	r3, [r7, #4]
 800e448:	f893 33d4 	ldrb.w	r3, [r3, #980]	@ 0x3d4
 800e44c:	1e5a      	subs	r2, r3, #1
 800e44e:	b2d1      	uxtb	r1, r2
 800e450:	687a      	ldr	r2, [r7, #4]
 800e452:	f882 13d4 	strb.w	r1, [r2, #980]	@ 0x3d4
 800e456:	2b00      	cmp	r3, #0
 800e458:	d004      	beq.n	800e464 <_ZN8MainView13decreaseValueEv+0x26>
 800e45a:	687b      	ldr	r3, [r7, #4]
 800e45c:	f503 7375 	add.w	r3, r3, #980	@ 0x3d4
 800e460:	781a      	ldrb	r2, [r3, #0]
 800e462:	e000      	b.n	800e466 <_ZN8MainView13decreaseValueEv+0x28>
 800e464:	2200      	movs	r2, #0
 800e466:	687b      	ldr	r3, [r7, #4]
 800e468:	f883 23d4 	strb.w	r2, [r3, #980]	@ 0x3d4
    updateGFXElements();
 800e46c:	6878      	ldr	r0, [r7, #4]
 800e46e:	f000 f815 	bl	800e49c <_ZN8MainView17updateGFXElementsEv>
}
 800e472:	bf00      	nop
 800e474:	3708      	adds	r7, #8
 800e476:	46bd      	mov	sp, r7
 800e478:	bd80      	pop	{r7, pc}
	...

0800e47c <_ZN8MainView12ToggleLightsEv>:

void MainView::ToggleLights(){
 800e47c:	b580      	push	{r7, lr}
 800e47e:	b082      	sub	sp, #8
 800e480:	af00      	add	r7, sp, #0
 800e482:	6078      	str	r0, [r7, #4]
	HAL_GPIO_TogglePin(GPIOB, GPIO_PIN_8);
 800e484:	f44f 7180 	mov.w	r1, #256	@ 0x100
 800e488:	4803      	ldr	r0, [pc, #12]	@ (800e498 <_ZN8MainView12ToggleLightsEv+0x1c>)
 800e48a:	f7f5 ff42 	bl	8004312 <HAL_GPIO_TogglePin>


}
 800e48e:	bf00      	nop
 800e490:	3708      	adds	r7, #8
 800e492:	46bd      	mov	sp, r7
 800e494:	bd80      	pop	{r7, pc}
 800e496:	bf00      	nop
 800e498:	40020400 	.word	0x40020400

0800e49c <_ZN8MainView17updateGFXElementsEv>:
void MainView::updateGFXElements()
{
 800e49c:	b480      	push	{r7}
 800e49e:	b083      	sub	sp, #12
 800e4a0:	af00      	add	r7, sp, #0
 800e4a2:	6078      	str	r0, [r7, #4]
//    }
//    // Invalidate all GFX area, which will result in it being redrawn in next tick.
//    countTxt.invalidate();
//    buttonUp.invalidate();
//    buttonDown.invalidate();
}
 800e4a4:	bf00      	nop
 800e4a6:	370c      	adds	r7, #12
 800e4a8:	46bd      	mov	sp, r7
 800e4aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e4ae:	4770      	bx	lr

0800e4b0 <_ZN8MainView6setValEm>:

void MainView::setVal(uint32_t val){
 800e4b0:	b580      	push	{r7, lr}
 800e4b2:	b082      	sub	sp, #8
 800e4b4:	af00      	add	r7, sp, #0
 800e4b6:	6078      	str	r0, [r7, #4]
 800e4b8:	6039      	str	r1, [r7, #0]

	Unicode::snprintf(ADCVALBuffer, ADCVAL_SIZE, "%d", val);
 800e4ba:	687b      	ldr	r3, [r7, #4]
 800e4bc:	f503 7063 	add.w	r0, r3, #908	@ 0x38c
 800e4c0:	683b      	ldr	r3, [r7, #0]
 800e4c2:	4a07      	ldr	r2, [pc, #28]	@ (800e4e0 <_ZN8MainView6setValEm+0x30>)
 800e4c4:	2114      	movs	r1, #20
 800e4c6:	f008 fe8b 	bl	80171e0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>
	ADCVAL.invalidate();
 800e4ca:	687b      	ldr	r3, [r7, #4]
 800e4cc:	f503 739e 	add.w	r3, r3, #316	@ 0x13c
 800e4d0:	4618      	mov	r0, r3
 800e4d2:	f006 ff2b 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>
}
 800e4d6:	bf00      	nop
 800e4d8:	3708      	adds	r7, #8
 800e4da:	46bd      	mov	sp, r7
 800e4dc:	bd80      	pop	{r7, pc}
 800e4de:	bf00      	nop
 800e4e0:	080277f8 	.word	0x080277f8

0800e4e4 <_ZN8MainView14setTemperatureEf>:

void MainView::setTemperature(float temp){
 800e4e4:	b580      	push	{r7, lr}
 800e4e6:	b082      	sub	sp, #8
 800e4e8:	af00      	add	r7, sp, #0
 800e4ea:	6078      	str	r0, [r7, #4]
 800e4ec:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(TEMPVALBuffer, TEMPVAL_SIZE, "%.1f", temp);
 800e4f0:	687b      	ldr	r3, [r7, #4]
 800e4f2:	f503 7359 	add.w	r3, r3, #868	@ 0x364
 800e4f6:	ed97 0a00 	vldr	s0, [r7]
 800e4fa:	4a07      	ldr	r2, [pc, #28]	@ (800e518 <_ZN8MainView14setTemperatureEf+0x34>)
 800e4fc:	2114      	movs	r1, #20
 800e4fe:	4618      	mov	r0, r3
 800e500:	f7ff fcc7 	bl	800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	TEMPVAL.invalidate();
 800e504:	687b      	ldr	r3, [r7, #4]
 800e506:	33f0      	adds	r3, #240	@ 0xf0
 800e508:	4618      	mov	r0, r3
 800e50a:	f006 ff0f 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e50e:	bf00      	nop
 800e510:	3708      	adds	r7, #8
 800e512:	46bd      	mov	sp, r7
 800e514:	bd80      	pop	{r7, pc}
 800e516:	bf00      	nop
 800e518:	080277fc 	.word	0x080277fc

0800e51c <_ZN8MainView11setHumidityEf>:

void MainView::setHumidity(float humidity){
 800e51c:	b580      	push	{r7, lr}
 800e51e:	b082      	sub	sp, #8
 800e520:	af00      	add	r7, sp, #0
 800e522:	6078      	str	r0, [r7, #4]
 800e524:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(HUMVALBuffer, HUMVAL_SIZE, "%.1f", humidity);
 800e528:	687b      	ldr	r3, [r7, #4]
 800e52a:	f503 734f 	add.w	r3, r3, #828	@ 0x33c
 800e52e:	ed97 0a00 	vldr	s0, [r7]
 800e532:	4a07      	ldr	r2, [pc, #28]	@ (800e550 <_ZN8MainView11setHumidityEf+0x34>)
 800e534:	2114      	movs	r1, #20
 800e536:	4618      	mov	r0, r3
 800e538:	f7ff fcab 	bl	800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	HUMVAL.invalidate();
 800e53c:	687b      	ldr	r3, [r7, #4]
 800e53e:	33a4      	adds	r3, #164	@ 0xa4
 800e540:	4618      	mov	r0, r3
 800e542:	f006 fef3 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>


}
 800e546:	bf00      	nop
 800e548:	3708      	adds	r7, #8
 800e54a:	46bd      	mov	sp, r7
 800e54c:	bd80      	pop	{r7, pc}
 800e54e:	bf00      	nop
 800e550:	080277fc 	.word	0x080277fc

0800e554 <_ZN5ModelC1Ev>:
#include <gui/model/Model.hpp>
#include <gui/model/ModelListener.hpp>
#include "main.h"

Model::Model() : modelListener(0)
 800e554:	b480      	push	{r7}
 800e556:	b083      	sub	sp, #12
 800e558:	af00      	add	r7, sp, #0
 800e55a:	6078      	str	r0, [r7, #4]
 800e55c:	687b      	ldr	r3, [r7, #4]
 800e55e:	2200      	movs	r2, #0
 800e560:	601a      	str	r2, [r3, #0]
{
}
 800e562:	687b      	ldr	r3, [r7, #4]
 800e564:	4618      	mov	r0, r3
 800e566:	370c      	adds	r7, #12
 800e568:	46bd      	mov	sp, r7
 800e56a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e56e:	4770      	bx	lr

0800e570 <_ZN5Model4tickEv>:

void Model::tick()
{
 800e570:	b580      	push	{r7, lr}
 800e572:	b088      	sub	sp, #32
 800e574:	af00      	add	r7, sp, #0
 800e576:	6078      	str	r0, [r7, #4]

	float humidity = hum;
 800e578:	4b2c      	ldr	r3, [pc, #176]	@ (800e62c <_ZN5Model4tickEv+0xbc>)
 800e57a:	681b      	ldr	r3, [r3, #0]
 800e57c:	61fb      	str	r3, [r7, #28]
	float temperature = temp;
 800e57e:	4b2c      	ldr	r3, [pc, #176]	@ (800e630 <_ZN5Model4tickEv+0xc0>)
 800e580:	681b      	ldr	r3, [r3, #0]
 800e582:	61bb      	str	r3, [r7, #24]
	//uint32_t val = htim4.Instance->CCR2;
	uint32_t val = value_adc;
 800e584:	4b2b      	ldr	r3, [pc, #172]	@ (800e634 <_ZN5Model4tickEv+0xc4>)
 800e586:	681b      	ldr	r3, [r3, #0]
 800e588:	617b      	str	r3, [r7, #20]
	float temp_set = temp_set_point;
 800e58a:	4b2b      	ldr	r3, [pc, #172]	@ (800e638 <_ZN5Model4tickEv+0xc8>)
 800e58c:	681b      	ldr	r3, [r3, #0]
 800e58e:	613b      	str	r3, [r7, #16]
	float humidity_set = humidity_set_point;
 800e590:	4b2a      	ldr	r3, [pc, #168]	@ (800e63c <_ZN5Model4tickEv+0xcc>)
 800e592:	681b      	ldr	r3, [r3, #0]
 800e594:	60fb      	str	r3, [r7, #12]
	int lights_set = lights_set_point;
 800e596:	4b2a      	ldr	r3, [pc, #168]	@ (800e640 <_ZN5Model4tickEv+0xd0>)
 800e598:	681b      	ldr	r3, [r3, #0]
 800e59a:	60bb      	str	r3, [r7, #8]



	if (modelListener != 0) {
 800e59c:	687b      	ldr	r3, [r7, #4]
 800e59e:	681b      	ldr	r3, [r3, #0]
 800e5a0:	2b00      	cmp	r3, #0
 800e5a2:	d03f      	beq.n	800e624 <_ZN5Model4tickEv+0xb4>
		modelListener -> notifyADCChanged(val);
 800e5a4:	687b      	ldr	r3, [r7, #4]
 800e5a6:	681a      	ldr	r2, [r3, #0]
 800e5a8:	687b      	ldr	r3, [r7, #4]
 800e5aa:	681b      	ldr	r3, [r3, #0]
 800e5ac:	681b      	ldr	r3, [r3, #0]
 800e5ae:	3308      	adds	r3, #8
 800e5b0:	681b      	ldr	r3, [r3, #0]
 800e5b2:	6979      	ldr	r1, [r7, #20]
 800e5b4:	4610      	mov	r0, r2
 800e5b6:	4798      	blx	r3
		modelListener -> notifyTemperatureChanged(temperature);
 800e5b8:	687b      	ldr	r3, [r7, #4]
 800e5ba:	681a      	ldr	r2, [r3, #0]
 800e5bc:	687b      	ldr	r3, [r7, #4]
 800e5be:	681b      	ldr	r3, [r3, #0]
 800e5c0:	681b      	ldr	r3, [r3, #0]
 800e5c2:	330c      	adds	r3, #12
 800e5c4:	681b      	ldr	r3, [r3, #0]
 800e5c6:	ed97 0a06 	vldr	s0, [r7, #24]
 800e5ca:	4610      	mov	r0, r2
 800e5cc:	4798      	blx	r3
		modelListener -> notifyHumidityChanged(humidity);
 800e5ce:	687b      	ldr	r3, [r7, #4]
 800e5d0:	681a      	ldr	r2, [r3, #0]
 800e5d2:	687b      	ldr	r3, [r7, #4]
 800e5d4:	681b      	ldr	r3, [r3, #0]
 800e5d6:	681b      	ldr	r3, [r3, #0]
 800e5d8:	3310      	adds	r3, #16
 800e5da:	681b      	ldr	r3, [r3, #0]
 800e5dc:	ed97 0a07 	vldr	s0, [r7, #28]
 800e5e0:	4610      	mov	r0, r2
 800e5e2:	4798      	blx	r3
		modelListener -> notifyHumiditySetPointChanged(humidity_set);
 800e5e4:	687b      	ldr	r3, [r7, #4]
 800e5e6:	681a      	ldr	r2, [r3, #0]
 800e5e8:	687b      	ldr	r3, [r7, #4]
 800e5ea:	681b      	ldr	r3, [r3, #0]
 800e5ec:	681b      	ldr	r3, [r3, #0]
 800e5ee:	3314      	adds	r3, #20
 800e5f0:	681b      	ldr	r3, [r3, #0]
 800e5f2:	ed97 0a03 	vldr	s0, [r7, #12]
 800e5f6:	4610      	mov	r0, r2
 800e5f8:	4798      	blx	r3
		modelListener -> notifyTemperatureSetPointChanged(temp_set);
 800e5fa:	687b      	ldr	r3, [r7, #4]
 800e5fc:	681a      	ldr	r2, [r3, #0]
 800e5fe:	687b      	ldr	r3, [r7, #4]
 800e600:	681b      	ldr	r3, [r3, #0]
 800e602:	681b      	ldr	r3, [r3, #0]
 800e604:	3318      	adds	r3, #24
 800e606:	681b      	ldr	r3, [r3, #0]
 800e608:	ed97 0a04 	vldr	s0, [r7, #16]
 800e60c:	4610      	mov	r0, r2
 800e60e:	4798      	blx	r3
		modelListener -> notifyLightsSetPointChanged(lights_set);
 800e610:	687b      	ldr	r3, [r7, #4]
 800e612:	681a      	ldr	r2, [r3, #0]
 800e614:	687b      	ldr	r3, [r7, #4]
 800e616:	681b      	ldr	r3, [r3, #0]
 800e618:	681b      	ldr	r3, [r3, #0]
 800e61a:	331c      	adds	r3, #28
 800e61c:	681b      	ldr	r3, [r3, #0]
 800e61e:	68b9      	ldr	r1, [r7, #8]
 800e620:	4610      	mov	r0, r2
 800e622:	4798      	blx	r3
	}

//    virtual void notifyHumiditySetPointChanged(float setPoint) {}
//    virtual void notifyTemperatureSetPointChanged(float setPoint) {}
//    virtual void notifyLightsSetPointChanged(float setPoint) {}
}
 800e624:	bf00      	nop
 800e626:	3720      	adds	r7, #32
 800e628:	46bd      	mov	sp, r7
 800e62a:	bd80      	pop	{r7, pc}
 800e62c:	200005d8 	.word	0x200005d8
 800e630:	200005d4 	.word	0x200005d4
 800e634:	200005d0 	.word	0x200005d0
 800e638:	20000004 	.word	0x20000004
 800e63c:	20000008 	.word	0x20000008
 800e640:	2000000c 	.word	0x2000000c

0800e644 <_ZN27temperature_screenPresenterD1Ev>:
     * The deactivate function is called automatically when this screen is "switched out"
     * (ie. made inactive). Teardown functionality can be placed here.
     */
    virtual void deactivate();

    virtual ~temperature_screenPresenter() {}
 800e644:	b580      	push	{r7, lr}
 800e646:	b082      	sub	sp, #8
 800e648:	af00      	add	r7, sp, #0
 800e64a:	6078      	str	r0, [r7, #4]
 800e64c:	4a09      	ldr	r2, [pc, #36]	@ (800e674 <_ZN27temperature_screenPresenterD1Ev+0x30>)
 800e64e:	687b      	ldr	r3, [r7, #4]
 800e650:	601a      	str	r2, [r3, #0]
 800e652:	4a09      	ldr	r2, [pc, #36]	@ (800e678 <_ZN27temperature_screenPresenterD1Ev+0x34>)
 800e654:	687b      	ldr	r3, [r7, #4]
 800e656:	605a      	str	r2, [r3, #4]
 800e658:	687b      	ldr	r3, [r7, #4]
 800e65a:	3304      	adds	r3, #4
 800e65c:	4618      	mov	r0, r3
 800e65e:	f7ff fb31 	bl	800dcc4 <_ZN13ModelListenerD1Ev>
 800e662:	687b      	ldr	r3, [r7, #4]
 800e664:	4618      	mov	r0, r3
 800e666:	f7ff fae9 	bl	800dc3c <_ZN8touchgfx9PresenterD1Ev>
 800e66a:	687b      	ldr	r3, [r7, #4]
 800e66c:	4618      	mov	r0, r3
 800e66e:	3708      	adds	r7, #8
 800e670:	46bd      	mov	sp, r7
 800e672:	bd80      	pop	{r7, pc}
 800e674:	08028c64 	.word	0x08028c64
 800e678:	08028c80 	.word	0x08028c80

0800e67c <_ZThn4_N27temperature_screenPresenterD1Ev>:
 800e67c:	f1a0 0004 	sub.w	r0, r0, #4
 800e680:	e7e0      	b.n	800e644 <_ZN27temperature_screenPresenterD1Ev>
 800e682:	bf00      	nop

0800e684 <_ZN27temperature_screenPresenterD0Ev>:
 800e684:	b580      	push	{r7, lr}
 800e686:	b082      	sub	sp, #8
 800e688:	af00      	add	r7, sp, #0
 800e68a:	6078      	str	r0, [r7, #4]
 800e68c:	6878      	ldr	r0, [r7, #4]
 800e68e:	f7ff ffd9 	bl	800e644 <_ZN27temperature_screenPresenterD1Ev>
 800e692:	2110      	movs	r1, #16
 800e694:	6878      	ldr	r0, [r7, #4]
 800e696:	f017 fb2c 	bl	8025cf2 <_ZdlPvj>
 800e69a:	687b      	ldr	r3, [r7, #4]
 800e69c:	4618      	mov	r0, r3
 800e69e:	3708      	adds	r7, #8
 800e6a0:	46bd      	mov	sp, r7
 800e6a2:	bd80      	pop	{r7, pc}

0800e6a4 <_ZThn4_N27temperature_screenPresenterD0Ev>:
 800e6a4:	f1a0 0004 	sub.w	r0, r0, #4
 800e6a8:	e7ec      	b.n	800e684 <_ZN27temperature_screenPresenterD0Ev>
	...

0800e6ac <_ZN27temperature_screenPresenterC1ER22temperature_screenView>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>
#include <gui/temperature_screen_screen/temperature_screenPresenter.hpp>

temperature_screenPresenter::temperature_screenPresenter(temperature_screenView& v)
 800e6ac:	b580      	push	{r7, lr}
 800e6ae:	b082      	sub	sp, #8
 800e6b0:	af00      	add	r7, sp, #0
 800e6b2:	6078      	str	r0, [r7, #4]
 800e6b4:	6039      	str	r1, [r7, #0]
    : view(v)
 800e6b6:	687b      	ldr	r3, [r7, #4]
 800e6b8:	4618      	mov	r0, r3
 800e6ba:	f7ff fadf 	bl	800dc7c <_ZN8touchgfx9PresenterC1Ev>
 800e6be:	687b      	ldr	r3, [r7, #4]
 800e6c0:	3304      	adds	r3, #4
 800e6c2:	4618      	mov	r0, r3
 800e6c4:	f7ff faea 	bl	800dc9c <_ZN13ModelListenerC1Ev>
 800e6c8:	4a06      	ldr	r2, [pc, #24]	@ (800e6e4 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x38>)
 800e6ca:	687b      	ldr	r3, [r7, #4]
 800e6cc:	601a      	str	r2, [r3, #0]
 800e6ce:	4a06      	ldr	r2, [pc, #24]	@ (800e6e8 <_ZN27temperature_screenPresenterC1ER22temperature_screenView+0x3c>)
 800e6d0:	687b      	ldr	r3, [r7, #4]
 800e6d2:	605a      	str	r2, [r3, #4]
 800e6d4:	687b      	ldr	r3, [r7, #4]
 800e6d6:	683a      	ldr	r2, [r7, #0]
 800e6d8:	60da      	str	r2, [r3, #12]
{

}
 800e6da:	687b      	ldr	r3, [r7, #4]
 800e6dc:	4618      	mov	r0, r3
 800e6de:	3708      	adds	r7, #8
 800e6e0:	46bd      	mov	sp, r7
 800e6e2:	bd80      	pop	{r7, pc}
 800e6e4:	08028c64 	.word	0x08028c64
 800e6e8:	08028c80 	.word	0x08028c80

0800e6ec <_ZN27temperature_screenPresenter8activateEv>:

void temperature_screenPresenter::activate()
{
 800e6ec:	b480      	push	{r7}
 800e6ee:	b083      	sub	sp, #12
 800e6f0:	af00      	add	r7, sp, #0
 800e6f2:	6078      	str	r0, [r7, #4]

}
 800e6f4:	bf00      	nop
 800e6f6:	370c      	adds	r7, #12
 800e6f8:	46bd      	mov	sp, r7
 800e6fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e6fe:	4770      	bx	lr

0800e700 <_ZN27temperature_screenPresenter10deactivateEv>:

void temperature_screenPresenter::deactivate()
{
 800e700:	b480      	push	{r7}
 800e702:	b083      	sub	sp, #12
 800e704:	af00      	add	r7, sp, #0
 800e706:	6078      	str	r0, [r7, #4]

}
 800e708:	bf00      	nop
 800e70a:	370c      	adds	r7, #12
 800e70c:	46bd      	mov	sp, r7
 800e70e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e712:	4770      	bx	lr

0800e714 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

void temperature_screenPresenter::notifyTemperatureSetPointChanged(float setPoint)
{
 800e714:	b580      	push	{r7, lr}
 800e716:	b082      	sub	sp, #8
 800e718:	af00      	add	r7, sp, #0
 800e71a:	6078      	str	r0, [r7, #4]
 800e71c:	ed87 0a00 	vstr	s0, [r7]
	view.setTemperature(setPoint);
 800e720:	687b      	ldr	r3, [r7, #4]
 800e722:	68da      	ldr	r2, [r3, #12]
 800e724:	687b      	ldr	r3, [r7, #4]
 800e726:	68db      	ldr	r3, [r3, #12]
 800e728:	681b      	ldr	r3, [r3, #0]
 800e72a:	3334      	adds	r3, #52	@ 0x34
 800e72c:	681b      	ldr	r3, [r3, #0]
 800e72e:	ed97 0a00 	vldr	s0, [r7]
 800e732:	4610      	mov	r0, r2
 800e734:	4798      	blx	r3
}
 800e736:	bf00      	nop
 800e738:	3708      	adds	r7, #8
 800e73a:	46bd      	mov	sp, r7
 800e73c:	bd80      	pop	{r7, pc}

0800e73e <_ZThn4_N27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>:

    virtual void notifyTemperatureSetPointChanged(float setPoint);
 800e73e:	f1a0 0004 	sub.w	r0, r0, #4
 800e742:	f7ff bfe7 	b.w	800e714 <_ZN27temperature_screenPresenter32notifyTemperatureSetPointChangedEf>
	...

0800e748 <_ZN22temperature_screenViewD1Ev>:

class temperature_screenView : public temperature_screenViewBase
{
public:
    temperature_screenView();
    virtual ~temperature_screenView() {}
 800e748:	b580      	push	{r7, lr}
 800e74a:	b082      	sub	sp, #8
 800e74c:	af00      	add	r7, sp, #0
 800e74e:	6078      	str	r0, [r7, #4]
 800e750:	4a05      	ldr	r2, [pc, #20]	@ (800e768 <_ZN22temperature_screenViewD1Ev+0x20>)
 800e752:	687b      	ldr	r3, [r7, #4]
 800e754:	601a      	str	r2, [r3, #0]
 800e756:	687b      	ldr	r3, [r7, #4]
 800e758:	4618      	mov	r0, r3
 800e75a:	f7fe fe63 	bl	800d424 <_ZN26temperature_screenViewBaseD1Ev>
 800e75e:	687b      	ldr	r3, [r7, #4]
 800e760:	4618      	mov	r0, r3
 800e762:	3708      	adds	r7, #8
 800e764:	46bd      	mov	sp, r7
 800e766:	bd80      	pop	{r7, pc}
 800e768:	08028ca8 	.word	0x08028ca8

0800e76c <_ZN22temperature_screenViewD0Ev>:
 800e76c:	b580      	push	{r7, lr}
 800e76e:	b082      	sub	sp, #8
 800e770:	af00      	add	r7, sp, #0
 800e772:	6078      	str	r0, [r7, #4]
 800e774:	6878      	ldr	r0, [r7, #4]
 800e776:	f7ff ffe7 	bl	800e748 <_ZN22temperature_screenViewD1Ev>
 800e77a:	f44f 7109 	mov.w	r1, #548	@ 0x224
 800e77e:	6878      	ldr	r0, [r7, #4]
 800e780:	f017 fab7 	bl	8025cf2 <_ZdlPvj>
 800e784:	687b      	ldr	r3, [r7, #4]
 800e786:	4618      	mov	r0, r3
 800e788:	3708      	adds	r7, #8
 800e78a:	46bd      	mov	sp, r7
 800e78c:	bd80      	pop	{r7, pc}
	...

0800e790 <_ZN22temperature_screenViewC1Ev>:
#include <gui/temperature_screen_screen/temperature_screenView.hpp>

temperature_screenView::temperature_screenView()
 800e790:	b580      	push	{r7, lr}
 800e792:	b082      	sub	sp, #8
 800e794:	af00      	add	r7, sp, #0
 800e796:	6078      	str	r0, [r7, #4]
 800e798:	687b      	ldr	r3, [r7, #4]
 800e79a:	4618      	mov	r0, r3
 800e79c:	f7fe fb94 	bl	800cec8 <_ZN26temperature_screenViewBaseC1Ev>
 800e7a0:	4a03      	ldr	r2, [pc, #12]	@ (800e7b0 <_ZN22temperature_screenViewC1Ev+0x20>)
 800e7a2:	687b      	ldr	r3, [r7, #4]
 800e7a4:	601a      	str	r2, [r3, #0]
{

}
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	4618      	mov	r0, r3
 800e7aa:	3708      	adds	r7, #8
 800e7ac:	46bd      	mov	sp, r7
 800e7ae:	bd80      	pop	{r7, pc}
 800e7b0:	08028ca8 	.word	0x08028ca8

0800e7b4 <_ZN22temperature_screenView11setupScreenEv>:

void temperature_screenView::setupScreen()
{
 800e7b4:	b580      	push	{r7, lr}
 800e7b6:	b082      	sub	sp, #8
 800e7b8:	af00      	add	r7, sp, #0
 800e7ba:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::setupScreen();
 800e7bc:	687b      	ldr	r3, [r7, #4]
 800e7be:	4618      	mov	r0, r3
 800e7c0:	f7fe fe81 	bl	800d4c6 <_ZN26temperature_screenViewBase11setupScreenEv>
}
 800e7c4:	bf00      	nop
 800e7c6:	3708      	adds	r7, #8
 800e7c8:	46bd      	mov	sp, r7
 800e7ca:	bd80      	pop	{r7, pc}

0800e7cc <_ZN22temperature_screenView14tearDownScreenEv>:

void temperature_screenView::tearDownScreen()
{
 800e7cc:	b580      	push	{r7, lr}
 800e7ce:	b082      	sub	sp, #8
 800e7d0:	af00      	add	r7, sp, #0
 800e7d2:	6078      	str	r0, [r7, #4]
    temperature_screenViewBase::tearDownScreen();
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	4618      	mov	r0, r3
 800e7d8:	f7fb fbca 	bl	8009f70 <_ZN8touchgfx6Screen14tearDownScreenEv>
}
 800e7dc:	bf00      	nop
 800e7de:	3708      	adds	r7, #8
 800e7e0:	46bd      	mov	sp, r7
 800e7e2:	bd80      	pop	{r7, pc}

0800e7e4 <_ZN22temperature_screenView14setTemperatureEf>:


void temperature_screenView::setTemperature(float newVal){
 800e7e4:	b580      	push	{r7, lr}
 800e7e6:	b082      	sub	sp, #8
 800e7e8:	af00      	add	r7, sp, #0
 800e7ea:	6078      	str	r0, [r7, #4]
 800e7ec:	ed87 0a00 	vstr	s0, [r7]
	Unicode::snprintfFloat(tempValBuffer, TEMPVAL_SIZE, "%.1f", newVal);
 800e7f0:	687b      	ldr	r3, [r7, #4]
 800e7f2:	f503 73f8 	add.w	r3, r3, #496	@ 0x1f0
 800e7f6:	ed97 0a00 	vldr	s0, [r7]
 800e7fa:	4a07      	ldr	r2, [pc, #28]	@ (800e818 <_ZN22temperature_screenView14setTemperatureEf+0x34>)
 800e7fc:	210a      	movs	r1, #10
 800e7fe:	4618      	mov	r0, r3
 800e800:	f7ff fb47 	bl	800de92 <_ZN8touchgfx7Unicode13snprintfFloatEPttPKcf>
	tempVal.invalidate();
 800e804:	687b      	ldr	r3, [r7, #4]
 800e806:	f503 7396 	add.w	r3, r3, #300	@ 0x12c
 800e80a:	4618      	mov	r0, r3
 800e80c:	f006 fd8e 	bl	801532c <_ZNK8touchgfx8Drawable10invalidateEv>

}
 800e810:	bf00      	nop
 800e812:	3708      	adds	r7, #8
 800e814:	46bd      	mov	sp, r7
 800e816:	bd80      	pop	{r7, pc}
 800e818:	08027804 	.word	0x08027804

0800e81c <_ZN22temperature_screenView8increaseEv>:

void temperature_screenView::increase()
{
 800e81c:	b480      	push	{r7}
 800e81e:	b083      	sub	sp, #12
 800e820:	af00      	add	r7, sp, #0
 800e822:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point + 5;
 800e824:	4b07      	ldr	r3, [pc, #28]	@ (800e844 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e826:	edd3 7a00 	vldr	s15, [r3]
 800e82a:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e82e:	ee77 7a87 	vadd.f32	s15, s15, s14
 800e832:	4b04      	ldr	r3, [pc, #16]	@ (800e844 <_ZN22temperature_screenView8increaseEv+0x28>)
 800e834:	edc3 7a00 	vstr	s15, [r3]
}
 800e838:	bf00      	nop
 800e83a:	370c      	adds	r7, #12
 800e83c:	46bd      	mov	sp, r7
 800e83e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e842:	4770      	bx	lr
 800e844:	20000004 	.word	0x20000004

0800e848 <_ZN22temperature_screenView8decreaseEv>:

void temperature_screenView::decrease()
{
 800e848:	b480      	push	{r7}
 800e84a:	b083      	sub	sp, #12
 800e84c:	af00      	add	r7, sp, #0
 800e84e:	6078      	str	r0, [r7, #4]
	temp_set_point = temp_set_point - 5;
 800e850:	4b07      	ldr	r3, [pc, #28]	@ (800e870 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e852:	edd3 7a00 	vldr	s15, [r3]
 800e856:	eeb1 7a04 	vmov.f32	s14, #20	@ 0x40a00000  5.0
 800e85a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 800e85e:	4b04      	ldr	r3, [pc, #16]	@ (800e870 <_ZN22temperature_screenView8decreaseEv+0x28>)
 800e860:	edc3 7a00 	vstr	s15, [r3]
}
 800e864:	bf00      	nop
 800e866:	370c      	adds	r7, #12
 800e868:	46bd      	mov	sp, r7
 800e86a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e86e:	4770      	bx	lr
 800e870:	20000004 	.word	0x20000004

0800e874 <_ZN8touchgfx15TouchControllerD1Ev>:
/** Basic Touch Controller interface. */
class TouchController
{
public:
    /** Finalizes an instance of the TouchController class. */
    virtual ~TouchController()
 800e874:	b480      	push	{r7}
 800e876:	b083      	sub	sp, #12
 800e878:	af00      	add	r7, sp, #0
 800e87a:	6078      	str	r0, [r7, #4]
    {
 800e87c:	4a04      	ldr	r2, [pc, #16]	@ (800e890 <_ZN8touchgfx15TouchControllerD1Ev+0x1c>)
 800e87e:	687b      	ldr	r3, [r7, #4]
 800e880:	601a      	str	r2, [r3, #0]
    }
 800e882:	687b      	ldr	r3, [r7, #4]
 800e884:	4618      	mov	r0, r3
 800e886:	370c      	adds	r7, #12
 800e888:	46bd      	mov	sp, r7
 800e88a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e88e:	4770      	bx	lr
 800e890:	08028d00 	.word	0x08028d00

0800e894 <_ZN8touchgfx15TouchControllerD0Ev>:
    virtual ~TouchController()
 800e894:	b580      	push	{r7, lr}
 800e896:	b082      	sub	sp, #8
 800e898:	af00      	add	r7, sp, #0
 800e89a:	6078      	str	r0, [r7, #4]
    }
 800e89c:	6878      	ldr	r0, [r7, #4]
 800e89e:	f7ff ffe9 	bl	800e874 <_ZN8touchgfx15TouchControllerD1Ev>
 800e8a2:	2104      	movs	r1, #4
 800e8a4:	6878      	ldr	r0, [r7, #4]
 800e8a6:	f017 fa24 	bl	8025cf2 <_ZdlPvj>
 800e8aa:	687b      	ldr	r3, [r7, #4]
 800e8ac:	4618      	mov	r0, r3
 800e8ae:	3708      	adds	r7, #8
 800e8b0:	46bd      	mov	sp, r7
 800e8b2:	bd80      	pop	{r7, pc}

0800e8b4 <_ZN20STM32TouchController4initEv>:

#include <STM32TouchController.hpp>
#include "main.h"

void STM32TouchController::init()
{
 800e8b4:	b480      	push	{r7}
 800e8b6:	b083      	sub	sp, #12
 800e8b8:	af00      	add	r7, sp, #0
 800e8ba:	6078      	str	r0, [r7, #4]
    /**
     * Initialize touch controller and driver
     *
     */
}
 800e8bc:	bf00      	nop
 800e8be:	370c      	adds	r7, #12
 800e8c0:	46bd      	mov	sp, r7
 800e8c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8c6:	4770      	bx	lr

0800e8c8 <_ZN20STM32TouchController11sampleTouchERlS0_>:

bool STM32TouchController::sampleTouch(int32_t& x, int32_t& y)
{
 800e8c8:	b580      	push	{r7, lr}
 800e8ca:	b084      	sub	sp, #16
 800e8cc:	af00      	add	r7, sp, #0
 800e8ce:	60f8      	str	r0, [r7, #12]
 800e8d0:	60b9      	str	r1, [r7, #8]
 800e8d2:	607a      	str	r2, [r7, #4]
     * This function is called by the TouchGFX framework.
     * By default sampleTouch is called every tick, this can be adjusted by HAL::setTouchSampleRate(int8_t);
     *
     */

	return((bool) Touch_TouchGFXSampleTouch(&x,&y));
 800e8d4:	6879      	ldr	r1, [r7, #4]
 800e8d6:	68b8      	ldr	r0, [r7, #8]
 800e8d8:	f7f3 ffb0 	bl	800283c <Touch_TouchGFXSampleTouch>
 800e8dc:	4603      	mov	r3, r0
 800e8de:	2b00      	cmp	r3, #0
 800e8e0:	bf14      	ite	ne
 800e8e2:	2301      	movne	r3, #1
 800e8e4:	2300      	moveq	r3, #0
 800e8e6:	b2db      	uxtb	r3, r3
}
 800e8e8:	4618      	mov	r0, r3
 800e8ea:	3710      	adds	r7, #16
 800e8ec:	46bd      	mov	sp, r7
 800e8ee:	bd80      	pop	{r7, pc}

0800e8f0 <_ZN20STM32TouchControllerD1Ev>:
 * @brief This class specializes TouchController Interface.
 *
 * @sa touchgfx::TouchController
 */

class STM32TouchController : public touchgfx::TouchController
 800e8f0:	b580      	push	{r7, lr}
 800e8f2:	b082      	sub	sp, #8
 800e8f4:	af00      	add	r7, sp, #0
 800e8f6:	6078      	str	r0, [r7, #4]
 800e8f8:	4a05      	ldr	r2, [pc, #20]	@ (800e910 <_ZN20STM32TouchControllerD1Ev+0x20>)
 800e8fa:	687b      	ldr	r3, [r7, #4]
 800e8fc:	601a      	str	r2, [r3, #0]
 800e8fe:	687b      	ldr	r3, [r7, #4]
 800e900:	4618      	mov	r0, r3
 800e902:	f7ff ffb7 	bl	800e874 <_ZN8touchgfx15TouchControllerD1Ev>
 800e906:	687b      	ldr	r3, [r7, #4]
 800e908:	4618      	mov	r0, r3
 800e90a:	3708      	adds	r7, #8
 800e90c:	46bd      	mov	sp, r7
 800e90e:	bd80      	pop	{r7, pc}
 800e910:	08028ce8 	.word	0x08028ce8

0800e914 <_ZN20STM32TouchControllerD0Ev>:
 800e914:	b580      	push	{r7, lr}
 800e916:	b082      	sub	sp, #8
 800e918:	af00      	add	r7, sp, #0
 800e91a:	6078      	str	r0, [r7, #4]
 800e91c:	6878      	ldr	r0, [r7, #4]
 800e91e:	f7ff ffe7 	bl	800e8f0 <_ZN20STM32TouchControllerD1Ev>
 800e922:	2104      	movs	r1, #4
 800e924:	6878      	ldr	r0, [r7, #4]
 800e926:	f017 f9e4 	bl	8025cf2 <_ZdlPvj>
 800e92a:	687b      	ldr	r3, [r7, #4]
 800e92c:	4618      	mov	r0, r3
 800e92e:	3708      	adds	r7, #8
 800e930:	46bd      	mov	sp, r7
 800e932:	bd80      	pop	{r7, pc}

0800e934 <_ZN8touchgfx4GPIO4initEv>:

/*
 * Perform configuration of IO pins.
 */
void GPIO::init()
{
 800e934:	b480      	push	{r7}
 800e936:	af00      	add	r7, sp, #0

}
 800e938:	bf00      	nop
 800e93a:	46bd      	mov	sp, r7
 800e93c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e940:	4770      	bx	lr
	...

0800e944 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>:

/*
 * Sets a pin high.
 */
void GPIO::set(GPIO_ID id)
{
 800e944:	b480      	push	{r7}
 800e946:	b083      	sub	sp, #12
 800e948:	af00      	add	r7, sp, #0
 800e94a:	4603      	mov	r3, r0
 800e94c:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e94e:	79fb      	ldrb	r3, [r7, #7]
 800e950:	2b03      	cmp	r3, #3
 800e952:	d80c      	bhi.n	800e96e <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x2a>
 800e954:	a201      	add	r2, pc, #4	@ (adr r2, 800e95c <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE+0x18>)
 800e956:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e95a:	bf00      	nop
 800e95c:	0800e96d 	.word	0x0800e96d
 800e960:	0800e96d 	.word	0x0800e96d
 800e964:	0800e96d 	.word	0x0800e96d
 800e968:	0800e96d 	.word	0x0800e96d
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_SET);
#endif
        break;
 800e96c:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_SET);
#endif
        break;
    }
}
 800e96e:	bf00      	nop
 800e970:	370c      	adds	r7, #12
 800e972:	46bd      	mov	sp, r7
 800e974:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e978:	4770      	bx	lr
 800e97a:	bf00      	nop

0800e97c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>:

/*
 * Sets a pin low.
 */
void GPIO::clear(GPIO_ID id)
{
 800e97c:	b480      	push	{r7}
 800e97e:	b083      	sub	sp, #12
 800e980:	af00      	add	r7, sp, #0
 800e982:	4603      	mov	r3, r0
 800e984:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e986:	79fb      	ldrb	r3, [r7, #7]
 800e988:	2b03      	cmp	r3, #3
 800e98a:	d80c      	bhi.n	800e9a6 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x2a>
 800e98c:	a201      	add	r2, pc, #4	@ (adr r2, 800e994 <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE+0x18>)
 800e98e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e992:	bf00      	nop
 800e994:	0800e9a5 	.word	0x0800e9a5
 800e998:	0800e9a5 	.word	0x0800e9a5
 800e99c:	0800e9a5 	.word	0x0800e9a5
 800e9a0:	0800e9a5 	.word	0x0800e9a5
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_WritePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin, GPIO_PIN_RESET);
#endif
        break;
 800e9a4:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_WritePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin, GPIO_PIN_RESET);
#endif
        break;
    }
}
 800e9a6:	bf00      	nop
 800e9a8:	370c      	adds	r7, #12
 800e9aa:	46bd      	mov	sp, r7
 800e9ac:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9b0:	4770      	bx	lr
 800e9b2:	bf00      	nop

0800e9b4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>:

/*
 * Toggles a pin.
 */
void GPIO::toggle(GPIO_ID id)
{
 800e9b4:	b480      	push	{r7}
 800e9b6:	b083      	sub	sp, #12
 800e9b8:	af00      	add	r7, sp, #0
 800e9ba:	4603      	mov	r3, r0
 800e9bc:	71fb      	strb	r3, [r7, #7]
    switch (id)
 800e9be:	79fb      	ldrb	r3, [r7, #7]
 800e9c0:	2b03      	cmp	r3, #3
 800e9c2:	d80c      	bhi.n	800e9de <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x2a>
 800e9c4:	a201      	add	r2, pc, #4	@ (adr r2, 800e9cc <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE+0x18>)
 800e9c6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800e9ca:	bf00      	nop
 800e9cc:	0800e9dd 	.word	0x0800e9dd
 800e9d0:	0800e9dd 	.word	0x0800e9dd
 800e9d4:	0800e9dd 	.word	0x0800e9dd
 800e9d8:	0800e9dd 	.word	0x0800e9dd
    {
    case GPIO::VSYNC_FREQ:
#if defined(VSYNC_FREQ_GPIO_Port) && defined(VSYNC_FREQ_Pin)
        HAL_GPIO_TogglePin(VSYNC_FREQ_GPIO_Port, VSYNC_FREQ_Pin);
#endif
        break;
 800e9dc:	bf00      	nop
#if defined(MCU_ACTIVE_GPIO_Port) && defined(MCU_ACTIVE_Pin)
        HAL_GPIO_TogglePin(MCU_ACTIVE_GPIO_Port, MCU_ACTIVE_Pin);
#endif
        break;
    }
}
 800e9de:	bf00      	nop
 800e9e0:	370c      	adds	r7, #12
 800e9e2:	46bd      	mov	sp, r7
 800e9e4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e9e8:	4770      	bx	lr
 800e9ea:	bf00      	nop

0800e9ec <_ZN8touchgfx3HALD1Ev>:
 800e9ec:	b480      	push	{r7}
 800e9ee:	b083      	sub	sp, #12
 800e9f0:	af00      	add	r7, sp, #0
 800e9f2:	6078      	str	r0, [r7, #4]
 800e9f4:	4a04      	ldr	r2, [pc, #16]	@ (800ea08 <_ZN8touchgfx3HALD1Ev+0x1c>)
 800e9f6:	687b      	ldr	r3, [r7, #4]
 800e9f8:	601a      	str	r2, [r3, #0]
 800e9fa:	687b      	ldr	r3, [r7, #4]
 800e9fc:	4618      	mov	r0, r3
 800e9fe:	370c      	adds	r7, #12
 800ea00:	46bd      	mov	sp, r7
 800ea02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea06:	4770      	bx	lr
 800ea08:	08029138 	.word	0x08029138

0800ea0c <_ZN8touchgfx3HALD0Ev>:
 800ea0c:	b580      	push	{r7, lr}
 800ea0e:	b082      	sub	sp, #8
 800ea10:	af00      	add	r7, sp, #0
 800ea12:	6078      	str	r0, [r7, #4]
 800ea14:	6878      	ldr	r0, [r7, #4]
 800ea16:	f7ff ffe9 	bl	800e9ec <_ZN8touchgfx3HALD1Ev>
 800ea1a:	217c      	movs	r1, #124	@ 0x7c
 800ea1c:	6878      	ldr	r0, [r7, #4]
 800ea1e:	f017 f968 	bl	8025cf2 <_ZdlPvj>
 800ea22:	687b      	ldr	r3, [r7, #4]
 800ea24:	4618      	mov	r0, r3
 800ea26:	3708      	adds	r7, #8
 800ea28:	46bd      	mov	sp, r7
 800ea2a:	bd80      	pop	{r7, pc}

0800ea2c <_ZN8touchgfx3HAL21setDisplayOrientationENS_18DisplayOrientationE>:
 800ea2c:	b480      	push	{r7}
 800ea2e:	b083      	sub	sp, #12
 800ea30:	af00      	add	r7, sp, #0
 800ea32:	6078      	str	r0, [r7, #4]
 800ea34:	460b      	mov	r3, r1
 800ea36:	70fb      	strb	r3, [r7, #3]
 800ea38:	687b      	ldr	r3, [r7, #4]
 800ea3a:	78fa      	ldrb	r2, [r7, #3]
 800ea3c:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
 800ea40:	687b      	ldr	r3, [r7, #4]
 800ea42:	2201      	movs	r2, #1
 800ea44:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
 800ea48:	bf00      	nop
 800ea4a:	370c      	adds	r7, #12
 800ea4c:	46bd      	mov	sp, r7
 800ea4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ea52:	4770      	bx	lr

0800ea54 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt>:
 800ea54:	b580      	push	{r7, lr}
 800ea56:	b082      	sub	sp, #8
 800ea58:	af00      	add	r7, sp, #0
 800ea5a:	6078      	str	r0, [r7, #4]
 800ea5c:	460b      	mov	r3, r1
 800ea5e:	807b      	strh	r3, [r7, #2]
 800ea60:	4613      	mov	r3, r2
 800ea62:	803b      	strh	r3, [r7, #0]
 800ea64:	4b0c      	ldr	r3, [pc, #48]	@ (800ea98 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x44>)
 800ea66:	881b      	ldrh	r3, [r3, #0]
 800ea68:	887a      	ldrh	r2, [r7, #2]
 800ea6a:	429a      	cmp	r2, r3
 800ea6c:	d304      	bcc.n	800ea78 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x24>
 800ea6e:	4b0b      	ldr	r3, [pc, #44]	@ (800ea9c <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x48>)
 800ea70:	881b      	ldrh	r3, [r3, #0]
 800ea72:	883a      	ldrh	r2, [r7, #0]
 800ea74:	429a      	cmp	r2, r3
 800ea76:	d205      	bcs.n	800ea84 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x30>
 800ea78:	4b09      	ldr	r3, [pc, #36]	@ (800eaa0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x4c>)
 800ea7a:	4a0a      	ldr	r2, [pc, #40]	@ (800eaa4 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x50>)
 800ea7c:	219e      	movs	r1, #158	@ 0x9e
 800ea7e:	480a      	ldr	r0, [pc, #40]	@ (800eaa8 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x54>)
 800ea80:	f017 f9e6 	bl	8025e50 <__assert_func>
 800ea84:	4a09      	ldr	r2, [pc, #36]	@ (800eaac <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x58>)
 800ea86:	887b      	ldrh	r3, [r7, #2]
 800ea88:	8013      	strh	r3, [r2, #0]
 800ea8a:	4a09      	ldr	r2, [pc, #36]	@ (800eab0 <_ZN8touchgfx3HAL18setFrameBufferSizeEtt+0x5c>)
 800ea8c:	883b      	ldrh	r3, [r7, #0]
 800ea8e:	8013      	strh	r3, [r2, #0]
 800ea90:	bf00      	nop
 800ea92:	3708      	adds	r7, #8
 800ea94:	46bd      	mov	sp, r7
 800ea96:	bd80      	pop	{r7, pc}
 800ea98:	20002f48 	.word	0x20002f48
 800ea9c:	20002f4a 	.word	0x20002f4a
 800eaa0:	0802780c 	.word	0x0802780c
 800eaa4:	08027870 	.word	0x08027870
 800eaa8:	080278b4 	.word	0x080278b4
 800eaac:	20002f4e 	.word	0x20002f4e
 800eab0:	20002f50 	.word	0x20002f50

0800eab4 <_ZN8touchgfx3HAL11getBlitCapsEv>:
 800eab4:	b580      	push	{r7, lr}
 800eab6:	b082      	sub	sp, #8
 800eab8:	af00      	add	r7, sp, #0
 800eaba:	6078      	str	r0, [r7, #4]
 800eabc:	687b      	ldr	r3, [r7, #4]
 800eabe:	f893 307a 	ldrb.w	r3, [r3, #122]	@ 0x7a
 800eac2:	2b00      	cmp	r3, #0
 800eac4:	d009      	beq.n	800eada <_ZN8touchgfx3HAL11getBlitCapsEv+0x26>
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	685a      	ldr	r2, [r3, #4]
 800eaca:	687b      	ldr	r3, [r7, #4]
 800eacc:	685b      	ldr	r3, [r3, #4]
 800eace:	681b      	ldr	r3, [r3, #0]
 800ead0:	681b      	ldr	r3, [r3, #0]
 800ead2:	4610      	mov	r0, r2
 800ead4:	4798      	blx	r3
 800ead6:	4603      	mov	r3, r0
 800ead8:	e000      	b.n	800eadc <_ZN8touchgfx3HAL11getBlitCapsEv+0x28>
 800eada:	2300      	movs	r3, #0
 800eadc:	4618      	mov	r0, r3
 800eade:	3708      	adds	r7, #8
 800eae0:	46bd      	mov	sp, r7
 800eae2:	bd80      	pop	{r7, pc}

0800eae4 <_ZN8touchgfx3HAL15backPorchExitedEv>:
 800eae4:	b580      	push	{r7, lr}
 800eae6:	b082      	sub	sp, #8
 800eae8:	af00      	add	r7, sp, #0
 800eaea:	6078      	str	r0, [r7, #4]
 800eaec:	6878      	ldr	r0, [r7, #4]
 800eaee:	f002 ff07 	bl	8011900 <_ZN8touchgfx3HAL16swapFrameBuffersEv>
 800eaf2:	687b      	ldr	r3, [r7, #4]
 800eaf4:	681b      	ldr	r3, [r3, #0]
 800eaf6:	33ac      	adds	r3, #172	@ 0xac
 800eaf8:	681b      	ldr	r3, [r3, #0]
 800eafa:	6878      	ldr	r0, [r7, #4]
 800eafc:	4798      	blx	r3
 800eafe:	bf00      	nop
 800eb00:	3708      	adds	r7, #8
 800eb02:	46bd      	mov	sp, r7
 800eb04:	bd80      	pop	{r7, pc}

0800eb06 <_ZN8touchgfx3HAL9sampleKeyERh>:
 800eb06:	b480      	push	{r7}
 800eb08:	b083      	sub	sp, #12
 800eb0a:	af00      	add	r7, sp, #0
 800eb0c:	6078      	str	r0, [r7, #4]
 800eb0e:	6039      	str	r1, [r7, #0]
 800eb10:	2300      	movs	r3, #0
 800eb12:	4618      	mov	r0, r3
 800eb14:	370c      	adds	r7, #12
 800eb16:	46bd      	mov	sp, r7
 800eb18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eb1c:	4770      	bx	lr
	...

0800eb20 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_>:
 800eb20:	b580      	push	{r7, lr}
 800eb22:	b084      	sub	sp, #16
 800eb24:	af00      	add	r7, sp, #0
 800eb26:	60f8      	str	r0, [r7, #12]
 800eb28:	60b9      	str	r1, [r7, #8]
 800eb2a:	607a      	str	r2, [r7, #4]
 800eb2c:	603b      	str	r3, [r7, #0]
 800eb2e:	68bb      	ldr	r3, [r7, #8]
 800eb30:	2b00      	cmp	r3, #0
 800eb32:	d106      	bne.n	800eb42 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x22>
 800eb34:	4b0f      	ldr	r3, [pc, #60]	@ (800eb74 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x54>)
 800eb36:	4a10      	ldr	r2, [pc, #64]	@ (800eb78 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x58>)
 800eb38:	f240 21d2 	movw	r1, #722	@ 0x2d2
 800eb3c:	480f      	ldr	r0, [pc, #60]	@ (800eb7c <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x5c>)
 800eb3e:	f017 f987 	bl	8025e50 <__assert_func>
 800eb42:	68fb      	ldr	r3, [r7, #12]
 800eb44:	68ba      	ldr	r2, [r7, #8]
 800eb46:	63da      	str	r2, [r3, #60]	@ 0x3c
 800eb48:	68fb      	ldr	r3, [r7, #12]
 800eb4a:	687a      	ldr	r2, [r7, #4]
 800eb4c:	641a      	str	r2, [r3, #64]	@ 0x40
 800eb4e:	687b      	ldr	r3, [r7, #4]
 800eb50:	2b00      	cmp	r3, #0
 800eb52:	bf14      	ite	ne
 800eb54:	2301      	movne	r3, #1
 800eb56:	2300      	moveq	r3, #0
 800eb58:	b2da      	uxtb	r2, r3
 800eb5a:	4b09      	ldr	r3, [pc, #36]	@ (800eb80 <_ZN8touchgfx3HAL28setFrameBufferStartAddressesEPvS1_S1_+0x60>)
 800eb5c:	701a      	strb	r2, [r3, #0]
 800eb5e:	68fb      	ldr	r3, [r7, #12]
 800eb60:	681b      	ldr	r3, [r3, #0]
 800eb62:	338c      	adds	r3, #140	@ 0x8c
 800eb64:	681b      	ldr	r3, [r3, #0]
 800eb66:	6839      	ldr	r1, [r7, #0]
 800eb68:	68f8      	ldr	r0, [r7, #12]
 800eb6a:	4798      	blx	r3
 800eb6c:	bf00      	nop
 800eb6e:	3710      	adds	r7, #16
 800eb70:	46bd      	mov	sp, r7
 800eb72:	bd80      	pop	{r7, pc}
 800eb74:	080278f8 	.word	0x080278f8
 800eb78:	08027930 	.word	0x08027930
 800eb7c:	080278b4 	.word	0x080278b4
 800eb80:	20002f52 	.word	0x20002f52

0800eb84 <_ZN8touchgfx3HAL19setAnimationStorageEPv>:
 800eb84:	b480      	push	{r7}
 800eb86:	b083      	sub	sp, #12
 800eb88:	af00      	add	r7, sp, #0
 800eb8a:	6078      	str	r0, [r7, #4]
 800eb8c:	6039      	str	r1, [r7, #0]
 800eb8e:	687b      	ldr	r3, [r7, #4]
 800eb90:	683a      	ldr	r2, [r7, #0]
 800eb92:	645a      	str	r2, [r3, #68]	@ 0x44
 800eb94:	683b      	ldr	r3, [r7, #0]
 800eb96:	2b00      	cmp	r3, #0
 800eb98:	bf14      	ite	ne
 800eb9a:	2301      	movne	r3, #1
 800eb9c:	2300      	moveq	r3, #0
 800eb9e:	b2da      	uxtb	r2, r3
 800eba0:	4b03      	ldr	r3, [pc, #12]	@ (800ebb0 <_ZN8touchgfx3HAL19setAnimationStorageEPv+0x2c>)
 800eba2:	701a      	strb	r2, [r3, #0]
 800eba4:	bf00      	nop
 800eba6:	370c      	adds	r7, #12
 800eba8:	46bd      	mov	sp, r7
 800ebaa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebae:	4770      	bx	lr
 800ebb0:	20002f53 	.word	0x20002f53

0800ebb4 <_ZNK8touchgfx3HAL18getFlashDataReaderEv>:
 800ebb4:	b480      	push	{r7}
 800ebb6:	b083      	sub	sp, #12
 800ebb8:	af00      	add	r7, sp, #0
 800ebba:	6078      	str	r0, [r7, #4]
 800ebbc:	2300      	movs	r3, #0
 800ebbe:	4618      	mov	r0, r3
 800ebc0:	370c      	adds	r7, #12
 800ebc2:	46bd      	mov	sp, r7
 800ebc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ebc8:	4770      	bx	lr

0800ebca <_ZN8touchgfx3HAL9taskDelayEt>:
 800ebca:	b580      	push	{r7, lr}
 800ebcc:	b082      	sub	sp, #8
 800ebce:	af00      	add	r7, sp, #0
 800ebd0:	6078      	str	r0, [r7, #4]
 800ebd2:	460b      	mov	r3, r1
 800ebd4:	807b      	strh	r3, [r7, #2]
 800ebd6:	687b      	ldr	r3, [r7, #4]
 800ebd8:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ebda:	2b00      	cmp	r3, #0
 800ebdc:	d004      	beq.n	800ebe8 <_ZN8touchgfx3HAL9taskDelayEt+0x1e>
 800ebde:	687b      	ldr	r3, [r7, #4]
 800ebe0:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800ebe2:	887a      	ldrh	r2, [r7, #2]
 800ebe4:	4610      	mov	r0, r2
 800ebe6:	4798      	blx	r3
 800ebe8:	bf00      	nop
 800ebea:	3708      	adds	r7, #8
 800ebec:	46bd      	mov	sp, r7
 800ebee:	bd80      	pop	{r7, pc}

0800ebf0 <_ZN8touchgfx3HAL17getTFTCurrentLineEv>:
 800ebf0:	b480      	push	{r7}
 800ebf2:	b083      	sub	sp, #12
 800ebf4:	af00      	add	r7, sp, #0
 800ebf6:	6078      	str	r0, [r7, #4]
 800ebf8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800ebfc:	4618      	mov	r0, r3
 800ebfe:	370c      	adds	r7, #12
 800ec00:	46bd      	mov	sp, r7
 800ec02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec06:	4770      	bx	lr

0800ec08 <_ZN8touchgfx3HAL10getDMATypeEv>:
 800ec08:	b580      	push	{r7, lr}
 800ec0a:	b082      	sub	sp, #8
 800ec0c:	af00      	add	r7, sp, #0
 800ec0e:	6078      	str	r0, [r7, #4]
 800ec10:	687b      	ldr	r3, [r7, #4]
 800ec12:	685a      	ldr	r2, [r3, #4]
 800ec14:	687b      	ldr	r3, [r7, #4]
 800ec16:	685b      	ldr	r3, [r3, #4]
 800ec18:	681b      	ldr	r3, [r3, #0]
 800ec1a:	3318      	adds	r3, #24
 800ec1c:	681b      	ldr	r3, [r3, #0]
 800ec1e:	4610      	mov	r0, r2
 800ec20:	4798      	blx	r3
 800ec22:	4603      	mov	r3, r0
 800ec24:	4618      	mov	r0, r3
 800ec26:	3708      	adds	r7, #8
 800ec28:	46bd      	mov	sp, r7
 800ec2a:	bd80      	pop	{r7, pc}

0800ec2c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv>:
 800ec2c:	b480      	push	{r7}
 800ec2e:	b085      	sub	sp, #20
 800ec30:	af00      	add	r7, sp, #0
 800ec32:	6078      	str	r0, [r7, #4]
 800ec34:	687b      	ldr	r3, [r7, #4]
 800ec36:	f893 2078 	ldrb.w	r2, [r3, #120]	@ 0x78
 800ec3a:	687b      	ldr	r3, [r7, #4]
 800ec3c:	f893 3034 	ldrb.w	r3, [r3, #52]	@ 0x34
 800ec40:	429a      	cmp	r2, r3
 800ec42:	d011      	beq.n	800ec68 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x3c>
 800ec44:	4b14      	ldr	r3, [pc, #80]	@ (800ec98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ec46:	781b      	ldrb	r3, [r3, #0]
 800ec48:	2b00      	cmp	r3, #0
 800ec4a:	d11e      	bne.n	800ec8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800ec4c:	4b13      	ldr	r3, [pc, #76]	@ (800ec9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ec4e:	881b      	ldrh	r3, [r3, #0]
 800ec50:	81bb      	strh	r3, [r7, #12]
 800ec52:	4b13      	ldr	r3, [pc, #76]	@ (800eca0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ec54:	881a      	ldrh	r2, [r3, #0]
 800ec56:	4b11      	ldr	r3, [pc, #68]	@ (800ec9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ec58:	801a      	strh	r2, [r3, #0]
 800ec5a:	4a11      	ldr	r2, [pc, #68]	@ (800eca0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ec5c:	89bb      	ldrh	r3, [r7, #12]
 800ec5e:	8013      	strh	r3, [r2, #0]
 800ec60:	4b0d      	ldr	r3, [pc, #52]	@ (800ec98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ec62:	2201      	movs	r2, #1
 800ec64:	701a      	strb	r2, [r3, #0]
 800ec66:	e010      	b.n	800ec8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800ec68:	4b0b      	ldr	r3, [pc, #44]	@ (800ec98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ec6a:	781b      	ldrb	r3, [r3, #0]
 800ec6c:	2b00      	cmp	r3, #0
 800ec6e:	d00c      	beq.n	800ec8a <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x5e>
 800ec70:	4b0a      	ldr	r3, [pc, #40]	@ (800ec9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ec72:	881b      	ldrh	r3, [r3, #0]
 800ec74:	81fb      	strh	r3, [r7, #14]
 800ec76:	4b0a      	ldr	r3, [pc, #40]	@ (800eca0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ec78:	881a      	ldrh	r2, [r3, #0]
 800ec7a:	4b08      	ldr	r3, [pc, #32]	@ (800ec9c <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x70>)
 800ec7c:	801a      	strh	r2, [r3, #0]
 800ec7e:	4a08      	ldr	r2, [pc, #32]	@ (800eca0 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x74>)
 800ec80:	89fb      	ldrh	r3, [r7, #14]
 800ec82:	8013      	strh	r3, [r2, #0]
 800ec84:	4b04      	ldr	r3, [pc, #16]	@ (800ec98 <_ZN8touchgfx3HAL31performDisplayOrientationChangeEv+0x6c>)
 800ec86:	2200      	movs	r2, #0
 800ec88:	701a      	strb	r2, [r3, #0]
 800ec8a:	bf00      	nop
 800ec8c:	3714      	adds	r7, #20
 800ec8e:	46bd      	mov	sp, r7
 800ec90:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ec94:	4770      	bx	lr
 800ec96:	bf00      	nop
 800ec98:	20002f4c 	.word	0x20002f4c
 800ec9c:	20002f4a 	.word	0x20002f4a
 800eca0:	20002f48 	.word	0x20002f48

0800eca4 <_ZN8touchgfx3HAL15InvalidateCacheEv>:
 800eca4:	b480      	push	{r7}
 800eca6:	b083      	sub	sp, #12
 800eca8:	af00      	add	r7, sp, #0
 800ecaa:	6078      	str	r0, [r7, #4]
 800ecac:	bf00      	nop
 800ecae:	370c      	adds	r7, #12
 800ecb0:	46bd      	mov	sp, r7
 800ecb2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecb6:	4770      	bx	lr

0800ecb8 <_ZN8touchgfx3HAL10FlushCacheEv>:
 800ecb8:	b480      	push	{r7}
 800ecba:	b083      	sub	sp, #12
 800ecbc:	af00      	add	r7, sp, #0
 800ecbe:	6078      	str	r0, [r7, #4]
 800ecc0:	bf00      	nop
 800ecc2:	370c      	adds	r7, #12
 800ecc4:	46bd      	mov	sp, r7
 800ecc6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ecca:	4770      	bx	lr

0800eccc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>:
 800eccc:	b580      	push	{r7, lr}
 800ecce:	b082      	sub	sp, #8
 800ecd0:	af00      	add	r7, sp, #0
 800ecd2:	6078      	str	r0, [r7, #4]
 800ecd4:	687b      	ldr	r3, [r7, #4]
 800ecd6:	4618      	mov	r0, r3
 800ecd8:	f002 f870 	bl	8010dbc <_ZN8touchgfx3HAL16flushFrameBufferEv>
 800ecdc:	bf00      	nop
 800ecde:	3708      	adds	r7, #8
 800ece0:	46bd      	mov	sp, r7
 800ece2:	bd80      	pop	{r7, pc}

0800ece4 <_ZN20TouchGFXGeneratedHALD1Ev>:
 800ece4:	b580      	push	{r7, lr}
 800ece6:	b082      	sub	sp, #8
 800ece8:	af00      	add	r7, sp, #0
 800ecea:	6078      	str	r0, [r7, #4]
 800ecec:	4a05      	ldr	r2, [pc, #20]	@ (800ed04 <_ZN20TouchGFXGeneratedHALD1Ev+0x20>)
 800ecee:	687b      	ldr	r3, [r7, #4]
 800ecf0:	601a      	str	r2, [r3, #0]
 800ecf2:	687b      	ldr	r3, [r7, #4]
 800ecf4:	4618      	mov	r0, r3
 800ecf6:	f7ff fe79 	bl	800e9ec <_ZN8touchgfx3HALD1Ev>
 800ecfa:	687b      	ldr	r3, [r7, #4]
 800ecfc:	4618      	mov	r0, r3
 800ecfe:	3708      	adds	r7, #8
 800ed00:	46bd      	mov	sp, r7
 800ed02:	bd80      	pop	{r7, pc}
 800ed04:	08028f64 	.word	0x08028f64

0800ed08 <_ZN20TouchGFXGeneratedHALD0Ev>:
 800ed08:	b580      	push	{r7, lr}
 800ed0a:	b082      	sub	sp, #8
 800ed0c:	af00      	add	r7, sp, #0
 800ed0e:	6078      	str	r0, [r7, #4]
 800ed10:	6878      	ldr	r0, [r7, #4]
 800ed12:	f7ff ffe7 	bl	800ece4 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ed16:	217c      	movs	r1, #124	@ 0x7c
 800ed18:	6878      	ldr	r0, [r7, #4]
 800ed1a:	f016 ffea 	bl	8025cf2 <_ZdlPvj>
 800ed1e:	687b      	ldr	r3, [r7, #4]
 800ed20:	4618      	mov	r0, r3
 800ed22:	3708      	adds	r7, #8
 800ed24:	46bd      	mov	sp, r7
 800ed26:	bd80      	pop	{r7, pc}

0800ed28 <_ZN11TouchGFXHAL16flushFrameBufferEv>:
 800ed28:	b580      	push	{r7, lr}
 800ed2a:	b082      	sub	sp, #8
 800ed2c:	af00      	add	r7, sp, #0
 800ed2e:	6078      	str	r0, [r7, #4]
 800ed30:	687b      	ldr	r3, [r7, #4]
 800ed32:	4618      	mov	r0, r3
 800ed34:	f7ff ffca 	bl	800eccc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferEv>
 800ed38:	bf00      	nop
 800ed3a:	3708      	adds	r7, #8
 800ed3c:	46bd      	mov	sp, r7
 800ed3e:	bd80      	pop	{r7, pc}

0800ed40 <_ZN11TouchGFXHAL10initializeEv>:
 800ed40:	b580      	push	{r7, lr}
 800ed42:	b082      	sub	sp, #8
 800ed44:	af00      	add	r7, sp, #0
 800ed46:	6078      	str	r0, [r7, #4]
 800ed48:	687b      	ldr	r3, [r7, #4]
 800ed4a:	4618      	mov	r0, r3
 800ed4c:	f001 f9aa 	bl	80100a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>
 800ed50:	bf00      	nop
 800ed52:	3708      	adds	r7, #8
 800ed54:	46bd      	mov	sp, r7
 800ed56:	bd80      	pop	{r7, pc}

0800ed58 <_ZNK11TouchGFXHAL17getTFTFrameBufferEv>:
 800ed58:	b580      	push	{r7, lr}
 800ed5a:	b082      	sub	sp, #8
 800ed5c:	af00      	add	r7, sp, #0
 800ed5e:	6078      	str	r0, [r7, #4]
 800ed60:	687b      	ldr	r3, [r7, #4]
 800ed62:	4618      	mov	r0, r3
 800ed64:	f001 fa1c 	bl	80101a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>
 800ed68:	4603      	mov	r3, r0
 800ed6a:	4618      	mov	r0, r3
 800ed6c:	3708      	adds	r7, #8
 800ed6e:	46bd      	mov	sp, r7
 800ed70:	bd80      	pop	{r7, pc}

0800ed72 <_ZN11TouchGFXHAL17setTFTFrameBufferEPt>:
 800ed72:	b580      	push	{r7, lr}
 800ed74:	b082      	sub	sp, #8
 800ed76:	af00      	add	r7, sp, #0
 800ed78:	6078      	str	r0, [r7, #4]
 800ed7a:	6039      	str	r1, [r7, #0]
 800ed7c:	687b      	ldr	r3, [r7, #4]
 800ed7e:	6839      	ldr	r1, [r7, #0]
 800ed80:	4618      	mov	r0, r3
 800ed82:	f001 fa18 	bl	80101b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>
 800ed86:	bf00      	nop
 800ed88:	3708      	adds	r7, #8
 800ed8a:	46bd      	mov	sp, r7
 800ed8c:	bd80      	pop	{r7, pc}

0800ed8e <_ZN11TouchGFXHAL16flushFrameBufferERKN8touchgfx4RectE>:
 800ed8e:	b580      	push	{r7, lr}
 800ed90:	b082      	sub	sp, #8
 800ed92:	af00      	add	r7, sp, #0
 800ed94:	6078      	str	r0, [r7, #4]
 800ed96:	6039      	str	r1, [r7, #0]
 800ed98:	687b      	ldr	r3, [r7, #4]
 800ed9a:	6839      	ldr	r1, [r7, #0]
 800ed9c:	4618      	mov	r0, r3
 800ed9e:	f001 fa15 	bl	80101cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>
 800eda2:	bf00      	nop
 800eda4:	3708      	adds	r7, #8
 800eda6:	46bd      	mov	sp, r7
 800eda8:	bd80      	pop	{r7, pc}

0800edaa <_ZN11TouchGFXHAL9blockCopyEPvPKvm>:
 800edaa:	b580      	push	{r7, lr}
 800edac:	b084      	sub	sp, #16
 800edae:	af00      	add	r7, sp, #0
 800edb0:	60f8      	str	r0, [r7, #12]
 800edb2:	60b9      	str	r1, [r7, #8]
 800edb4:	607a      	str	r2, [r7, #4]
 800edb6:	603b      	str	r3, [r7, #0]
 800edb8:	68f8      	ldr	r0, [r7, #12]
 800edba:	683b      	ldr	r3, [r7, #0]
 800edbc:	687a      	ldr	r2, [r7, #4]
 800edbe:	68b9      	ldr	r1, [r7, #8]
 800edc0:	f001 fa47 	bl	8010252 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>
 800edc4:	4603      	mov	r3, r0
 800edc6:	4618      	mov	r0, r3
 800edc8:	3710      	adds	r7, #16
 800edca:	46bd      	mov	sp, r7
 800edcc:	bd80      	pop	{r7, pc}

0800edce <_ZN11TouchGFXHAL19configureInterruptsEv>:
 800edce:	b580      	push	{r7, lr}
 800edd0:	b082      	sub	sp, #8
 800edd2:	af00      	add	r7, sp, #0
 800edd4:	6078      	str	r0, [r7, #4]
 800edd6:	687b      	ldr	r3, [r7, #4]
 800edd8:	4618      	mov	r0, r3
 800edda:	f001 f993 	bl	8010104 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>
 800edde:	bf00      	nop
 800ede0:	3708      	adds	r7, #8
 800ede2:	46bd      	mov	sp, r7
 800ede4:	bd80      	pop	{r7, pc}

0800ede6 <_ZN11TouchGFXHAL16enableInterruptsEv>:
 800ede6:	b580      	push	{r7, lr}
 800ede8:	b082      	sub	sp, #8
 800edea:	af00      	add	r7, sp, #0
 800edec:	6078      	str	r0, [r7, #4]
 800edee:	687b      	ldr	r3, [r7, #4]
 800edf0:	4618      	mov	r0, r3
 800edf2:	f001 f991 	bl	8010118 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>
 800edf6:	bf00      	nop
 800edf8:	3708      	adds	r7, #8
 800edfa:	46bd      	mov	sp, r7
 800edfc:	bd80      	pop	{r7, pc}

0800edfe <_ZN11TouchGFXHAL17disableInterruptsEv>:
 800edfe:	b580      	push	{r7, lr}
 800ee00:	b082      	sub	sp, #8
 800ee02:	af00      	add	r7, sp, #0
 800ee04:	6078      	str	r0, [r7, #4]
 800ee06:	687b      	ldr	r3, [r7, #4]
 800ee08:	4618      	mov	r0, r3
 800ee0a:	f001 f98f 	bl	801012c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>
 800ee0e:	bf00      	nop
 800ee10:	3708      	adds	r7, #8
 800ee12:	46bd      	mov	sp, r7
 800ee14:	bd80      	pop	{r7, pc}

0800ee16 <_ZN11TouchGFXHAL28enableLCDControllerInterruptEv>:
 800ee16:	b580      	push	{r7, lr}
 800ee18:	b082      	sub	sp, #8
 800ee1a:	af00      	add	r7, sp, #0
 800ee1c:	6078      	str	r0, [r7, #4]
 800ee1e:	687b      	ldr	r3, [r7, #4]
 800ee20:	4618      	mov	r0, r3
 800ee22:	f001 f98d 	bl	8010140 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>
 800ee26:	bf00      	nop
 800ee28:	3708      	adds	r7, #8
 800ee2a:	46bd      	mov	sp, r7
 800ee2c:	bd80      	pop	{r7, pc}

0800ee2e <_ZN11TouchGFXHAL10beginFrameEv>:
 800ee2e:	b580      	push	{r7, lr}
 800ee30:	b082      	sub	sp, #8
 800ee32:	af00      	add	r7, sp, #0
 800ee34:	6078      	str	r0, [r7, #4]
 800ee36:	687b      	ldr	r3, [r7, #4]
 800ee38:	4618      	mov	r0, r3
 800ee3a:	f001 f98b 	bl	8010154 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>
 800ee3e:	4603      	mov	r3, r0
 800ee40:	4618      	mov	r0, r3
 800ee42:	3708      	adds	r7, #8
 800ee44:	46bd      	mov	sp, r7
 800ee46:	bd80      	pop	{r7, pc}

0800ee48 <_ZN11TouchGFXHAL8endFrameEv>:
 800ee48:	b580      	push	{r7, lr}
 800ee4a:	b082      	sub	sp, #8
 800ee4c:	af00      	add	r7, sp, #0
 800ee4e:	6078      	str	r0, [r7, #4]
 800ee50:	687b      	ldr	r3, [r7, #4]
 800ee52:	4618      	mov	r0, r3
 800ee54:	f001 f98b 	bl	801016e <_ZN20TouchGFXGeneratedHAL8endFrameEv>
 800ee58:	bf00      	nop
 800ee5a:	3708      	adds	r7, #8
 800ee5c:	46bd      	mov	sp, r7
 800ee5e:	bd80      	pop	{r7, pc}

0800ee60 <_ZN11TouchGFXHALD1Ev>:
 800ee60:	b580      	push	{r7, lr}
 800ee62:	b082      	sub	sp, #8
 800ee64:	af00      	add	r7, sp, #0
 800ee66:	6078      	str	r0, [r7, #4]
 800ee68:	4a05      	ldr	r2, [pc, #20]	@ (800ee80 <_ZN11TouchGFXHALD1Ev+0x20>)
 800ee6a:	687b      	ldr	r3, [r7, #4]
 800ee6c:	601a      	str	r2, [r3, #0]
 800ee6e:	687b      	ldr	r3, [r7, #4]
 800ee70:	4618      	mov	r0, r3
 800ee72:	f7ff ff37 	bl	800ece4 <_ZN20TouchGFXGeneratedHALD1Ev>
 800ee76:	687b      	ldr	r3, [r7, #4]
 800ee78:	4618      	mov	r0, r3
 800ee7a:	3708      	adds	r7, #8
 800ee7c:	46bd      	mov	sp, r7
 800ee7e:	bd80      	pop	{r7, pc}
 800ee80:	08028d18 	.word	0x08028d18

0800ee84 <_ZN11TouchGFXHALD0Ev>:
 800ee84:	b580      	push	{r7, lr}
 800ee86:	b082      	sub	sp, #8
 800ee88:	af00      	add	r7, sp, #0
 800ee8a:	6078      	str	r0, [r7, #4]
 800ee8c:	6878      	ldr	r0, [r7, #4]
 800ee8e:	f7ff ffe7 	bl	800ee60 <_ZN11TouchGFXHALD1Ev>
 800ee92:	217c      	movs	r1, #124	@ 0x7c
 800ee94:	6878      	ldr	r0, [r7, #4]
 800ee96:	f016 ff2c 	bl	8025cf2 <_ZdlPvj>
 800ee9a:	687b      	ldr	r3, [r7, #4]
 800ee9c:	4618      	mov	r0, r3
 800ee9e:	3708      	adds	r7, #8
 800eea0:	46bd      	mov	sp, r7
 800eea2:	bd80      	pop	{r7, pc}

0800eea4 <_ZN8touchgfx10OSWrappers10initializeEv>:

/*
 * Initialize frame buffer semaphore and queue/mutex for VSYNC signal.
 */
void OSWrappers::initialize()
{
 800eea4:	b480      	push	{r7}
 800eea6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800eea8:	4b05      	ldr	r3, [pc, #20]	@ (800eec0 <_ZN8touchgfx10OSWrappers10initializeEv+0x1c>)
 800eeaa:	2200      	movs	r2, #0
 800eeac:	601a      	str	r2, [r3, #0]
    vsync_sem = 0;
 800eeae:	4b05      	ldr	r3, [pc, #20]	@ (800eec4 <_ZN8touchgfx10OSWrappers10initializeEv+0x20>)
 800eeb0:	2200      	movs	r2, #0
 800eeb2:	601a      	str	r2, [r3, #0]
}
 800eeb4:	bf00      	nop
 800eeb6:	46bd      	mov	sp, r7
 800eeb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eebc:	4770      	bx	lr
 800eebe:	bf00      	nop
 800eec0:	20000680 	.word	0x20000680
 800eec4:	20000684 	.word	0x20000684

0800eec8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>:

/*
 * Take the frame buffer semaphore. Blocks until semaphore is available.
 */
void OSWrappers::takeFrameBufferSemaphore()
{
 800eec8:	b480      	push	{r7}
 800eeca:	af00      	add	r7, sp, #0
    while (fb_sem);
 800eecc:	bf00      	nop
 800eece:	4b08      	ldr	r3, [pc, #32]	@ (800eef0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800eed0:	681b      	ldr	r3, [r3, #0]
 800eed2:	2b00      	cmp	r3, #0
 800eed4:	bf14      	ite	ne
 800eed6:	2301      	movne	r3, #1
 800eed8:	2300      	moveq	r3, #0
 800eeda:	b2db      	uxtb	r3, r3
 800eedc:	2b00      	cmp	r3, #0
 800eede:	d1f6      	bne.n	800eece <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x6>
    fb_sem = 1;
 800eee0:	4b03      	ldr	r3, [pc, #12]	@ (800eef0 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv+0x28>)
 800eee2:	2201      	movs	r2, #1
 800eee4:	601a      	str	r2, [r3, #0]
}
 800eee6:	bf00      	nop
 800eee8:	46bd      	mov	sp, r7
 800eeea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800eeee:	4770      	bx	lr
 800eef0:	20000680 	.word	0x20000680

0800eef4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>:

/*
 * Release the frame buffer semaphore.
 */
void OSWrappers::giveFrameBufferSemaphore()
{
 800eef4:	b480      	push	{r7}
 800eef6:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800eef8:	4b03      	ldr	r3, [pc, #12]	@ (800ef08 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv+0x14>)
 800eefa:	2200      	movs	r2, #0
 800eefc:	601a      	str	r2, [r3, #0]
}
 800eefe:	bf00      	nop
 800ef00:	46bd      	mov	sp, r7
 800ef02:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef06:	4770      	bx	lr
 800ef08:	20000680 	.word	0x20000680

0800ef0c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>:
 *
 * Note must return immediately! This function does not care who has the taken the semaphore,
 * it only serves to make sure that the semaphore is taken by someone.
 */
void OSWrappers::tryTakeFrameBufferSemaphore()
{
 800ef0c:	b480      	push	{r7}
 800ef0e:	af00      	add	r7, sp, #0
    fb_sem = 1;
 800ef10:	4b03      	ldr	r3, [pc, #12]	@ (800ef20 <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv+0x14>)
 800ef12:	2201      	movs	r2, #1
 800ef14:	601a      	str	r2, [r3, #0]
}
 800ef16:	bf00      	nop
 800ef18:	46bd      	mov	sp, r7
 800ef1a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef1e:	4770      	bx	lr
 800ef20:	20000680 	.word	0x20000680

0800ef24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>:
 *
 * Release the frame buffer semaphore in a way that is safe in interrupt context.
 * Called from ISR.
 */
void OSWrappers::giveFrameBufferSemaphoreFromISR()
{
 800ef24:	b480      	push	{r7}
 800ef26:	af00      	add	r7, sp, #0
    fb_sem = 0;
 800ef28:	4b03      	ldr	r3, [pc, #12]	@ (800ef38 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv+0x14>)
 800ef2a:	2200      	movs	r2, #0
 800ef2c:	601a      	str	r2, [r3, #0]
}
 800ef2e:	bf00      	nop
 800ef30:	46bd      	mov	sp, r7
 800ef32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef36:	4770      	bx	lr
 800ef38:	20000680 	.word	0x20000680

0800ef3c <_ZN8touchgfx10OSWrappers11signalVSyncEv>:
 *
 * Note This function is called from an ISR, and should (depending on OS) trigger a
 * scheduling.
 */
void OSWrappers::signalVSync()
{
 800ef3c:	b480      	push	{r7}
 800ef3e:	af00      	add	r7, sp, #0
    vsync_sem = 1;
 800ef40:	4b03      	ldr	r3, [pc, #12]	@ (800ef50 <_ZN8touchgfx10OSWrappers11signalVSyncEv+0x14>)
 800ef42:	2201      	movs	r2, #1
 800ef44:	601a      	str	r2, [r3, #0]
}
 800ef46:	bf00      	nop
 800ef48:	46bd      	mov	sp, r7
 800ef4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef4e:	4770      	bx	lr
 800ef50:	20000684 	.word	0x20000684

0800ef54 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>:
/*
  * Signal that the rendering of the frame has completed. Used by
  * some systems to avoid using any previous vsync.
  */
void OSWrappers::signalRenderingDone()
{
 800ef54:	b480      	push	{r7}
 800ef56:	af00      	add	r7, sp, #0
    vsync_sem = 0;
 800ef58:	4b03      	ldr	r3, [pc, #12]	@ (800ef68 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv+0x14>)
 800ef5a:	2200      	movs	r2, #0
 800ef5c:	601a      	str	r2, [r3, #0]
}
 800ef5e:	bf00      	nop
 800ef60:	46bd      	mov	sp, r7
 800ef62:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef66:	4770      	bx	lr
 800ef68:	20000684 	.word	0x20000684

0800ef6c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>:
 * @note signalRenderingDone is typically used together with this function.
 *
 * @return True if VSync occurred.
 */
bool OSWrappers::isVSyncAvailable()
{
 800ef6c:	b480      	push	{r7}
 800ef6e:	af00      	add	r7, sp, #0
    return vsync_sem;
 800ef70:	4b05      	ldr	r3, [pc, #20]	@ (800ef88 <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv+0x1c>)
 800ef72:	681b      	ldr	r3, [r3, #0]
 800ef74:	2b00      	cmp	r3, #0
 800ef76:	bf14      	ite	ne
 800ef78:	2301      	movne	r3, #1
 800ef7a:	2300      	moveq	r3, #0
 800ef7c:	b2db      	uxtb	r3, r3
}
 800ef7e:	4618      	mov	r0, r3
 800ef80:	46bd      	mov	sp, r7
 800ef82:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef86:	4770      	bx	lr
 800ef88:	20000684 	.word	0x20000684

0800ef8c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>:
/*
 * This function check if a VSYNC has occured.
 * If VSYNC has occured, signal TouchGFX to start a rendering
 */
void OSWrappers::waitForVSync()
{
 800ef8c:	b580      	push	{r7, lr}
 800ef8e:	af00      	add	r7, sp, #0
    if (vsync_sem)
 800ef90:	4b0a      	ldr	r3, [pc, #40]	@ (800efbc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800ef92:	681b      	ldr	r3, [r3, #0]
 800ef94:	2b00      	cmp	r3, #0
 800ef96:	bf14      	ite	ne
 800ef98:	2301      	movne	r3, #1
 800ef9a:	2300      	moveq	r3, #0
 800ef9c:	b2db      	uxtb	r3, r3
 800ef9e:	2b00      	cmp	r3, #0
 800efa0:	d00a      	beq.n	800efb8 <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x2c>
    {
        vsync_sem = 0;
 800efa2:	4b06      	ldr	r3, [pc, #24]	@ (800efbc <_ZN8touchgfx10OSWrappers12waitForVSyncEv+0x30>)
 800efa4:	2200      	movs	r2, #0
 800efa6:	601a      	str	r2, [r3, #0]
        HAL::getInstance()->backPorchExited();
 800efa8:	f7f9 fbf6 	bl	8008798 <_ZN8touchgfx3HAL11getInstanceEv>
 800efac:	4603      	mov	r3, r0
 800efae:	681a      	ldr	r2, [r3, #0]
 800efb0:	3270      	adds	r2, #112	@ 0x70
 800efb2:	6812      	ldr	r2, [r2, #0]
 800efb4:	4618      	mov	r0, r3
 800efb6:	4790      	blx	r2
    }
}
 800efb8:	bf00      	nop
 800efba:	bd80      	pop	{r7, pc}
 800efbc:	20000684 	.word	0x20000684

0800efc0 <_ZN8touchgfx9DMA_QueueD1Ev>:
 800efc0:	b480      	push	{r7}
 800efc2:	b083      	sub	sp, #12
 800efc4:	af00      	add	r7, sp, #0
 800efc6:	6078      	str	r0, [r7, #4]
 800efc8:	4a04      	ldr	r2, [pc, #16]	@ (800efdc <_ZN8touchgfx9DMA_QueueD1Ev+0x1c>)
 800efca:	687b      	ldr	r3, [r7, #4]
 800efcc:	601a      	str	r2, [r3, #0]
 800efce:	687b      	ldr	r3, [r7, #4]
 800efd0:	4618      	mov	r0, r3
 800efd2:	370c      	adds	r7, #12
 800efd4:	46bd      	mov	sp, r7
 800efd6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800efda:	4770      	bx	lr
 800efdc:	08028e40 	.word	0x08028e40

0800efe0 <_ZN8touchgfx9DMA_QueueD0Ev>:
 800efe0:	b580      	push	{r7, lr}
 800efe2:	b082      	sub	sp, #8
 800efe4:	af00      	add	r7, sp, #0
 800efe6:	6078      	str	r0, [r7, #4]
 800efe8:	6878      	ldr	r0, [r7, #4]
 800efea:	f7ff ffe9 	bl	800efc0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800efee:	2104      	movs	r1, #4
 800eff0:	6878      	ldr	r0, [r7, #4]
 800eff2:	f016 fe7e 	bl	8025cf2 <_ZdlPvj>
 800eff6:	687b      	ldr	r3, [r7, #4]
 800eff8:	4618      	mov	r0, r3
 800effa:	3708      	adds	r7, #8
 800effc:	46bd      	mov	sp, r7
 800effe:	bd80      	pop	{r7, pc}

0800f000 <_ZN8touchgfx13DMA_Interface10initializeEv>:
 800f000:	b480      	push	{r7}
 800f002:	b083      	sub	sp, #12
 800f004:	af00      	add	r7, sp, #0
 800f006:	6078      	str	r0, [r7, #4]
 800f008:	bf00      	nop
 800f00a:	370c      	adds	r7, #12
 800f00c:	46bd      	mov	sp, r7
 800f00e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f012:	4770      	bx	lr

0800f014 <_ZN8touchgfx13DMA_Interface10getDMATypeEv>:
 800f014:	b480      	push	{r7}
 800f016:	b083      	sub	sp, #12
 800f018:	af00      	add	r7, sp, #0
 800f01a:	6078      	str	r0, [r7, #4]
 800f01c:	2300      	movs	r3, #0
 800f01e:	4618      	mov	r0, r3
 800f020:	370c      	adds	r7, #12
 800f022:	46bd      	mov	sp, r7
 800f024:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f028:	4770      	bx	lr
	...

0800f02c <_ZN8touchgfx13DMA_InterfaceD1Ev>:
 800f02c:	b480      	push	{r7}
 800f02e:	b083      	sub	sp, #12
 800f030:	af00      	add	r7, sp, #0
 800f032:	6078      	str	r0, [r7, #4]
 800f034:	4a04      	ldr	r2, [pc, #16]	@ (800f048 <_ZN8touchgfx13DMA_InterfaceD1Ev+0x1c>)
 800f036:	687b      	ldr	r3, [r7, #4]
 800f038:	601a      	str	r2, [r3, #0]
 800f03a:	687b      	ldr	r3, [r7, #4]
 800f03c:	4618      	mov	r0, r3
 800f03e:	370c      	adds	r7, #12
 800f040:	46bd      	mov	sp, r7
 800f042:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f046:	4770      	bx	lr
 800f048:	08029210 	.word	0x08029210

0800f04c <_ZN8touchgfx13DMA_InterfaceD0Ev>:
 800f04c:	b580      	push	{r7, lr}
 800f04e:	b082      	sub	sp, #8
 800f050:	af00      	add	r7, sp, #0
 800f052:	6078      	str	r0, [r7, #4]
 800f054:	6878      	ldr	r0, [r7, #4]
 800f056:	f7ff ffe9 	bl	800f02c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800f05a:	210c      	movs	r1, #12
 800f05c:	6878      	ldr	r0, [r7, #4]
 800f05e:	f016 fe48 	bl	8025cf2 <_ZdlPvj>
 800f062:	687b      	ldr	r3, [r7, #4]
 800f064:	4618      	mov	r0, r3
 800f066:	3708      	adds	r7, #8
 800f068:	46bd      	mov	sp, r7
 800f06a:	bd80      	pop	{r7, pc}

0800f06c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>:
 800f06c:	b480      	push	{r7}
 800f06e:	b083      	sub	sp, #12
 800f070:	af00      	add	r7, sp, #0
 800f072:	6078      	str	r0, [r7, #4]
 800f074:	6039      	str	r1, [r7, #0]
 800f076:	4a09      	ldr	r2, [pc, #36]	@ (800f09c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE+0x30>)
 800f078:	687b      	ldr	r3, [r7, #4]
 800f07a:	601a      	str	r2, [r3, #0]
 800f07c:	687b      	ldr	r3, [r7, #4]
 800f07e:	683a      	ldr	r2, [r7, #0]
 800f080:	605a      	str	r2, [r3, #4]
 800f082:	687b      	ldr	r3, [r7, #4]
 800f084:	2200      	movs	r2, #0
 800f086:	721a      	strb	r2, [r3, #8]
 800f088:	687b      	ldr	r3, [r7, #4]
 800f08a:	2200      	movs	r2, #0
 800f08c:	725a      	strb	r2, [r3, #9]
 800f08e:	687b      	ldr	r3, [r7, #4]
 800f090:	4618      	mov	r0, r3
 800f092:	370c      	adds	r7, #12
 800f094:	46bd      	mov	sp, r7
 800f096:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f09a:	4770      	bx	lr
 800f09c:	08029210 	.word	0x08029210

0800f0a0 <_ZN8STM32DMA18signalDMAInterruptEv>:
 800f0a0:	b480      	push	{r7}
 800f0a2:	b083      	sub	sp, #12
 800f0a4:	af00      	add	r7, sp, #0
 800f0a6:	6078      	str	r0, [r7, #4]
 800f0a8:	bf00      	nop
 800f0aa:	370c      	adds	r7, #12
 800f0ac:	46bd      	mov	sp, r7
 800f0ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0b2:	4770      	bx	lr

0800f0b4 <_ZN8STM32DMA5flushEv>:
 800f0b4:	b480      	push	{r7}
 800f0b6:	b083      	sub	sp, #12
 800f0b8:	af00      	add	r7, sp, #0
 800f0ba:	6078      	str	r0, [r7, #4]
 800f0bc:	bf00      	nop
 800f0be:	370c      	adds	r7, #12
 800f0c0:	46bd      	mov	sp, r7
 800f0c2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f0c6:	4770      	bx	lr

0800f0c8 <_ZN8touchgfx6BlitOpC1Ev>:
 800f0c8:	b580      	push	{r7, lr}
 800f0ca:	b082      	sub	sp, #8
 800f0cc:	af00      	add	r7, sp, #0
 800f0ce:	6078      	str	r0, [r7, #4]
 800f0d0:	687b      	ldr	r3, [r7, #4]
 800f0d2:	330c      	adds	r3, #12
 800f0d4:	4618      	mov	r0, r3
 800f0d6:	f7fa fcab 	bl	8009a30 <_ZN8touchgfx9colortypeC1Ev>
 800f0da:	687b      	ldr	r3, [r7, #4]
 800f0dc:	4618      	mov	r0, r3
 800f0de:	3708      	adds	r7, #8
 800f0e0:	46bd      	mov	sp, r7
 800f0e2:	bd80      	pop	{r7, pc}

0800f0e4 <_ZN8STM32DMAC1Ev>:
 800f0e4:	b580      	push	{r7, lr}
 800f0e6:	b082      	sub	sp, #8
 800f0e8:	af00      	add	r7, sp, #0
 800f0ea:	6078      	str	r0, [r7, #4]
 800f0ec:	687a      	ldr	r2, [r7, #4]
 800f0ee:	687b      	ldr	r3, [r7, #4]
 800f0f0:	330c      	adds	r3, #12
 800f0f2:	4619      	mov	r1, r3
 800f0f4:	4610      	mov	r0, r2
 800f0f6:	f7ff ffb9 	bl	800f06c <_ZN8touchgfx13DMA_InterfaceC1ERNS_9DMA_QueueE>
 800f0fa:	4a0b      	ldr	r2, [pc, #44]	@ (800f128 <_ZN8STM32DMAC1Ev+0x44>)
 800f0fc:	687b      	ldr	r3, [r7, #4]
 800f0fe:	601a      	str	r2, [r3, #0]
 800f100:	687b      	ldr	r3, [r7, #4]
 800f102:	f103 000c 	add.w	r0, r3, #12
 800f106:	687b      	ldr	r3, [r7, #4]
 800f108:	3320      	adds	r3, #32
 800f10a:	2201      	movs	r2, #1
 800f10c:	4619      	mov	r1, r3
 800f10e:	f002 fd31 	bl	8011b74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>
 800f112:	687b      	ldr	r3, [r7, #4]
 800f114:	3320      	adds	r3, #32
 800f116:	4618      	mov	r0, r3
 800f118:	f7ff ffd6 	bl	800f0c8 <_ZN8touchgfx6BlitOpC1Ev>
 800f11c:	687b      	ldr	r3, [r7, #4]
 800f11e:	4618      	mov	r0, r3
 800f120:	3708      	adds	r7, #8
 800f122:	46bd      	mov	sp, r7
 800f124:	bd80      	pop	{r7, pc}
 800f126:	bf00      	nop
 800f128:	08028df0 	.word	0x08028df0

0800f12c <_ZN8STM32DMA11getBlitCapsEv>:
 800f12c:	b480      	push	{r7}
 800f12e:	b083      	sub	sp, #12
 800f130:	af00      	add	r7, sp, #0
 800f132:	6078      	str	r0, [r7, #4]
 800f134:	2300      	movs	r3, #0
 800f136:	4618      	mov	r0, r3
 800f138:	370c      	adds	r7, #12
 800f13a:	46bd      	mov	sp, r7
 800f13c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f140:	4770      	bx	lr
	...

0800f144 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE>:
 800f144:	b580      	push	{r7, lr}
 800f146:	b082      	sub	sp, #8
 800f148:	af00      	add	r7, sp, #0
 800f14a:	6078      	str	r0, [r7, #4]
 800f14c:	6039      	str	r1, [r7, #0]
 800f14e:	4b03      	ldr	r3, [pc, #12]	@ (800f15c <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x18>)
 800f150:	4a03      	ldr	r2, [pc, #12]	@ (800f160 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x1c>)
 800f152:	2122      	movs	r1, #34	@ 0x22
 800f154:	4803      	ldr	r0, [pc, #12]	@ (800f164 <_ZN8STM32DMA13setupDataCopyERKN8touchgfx6BlitOpE+0x20>)
 800f156:	f016 fe7b 	bl	8025e50 <__assert_func>
 800f15a:	bf00      	nop
 800f15c:	08027980 	.word	0x08027980
 800f160:	080279a4 	.word	0x080279a4
 800f164:	080279e4 	.word	0x080279e4

0800f168 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE>:
 800f168:	b580      	push	{r7, lr}
 800f16a:	b082      	sub	sp, #8
 800f16c:	af00      	add	r7, sp, #0
 800f16e:	6078      	str	r0, [r7, #4]
 800f170:	6039      	str	r1, [r7, #0]
 800f172:	4b03      	ldr	r3, [pc, #12]	@ (800f180 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x18>)
 800f174:	4a03      	ldr	r2, [pc, #12]	@ (800f184 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x1c>)
 800f176:	2127      	movs	r1, #39	@ 0x27
 800f178:	4803      	ldr	r0, [pc, #12]	@ (800f188 <_ZN8STM32DMA13setupDataFillERKN8touchgfx6BlitOpE+0x20>)
 800f17a:	f016 fe69 	bl	8025e50 <__assert_func>
 800f17e:	bf00      	nop
 800f180:	08027980 	.word	0x08027980
 800f184:	08027a10 	.word	0x08027a10
 800f188:	080279e4 	.word	0x080279e4

0800f18c <_ZN8STM32DMAD1Ev>:
 800f18c:	b580      	push	{r7, lr}
 800f18e:	b082      	sub	sp, #8
 800f190:	af00      	add	r7, sp, #0
 800f192:	6078      	str	r0, [r7, #4]
 800f194:	4a08      	ldr	r2, [pc, #32]	@ (800f1b8 <_ZN8STM32DMAD1Ev+0x2c>)
 800f196:	687b      	ldr	r3, [r7, #4]
 800f198:	601a      	str	r2, [r3, #0]
 800f19a:	687b      	ldr	r3, [r7, #4]
 800f19c:	330c      	adds	r3, #12
 800f19e:	4618      	mov	r0, r3
 800f1a0:	f000 f81c 	bl	800f1dc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800f1a4:	687b      	ldr	r3, [r7, #4]
 800f1a6:	4618      	mov	r0, r3
 800f1a8:	f7ff ff40 	bl	800f02c <_ZN8touchgfx13DMA_InterfaceD1Ev>
 800f1ac:	687b      	ldr	r3, [r7, #4]
 800f1ae:	4618      	mov	r0, r3
 800f1b0:	3708      	adds	r7, #8
 800f1b2:	46bd      	mov	sp, r7
 800f1b4:	bd80      	pop	{r7, pc}
 800f1b6:	bf00      	nop
 800f1b8:	08028df0 	.word	0x08028df0

0800f1bc <_ZN8STM32DMAD0Ev>:
 800f1bc:	b580      	push	{r7, lr}
 800f1be:	b082      	sub	sp, #8
 800f1c0:	af00      	add	r7, sp, #0
 800f1c2:	6078      	str	r0, [r7, #4]
 800f1c4:	6878      	ldr	r0, [r7, #4]
 800f1c6:	f7ff ffe1 	bl	800f18c <_ZN8STM32DMAD1Ev>
 800f1ca:	2144      	movs	r1, #68	@ 0x44
 800f1cc:	6878      	ldr	r0, [r7, #4]
 800f1ce:	f016 fd90 	bl	8025cf2 <_ZdlPvj>
 800f1d2:	687b      	ldr	r3, [r7, #4]
 800f1d4:	4618      	mov	r0, r3
 800f1d6:	3708      	adds	r7, #8
 800f1d8:	46bd      	mov	sp, r7
 800f1da:	bd80      	pop	{r7, pc}

0800f1dc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>:
 800f1dc:	b580      	push	{r7, lr}
 800f1de:	b082      	sub	sp, #8
 800f1e0:	af00      	add	r7, sp, #0
 800f1e2:	6078      	str	r0, [r7, #4]
 800f1e4:	4a05      	ldr	r2, [pc, #20]	@ (800f1fc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev+0x20>)
 800f1e6:	687b      	ldr	r3, [r7, #4]
 800f1e8:	601a      	str	r2, [r3, #0]
 800f1ea:	687b      	ldr	r3, [r7, #4]
 800f1ec:	4618      	mov	r0, r3
 800f1ee:	f7ff fee7 	bl	800efc0 <_ZN8touchgfx9DMA_QueueD1Ev>
 800f1f2:	687b      	ldr	r3, [r7, #4]
 800f1f4:	4618      	mov	r0, r3
 800f1f6:	3708      	adds	r7, #8
 800f1f8:	46bd      	mov	sp, r7
 800f1fa:	bd80      	pop	{r7, pc}
 800f1fc:	08029260 	.word	0x08029260

0800f200 <_ZN8touchgfx17LockFreeDMA_QueueD0Ev>:
 800f200:	b580      	push	{r7, lr}
 800f202:	b082      	sub	sp, #8
 800f204:	af00      	add	r7, sp, #0
 800f206:	6078      	str	r0, [r7, #4]
 800f208:	6878      	ldr	r0, [r7, #4]
 800f20a:	f7ff ffe7 	bl	800f1dc <_ZN8touchgfx17LockFreeDMA_QueueD1Ev>
 800f20e:	2114      	movs	r1, #20
 800f210:	6878      	ldr	r0, [r7, #4]
 800f212:	f016 fd6e 	bl	8025cf2 <_ZdlPvj>
 800f216:	687b      	ldr	r3, [r7, #4]
 800f218:	4618      	mov	r0, r3
 800f21a:	3708      	adds	r7, #8
 800f21c:	46bd      	mov	sp, r7
 800f21e:	bd80      	pop	{r7, pc}

0800f220 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>:
     * Registers an array of texts. This function is called automatically from
     * touchgfx_generic_init(). Should not be called under normal circumstances.
     *
     * @param  t The array of texts.
     */
    static void registerTexts(const Texts* t)
 800f220:	b480      	push	{r7}
 800f222:	b083      	sub	sp, #12
 800f224:	af00      	add	r7, sp, #0
 800f226:	6078      	str	r0, [r7, #4]
    {
        texts = t;
 800f228:	4a04      	ldr	r2, [pc, #16]	@ (800f23c <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE+0x1c>)
 800f22a:	687b      	ldr	r3, [r7, #4]
 800f22c:	6013      	str	r3, [r2, #0]
    }
 800f22e:	bf00      	nop
 800f230:	370c      	adds	r7, #12
 800f232:	46bd      	mov	sp, r7
 800f234:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f238:	4770      	bx	lr
 800f23a:	bf00      	nop
 800f23c:	20002fb0 	.word	0x20002fb0

0800f240 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>:
     * @param [in] scr  A memory partition containing enough memory to hold the largest view.
     * @param [in] tra  A memory partition containing enough memory to hold the largest
     *                  transition.
     * @param [in] app  A reference to the MVPApplication instance.
     */
    MVPHeap(AbstractPartition& pres,
 800f240:	b480      	push	{r7}
 800f242:	b085      	sub	sp, #20
 800f244:	af00      	add	r7, sp, #0
 800f246:	60f8      	str	r0, [r7, #12]
 800f248:	60b9      	str	r1, [r7, #8]
 800f24a:	607a      	str	r2, [r7, #4]
 800f24c:	603b      	str	r3, [r7, #0]
            AbstractPartition& tra,
            MVPApplication& app)
        : presenterStorage(pres),
          screenStorage(scr),
          transitionStorage(tra),
          frontendApplication(app)
 800f24e:	4a0b      	ldr	r2, [pc, #44]	@ (800f27c <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE+0x3c>)
 800f250:	68fb      	ldr	r3, [r7, #12]
 800f252:	601a      	str	r2, [r3, #0]
        : presenterStorage(pres),
 800f254:	68fb      	ldr	r3, [r7, #12]
 800f256:	68ba      	ldr	r2, [r7, #8]
 800f258:	605a      	str	r2, [r3, #4]
          screenStorage(scr),
 800f25a:	68fb      	ldr	r3, [r7, #12]
 800f25c:	687a      	ldr	r2, [r7, #4]
 800f25e:	609a      	str	r2, [r3, #8]
          transitionStorage(tra),
 800f260:	68fb      	ldr	r3, [r7, #12]
 800f262:	683a      	ldr	r2, [r7, #0]
 800f264:	60da      	str	r2, [r3, #12]
          frontendApplication(app)
 800f266:	68fb      	ldr	r3, [r7, #12]
 800f268:	69ba      	ldr	r2, [r7, #24]
 800f26a:	611a      	str	r2, [r3, #16]
    {
    }
 800f26c:	68fb      	ldr	r3, [r7, #12]
 800f26e:	4618      	mov	r0, r3
 800f270:	3714      	adds	r7, #20
 800f272:	46bd      	mov	sp, r7
 800f274:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f278:	4770      	bx	lr
 800f27a:	bf00      	nop
 800f27c:	08028f28 	.word	0x08028f28

0800f280 <_ZN8touchgfx7MVPHeapD1Ev>:

    /** Finalizes an instance of the MVPHeap class. */
    virtual ~MVPHeap()
 800f280:	b480      	push	{r7}
 800f282:	b083      	sub	sp, #12
 800f284:	af00      	add	r7, sp, #0
 800f286:	6078      	str	r0, [r7, #4]
    {
 800f288:	4a04      	ldr	r2, [pc, #16]	@ (800f29c <_ZN8touchgfx7MVPHeapD1Ev+0x1c>)
 800f28a:	687b      	ldr	r3, [r7, #4]
 800f28c:	601a      	str	r2, [r3, #0]
    }
 800f28e:	687b      	ldr	r3, [r7, #4]
 800f290:	4618      	mov	r0, r3
 800f292:	370c      	adds	r7, #12
 800f294:	46bd      	mov	sp, r7
 800f296:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f29a:	4770      	bx	lr
 800f29c:	08028f28 	.word	0x08028f28

0800f2a0 <_ZN8touchgfx7MVPHeapD0Ev>:
    virtual ~MVPHeap()
 800f2a0:	b580      	push	{r7, lr}
 800f2a2:	b082      	sub	sp, #8
 800f2a4:	af00      	add	r7, sp, #0
 800f2a6:	6078      	str	r0, [r7, #4]
    }
 800f2a8:	6878      	ldr	r0, [r7, #4]
 800f2aa:	f7ff ffe9 	bl	800f280 <_ZN8touchgfx7MVPHeapD1Ev>
 800f2ae:	2114      	movs	r1, #20
 800f2b0:	6878      	ldr	r0, [r7, #4]
 800f2b2:	f016 fd1e 	bl	8025cf2 <_ZdlPvj>
 800f2b6:	687b      	ldr	r3, [r7, #4]
 800f2b8:	4618      	mov	r0, r3
 800f2ba:	3708      	adds	r7, #8
 800f2bc:	46bd      	mov	sp, r7
 800f2be:	bd80      	pop	{r7, pc}

0800f2c0 <_ZN8touchgfx3LCDD1Ev>:
        : textureMapperClass(0), vectorFontRenderer(0)
    {
    }

    /** Finalizes an instance of the LCD class. */
    virtual ~LCD()
 800f2c0:	b480      	push	{r7}
 800f2c2:	b083      	sub	sp, #12
 800f2c4:	af00      	add	r7, sp, #0
 800f2c6:	6078      	str	r0, [r7, #4]
    {
 800f2c8:	4a04      	ldr	r2, [pc, #16]	@ (800f2dc <_ZN8touchgfx3LCDD1Ev+0x1c>)
 800f2ca:	687b      	ldr	r3, [r7, #4]
 800f2cc:	601a      	str	r2, [r3, #0]
    }
 800f2ce:	687b      	ldr	r3, [r7, #4]
 800f2d0:	4618      	mov	r0, r3
 800f2d2:	370c      	adds	r7, #12
 800f2d4:	46bd      	mov	sp, r7
 800f2d6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2da:	4770      	bx	lr
 800f2dc:	08029644 	.word	0x08029644

0800f2e0 <_ZN8touchgfx3LCDD0Ev>:
    virtual ~LCD()
 800f2e0:	b580      	push	{r7, lr}
 800f2e2:	b082      	sub	sp, #8
 800f2e4:	af00      	add	r7, sp, #0
 800f2e6:	6078      	str	r0, [r7, #4]
    }
 800f2e8:	6878      	ldr	r0, [r7, #4]
 800f2ea:	f7ff ffe9 	bl	800f2c0 <_ZN8touchgfx3LCDD1Ev>
 800f2ee:	210c      	movs	r1, #12
 800f2f0:	6878      	ldr	r0, [r7, #4]
 800f2f2:	f016 fcfe 	bl	8025cf2 <_ZdlPvj>
 800f2f6:	687b      	ldr	r3, [r7, #4]
 800f2f8:	4618      	mov	r0, r3
 800f2fa:	3708      	adds	r7, #8
 800f2fc:	46bd      	mov	sp, r7
 800f2fe:	bd80      	pop	{r7, pc}

0800f300 <_ZN8touchgfx8Gestures9DragStateC1Ev>:
    static const uint8_t MIN_VELOCITY_AT_RELEASE_BEFORE_SWIPE = 3;

    /** Defines the state of a drag. */
    struct DragState
    {
        DragState()
 800f300:	b480      	push	{r7}
 800f302:	b083      	sub	sp, #12
 800f304:	af00      	add	r7, sp, #0
 800f306:	6078      	str	r0, [r7, #4]
            : startX(0),
 800f308:	687b      	ldr	r3, [r7, #4]
 800f30a:	2200      	movs	r2, #0
 800f30c:	801a      	strh	r2, [r3, #0]
              startY(0),
 800f30e:	687b      	ldr	r3, [r7, #4]
 800f310:	2200      	movs	r2, #0
 800f312:	805a      	strh	r2, [r3, #2]
              downX(0),
 800f314:	687b      	ldr	r3, [r7, #4]
 800f316:	2200      	movs	r2, #0
 800f318:	809a      	strh	r2, [r3, #4]
              downY(0),
 800f31a:	687b      	ldr	r3, [r7, #4]
 800f31c:	2200      	movs	r2, #0
 800f31e:	80da      	strh	r2, [r3, #6]
              tickCount(0),
 800f320:	687b      	ldr	r3, [r7, #4]
 800f322:	2200      	movs	r2, #0
 800f324:	811a      	strh	r2, [r3, #8]
              velocityX(0),
 800f326:	687b      	ldr	r3, [r7, #4]
 800f328:	2200      	movs	r2, #0
 800f32a:	815a      	strh	r2, [r3, #10]
              velocityY(0),
 800f32c:	687b      	ldr	r3, [r7, #4]
 800f32e:	2200      	movs	r2, #0
 800f330:	819a      	strh	r2, [r3, #12]
              inProgress(false)
 800f332:	687b      	ldr	r3, [r7, #4]
 800f334:	2200      	movs	r2, #0
 800f336:	739a      	strb	r2, [r3, #14]
        {
        }
 800f338:	687b      	ldr	r3, [r7, #4]
 800f33a:	4618      	mov	r0, r3
 800f33c:	370c      	adds	r7, #12
 800f33e:	46bd      	mov	sp, r7
 800f340:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f344:	4770      	bx	lr

0800f346 <_ZN8touchgfx8GesturesC1Ev>:
        bool inProgress;    ///< Whether a drag is in progress or not
    };

public:
    /** Default constructor. Does nothing. */
    Gestures()
 800f346:	b580      	push	{r7, lr}
 800f348:	b082      	sub	sp, #8
 800f34a:	af00      	add	r7, sp, #0
 800f34c:	6078      	str	r0, [r7, #4]
        : drag(), listener(0), dragThresholdValue(0)
 800f34e:	687b      	ldr	r3, [r7, #4]
 800f350:	4618      	mov	r0, r3
 800f352:	f7ff ffd5 	bl	800f300 <_ZN8touchgfx8Gestures9DragStateC1Ev>
 800f356:	687b      	ldr	r3, [r7, #4]
 800f358:	2200      	movs	r2, #0
 800f35a:	611a      	str	r2, [r3, #16]
 800f35c:	687b      	ldr	r3, [r7, #4]
 800f35e:	2200      	movs	r2, #0
 800f360:	829a      	strh	r2, [r3, #20]
    {
    }
 800f362:	687b      	ldr	r3, [r7, #4]
 800f364:	4618      	mov	r0, r3
 800f366:	3708      	adds	r7, #8
 800f368:	46bd      	mov	sp, r7
 800f36a:	bd80      	pop	{r7, pc}

0800f36c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>:
    HAL(DMA_Interface& dmaInterface, LCD& display, TouchController& touchCtrl, uint16_t width, uint16_t height)
 800f36c:	b580      	push	{r7, lr}
 800f36e:	b084      	sub	sp, #16
 800f370:	af00      	add	r7, sp, #0
 800f372:	60f8      	str	r0, [r7, #12]
 800f374:	60b9      	str	r1, [r7, #8]
 800f376:	607a      	str	r2, [r7, #4]
 800f378:	603b      	str	r3, [r7, #0]
          lastRenderMethod(HARDWARE)
 800f37a:	4a55      	ldr	r2, [pc, #340]	@ (800f4d0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x164>)
 800f37c:	68fb      	ldr	r3, [r7, #12]
 800f37e:	601a      	str	r2, [r3, #0]
        : dma(dmaInterface),
 800f380:	68fb      	ldr	r3, [r7, #12]
 800f382:	68ba      	ldr	r2, [r7, #8]
 800f384:	605a      	str	r2, [r3, #4]
          lcdRef(display),
 800f386:	68fb      	ldr	r3, [r7, #12]
 800f388:	687a      	ldr	r2, [r7, #4]
 800f38a:	609a      	str	r2, [r3, #8]
          touchController(touchCtrl),
 800f38c:	68fb      	ldr	r3, [r7, #12]
 800f38e:	683a      	ldr	r2, [r7, #0]
 800f390:	60da      	str	r2, [r3, #12]
          mcuInstrumentation(0),
 800f392:	68fb      	ldr	r3, [r7, #12]
 800f394:	2200      	movs	r2, #0
 800f396:	611a      	str	r2, [r3, #16]
          buttonController(0),
 800f398:	68fb      	ldr	r3, [r7, #12]
 800f39a:	2200      	movs	r2, #0
 800f39c:	615a      	str	r2, [r3, #20]
          frameBufferAllocator(0),
 800f39e:	68fb      	ldr	r3, [r7, #12]
 800f3a0:	2200      	movs	r2, #0
 800f3a2:	619a      	str	r2, [r3, #24]
          gestures(),
 800f3a4:	68fb      	ldr	r3, [r7, #12]
 800f3a6:	331c      	adds	r3, #28
 800f3a8:	4618      	mov	r0, r3
 800f3aa:	f7ff ffcc 	bl	800f346 <_ZN8touchgfx8GesturesC1Ev>
          nativeDisplayOrientation(ORIENTATION_LANDSCAPE),
 800f3ae:	68fb      	ldr	r3, [r7, #12]
 800f3b0:	2200      	movs	r2, #0
 800f3b2:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
          taskDelayFunc(0),
 800f3b6:	68fb      	ldr	r3, [r7, #12]
 800f3b8:	2200      	movs	r2, #0
 800f3ba:	639a      	str	r2, [r3, #56]	@ 0x38
          frameBuffer0(0),
 800f3bc:	68fb      	ldr	r3, [r7, #12]
 800f3be:	2200      	movs	r2, #0
 800f3c0:	63da      	str	r2, [r3, #60]	@ 0x3c
          frameBuffer1(0),
 800f3c2:	68fb      	ldr	r3, [r7, #12]
 800f3c4:	2200      	movs	r2, #0
 800f3c6:	641a      	str	r2, [r3, #64]	@ 0x40
          frameBuffer2(0),
 800f3c8:	68fb      	ldr	r3, [r7, #12]
 800f3ca:	2200      	movs	r2, #0
 800f3cc:	645a      	str	r2, [r3, #68]	@ 0x44
          refreshStrategy(REFRESH_STRATEGY_DEFAULT),
 800f3ce:	68fb      	ldr	r3, [r7, #12]
 800f3d0:	2200      	movs	r2, #0
 800f3d2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
          fingerSize(1),
 800f3d6:	68fb      	ldr	r3, [r7, #12]
 800f3d8:	2201      	movs	r2, #1
 800f3da:	f883 2049 	strb.w	r2, [r3, #73]	@ 0x49
          lockDMAToPorch(false),
 800f3de:	68fb      	ldr	r3, [r7, #12]
 800f3e0:	2200      	movs	r2, #0
 800f3e2:	f883 204a 	strb.w	r2, [r3, #74]	@ 0x4a
          frameBufferUpdatedThisFrame(false),
 800f3e6:	68fb      	ldr	r3, [r7, #12]
 800f3e8:	2200      	movs	r2, #0
 800f3ea:	f883 204b 	strb.w	r2, [r3, #75]	@ 0x4b
          auxiliaryLCD(0),
 800f3ee:	68fb      	ldr	r3, [r7, #12]
 800f3f0:	2200      	movs	r2, #0
 800f3f2:	64da      	str	r2, [r3, #76]	@ 0x4c
          partialFrameBufferRect(),
 800f3f4:	68fb      	ldr	r3, [r7, #12]
 800f3f6:	3350      	adds	r3, #80	@ 0x50
 800f3f8:	4618      	mov	r0, r3
 800f3fa:	f7fa fb36 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
          useAuxiliaryLCD(false),
 800f3fe:	68fb      	ldr	r3, [r7, #12]
 800f400:	2200      	movs	r2, #0
 800f402:	f883 2058 	strb.w	r2, [r3, #88]	@ 0x58
          listener(0),
 800f406:	68fb      	ldr	r3, [r7, #12]
 800f408:	2200      	movs	r2, #0
 800f40a:	65da      	str	r2, [r3, #92]	@ 0x5c
          lastX(0),
 800f40c:	68fb      	ldr	r3, [r7, #12]
 800f40e:	2200      	movs	r2, #0
 800f410:	661a      	str	r2, [r3, #96]	@ 0x60
          lastY(0),
 800f412:	68fb      	ldr	r3, [r7, #12]
 800f414:	2200      	movs	r2, #0
 800f416:	665a      	str	r2, [r3, #100]	@ 0x64
          touchSampleRate(1),
 800f418:	68fb      	ldr	r3, [r7, #12]
 800f41a:	2201      	movs	r2, #1
 800f41c:	f883 2068 	strb.w	r2, [r3, #104]	@ 0x68
          mcuLoadPct(0),
 800f420:	68fb      	ldr	r3, [r7, #12]
 800f422:	2200      	movs	r2, #0
 800f424:	f883 2069 	strb.w	r2, [r3, #105]	@ 0x69
          vSyncCnt(0),
 800f428:	68fb      	ldr	r3, [r7, #12]
 800f42a:	2200      	movs	r2, #0
 800f42c:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
          vSyncForFrame(1),
 800f430:	68fb      	ldr	r3, [r7, #12]
 800f432:	2201      	movs	r2, #1
 800f434:	f883 206b 	strb.w	r2, [r3, #107]	@ 0x6b
          vSyncCompensationEnabled(false),
 800f438:	68fb      	ldr	r3, [r7, #12]
 800f43a:	2200      	movs	r2, #0
 800f43c:	f883 206c 	strb.w	r2, [r3, #108]	@ 0x6c
          clientDirty(false),
 800f440:	68fb      	ldr	r3, [r7, #12]
 800f442:	2200      	movs	r2, #0
 800f444:	f883 206d 	strb.w	r2, [r3, #109]	@ 0x6d
          swapRequested(false),
 800f448:	68fb      	ldr	r3, [r7, #12]
 800f44a:	2200      	movs	r2, #0
 800f44c:	f883 206e 	strb.w	r2, [r3, #110]	@ 0x6e
          lastTouched(false),
 800f450:	68fb      	ldr	r3, [r7, #12]
 800f452:	2200      	movs	r2, #0
 800f454:	f883 206f 	strb.w	r2, [r3, #111]	@ 0x6f
          updateMCULoad(0),
 800f458:	68fb      	ldr	r3, [r7, #12]
 800f45a:	2200      	movs	r2, #0
 800f45c:	f883 2070 	strb.w	r2, [r3, #112]	@ 0x70
          cc_begin(0),
 800f460:	68fb      	ldr	r3, [r7, #12]
 800f462:	2200      	movs	r2, #0
 800f464:	675a      	str	r2, [r3, #116]	@ 0x74
          requestedOrientation(ORIENTATION_LANDSCAPE),
 800f466:	68fb      	ldr	r3, [r7, #12]
 800f468:	2200      	movs	r2, #0
 800f46a:	f883 2078 	strb.w	r2, [r3, #120]	@ 0x78
          displayOrientationChangeRequested(false),
 800f46e:	68fb      	ldr	r3, [r7, #12]
 800f470:	2200      	movs	r2, #0
 800f472:	f883 2079 	strb.w	r2, [r3, #121]	@ 0x79
          useDMAAcceleration(true),
 800f476:	68fb      	ldr	r3, [r7, #12]
 800f478:	2201      	movs	r2, #1
 800f47a:	f883 207a 	strb.w	r2, [r3, #122]	@ 0x7a
          lastRenderMethod(HARDWARE)
 800f47e:	68fb      	ldr	r3, [r7, #12]
 800f480:	2201      	movs	r2, #1
 800f482:	f883 207b 	strb.w	r2, [r3, #123]	@ 0x7b
        instance = this;
 800f486:	4a13      	ldr	r2, [pc, #76]	@ (800f4d4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x168>)
 800f488:	68fb      	ldr	r3, [r7, #12]
 800f48a:	6013      	str	r3, [r2, #0]
        FRAME_BUFFER_WIDTH = DISPLAY_WIDTH = width;
 800f48c:	4a12      	ldr	r2, [pc, #72]	@ (800f4d8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f48e:	8b3b      	ldrh	r3, [r7, #24]
 800f490:	8013      	strh	r3, [r2, #0]
 800f492:	4b11      	ldr	r3, [pc, #68]	@ (800f4d8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x16c>)
 800f494:	881a      	ldrh	r2, [r3, #0]
 800f496:	4b11      	ldr	r3, [pc, #68]	@ (800f4dc <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x170>)
 800f498:	801a      	strh	r2, [r3, #0]
        FRAME_BUFFER_HEIGHT = DISPLAY_HEIGHT = height;
 800f49a:	4a11      	ldr	r2, [pc, #68]	@ (800f4e0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f49c:	8bbb      	ldrh	r3, [r7, #28]
 800f49e:	8013      	strh	r3, [r2, #0]
 800f4a0:	4b0f      	ldr	r3, [pc, #60]	@ (800f4e0 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x174>)
 800f4a2:	881a      	ldrh	r2, [r3, #0]
 800f4a4:	4b0f      	ldr	r3, [pc, #60]	@ (800f4e4 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x178>)
 800f4a6:	801a      	strh	r2, [r3, #0]
        DISPLAY_ROTATION = rotate0;
 800f4a8:	4b0f      	ldr	r3, [pc, #60]	@ (800f4e8 <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt+0x17c>)
 800f4aa:	2200      	movs	r2, #0
 800f4ac:	701a      	strb	r2, [r3, #0]
        nativeDisplayOrientation = ((width >= height) ? ORIENTATION_LANDSCAPE : ORIENTATION_PORTRAIT);
 800f4ae:	8b3a      	ldrh	r2, [r7, #24]
 800f4b0:	8bbb      	ldrh	r3, [r7, #28]
 800f4b2:	429a      	cmp	r2, r3
 800f4b4:	bf34      	ite	cc
 800f4b6:	2301      	movcc	r3, #1
 800f4b8:	2300      	movcs	r3, #0
 800f4ba:	b2db      	uxtb	r3, r3
 800f4bc:	461a      	mov	r2, r3
 800f4be:	68fb      	ldr	r3, [r7, #12]
 800f4c0:	f883 2034 	strb.w	r2, [r3, #52]	@ 0x34
    }
 800f4c4:	68fb      	ldr	r3, [r7, #12]
 800f4c6:	4618      	mov	r0, r3
 800f4c8:	3710      	adds	r7, #16
 800f4ca:	46bd      	mov	sp, r7
 800f4cc:	bd80      	pop	{r7, pc}
 800f4ce:	bf00      	nop
 800f4d0:	08029138 	.word	0x08029138
 800f4d4:	20002f54 	.word	0x20002f54
 800f4d8:	20002f48 	.word	0x20002f48
 800f4dc:	20002f4e 	.word	0x20002f4e
 800f4e0:	20002f4a 	.word	0x20002f4a
 800f4e4:	20002f50 	.word	0x20002f50
 800f4e8:	20002f4c 	.word	0x20002f4c

0800f4ec <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>:
    /**
     * Determine (compile time) the Transition type of largest size.
     */
    typedef touchgfx::meta::select_type_maxsize< GeneratedTransitionTypes >::type MaxGeneratedTransitionType;

    virtual void gotoStartScreen(FrontendApplication& app)
 800f4ec:	b580      	push	{r7, lr}
 800f4ee:	b082      	sub	sp, #8
 800f4f0:	af00      	add	r7, sp, #0
 800f4f2:	6078      	str	r0, [r7, #4]
 800f4f4:	6039      	str	r1, [r7, #0]
    {
        app.gotoMainScreenNoTransition();
 800f4f6:	683b      	ldr	r3, [r7, #0]
 800f4f8:	4618      	mov	r0, r3
 800f4fa:	f7f9 fc21 	bl	8008d40 <_ZN23FrontendApplicationBase26gotoMainScreenNoTransitionEv>
    }
 800f4fe:	bf00      	nop
 800f500:	3708      	adds	r7, #8
 800f502:	46bd      	mov	sp, r7
 800f504:	bd80      	pop	{r7, pc}
	...

0800f508 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>:
protected:
    FrontendHeapBase(touchgfx::AbstractPartition& presenters, touchgfx::AbstractPartition& views, touchgfx::AbstractPartition& transitions, FrontendApplication& app)
 800f508:	b580      	push	{r7, lr}
 800f50a:	b086      	sub	sp, #24
 800f50c:	af02      	add	r7, sp, #8
 800f50e:	60f8      	str	r0, [r7, #12]
 800f510:	60b9      	str	r1, [r7, #8]
 800f512:	607a      	str	r2, [r7, #4]
 800f514:	603b      	str	r3, [r7, #0]
        : MVPHeap(presenters, views, transitions, app)
 800f516:	68f8      	ldr	r0, [r7, #12]
 800f518:	69bb      	ldr	r3, [r7, #24]
 800f51a:	9300      	str	r3, [sp, #0]
 800f51c:	683b      	ldr	r3, [r7, #0]
 800f51e:	687a      	ldr	r2, [r7, #4]
 800f520:	68b9      	ldr	r1, [r7, #8]
 800f522:	f7ff fe8d 	bl	800f240 <_ZN8touchgfx7MVPHeapC1ERNS_17AbstractPartitionES2_S2_RNS_14MVPApplicationE>
 800f526:	4a04      	ldr	r2, [pc, #16]	@ (800f538 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication+0x30>)
 800f528:	68fb      	ldr	r3, [r7, #12]
 800f52a:	601a      	str	r2, [r3, #0]
    {

    }
 800f52c:	68fb      	ldr	r3, [r7, #12]
 800f52e:	4618      	mov	r0, r3
 800f530:	3710      	adds	r7, #16
 800f532:	46bd      	mov	sp, r7
 800f534:	bd80      	pop	{r7, pc}
 800f536:	bf00      	nop
 800f538:	08028f14 	.word	0x08028f14

0800f53c <__tcf_0>:
            > > CombinedTransitionTypes;
    typedef meta::select_type_maxsize< CombinedTransitionTypes >::type MaxTransitionType;

    static FrontendHeap& getInstance()
    {
        static FrontendHeap instance;
 800f53c:	b580      	push	{r7, lr}
 800f53e:	af00      	add	r7, sp, #0
 800f540:	4801      	ldr	r0, [pc, #4]	@ (800f548 <__tcf_0+0xc>)
 800f542:	f000 f969 	bl	800f818 <_ZN12FrontendHeapD1Ev>
 800f546:	bd80      	pop	{r7, pc}
 800f548:	20000688 	.word	0x20000688

0800f54c <_ZN12FrontendHeap11getInstanceEv>:
    static FrontendHeap& getInstance()
 800f54c:	b580      	push	{r7, lr}
 800f54e:	af00      	add	r7, sp, #0
        static FrontendHeap instance;
 800f550:	4b11      	ldr	r3, [pc, #68]	@ (800f598 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f552:	681b      	ldr	r3, [r3, #0]
 800f554:	f3bf 8f5b 	dmb	ish
 800f558:	f003 0301 	and.w	r3, r3, #1
 800f55c:	2b00      	cmp	r3, #0
 800f55e:	bf0c      	ite	eq
 800f560:	2301      	moveq	r3, #1
 800f562:	2300      	movne	r3, #0
 800f564:	b2db      	uxtb	r3, r3
 800f566:	2b00      	cmp	r3, #0
 800f568:	d013      	beq.n	800f592 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f56a:	480b      	ldr	r0, [pc, #44]	@ (800f598 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f56c:	f016 fbc3 	bl	8025cf6 <__cxa_guard_acquire>
 800f570:	4603      	mov	r3, r0
 800f572:	2b00      	cmp	r3, #0
 800f574:	bf14      	ite	ne
 800f576:	2301      	movne	r3, #1
 800f578:	2300      	moveq	r3, #0
 800f57a:	b2db      	uxtb	r3, r3
 800f57c:	2b00      	cmp	r3, #0
 800f57e:	d008      	beq.n	800f592 <_ZN12FrontendHeap11getInstanceEv+0x46>
 800f580:	4806      	ldr	r0, [pc, #24]	@ (800f59c <_ZN12FrontendHeap11getInstanceEv+0x50>)
 800f582:	f000 f867 	bl	800f654 <_ZN12FrontendHeapC1Ev>
 800f586:	4806      	ldr	r0, [pc, #24]	@ (800f5a0 <_ZN12FrontendHeap11getInstanceEv+0x54>)
 800f588:	f016 fc80 	bl	8025e8c <atexit>
 800f58c:	4802      	ldr	r0, [pc, #8]	@ (800f598 <_ZN12FrontendHeap11getInstanceEv+0x4c>)
 800f58e:	f016 fbbe 	bl	8025d0e <__cxa_guard_release>
        return instance;
 800f592:	4b02      	ldr	r3, [pc, #8]	@ (800f59c <_ZN12FrontendHeap11getInstanceEv+0x50>)
    }
 800f594:	4618      	mov	r0, r3
 800f596:	bd80      	pop	{r7, pc}
 800f598:	20000c08 	.word	0x20000c08
 800f59c:	20000688 	.word	0x20000688
 800f5a0:	0800f53d 	.word	0x0800f53d

0800f5a4 <_ZN16FrontendHeapBaseD1Ev>:
class FrontendHeapBase : public touchgfx::MVPHeap
 800f5a4:	b580      	push	{r7, lr}
 800f5a6:	b082      	sub	sp, #8
 800f5a8:	af00      	add	r7, sp, #0
 800f5aa:	6078      	str	r0, [r7, #4]
 800f5ac:	4a05      	ldr	r2, [pc, #20]	@ (800f5c4 <_ZN16FrontendHeapBaseD1Ev+0x20>)
 800f5ae:	687b      	ldr	r3, [r7, #4]
 800f5b0:	601a      	str	r2, [r3, #0]
 800f5b2:	687b      	ldr	r3, [r7, #4]
 800f5b4:	4618      	mov	r0, r3
 800f5b6:	f7ff fe63 	bl	800f280 <_ZN8touchgfx7MVPHeapD1Ev>
 800f5ba:	687b      	ldr	r3, [r7, #4]
 800f5bc:	4618      	mov	r0, r3
 800f5be:	3708      	adds	r7, #8
 800f5c0:	46bd      	mov	sp, r7
 800f5c2:	bd80      	pop	{r7, pc}
 800f5c4:	08028f14 	.word	0x08028f14

0800f5c8 <_ZN16FrontendHeapBaseD0Ev>:
 800f5c8:	b580      	push	{r7, lr}
 800f5ca:	b082      	sub	sp, #8
 800f5cc:	af00      	add	r7, sp, #0
 800f5ce:	6078      	str	r0, [r7, #4]
 800f5d0:	6878      	ldr	r0, [r7, #4]
 800f5d2:	f7ff ffe7 	bl	800f5a4 <_ZN16FrontendHeapBaseD1Ev>
 800f5d6:	2114      	movs	r1, #20
 800f5d8:	6878      	ldr	r0, [r7, #4]
 800f5da:	f016 fb8a 	bl	8025cf2 <_ZdlPvj>
 800f5de:	687b      	ldr	r3, [r7, #4]
 800f5e0:	4618      	mov	r0, r3
 800f5e2:	3708      	adds	r7, #8
 800f5e4:	46bd      	mov	sp, r7
 800f5e6:	bd80      	pop	{r7, pc}

0800f5e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 * @tparam NUMBER_OF_ELEMENTS Type of the number of elements.
 *
 * @see AbstractPartition
 */
template <typename ListOfTypes, uint16_t NUMBER_OF_ELEMENTS>
class Partition : public AbstractPartition
 800f5e8:	b580      	push	{r7, lr}
 800f5ea:	b082      	sub	sp, #8
 800f5ec:	af00      	add	r7, sp, #0
 800f5ee:	6078      	str	r0, [r7, #4]
 800f5f0:	687b      	ldr	r3, [r7, #4]
 800f5f2:	4618      	mov	r0, r3
 800f5f4:	f001 f942 	bl	801087c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f5f8:	4a03      	ldr	r2, [pc, #12]	@ (800f608 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f5fa:	687b      	ldr	r3, [r7, #4]
 800f5fc:	601a      	str	r2, [r3, #0]
 800f5fe:	687b      	ldr	r3, [r7, #4]
 800f600:	4618      	mov	r0, r3
 800f602:	3708      	adds	r7, #8
 800f604:	46bd      	mov	sp, r7
 800f606:	bd80      	pop	{r7, pc}
 800f608:	08028ee0 	.word	0x08028ee0

0800f60c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f60c:	b580      	push	{r7, lr}
 800f60e:	b082      	sub	sp, #8
 800f610:	af00      	add	r7, sp, #0
 800f612:	6078      	str	r0, [r7, #4]
 800f614:	687b      	ldr	r3, [r7, #4]
 800f616:	4618      	mov	r0, r3
 800f618:	f001 f930 	bl	801087c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f61c:	4a03      	ldr	r2, [pc, #12]	@ (800f62c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f61e:	687b      	ldr	r3, [r7, #4]
 800f620:	601a      	str	r2, [r3, #0]
 800f622:	687b      	ldr	r3, [r7, #4]
 800f624:	4618      	mov	r0, r3
 800f626:	3708      	adds	r7, #8
 800f628:	46bd      	mov	sp, r7
 800f62a:	bd80      	pop	{r7, pc}
 800f62c:	08028eac 	.word	0x08028eac

0800f630 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>:
 800f630:	b580      	push	{r7, lr}
 800f632:	b082      	sub	sp, #8
 800f634:	af00      	add	r7, sp, #0
 800f636:	6078      	str	r0, [r7, #4]
 800f638:	687b      	ldr	r3, [r7, #4]
 800f63a:	4618      	mov	r0, r3
 800f63c:	f001 f91e 	bl	801087c <_ZN8touchgfx17AbstractPartitionC1Ev>
 800f640:	4a03      	ldr	r2, [pc, #12]	@ (800f650 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev+0x20>)
 800f642:	687b      	ldr	r3, [r7, #4]
 800f644:	601a      	str	r2, [r3, #0]
 800f646:	687b      	ldr	r3, [r7, #4]
 800f648:	4618      	mov	r0, r3
 800f64a:	3708      	adds	r7, #8
 800f64c:	46bd      	mov	sp, r7
 800f64e:	bd80      	pop	{r7, pc}
 800f650:	08028e78 	.word	0x08028e78

0800f654 <_ZN12FrontendHeapC1Ev>:
    Partition< CombinedTransitionTypes, 1 > transitions;
    FrontendApplication app;
    Model model;

private:
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f654:	b590      	push	{r4, r7, lr}
 800f656:	b085      	sub	sp, #20
 800f658:	af02      	add	r7, sp, #8
 800f65a:	6078      	str	r0, [r7, #4]
        app(model, *this)
 800f65c:	6878      	ldr	r0, [r7, #4]
 800f65e:	687b      	ldr	r3, [r7, #4]
 800f660:	f103 0114 	add.w	r1, r3, #20
 800f664:	687b      	ldr	r3, [r7, #4]
 800f666:	f103 022c 	add.w	r2, r3, #44	@ 0x2c
 800f66a:	687b      	ldr	r3, [r7, #4]
 800f66c:	f203 440c 	addw	r4, r3, #1036	@ 0x40c
    FrontendHeap() : FrontendHeapBase(presenters, views, transitions, app),
 800f670:	687b      	ldr	r3, [r7, #4]
 800f672:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
        app(model, *this)
 800f676:	9300      	str	r3, [sp, #0]
 800f678:	4623      	mov	r3, r4
 800f67a:	f7ff ff45 	bl	800f508 <_ZN16FrontendHeapBaseC1ERN8touchgfx17AbstractPartitionES2_S2_R19FrontendApplication>
 800f67e:	4a18      	ldr	r2, [pc, #96]	@ (800f6e0 <_ZN12FrontendHeapC1Ev+0x8c>)
 800f680:	687b      	ldr	r3, [r7, #4]
 800f682:	601a      	str	r2, [r3, #0]
 800f684:	687b      	ldr	r3, [r7, #4]
 800f686:	3314      	adds	r3, #20
 800f688:	4618      	mov	r0, r3
 800f68a:	f7ff ffad 	bl	800f5e8 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f68e:	687b      	ldr	r3, [r7, #4]
 800f690:	332c      	adds	r3, #44	@ 0x2c
 800f692:	4618      	mov	r0, r3
 800f694:	f7ff ffba 	bl	800f60c <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f698:	687b      	ldr	r3, [r7, #4]
 800f69a:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f69e:	4618      	mov	r0, r3
 800f6a0:	f7ff ffc6 	bl	800f630 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EEC1Ev>
 800f6a4:	687b      	ldr	r3, [r7, #4]
 800f6a6:	f503 6084 	add.w	r0, r3, #1056	@ 0x420
 800f6aa:	687b      	ldr	r3, [r7, #4]
 800f6ac:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f6b0:	687a      	ldr	r2, [r7, #4]
 800f6b2:	4619      	mov	r1, r3
 800f6b4:	f7fe fa98 	bl	800dbe8 <_ZN19FrontendApplicationC1ER5ModelR12FrontendHeap>
 800f6b8:	687b      	ldr	r3, [r7, #4]
 800f6ba:	f203 537c 	addw	r3, r3, #1404	@ 0x57c
 800f6be:	4618      	mov	r0, r3
 800f6c0:	f7fe ff48 	bl	800e554 <_ZN5ModelC1Ev>
    {
        gotoStartScreen(app);
 800f6c4:	687a      	ldr	r2, [r7, #4]
 800f6c6:	687b      	ldr	r3, [r7, #4]
 800f6c8:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f6cc:	4619      	mov	r1, r3
 800f6ce:	4610      	mov	r0, r2
 800f6d0:	f7ff ff0c 	bl	800f4ec <_ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication>
    }
 800f6d4:	687b      	ldr	r3, [r7, #4]
 800f6d6:	4618      	mov	r0, r3
 800f6d8:	370c      	adds	r7, #12
 800f6da:	46bd      	mov	sp, r7
 800f6dc:	bd90      	pop	{r4, r7, pc}
 800f6de:	bf00      	nop
 800f6e0:	08028e64 	.word	0x08028e64

0800f6e4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXGeneratedHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) :
 800f6e4:	b580      	push	{r7, lr}
 800f6e6:	b086      	sub	sp, #24
 800f6e8:	af02      	add	r7, sp, #8
 800f6ea:	60f8      	str	r0, [r7, #12]
 800f6ec:	60b9      	str	r1, [r7, #8]
 800f6ee:	607a      	str	r2, [r7, #4]
 800f6f0:	603b      	str	r3, [r7, #0]
        touchgfx::HAL(dma, display, tc, width, height)
 800f6f2:	68f8      	ldr	r0, [r7, #12]
 800f6f4:	8bbb      	ldrh	r3, [r7, #28]
 800f6f6:	9301      	str	r3, [sp, #4]
 800f6f8:	8b3b      	ldrh	r3, [r7, #24]
 800f6fa:	9300      	str	r3, [sp, #0]
 800f6fc:	683b      	ldr	r3, [r7, #0]
 800f6fe:	687a      	ldr	r2, [r7, #4]
 800f700:	68b9      	ldr	r1, [r7, #8]
 800f702:	f7ff fe33 	bl	800f36c <_ZN8touchgfx3HALC1ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt>
 800f706:	4a04      	ldr	r2, [pc, #16]	@ (800f718 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f708:	68fb      	ldr	r3, [r7, #12]
 800f70a:	601a      	str	r2, [r3, #0]
    {
    }
 800f70c:	68fb      	ldr	r3, [r7, #12]
 800f70e:	4618      	mov	r0, r3
 800f710:	3710      	adds	r7, #16
 800f712:	46bd      	mov	sp, r7
 800f714:	bd80      	pop	{r7, pc}
 800f716:	bf00      	nop
 800f718:	08028f64 	.word	0x08028f64

0800f71c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>:
     * @param [in,out] display Reference to LCD interface.
     * @param [in,out] tc      Reference to Touch Controller driver.
     * @param width            Width of the display.
     * @param height           Height of the display.
     */
    TouchGFXHAL(touchgfx::DMA_Interface& dma, touchgfx::LCD& display, touchgfx::TouchController& tc, uint16_t width, uint16_t height) : TouchGFXGeneratedHAL(dma, display, tc, width, height)
 800f71c:	b580      	push	{r7, lr}
 800f71e:	b086      	sub	sp, #24
 800f720:	af02      	add	r7, sp, #8
 800f722:	60f8      	str	r0, [r7, #12]
 800f724:	60b9      	str	r1, [r7, #8]
 800f726:	607a      	str	r2, [r7, #4]
 800f728:	603b      	str	r3, [r7, #0]
 800f72a:	68f8      	ldr	r0, [r7, #12]
 800f72c:	8bbb      	ldrh	r3, [r7, #28]
 800f72e:	9301      	str	r3, [sp, #4]
 800f730:	8b3b      	ldrh	r3, [r7, #24]
 800f732:	9300      	str	r3, [sp, #0]
 800f734:	683b      	ldr	r3, [r7, #0]
 800f736:	687a      	ldr	r2, [r7, #4]
 800f738:	68b9      	ldr	r1, [r7, #8]
 800f73a:	f7ff ffd3 	bl	800f6e4 <_ZN20TouchGFXGeneratedHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f73e:	4a04      	ldr	r2, [pc, #16]	@ (800f750 <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt+0x34>)
 800f740:	68fb      	ldr	r3, [r7, #12]
 800f742:	601a      	str	r2, [r3, #0]
    {
    }
 800f744:	68fb      	ldr	r3, [r7, #12]
 800f746:	4618      	mov	r0, r3
 800f748:	3710      	adds	r7, #16
 800f74a:	46bd      	mov	sp, r7
 800f74c:	bd80      	pop	{r7, pc}
 800f74e:	bf00      	nop
 800f750:	08028d18 	.word	0x08028d18

0800f754 <_ZN8touchgfx15TouchControllerC1Ev>:
class TouchController
 800f754:	b480      	push	{r7}
 800f756:	b083      	sub	sp, #12
 800f758:	af00      	add	r7, sp, #0
 800f75a:	6078      	str	r0, [r7, #4]
 800f75c:	4a04      	ldr	r2, [pc, #16]	@ (800f770 <_ZN8touchgfx15TouchControllerC1Ev+0x1c>)
 800f75e:	687b      	ldr	r3, [r7, #4]
 800f760:	601a      	str	r2, [r3, #0]
 800f762:	687b      	ldr	r3, [r7, #4]
 800f764:	4618      	mov	r0, r3
 800f766:	370c      	adds	r7, #12
 800f768:	46bd      	mov	sp, r7
 800f76a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f76e:	4770      	bx	lr
 800f770:	08028d00 	.word	0x08028d00

0800f774 <_ZN20STM32TouchControllerC1Ev>:
{
public:

    STM32TouchController() {}
 800f774:	b580      	push	{r7, lr}
 800f776:	b082      	sub	sp, #8
 800f778:	af00      	add	r7, sp, #0
 800f77a:	6078      	str	r0, [r7, #4]
 800f77c:	687b      	ldr	r3, [r7, #4]
 800f77e:	4618      	mov	r0, r3
 800f780:	f7ff ffe8 	bl	800f754 <_ZN8touchgfx15TouchControllerC1Ev>
 800f784:	4a03      	ldr	r2, [pc, #12]	@ (800f794 <_ZN20STM32TouchControllerC1Ev+0x20>)
 800f786:	687b      	ldr	r3, [r7, #4]
 800f788:	601a      	str	r2, [r3, #0]
 800f78a:	687b      	ldr	r3, [r7, #4]
 800f78c:	4618      	mov	r0, r3
 800f78e:	3708      	adds	r7, #8
 800f790:	46bd      	mov	sp, r7
 800f792:	bd80      	pop	{r7, pc}
 800f794:	08028ce8 	.word	0x08028ce8

0800f798 <touchgfx_init>:
static ApplicationFontProvider fontProvider;
static Texts texts;
static TouchGFXHAL hal(dma, display, tc, 320, 480);

void touchgfx_init()
{
 800f798:	b590      	push	{r4, r7, lr}
 800f79a:	b085      	sub	sp, #20
 800f79c:	af02      	add	r7, sp, #8
    Bitmap::registerBitmapDatabase(BitmapDatabase::getInstance(), BitmapDatabase::getInstanceSize());
 800f79e:	f7fd fff7 	bl	800d790 <_ZN14BitmapDatabase11getInstanceEv>
 800f7a2:	4604      	mov	r4, r0
 800f7a4:	f7fd fffe 	bl	800d7a4 <_ZN14BitmapDatabase15getInstanceSizeEv>
 800f7a8:	4603      	mov	r3, r0
 800f7aa:	4619      	mov	r1, r3
 800f7ac:	2300      	movs	r3, #0
 800f7ae:	9300      	str	r3, [sp, #0]
 800f7b0:	2300      	movs	r3, #0
 800f7b2:	2200      	movs	r2, #0
 800f7b4:	4620      	mov	r0, r4
 800f7b6:	f007 ffb5 	bl	8017724 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>
    TypedText::registerTexts(&texts);
 800f7ba:	4809      	ldr	r0, [pc, #36]	@ (800f7e0 <touchgfx_init+0x48>)
 800f7bc:	f7ff fd30 	bl	800f220 <_ZN8touchgfx9TypedText13registerTextsEPKNS_5TextsE>
    Texts::setLanguage(0);
 800f7c0:	2000      	movs	r0, #0
 800f7c2:	f7fe f933 	bl	800da2c <_ZN8touchgfx5Texts11setLanguageEt>

    FontManager::setFontProvider(&fontProvider);
 800f7c6:	4807      	ldr	r0, [pc, #28]	@ (800f7e4 <touchgfx_init+0x4c>)
 800f7c8:	f007 ff14 	bl	80175f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>

    FrontendHeap& heap = FrontendHeap::getInstance();
 800f7cc:	f7ff febe 	bl	800f54c <_ZN12FrontendHeap11getInstanceEv>
 800f7d0:	6078      	str	r0, [r7, #4]
    (void)heap;

    /*
     * Initialize TouchGFX
     */
    hal.initialize();
 800f7d2:	4805      	ldr	r0, [pc, #20]	@ (800f7e8 <touchgfx_init+0x50>)
 800f7d4:	f7ff fab4 	bl	800ed40 <_ZN11TouchGFXHAL10initializeEv>
}
 800f7d8:	bf00      	nop
 800f7da:	370c      	adds	r7, #12
 800f7dc:	46bd      	mov	sp, r7
 800f7de:	bd90      	pop	{r4, r7, pc}
 800f7e0:	20000ce0 	.word	0x20000ce0
 800f7e4:	20000028 	.word	0x20000028
 800f7e8:	20000ce4 	.word	0x20000ce4

0800f7ec <touchgfx_components_init>:

void touchgfx_components_init()
{
 800f7ec:	b480      	push	{r7}
 800f7ee:	af00      	add	r7, sp, #0
}
 800f7f0:	bf00      	nop
 800f7f2:	46bd      	mov	sp, r7
 800f7f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f7f8:	4770      	bx	lr
	...

0800f7fc <touchgfx_taskEntry>:

void touchgfx_taskEntry()
{
 800f7fc:	b580      	push	{r7, lr}
 800f7fe:	af00      	add	r7, sp, #0
    /*
     * Main event loop will check for VSYNC signal, and then process next frame.
     *
     * Note This function returns immediately if there is no VSYNC signal.
     */
    if (OSWrappers::isVSyncAvailable())
 800f800:	f7ff fbb4 	bl	800ef6c <_ZN8touchgfx10OSWrappers16isVSyncAvailableEv>
 800f804:	4603      	mov	r3, r0
 800f806:	2b00      	cmp	r3, #0
 800f808:	d002      	beq.n	800f810 <touchgfx_taskEntry+0x14>
    {
        hal.backPorchExited();
 800f80a:	4802      	ldr	r0, [pc, #8]	@ (800f814 <touchgfx_taskEntry+0x18>)
 800f80c:	f7ff f96a 	bl	800eae4 <_ZN8touchgfx3HAL15backPorchExitedEv>
    }
}
 800f810:	bf00      	nop
 800f812:	bd80      	pop	{r7, pc}
 800f814:	20000ce4 	.word	0x20000ce4

0800f818 <_ZN12FrontendHeapD1Ev>:
class FrontendHeap : public FrontendHeapBase
 800f818:	b580      	push	{r7, lr}
 800f81a:	b082      	sub	sp, #8
 800f81c:	af00      	add	r7, sp, #0
 800f81e:	6078      	str	r0, [r7, #4]
 800f820:	4a10      	ldr	r2, [pc, #64]	@ (800f864 <_ZN12FrontendHeapD1Ev+0x4c>)
 800f822:	687b      	ldr	r3, [r7, #4]
 800f824:	601a      	str	r2, [r3, #0]
 800f826:	687b      	ldr	r3, [r7, #4]
 800f828:	f503 6384 	add.w	r3, r3, #1056	@ 0x420
 800f82c:	4618      	mov	r0, r3
 800f82e:	f7fe f9a5 	bl	800db7c <_ZN19FrontendApplicationD1Ev>
 800f832:	687b      	ldr	r3, [r7, #4]
 800f834:	f203 430c 	addw	r3, r3, #1036	@ 0x40c
 800f838:	4618      	mov	r0, r3
 800f83a:	f000 f827 	bl	800f88c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f83e:	687b      	ldr	r3, [r7, #4]
 800f840:	332c      	adds	r3, #44	@ 0x2c
 800f842:	4618      	mov	r0, r3
 800f844:	f000 f844 	bl	800f8d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f848:	687b      	ldr	r3, [r7, #4]
 800f84a:	3314      	adds	r3, #20
 800f84c:	4618      	mov	r0, r3
 800f84e:	f000 f863 	bl	800f918 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f852:	687b      	ldr	r3, [r7, #4]
 800f854:	4618      	mov	r0, r3
 800f856:	f7ff fea5 	bl	800f5a4 <_ZN16FrontendHeapBaseD1Ev>
 800f85a:	687b      	ldr	r3, [r7, #4]
 800f85c:	4618      	mov	r0, r3
 800f85e:	3708      	adds	r7, #8
 800f860:	46bd      	mov	sp, r7
 800f862:	bd80      	pop	{r7, pc}
 800f864:	08028e64 	.word	0x08028e64

0800f868 <_ZN12FrontendHeapD0Ev>:
 800f868:	b580      	push	{r7, lr}
 800f86a:	b082      	sub	sp, #8
 800f86c:	af00      	add	r7, sp, #0
 800f86e:	6078      	str	r0, [r7, #4]
 800f870:	6878      	ldr	r0, [r7, #4]
 800f872:	f7ff ffd1 	bl	800f818 <_ZN12FrontendHeapD1Ev>
 800f876:	f44f 61b0 	mov.w	r1, #1408	@ 0x580
 800f87a:	6878      	ldr	r0, [r7, #4]
 800f87c:	f016 fa39 	bl	8025cf2 <_ZdlPvj>
 800f880:	687b      	ldr	r3, [r7, #4]
 800f882:	4618      	mov	r0, r3
 800f884:	3708      	adds	r7, #8
 800f886:	46bd      	mov	sp, r7
 800f888:	bd80      	pop	{r7, pc}
	...

0800f88c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f88c:	b580      	push	{r7, lr}
 800f88e:	b082      	sub	sp, #8
 800f890:	af00      	add	r7, sp, #0
 800f892:	6078      	str	r0, [r7, #4]
 800f894:	4a05      	ldr	r2, [pc, #20]	@ (800f8ac <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f896:	687b      	ldr	r3, [r7, #4]
 800f898:	601a      	str	r2, [r3, #0]
 800f89a:	687b      	ldr	r3, [r7, #4]
 800f89c:	4618      	mov	r0, r3
 800f89e:	f000 ffec 	bl	801087a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f8a2:	687b      	ldr	r3, [r7, #4]
 800f8a4:	4618      	mov	r0, r3
 800f8a6:	3708      	adds	r7, #8
 800f8a8:	46bd      	mov	sp, r7
 800f8aa:	bd80      	pop	{r7, pc}
 800f8ac:	08028e78 	.word	0x08028e78

0800f8b0 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f8b0:	b580      	push	{r7, lr}
 800f8b2:	b082      	sub	sp, #8
 800f8b4:	af00      	add	r7, sp, #0
 800f8b6:	6078      	str	r0, [r7, #4]
 800f8b8:	6878      	ldr	r0, [r7, #4]
 800f8ba:	f7ff ffe7 	bl	800f88c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f8be:	2114      	movs	r1, #20
 800f8c0:	6878      	ldr	r0, [r7, #4]
 800f8c2:	f016 fa16 	bl	8025cf2 <_ZdlPvj>
 800f8c6:	687b      	ldr	r3, [r7, #4]
 800f8c8:	4618      	mov	r0, r3
 800f8ca:	3708      	adds	r7, #8
 800f8cc:	46bd      	mov	sp, r7
 800f8ce:	bd80      	pop	{r7, pc}

0800f8d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f8d0:	b580      	push	{r7, lr}
 800f8d2:	b082      	sub	sp, #8
 800f8d4:	af00      	add	r7, sp, #0
 800f8d6:	6078      	str	r0, [r7, #4]
 800f8d8:	4a05      	ldr	r2, [pc, #20]	@ (800f8f0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f8da:	687b      	ldr	r3, [r7, #4]
 800f8dc:	601a      	str	r2, [r3, #0]
 800f8de:	687b      	ldr	r3, [r7, #4]
 800f8e0:	4618      	mov	r0, r3
 800f8e2:	f000 ffca 	bl	801087a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f8e6:	687b      	ldr	r3, [r7, #4]
 800f8e8:	4618      	mov	r0, r3
 800f8ea:	3708      	adds	r7, #8
 800f8ec:	46bd      	mov	sp, r7
 800f8ee:	bd80      	pop	{r7, pc}
 800f8f0:	08028eac 	.word	0x08028eac

0800f8f4 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f8f4:	b580      	push	{r7, lr}
 800f8f6:	b082      	sub	sp, #8
 800f8f8:	af00      	add	r7, sp, #0
 800f8fa:	6078      	str	r0, [r7, #4]
 800f8fc:	6878      	ldr	r0, [r7, #4]
 800f8fe:	f7ff ffe7 	bl	800f8d0 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f902:	f44f 7178 	mov.w	r1, #992	@ 0x3e0
 800f906:	6878      	ldr	r0, [r7, #4]
 800f908:	f016 f9f3 	bl	8025cf2 <_ZdlPvj>
 800f90c:	687b      	ldr	r3, [r7, #4]
 800f90e:	4618      	mov	r0, r3
 800f910:	3708      	adds	r7, #8
 800f912:	46bd      	mov	sp, r7
 800f914:	bd80      	pop	{r7, pc}
	...

0800f918 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>:
 800f918:	b580      	push	{r7, lr}
 800f91a:	b082      	sub	sp, #8
 800f91c:	af00      	add	r7, sp, #0
 800f91e:	6078      	str	r0, [r7, #4]
 800f920:	4a05      	ldr	r2, [pc, #20]	@ (800f938 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev+0x20>)
 800f922:	687b      	ldr	r3, [r7, #4]
 800f924:	601a      	str	r2, [r3, #0]
 800f926:	687b      	ldr	r3, [r7, #4]
 800f928:	4618      	mov	r0, r3
 800f92a:	f000 ffa6 	bl	801087a <_ZN8touchgfx17AbstractPartitionD1Ev>
 800f92e:	687b      	ldr	r3, [r7, #4]
 800f930:	4618      	mov	r0, r3
 800f932:	3708      	adds	r7, #8
 800f934:	46bd      	mov	sp, r7
 800f936:	bd80      	pop	{r7, pc}
 800f938:	08028ee0 	.word	0x08028ee0

0800f93c <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED0Ev>:
 800f93c:	b580      	push	{r7, lr}
 800f93e:	b082      	sub	sp, #8
 800f940:	af00      	add	r7, sp, #0
 800f942:	6078      	str	r0, [r7, #4]
 800f944:	6878      	ldr	r0, [r7, #4]
 800f946:	f7ff ffe7 	bl	800f918 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EED1Ev>
 800f94a:	2118      	movs	r1, #24
 800f94c:	6878      	ldr	r0, [r7, #4]
 800f94e:	f016 f9d0 	bl	8025cf2 <_ZdlPvj>
 800f952:	687b      	ldr	r3, [r7, #4]
 800f954:	4618      	mov	r0, r3
 800f956:	3708      	adds	r7, #8
 800f958:	46bd      	mov	sp, r7
 800f95a:	bd80      	pop	{r7, pc}

0800f95c <_ZN8touchgfx8LCD16bppD1Ev>:
 *
 * @see LCD
 *
 * @note All coordinates are expected to be in absolute coordinates!
 */
class LCD16bpp : public LCD
 800f95c:	b580      	push	{r7, lr}
 800f95e:	b082      	sub	sp, #8
 800f960:	af00      	add	r7, sp, #0
 800f962:	6078      	str	r0, [r7, #4]
 800f964:	4a05      	ldr	r2, [pc, #20]	@ (800f97c <_ZN8touchgfx8LCD16bppD1Ev+0x20>)
 800f966:	687b      	ldr	r3, [r7, #4]
 800f968:	601a      	str	r2, [r3, #0]
 800f96a:	687b      	ldr	r3, [r7, #4]
 800f96c:	4618      	mov	r0, r3
 800f96e:	f7ff fca7 	bl	800f2c0 <_ZN8touchgfx3LCDD1Ev>
 800f972:	687b      	ldr	r3, [r7, #4]
 800f974:	4618      	mov	r0, r3
 800f976:	3708      	adds	r7, #8
 800f978:	46bd      	mov	sp, r7
 800f97a:	bd80      	pop	{r7, pc}
 800f97c:	08029acc 	.word	0x08029acc

0800f980 <_ZN8touchgfx8LCD16bppD0Ev>:
 800f980:	b580      	push	{r7, lr}
 800f982:	b082      	sub	sp, #8
 800f984:	af00      	add	r7, sp, #0
 800f986:	6078      	str	r0, [r7, #4]
 800f988:	6878      	ldr	r0, [r7, #4]
 800f98a:	f7ff ffe7 	bl	800f95c <_ZN8touchgfx8LCD16bppD1Ev>
 800f98e:	218c      	movs	r1, #140	@ 0x8c
 800f990:	6878      	ldr	r0, [r7, #4]
 800f992:	f016 f9ae 	bl	8025cf2 <_ZdlPvj>
 800f996:	687b      	ldr	r3, [r7, #4]
 800f998:	4618      	mov	r0, r3
 800f99a:	3708      	adds	r7, #8
 800f99c:	46bd      	mov	sp, r7
 800f99e:	bd80      	pop	{r7, pc}

0800f9a0 <_Z41__static_initialization_and_destruction_0ii>:
 800f9a0:	b580      	push	{r7, lr}
 800f9a2:	b084      	sub	sp, #16
 800f9a4:	af02      	add	r7, sp, #8
 800f9a6:	6078      	str	r0, [r7, #4]
 800f9a8:	6039      	str	r1, [r7, #0]
 800f9aa:	687b      	ldr	r3, [r7, #4]
 800f9ac:	2b01      	cmp	r3, #1
 800f9ae:	d119      	bne.n	800f9e4 <_Z41__static_initialization_and_destruction_0ii+0x44>
 800f9b0:	683b      	ldr	r3, [r7, #0]
 800f9b2:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f9b6:	4293      	cmp	r3, r2
 800f9b8:	d114      	bne.n	800f9e4 <_Z41__static_initialization_and_destruction_0ii+0x44>
static STM32TouchController tc;
 800f9ba:	4818      	ldr	r0, [pc, #96]	@ (800fa1c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f9bc:	f7ff feda 	bl	800f774 <_ZN20STM32TouchControllerC1Ev>
static STM32DMA dma;
 800f9c0:	4817      	ldr	r0, [pc, #92]	@ (800fa20 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f9c2:	f7ff fb8f 	bl	800f0e4 <_ZN8STM32DMAC1Ev>
static LCD16bpp display;
 800f9c6:	4817      	ldr	r0, [pc, #92]	@ (800fa24 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f9c8:	f00c ffa8 	bl	801c91c <_ZN8touchgfx8LCD16bppC1Ev>
static TouchGFXHAL hal(dma, display, tc, 320, 480);
 800f9cc:	f44f 73f0 	mov.w	r3, #480	@ 0x1e0
 800f9d0:	9301      	str	r3, [sp, #4]
 800f9d2:	f44f 73a0 	mov.w	r3, #320	@ 0x140
 800f9d6:	9300      	str	r3, [sp, #0]
 800f9d8:	4b10      	ldr	r3, [pc, #64]	@ (800fa1c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800f9da:	4a12      	ldr	r2, [pc, #72]	@ (800fa24 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800f9dc:	4910      	ldr	r1, [pc, #64]	@ (800fa20 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800f9de:	4812      	ldr	r0, [pc, #72]	@ (800fa28 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f9e0:	f7ff fe9c 	bl	800f71c <_ZN11TouchGFXHALC1ERN8touchgfx13DMA_InterfaceERNS0_3LCDERNS0_15TouchControllerEtt>
 800f9e4:	687b      	ldr	r3, [r7, #4]
 800f9e6:	2b00      	cmp	r3, #0
 800f9e8:	d113      	bne.n	800fa12 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f9ea:	683b      	ldr	r3, [r7, #0]
 800f9ec:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 800f9f0:	4293      	cmp	r3, r2
 800f9f2:	d10e      	bne.n	800fa12 <_Z41__static_initialization_and_destruction_0ii+0x72>
 800f9f4:	480c      	ldr	r0, [pc, #48]	@ (800fa28 <_Z41__static_initialization_and_destruction_0ii+0x88>)
 800f9f6:	f7ff fa33 	bl	800ee60 <_ZN11TouchGFXHALD1Ev>
static ApplicationFontProvider fontProvider;
 800f9fa:	480c      	ldr	r0, [pc, #48]	@ (800fa2c <_Z41__static_initialization_and_destruction_0ii+0x8c>)
 800f9fc:	f7f8 fb6c 	bl	80080d8 <_ZN23ApplicationFontProviderD1Ev>
static LCD16bpp display;
 800fa00:	4808      	ldr	r0, [pc, #32]	@ (800fa24 <_Z41__static_initialization_and_destruction_0ii+0x84>)
 800fa02:	f7ff ffab 	bl	800f95c <_ZN8touchgfx8LCD16bppD1Ev>
static STM32DMA dma;
 800fa06:	4806      	ldr	r0, [pc, #24]	@ (800fa20 <_Z41__static_initialization_and_destruction_0ii+0x80>)
 800fa08:	f7ff fbc0 	bl	800f18c <_ZN8STM32DMAD1Ev>
static STM32TouchController tc;
 800fa0c:	4803      	ldr	r0, [pc, #12]	@ (800fa1c <_Z41__static_initialization_and_destruction_0ii+0x7c>)
 800fa0e:	f7fe ff6f 	bl	800e8f0 <_ZN20STM32TouchControllerD1Ev>
}
 800fa12:	bf00      	nop
 800fa14:	3708      	adds	r7, #8
 800fa16:	46bd      	mov	sp, r7
 800fa18:	bd80      	pop	{r7, pc}
 800fa1a:	bf00      	nop
 800fa1c:	20000c0c 	.word	0x20000c0c
 800fa20:	20000c10 	.word	0x20000c10
 800fa24:	20000c54 	.word	0x20000c54
 800fa28:	20000ce4 	.word	0x20000ce4
 800fa2c:	20000028 	.word	0x20000028

0800fa30 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    {
        INTS_PR_ELEMENT = (sizeof(typename meta::select_type_maxsize<SupportedTypesList>::type) + sizeof(int) - 1) / sizeof(int),
        SIZE_OF_ELEMENT = INTS_PR_ELEMENT * sizeof(int)
    };

    virtual uint16_t capacity() const
 800fa30:	b480      	push	{r7}
 800fa32:	b083      	sub	sp, #12
 800fa34:	af00      	add	r7, sp, #0
 800fa36:	6078      	str	r0, [r7, #4]
    {
        return NUMBER_OF_ELEMENTS;
 800fa38:	2301      	movs	r3, #1
    }
 800fa3a:	4618      	mov	r0, r3
 800fa3c:	370c      	adds	r7, #12
 800fa3e:	46bd      	mov	sp, r7
 800fa40:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa44:	4770      	bx	lr

0800fa46 <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:

    virtual uint32_t element_size()
 800fa46:	b480      	push	{r7}
 800fa48:	b083      	sub	sp, #12
 800fa4a:	af00      	add	r7, sp, #0
 800fa4c:	6078      	str	r0, [r7, #4]
    {
        return sizeof(stBlocks[0]);
 800fa4e:	230c      	movs	r3, #12
    }
 800fa50:	4618      	mov	r0, r3
 800fa52:	370c      	adds	r7, #12
 800fa54:	46bd      	mov	sp, r7
 800fa56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa5a:	4770      	bx	lr

0800fa5c <_ZN8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

protected:
    virtual void* element(uint16_t index)
 800fa5c:	b480      	push	{r7}
 800fa5e:	b083      	sub	sp, #12
 800fa60:	af00      	add	r7, sp, #0
 800fa62:	6078      	str	r0, [r7, #4]
 800fa64:	460b      	mov	r3, r1
 800fa66:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800fa68:	887a      	ldrh	r2, [r7, #2]
 800fa6a:	4613      	mov	r3, r2
 800fa6c:	005b      	lsls	r3, r3, #1
 800fa6e:	4413      	add	r3, r2
 800fa70:	009b      	lsls	r3, r3, #2
 800fa72:	3308      	adds	r3, #8
 800fa74:	687a      	ldr	r2, [r7, #4]
 800fa76:	4413      	add	r3, r2
    }
 800fa78:	4618      	mov	r0, r3
 800fa7a:	370c      	adds	r7, #12
 800fa7c:	46bd      	mov	sp, r7
 800fa7e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fa82:	4770      	bx	lr

0800fa84 <_ZNK8touchgfx9PartitionINS_4meta8TypeListINS_12NoTransitionENS2_INS1_3NilES4_EEEELt1EE7elementEt>:

    virtual const void* element(uint16_t index) const
 800fa84:	b480      	push	{r7}
 800fa86:	b083      	sub	sp, #12
 800fa88:	af00      	add	r7, sp, #0
 800fa8a:	6078      	str	r0, [r7, #4]
 800fa8c:	460b      	mov	r3, r1
 800fa8e:	807b      	strh	r3, [r7, #2]
    {
        return &stBlocks[index];
 800fa90:	887a      	ldrh	r2, [r7, #2]
 800fa92:	4613      	mov	r3, r2
 800fa94:	005b      	lsls	r3, r3, #1
 800fa96:	4413      	add	r3, r2
 800fa98:	009b      	lsls	r3, r3, #2
 800fa9a:	3308      	adds	r3, #8
 800fa9c:	687a      	ldr	r2, [r7, #4]
 800fa9e:	4413      	add	r3, r2
    }
 800faa0:	4618      	mov	r0, r3
 800faa2:	370c      	adds	r7, #12
 800faa4:	46bd      	mov	sp, r7
 800faa6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800faaa:	4770      	bx	lr

0800faac <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800faac:	b480      	push	{r7}
 800faae:	b083      	sub	sp, #12
 800fab0:	af00      	add	r7, sp, #0
 800fab2:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800fab4:	2301      	movs	r3, #1
    }
 800fab6:	4618      	mov	r0, r3
 800fab8:	370c      	adds	r7, #12
 800faba:	46bd      	mov	sp, r7
 800fabc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fac0:	4770      	bx	lr

0800fac2 <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800fac2:	b480      	push	{r7}
 800fac4:	b083      	sub	sp, #12
 800fac6:	af00      	add	r7, sp, #0
 800fac8:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800faca:	f44f 7376 	mov.w	r3, #984	@ 0x3d8
    }
 800face:	4618      	mov	r0, r3
 800fad0:	370c      	adds	r7, #12
 800fad2:	46bd      	mov	sp, r7
 800fad4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fad8:	4770      	bx	lr

0800fada <_ZN8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800fada:	b480      	push	{r7}
 800fadc:	b083      	sub	sp, #12
 800fade:	af00      	add	r7, sp, #0
 800fae0:	6078      	str	r0, [r7, #4]
 800fae2:	460b      	mov	r3, r1
 800fae4:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800fae6:	887b      	ldrh	r3, [r7, #2]
 800fae8:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800faec:	fb02 f303 	mul.w	r3, r2, r3
 800faf0:	3308      	adds	r3, #8
 800faf2:	687a      	ldr	r2, [r7, #4]
 800faf4:	4413      	add	r3, r2
    }
 800faf6:	4618      	mov	r0, r3
 800faf8:	370c      	adds	r7, #12
 800fafa:	46bd      	mov	sp, r7
 800fafc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb00:	4770      	bx	lr

0800fb02 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI8MainViewNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800fb02:	b480      	push	{r7}
 800fb04:	b083      	sub	sp, #12
 800fb06:	af00      	add	r7, sp, #0
 800fb08:	6078      	str	r0, [r7, #4]
 800fb0a:	460b      	mov	r3, r1
 800fb0c:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800fb0e:	887b      	ldrh	r3, [r7, #2]
 800fb10:	f44f 7276 	mov.w	r2, #984	@ 0x3d8
 800fb14:	fb02 f303 	mul.w	r3, r2, r3
 800fb18:	3308      	adds	r3, #8
 800fb1a:	687a      	ldr	r2, [r7, #4]
 800fb1c:	4413      	add	r3, r2
    }
 800fb1e:	4618      	mov	r0, r3
 800fb20:	370c      	adds	r7, #12
 800fb22:	46bd      	mov	sp, r7
 800fb24:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb28:	4770      	bx	lr

0800fb2a <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE8capacityEv>:
    virtual uint16_t capacity() const
 800fb2a:	b480      	push	{r7}
 800fb2c:	b083      	sub	sp, #12
 800fb2e:	af00      	add	r7, sp, #0
 800fb30:	6078      	str	r0, [r7, #4]
        return NUMBER_OF_ELEMENTS;
 800fb32:	2301      	movs	r3, #1
    }
 800fb34:	4618      	mov	r0, r3
 800fb36:	370c      	adds	r7, #12
 800fb38:	46bd      	mov	sp, r7
 800fb3a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb3e:	4770      	bx	lr

0800fb40 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv>:
    virtual uint32_t element_size()
 800fb40:	b480      	push	{r7}
 800fb42:	b083      	sub	sp, #12
 800fb44:	af00      	add	r7, sp, #0
 800fb46:	6078      	str	r0, [r7, #4]
        return sizeof(stBlocks[0]);
 800fb48:	2310      	movs	r3, #16
    }
 800fb4a:	4618      	mov	r0, r3
 800fb4c:	370c      	adds	r7, #12
 800fb4e:	46bd      	mov	sp, r7
 800fb50:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb54:	4770      	bx	lr

0800fb56 <_ZN8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual void* element(uint16_t index)
 800fb56:	b480      	push	{r7}
 800fb58:	b083      	sub	sp, #12
 800fb5a:	af00      	add	r7, sp, #0
 800fb5c:	6078      	str	r0, [r7, #4]
 800fb5e:	460b      	mov	r3, r1
 800fb60:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800fb62:	887b      	ldrh	r3, [r7, #2]
 800fb64:	011b      	lsls	r3, r3, #4
 800fb66:	3308      	adds	r3, #8
 800fb68:	687a      	ldr	r2, [r7, #4]
 800fb6a:	4413      	add	r3, r2
    }
 800fb6c:	4618      	mov	r0, r3
 800fb6e:	370c      	adds	r7, #12
 800fb70:	46bd      	mov	sp, r7
 800fb72:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb76:	4770      	bx	lr

0800fb78 <_ZNK8touchgfx9PartitionINS_4meta8TypeListI13MainPresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt>:
    virtual const void* element(uint16_t index) const
 800fb78:	b480      	push	{r7}
 800fb7a:	b083      	sub	sp, #12
 800fb7c:	af00      	add	r7, sp, #0
 800fb7e:	6078      	str	r0, [r7, #4]
 800fb80:	460b      	mov	r3, r1
 800fb82:	807b      	strh	r3, [r7, #2]
        return &stBlocks[index];
 800fb84:	887b      	ldrh	r3, [r7, #2]
 800fb86:	011b      	lsls	r3, r3, #4
 800fb88:	3308      	adds	r3, #8
 800fb8a:	687a      	ldr	r2, [r7, #4]
 800fb8c:	4413      	add	r3, r2
    }
 800fb8e:	4618      	mov	r0, r3
 800fb90:	370c      	adds	r7, #12
 800fb92:	46bd      	mov	sp, r7
 800fb94:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fb98:	4770      	bx	lr

0800fb9a <_GLOBAL__sub_I_touchgfx_init>:
 800fb9a:	b580      	push	{r7, lr}
 800fb9c:	af00      	add	r7, sp, #0
 800fb9e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800fba2:	2001      	movs	r0, #1
 800fba4:	f7ff fefc 	bl	800f9a0 <_Z41__static_initialization_and_destruction_0ii>
 800fba8:	bd80      	pop	{r7, pc}

0800fbaa <_GLOBAL__sub_D_touchgfx_init>:
 800fbaa:	b580      	push	{r7, lr}
 800fbac:	af00      	add	r7, sp, #0
 800fbae:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 800fbb2:	2000      	movs	r0, #0
 800fbb4:	f7ff fef4 	bl	800f9a0 <_Z41__static_initialization_and_destruction_0ii>
 800fbb8:	bd80      	pop	{r7, pc}

0800fbba <_ZNK8touchgfx9colortypecvmEv>:
    operator uint32_t() const
 800fbba:	b480      	push	{r7}
 800fbbc:	b083      	sub	sp, #12
 800fbbe:	af00      	add	r7, sp, #0
 800fbc0:	6078      	str	r0, [r7, #4]
        return color;
 800fbc2:	687b      	ldr	r3, [r7, #4]
 800fbc4:	681b      	ldr	r3, [r3, #0]
    }
 800fbc6:	4618      	mov	r0, r3
 800fbc8:	370c      	adds	r7, #12
 800fbca:	46bd      	mov	sp, r7
 800fbcc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbd0:	4770      	bx	lr
	...

0800fbd4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>:
     * transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer() = 0;

    /** Finalizes an instance of the FrameBufferAllocator class. */
    virtual ~FrameBufferAllocator()
 800fbd4:	b480      	push	{r7}
 800fbd6:	b083      	sub	sp, #12
 800fbd8:	af00      	add	r7, sp, #0
 800fbda:	6078      	str	r0, [r7, #4]
    {
 800fbdc:	4a04      	ldr	r2, [pc, #16]	@ (800fbf0 <_ZN8touchgfx20FrameBufferAllocatorD1Ev+0x1c>)
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	601a      	str	r2, [r3, #0]
    }
 800fbe2:	687b      	ldr	r3, [r7, #4]
 800fbe4:	4618      	mov	r0, r3
 800fbe6:	370c      	adds	r7, #12
 800fbe8:	46bd      	mov	sp, r7
 800fbea:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fbee:	4770      	bx	lr
 800fbf0:	0802903c 	.word	0x0802903c

0800fbf4 <_ZN8touchgfx20FrameBufferAllocatorD0Ev>:
    virtual ~FrameBufferAllocator()
 800fbf4:	b580      	push	{r7, lr}
 800fbf6:	b082      	sub	sp, #8
 800fbf8:	af00      	add	r7, sp, #0
 800fbfa:	6078      	str	r0, [r7, #4]
    }
 800fbfc:	6878      	ldr	r0, [r7, #4]
 800fbfe:	f7ff ffe9 	bl	800fbd4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 800fc02:	2104      	movs	r1, #4
 800fc04:	6878      	ldr	r0, [r7, #4]
 800fc06:	f016 f874 	bl	8025cf2 <_ZdlPvj>
 800fc0a:	687b      	ldr	r3, [r7, #4]
 800fc0c:	4618      	mov	r0, r3
 800fc0e:	3708      	adds	r7, #8
 800fc10:	46bd      	mov	sp, r7
 800fc12:	bd80      	pop	{r7, pc}

0800fc14 <_ZN8touchgfx3HAL5vSyncEv>:
    /**
     * Called by the VSync interrupt.
     *
     * Called by the VSync interrupt for counting of LCD refreshes.
     */
    void vSync()
 800fc14:	b480      	push	{r7}
 800fc16:	b083      	sub	sp, #12
 800fc18:	af00      	add	r7, sp, #0
 800fc1a:	6078      	str	r0, [r7, #4]
    {
        vSyncCnt++;
 800fc1c:	687b      	ldr	r3, [r7, #4]
 800fc1e:	f893 306a 	ldrb.w	r3, [r3, #106]	@ 0x6a
 800fc22:	3301      	adds	r3, #1
 800fc24:	b2da      	uxtb	r2, r3
 800fc26:	687b      	ldr	r3, [r7, #4]
 800fc28:	f883 206a 	strb.w	r2, [r3, #106]	@ 0x6a
    }
 800fc2c:	bf00      	nop
 800fc2e:	370c      	adds	r7, #12
 800fc30:	46bd      	mov	sp, r7
 800fc32:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc36:	4770      	bx	lr

0800fc38 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>:
     * Sets a framebuffer allocator. The framebuffer allocator is only used in partial
     * framebuffer mode.
     *
     * @param [in] allocator pointer to a framebuffer allocator object.
     */
    void setFrameBufferAllocator(FrameBufferAllocator* allocator)
 800fc38:	b480      	push	{r7}
 800fc3a:	b083      	sub	sp, #12
 800fc3c:	af00      	add	r7, sp, #0
 800fc3e:	6078      	str	r0, [r7, #4]
 800fc40:	6039      	str	r1, [r7, #0]
    {
        frameBufferAllocator = allocator;
 800fc42:	687b      	ldr	r3, [r7, #4]
 800fc44:	683a      	ldr	r2, [r7, #0]
 800fc46:	619a      	str	r2, [r3, #24]
    }
 800fc48:	bf00      	nop
 800fc4a:	370c      	adds	r7, #12
 800fc4c:	46bd      	mov	sp, r7
 800fc4e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc52:	4770      	bx	lr

0800fc54 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>:
    /**
     * Gets the framebuffer allocator.
     *
     * @return The framebuffer allocator.
     */
    FrameBufferAllocator* getFrameBufferAllocator()
 800fc54:	b480      	push	{r7}
 800fc56:	b083      	sub	sp, #12
 800fc58:	af00      	add	r7, sp, #0
 800fc5a:	6078      	str	r0, [r7, #4]
    {
        return frameBufferAllocator;
 800fc5c:	687b      	ldr	r3, [r7, #4]
 800fc5e:	699b      	ldr	r3, [r3, #24]
    }
 800fc60:	4618      	mov	r0, r3
 800fc62:	370c      	adds	r7, #12
 800fc64:	46bd      	mov	sp, r7
 800fc66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fc6a:	4770      	bx	lr

0800fc6c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>:
     *
     * @param  s The desired strategy to use.
     *
     * @return true if the desired strategy will be used, false otherwise.
     */
    bool setFrameRefreshStrategy(FrameRefreshStrategy s)
 800fc6c:	b580      	push	{r7, lr}
 800fc6e:	b082      	sub	sp, #8
 800fc70:	af00      	add	r7, sp, #0
 800fc72:	6078      	str	r0, [r7, #4]
 800fc74:	460b      	mov	r3, r1
 800fc76:	70fb      	strb	r3, [r7, #3]
    {
        if (s == REFRESH_STRATEGY_DEFAULT || s == REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER)
 800fc78:	78fb      	ldrb	r3, [r7, #3]
 800fc7a:	2b00      	cmp	r3, #0
 800fc7c:	d002      	beq.n	800fc84 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x18>
 800fc7e:	78fb      	ldrb	r3, [r7, #3]
 800fc80:	2b02      	cmp	r3, #2
 800fc82:	d105      	bne.n	800fc90 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x24>
        {
            refreshStrategy = s;
 800fc84:	687b      	ldr	r3, [r7, #4]
 800fc86:	78fa      	ldrb	r2, [r7, #3]
 800fc88:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
            return true;
 800fc8c:	2301      	movs	r3, #1
 800fc8e:	e027      	b.n	800fce0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        if (s == REFRESH_STRATEGY_OPTIM_SINGLE_BUFFER_TFT_CTRL)
 800fc90:	78fb      	ldrb	r3, [r7, #3]
 800fc92:	2b01      	cmp	r3, #1
 800fc94:	d123      	bne.n	800fcde <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x72>
        {
            // Perform sanity checks. This strategy requires
            //   - task delay function
            //   - a TFT controller (+ an impl of getTFTCurrentLine())
            //   - single buffering
            if (taskDelayFunc != 0 && getTFTCurrentLine() != 0xFFFF && !USE_DOUBLE_BUFFERING)
 800fc96:	687b      	ldr	r3, [r7, #4]
 800fc98:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 800fc9a:	2b00      	cmp	r3, #0
 800fc9c:	d014      	beq.n	800fcc8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fc9e:	687b      	ldr	r3, [r7, #4]
 800fca0:	681b      	ldr	r3, [r3, #0]
 800fca2:	339c      	adds	r3, #156	@ 0x9c
 800fca4:	681b      	ldr	r3, [r3, #0]
 800fca6:	6878      	ldr	r0, [r7, #4]
 800fca8:	4798      	blx	r3
 800fcaa:	4603      	mov	r3, r0
 800fcac:	461a      	mov	r2, r3
 800fcae:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 800fcb2:	429a      	cmp	r2, r3
 800fcb4:	d008      	beq.n	800fcc8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fcb6:	4b0c      	ldr	r3, [pc, #48]	@ (800fce8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x7c>)
 800fcb8:	781b      	ldrb	r3, [r3, #0]
 800fcba:	f083 0301 	eor.w	r3, r3, #1
 800fcbe:	b2db      	uxtb	r3, r3
 800fcc0:	2b00      	cmp	r3, #0
 800fcc2:	d001      	beq.n	800fcc8 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5c>
 800fcc4:	2301      	movs	r3, #1
 800fcc6:	e000      	b.n	800fcca <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x5e>
 800fcc8:	2300      	movs	r3, #0
 800fcca:	2b00      	cmp	r3, #0
 800fccc:	d005      	beq.n	800fcda <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x6e>
            {
                refreshStrategy = s;
 800fcce:	687b      	ldr	r3, [r7, #4]
 800fcd0:	78fa      	ldrb	r2, [r7, #3]
 800fcd2:	f883 2048 	strb.w	r2, [r3, #72]	@ 0x48
                return true;
 800fcd6:	2301      	movs	r3, #1
 800fcd8:	e002      	b.n	800fce0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
            }
            return false;
 800fcda:	2300      	movs	r3, #0
 800fcdc:	e000      	b.n	800fce0 <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE+0x74>
        }
        // Unknown strategy
        return false;
 800fcde:	2300      	movs	r3, #0
    }
 800fce0:	4618      	mov	r0, r3
 800fce2:	3708      	adds	r7, #8
 800fce4:	46bd      	mov	sp, r7
 800fce6:	bd80      	pop	{r7, pc}
 800fce8:	20002f52 	.word	0x20002f52

0800fcec <_ZN8touchgfx5paint8tearDownEv>:
{
    blendL8CLUT = data;
}

void tearDown()
{
 800fcec:	b480      	push	{r7}
 800fcee:	af00      	add	r7, sp, #0
}
 800fcf0:	bf00      	nop
 800fcf2:	46bd      	mov	sp, r7
 800fcf4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fcf8:	4770      	bx	lr

0800fcfa <_ZN8touchgfx5paint9flushLineEPmi>:

void flushLine(uint32_t* addr, int sizebytes)
{
 800fcfa:	b480      	push	{r7}
 800fcfc:	b083      	sub	sp, #12
 800fcfe:	af00      	add	r7, sp, #0
 800fd00:	6078      	str	r0, [r7, #4]
 800fd02:	6039      	str	r1, [r7, #0]
}
 800fd04:	bf00      	nop
 800fd06:	370c      	adds	r7, #12
 800fd08:	46bd      	mov	sp, r7
 800fd0a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fd0e:	4770      	bx	lr

0800fd10 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>:
        } while (++framebuffer < lineEnd);
    }
}

void lineFromRGB565(uint16_t* const ptr, const uint16_t* const data, const unsigned count, const uint8_t alpha)
{
 800fd10:	b480      	push	{r7}
 800fd12:	b08d      	sub	sp, #52	@ 0x34
 800fd14:	af00      	add	r7, sp, #0
 800fd16:	60f8      	str	r0, [r7, #12]
 800fd18:	60b9      	str	r1, [r7, #8]
 800fd1a:	607a      	str	r2, [r7, #4]
 800fd1c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fd1e:	68fb      	ldr	r3, [r7, #12]
 800fd20:	62fb      	str	r3, [r7, #44]	@ 0x2c
    const uint16_t* bitmapPointer = data;
 800fd22:	68bb      	ldr	r3, [r7, #8]
 800fd24:	62bb      	str	r3, [r7, #40]	@ 0x28
    const uint16_t* const chunkend = framebuffer + count;
 800fd26:	687b      	ldr	r3, [r7, #4]
 800fd28:	005b      	lsls	r3, r3, #1
 800fd2a:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fd2c:	4413      	add	r3, r2
 800fd2e:	627b      	str	r3, [r7, #36]	@ 0x24

    if (alpha == 0xFF)
 800fd30:	78fb      	ldrb	r3, [r7, #3]
 800fd32:	2bff      	cmp	r3, #255	@ 0xff
 800fd34:	d112      	bne.n	800fd5c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
    {
        do
        {
            *framebuffer = *bitmapPointer++;
 800fd36:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fd38:	1c9a      	adds	r2, r3, #2
 800fd3a:	62ba      	str	r2, [r7, #40]	@ 0x28
 800fd3c:	881a      	ldrh	r2, [r3, #0]
 800fd3e:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fd40:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fd42:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fd44:	3302      	adds	r3, #2
 800fd46:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fd48:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fd4a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fd4c:	429a      	cmp	r2, r3
 800fd4e:	bf34      	ite	cc
 800fd50:	2301      	movcc	r3, #1
 800fd52:	2300      	movcs	r3, #0
 800fd54:	b2db      	uxtb	r3, r3
 800fd56:	2b00      	cmp	r3, #0
 800fd58:	d1ed      	bne.n	800fd36 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x26>
        do
        {
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
        } while (++framebuffer < chunkend);
    }
}
 800fd5a:	e079      	b.n	800fe50 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x140>
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fd5c:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 800fd5e:	1c9a      	adds	r2, r3, #2
 800fd60:	62ba      	str	r2, [r7, #40]	@ 0x28
 800fd62:	881a      	ldrh	r2, [r3, #0]
 800fd64:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fd66:	881b      	ldrh	r3, [r3, #0]
 800fd68:	847a      	strh	r2, [r7, #34]	@ 0x22
 800fd6a:	843b      	strh	r3, [r7, #32]
 800fd6c:	78fb      	ldrb	r3, [r7, #3]
 800fd6e:	77fb      	strb	r3, [r7, #31]
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fd70:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fd72:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fd76:	f023 0307 	bic.w	r3, r3, #7
 800fd7a:	b299      	uxth	r1, r3
 800fd7c:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fd7e:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fd82:	b29a      	uxth	r2, r3
 800fd84:	8c7b      	ldrh	r3, [r7, #34]	@ 0x22
 800fd86:	f003 031f 	and.w	r3, r3, #31
 800fd8a:	b29b      	uxth	r3, r3
 800fd8c:	83b9      	strh	r1, [r7, #28]
 800fd8e:	837a      	strh	r2, [r7, #26]
 800fd90:	833b      	strh	r3, [r7, #24]
 800fd92:	8c3b      	ldrh	r3, [r7, #32]
 800fd94:	82fb      	strh	r3, [r7, #22]
 800fd96:	7ffb      	ldrb	r3, [r7, #31]
 800fd98:	757b      	strb	r3, [r7, #21]
    const uint8_t ialpha = 0xFF - alpha;
 800fd9a:	7d7b      	ldrb	r3, [r7, #21]
 800fd9c:	43db      	mvns	r3, r3
 800fd9e:	753b      	strb	r3, [r7, #20]
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fda0:	8bbb      	ldrh	r3, [r7, #28]
 800fda2:	7d7a      	ldrb	r2, [r7, #21]
 800fda4:	fb03 f202 	mul.w	r2, r3, r2
 800fda8:	8afb      	ldrh	r3, [r7, #22]
 800fdaa:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 800fdae:	7d39      	ldrb	r1, [r7, #20]
 800fdb0:	fb01 f303 	mul.w	r3, r1, r3
 800fdb4:	4413      	add	r3, r2
 800fdb6:	4a29      	ldr	r2, [pc, #164]	@ (800fe5c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fdb8:	fb82 1203 	smull	r1, r2, r2, r3
 800fdbc:	441a      	add	r2, r3
 800fdbe:	11d2      	asrs	r2, r2, #7
 800fdc0:	17db      	asrs	r3, r3, #31
 800fdc2:	1ad3      	subs	r3, r2, r3
 800fdc4:	b21b      	sxth	r3, r3
 800fdc6:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fdca:	f023 0307 	bic.w	r3, r3, #7
 800fdce:	b21a      	sxth	r2, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fdd0:	8b7b      	ldrh	r3, [r7, #26]
 800fdd2:	7d79      	ldrb	r1, [r7, #21]
 800fdd4:	fb03 f101 	mul.w	r1, r3, r1
 800fdd8:	8afb      	ldrh	r3, [r7, #22]
 800fdda:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fdde:	7d38      	ldrb	r0, [r7, #20]
 800fde0:	fb00 f303 	mul.w	r3, r0, r3
 800fde4:	440b      	add	r3, r1
 800fde6:	491d      	ldr	r1, [pc, #116]	@ (800fe5c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fde8:	fb81 0103 	smull	r0, r1, r1, r3
 800fdec:	4419      	add	r1, r3
 800fdee:	11c9      	asrs	r1, r1, #7
 800fdf0:	17db      	asrs	r3, r3, #31
 800fdf2:	1acb      	subs	r3, r1, r3
 800fdf4:	b21b      	sxth	r3, r3
 800fdf6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fdfa:	b21b      	sxth	r3, r3
    return (((R * alpha + (bufpix & RMASK) * ialpha) / 255) & RMASK) |
 800fdfc:	4313      	orrs	r3, r2
 800fdfe:	b21a      	sxth	r2, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fe00:	8b3b      	ldrh	r3, [r7, #24]
 800fe02:	7d79      	ldrb	r1, [r7, #21]
 800fe04:	fb03 f101 	mul.w	r1, r3, r1
 800fe08:	8afb      	ldrh	r3, [r7, #22]
 800fe0a:	f003 031f 	and.w	r3, r3, #31
 800fe0e:	7d38      	ldrb	r0, [r7, #20]
 800fe10:	fb00 f303 	mul.w	r3, r0, r3
 800fe14:	440b      	add	r3, r1
 800fe16:	4911      	ldr	r1, [pc, #68]	@ (800fe5c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x14c>)
 800fe18:	fb81 0103 	smull	r0, r1, r1, r3
 800fe1c:	4419      	add	r1, r3
 800fe1e:	11c9      	asrs	r1, r1, #7
 800fe20:	17db      	asrs	r3, r3, #31
 800fe22:	1acb      	subs	r3, r1, r3
 800fe24:	b21b      	sxth	r3, r3
 800fe26:	f003 031f 	and.w	r3, r3, #31
 800fe2a:	b21b      	sxth	r3, r3
           (((G * alpha + (bufpix & GMASK) * ialpha) / 255) & GMASK) |
 800fe2c:	4313      	orrs	r3, r2
 800fe2e:	b21b      	sxth	r3, r3
           (((B * alpha + (bufpix & BMASK) * ialpha) / 255) & BMASK);
 800fe30:	b29a      	uxth	r2, r3
    return alphaBlend(newpix & RMASK, newpix & GMASK, newpix & BMASK, bufpix, alpha);
 800fe32:	bf00      	nop
            *framebuffer = alphaBlend(*bitmapPointer++, *framebuffer, alpha);
 800fe34:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fe36:	801a      	strh	r2, [r3, #0]
        } while (++framebuffer < chunkend);
 800fe38:	6afb      	ldr	r3, [r7, #44]	@ 0x2c
 800fe3a:	3302      	adds	r3, #2
 800fe3c:	62fb      	str	r3, [r7, #44]	@ 0x2c
 800fe3e:	6afa      	ldr	r2, [r7, #44]	@ 0x2c
 800fe40:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 800fe42:	429a      	cmp	r2, r3
 800fe44:	bf34      	ite	cc
 800fe46:	2301      	movcc	r3, #1
 800fe48:	2300      	movcs	r3, #0
 800fe4a:	b2db      	uxtb	r3, r3
 800fe4c:	2b00      	cmp	r3, #0
 800fe4e:	d185      	bne.n	800fd5c <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh+0x4c>
}
 800fe50:	bf00      	nop
 800fe52:	3734      	adds	r7, #52	@ 0x34
 800fe54:	46bd      	mov	sp, r7
 800fe56:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe5a:	4770      	bx	lr
 800fe5c:	80808081 	.word	0x80808081

0800fe60 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>:

void lineFromARGB8888(uint16_t* const ptr, const uint32_t* const data, const unsigned count, const uint8_t alpha)
{
 800fe60:	b590      	push	{r4, r7, lr}
 800fe62:	b093      	sub	sp, #76	@ 0x4c
 800fe64:	af00      	add	r7, sp, #0
 800fe66:	60f8      	str	r0, [r7, #12]
 800fe68:	60b9      	str	r1, [r7, #8]
 800fe6a:	607a      	str	r2, [r7, #4]
 800fe6c:	70fb      	strb	r3, [r7, #3]
    uint16_t* framebuffer = ptr;
 800fe6e:	68fb      	ldr	r3, [r7, #12]
 800fe70:	647b      	str	r3, [r7, #68]	@ 0x44
    const uint32_t* bitmapPointer = data;
 800fe72:	68bb      	ldr	r3, [r7, #8]
 800fe74:	643b      	str	r3, [r7, #64]	@ 0x40
    const uint16_t* const chunkend = framebuffer + count;
 800fe76:	687b      	ldr	r3, [r7, #4]
 800fe78:	005b      	lsls	r3, r3, #1
 800fe7a:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 800fe7c:	4413      	add	r3, r2
 800fe7e:	63fb      	str	r3, [r7, #60]	@ 0x3c
    do
    {
        const uint8_t srcAlpha = (*bitmapPointer) >> 24;
 800fe80:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800fe82:	681b      	ldr	r3, [r3, #0]
 800fe84:	0e1b      	lsrs	r3, r3, #24
 800fe86:	f887 303b 	strb.w	r3, [r7, #59]	@ 0x3b
        const uint8_t a = LCD::div255(alpha * srcAlpha);
 800fe8a:	78fb      	ldrb	r3, [r7, #3]
 800fe8c:	b29a      	uxth	r2, r3
 800fe8e:	f897 303b 	ldrb.w	r3, [r7, #59]	@ 0x3b
 800fe92:	b29b      	uxth	r3, r3
 800fe94:	fb12 f303 	smulbb	r3, r2, r3
 800fe98:	b29b      	uxth	r3, r3
 800fe9a:	867b      	strh	r3, [r7, #50]	@ 0x32
     *
     * @return The result of a division by 255.
     */
    FORCE_INLINE_FUNCTION static uint8_t div255(uint16_t num)
    {
        return (num + 1 + (num >> 8)) >> 8;
 800fe9c:	8e7b      	ldrh	r3, [r7, #50]	@ 0x32
 800fe9e:	3301      	adds	r3, #1
 800fea0:	8e7a      	ldrh	r2, [r7, #50]	@ 0x32
 800fea2:	0a12      	lsrs	r2, r2, #8
 800fea4:	b292      	uxth	r2, r2
 800fea6:	4413      	add	r3, r2
 800fea8:	121b      	asrs	r3, r3, #8
 800feaa:	b2db      	uxtb	r3, r3
 800feac:	f887 303a 	strb.w	r3, [r7, #58]	@ 0x3a
        if (a == 0xFF)
 800feb0:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800feb4:	2bff      	cmp	r3, #255	@ 0xff
 800feb6:	d133      	bne.n	800ff20 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0xc0>
        {
            *framebuffer = getNativeColor(*bitmapPointer);
 800feb8:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800feba:	681a      	ldr	r2, [r3, #0]
 800febc:	f107 0318 	add.w	r3, r7, #24
 800fec0:	4611      	mov	r1, r2
 800fec2:	4618      	mov	r0, r3
 800fec4:	f7f9 fdc2 	bl	8009a4c <_ZN8touchgfx9colortypeC1Em>
 800fec8:	69bb      	ldr	r3, [r7, #24]
 800feca:	617b      	str	r3, [r7, #20]
    return ((color >> 8) & 0xF800) | ((color >> 5) & 0x07E0) | ((color >> 3) & 0x001F);
 800fecc:	f107 0314 	add.w	r3, r7, #20
 800fed0:	4618      	mov	r0, r3
 800fed2:	f7ff fe72 	bl	800fbba <_ZNK8touchgfx9colortypecvmEv>
 800fed6:	4603      	mov	r3, r0
 800fed8:	0a1b      	lsrs	r3, r3, #8
 800feda:	b29b      	uxth	r3, r3
 800fedc:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fee0:	f023 0307 	bic.w	r3, r3, #7
 800fee4:	b29c      	uxth	r4, r3
 800fee6:	f107 0314 	add.w	r3, r7, #20
 800feea:	4618      	mov	r0, r3
 800feec:	f7ff fe65 	bl	800fbba <_ZNK8touchgfx9colortypecvmEv>
 800fef0:	4603      	mov	r3, r0
 800fef2:	095b      	lsrs	r3, r3, #5
 800fef4:	b29b      	uxth	r3, r3
 800fef6:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 800fefa:	b29b      	uxth	r3, r3
 800fefc:	4323      	orrs	r3, r4
 800fefe:	b29c      	uxth	r4, r3
 800ff00:	f107 0314 	add.w	r3, r7, #20
 800ff04:	4618      	mov	r0, r3
 800ff06:	f7ff fe58 	bl	800fbba <_ZNK8touchgfx9colortypecvmEv>
 800ff0a:	4603      	mov	r3, r0
 800ff0c:	08db      	lsrs	r3, r3, #3
 800ff0e:	b29b      	uxth	r3, r3
 800ff10:	f003 031f 	and.w	r3, r3, #31
 800ff14:	b29b      	uxth	r3, r3
 800ff16:	4323      	orrs	r3, r4
 800ff18:	b29a      	uxth	r2, r3
            *framebuffer = getNativeColor(*bitmapPointer);
 800ff1a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800ff1c:	801a      	strh	r2, [r3, #0]
 800ff1e:	e0a9      	b.n	8010074 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        }
        else if (a)
 800ff20:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800ff24:	2b00      	cmp	r3, #0
 800ff26:	f000 80a5 	beq.w	8010074 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x214>
        {
            const uint32_t newpix = *bitmapPointer;
 800ff2a:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 800ff2c:	681b      	ldr	r3, [r3, #0]
 800ff2e:	637b      	str	r3, [r7, #52]	@ 0x34
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 800ff30:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ff32:	0c1b      	lsrs	r3, r3, #16
 800ff34:	b2d8      	uxtb	r0, r3
 800ff36:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ff38:	0a1b      	lsrs	r3, r3, #8
 800ff3a:	b2d9      	uxtb	r1, r3
 800ff3c:	6b7b      	ldr	r3, [r7, #52]	@ 0x34
 800ff3e:	b2da      	uxtb	r2, r3
 800ff40:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 800ff42:	881b      	ldrh	r3, [r3, #0]
 800ff44:	f887 0031 	strb.w	r0, [r7, #49]	@ 0x31
 800ff48:	f887 1030 	strb.w	r1, [r7, #48]	@ 0x30
 800ff4c:	f887 202f 	strb.w	r2, [r7, #47]	@ 0x2f
 800ff50:	85bb      	strh	r3, [r7, #44]	@ 0x2c
 800ff52:	f897 303a 	ldrb.w	r3, [r7, #58]	@ 0x3a
 800ff56:	f887 302b 	strb.w	r3, [r7, #43]	@ 0x2b
    const uint8_t ialpha = 0xFF - alpha;
 800ff5a:	f897 302b 	ldrb.w	r3, [r7, #43]	@ 0x2b
 800ff5e:	43db      	mvns	r3, r3
 800ff60:	f887 302a 	strb.w	r3, [r7, #42]	@ 0x2a
 800ff64:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800ff66:	853b      	strh	r3, [r7, #40]	@ 0x28
     *
     * @return The red part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getRedFromRGB565(uint16_t color)
    {
        const uint8_t red = (color >> 8) & 0xF8;
 800ff68:	8d3b      	ldrh	r3, [r7, #40]	@ 0x28
 800ff6a:	0a1b      	lsrs	r3, r3, #8
 800ff6c:	b29b      	uxth	r3, r3
 800ff6e:	b2db      	uxtb	r3, r3
 800ff70:	f023 0307 	bic.w	r3, r3, #7
 800ff74:	f887 3027 	strb.w	r3, [r7, #39]	@ 0x27
        return red | (red >> 5);
 800ff78:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800ff7c:	095b      	lsrs	r3, r3, #5
 800ff7e:	b2da      	uxtb	r2, r3
 800ff80:	f897 3027 	ldrb.w	r3, [r7, #39]	@ 0x27
 800ff84:	4313      	orrs	r3, r2
 800ff86:	b2db      	uxtb	r3, r3
    const uint8_t fbred = Color::getRedFromRGB565(bufpix);
 800ff88:	f887 3026 	strb.w	r3, [r7, #38]	@ 0x26
 800ff8c:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800ff8e:	84bb      	strh	r3, [r7, #36]	@ 0x24
     *
     * @return The green part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getGreenFromRGB565(uint16_t color)
    {
        const uint8_t green = (color >> 3) & 0xFC;
 800ff90:	8cbb      	ldrh	r3, [r7, #36]	@ 0x24
 800ff92:	08db      	lsrs	r3, r3, #3
 800ff94:	b29b      	uxth	r3, r3
 800ff96:	b2db      	uxtb	r3, r3
 800ff98:	f023 0303 	bic.w	r3, r3, #3
 800ff9c:	f887 3023 	strb.w	r3, [r7, #35]	@ 0x23
        return green | (green >> 6);
 800ffa0:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800ffa4:	099b      	lsrs	r3, r3, #6
 800ffa6:	b2da      	uxtb	r2, r3
 800ffa8:	f897 3023 	ldrb.w	r3, [r7, #35]	@ 0x23
 800ffac:	4313      	orrs	r3, r2
 800ffae:	b2db      	uxtb	r3, r3
    const uint8_t fbgreen = Color::getGreenFromRGB565(bufpix);
 800ffb0:	f887 3022 	strb.w	r3, [r7, #34]	@ 0x22
 800ffb4:	8dbb      	ldrh	r3, [r7, #44]	@ 0x2c
 800ffb6:	843b      	strh	r3, [r7, #32]
     *
     * @return The blue part of the color (0 to 255).
     */
    FORCE_INLINE_FUNCTION static uint8_t getBlueFromRGB565(uint16_t color)
    {
        const uint8_t blue = color << 3;
 800ffb8:	8c3b      	ldrh	r3, [r7, #32]
 800ffba:	b2db      	uxtb	r3, r3
 800ffbc:	00db      	lsls	r3, r3, #3
 800ffbe:	77fb      	strb	r3, [r7, #31]
        return blue | (blue >> 5);
 800ffc0:	7ffb      	ldrb	r3, [r7, #31]
 800ffc2:	095b      	lsrs	r3, r3, #5
 800ffc4:	b2da      	uxtb	r2, r3
 800ffc6:	7ffb      	ldrb	r3, [r7, #31]
 800ffc8:	4313      	orrs	r3, r2
 800ffca:	b2db      	uxtb	r3, r3
    const uint8_t fbblue = Color::getBlueFromRGB565(bufpix);
 800ffcc:	77bb      	strb	r3, [r7, #30]
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 800ffce:	f897 3031 	ldrb.w	r3, [r7, #49]	@ 0x31
 800ffd2:	f897 202b 	ldrb.w	r2, [r7, #43]	@ 0x2b
 800ffd6:	fb03 f202 	mul.w	r2, r3, r2
 800ffda:	f897 3026 	ldrb.w	r3, [r7, #38]	@ 0x26
 800ffde:	f897 102a 	ldrb.w	r1, [r7, #42]	@ 0x2a
 800ffe2:	fb01 f303 	mul.w	r3, r1, r3
 800ffe6:	4413      	add	r3, r2
 800ffe8:	4a2d      	ldr	r2, [pc, #180]	@ (80100a0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 800ffea:	fb82 1203 	smull	r1, r2, r2, r3
 800ffee:	441a      	add	r2, r3
 800fff0:	11d2      	asrs	r2, r2, #7
 800fff2:	17db      	asrs	r3, r3, #31
 800fff4:	1ad3      	subs	r3, r2, r3
 800fff6:	021b      	lsls	r3, r3, #8
 800fff8:	b21b      	sxth	r3, r3
 800fffa:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 800fffe:	f023 0307 	bic.w	r3, r3, #7
 8010002:	b21a      	sxth	r2, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 8010004:	f897 3030 	ldrb.w	r3, [r7, #48]	@ 0x30
 8010008:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 801000c:	fb03 f101 	mul.w	r1, r3, r1
 8010010:	f897 3022 	ldrb.w	r3, [r7, #34]	@ 0x22
 8010014:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 8010018:	fb00 f303 	mul.w	r3, r0, r3
 801001c:	440b      	add	r3, r1
 801001e:	4920      	ldr	r1, [pc, #128]	@ (80100a0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 8010020:	fb81 0103 	smull	r0, r1, r1, r3
 8010024:	4419      	add	r1, r3
 8010026:	11c9      	asrs	r1, r1, #7
 8010028:	17db      	asrs	r3, r3, #31
 801002a:	1acb      	subs	r3, r1, r3
 801002c:	00db      	lsls	r3, r3, #3
 801002e:	b21b      	sxth	r3, r3
 8010030:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8010034:	b21b      	sxth	r3, r3
    return ((((R * alpha + fbred * ialpha) / 255) << 8) & RMASK) |
 8010036:	4313      	orrs	r3, r2
 8010038:	b21a      	sxth	r2, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 801003a:	f897 302f 	ldrb.w	r3, [r7, #47]	@ 0x2f
 801003e:	f897 102b 	ldrb.w	r1, [r7, #43]	@ 0x2b
 8010042:	fb03 f101 	mul.w	r1, r3, r1
 8010046:	7fbb      	ldrb	r3, [r7, #30]
 8010048:	f897 002a 	ldrb.w	r0, [r7, #42]	@ 0x2a
 801004c:	fb00 f303 	mul.w	r3, r0, r3
 8010050:	440b      	add	r3, r1
 8010052:	4913      	ldr	r1, [pc, #76]	@ (80100a0 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x240>)
 8010054:	fb81 0103 	smull	r0, r1, r1, r3
 8010058:	4419      	add	r1, r3
 801005a:	11c9      	asrs	r1, r1, #7
 801005c:	17db      	asrs	r3, r3, #31
 801005e:	1acb      	subs	r3, r1, r3
 8010060:	10db      	asrs	r3, r3, #3
 8010062:	b21b      	sxth	r3, r3
 8010064:	f003 031f 	and.w	r3, r3, #31
 8010068:	b21b      	sxth	r3, r3
           ((((G * alpha + fbgreen * ialpha) / 255) << 3) & GMASK) |
 801006a:	4313      	orrs	r3, r2
 801006c:	b21b      	sxth	r3, r3
           ((((B * alpha + fbblue * ialpha) / 255) >> 3) & BMASK);
 801006e:	b29a      	uxth	r2, r3
            *framebuffer = alphaBlend24bit((newpix >> 16), (newpix >> 8), (newpix), *framebuffer, a);
 8010070:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 8010072:	801a      	strh	r2, [r3, #0]
        }
        bitmapPointer++;
 8010074:	6c3b      	ldr	r3, [r7, #64]	@ 0x40
 8010076:	3304      	adds	r3, #4
 8010078:	643b      	str	r3, [r7, #64]	@ 0x40
    } while (++framebuffer < chunkend);
 801007a:	6c7b      	ldr	r3, [r7, #68]	@ 0x44
 801007c:	3302      	adds	r3, #2
 801007e:	647b      	str	r3, [r7, #68]	@ 0x44
 8010080:	6c7a      	ldr	r2, [r7, #68]	@ 0x44
 8010082:	6bfb      	ldr	r3, [r7, #60]	@ 0x3c
 8010084:	429a      	cmp	r2, r3
 8010086:	bf34      	ite	cc
 8010088:	2301      	movcc	r3, #1
 801008a:	2300      	movcs	r3, #0
 801008c:	b2db      	uxtb	r3, r3
 801008e:	2b00      	cmp	r3, #0
 8010090:	f47f aef6 	bne.w	800fe80 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh+0x20>
}
 8010094:	bf00      	nop
 8010096:	bf00      	nop
 8010098:	374c      	adds	r7, #76	@ 0x4c
 801009a:	46bd      	mov	sp, r7
 801009c:	bd90      	pop	{r4, r7, pc}
 801009e:	bf00      	nop
 80100a0:	80808081 	.word	0x80808081

080100a4 <_ZN20TouchGFXGeneratedHAL10initializeEv>:
       3, /* number of blocks */
       2 /* bytes per pixel */
       > blockAllocator;

void TouchGFXGeneratedHAL::initialize()
{
 80100a4:	b5b0      	push	{r4, r5, r7, lr}
 80100a6:	b082      	sub	sp, #8
 80100a8:	af00      	add	r7, sp, #0
 80100aa:	6078      	str	r0, [r7, #4]
    HAL::initialize();
 80100ac:	687b      	ldr	r3, [r7, #4]
 80100ae:	4618      	mov	r0, r3
 80100b0:	f000 fed9 	bl	8010e66 <_ZN8touchgfx3HAL10initializeEv>
    registerEventListener(*(Application::getInstance()));
 80100b4:	687d      	ldr	r5, [r7, #4]
 80100b6:	687b      	ldr	r3, [r7, #4]
 80100b8:	681b      	ldr	r3, [r3, #0]
 80100ba:	3364      	adds	r3, #100	@ 0x64
 80100bc:	681c      	ldr	r4, [r3, #0]
 80100be:	f004 f8bf 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 80100c2:	4603      	mov	r3, r0
 80100c4:	4619      	mov	r1, r3
 80100c6:	4628      	mov	r0, r5
 80100c8:	47a0      	blx	r4
    enableLCDControllerInterrupt();
 80100ca:	687b      	ldr	r3, [r7, #4]
 80100cc:	681b      	ldr	r3, [r3, #0]
 80100ce:	3380      	adds	r3, #128	@ 0x80
 80100d0:	681b      	ldr	r3, [r3, #0]
 80100d2:	6878      	ldr	r0, [r7, #4]
 80100d4:	4798      	blx	r3
    enableInterrupts();
 80100d6:	687b      	ldr	r3, [r7, #4]
 80100d8:	681b      	ldr	r3, [r3, #0]
 80100da:	3378      	adds	r3, #120	@ 0x78
 80100dc:	681b      	ldr	r3, [r3, #0]
 80100de:	6878      	ldr	r0, [r7, #4]
 80100e0:	4798      	blx	r3
    // Partial framebuffer strategy
    setFrameBufferAllocator(&blockAllocator);
 80100e2:	687b      	ldr	r3, [r7, #4]
 80100e4:	4906      	ldr	r1, [pc, #24]	@ (8010100 <_ZN20TouchGFXGeneratedHAL10initializeEv+0x5c>)
 80100e6:	4618      	mov	r0, r3
 80100e8:	f7ff fda6 	bl	800fc38 <_ZN8touchgfx3HAL23setFrameBufferAllocatorEPNS_20FrameBufferAllocatorE>
    setFrameRefreshStrategy(HAL::REFRESH_STRATEGY_PARTIAL_FRAMEBUFFER);
 80100ec:	687b      	ldr	r3, [r7, #4]
 80100ee:	2102      	movs	r1, #2
 80100f0:	4618      	mov	r0, r3
 80100f2:	f7ff fdbb 	bl	800fc6c <_ZN8touchgfx3HAL23setFrameRefreshStrategyENS0_20FrameRefreshStrategyE>
}
 80100f6:	bf00      	nop
 80100f8:	3708      	adds	r7, #8
 80100fa:	46bd      	mov	sp, r7
 80100fc:	bdb0      	pop	{r4, r5, r7, pc}
 80100fe:	bf00      	nop
 8010100:	20000d60 	.word	0x20000d60

08010104 <_ZN20TouchGFXGeneratedHAL19configureInterruptsEv>:

void TouchGFXGeneratedHAL::configureInterrupts()
{
 8010104:	b480      	push	{r7}
 8010106:	b083      	sub	sp, #12
 8010108:	af00      	add	r7, sp, #0
 801010a:	6078      	str	r0, [r7, #4]
}
 801010c:	bf00      	nop
 801010e:	370c      	adds	r7, #12
 8010110:	46bd      	mov	sp, r7
 8010112:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010116:	4770      	bx	lr

08010118 <_ZN20TouchGFXGeneratedHAL16enableInterruptsEv>:

void TouchGFXGeneratedHAL::enableInterrupts()
{
 8010118:	b480      	push	{r7}
 801011a:	b083      	sub	sp, #12
 801011c:	af00      	add	r7, sp, #0
 801011e:	6078      	str	r0, [r7, #4]
}
 8010120:	bf00      	nop
 8010122:	370c      	adds	r7, #12
 8010124:	46bd      	mov	sp, r7
 8010126:	f85d 7b04 	ldr.w	r7, [sp], #4
 801012a:	4770      	bx	lr

0801012c <_ZN20TouchGFXGeneratedHAL17disableInterruptsEv>:

void TouchGFXGeneratedHAL::disableInterrupts()
{
 801012c:	b480      	push	{r7}
 801012e:	b083      	sub	sp, #12
 8010130:	af00      	add	r7, sp, #0
 8010132:	6078      	str	r0, [r7, #4]
}
 8010134:	bf00      	nop
 8010136:	370c      	adds	r7, #12
 8010138:	46bd      	mov	sp, r7
 801013a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801013e:	4770      	bx	lr

08010140 <_ZN20TouchGFXGeneratedHAL28enableLCDControllerInterruptEv>:

void TouchGFXGeneratedHAL::enableLCDControllerInterrupt()
{
 8010140:	b480      	push	{r7}
 8010142:	b083      	sub	sp, #12
 8010144:	af00      	add	r7, sp, #0
 8010146:	6078      	str	r0, [r7, #4]
}
 8010148:	bf00      	nop
 801014a:	370c      	adds	r7, #12
 801014c:	46bd      	mov	sp, r7
 801014e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010152:	4770      	bx	lr

08010154 <_ZN20TouchGFXGeneratedHAL10beginFrameEv>:

bool TouchGFXGeneratedHAL::beginFrame()
{
 8010154:	b580      	push	{r7, lr}
 8010156:	b082      	sub	sp, #8
 8010158:	af00      	add	r7, sp, #0
 801015a:	6078      	str	r0, [r7, #4]
    return HAL::beginFrame();
 801015c:	687b      	ldr	r3, [r7, #4]
 801015e:	4618      	mov	r0, r3
 8010160:	f000 fe68 	bl	8010e34 <_ZN8touchgfx3HAL10beginFrameEv>
 8010164:	4603      	mov	r3, r0
}
 8010166:	4618      	mov	r0, r3
 8010168:	3708      	adds	r7, #8
 801016a:	46bd      	mov	sp, r7
 801016c:	bd80      	pop	{r7, pc}

0801016e <_ZN20TouchGFXGeneratedHAL8endFrameEv>:

void TouchGFXGeneratedHAL::endFrame()
{
 801016e:	b580      	push	{r7, lr}
 8010170:	b082      	sub	sp, #8
 8010172:	af00      	add	r7, sp, #0
 8010174:	6078      	str	r0, [r7, #4]
    // We must guard the next frame until we're done transferring all blocks over our display interface
    // through either a semaphore if user is running an OS or a simple variable if not
    // Wait until all blocks have been transmitted
    while (touchgfxDisplayDriverTransmitActive()){}
 8010176:	bf00      	nop
 8010178:	f7f2 f966 	bl	8002448 <touchgfxDisplayDriverTransmitActive>
 801017c:	4603      	mov	r3, r0
 801017e:	2b00      	cmp	r3, #0
 8010180:	bf14      	ite	ne
 8010182:	2301      	movne	r3, #1
 8010184:	2300      	moveq	r3, #0
 8010186:	b2db      	uxtb	r3, r3
 8010188:	2b00      	cmp	r3, #0
 801018a:	d1f5      	bne.n	8010178 <_ZN20TouchGFXGeneratedHAL8endFrameEv+0xa>

    HAL::endFrame();
 801018c:	687b      	ldr	r3, [r7, #4]
 801018e:	4618      	mov	r0, r3
 8010190:	f000 fe5c 	bl	8010e4c <_ZN8touchgfx3HAL8endFrameEv>
    touchgfx::OSWrappers::signalRenderingDone();
 8010194:	f7fe fede 	bl	800ef54 <_ZN8touchgfx10OSWrappers19signalRenderingDoneEv>
}
 8010198:	bf00      	nop
 801019a:	3708      	adds	r7, #8
 801019c:	46bd      	mov	sp, r7
 801019e:	bd80      	pop	{r7, pc}

080101a0 <_ZNK20TouchGFXGeneratedHAL17getTFTFrameBufferEv>:
    fbPtr += rect.y * lcd().framebufferStride() + rect.x * 2;
    return fbPtr;
}

uint16_t* TouchGFXGeneratedHAL::getTFTFrameBuffer() const
{
 80101a0:	b480      	push	{r7}
 80101a2:	b083      	sub	sp, #12
 80101a4:	af00      	add	r7, sp, #0
 80101a6:	6078      	str	r0, [r7, #4]
    //getTFTFrameBuffer() not used for selected Frame Buffer Strategy
    return 0;
 80101a8:	2300      	movs	r3, #0
}
 80101aa:	4618      	mov	r0, r3
 80101ac:	370c      	adds	r7, #12
 80101ae:	46bd      	mov	sp, r7
 80101b0:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101b4:	4770      	bx	lr

080101b6 <_ZN20TouchGFXGeneratedHAL17setTFTFrameBufferEPt>:

void TouchGFXGeneratedHAL::setTFTFrameBuffer(uint16_t* adr)
{
 80101b6:	b480      	push	{r7}
 80101b8:	b083      	sub	sp, #12
 80101ba:	af00      	add	r7, sp, #0
 80101bc:	6078      	str	r0, [r7, #4]
 80101be:	6039      	str	r1, [r7, #0]
    //setTFTFrameBuffer() not used for selected display interface
}
 80101c0:	bf00      	nop
 80101c2:	370c      	adds	r7, #12
 80101c4:	46bd      	mov	sp, r7
 80101c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 80101ca:	4770      	bx	lr

080101cc <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE>:

void TouchGFXGeneratedHAL::flushFrameBuffer(const touchgfx::Rect& rect)
{
 80101cc:	b580      	push	{r7, lr}
 80101ce:	b088      	sub	sp, #32
 80101d0:	af02      	add	r7, sp, #8
 80101d2:	6078      	str	r0, [r7, #4]
 80101d4:	6039      	str	r1, [r7, #0]
    HAL::flushFrameBuffer(rect);
 80101d6:	687b      	ldr	r3, [r7, #4]
 80101d8:	6839      	ldr	r1, [r7, #0]
 80101da:	4618      	mov	r0, r3
 80101dc:	f000 fdf4 	bl	8010dc8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>
    // Once flushFrameBuffer() is called by the framework a block is already for transfer
    // Mark it ready for transfer and transmit it if user defined method isTransmittingData() does not return false
    // If data is not being transmitted, transfer the data with user defined method transmitFrameBufferBlock().
    frameBufferAllocator->markBlockReadyForTransfer();
 80101e0:	687b      	ldr	r3, [r7, #4]
 80101e2:	699a      	ldr	r2, [r3, #24]
 80101e4:	687b      	ldr	r3, [r7, #4]
 80101e6:	699b      	ldr	r3, [r3, #24]
 80101e8:	681b      	ldr	r3, [r3, #0]
 80101ea:	3304      	adds	r3, #4
 80101ec:	681b      	ldr	r3, [r3, #0]
 80101ee:	4610      	mov	r0, r2
 80101f0:	4798      	blx	r3
    if (!touchgfxDisplayDriverTransmitActive())
 80101f2:	f7f2 f929 	bl	8002448 <touchgfxDisplayDriverTransmitActive>
 80101f6:	4603      	mov	r3, r0
 80101f8:	2b00      	cmp	r3, #0
 80101fa:	bf0c      	ite	eq
 80101fc:	2301      	moveq	r3, #1
 80101fe:	2300      	movne	r3, #0
 8010200:	b2db      	uxtb	r3, r3
 8010202:	2b00      	cmp	r3, #0
 8010204:	d021      	beq.n	801024a <_ZN20TouchGFXGeneratedHAL16flushFrameBufferERKN8touchgfx4RectE+0x7e>
    {
        touchgfx::Rect r;
 8010206:	f107 030c 	add.w	r3, r7, #12
 801020a:	4618      	mov	r0, r3
 801020c:	f7f9 fc2d 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = frameBufferAllocator->getBlockForTransfer(r);
 8010210:	687b      	ldr	r3, [r7, #4]
 8010212:	699a      	ldr	r2, [r3, #24]
 8010214:	687b      	ldr	r3, [r7, #4]
 8010216:	699b      	ldr	r3, [r3, #24]
 8010218:	681b      	ldr	r3, [r3, #0]
 801021a:	330c      	adds	r3, #12
 801021c:	681b      	ldr	r3, [r3, #0]
 801021e:	f107 010c 	add.w	r1, r7, #12
 8010222:	4610      	mov	r0, r2
 8010224:	4798      	blx	r3
 8010226:	6178      	str	r0, [r7, #20]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 8010228:	f9b7 300c 	ldrsh.w	r3, [r7, #12]
 801022c:	b299      	uxth	r1, r3
 801022e:	f9b7 300e 	ldrsh.w	r3, [r7, #14]
 8010232:	b29a      	uxth	r2, r3
 8010234:	f9b7 3010 	ldrsh.w	r3, [r7, #16]
 8010238:	b298      	uxth	r0, r3
 801023a:	f9b7 3012 	ldrsh.w	r3, [r7, #18]
 801023e:	b29b      	uxth	r3, r3
 8010240:	9300      	str	r3, [sp, #0]
 8010242:	4603      	mov	r3, r0
 8010244:	6978      	ldr	r0, [r7, #20]
 8010246:	f7f2 f911 	bl	800246c <touchgfxDisplayDriverTransmitBlock>
    }
}
 801024a:	bf00      	nop
 801024c:	3718      	adds	r7, #24
 801024e:	46bd      	mov	sp, r7
 8010250:	bd80      	pop	{r7, pc}

08010252 <_ZN20TouchGFXGeneratedHAL9blockCopyEPvPKvm>:

bool TouchGFXGeneratedHAL::blockCopy(void* RESTRICT dest, const void* RESTRICT src, uint32_t numBytes)
{
 8010252:	b580      	push	{r7, lr}
 8010254:	b084      	sub	sp, #16
 8010256:	af00      	add	r7, sp, #0
 8010258:	60f8      	str	r0, [r7, #12]
 801025a:	60b9      	str	r1, [r7, #8]
 801025c:	607a      	str	r2, [r7, #4]
 801025e:	603b      	str	r3, [r7, #0]
    return HAL::blockCopy(dest, src, numBytes);
 8010260:	68f8      	ldr	r0, [r7, #12]
 8010262:	683b      	ldr	r3, [r7, #0]
 8010264:	687a      	ldr	r2, [r7, #4]
 8010266:	68b9      	ldr	r1, [r7, #8]
 8010268:	f000 ff1f 	bl	80110aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>
 801026c:	4603      	mov	r3, r0
}
 801026e:	4618      	mov	r0, r3
 8010270:	3710      	adds	r7, #16
 8010272:	46bd      	mov	sp, r7
 8010274:	bd80      	pop	{r7, pc}

08010276 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>:
/**
 * This function is called by FrameBufferAllocator if no block is
 * available.
 */
void FrameBufferAllocatorWaitOnTransfer()
{
 8010276:	b480      	push	{r7}
 8010278:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorWaitOnTransfer should be implemented in the user file
     */
}
 801027a:	bf00      	nop
 801027c:	46bd      	mov	sp, r7
 801027e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010282:	4770      	bx	lr

08010284 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>:
 * Called by FrameBufferAllocator when a block is drawn and
 * therefore ready for transfer. The LCD driver should use this
 * method to start a transfer.
 */
void FrameBufferAllocatorSignalBlockDrawn()
{
 8010284:	b480      	push	{r7}
 8010286:	af00      	add	r7, sp, #0
    /* NOTE: This function should not be modified, when the fuction is needed,
     *       FrameBufferAllocatorSignalBlockDrawn should be implemented in the user file
     */
}
 8010288:	bf00      	nop
 801028a:	46bd      	mov	sp, r7
 801028c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010290:	4770      	bx	lr

08010292 <_ZN8touchgfx16startNewTransferEv>:

// A user must call touchgfx::startNewTransfer(); once transmitFrameBufferBlock() has successfully sent a block.
void startNewTransfer()
{
 8010292:	b580      	push	{r7, lr}
 8010294:	b086      	sub	sp, #24
 8010296:	af02      	add	r7, sp, #8
    FrameBufferAllocator* fba = HAL::getInstance()->getFrameBufferAllocator();
 8010298:	f7f8 fa7e 	bl	8008798 <_ZN8touchgfx3HAL11getInstanceEv>
 801029c:	4603      	mov	r3, r0
 801029e:	4618      	mov	r0, r3
 80102a0:	f7ff fcd8 	bl	800fc54 <_ZN8touchgfx3HAL23getFrameBufferAllocatorEv>
 80102a4:	60f8      	str	r0, [r7, #12]

    // Free the previous transmitted block, marking it ready for rendering
    fba->freeBlockAfterTransfer();
 80102a6:	68fb      	ldr	r3, [r7, #12]
 80102a8:	681b      	ldr	r3, [r3, #0]
 80102aa:	3318      	adds	r3, #24
 80102ac:	681b      	ldr	r3, [r3, #0]
 80102ae:	68f8      	ldr	r0, [r7, #12]
 80102b0:	4798      	blx	r3
    if (fba->hasBlockReadyForTransfer())
 80102b2:	68fb      	ldr	r3, [r7, #12]
 80102b4:	681b      	ldr	r3, [r3, #0]
 80102b6:	3308      	adds	r3, #8
 80102b8:	681b      	ldr	r3, [r3, #0]
 80102ba:	68f8      	ldr	r0, [r7, #12]
 80102bc:	4798      	blx	r3
 80102be:	4603      	mov	r3, r0
 80102c0:	2b00      	cmp	r3, #0
 80102c2:	d01d      	beq.n	8010300 <_ZN8touchgfx16startNewTransferEv+0x6e>
    {
        touchgfx::Rect r;
 80102c4:	463b      	mov	r3, r7
 80102c6:	4618      	mov	r0, r3
 80102c8:	f7f9 fbcf 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
        // Get pointer to block buffer and coordinates of the rect
        const uint8_t* pixels = fba->getBlockForTransfer(r);
 80102cc:	68fb      	ldr	r3, [r7, #12]
 80102ce:	681b      	ldr	r3, [r3, #0]
 80102d0:	330c      	adds	r3, #12
 80102d2:	681b      	ldr	r3, [r3, #0]
 80102d4:	463a      	mov	r2, r7
 80102d6:	4611      	mov	r1, r2
 80102d8:	68f8      	ldr	r0, [r7, #12]
 80102da:	4798      	blx	r3
 80102dc:	60b8      	str	r0, [r7, #8]
        // Start transmission of the block
        touchgfxDisplayDriverTransmitBlock((uint8_t*)pixels, r.x, r.y, r.width, r.height);
 80102de:	f9b7 3000 	ldrsh.w	r3, [r7]
 80102e2:	b299      	uxth	r1, r3
 80102e4:	f9b7 3002 	ldrsh.w	r3, [r7, #2]
 80102e8:	b29a      	uxth	r2, r3
 80102ea:	f9b7 3004 	ldrsh.w	r3, [r7, #4]
 80102ee:	b298      	uxth	r0, r3
 80102f0:	f9b7 3006 	ldrsh.w	r3, [r7, #6]
 80102f4:	b29b      	uxth	r3, r3
 80102f6:	9300      	str	r3, [sp, #0]
 80102f8:	4603      	mov	r3, r0
 80102fa:	68b8      	ldr	r0, [r7, #8]
 80102fc:	f7f2 f8b6 	bl	800246c <touchgfxDisplayDriverTransmitBlock>
    }
}
 8010300:	bf00      	nop
 8010302:	3710      	adds	r7, #16
 8010304:	46bd      	mov	sp, r7
 8010306:	bd80      	pop	{r7, pc}

08010308 <DisplayDriver_TransferCompleteCallback>:

extern "C"
void DisplayDriver_TransferCompleteCallback()
{
 8010308:	b580      	push	{r7, lr}
 801030a:	af00      	add	r7, sp, #0
    // After completed transmission start new transfer if blocks are ready.
    touchgfx::startNewTransfer();
 801030c:	f7ff ffc1 	bl	8010292 <_ZN8touchgfx16startNewTransferEv>
}
 8010310:	bf00      	nop
 8010312:	bd80      	pop	{r7, pc}

08010314 <touchgfxSignalVSync>:
}

extern "C"
void touchgfxSignalVSync(void)
{
 8010314:	b580      	push	{r7, lr}
 8010316:	af00      	add	r7, sp, #0
    /* VSync has occurred, increment TouchGFX engine vsync counter */
    touchgfx::HAL::getInstance()->vSync();
 8010318:	f7f8 fa3e 	bl	8008798 <_ZN8touchgfx3HAL11getInstanceEv>
 801031c:	4603      	mov	r3, r0
 801031e:	4618      	mov	r0, r3
 8010320:	f7ff fc78 	bl	800fc14 <_ZN8touchgfx3HAL5vSyncEv>

    /* VSync has occurred, signal TouchGFX engine */
    touchgfx::OSWrappers::signalVSync();
 8010324:	f7fe fe0a 	bl	800ef3c <_ZN8touchgfx10OSWrappers11signalVSyncEv>
}
 8010328:	bf00      	nop
 801032a:	bd80      	pop	{r7, pc}

0801032c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>:
class FrameBufferAllocator
 801032c:	b480      	push	{r7}
 801032e:	b083      	sub	sp, #12
 8010330:	af00      	add	r7, sp, #0
 8010332:	6078      	str	r0, [r7, #4]
 8010334:	4a04      	ldr	r2, [pc, #16]	@ (8010348 <_ZN8touchgfx20FrameBufferAllocatorC1Ev+0x1c>)
 8010336:	687b      	ldr	r3, [r7, #4]
 8010338:	601a      	str	r2, [r3, #0]
 801033a:	687b      	ldr	r3, [r7, #4]
 801033c:	4618      	mov	r0, r3
 801033e:	370c      	adds	r7, #12
 8010340:	46bd      	mov	sp, r7
 8010342:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010346:	4770      	bx	lr
 8010348:	0802903c 	.word	0x0802903c

0801034c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>:
 */
template <uint32_t block_size, uint32_t blocks, uint32_t bytes_pr_pixel>
class ManyBlockAllocator : public FrameBufferAllocator
{
public:
    ManyBlockAllocator()
 801034c:	b5b0      	push	{r4, r5, r7, lr}
 801034e:	b084      	sub	sp, #16
 8010350:	af00      	add	r7, sp, #0
 8010352:	6078      	str	r0, [r7, #4]
    {
 8010354:	687b      	ldr	r3, [r7, #4]
 8010356:	4618      	mov	r0, r3
 8010358:	f7ff ffe8 	bl	801032c <_ZN8touchgfx20FrameBufferAllocatorC1Ev>
 801035c:	4a1a      	ldr	r2, [pc, #104]	@ (80103c8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x7c>)
 801035e:	687b      	ldr	r3, [r7, #4]
 8010360:	601a      	str	r2, [r3, #0]
 8010362:	687b      	ldr	r3, [r7, #4]
 8010364:	f503 5307 	add.w	r3, r3, #8640	@ 0x21c0
 8010368:	3308      	adds	r3, #8
 801036a:	2402      	movs	r4, #2
 801036c:	461d      	mov	r5, r3
 801036e:	e004      	b.n	801037a <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x2e>
 8010370:	4628      	mov	r0, r5
 8010372:	f7f9 fb7a 	bl	8009a6a <_ZN8touchgfx4RectC1Ev>
 8010376:	3c01      	subs	r4, #1
 8010378:	3508      	adds	r5, #8
 801037a:	2c00      	cmp	r4, #0
 801037c:	daf8      	bge.n	8010370 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x24>
        sendingBlock = -1;
 801037e:	687b      	ldr	r3, [r7, #4]
 8010380:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010384:	461a      	mov	r2, r3
 8010386:	f04f 33ff 	mov.w	r3, #4294967295
 801038a:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        drawingBlock = -1;
 801038e:	687b      	ldr	r3, [r7, #4]
 8010390:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010394:	461a      	mov	r2, r3
 8010396:	f04f 33ff 	mov.w	r3, #4294967295
 801039a:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        for (uint32_t i = 0; i < blocks; i++)
 801039e:	2300      	movs	r3, #0
 80103a0:	60fb      	str	r3, [r7, #12]
 80103a2:	e008      	b.n	80103b6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x6a>
        {
            state[i] = EMPTY;
 80103a4:	687a      	ldr	r2, [r7, #4]
 80103a6:	68fb      	ldr	r3, [r7, #12]
 80103a8:	4413      	add	r3, r2
 80103aa:	3304      	adds	r3, #4
 80103ac:	2200      	movs	r2, #0
 80103ae:	701a      	strb	r2, [r3, #0]
        for (uint32_t i = 0; i < blocks; i++)
 80103b0:	68fb      	ldr	r3, [r7, #12]
 80103b2:	3301      	adds	r3, #1
 80103b4:	60fb      	str	r3, [r7, #12]
 80103b6:	68fb      	ldr	r3, [r7, #12]
 80103b8:	2b02      	cmp	r3, #2
 80103ba:	d9f3      	bls.n	80103a4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev+0x58>
        }
    }
 80103bc:	687b      	ldr	r3, [r7, #4]
 80103be:	4618      	mov	r0, r3
 80103c0:	3710      	adds	r7, #16
 80103c2:	46bd      	mov	sp, r7
 80103c4:	bdb0      	pop	{r4, r5, r7, pc}
 80103c6:	bf00      	nop
 80103c8:	08028f38 	.word	0x08028f38

080103cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>:
class ManyBlockAllocator : public FrameBufferAllocator
 80103cc:	b580      	push	{r7, lr}
 80103ce:	b082      	sub	sp, #8
 80103d0:	af00      	add	r7, sp, #0
 80103d2:	6078      	str	r0, [r7, #4]
 80103d4:	4a05      	ldr	r2, [pc, #20]	@ (80103ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev+0x20>)
 80103d6:	687b      	ldr	r3, [r7, #4]
 80103d8:	601a      	str	r2, [r3, #0]
 80103da:	687b      	ldr	r3, [r7, #4]
 80103dc:	4618      	mov	r0, r3
 80103de:	f7ff fbf9 	bl	800fbd4 <_ZN8touchgfx20FrameBufferAllocatorD1Ev>
 80103e2:	687b      	ldr	r3, [r7, #4]
 80103e4:	4618      	mov	r0, r3
 80103e6:	3708      	adds	r7, #8
 80103e8:	46bd      	mov	sp, r7
 80103ea:	bd80      	pop	{r7, pc}
 80103ec:	08028f38 	.word	0x08028f38

080103f0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED0Ev>:
 80103f0:	b580      	push	{r7, lr}
 80103f2:	b082      	sub	sp, #8
 80103f4:	af00      	add	r7, sp, #0
 80103f6:	6078      	str	r0, [r7, #4]
 80103f8:	6878      	ldr	r0, [r7, #4]
 80103fa:	f7ff ffe7 	bl	80103cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
 80103fe:	f242 11e8 	movw	r1, #8680	@ 0x21e8
 8010402:	6878      	ldr	r0, [r7, #4]
 8010404:	f015 fc75 	bl	8025cf2 <_ZdlPvj>
 8010408:	687b      	ldr	r3, [r7, #4]
 801040a:	4618      	mov	r0, r3
 801040c:	3708      	adds	r7, #8
 801040e:	46bd      	mov	sp, r7
 8010410:	bd80      	pop	{r7, pc}
	...

08010414 <_Z41__static_initialization_and_destruction_0ii>:
 8010414:	b580      	push	{r7, lr}
 8010416:	b082      	sub	sp, #8
 8010418:	af00      	add	r7, sp, #0
 801041a:	6078      	str	r0, [r7, #4]
 801041c:	6039      	str	r1, [r7, #0]
 801041e:	687b      	ldr	r3, [r7, #4]
 8010420:	2b01      	cmp	r3, #1
 8010422:	d107      	bne.n	8010434 <_Z41__static_initialization_and_destruction_0ii+0x20>
 8010424:	683b      	ldr	r3, [r7, #0]
 8010426:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 801042a:	4293      	cmp	r3, r2
 801042c:	d102      	bne.n	8010434 <_Z41__static_initialization_and_destruction_0ii+0x20>
       > blockAllocator;
 801042e:	4809      	ldr	r0, [pc, #36]	@ (8010454 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010430:	f7ff ff8c 	bl	801034c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EEC1Ev>
 8010434:	687b      	ldr	r3, [r7, #4]
 8010436:	2b00      	cmp	r3, #0
 8010438:	d107      	bne.n	801044a <_Z41__static_initialization_and_destruction_0ii+0x36>
 801043a:	683b      	ldr	r3, [r7, #0]
 801043c:	f64f 72ff 	movw	r2, #65535	@ 0xffff
 8010440:	4293      	cmp	r3, r2
 8010442:	d102      	bne.n	801044a <_Z41__static_initialization_and_destruction_0ii+0x36>
 8010444:	4803      	ldr	r0, [pc, #12]	@ (8010454 <_Z41__static_initialization_and_destruction_0ii+0x40>)
 8010446:	f7ff ffc1 	bl	80103cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EED1Ev>
}
 801044a:	bf00      	nop
 801044c:	3708      	adds	r7, #8
 801044e:	46bd      	mov	sp, r7
 8010450:	bd80      	pop	{r7, pc}
 8010452:	bf00      	nop
 8010454:	20000d60 	.word	0x20000d60

08010458 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh>:
     * @param          height The height of the block.
     * @param [in,out] block  Pointer to pointer to return the block address in.
     *
     * @return The height of the allocated block.
     */
    virtual uint16_t allocateBlock(const uint16_t x, const uint16_t y, const uint16_t width, const uint16_t height, uint8_t** block)
 8010458:	b580      	push	{r7, lr}
 801045a:	b086      	sub	sp, #24
 801045c:	af00      	add	r7, sp, #0
 801045e:	60f8      	str	r0, [r7, #12]
 8010460:	4608      	mov	r0, r1
 8010462:	4611      	mov	r1, r2
 8010464:	461a      	mov	r2, r3
 8010466:	4603      	mov	r3, r0
 8010468:	817b      	strh	r3, [r7, #10]
 801046a:	460b      	mov	r3, r1
 801046c:	813b      	strh	r3, [r7, #8]
 801046e:	4613      	mov	r3, r2
 8010470:	80fb      	strh	r3, [r7, #6]
    {
        drawingBlock++;
 8010472:	68fb      	ldr	r3, [r7, #12]
 8010474:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010478:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801047c:	3301      	adds	r3, #1
 801047e:	68fa      	ldr	r2, [r7, #12]
 8010480:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8010484:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        if (drawingBlock == blocks)
 8010488:	68fb      	ldr	r3, [r7, #12]
 801048a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801048e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010492:	2b03      	cmp	r3, #3
 8010494:	d109      	bne.n	80104aa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            drawingBlock = 0;
 8010496:	68fb      	ldr	r3, [r7, #12]
 8010498:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801049c:	461a      	mov	r2, r3
 801049e:	2300      	movs	r3, #0
 80104a0:	f8c2 31e4 	str.w	r3, [r2, #484]	@ 0x1e4
        }
        while (state[drawingBlock] != EMPTY)
 80104a4:	e001      	b.n	80104aa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x52>
        {
            FrameBufferAllocatorWaitOnTransfer();
 80104a6:	f7ff fee6 	bl	8010276 <_ZN8touchgfx34FrameBufferAllocatorWaitOnTransferEv>
        while (state[drawingBlock] != EMPTY)
 80104aa:	68fb      	ldr	r3, [r7, #12]
 80104ac:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80104b0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80104b4:	68fa      	ldr	r2, [r7, #12]
 80104b6:	4413      	add	r3, r2
 80104b8:	791b      	ldrb	r3, [r3, #4]
 80104ba:	b2db      	uxtb	r3, r3
 80104bc:	2b00      	cmp	r3, #0
 80104be:	bf14      	ite	ne
 80104c0:	2301      	movne	r3, #1
 80104c2:	2300      	moveq	r3, #0
 80104c4:	b2db      	uxtb	r3, r3
 80104c6:	2b00      	cmp	r3, #0
 80104c8:	d1ed      	bne.n	80104a6 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x4e>
        }
        assert(state[drawingBlock] == EMPTY);
 80104ca:	68fb      	ldr	r3, [r7, #12]
 80104cc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80104d0:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80104d4:	68fa      	ldr	r2, [r7, #12]
 80104d6:	4413      	add	r3, r2
 80104d8:	791b      	ldrb	r3, [r3, #4]
 80104da:	b2db      	uxtb	r3, r3
 80104dc:	2b00      	cmp	r3, #0
 80104de:	d005      	beq.n	80104ec <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x94>
 80104e0:	4b38      	ldr	r3, [pc, #224]	@ (80105c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x16c>)
 80104e2:	4a39      	ldr	r2, [pc, #228]	@ (80105c8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x170>)
 80104e4:	21aa      	movs	r1, #170	@ 0xaa
 80104e6:	4839      	ldr	r0, [pc, #228]	@ (80105cc <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13allocateBlockEttttPPh+0x174>)
 80104e8:	f015 fcb2 	bl	8025e50 <__assert_func>
        state[drawingBlock] = ALLOCATED;
 80104ec:	68fb      	ldr	r3, [r7, #12]
 80104ee:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80104f2:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80104f6:	68fa      	ldr	r2, [r7, #12]
 80104f8:	4413      	add	r3, r2
 80104fa:	2201      	movs	r2, #1
 80104fc:	711a      	strb	r2, [r3, #4]
        const int32_t stride = width * bytes_pr_pixel;
 80104fe:	88fb      	ldrh	r3, [r7, #6]
 8010500:	005b      	lsls	r3, r3, #1
 8010502:	617b      	str	r3, [r7, #20]
        const int32_t lines = block_size / stride;
 8010504:	697b      	ldr	r3, [r7, #20]
 8010506:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 801050a:	fbb2 f3f3 	udiv	r3, r2, r3
 801050e:	613b      	str	r3, [r7, #16]
        *block = (uint8_t*)&memory[drawingBlock][0];
 8010510:	68fb      	ldr	r3, [r7, #12]
 8010512:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010516:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801051a:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 801051e:	fb02 f303 	mul.w	r3, r2, r3
 8010522:	3308      	adds	r3, #8
 8010524:	68fa      	ldr	r2, [r7, #12]
 8010526:	441a      	add	r2, r3
 8010528:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 801052a:	601a      	str	r2, [r3, #0]
        blockRect[drawingBlock].x = x;
 801052c:	68fb      	ldr	r3, [r7, #12]
 801052e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010532:	f8d3 21e4 	ldr.w	r2, [r3, #484]	@ 0x1e4
 8010536:	f9b7 100a 	ldrsh.w	r1, [r7, #10]
 801053a:	68fb      	ldr	r3, [r7, #12]
 801053c:	f202 4239 	addw	r2, r2, #1081	@ 0x439
 8010540:	f823 1032 	strh.w	r1, [r3, r2, lsl #3]
        blockRect[drawingBlock].y = y;
 8010544:	68fb      	ldr	r3, [r7, #12]
 8010546:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801054a:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801054e:	f9b7 1008 	ldrsh.w	r1, [r7, #8]
 8010552:	68fa      	ldr	r2, [r7, #12]
 8010554:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010558:	00db      	lsls	r3, r3, #3
 801055a:	4413      	add	r3, r2
 801055c:	460a      	mov	r2, r1
 801055e:	805a      	strh	r2, [r3, #2]
        blockRect[drawingBlock].width = width;
 8010560:	68fb      	ldr	r3, [r7, #12]
 8010562:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010566:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 801056a:	f9b7 1006 	ldrsh.w	r1, [r7, #6]
 801056e:	68fa      	ldr	r2, [r7, #12]
 8010570:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010574:	00db      	lsls	r3, r3, #3
 8010576:	4413      	add	r3, r2
 8010578:	460a      	mov	r2, r1
 801057a:	809a      	strh	r2, [r3, #4]
        blockRect[drawingBlock].height = MIN(height, lines);
 801057c:	8c3a      	ldrh	r2, [r7, #32]
 801057e:	693b      	ldr	r3, [r7, #16]
 8010580:	429a      	cmp	r2, r3
 8010582:	bfa8      	it	ge
 8010584:	461a      	movge	r2, r3
 8010586:	68fb      	ldr	r3, [r7, #12]
 8010588:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801058c:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010590:	b211      	sxth	r1, r2
 8010592:	68fa      	ldr	r2, [r7, #12]
 8010594:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010598:	00db      	lsls	r3, r3, #3
 801059a:	4413      	add	r3, r2
 801059c:	460a      	mov	r2, r1
 801059e:	80da      	strh	r2, [r3, #6]
        return blockRect[drawingBlock].height;
 80105a0:	68fb      	ldr	r3, [r7, #12]
 80105a2:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80105a6:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80105aa:	68fa      	ldr	r2, [r7, #12]
 80105ac:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80105b0:	00db      	lsls	r3, r3, #3
 80105b2:	4413      	add	r3, r2
 80105b4:	f9b3 3006 	ldrsh.w	r3, [r3, #6]
 80105b8:	b29b      	uxth	r3, r3
    }
 80105ba:	4618      	mov	r0, r3
 80105bc:	3718      	adds	r7, #24
 80105be:	46bd      	mov	sp, r7
 80105c0:	bd80      	pop	{r7, pc}
 80105c2:	bf00      	nop
 80105c4:	08027bc4 	.word	0x08027bc4
 80105c8:	08027be4 	.word	0x08027be4
 80105cc:	08027d18 	.word	0x08027d18

080105d0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv>:

    /** Marks a previously allocated block as ready to be transferred to the LCD. */
    virtual void markBlockReadyForTransfer()
 80105d0:	b580      	push	{r7, lr}
 80105d2:	b082      	sub	sp, #8
 80105d4:	af00      	add	r7, sp, #0
 80105d6:	6078      	str	r0, [r7, #4]
    {
        assert(state[drawingBlock] == ALLOCATED);
 80105d8:	687b      	ldr	r3, [r7, #4]
 80105da:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80105de:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 80105e2:	687a      	ldr	r2, [r7, #4]
 80105e4:	4413      	add	r3, r2
 80105e6:	791b      	ldrb	r3, [r3, #4]
 80105e8:	b2db      	uxtb	r3, r3
 80105ea:	2b01      	cmp	r3, #1
 80105ec:	d005      	beq.n	80105fa <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x2a>
 80105ee:	4b0a      	ldr	r3, [pc, #40]	@ (8010618 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x48>)
 80105f0:	4a0a      	ldr	r2, [pc, #40]	@ (801061c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x4c>)
 80105f2:	21b9      	movs	r1, #185	@ 0xb9
 80105f4:	480a      	ldr	r0, [pc, #40]	@ (8010620 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE25markBlockReadyForTransferEv+0x50>)
 80105f6:	f015 fc2b 	bl	8025e50 <__assert_func>
        state[drawingBlock] = DRAWN;
 80105fa:	687b      	ldr	r3, [r7, #4]
 80105fc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010600:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010604:	687a      	ldr	r2, [r7, #4]
 8010606:	4413      	add	r3, r2
 8010608:	2202      	movs	r2, #2
 801060a:	711a      	strb	r2, [r3, #4]
        FrameBufferAllocatorSignalBlockDrawn();
 801060c:	f7ff fe3a 	bl	8010284 <_ZN8touchgfx36FrameBufferAllocatorSignalBlockDrawnEv>
    }
 8010610:	bf00      	nop
 8010612:	3708      	adds	r7, #8
 8010614:	46bd      	mov	sp, r7
 8010616:	bd80      	pop	{r7, pc}
 8010618:	08027d6c 	.word	0x08027d6c
 801061c:	08027d90 	.word	0x08027d90
 8010620:	08027d18 	.word	0x08027d18

08010624 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv>:
    /**
     * Check if a block is ready for transfer to the LCD.
     *
     * @return True if a block is ready for transfer.
     */
    virtual bool hasBlockReadyForTransfer()
 8010624:	b480      	push	{r7}
 8010626:	b085      	sub	sp, #20
 8010628:	af00      	add	r7, sp, #0
 801062a:	6078      	str	r0, [r7, #4]
    {
        for (uint32_t i = 0; i < blocks; i++)
 801062c:	2300      	movs	r3, #0
 801062e:	60fb      	str	r3, [r7, #12]
 8010630:	e011      	b.n	8010656 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x32>
        {
            if (state[i] == DRAWN)
 8010632:	687a      	ldr	r2, [r7, #4]
 8010634:	68fb      	ldr	r3, [r7, #12]
 8010636:	4413      	add	r3, r2
 8010638:	3304      	adds	r3, #4
 801063a:	781b      	ldrb	r3, [r3, #0]
 801063c:	b2db      	uxtb	r3, r3
 801063e:	2b02      	cmp	r3, #2
 8010640:	bf0c      	ite	eq
 8010642:	2301      	moveq	r3, #1
 8010644:	2300      	movne	r3, #0
 8010646:	b2db      	uxtb	r3, r3
 8010648:	2b00      	cmp	r3, #0
 801064a:	d001      	beq.n	8010650 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x2c>
            {
                return true;
 801064c:	2301      	movs	r3, #1
 801064e:	e006      	b.n	801065e <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0x3a>
        for (uint32_t i = 0; i < blocks; i++)
 8010650:	68fb      	ldr	r3, [r7, #12]
 8010652:	3301      	adds	r3, #1
 8010654:	60fb      	str	r3, [r7, #12]
 8010656:	68fb      	ldr	r3, [r7, #12]
 8010658:	2b02      	cmp	r3, #2
 801065a:	d9ea      	bls.n	8010632 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE24hasBlockReadyForTransferEv+0xe>
            }
        }
        return false;
 801065c:	2300      	movs	r3, #0
    }
 801065e:	4618      	mov	r0, r3
 8010660:	3714      	adds	r7, #20
 8010662:	46bd      	mov	sp, r7
 8010664:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010668:	4770      	bx	lr
	...

0801066c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE>:
     *
     * @param [in,out] rect Reference to rect to write block x, y, width, and height.
     *
     * @return Returns the address of the block ready for transfer.
     */
    virtual const uint8_t* getBlockForTransfer(Rect& rect)
 801066c:	b580      	push	{r7, lr}
 801066e:	b082      	sub	sp, #8
 8010670:	af00      	add	r7, sp, #0
 8010672:	6078      	str	r0, [r7, #4]
 8010674:	6039      	str	r1, [r7, #0]
    {
        sendingBlock++;
 8010676:	687b      	ldr	r3, [r7, #4]
 8010678:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801067c:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010680:	3301      	adds	r3, #1
 8010682:	687a      	ldr	r2, [r7, #4]
 8010684:	f502 5200 	add.w	r2, r2, #8192	@ 0x2000
 8010688:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        if (sendingBlock == blocks)
 801068c:	687b      	ldr	r3, [r7, #4]
 801068e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010692:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010696:	2b03      	cmp	r3, #3
 8010698:	d106      	bne.n	80106a8 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x3c>
        {
            sendingBlock = 0;
 801069a:	687b      	ldr	r3, [r7, #4]
 801069c:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80106a0:	461a      	mov	r2, r3
 80106a2:	2300      	movs	r3, #0
 80106a4:	f8c2 31e0 	str.w	r3, [r2, #480]	@ 0x1e0
        }
        assert(state[sendingBlock] == DRAWN);
 80106a8:	687b      	ldr	r3, [r7, #4]
 80106aa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80106ae:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80106b2:	687a      	ldr	r2, [r7, #4]
 80106b4:	4413      	add	r3, r2
 80106b6:	791b      	ldrb	r3, [r3, #4]
 80106b8:	b2db      	uxtb	r3, r3
 80106ba:	2b02      	cmp	r3, #2
 80106bc:	d005      	beq.n	80106ca <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0x5e>
 80106be:	4b16      	ldr	r3, [pc, #88]	@ (8010718 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xac>)
 80106c0:	4a16      	ldr	r2, [pc, #88]	@ (801071c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb0>)
 80106c2:	21dd      	movs	r1, #221	@ 0xdd
 80106c4:	4816      	ldr	r0, [pc, #88]	@ (8010720 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE19getBlockForTransferERNS_4RectE+0xb4>)
 80106c6:	f015 fbc3 	bl	8025e50 <__assert_func>
        rect = blockRect[sendingBlock];
 80106ca:	687b      	ldr	r3, [r7, #4]
 80106cc:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80106d0:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80106d4:	683a      	ldr	r2, [r7, #0]
 80106d6:	6879      	ldr	r1, [r7, #4]
 80106d8:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 80106dc:	00db      	lsls	r3, r3, #3
 80106de:	440b      	add	r3, r1
 80106e0:	cb03      	ldmia	r3!, {r0, r1}
 80106e2:	6010      	str	r0, [r2, #0]
 80106e4:	6051      	str	r1, [r2, #4]
        state[sendingBlock] = SENDING;
 80106e6:	687b      	ldr	r3, [r7, #4]
 80106e8:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80106ec:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80106f0:	687a      	ldr	r2, [r7, #4]
 80106f2:	4413      	add	r3, r2
 80106f4:	2203      	movs	r2, #3
 80106f6:	711a      	strb	r2, [r3, #4]
        return (const uint8_t*)&memory[sendingBlock][0];
 80106f8:	687b      	ldr	r3, [r7, #4]
 80106fa:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80106fe:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010702:	f44f 6234 	mov.w	r2, #2880	@ 0xb40
 8010706:	fb02 f303 	mul.w	r3, r2, r3
 801070a:	3308      	adds	r3, #8
 801070c:	687a      	ldr	r2, [r7, #4]
 801070e:	4413      	add	r3, r2
    }
 8010710:	4618      	mov	r0, r3
 8010712:	3708      	adds	r7, #8
 8010714:	46bd      	mov	sp, r7
 8010716:	bd80      	pop	{r7, pc}
 8010718:	08027e64 	.word	0x08027e64
 801071c:	08027e84 	.word	0x08027e84
 8010720:	08027d18 	.word	0x08027d18

08010724 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv>:

    virtual const Rect& peekBlockForTransfer()
 8010724:	b580      	push	{r7, lr}
 8010726:	b084      	sub	sp, #16
 8010728:	af00      	add	r7, sp, #0
 801072a:	6078      	str	r0, [r7, #4]
    {
        int nextSendingBlock = sendingBlock + 1;
 801072c:	687b      	ldr	r3, [r7, #4]
 801072e:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 8010732:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 8010736:	3301      	adds	r3, #1
 8010738:	60fb      	str	r3, [r7, #12]
        if (nextSendingBlock == blocks)
 801073a:	68fb      	ldr	r3, [r7, #12]
 801073c:	2b03      	cmp	r3, #3
 801073e:	d101      	bne.n	8010744 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x20>
        {
            nextSendingBlock = 0;
 8010740:	2300      	movs	r3, #0
 8010742:	60fb      	str	r3, [r7, #12]
        }
        assert(state[nextSendingBlock] == DRAWN);
 8010744:	687a      	ldr	r2, [r7, #4]
 8010746:	68fb      	ldr	r3, [r7, #12]
 8010748:	4413      	add	r3, r2
 801074a:	3304      	adds	r3, #4
 801074c:	781b      	ldrb	r3, [r3, #0]
 801074e:	b2db      	uxtb	r3, r3
 8010750:	2b02      	cmp	r3, #2
 8010752:	d005      	beq.n	8010760 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x3c>
 8010754:	4b07      	ldr	r3, [pc, #28]	@ (8010774 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x50>)
 8010756:	4a08      	ldr	r2, [pc, #32]	@ (8010778 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x54>)
 8010758:	21ea      	movs	r1, #234	@ 0xea
 801075a:	4808      	ldr	r0, [pc, #32]	@ (801077c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE20peekBlockForTransferEv+0x58>)
 801075c:	f015 fb78 	bl	8025e50 <__assert_func>
        return blockRect[nextSendingBlock];
 8010760:	68fb      	ldr	r3, [r7, #12]
 8010762:	f203 4339 	addw	r3, r3, #1081	@ 0x439
 8010766:	00db      	lsls	r3, r3, #3
 8010768:	687a      	ldr	r2, [r7, #4]
 801076a:	4413      	add	r3, r2
    }
 801076c:	4618      	mov	r0, r3
 801076e:	3710      	adds	r7, #16
 8010770:	46bd      	mov	sp, r7
 8010772:	bd80      	pop	{r7, pc}
 8010774:	08027f84 	.word	0x08027f84
 8010778:	08027fa8 	.word	0x08027fa8
 801077c:	08027d18 	.word	0x08027d18

08010780 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv>:

    virtual bool hasEmptyBlock()
 8010780:	b480      	push	{r7}
 8010782:	b085      	sub	sp, #20
 8010784:	af00      	add	r7, sp, #0
 8010786:	6078      	str	r0, [r7, #4]
    {
        int nextDrawingBlock = drawingBlock + 1;
 8010788:	687b      	ldr	r3, [r7, #4]
 801078a:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 801078e:	f8d3 31e4 	ldr.w	r3, [r3, #484]	@ 0x1e4
 8010792:	3301      	adds	r3, #1
 8010794:	60fb      	str	r3, [r7, #12]
        if (nextDrawingBlock == blocks)
 8010796:	68fb      	ldr	r3, [r7, #12]
 8010798:	2b03      	cmp	r3, #3
 801079a:	d101      	bne.n	80107a0 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE13hasEmptyBlockEv+0x20>
        {
            nextDrawingBlock = 0;
 801079c:	2300      	movs	r3, #0
 801079e:	60fb      	str	r3, [r7, #12]
        }
        return (state[nextDrawingBlock] == EMPTY);
 80107a0:	687a      	ldr	r2, [r7, #4]
 80107a2:	68fb      	ldr	r3, [r7, #12]
 80107a4:	4413      	add	r3, r2
 80107a6:	3304      	adds	r3, #4
 80107a8:	781b      	ldrb	r3, [r3, #0]
 80107aa:	b2db      	uxtb	r3, r3
 80107ac:	2b00      	cmp	r3, #0
 80107ae:	bf0c      	ite	eq
 80107b0:	2301      	moveq	r3, #1
 80107b2:	2300      	movne	r3, #0
 80107b4:	b2db      	uxtb	r3, r3
    }
 80107b6:	4618      	mov	r0, r3
 80107b8:	3714      	adds	r7, #20
 80107ba:	46bd      	mov	sp, r7
 80107bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80107c0:	4770      	bx	lr
	...

080107c4 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv>:
    /**
     * Free a block after transfer to the LCD.
     *
     * Marks a previously allocated block as transferred and ready to reuse.
     */
    virtual void freeBlockAfterTransfer()
 80107c4:	b580      	push	{r7, lr}
 80107c6:	b082      	sub	sp, #8
 80107c8:	af00      	add	r7, sp, #0
 80107ca:	6078      	str	r0, [r7, #4]
    {
        assert(state[sendingBlock] == SENDING);
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80107d2:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80107d6:	687a      	ldr	r2, [r7, #4]
 80107d8:	4413      	add	r3, r2
 80107da:	791b      	ldrb	r3, [r3, #4]
 80107dc:	b2db      	uxtb	r3, r3
 80107de:	2b03      	cmp	r3, #3
 80107e0:	d005      	beq.n	80107ee <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x2a>
 80107e2:	4b09      	ldr	r3, [pc, #36]	@ (8010808 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x44>)
 80107e4:	4a09      	ldr	r2, [pc, #36]	@ (801080c <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x48>)
 80107e6:	21ff      	movs	r1, #255	@ 0xff
 80107e8:	4809      	ldr	r0, [pc, #36]	@ (8010810 <_ZN8touchgfx18ManyBlockAllocatorILm2880ELm3ELm2EE22freeBlockAfterTransferEv+0x4c>)
 80107ea:	f015 fb31 	bl	8025e50 <__assert_func>
        state[sendingBlock] = EMPTY;
 80107ee:	687b      	ldr	r3, [r7, #4]
 80107f0:	f503 5300 	add.w	r3, r3, #8192	@ 0x2000
 80107f4:	f8d3 31e0 	ldr.w	r3, [r3, #480]	@ 0x1e0
 80107f8:	687a      	ldr	r2, [r7, #4]
 80107fa:	4413      	add	r3, r2
 80107fc:	2200      	movs	r2, #0
 80107fe:	711a      	strb	r2, [r3, #4]
    }
 8010800:	bf00      	nop
 8010802:	3708      	adds	r7, #8
 8010804:	46bd      	mov	sp, r7
 8010806:	bd80      	pop	{r7, pc}
 8010808:	08028088 	.word	0x08028088
 801080c:	080280a8 	.word	0x080280a8
 8010810:	08027d18 	.word	0x08027d18

08010814 <_GLOBAL__sub_I__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8010814:	b580      	push	{r7, lr}
 8010816:	af00      	add	r7, sp, #0
 8010818:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801081c:	2001      	movs	r0, #1
 801081e:	f7ff fdf9 	bl	8010414 <_Z41__static_initialization_and_destruction_0ii>
 8010822:	bd80      	pop	{r7, pc}

08010824 <_GLOBAL__sub_D__ZN8touchgfx5paint12setL8PaletteEPKh>:
 8010824:	b580      	push	{r7, lr}
 8010826:	af00      	add	r7, sp, #0
 8010828:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 801082c:	2000      	movs	r0, #0
 801082e:	f7ff fdf1 	bl	8010414 <_Z41__static_initialization_and_destruction_0ii>
 8010832:	bd80      	pop	{r7, pc}

08010834 <_ZNK8touchgfx17AbstractPartition18getAllocationCountEv>:
 8010834:	8880      	ldrh	r0, [r0, #4]
 8010836:	4770      	bx	lr

08010838 <_ZN8touchgfx17AbstractPartition7indexOfEPKv>:
 8010838:	b570      	push	{r4, r5, r6, lr}
 801083a:	6803      	ldr	r3, [r0, #0]
 801083c:	4605      	mov	r5, r0
 801083e:	460c      	mov	r4, r1
 8010840:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010842:	2100      	movs	r1, #0
 8010844:	4798      	blx	r3
 8010846:	682b      	ldr	r3, [r5, #0]
 8010848:	4606      	mov	r6, r0
 801084a:	6a1b      	ldr	r3, [r3, #32]
 801084c:	4628      	mov	r0, r5
 801084e:	4798      	blx	r3
 8010850:	1ba4      	subs	r4, r4, r6
 8010852:	b2a4      	uxth	r4, r4
 8010854:	fbb4 f0f0 	udiv	r0, r4, r0
 8010858:	bd70      	pop	{r4, r5, r6, pc}

0801085a <_ZN8touchgfx17AbstractPartition5clearEv>:
 801085a:	2300      	movs	r3, #0
 801085c:	8083      	strh	r3, [r0, #4]
 801085e:	4770      	bx	lr

08010860 <_ZN8touchgfx17AbstractPartition8allocateEt>:
 8010860:	b510      	push	{r4, lr}
 8010862:	6803      	ldr	r3, [r0, #0]
 8010864:	8881      	ldrh	r1, [r0, #4]
 8010866:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010868:	4604      	mov	r4, r0
 801086a:	4798      	blx	r3
 801086c:	88a3      	ldrh	r3, [r4, #4]
 801086e:	3301      	adds	r3, #1
 8010870:	80a3      	strh	r3, [r4, #4]
 8010872:	bd10      	pop	{r4, pc}

08010874 <_ZN8touchgfx17AbstractPartition10allocateAtEtt>:
 8010874:	6803      	ldr	r3, [r0, #0]
 8010876:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8010878:	4718      	bx	r3

0801087a <_ZN8touchgfx17AbstractPartitionD1Ev>:
 801087a:	4770      	bx	lr

0801087c <_ZN8touchgfx17AbstractPartitionC1Ev>:
 801087c:	4a02      	ldr	r2, [pc, #8]	@ (8010888 <_ZN8touchgfx17AbstractPartitionC1Ev+0xc>)
 801087e:	6002      	str	r2, [r0, #0]
 8010880:	2200      	movs	r2, #0
 8010882:	8082      	strh	r2, [r0, #4]
 8010884:	4770      	bx	lr
 8010886:	bf00      	nop
 8010888:	08029068 	.word	0x08029068

0801088c <_ZN8touchgfx9Container8containsERKNS_8DrawableE>:
 801088c:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 801088e:	2000      	movs	r0, #0
 8010890:	b12b      	cbz	r3, 801089e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010892:	b920      	cbnz	r0, 801089e <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x12>
 8010894:	1a5a      	subs	r2, r3, r1
 8010896:	4250      	negs	r0, r2
 8010898:	4150      	adcs	r0, r2
 801089a:	699b      	ldr	r3, [r3, #24]
 801089c:	e7f8      	b.n	8010890 <_ZN8touchgfx9Container8containsERKNS_8DrawableE+0x4>
 801089e:	4770      	bx	lr

080108a0 <_ZN8touchgfx9Container3addERNS_8DrawableE>:
 80108a0:	2300      	movs	r3, #0
 80108a2:	6148      	str	r0, [r1, #20]
 80108a4:	618b      	str	r3, [r1, #24]
 80108a6:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80108a8:	b913      	cbnz	r3, 80108b0 <_ZN8touchgfx9Container3addERNS_8DrawableE+0x10>
 80108aa:	6281      	str	r1, [r0, #40]	@ 0x28
 80108ac:	4770      	bx	lr
 80108ae:	4613      	mov	r3, r2
 80108b0:	699a      	ldr	r2, [r3, #24]
 80108b2:	2a00      	cmp	r2, #0
 80108b4:	d1fb      	bne.n	80108ae <_ZN8touchgfx9Container3addERNS_8DrawableE+0xe>
 80108b6:	6199      	str	r1, [r3, #24]
 80108b8:	4770      	bx	lr

080108ba <_ZN8touchgfx9Container9removeAllEv>:
 80108ba:	2200      	movs	r2, #0
 80108bc:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 80108be:	b123      	cbz	r3, 80108ca <_ZN8touchgfx9Container9removeAllEv+0x10>
 80108c0:	6999      	ldr	r1, [r3, #24]
 80108c2:	6281      	str	r1, [r0, #40]	@ 0x28
 80108c4:	e9c3 2205 	strd	r2, r2, [r3, #20]
 80108c8:	e7f8      	b.n	80108bc <_ZN8touchgfx9Container9removeAllEv+0x2>
 80108ca:	4770      	bx	lr

080108cc <_ZN8touchgfx9Container6unlinkEv>:
 80108cc:	2300      	movs	r3, #0
 80108ce:	6283      	str	r3, [r0, #40]	@ 0x28
 80108d0:	4770      	bx	lr

080108d2 <_ZNK8touchgfx9Container12getSolidRectEv>:
 80108d2:	2200      	movs	r2, #0
 80108d4:	8002      	strh	r2, [r0, #0]
 80108d6:	8042      	strh	r2, [r0, #2]
 80108d8:	8082      	strh	r2, [r0, #4]
 80108da:	80c2      	strh	r2, [r0, #6]
 80108dc:	4770      	bx	lr

080108de <_ZN8touchgfx9Container20moveChildrenRelativeEss>:
 80108de:	b570      	push	{r4, r5, r6, lr}
 80108e0:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80108e2:	460d      	mov	r5, r1
 80108e4:	4616      	mov	r6, r2
 80108e6:	b13c      	cbz	r4, 80108f8 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x1a>
 80108e8:	6823      	ldr	r3, [r4, #0]
 80108ea:	4620      	mov	r0, r4
 80108ec:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 80108ee:	4632      	mov	r2, r6
 80108f0:	4629      	mov	r1, r5
 80108f2:	4798      	blx	r3
 80108f4:	69a4      	ldr	r4, [r4, #24]
 80108f6:	e7f6      	b.n	80108e6 <_ZN8touchgfx9Container20moveChildrenRelativeEss+0x8>
 80108f8:	bd70      	pop	{r4, r5, r6, pc}

080108fa <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE>:
 80108fa:	b538      	push	{r3, r4, r5, lr}
 80108fc:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 80108fe:	460d      	mov	r5, r1
 8010900:	b134      	cbz	r4, 8010910 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x16>
 8010902:	682b      	ldr	r3, [r5, #0]
 8010904:	4621      	mov	r1, r4
 8010906:	689b      	ldr	r3, [r3, #8]
 8010908:	4628      	mov	r0, r5
 801090a:	4798      	blx	r3
 801090c:	69a4      	ldr	r4, [r4, #24]
 801090e:	e7f7      	b.n	8010900 <_ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvvEE+0x6>
 8010910:	bd38      	pop	{r3, r4, r5, pc}

08010912 <_ZN8touchgfx9Container6removeERNS_8DrawableE>:
 8010912:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010914:	b19b      	cbz	r3, 801093e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 8010916:	428b      	cmp	r3, r1
 8010918:	d109      	bne.n	801092e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x1c>
 801091a:	699a      	ldr	r2, [r3, #24]
 801091c:	2100      	movs	r1, #0
 801091e:	6159      	str	r1, [r3, #20]
 8010920:	6282      	str	r2, [r0, #40]	@ 0x28
 8010922:	b902      	cbnz	r2, 8010926 <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x14>
 8010924:	4770      	bx	lr
 8010926:	6199      	str	r1, [r3, #24]
 8010928:	4770      	bx	lr
 801092a:	4613      	mov	r3, r2
 801092c:	b13a      	cbz	r2, 801093e <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x2c>
 801092e:	699a      	ldr	r2, [r3, #24]
 8010930:	428a      	cmp	r2, r1
 8010932:	d1fa      	bne.n	801092a <_ZN8touchgfx9Container6removeERNS_8DrawableE+0x18>
 8010934:	698a      	ldr	r2, [r1, #24]
 8010936:	619a      	str	r2, [r3, #24]
 8010938:	2300      	movs	r3, #0
 801093a:	e9c1 3305 	strd	r3, r3, [r1, #20]
 801093e:	4770      	bx	lr

08010940 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_>:
 8010940:	b410      	push	{r4}
 8010942:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8010944:	4604      	mov	r4, r0
 8010946:	b92b      	cbnz	r3, 8010954 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x14>
 8010948:	6803      	ldr	r3, [r0, #0]
 801094a:	f85d 4b04 	ldr.w	r4, [sp], #4
 801094e:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8010950:	4611      	mov	r1, r2
 8010952:	4718      	bx	r3
 8010954:	b941      	cbnz	r1, 8010968 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x28>
 8010956:	6193      	str	r3, [r2, #24]
 8010958:	6282      	str	r2, [r0, #40]	@ 0x28
 801095a:	6154      	str	r4, [r2, #20]
 801095c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8010960:	4770      	bx	lr
 8010962:	4603      	mov	r3, r0
 8010964:	2800      	cmp	r0, #0
 8010966:	d0f9      	beq.n	801095c <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1c>
 8010968:	4299      	cmp	r1, r3
 801096a:	6998      	ldr	r0, [r3, #24]
 801096c:	d1f9      	bne.n	8010962 <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x22>
 801096e:	6190      	str	r0, [r2, #24]
 8010970:	618a      	str	r2, [r1, #24]
 8010972:	e7f2      	b.n	801095a <_ZN8touchgfx9Container6insertEPNS_8DrawableERS1_+0x1a>

08010974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>:
 8010974:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010978:	461f      	mov	r7, r3
 801097a:	f890 3024 	ldrb.w	r3, [r0, #36]	@ 0x24
 801097e:	460d      	mov	r5, r1
 8010980:	4616      	mov	r6, r2
 8010982:	b103      	cbz	r3, 8010986 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x12>
 8010984:	6038      	str	r0, [r7, #0]
 8010986:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010988:	b314      	cbz	r4, 80109d0 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x5c>
 801098a:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 801098e:	b1eb      	cbz	r3, 80109cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010990:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8010994:	428d      	cmp	r5, r1
 8010996:	db19      	blt.n	80109cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 8010998:	8923      	ldrh	r3, [r4, #8]
 801099a:	b289      	uxth	r1, r1
 801099c:	440b      	add	r3, r1
 801099e:	b21b      	sxth	r3, r3
 80109a0:	429d      	cmp	r5, r3
 80109a2:	da13      	bge.n	80109cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109a4:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80109a8:	4296      	cmp	r6, r2
 80109aa:	db0f      	blt.n	80109cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109ac:	8963      	ldrh	r3, [r4, #10]
 80109ae:	b292      	uxth	r2, r2
 80109b0:	4413      	add	r3, r2
 80109b2:	b21b      	sxth	r3, r3
 80109b4:	429e      	cmp	r6, r3
 80109b6:	da09      	bge.n	80109cc <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x58>
 80109b8:	6823      	ldr	r3, [r4, #0]
 80109ba:	1ab2      	subs	r2, r6, r2
 80109bc:	1a69      	subs	r1, r5, r1
 80109be:	f8d3 8024 	ldr.w	r8, [r3, #36]	@ 0x24
 80109c2:	b212      	sxth	r2, r2
 80109c4:	463b      	mov	r3, r7
 80109c6:	b209      	sxth	r1, r1
 80109c8:	4620      	mov	r0, r4
 80109ca:	47c0      	blx	r8
 80109cc:	69a4      	ldr	r4, [r4, #24]
 80109ce:	e7db      	b.n	8010988 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE+0x14>
 80109d0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080109d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>:
 80109d4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80109d8:	4c6e      	ldr	r4, [pc, #440]	@ (8010b94 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c0>)
 80109da:	b0a1      	sub	sp, #132	@ 0x84
 80109dc:	6824      	ldr	r4, [r4, #0]
 80109de:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80109e0:	f894 9049 	ldrb.w	r9, [r4, #73]	@ 0x49
 80109e4:	9303      	str	r3, [sp, #12]
 80109e6:	2400      	movs	r4, #0
 80109e8:	802c      	strh	r4, [r5, #0]
 80109ea:	9d2b      	ldr	r5, [sp, #172]	@ 0xac
 80109ec:	802c      	strh	r4, [r5, #0]
 80109ee:	601c      	str	r4, [r3, #0]
 80109f0:	4606      	mov	r6, r0
 80109f2:	e9cd 1201 	strd	r1, r2, [sp, #4]
 80109f6:	f7ff ffbd 	bl	8010974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 80109fa:	f1b9 0f03 	cmp.w	r9, #3
 80109fe:	f340 80c2 	ble.w	8010b86 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b2>
 8010a02:	4631      	mov	r1, r6
 8010a04:	a80c      	add	r0, sp, #48	@ 0x30
 8010a06:	f004 fd2d 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a0a:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 8010a0e:	9306      	str	r3, [sp, #24]
 8010a10:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8010a14:	9307      	str	r3, [sp, #28]
 8010a16:	9b03      	ldr	r3, [sp, #12]
 8010a18:	f8d3 a000 	ldr.w	sl, [r3]
 8010a1c:	f1ba 0f00 	cmp.w	sl, #0
 8010a20:	f000 80b4 	beq.w	8010b8c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1b8>
 8010a24:	4651      	mov	r1, sl
 8010a26:	a810      	add	r0, sp, #64	@ 0x40
 8010a28:	f004 fd1c 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010a2c:	9b01      	ldr	r3, [sp, #4]
 8010a2e:	9a06      	ldr	r2, [sp, #24]
 8010a30:	f9bd 1044 	ldrsh.w	r1, [sp, #68]	@ 0x44
 8010a34:	189d      	adds	r5, r3, r2
 8010a36:	f9bd 3040 	ldrsh.w	r3, [sp, #64]	@ 0x40
 8010a3a:	9a07      	ldr	r2, [sp, #28]
 8010a3c:	2002      	movs	r0, #2
 8010a3e:	fb91 f1f0 	sdiv	r1, r1, r0
 8010a42:	4419      	add	r1, r3
 8010a44:	1a6d      	subs	r5, r5, r1
 8010a46:	9b02      	ldr	r3, [sp, #8]
 8010a48:	f9bd 1042 	ldrsh.w	r1, [sp, #66]	@ 0x42
 8010a4c:	4413      	add	r3, r2
 8010a4e:	f9bd 2046 	ldrsh.w	r2, [sp, #70]	@ 0x46
 8010a52:	fb92 f2f0 	sdiv	r2, r2, r0
 8010a56:	440a      	add	r2, r1
 8010a58:	1a9b      	subs	r3, r3, r2
 8010a5a:	435b      	muls	r3, r3
 8010a5c:	fb05 3505 	mla	r5, r5, r5, r3
 8010a60:	4f4d      	ldr	r7, [pc, #308]	@ (8010b98 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x1c4>)
 8010a62:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a64:	ac10      	add	r4, sp, #64	@ 0x40
 8010a66:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a68:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a6a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a6c:	cf0f      	ldmia	r7!, {r0, r1, r2, r3}
 8010a6e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8010a70:	e897 000f 	ldmia.w	r7, {r0, r1, r2, r3}
 8010a74:	f1b9 0f0c 	cmp.w	r9, #12
 8010a78:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
 8010a7c:	f04f 0303 	mov.w	r3, #3
 8010a80:	bfc8      	it	gt
 8010a82:	4698      	movgt	r8, r3
 8010a84:	f8cd 9000 	str.w	r9, [sp]
 8010a88:	f04f 0400 	mov.w	r4, #0
 8010a8c:	bfdc      	itt	le
 8010a8e:	f109 32ff 	addle.w	r2, r9, #4294967295
 8010a92:	fb92 f8f3 	sdivle	r8, r2, r3
 8010a96:	1c63      	adds	r3, r4, #1
 8010a98:	aa10      	add	r2, sp, #64	@ 0x40
 8010a9a:	f004 0401 	and.w	r4, r4, #1
 8010a9e:	9308      	str	r3, [sp, #32]
 8010aa0:	eb02 1444 	add.w	r4, r2, r4, lsl #5
 8010aa4:	9b00      	ldr	r3, [sp, #0]
 8010aa6:	fb93 f3f8 	sdiv	r3, r3, r8
 8010aaa:	b29b      	uxth	r3, r3
 8010aac:	3404      	adds	r4, #4
 8010aae:	f04f 0b00 	mov.w	fp, #0
 8010ab2:	9304      	str	r3, [sp, #16]
 8010ab4:	9a04      	ldr	r2, [sp, #16]
 8010ab6:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8010aba:	fb13 f302 	smulbb	r3, r3, r2
 8010abe:	9a01      	ldr	r2, [sp, #4]
 8010ac0:	b29b      	uxth	r3, r3
 8010ac2:	1899      	adds	r1, r3, r2
 8010ac4:	9305      	str	r3, [sp, #20]
 8010ac6:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 8010aca:	b209      	sxth	r1, r1
 8010acc:	4299      	cmp	r1, r3
 8010ace:	db4d      	blt.n	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ad0:	8932      	ldrh	r2, [r6, #8]
 8010ad2:	4413      	add	r3, r2
 8010ad4:	b21b      	sxth	r3, r3
 8010ad6:	4299      	cmp	r1, r3
 8010ad8:	da48      	bge.n	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010ada:	9b04      	ldr	r3, [sp, #16]
 8010adc:	6827      	ldr	r7, [r4, #0]
 8010ade:	fb17 f703 	smulbb	r7, r7, r3
 8010ae2:	9b02      	ldr	r3, [sp, #8]
 8010ae4:	b2bf      	uxth	r7, r7
 8010ae6:	18fa      	adds	r2, r7, r3
 8010ae8:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8010aec:	b212      	sxth	r2, r2
 8010aee:	429a      	cmp	r2, r3
 8010af0:	db3c      	blt.n	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010af2:	8970      	ldrh	r0, [r6, #10]
 8010af4:	4403      	add	r3, r0
 8010af6:	b21b      	sxth	r3, r3
 8010af8:	429a      	cmp	r2, r3
 8010afa:	da37      	bge.n	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010afc:	2300      	movs	r3, #0
 8010afe:	930b      	str	r3, [sp, #44]	@ 0x2c
 8010b00:	4630      	mov	r0, r6
 8010b02:	ab0b      	add	r3, sp, #44	@ 0x2c
 8010b04:	f7ff ff36 	bl	8010974 <_ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE>
 8010b08:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8010b0a:	b37a      	cbz	r2, 8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b0c:	4552      	cmp	r2, sl
 8010b0e:	d02d      	beq.n	8010b6c <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x198>
 8010b10:	4611      	mov	r1, r2
 8010b12:	a80e      	add	r0, sp, #56	@ 0x38
 8010b14:	9209      	str	r2, [sp, #36]	@ 0x24
 8010b16:	f004 fca5 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8010b1a:	9a06      	ldr	r2, [sp, #24]
 8010b1c:	f9bd 0038 	ldrsh.w	r0, [sp, #56]	@ 0x38
 8010b20:	9b01      	ldr	r3, [sp, #4]
 8010b22:	f9bd 103c 	ldrsh.w	r1, [sp, #60]	@ 0x3c
 8010b26:	f9bd c03e 	ldrsh.w	ip, [sp, #62]	@ 0x3e
 8010b2a:	4413      	add	r3, r2
 8010b2c:	f04f 0e02 	mov.w	lr, #2
 8010b30:	fb91 f1fe 	sdiv	r1, r1, lr
 8010b34:	4401      	add	r1, r0
 8010b36:	1a58      	subs	r0, r3, r1
 8010b38:	9a07      	ldr	r2, [sp, #28]
 8010b3a:	9b02      	ldr	r3, [sp, #8]
 8010b3c:	f9bd 103a 	ldrsh.w	r1, [sp, #58]	@ 0x3a
 8010b40:	fb9c fcfe 	sdiv	ip, ip, lr
 8010b44:	4413      	add	r3, r2
 8010b46:	448c      	add	ip, r1
 8010b48:	eba3 030c 	sub.w	r3, r3, ip
 8010b4c:	435b      	muls	r3, r3
 8010b4e:	fb00 3300 	mla	r3, r0, r0, r3
 8010b52:	42ab      	cmp	r3, r5
 8010b54:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8010b56:	d208      	bcs.n	8010b6a <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x196>
 8010b58:	9803      	ldr	r0, [sp, #12]
 8010b5a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8010b5c:	6001      	str	r1, [r0, #0]
 8010b5e:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 8010b60:	9805      	ldr	r0, [sp, #20]
 8010b62:	8008      	strh	r0, [r1, #0]
 8010b64:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8010b66:	461d      	mov	r5, r3
 8010b68:	800f      	strh	r7, [r1, #0]
 8010b6a:	4692      	mov	sl, r2
 8010b6c:	f10b 0b01 	add.w	fp, fp, #1
 8010b70:	f1bb 0f04 	cmp.w	fp, #4
 8010b74:	f104 0408 	add.w	r4, r4, #8
 8010b78:	d19c      	bne.n	8010ab4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xe0>
 8010b7a:	9b00      	ldr	r3, [sp, #0]
 8010b7c:	9c08      	ldr	r4, [sp, #32]
 8010b7e:	444b      	add	r3, r9
 8010b80:	4544      	cmp	r4, r8
 8010b82:	9300      	str	r3, [sp, #0]
 8010b84:	d187      	bne.n	8010a96 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0xc2>
 8010b86:	b021      	add	sp, #132	@ 0x84
 8010b88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010b8c:	f04f 35ff 	mov.w	r5, #4294967295
 8010b90:	e766      	b.n	8010a60 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_+0x8c>
 8010b92:	bf00      	nop
 8010b94:	20002f54 	.word	0x20002f54
 8010b98:	08028178 	.word	0x08028178

08010b9c <_ZN8touchgfx4RectaNERKS0_>:
 8010b9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8010ba0:	f9b1 7000 	ldrsh.w	r7, [r1]
 8010ba4:	888c      	ldrh	r4, [r1, #4]
 8010ba6:	f9b0 9000 	ldrsh.w	r9, [r0]
 8010baa:	443c      	add	r4, r7
 8010bac:	b2a4      	uxth	r4, r4
 8010bae:	fa0f f884 	sxth.w	r8, r4
 8010bb2:	45c1      	cmp	r9, r8
 8010bb4:	da2f      	bge.n	8010c16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010bb6:	8882      	ldrh	r2, [r0, #4]
 8010bb8:	444a      	add	r2, r9
 8010bba:	b292      	uxth	r2, r2
 8010bbc:	fa0f fe82 	sxth.w	lr, r2
 8010bc0:	4577      	cmp	r7, lr
 8010bc2:	da28      	bge.n	8010c16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010bc4:	f9b1 5002 	ldrsh.w	r5, [r1, #2]
 8010bc8:	88cb      	ldrh	r3, [r1, #6]
 8010bca:	f9b0 6002 	ldrsh.w	r6, [r0, #2]
 8010bce:	442b      	add	r3, r5
 8010bd0:	b21b      	sxth	r3, r3
 8010bd2:	429e      	cmp	r6, r3
 8010bd4:	da1f      	bge.n	8010c16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010bd6:	88c3      	ldrh	r3, [r0, #6]
 8010bd8:	4433      	add	r3, r6
 8010bda:	b29b      	uxth	r3, r3
 8010bdc:	fa0f fc83 	sxth.w	ip, r3
 8010be0:	4565      	cmp	r5, ip
 8010be2:	da18      	bge.n	8010c16 <_ZN8touchgfx4RectaNERKS0_+0x7a>
 8010be4:	454f      	cmp	r7, r9
 8010be6:	bfb8      	it	lt
 8010be8:	464f      	movlt	r7, r9
 8010bea:	42b5      	cmp	r5, r6
 8010bec:	bfb8      	it	lt
 8010bee:	4635      	movlt	r5, r6
 8010bf0:	45f0      	cmp	r8, lr
 8010bf2:	bfd8      	it	le
 8010bf4:	4622      	movle	r2, r4
 8010bf6:	1bd2      	subs	r2, r2, r7
 8010bf8:	8082      	strh	r2, [r0, #4]
 8010bfa:	884a      	ldrh	r2, [r1, #2]
 8010bfc:	88c9      	ldrh	r1, [r1, #6]
 8010bfe:	8007      	strh	r7, [r0, #0]
 8010c00:	440a      	add	r2, r1
 8010c02:	b292      	uxth	r2, r2
 8010c04:	b211      	sxth	r1, r2
 8010c06:	458c      	cmp	ip, r1
 8010c08:	bfa8      	it	ge
 8010c0a:	4613      	movge	r3, r2
 8010c0c:	1b5b      	subs	r3, r3, r5
 8010c0e:	80c3      	strh	r3, [r0, #6]
 8010c10:	8045      	strh	r5, [r0, #2]
 8010c12:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8010c16:	2300      	movs	r3, #0
 8010c18:	8003      	strh	r3, [r0, #0]
 8010c1a:	8043      	strh	r3, [r0, #2]
 8010c1c:	8083      	strh	r3, [r0, #4]
 8010c1e:	80c3      	strh	r3, [r0, #6]
 8010c20:	e7f7      	b.n	8010c12 <_ZN8touchgfx4RectaNERKS0_+0x76>

08010c22 <_ZNK8touchgfx4Rect7isEmptyEv>:
 8010c22:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8010c26:	2b00      	cmp	r3, #0
 8010c28:	dd06      	ble.n	8010c38 <_ZNK8touchgfx4Rect7isEmptyEv+0x16>
 8010c2a:	f9b0 0006 	ldrsh.w	r0, [r0, #6]
 8010c2e:	2800      	cmp	r0, #0
 8010c30:	bfcc      	ite	gt
 8010c32:	2000      	movgt	r0, #0
 8010c34:	2001      	movle	r0, #1
 8010c36:	4770      	bx	lr
 8010c38:	2001      	movs	r0, #1
 8010c3a:	4770      	bx	lr

08010c3c <_ZNK8touchgfx9Container16getContainedAreaEv>:
 8010c3c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8010c40:	2300      	movs	r3, #0
 8010c42:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 8010c44:	8003      	strh	r3, [r0, #0]
 8010c46:	4604      	mov	r4, r0
 8010c48:	8043      	strh	r3, [r0, #2]
 8010c4a:	8083      	strh	r3, [r0, #4]
 8010c4c:	80c3      	strh	r3, [r0, #6]
 8010c4e:	2d00      	cmp	r5, #0
 8010c50:	d040      	beq.n	8010cd4 <_ZNK8touchgfx9Container16getContainedAreaEv+0x98>
 8010c52:	1d28      	adds	r0, r5, #4
 8010c54:	f7ff ffe5 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c58:	b988      	cbnz	r0, 8010c7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010c5a:	4620      	mov	r0, r4
 8010c5c:	f7ff ffe1 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010c60:	f9b5 2004 	ldrsh.w	r2, [r5, #4]
 8010c64:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 8010c68:	f9b5 e008 	ldrsh.w	lr, [r5, #8]
 8010c6c:	f9b5 c00a 	ldrsh.w	ip, [r5, #10]
 8010c70:	b138      	cbz	r0, 8010c82 <_ZNK8touchgfx9Container16getContainedAreaEv+0x46>
 8010c72:	8022      	strh	r2, [r4, #0]
 8010c74:	8063      	strh	r3, [r4, #2]
 8010c76:	f8a4 e004 	strh.w	lr, [r4, #4]
 8010c7a:	f8a4 c006 	strh.w	ip, [r4, #6]
 8010c7e:	69ad      	ldr	r5, [r5, #24]
 8010c80:	e7e5      	b.n	8010c4e <_ZNK8touchgfx9Container16getContainedAreaEv+0x12>
 8010c82:	f9b4 0000 	ldrsh.w	r0, [r4]
 8010c86:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 8010c8a:	f8b4 8004 	ldrh.w	r8, [r4, #4]
 8010c8e:	4290      	cmp	r0, r2
 8010c90:	4607      	mov	r7, r0
 8010c92:	bfa8      	it	ge
 8010c94:	4617      	movge	r7, r2
 8010c96:	4472      	add	r2, lr
 8010c98:	f8b4 e006 	ldrh.w	lr, [r4, #6]
 8010c9c:	8027      	strh	r7, [r4, #0]
 8010c9e:	4299      	cmp	r1, r3
 8010ca0:	460e      	mov	r6, r1
 8010ca2:	4440      	add	r0, r8
 8010ca4:	bfa8      	it	ge
 8010ca6:	461e      	movge	r6, r3
 8010ca8:	4471      	add	r1, lr
 8010caa:	4463      	add	r3, ip
 8010cac:	b200      	sxth	r0, r0
 8010cae:	b212      	sxth	r2, r2
 8010cb0:	b209      	sxth	r1, r1
 8010cb2:	b21b      	sxth	r3, r3
 8010cb4:	4290      	cmp	r0, r2
 8010cb6:	bfac      	ite	ge
 8010cb8:	ebc7 0200 	rsbge	r2, r7, r0
 8010cbc:	ebc7 0202 	rsblt	r2, r7, r2
 8010cc0:	4299      	cmp	r1, r3
 8010cc2:	bfac      	ite	ge
 8010cc4:	ebc6 0301 	rsbge	r3, r6, r1
 8010cc8:	ebc6 0303 	rsblt	r3, r6, r3
 8010ccc:	8066      	strh	r6, [r4, #2]
 8010cce:	80a2      	strh	r2, [r4, #4]
 8010cd0:	80e3      	strh	r3, [r4, #6]
 8010cd2:	e7d4      	b.n	8010c7e <_ZNK8touchgfx9Container16getContainedAreaEv+0x42>
 8010cd4:	4620      	mov	r0, r4
 8010cd6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010cda <_ZNK8touchgfx9Container4drawERKNS_4RectE>:
 8010cda:	e92d 41f3 	stmdb	sp!, {r0, r1, r4, r5, r6, r7, r8, lr}
 8010cde:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010ce2:	b383      	cbz	r3, 8010d46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010ce4:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010ce6:	b374      	cbz	r4, 8010d46 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x6c>
 8010ce8:	f9b1 5000 	ldrsh.w	r5, [r1]
 8010cec:	f9b1 6002 	ldrsh.w	r6, [r1, #2]
 8010cf0:	f9b1 7004 	ldrsh.w	r7, [r1, #4]
 8010cf4:	f9b1 8006 	ldrsh.w	r8, [r1, #6]
 8010cf8:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010cfc:	b303      	cbz	r3, 8010d40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010cfe:	4668      	mov	r0, sp
 8010d00:	1d21      	adds	r1, r4, #4
 8010d02:	f8ad 5000 	strh.w	r5, [sp]
 8010d06:	f8ad 6002 	strh.w	r6, [sp, #2]
 8010d0a:	f8ad 7004 	strh.w	r7, [sp, #4]
 8010d0e:	f8ad 8006 	strh.w	r8, [sp, #6]
 8010d12:	f7ff ff43 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8010d16:	4668      	mov	r0, sp
 8010d18:	f7ff ff83 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d1c:	b980      	cbnz	r0, 8010d40 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x66>
 8010d1e:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d22:	88a2      	ldrh	r2, [r4, #4]
 8010d24:	1a9b      	subs	r3, r3, r2
 8010d26:	f8ad 3000 	strh.w	r3, [sp]
 8010d2a:	88e2      	ldrh	r2, [r4, #6]
 8010d2c:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d30:	1a9b      	subs	r3, r3, r2
 8010d32:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d36:	6823      	ldr	r3, [r4, #0]
 8010d38:	4669      	mov	r1, sp
 8010d3a:	689b      	ldr	r3, [r3, #8]
 8010d3c:	4620      	mov	r0, r4
 8010d3e:	4798      	blx	r3
 8010d40:	69a4      	ldr	r4, [r4, #24]
 8010d42:	2c00      	cmp	r4, #0
 8010d44:	d1d8      	bne.n	8010cf8 <_ZNK8touchgfx9Container4drawERKNS_4RectE+0x1e>
 8010d46:	b002      	add	sp, #8
 8010d48:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08010d4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>:
 8010d4c:	b573      	push	{r0, r1, r4, r5, r6, lr}
 8010d4e:	f890 3025 	ldrb.w	r3, [r0, #37]	@ 0x25
 8010d52:	460d      	mov	r5, r1
 8010d54:	4616      	mov	r6, r2
 8010d56:	b323      	cbz	r3, 8010da2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010d58:	6a84      	ldr	r4, [r0, #40]	@ 0x28
 8010d5a:	b314      	cbz	r4, 8010da2 <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x56>
 8010d5c:	f894 3025 	ldrb.w	r3, [r4, #37]	@ 0x25
 8010d60:	b1eb      	cbz	r3, 8010d9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010d62:	6828      	ldr	r0, [r5, #0]
 8010d64:	6869      	ldr	r1, [r5, #4]
 8010d66:	466b      	mov	r3, sp
 8010d68:	c303      	stmia	r3!, {r0, r1}
 8010d6a:	4668      	mov	r0, sp
 8010d6c:	1d21      	adds	r1, r4, #4
 8010d6e:	f7ff ff15 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8010d72:	4668      	mov	r0, sp
 8010d74:	f7ff ff55 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8010d78:	b988      	cbnz	r0, 8010d9e <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0x52>
 8010d7a:	f8bd 3000 	ldrh.w	r3, [sp]
 8010d7e:	88a2      	ldrh	r2, [r4, #4]
 8010d80:	1a9b      	subs	r3, r3, r2
 8010d82:	f8ad 3000 	strh.w	r3, [sp]
 8010d86:	88e2      	ldrh	r2, [r4, #6]
 8010d88:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8010d8c:	1a9b      	subs	r3, r3, r2
 8010d8e:	f8ad 3002 	strh.w	r3, [sp, #2]
 8010d92:	6823      	ldr	r3, [r4, #0]
 8010d94:	4632      	mov	r2, r6
 8010d96:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 8010d98:	4669      	mov	r1, sp
 8010d9a:	4620      	mov	r0, r4
 8010d9c:	4798      	blx	r3
 8010d9e:	69a4      	ldr	r4, [r4, #24]
 8010da0:	e7db      	b.n	8010d5a <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE+0xe>
 8010da2:	b002      	add	sp, #8
 8010da4:	bd70      	pop	{r4, r5, r6, pc}

08010da6 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEt>:
 8010da6:	b513      	push	{r0, r1, r4, lr}
 8010da8:	6803      	ldr	r3, [r0, #0]
 8010daa:	f8d3 40a8 	ldr.w	r4, [r3, #168]	@ 0xa8
 8010dae:	2300      	movs	r3, #0
 8010db0:	e9cd 3300 	strd	r3, r3, [sp]
 8010db4:	466b      	mov	r3, sp
 8010db6:	47a0      	blx	r4
 8010db8:	b002      	add	sp, #8
 8010dba:	bd10      	pop	{r4, pc}

08010dbc <_ZN8touchgfx3HAL16flushFrameBufferEv>:
 8010dbc:	2301      	movs	r3, #1
 8010dbe:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010dc2:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010dc6:	4770      	bx	lr

08010dc8 <_ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE>:
 8010dc8:	2301      	movs	r3, #1
 8010dca:	f880 304b 	strb.w	r3, [r0, #75]	@ 0x4b
 8010dce:	f880 306d 	strb.w	r3, [r0, #109]	@ 0x6d
 8010dd2:	4770      	bx	lr

08010dd4 <_ZN8touchgfx3HAL17allowDMATransfersEv>:
 8010dd4:	6843      	ldr	r3, [r0, #4]
 8010dd6:	2201      	movs	r2, #1
 8010dd8:	725a      	strb	r2, [r3, #9]
 8010dda:	6840      	ldr	r0, [r0, #4]
 8010ddc:	6803      	ldr	r3, [r0, #0]
 8010dde:	691b      	ldr	r3, [r3, #16]
 8010de0:	4718      	bx	r3

08010de2 <_ZN8touchgfx3HAL8flushDMAEv>:
 8010de2:	6840      	ldr	r0, [r0, #4]
 8010de4:	6803      	ldr	r3, [r0, #0]
 8010de6:	689b      	ldr	r3, [r3, #8]
 8010de8:	4718      	bx	r3

08010dea <_ZN8touchgfx3HAL8blitCopyEPKtttttthbtNS_6Bitmap12BitmapFormatES4_b>:
 8010dea:	b530      	push	{r4, r5, lr}
 8010dec:	b08b      	sub	sp, #44	@ 0x2c
 8010dee:	6804      	ldr	r4, [r0, #0]
 8010df0:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8010df4:	9509      	str	r5, [sp, #36]	@ 0x24
 8010df6:	f89d 5054 	ldrb.w	r5, [sp, #84]	@ 0x54
 8010dfa:	9508      	str	r5, [sp, #32]
 8010dfc:	f89d 5050 	ldrb.w	r5, [sp, #80]	@ 0x50
 8010e00:	9507      	str	r5, [sp, #28]
 8010e02:	f8bd 504c 	ldrh.w	r5, [sp, #76]	@ 0x4c
 8010e06:	9506      	str	r5, [sp, #24]
 8010e08:	f89d 5048 	ldrb.w	r5, [sp, #72]	@ 0x48
 8010e0c:	9505      	str	r5, [sp, #20]
 8010e0e:	f89d 5044 	ldrb.w	r5, [sp, #68]	@ 0x44
 8010e12:	9504      	str	r5, [sp, #16]
 8010e14:	f8bd 5040 	ldrh.w	r5, [sp, #64]	@ 0x40
 8010e18:	9503      	str	r5, [sp, #12]
 8010e1a:	f8bd 503c 	ldrh.w	r5, [sp, #60]	@ 0x3c
 8010e1e:	9502      	str	r5, [sp, #8]
 8010e20:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 8010e24:	e9cd 3500 	strd	r3, r5, [sp]
 8010e28:	4613      	mov	r3, r2
 8010e2a:	6be4      	ldr	r4, [r4, #60]	@ 0x3c
 8010e2c:	2200      	movs	r2, #0
 8010e2e:	47a0      	blx	r4
 8010e30:	b00b      	add	sp, #44	@ 0x2c
 8010e32:	bd30      	pop	{r4, r5, pc}

08010e34 <_ZN8touchgfx3HAL10beginFrameEv>:
 8010e34:	4b04      	ldr	r3, [pc, #16]	@ (8010e48 <_ZN8touchgfx3HAL10beginFrameEv+0x14>)
 8010e36:	781b      	ldrb	r3, [r3, #0]
 8010e38:	b123      	cbz	r3, 8010e44 <_ZN8touchgfx3HAL10beginFrameEv+0x10>
 8010e3a:	f890 006e 	ldrb.w	r0, [r0, #110]	@ 0x6e
 8010e3e:	f080 0001 	eor.w	r0, r0, #1
 8010e42:	4770      	bx	lr
 8010e44:	2001      	movs	r0, #1
 8010e46:	4770      	bx	lr
 8010e48:	20002f52 	.word	0x20002f52

08010e4c <_ZN8touchgfx3HAL8endFrameEv>:
 8010e4c:	b510      	push	{r4, lr}
 8010e4e:	4604      	mov	r4, r0
 8010e50:	6840      	ldr	r0, [r0, #4]
 8010e52:	6803      	ldr	r3, [r0, #0]
 8010e54:	689b      	ldr	r3, [r3, #8]
 8010e56:	4798      	blx	r3
 8010e58:	f894 306d 	ldrb.w	r3, [r4, #109]	@ 0x6d
 8010e5c:	b113      	cbz	r3, 8010e64 <_ZN8touchgfx3HAL8endFrameEv+0x18>
 8010e5e:	2301      	movs	r3, #1
 8010e60:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8010e64:	bd10      	pop	{r4, pc}

08010e66 <_ZN8touchgfx3HAL10initializeEv>:
 8010e66:	b510      	push	{r4, lr}
 8010e68:	4604      	mov	r4, r0
 8010e6a:	f7fe f81b 	bl	800eea4 <_ZN8touchgfx10OSWrappers10initializeEv>
 8010e6e:	f7fd fd61 	bl	800e934 <_ZN8touchgfx4GPIO4initEv>
 8010e72:	6860      	ldr	r0, [r4, #4]
 8010e74:	6803      	ldr	r3, [r0, #0]
 8010e76:	68db      	ldr	r3, [r3, #12]
 8010e78:	4798      	blx	r3
 8010e7a:	68e0      	ldr	r0, [r4, #12]
 8010e7c:	6803      	ldr	r3, [r0, #0]
 8010e7e:	689b      	ldr	r3, [r3, #8]
 8010e80:	4798      	blx	r3
 8010e82:	6823      	ldr	r3, [r4, #0]
 8010e84:	4620      	mov	r0, r4
 8010e86:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 8010e88:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8010e8c:	4718      	bx	r3

08010e8e <_ZN8touchgfx3HAL9taskEntryEv>:
 8010e8e:	b508      	push	{r3, lr}
 8010e90:	6803      	ldr	r3, [r0, #0]
 8010e92:	4604      	mov	r4, r0
 8010e94:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8010e98:	4798      	blx	r3
 8010e9a:	6823      	ldr	r3, [r4, #0]
 8010e9c:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8010e9e:	4620      	mov	r0, r4
 8010ea0:	4798      	blx	r3
 8010ea2:	f7fe f873 	bl	800ef8c <_ZN8touchgfx10OSWrappers12waitForVSyncEv>
 8010ea6:	6823      	ldr	r3, [r4, #0]
 8010ea8:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 8010eaa:	e7f8      	b.n	8010e9e <_ZN8touchgfx3HAL9taskEntryEv+0x10>

08010eac <_ZN8touchgfx3HAL4tickEv>:
 8010eac:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8010eae:	6803      	ldr	r3, [r0, #0]
 8010eb0:	4d5b      	ldr	r5, [pc, #364]	@ (8011020 <_ZN8touchgfx3HAL4tickEv+0x174>)
 8010eb2:	f8d3 30b0 	ldr.w	r3, [r3, #176]	@ 0xb0
 8010eb6:	4604      	mov	r4, r0
 8010eb8:	4798      	blx	r3
 8010eba:	2800      	cmp	r0, #0
 8010ebc:	f000 8095 	beq.w	8010fea <_ZN8touchgfx3HAL4tickEv+0x13e>
 8010ec0:	2001      	movs	r0, #1
 8010ec2:	f7fd fd3f 	bl	800e944 <_ZN8touchgfx4GPIO3setENS0_7GPIO_IDE>
 8010ec6:	f894 306a 	ldrb.w	r3, [r4, #106]	@ 0x6a
 8010eca:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010ece:	f894 3079 	ldrb.w	r3, [r4, #121]	@ 0x79
 8010ed2:	2600      	movs	r6, #0
 8010ed4:	f884 606a 	strb.w	r6, [r4, #106]	@ 0x6a
 8010ed8:	f884 604b 	strb.w	r6, [r4, #75]	@ 0x4b
 8010edc:	b133      	cbz	r3, 8010eec <_ZN8touchgfx3HAL4tickEv+0x40>
 8010ede:	6823      	ldr	r3, [r4, #0]
 8010ee0:	4620      	mov	r0, r4
 8010ee2:	f8d3 30c4 	ldr.w	r3, [r3, #196]	@ 0xc4
 8010ee6:	4798      	blx	r3
 8010ee8:	f884 6079 	strb.w	r6, [r4, #121]	@ 0x79
 8010eec:	f894 304a 	ldrb.w	r3, [r4, #74]	@ 0x4a
 8010ef0:	6862      	ldr	r2, [r4, #4]
 8010ef2:	f083 0301 	eor.w	r3, r3, #1
 8010ef6:	7253      	strb	r3, [r2, #9]
 8010ef8:	2601      	movs	r6, #1
 8010efa:	702e      	strb	r6, [r5, #0]
 8010efc:	f003 f9a0 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 8010f00:	6803      	ldr	r3, [r0, #0]
 8010f02:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8010f04:	4798      	blx	r3
 8010f06:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010f0a:	b90b      	cbnz	r3, 8010f10 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010f0c:	f884 606b 	strb.w	r6, [r4, #107]	@ 0x6b
 8010f10:	f003 f996 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 8010f14:	6803      	ldr	r3, [r0, #0]
 8010f16:	695b      	ldr	r3, [r3, #20]
 8010f18:	4798      	blx	r3
 8010f1a:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010f1c:	6803      	ldr	r3, [r0, #0]
 8010f1e:	691b      	ldr	r3, [r3, #16]
 8010f20:	4798      	blx	r3
 8010f22:	f894 306b 	ldrb.w	r3, [r4, #107]	@ 0x6b
 8010f26:	f894 206c 	ldrb.w	r2, [r4, #108]	@ 0x6c
 8010f2a:	3b01      	subs	r3, #1
 8010f2c:	b2db      	uxtb	r3, r3
 8010f2e:	f884 306b 	strb.w	r3, [r4, #107]	@ 0x6b
 8010f32:	b10a      	cbz	r2, 8010f38 <_ZN8touchgfx3HAL4tickEv+0x8c>
 8010f34:	2b00      	cmp	r3, #0
 8010f36:	d1eb      	bne.n	8010f10 <_ZN8touchgfx3HAL4tickEv+0x64>
 8010f38:	4a3a      	ldr	r2, [pc, #232]	@ (8011024 <_ZN8touchgfx3HAL4tickEv+0x178>)
 8010f3a:	f994 1068 	ldrsb.w	r1, [r4, #104]	@ 0x68
 8010f3e:	7813      	ldrb	r3, [r2, #0]
 8010f40:	3301      	adds	r3, #1
 8010f42:	b25b      	sxtb	r3, r3
 8010f44:	4299      	cmp	r1, r3
 8010f46:	7013      	strb	r3, [r2, #0]
 8010f48:	dc10      	bgt.n	8010f6c <_ZN8touchgfx3HAL4tickEv+0xc0>
 8010f4a:	68e0      	ldr	r0, [r4, #12]
 8010f4c:	2300      	movs	r3, #0
 8010f4e:	7013      	strb	r3, [r2, #0]
 8010f50:	6803      	ldr	r3, [r0, #0]
 8010f52:	aa03      	add	r2, sp, #12
 8010f54:	68db      	ldr	r3, [r3, #12]
 8010f56:	a902      	add	r1, sp, #8
 8010f58:	4798      	blx	r3
 8010f5a:	6823      	ldr	r3, [r4, #0]
 8010f5c:	2800      	cmp	r0, #0
 8010f5e:	d050      	beq.n	8011002 <_ZN8touchgfx3HAL4tickEv+0x156>
 8010f60:	f8d3 30bc 	ldr.w	r3, [r3, #188]	@ 0xbc
 8010f64:	e9dd 1202 	ldrd	r1, r2, [sp, #8]
 8010f68:	4620      	mov	r0, r4
 8010f6a:	4798      	blx	r3
 8010f6c:	6960      	ldr	r0, [r4, #20]
 8010f6e:	2300      	movs	r3, #0
 8010f70:	f88d 3007 	strb.w	r3, [sp, #7]
 8010f74:	b158      	cbz	r0, 8010f8e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010f76:	6803      	ldr	r3, [r0, #0]
 8010f78:	f10d 0107 	add.w	r1, sp, #7
 8010f7c:	68db      	ldr	r3, [r3, #12]
 8010f7e:	4798      	blx	r3
 8010f80:	b128      	cbz	r0, 8010f8e <_ZN8touchgfx3HAL4tickEv+0xe2>
 8010f82:	6de0      	ldr	r0, [r4, #92]	@ 0x5c
 8010f84:	f89d 1007 	ldrb.w	r1, [sp, #7]
 8010f88:	6803      	ldr	r3, [r0, #0]
 8010f8a:	68db      	ldr	r3, [r3, #12]
 8010f8c:	4798      	blx	r3
 8010f8e:	f104 001c 	add.w	r0, r4, #28
 8010f92:	f014 fdf9 	bl	8025b88 <_ZN8touchgfx8Gestures4tickEv>
 8010f96:	f894 3070 	ldrb.w	r3, [r4, #112]	@ 0x70
 8010f9a:	b30b      	cbz	r3, 8010fe0 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010f9c:	6920      	ldr	r0, [r4, #16]
 8010f9e:	6803      	ldr	r3, [r0, #0]
 8010fa0:	691b      	ldr	r3, [r3, #16]
 8010fa2:	4798      	blx	r3
 8010fa4:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010fa6:	4606      	mov	r6, r0
 8010fa8:	b903      	cbnz	r3, 8010fac <_ZN8touchgfx3HAL4tickEv+0x100>
 8010faa:	6760      	str	r0, [r4, #116]	@ 0x74
 8010fac:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010fae:	4a1e      	ldr	r2, [pc, #120]	@ (8011028 <_ZN8touchgfx3HAL4tickEv+0x17c>)
 8010fb0:	1af3      	subs	r3, r6, r3
 8010fb2:	4293      	cmp	r3, r2
 8010fb4:	d914      	bls.n	8010fe0 <_ZN8touchgfx3HAL4tickEv+0x134>
 8010fb6:	6920      	ldr	r0, [r4, #16]
 8010fb8:	6803      	ldr	r3, [r0, #0]
 8010fba:	699b      	ldr	r3, [r3, #24]
 8010fbc:	4798      	blx	r3
 8010fbe:	6f63      	ldr	r3, [r4, #116]	@ 0x74
 8010fc0:	2264      	movs	r2, #100	@ 0x64
 8010fc2:	1af3      	subs	r3, r6, r3
 8010fc4:	fbb3 f3f2 	udiv	r3, r3, r2
 8010fc8:	fbb0 f0f3 	udiv	r0, r0, r3
 8010fcc:	2800      	cmp	r0, #0
 8010fce:	dc1d      	bgt.n	801100c <_ZN8touchgfx3HAL4tickEv+0x160>
 8010fd0:	f884 2069 	strb.w	r2, [r4, #105]	@ 0x69
 8010fd4:	6920      	ldr	r0, [r4, #16]
 8010fd6:	6803      	ldr	r3, [r0, #0]
 8010fd8:	2100      	movs	r1, #0
 8010fda:	69db      	ldr	r3, [r3, #28]
 8010fdc:	4798      	blx	r3
 8010fde:	6766      	str	r6, [r4, #116]	@ 0x74
 8010fe0:	f003 f92e 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 8010fe4:	6803      	ldr	r3, [r0, #0]
 8010fe6:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8010fe8:	4798      	blx	r3
 8010fea:	6823      	ldr	r3, [r4, #0]
 8010fec:	4620      	mov	r0, r4
 8010fee:	f8d3 30b4 	ldr.w	r3, [r3, #180]	@ 0xb4
 8010ff2:	4798      	blx	r3
 8010ff4:	2001      	movs	r0, #1
 8010ff6:	f7fd fcc1 	bl	800e97c <_ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE>
 8010ffa:	2300      	movs	r3, #0
 8010ffc:	702b      	strb	r3, [r5, #0]
 8010ffe:	b004      	add	sp, #16
 8011000:	bd70      	pop	{r4, r5, r6, pc}
 8011002:	f8d3 30c0 	ldr.w	r3, [r3, #192]	@ 0xc0
 8011006:	4620      	mov	r0, r4
 8011008:	4798      	blx	r3
 801100a:	e7af      	b.n	8010f6c <_ZN8touchgfx3HAL4tickEv+0xc0>
 801100c:	2863      	cmp	r0, #99	@ 0x63
 801100e:	bfcb      	itete	gt
 8011010:	2300      	movgt	r3, #0
 8011012:	f1c0 0064 	rsble	r0, r0, #100	@ 0x64
 8011016:	f884 3069 	strbgt.w	r3, [r4, #105]	@ 0x69
 801101a:	f884 0069 	strble.w	r0, [r4, #105]	@ 0x69
 801101e:	e7d9      	b.n	8010fd4 <_ZN8touchgfx3HAL4tickEv+0x128>
 8011020:	20002f58 	.word	0x20002f58
 8011024:	20002f59 	.word	0x20002f59
 8011028:	05f5e100 	.word	0x05f5e100

0801102c <_ZN8touchgfx3HAL17unlockFrameBufferEv>:
 801102c:	b510      	push	{r4, lr}
 801102e:	4604      	mov	r4, r0
 8011030:	f7fd ff60 	bl	800eef4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>
 8011034:	6863      	ldr	r3, [r4, #4]
 8011036:	2200      	movs	r2, #0
 8011038:	729a      	strb	r2, [r3, #10]
 801103a:	bd10      	pop	{r4, pc}

0801103c <_ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE>:
 801103c:	65c1      	str	r1, [r0, #92]	@ 0x5c
 801103e:	301c      	adds	r0, #28
 8011040:	f014 bda0 	b.w	8025b84 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>

08011044 <_ZN8touchgfx3HAL5touchEll>:
 8011044:	b530      	push	{r4, r5, lr}
 8011046:	b087      	sub	sp, #28
 8011048:	4604      	mov	r4, r0
 801104a:	a804      	add	r0, sp, #16
 801104c:	e9cd 1204 	strd	r1, r2, [sp, #16]
 8011050:	f002 fee8 	bl	8013e24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>
 8011054:	9b04      	ldr	r3, [sp, #16]
 8011056:	f8ad 300c 	strh.w	r3, [sp, #12]
 801105a:	a906      	add	r1, sp, #24
 801105c:	9b05      	ldr	r3, [sp, #20]
 801105e:	f821 3d0a 	strh.w	r3, [r1, #-10]!
 8011062:	a803      	add	r0, sp, #12
 8011064:	f002 ff30 	bl	8013ec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>
 8011068:	f894 106f 	ldrb.w	r1, [r4, #111]	@ 0x6f
 801106c:	f8bd 200c 	ldrh.w	r2, [sp, #12]
 8011070:	f8bd 300e 	ldrh.w	r3, [sp, #14]
 8011074:	f104 001c 	add.w	r0, r4, #28
 8011078:	b189      	cbz	r1, 801109e <_ZN8touchgfx3HAL5touchEll+0x5a>
 801107a:	f8b4 5064 	ldrh.w	r5, [r4, #100]	@ 0x64
 801107e:	9300      	str	r3, [sp, #0]
 8011080:	f8b4 1060 	ldrh.w	r1, [r4, #96]	@ 0x60
 8011084:	4613      	mov	r3, r2
 8011086:	462a      	mov	r2, r5
 8011088:	f014 fd8c 	bl	8025ba4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>
 801108c:	b128      	cbz	r0, 801109a <_ZN8touchgfx3HAL5touchEll+0x56>
 801108e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 8011092:	6623      	str	r3, [r4, #96]	@ 0x60
 8011094:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 8011098:	6663      	str	r3, [r4, #100]	@ 0x64
 801109a:	b007      	add	sp, #28
 801109c:	bd30      	pop	{r4, r5, pc}
 801109e:	f014 fdc1 	bl	8025c24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 80110a2:	2301      	movs	r3, #1
 80110a4:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 80110a8:	e7f1      	b.n	801108e <_ZN8touchgfx3HAL5touchEll+0x4a>

080110aa <_ZN8touchgfx3HAL9blockCopyEPvPKvm>:
 80110aa:	b510      	push	{r4, lr}
 80110ac:	2b00      	cmp	r3, #0
 80110ae:	d046      	beq.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80110b0:	ea81 0002 	eor.w	r0, r1, r2
 80110b4:	07c4      	lsls	r4, r0, #31
 80110b6:	d508      	bpl.n	80110ca <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x20>
 80110b8:	440b      	add	r3, r1
 80110ba:	3a01      	subs	r2, #1
 80110bc:	428b      	cmp	r3, r1
 80110be:	d93e      	bls.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 80110c0:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 80110c4:	f801 0b01 	strb.w	r0, [r1], #1
 80110c8:	e7f8      	b.n	80110bc <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x12>
 80110ca:	07d0      	lsls	r0, r2, #31
 80110cc:	bf42      	ittt	mi
 80110ce:	f812 0b01 	ldrbmi.w	r0, [r2], #1
 80110d2:	f801 0b01 	strbmi.w	r0, [r1], #1
 80110d6:	f103 33ff 	addmi.w	r3, r3, #4294967295
 80110da:	2b01      	cmp	r3, #1
 80110dc:	d911      	bls.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 80110de:	ea81 0402 	eor.w	r4, r1, r2
 80110e2:	07a4      	lsls	r4, r4, #30
 80110e4:	4610      	mov	r0, r2
 80110e6:	d022      	beq.n	801112e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x84>
 80110e8:	f023 0401 	bic.w	r4, r3, #1
 80110ec:	440c      	add	r4, r1
 80110ee:	428c      	cmp	r4, r1
 80110f0:	4602      	mov	r2, r0
 80110f2:	d904      	bls.n	80110fe <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x54>
 80110f4:	8812      	ldrh	r2, [r2, #0]
 80110f6:	f821 2b02 	strh.w	r2, [r1], #2
 80110fa:	3002      	adds	r0, #2
 80110fc:	e7f7      	b.n	80110ee <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x44>
 80110fe:	f003 0301 	and.w	r3, r3, #1
 8011102:	f023 0003 	bic.w	r0, r3, #3
 8011106:	4408      	add	r0, r1
 8011108:	4288      	cmp	r0, r1
 801110a:	4614      	mov	r4, r2
 801110c:	d904      	bls.n	8011118 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x6e>
 801110e:	6824      	ldr	r4, [r4, #0]
 8011110:	f841 4b04 	str.w	r4, [r1], #4
 8011114:	3204      	adds	r2, #4
 8011116:	e7f7      	b.n	8011108 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x5e>
 8011118:	f003 0303 	and.w	r3, r3, #3
 801111c:	440b      	add	r3, r1
 801111e:	3a01      	subs	r2, #1
 8011120:	428b      	cmp	r3, r1
 8011122:	d90c      	bls.n	801113e <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x94>
 8011124:	f812 0f01 	ldrb.w	r0, [r2, #1]!
 8011128:	f801 0b01 	strb.w	r0, [r1], #1
 801112c:	e7f8      	b.n	8011120 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x76>
 801112e:	0790      	lsls	r0, r2, #30
 8011130:	d0e7      	beq.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 8011132:	f832 0b02 	ldrh.w	r0, [r2], #2
 8011136:	f821 0b02 	strh.w	r0, [r1], #2
 801113a:	3b02      	subs	r3, #2
 801113c:	e7e1      	b.n	8011102 <_ZN8touchgfx3HAL9blockCopyEPvPKvm+0x58>
 801113e:	2001      	movs	r0, #1
 8011140:	bd10      	pop	{r4, pc}

08011142 <_ZN8touchgfx3HAL7noTouchEv>:
 8011142:	b510      	push	{r4, lr}
 8011144:	f890 306f 	ldrb.w	r3, [r0, #111]	@ 0x6f
 8011148:	4604      	mov	r4, r0
 801114a:	b153      	cbz	r3, 8011162 <_ZN8touchgfx3HAL7noTouchEv+0x20>
 801114c:	f8b0 3064 	ldrh.w	r3, [r0, #100]	@ 0x64
 8011150:	f8b0 2060 	ldrh.w	r2, [r0, #96]	@ 0x60
 8011154:	2101      	movs	r1, #1
 8011156:	301c      	adds	r0, #28
 8011158:	f014 fd64 	bl	8025c24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>
 801115c:	2300      	movs	r3, #0
 801115e:	f884 306f 	strb.w	r3, [r4, #111]	@ 0x6f
 8011162:	bd10      	pop	{r4, pc}

08011164 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt>:
 8011164:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011168:	b085      	sub	sp, #20
 801116a:	ad04      	add	r5, sp, #16
 801116c:	4604      	mov	r4, r0
 801116e:	2000      	movs	r0, #0
 8011170:	f845 0d04 	str.w	r0, [r5, #-4]!
 8011174:	69a0      	ldr	r0, [r4, #24]
 8011176:	6806      	ldr	r6, [r0, #0]
 8011178:	9501      	str	r5, [sp, #4]
 801117a:	f8bd 5030 	ldrh.w	r5, [sp, #48]	@ 0x30
 801117e:	9500      	str	r5, [sp, #0]
 8011180:	6835      	ldr	r5, [r6, #0]
 8011182:	4699      	mov	r9, r3
 8011184:	460f      	mov	r7, r1
 8011186:	4690      	mov	r8, r2
 8011188:	47a8      	blx	r5
 801118a:	4d10      	ldr	r5, [pc, #64]	@ (80111cc <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x68>)
 801118c:	4606      	mov	r6, r0
 801118e:	f8a5 9000 	strh.w	r9, [r5]
 8011192:	f7f7 fb0d 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011196:	6803      	ldr	r3, [r0, #0]
 8011198:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801119a:	4798      	blx	r3
 801119c:	b128      	cbz	r0, 80111aa <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x46>
 801119e:	2801      	cmp	r0, #1
 80111a0:	d00b      	beq.n	80111ba <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x56>
 80111a2:	4630      	mov	r0, r6
 80111a4:	b005      	add	sp, #20
 80111a6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80111aa:	882b      	ldrh	r3, [r5, #0]
 80111ac:	fb08 7203 	mla	r2, r8, r3, r7
 80111b0:	9b03      	ldr	r3, [sp, #12]
 80111b2:	eba3 0342 	sub.w	r3, r3, r2, lsl #1
 80111b6:	63e3      	str	r3, [r4, #60]	@ 0x3c
 80111b8:	e7f3      	b.n	80111a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80111ba:	882a      	ldrh	r2, [r5, #0]
 80111bc:	9b03      	ldr	r3, [sp, #12]
 80111be:	fb08 7202 	mla	r2, r8, r2, r7
 80111c2:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 80111c6:	1a9a      	subs	r2, r3, r2
 80111c8:	63e2      	str	r2, [r4, #60]	@ 0x3c
 80111ca:	e7ea      	b.n	80111a2 <_ZN8touchgfx3HAL27configurePartialFrameBufferEtttt+0x3e>
 80111cc:	20002f4e 	.word	0x20002f4e

080111d0 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb>:
 80111d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80111d2:	b08b      	sub	sp, #44	@ 0x2c
 80111d4:	4617      	mov	r7, r2
 80111d6:	4604      	mov	r4, r0
 80111d8:	460e      	mov	r6, r1
 80111da:	461d      	mov	r5, r3
 80111dc:	f7f7 fae8 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 80111e0:	6803      	ldr	r3, [r0, #0]
 80111e2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80111e4:	4798      	blx	r3
 80111e6:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 80111ea:	9007      	str	r0, [sp, #28]
 80111ec:	e9cd 0308 	strd	r0, r3, [sp, #32]
 80111f0:	4b0d      	ldr	r3, [pc, #52]	@ (8011228 <_ZN8touchgfx3HAL8blitCopyEPKtttttthbb+0x58>)
 80111f2:	6822      	ldr	r2, [r4, #0]
 80111f4:	881b      	ldrh	r3, [r3, #0]
 80111f6:	9306      	str	r3, [sp, #24]
 80111f8:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 80111fc:	9305      	str	r3, [sp, #20]
 80111fe:	f89d 304c 	ldrb.w	r3, [sp, #76]	@ 0x4c
 8011202:	9304      	str	r3, [sp, #16]
 8011204:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011208:	9303      	str	r3, [sp, #12]
 801120a:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 801120e:	9302      	str	r3, [sp, #8]
 8011210:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 8011214:	e9cd 5300 	strd	r5, r3, [sp]
 8011218:	4631      	mov	r1, r6
 801121a:	6bd5      	ldr	r5, [r2, #60]	@ 0x3c
 801121c:	463b      	mov	r3, r7
 801121e:	2200      	movs	r2, #0
 8011220:	4620      	mov	r0, r4
 8011222:	47a8      	blx	r5
 8011224:	b00b      	add	sp, #44	@ 0x2c
 8011226:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011228:	20002f4e 	.word	0x20002f4e

0801122c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb>:
 801122c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011230:	4698      	mov	r8, r3
 8011232:	6803      	ldr	r3, [r0, #0]
 8011234:	6bdd      	ldr	r5, [r3, #60]	@ 0x3c
 8011236:	4b15      	ldr	r3, [pc, #84]	@ (801128c <_ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttthb+0x60>)
 8011238:	b08b      	sub	sp, #44	@ 0x2c
 801123a:	4617      	mov	r7, r2
 801123c:	f8b3 9000 	ldrh.w	r9, [r3]
 8011240:	460e      	mov	r6, r1
 8011242:	4604      	mov	r4, r0
 8011244:	f7f7 fab4 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011248:	6803      	ldr	r3, [r0, #0]
 801124a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801124c:	4798      	blx	r3
 801124e:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8011252:	e9cd 0308 	strd	r0, r3, [sp, #32]
 8011256:	2302      	movs	r3, #2
 8011258:	e9cd 9306 	strd	r9, r3, [sp, #24]
 801125c:	2301      	movs	r3, #1
 801125e:	9305      	str	r3, [sp, #20]
 8011260:	f89d 3054 	ldrb.w	r3, [sp, #84]	@ 0x54
 8011264:	9304      	str	r3, [sp, #16]
 8011266:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 801126a:	9303      	str	r3, [sp, #12]
 801126c:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011270:	9302      	str	r3, [sp, #8]
 8011272:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8011276:	2200      	movs	r2, #0
 8011278:	e9cd 8300 	strd	r8, r3, [sp]
 801127c:	4631      	mov	r1, r6
 801127e:	463b      	mov	r3, r7
 8011280:	4620      	mov	r0, r4
 8011282:	47a8      	blx	r5
 8011284:	b00b      	add	sp, #44	@ 0x2c
 8011286:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801128a:	bf00      	nop
 801128c:	20002f4e 	.word	0x20002f4e

08011290 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb>:
 8011290:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011294:	4698      	mov	r8, r3
 8011296:	6803      	ldr	r3, [r0, #0]
 8011298:	6d9d      	ldr	r5, [r3, #88]	@ 0x58
 801129a:	4b11      	ldr	r3, [pc, #68]	@ (80112e0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthb+0x50>)
 801129c:	b087      	sub	sp, #28
 801129e:	f8b3 9000 	ldrh.w	r9, [r3]
 80112a2:	460e      	mov	r6, r1
 80112a4:	4617      	mov	r7, r2
 80112a6:	4604      	mov	r4, r0
 80112a8:	f7f7 fa82 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 80112ac:	6803      	ldr	r3, [r0, #0]
 80112ae:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80112b0:	4798      	blx	r3
 80112b2:	f89d 3044 	ldrb.w	r3, [sp, #68]	@ 0x44
 80112b6:	f8cd 900c 	str.w	r9, [sp, #12]
 80112ba:	e9cd 0304 	strd	r0, r3, [sp, #16]
 80112be:	f89d 3040 	ldrb.w	r3, [sp, #64]	@ 0x40
 80112c2:	9302      	str	r3, [sp, #8]
 80112c4:	f8bd 303c 	ldrh.w	r3, [sp, #60]	@ 0x3c
 80112c8:	9301      	str	r3, [sp, #4]
 80112ca:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80112ce:	9300      	str	r3, [sp, #0]
 80112d0:	463a      	mov	r2, r7
 80112d2:	4643      	mov	r3, r8
 80112d4:	4631      	mov	r1, r6
 80112d6:	4620      	mov	r0, r4
 80112d8:	47a8      	blx	r5
 80112da:	b007      	add	sp, #28
 80112dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80112e0:	20002f4e 	.word	0x20002f4e

080112e4 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE>:
 80112e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80112e8:	4604      	mov	r4, r0
 80112ea:	b08f      	sub	sp, #60	@ 0x3c
 80112ec:	4610      	mov	r0, r2
 80112ee:	460d      	mov	r5, r1
 80112f0:	4691      	mov	r9, r2
 80112f2:	461e      	mov	r6, r3
 80112f4:	f006 f996 	bl	8017624 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 80112f8:	2800      	cmp	r0, #0
 80112fa:	f000 809d 	beq.w	8011438 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x154>
 80112fe:	6823      	ldr	r3, [r4, #0]
 8011300:	f8df b198 	ldr.w	fp, [pc, #408]	@ 801149c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>
 8011304:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8011306:	f8df a198 	ldr.w	sl, [pc, #408]	@ 80114a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>
 801130a:	4f61      	ldr	r7, [pc, #388]	@ (8011490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801130c:	4620      	mov	r0, r4
 801130e:	4798      	blx	r3
 8011310:	6823      	ldr	r3, [r4, #0]
 8011312:	4620      	mov	r0, r4
 8011314:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011316:	4798      	blx	r3
 8011318:	f8bb 3000 	ldrh.w	r3, [fp]
 801131c:	9301      	str	r3, [sp, #4]
 801131e:	f10d 0838 	add.w	r8, sp, #56	@ 0x38
 8011322:	f8ba 3000 	ldrh.w	r3, [sl]
 8011326:	9302      	str	r3, [sp, #8]
 8011328:	883b      	ldrh	r3, [r7, #0]
 801132a:	f828 9d1c 	strh.w	r9, [r8, #-28]!
 801132e:	9303      	str	r3, [sp, #12]
 8011330:	4b58      	ldr	r3, [pc, #352]	@ (8011494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011332:	9305      	str	r3, [sp, #20]
 8011334:	881a      	ldrh	r2, [r3, #0]
 8011336:	9204      	str	r2, [sp, #16]
 8011338:	4640      	mov	r0, r8
 801133a:	f006 fa07 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801133e:	8038      	strh	r0, [r7, #0]
 8011340:	4640      	mov	r0, r8
 8011342:	f006 fa37 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8011346:	9b05      	ldr	r3, [sp, #20]
 8011348:	b280      	uxth	r0, r0
 801134a:	8018      	strh	r0, [r3, #0]
 801134c:	4b52      	ldr	r3, [pc, #328]	@ (8011498 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b4>)
 801134e:	781b      	ldrb	r3, [r3, #0]
 8011350:	2b00      	cmp	r3, #0
 8011352:	d174      	bne.n	801143e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x15a>
 8011354:	883b      	ldrh	r3, [r7, #0]
 8011356:	f8ab 3000 	strh.w	r3, [fp]
 801135a:	f8aa 0000 	strh.w	r0, [sl]
 801135e:	4648      	mov	r0, r9
 8011360:	e9d4 870f 	ldrd	r8, r7, [r4, #60]	@ 0x3c
 8011364:	f006 f95e 	bl	8017624 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>
 8011368:	e9c4 000f 	strd	r0, r0, [r4, #60]	@ 0x3c
 801136c:	2200      	movs	r2, #0
 801136e:	4611      	mov	r1, r2
 8011370:	4628      	mov	r0, r5
 8011372:	f9b5 9004 	ldrsh.w	r9, [r5, #4]
 8011376:	f9b5 a006 	ldrsh.w	sl, [r5, #6]
 801137a:	f7f8 fc76 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
 801137e:	2301      	movs	r3, #1
 8011380:	f895 b025 	ldrb.w	fp, [r5, #37]	@ 0x25
 8011384:	f885 3025 	strb.w	r3, [r5, #37]	@ 0x25
 8011388:	f9b6 3004 	ldrsh.w	r3, [r6, #4]
 801138c:	2b00      	cmp	r3, #0
 801138e:	dd5c      	ble.n	801144a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011390:	f9b6 3006 	ldrsh.w	r3, [r6, #6]
 8011394:	2b00      	cmp	r3, #0
 8011396:	dd58      	ble.n	801144a <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x166>
 8011398:	462a      	mov	r2, r5
 801139a:	ab0a      	add	r3, sp, #40	@ 0x28
 801139c:	f852 0f04 	ldr.w	r0, [r2, #4]!
 80113a0:	6851      	ldr	r1, [r2, #4]
 80113a2:	c303      	stmia	r3!, {r0, r1}
 80113a4:	4631      	mov	r1, r6
 80113a6:	a80a      	add	r0, sp, #40	@ 0x28
 80113a8:	f7ff fbf8 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80113ac:	4b38      	ldr	r3, [pc, #224]	@ (8011490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 80113ae:	f9b3 2000 	ldrsh.w	r2, [r3]
 80113b2:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80113b6:	2100      	movs	r1, #0
 80113b8:	aa0a      	add	r2, sp, #40	@ 0x28
 80113ba:	4b36      	ldr	r3, [pc, #216]	@ (8011494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 80113bc:	910c      	str	r1, [sp, #48]	@ 0x30
 80113be:	e892 0003 	ldmia.w	r2, {r0, r1}
 80113c2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80113c6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80113ca:	ab08      	add	r3, sp, #32
 80113cc:	e883 0003 	stmia.w	r3, {r0, r1}
 80113d0:	4618      	mov	r0, r3
 80113d2:	a90c      	add	r1, sp, #48	@ 0x30
 80113d4:	f7ff fbe2 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80113d8:	6ce3      	ldr	r3, [r4, #76]	@ 0x4c
 80113da:	2b00      	cmp	r3, #0
 80113dc:	d13c      	bne.n	8011458 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x174>
 80113de:	2000      	movs	r0, #0
 80113e0:	f884 0058 	strb.w	r0, [r4, #88]	@ 0x58
 80113e4:	2600      	movs	r6, #0
 80113e6:	682a      	ldr	r2, [r5, #0]
 80113e8:	696b      	ldr	r3, [r5, #20]
 80113ea:	616e      	str	r6, [r5, #20]
 80113ec:	9305      	str	r3, [sp, #20]
 80113ee:	6892      	ldr	r2, [r2, #8]
 80113f0:	a908      	add	r1, sp, #32
 80113f2:	4628      	mov	r0, r5
 80113f4:	4790      	blx	r2
 80113f6:	9b05      	ldr	r3, [sp, #20]
 80113f8:	616b      	str	r3, [r5, #20]
 80113fa:	4652      	mov	r2, sl
 80113fc:	f884 6058 	strb.w	r6, [r4, #88]	@ 0x58
 8011400:	4649      	mov	r1, r9
 8011402:	4628      	mov	r0, r5
 8011404:	f885 b025 	strb.w	fp, [r5, #37]	@ 0x25
 8011408:	f7f8 fc2f 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
 801140c:	4b23      	ldr	r3, [pc, #140]	@ (801149c <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b8>)
 801140e:	9a01      	ldr	r2, [sp, #4]
 8011410:	801a      	strh	r2, [r3, #0]
 8011412:	4b23      	ldr	r3, [pc, #140]	@ (80114a0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1bc>)
 8011414:	9a02      	ldr	r2, [sp, #8]
 8011416:	801a      	strh	r2, [r3, #0]
 8011418:	4b1d      	ldr	r3, [pc, #116]	@ (8011490 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1ac>)
 801141a:	9a03      	ldr	r2, [sp, #12]
 801141c:	801a      	strh	r2, [r3, #0]
 801141e:	4b1d      	ldr	r3, [pc, #116]	@ (8011494 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x1b0>)
 8011420:	9a04      	ldr	r2, [sp, #16]
 8011422:	801a      	strh	r2, [r3, #0]
 8011424:	e9c4 870f 	strd	r8, r7, [r4, #60]	@ 0x3c
 8011428:	6823      	ldr	r3, [r4, #0]
 801142a:	4620      	mov	r0, r4
 801142c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801142e:	4798      	blx	r3
 8011430:	6823      	ldr	r3, [r4, #0]
 8011432:	4620      	mov	r0, r4
 8011434:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011436:	4798      	blx	r3
 8011438:	b00f      	add	sp, #60	@ 0x3c
 801143a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801143e:	883b      	ldrh	r3, [r7, #0]
 8011440:	f8ab 0000 	strh.w	r0, [fp]
 8011444:	f8aa 3000 	strh.w	r3, [sl]
 8011448:	e789      	b.n	801135e <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0x7a>
 801144a:	462a      	mov	r2, r5
 801144c:	ab0a      	add	r3, sp, #40	@ 0x28
 801144e:	f852 0f04 	ldr.w	r0, [r2, #4]!
 8011452:	6851      	ldr	r1, [r2, #4]
 8011454:	c303      	stmia	r3!, {r0, r1}
 8011456:	e7a9      	b.n	80113ac <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xc8>
 8011458:	a807      	add	r0, sp, #28
 801145a:	f006 faed 	bl	8017a38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801145e:	4606      	mov	r6, r0
 8011460:	6ce0      	ldr	r0, [r4, #76]	@ 0x4c
 8011462:	6803      	ldr	r3, [r0, #0]
 8011464:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011466:	4798      	blx	r3
 8011468:	4286      	cmp	r6, r0
 801146a:	d1b8      	bne.n	80113de <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfa>
 801146c:	f7f7 f9a0 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011470:	6803      	ldr	r3, [r0, #0]
 8011472:	4606      	mov	r6, r0
 8011474:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011476:	9305      	str	r3, [sp, #20]
 8011478:	a807      	add	r0, sp, #28
 801147a:	f006 fadd 	bl	8017a38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801147e:	9b05      	ldr	r3, [sp, #20]
 8011480:	4601      	mov	r1, r0
 8011482:	4630      	mov	r0, r6
 8011484:	4798      	blx	r3
 8011486:	f080 0001 	eor.w	r0, r0, #1
 801148a:	b2c0      	uxtb	r0, r0
 801148c:	e7a8      	b.n	80113e0 <_ZN8touchgfx3HAL27drawDrawableInDynamicBitmapERNS_8DrawableEtRKNS_4RectE+0xfc>
 801148e:	bf00      	nop
 8011490:	20002f48 	.word	0x20002f48
 8011494:	20002f4a 	.word	0x20002f4a
 8011498:	20002f4c 	.word	0x20002f4c
 801149c:	20002f4e 	.word	0x20002f4e
 80114a0:	20002f50 	.word	0x20002f50

080114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>:
 80114a4:	b510      	push	{r4, lr}
 80114a6:	4b07      	ldr	r3, [pc, #28]	@ (80114c4 <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x20>)
 80114a8:	781b      	ldrb	r3, [r3, #0]
 80114aa:	4604      	mov	r4, r0
 80114ac:	b13b      	cbz	r3, 80114be <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80114ae:	6803      	ldr	r3, [r0, #0]
 80114b0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80114b2:	4798      	blx	r3
 80114b4:	6be3      	ldr	r3, [r4, #60]	@ 0x3c
 80114b6:	4283      	cmp	r3, r0
 80114b8:	d101      	bne.n	80114be <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x1a>
 80114ba:	6c20      	ldr	r0, [r4, #64]	@ 0x40
 80114bc:	bd10      	pop	{r4, pc}
 80114be:	6be0      	ldr	r0, [r4, #60]	@ 0x3c
 80114c0:	e7fc      	b.n	80114bc <_ZN8touchgfx3HAL20getClientFrameBufferEv+0x18>
 80114c2:	bf00      	nop
 80114c4:	20002f52 	.word	0x20002f52

080114c8 <_ZN8touchgfx3HAL12blitCopyWordEPKttttttt>:
 80114c8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80114cc:	b08a      	sub	sp, #40	@ 0x28
 80114ce:	461d      	mov	r5, r3
 80114d0:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 80114d4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80114d8:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 80114dc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80114e0:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80114e4:	f8ad 301a 	strh.w	r3, [sp, #26]
 80114e8:	2400      	movs	r4, #0
 80114ea:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80114ee:	f8bd 604c 	ldrh.w	r6, [sp, #76]	@ 0x4c
 80114f2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80114f6:	4690      	mov	r8, r2
 80114f8:	4607      	mov	r7, r0
 80114fa:	9404      	str	r4, [sp, #16]
 80114fc:	f88d 4020 	strb.w	r4, [sp, #32]
 8011500:	f7ff ffd0 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011504:	fb06 8505 	mla	r5, r6, r5, r8
 8011508:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801150c:	6878      	ldr	r0, [r7, #4]
 801150e:	9505      	str	r5, [sp, #20]
 8011510:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011514:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011518:	f88d 4021 	strb.w	r4, [sp, #33]	@ 0x21
 801151c:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011520:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 8011524:	6803      	ldr	r3, [r0, #0]
 8011526:	a901      	add	r1, sp, #4
 8011528:	685b      	ldr	r3, [r3, #4]
 801152a:	4798      	blx	r3
 801152c:	b00a      	add	sp, #40	@ 0x28
 801152e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011532 <_ZN8touchgfx3HAL12blitFillWordEtttttt>:
 8011532:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8011536:	b08b      	sub	sp, #44	@ 0x2c
 8011538:	2400      	movs	r4, #0
 801153a:	461d      	mov	r5, r3
 801153c:	f44f 6300 	mov.w	r3, #2048	@ 0x800
 8011540:	4688      	mov	r8, r1
 8011542:	4691      	mov	r9, r2
 8011544:	f8bd 6050 	ldrh.w	r6, [sp, #80]	@ 0x50
 8011548:	9404      	str	r4, [sp, #16]
 801154a:	4607      	mov	r7, r0
 801154c:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011550:	f7ff ffa8 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011554:	fb06 9505 	mla	r5, r6, r5, r9
 8011558:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801155c:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011560:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 8011564:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 8011568:	6878      	ldr	r0, [r7, #4]
 801156a:	9505      	str	r5, [sp, #20]
 801156c:	f8ad 301a 	strh.w	r3, [sp, #26]
 8011570:	f8ad 401c 	strh.w	r4, [sp, #28]
 8011574:	f8ad 601e 	strh.w	r6, [sp, #30]
 8011578:	f8cd 8010 	str.w	r8, [sp, #16]
 801157c:	f8ad 4020 	strh.w	r4, [sp, #32]
 8011580:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011584:	f88d 4023 	strb.w	r4, [sp, #35]	@ 0x23
 8011588:	f88d 4024 	strb.w	r4, [sp, #36]	@ 0x24
 801158c:	6803      	ldr	r3, [r0, #0]
 801158e:	a901      	add	r1, sp, #4
 8011590:	685b      	ldr	r3, [r3, #4]
 8011592:	4798      	blx	r3
 8011594:	b00b      	add	sp, #44	@ 0x2c
 8011596:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
	...

0801159c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b>:
 801159c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80115a0:	b08a      	sub	sp, #40	@ 0x28
 80115a2:	4698      	mov	r8, r3
 80115a4:	f89d 505c 	ldrb.w	r5, [sp, #92]	@ 0x5c
 80115a8:	f89d c054 	ldrb.w	ip, [sp, #84]	@ 0x54
 80115ac:	f8bd 7058 	ldrh.w	r7, [sp, #88]	@ 0x58
 80115b0:	f89d 4060 	ldrb.w	r4, [sp, #96]	@ 0x60
 80115b4:	2300      	movs	r3, #0
 80115b6:	2d0b      	cmp	r5, #11
 80115b8:	4606      	mov	r6, r0
 80115ba:	9304      	str	r3, [sp, #16]
 80115bc:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 80115c0:	d138      	bne.n	8011634 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x98>
 80115c2:	2380      	movs	r3, #128	@ 0x80
 80115c4:	e9cd 3101 	strd	r3, r1, [sp, #4]
 80115c8:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 80115cc:	f8ad 3018 	strh.w	r3, [sp, #24]
 80115d0:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 80115d4:	f8ad 301a 	strh.w	r3, [sp, #26]
 80115d8:	f88d 0020 	strb.w	r0, [sp, #32]
 80115dc:	f8bd 304c 	ldrh.w	r3, [sp, #76]	@ 0x4c
 80115e0:	f8ad 301c 	strh.w	r3, [sp, #28]
 80115e4:	4630      	mov	r0, r6
 80115e6:	9203      	str	r2, [sp, #12]
 80115e8:	f7ff ff5c 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80115ec:	2c0b      	cmp	r4, #11
 80115ee:	bf98      	it	ls
 80115f0:	4b1b      	ldrls	r3, [pc, #108]	@ (8011660 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc4>)
 80115f2:	f8bd 2040 	ldrh.w	r2, [sp, #64]	@ 0x40
 80115f6:	bf98      	it	ls
 80115f8:	5d19      	ldrbls	r1, [r3, r4]
 80115fa:	f8ad 701e 	strh.w	r7, [sp, #30]
 80115fe:	bf88      	it	hi
 8011600:	2100      	movhi	r1, #0
 8011602:	fb02 8307 	mla	r3, r2, r7, r8
 8011606:	10c9      	asrs	r1, r1, #3
 8011608:	fb01 0003 	mla	r0, r1, r3, r0
 801160c:	f89d 3064 	ldrb.w	r3, [sp, #100]	@ 0x64
 8011610:	9005      	str	r0, [sp, #20]
 8011612:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 8011616:	6870      	ldr	r0, [r6, #4]
 8011618:	f88d 5021 	strb.w	r5, [sp, #33]	@ 0x21
 801161c:	2300      	movs	r3, #0
 801161e:	f88d 4022 	strb.w	r4, [sp, #34]	@ 0x22
 8011622:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 8011626:	6803      	ldr	r3, [r0, #0]
 8011628:	a901      	add	r1, sp, #4
 801162a:	685b      	ldr	r3, [r3, #4]
 801162c:	4798      	blx	r3
 801162e:	b00a      	add	sp, #40	@ 0x28
 8011630:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011634:	2d02      	cmp	r5, #2
 8011636:	d109      	bne.n	801164c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xb0>
 8011638:	28ff      	cmp	r0, #255	@ 0xff
 801163a:	d105      	bne.n	8011648 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xac>
 801163c:	f1bc 0f00 	cmp.w	ip, #0
 8011640:	bf14      	ite	ne
 8011642:	2340      	movne	r3, #64	@ 0x40
 8011644:	2320      	moveq	r3, #32
 8011646:	e7bd      	b.n	80115c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011648:	2340      	movs	r3, #64	@ 0x40
 801164a:	e7bb      	b.n	80115c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801164c:	28ff      	cmp	r0, #255	@ 0xff
 801164e:	d105      	bne.n	801165c <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0xc0>
 8011650:	f1bc 0f00 	cmp.w	ip, #0
 8011654:	bf14      	ite	ne
 8011656:	2304      	movne	r3, #4
 8011658:	2301      	moveq	r3, #1
 801165a:	e7b3      	b.n	80115c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 801165c:	2304      	movs	r3, #4
 801165e:	e7b1      	b.n	80115c4 <_ZN8touchgfx3HAL8blitCopyEPKtPKhttttthbtNS_6Bitmap12BitmapFormatES6_b+0x28>
 8011660:	08029124 	.word	0x08029124

08011664 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb>:
 8011664:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011668:	b08b      	sub	sp, #44	@ 0x2c
 801166a:	461d      	mov	r5, r3
 801166c:	f89d 9058 	ldrb.w	r9, [sp, #88]	@ 0x58
 8011670:	f89d 6060 	ldrb.w	r6, [sp, #96]	@ 0x60
 8011674:	f8bd a05c 	ldrh.w	sl, [sp, #92]	@ 0x5c
 8011678:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801167c:	bf14      	ite	ne
 801167e:	2308      	movne	r3, #8
 8011680:	2302      	moveq	r3, #2
 8011682:	2400      	movs	r4, #0
 8011684:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8011688:	4688      	mov	r8, r1
 801168a:	4693      	mov	fp, r2
 801168c:	9404      	str	r4, [sp, #16]
 801168e:	4607      	mov	r7, r0
 8011690:	f7ff ff08 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011694:	2e0b      	cmp	r6, #11
 8011696:	bf98      	it	ls
 8011698:	4b15      	ldrls	r3, [pc, #84]	@ (80116f0 <_ZN8touchgfx3HAL8blitFillENS_9colortypeEtttthtNS_6Bitmap12BitmapFormatEb+0x8c>)
 801169a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801169e:	bf98      	it	ls
 80116a0:	5d9c      	ldrbls	r4, [r3, r6]
 80116a2:	f8bd 3050 	ldrh.w	r3, [sp, #80]	@ 0x50
 80116a6:	f8ad 3018 	strh.w	r3, [sp, #24]
 80116aa:	fb05 b50a 	mla	r5, r5, sl, fp
 80116ae:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 80116b2:	f8ad 301a 	strh.w	r3, [sp, #26]
 80116b6:	10e4      	asrs	r4, r4, #3
 80116b8:	fb04 0405 	mla	r4, r4, r5, r0
 80116bc:	2300      	movs	r3, #0
 80116be:	6878      	ldr	r0, [r7, #4]
 80116c0:	9405      	str	r4, [sp, #20]
 80116c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 80116c6:	f8ad a01e 	strh.w	sl, [sp, #30]
 80116ca:	f8cd 8010 	str.w	r8, [sp, #16]
 80116ce:	f88d 9020 	strb.w	r9, [sp, #32]
 80116d2:	f88d 2023 	strb.w	r2, [sp, #35]	@ 0x23
 80116d6:	f88d 3024 	strb.w	r3, [sp, #36]	@ 0x24
 80116da:	f88d 6021 	strb.w	r6, [sp, #33]	@ 0x21
 80116de:	f88d 6022 	strb.w	r6, [sp, #34]	@ 0x22
 80116e2:	6803      	ldr	r3, [r0, #0]
 80116e4:	a901      	add	r1, sp, #4
 80116e6:	685b      	ldr	r3, [r3, #4]
 80116e8:	4798      	blx	r3
 80116ea:	b00b      	add	sp, #44	@ 0x2c
 80116ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80116f0:	08029124 	.word	0x08029124

080116f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>:
 80116f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80116f8:	461e      	mov	r6, r3
 80116fa:	4b0a      	ldr	r3, [pc, #40]	@ (8011724 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x30>)
 80116fc:	460f      	mov	r7, r1
 80116fe:	881d      	ldrh	r5, [r3, #0]
 8011700:	4690      	mov	r8, r2
 8011702:	f7f7 f855 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011706:	6803      	ldr	r3, [r0, #0]
 8011708:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801170a:	4798      	blx	r3
 801170c:	280b      	cmp	r0, #11
 801170e:	bf9a      	itte	ls
 8011710:	4b05      	ldrls	r3, [pc, #20]	@ (8011728 <_ZNK8touchgfx3HAL13getDstAddressEttPt+0x34>)
 8011712:	5c1c      	ldrbls	r4, [r3, r0]
 8011714:	2400      	movhi	r4, #0
 8011716:	fb08 7005 	mla	r0, r8, r5, r7
 801171a:	10e4      	asrs	r4, r4, #3
 801171c:	fb04 6000 	mla	r0, r4, r0, r6
 8011720:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011724:	20002f4e 	.word	0x20002f4e
 8011728:	08029124 	.word	0x08029124

0801172c <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb>:
 801172c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801172e:	b08b      	sub	sp, #44	@ 0x2c
 8011730:	461f      	mov	r7, r3
 8011732:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 8011736:	e9cd 3101 	strd	r3, r1, [sp, #4]
 801173a:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801173e:	f8ad 3018 	strh.w	r3, [sp, #24]
 8011742:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8011746:	f8ad 301a 	strh.w	r3, [sp, #26]
 801174a:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 801174e:	f8ad 301c 	strh.w	r3, [sp, #28]
 8011752:	2500      	movs	r5, #0
 8011754:	f89d 3050 	ldrb.w	r3, [sp, #80]	@ 0x50
 8011758:	f88d 3020 	strb.w	r3, [sp, #32]
 801175c:	4604      	mov	r4, r0
 801175e:	4616      	mov	r6, r2
 8011760:	9504      	str	r5, [sp, #16]
 8011762:	f7ff fe9f 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011766:	463a      	mov	r2, r7
 8011768:	4631      	mov	r1, r6
 801176a:	4603      	mov	r3, r0
 801176c:	4620      	mov	r0, r4
 801176e:	f7ff ffc1 	bl	80116f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011772:	4b0e      	ldr	r3, [pc, #56]	@ (80117ac <_ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsEb+0x80>)
 8011774:	9005      	str	r0, [sp, #20]
 8011776:	881b      	ldrh	r3, [r3, #0]
 8011778:	f8ad 301e 	strh.w	r3, [sp, #30]
 801177c:	f7f7 f818 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011780:	6803      	ldr	r3, [r0, #0]
 8011782:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011784:	4798      	blx	r3
 8011786:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8011788:	f88d 0022 	strb.w	r0, [sp, #34]	@ 0x22
 801178c:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8011790:	9304      	str	r3, [sp, #16]
 8011792:	6860      	ldr	r0, [r4, #4]
 8011794:	f89d 3058 	ldrb.w	r3, [sp, #88]	@ 0x58
 8011798:	f88d 3023 	strb.w	r3, [sp, #35]	@ 0x23
 801179c:	f88d 5024 	strb.w	r5, [sp, #36]	@ 0x24
 80117a0:	6803      	ldr	r3, [r0, #0]
 80117a2:	a901      	add	r1, sp, #4
 80117a4:	685b      	ldr	r3, [r3, #4]
 80117a6:	4798      	blx	r3
 80117a8:	b00b      	add	sp, #44	@ 0x2c
 80117aa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80117ac:	20002f4e 	.word	0x20002f4e

080117b0 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE>:
 80117b0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80117b2:	b08d      	sub	sp, #52	@ 0x34
 80117b4:	466b      	mov	r3, sp
 80117b6:	e883 0006 	stmia.w	r3, {r1, r2}
 80117ba:	2300      	movs	r3, #0
 80117bc:	9306      	str	r3, [sp, #24]
 80117be:	6803      	ldr	r3, [r0, #0]
 80117c0:	f8bd 6000 	ldrh.w	r6, [sp]
 80117c4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80117c6:	f8bd 7002 	ldrh.w	r7, [sp, #2]
 80117ca:	2501      	movs	r5, #1
 80117cc:	9503      	str	r5, [sp, #12]
 80117ce:	4604      	mov	r4, r0
 80117d0:	4798      	blx	r3
 80117d2:	463a      	mov	r2, r7
 80117d4:	4631      	mov	r1, r6
 80117d6:	4603      	mov	r3, r0
 80117d8:	4620      	mov	r0, r4
 80117da:	f7ff ff8b 	bl	80116f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80117de:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80117e0:	9307      	str	r3, [sp, #28]
 80117e2:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 80117e6:	f8ad 3020 	strh.w	r3, [sp, #32]
 80117ea:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 80117ee:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 80117f2:	4b0f      	ldr	r3, [pc, #60]	@ (8011830 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE+0x80>)
 80117f4:	9004      	str	r0, [sp, #16]
 80117f6:	881b      	ldrh	r3, [r3, #0]
 80117f8:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 80117fc:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011800:	f7f6 ffd6 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8011804:	6803      	ldr	r3, [r0, #0]
 8011806:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011808:	4798      	blx	r3
 801180a:	23ff      	movs	r3, #255	@ 0xff
 801180c:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011810:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 8011814:	6860      	ldr	r0, [r4, #4]
 8011816:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 801181a:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 801181e:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 8011822:	6803      	ldr	r3, [r0, #0]
 8011824:	a903      	add	r1, sp, #12
 8011826:	685b      	ldr	r3, [r3, #4]
 8011828:	4798      	blx	r3
 801182a:	6c60      	ldr	r0, [r4, #68]	@ 0x44
 801182c:	b00d      	add	sp, #52	@ 0x34
 801182e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011830:	20002f4e 	.word	0x20002f4e

08011834 <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm>:
 8011834:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011838:	b08c      	sub	sp, #48	@ 0x30
 801183a:	461e      	mov	r6, r3
 801183c:	466d      	mov	r5, sp
 801183e:	2300      	movs	r3, #0
 8011840:	e885 0006 	stmia.w	r5, {r1, r2}
 8011844:	9306      	str	r3, [sp, #24]
 8011846:	6803      	ldr	r3, [r0, #0]
 8011848:	f8bd 7000 	ldrh.w	r7, [sp]
 801184c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801184e:	f8bd 8002 	ldrh.w	r8, [sp, #2]
 8011852:	2501      	movs	r5, #1
 8011854:	9503      	str	r5, [sp, #12]
 8011856:	4604      	mov	r4, r0
 8011858:	4798      	blx	r3
 801185a:	4642      	mov	r2, r8
 801185c:	4639      	mov	r1, r7
 801185e:	4603      	mov	r3, r0
 8011860:	4620      	mov	r0, r4
 8011862:	f7ff ff47 	bl	80116f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 8011866:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 801186a:	f8ad 3020 	strh.w	r3, [sp, #32]
 801186e:	f8bd 3006 	ldrh.w	r3, [sp, #6]
 8011872:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8011876:	4b11      	ldr	r3, [pc, #68]	@ (80118bc <_ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectEPtm+0x88>)
 8011878:	9004      	str	r0, [sp, #16]
 801187a:	881b      	ldrh	r3, [r3, #0]
 801187c:	f8ad 3024 	strh.w	r3, [sp, #36]	@ 0x24
 8011880:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8011882:	f8ad 3026 	strh.w	r3, [sp, #38]	@ 0x26
 8011886:	9607      	str	r6, [sp, #28]
 8011888:	f7f6 ff92 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 801188c:	6803      	ldr	r3, [r0, #0]
 801188e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011890:	4798      	blx	r3
 8011892:	23ff      	movs	r3, #255	@ 0xff
 8011894:	f88d 0029 	strb.w	r0, [sp, #41]	@ 0x29
 8011898:	f88d 002a 	strb.w	r0, [sp, #42]	@ 0x2a
 801189c:	6860      	ldr	r0, [r4, #4]
 801189e:	f88d 3028 	strb.w	r3, [sp, #40]	@ 0x28
 80118a2:	f88d 502b 	strb.w	r5, [sp, #43]	@ 0x2b
 80118a6:	f88d 502c 	strb.w	r5, [sp, #44]	@ 0x2c
 80118aa:	6803      	ldr	r3, [r0, #0]
 80118ac:	a903      	add	r1, sp, #12
 80118ae:	685b      	ldr	r3, [r3, #4]
 80118b0:	4798      	blx	r3
 80118b2:	4630      	mov	r0, r6
 80118b4:	b00c      	add	sp, #48	@ 0x30
 80118b6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80118ba:	bf00      	nop
 80118bc:	20002f4e 	.word	0x20002f4e

080118c0 <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE>:
 80118c0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80118c2:	b085      	sub	sp, #20
 80118c4:	ac02      	add	r4, sp, #8
 80118c6:	e884 0006 	stmia.w	r4, {r1, r2}
 80118ca:	4605      	mov	r5, r0
 80118cc:	f8bd 6008 	ldrh.w	r6, [sp, #8]
 80118d0:	f8bd 700a 	ldrh.w	r7, [sp, #10]
 80118d4:	f7ff fde6 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 80118d8:	463a      	mov	r2, r7
 80118da:	4603      	mov	r3, r0
 80118dc:	4631      	mov	r1, r6
 80118de:	4628      	mov	r0, r5
 80118e0:	f7ff ff08 	bl	80116f4 <_ZNK8touchgfx3HAL13getDstAddressEttPt>
 80118e4:	4a05      	ldr	r2, [pc, #20]	@ (80118fc <_ZN8touchgfx3HAL25copyFromTFTToClientBufferENS_4RectE+0x3c>)
 80118e6:	682b      	ldr	r3, [r5, #0]
 80118e8:	8812      	ldrh	r2, [r2, #0]
 80118ea:	9200      	str	r2, [sp, #0]
 80118ec:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 80118ee:	e894 0006 	ldmia.w	r4, {r1, r2}
 80118f2:	4603      	mov	r3, r0
 80118f4:	4628      	mov	r0, r5
 80118f6:	47b0      	blx	r6
 80118f8:	b005      	add	sp, #20
 80118fa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80118fc:	20002f4e 	.word	0x20002f4e

08011900 <_ZN8touchgfx3HAL16swapFrameBuffersEv>:
 8011900:	b570      	push	{r4, r5, r6, lr}
 8011902:	f890 306e 	ldrb.w	r3, [r0, #110]	@ 0x6e
 8011906:	4604      	mov	r4, r0
 8011908:	b19b      	cbz	r3, 8011932 <_ZN8touchgfx3HAL16swapFrameBuffersEv+0x32>
 801190a:	2002      	movs	r0, #2
 801190c:	f7fd f852 	bl	800e9b4 <_ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE>
 8011910:	2300      	movs	r3, #0
 8011912:	f884 306e 	strb.w	r3, [r4, #110]	@ 0x6e
 8011916:	f884 306d 	strb.w	r3, [r4, #109]	@ 0x6d
 801191a:	6823      	ldr	r3, [r4, #0]
 801191c:	4620      	mov	r0, r4
 801191e:	f8d3 50b8 	ldr.w	r5, [r3, #184]	@ 0xb8
 8011922:	f7ff fdbf 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 8011926:	462b      	mov	r3, r5
 8011928:	4601      	mov	r1, r0
 801192a:	4620      	mov	r0, r4
 801192c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011930:	4718      	bx	r3
 8011932:	bd70      	pop	{r4, r5, r6, pc}

08011934 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>:
 8011934:	b538      	push	{r3, r4, r5, lr}
 8011936:	f890 307b 	ldrb.w	r3, [r0, #123]	@ 0x7b
 801193a:	428b      	cmp	r3, r1
 801193c:	4604      	mov	r4, r0
 801193e:	460d      	mov	r5, r1
 8011940:	d006      	beq.n	8011950 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1c>
 8011942:	6803      	ldr	r3, [r0, #0]
 8011944:	b929      	cbnz	r1, 8011952 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x1e>
 8011946:	f8d3 30c8 	ldr.w	r3, [r3, #200]	@ 0xc8
 801194a:	4798      	blx	r3
 801194c:	f884 507b 	strb.w	r5, [r4, #123]	@ 0x7b
 8011950:	bd38      	pop	{r3, r4, r5, pc}
 8011952:	f8d3 30cc 	ldr.w	r3, [r3, #204]	@ 0xcc
 8011956:	e7f8      	b.n	801194a <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE+0x16>

08011958 <_ZN8touchgfx3HAL15lockFrameBufferEv>:
 8011958:	b510      	push	{r4, lr}
 801195a:	4b0d      	ldr	r3, [pc, #52]	@ (8011990 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x38>)
 801195c:	781b      	ldrb	r3, [r3, #0]
 801195e:	4604      	mov	r4, r0
 8011960:	b95b      	cbnz	r3, 801197a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011962:	f890 3048 	ldrb.w	r3, [r0, #72]	@ 0x48
 8011966:	2b02      	cmp	r3, #2
 8011968:	d007      	beq.n	801197a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 801196a:	6840      	ldr	r0, [r0, #4]
 801196c:	f000 f90e 	bl	8011b8c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>
 8011970:	b118      	cbz	r0, 801197a <_ZN8touchgfx3HAL15lockFrameBufferEv+0x22>
 8011972:	6862      	ldr	r2, [r4, #4]
 8011974:	7a53      	ldrb	r3, [r2, #9]
 8011976:	2b00      	cmp	r3, #0
 8011978:	d0fc      	beq.n	8011974 <_ZN8touchgfx3HAL15lockFrameBufferEv+0x1c>
 801197a:	f7fd faa5 	bl	800eec8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 801197e:	4620      	mov	r0, r4
 8011980:	2100      	movs	r1, #0
 8011982:	f7ff ffd7 	bl	8011934 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011986:	4620      	mov	r0, r4
 8011988:	f7ff fd8c 	bl	80114a4 <_ZN8touchgfx3HAL20getClientFrameBufferEv>
 801198c:	bd10      	pop	{r4, pc}
 801198e:	bf00      	nop
 8011990:	20002f52 	.word	0x20002f52

08011994 <_ZN8touchgfx13DMA_Interface5flushEv>:
 8011994:	6803      	ldr	r3, [r0, #0]
 8011996:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8011998:	4718      	bx	r3

0801199a <_ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv>:
 801199a:	e9d0 2003 	ldrd	r2, r0, [r0, #12]
 801199e:	1a13      	subs	r3, r2, r0
 80119a0:	4258      	negs	r0, r3
 80119a2:	4158      	adcs	r0, r3
 80119a4:	4770      	bx	lr

080119a6 <_ZN8touchgfx17LockFreeDMA_Queue6isFullEv>:
 80119a6:	e9d0 2303 	ldrd	r2, r3, [r0, #12]
 80119aa:	1a9b      	subs	r3, r3, r2
 80119ac:	2b00      	cmp	r3, #0
 80119ae:	bfdc      	itt	le
 80119b0:	6882      	ldrle	r2, [r0, #8]
 80119b2:	189b      	addle	r3, r3, r2
 80119b4:	2b01      	cmp	r3, #1
 80119b6:	bfcc      	ite	gt
 80119b8:	2000      	movgt	r0, #0
 80119ba:	2001      	movle	r0, #1
 80119bc:	4770      	bx	lr

080119be <_ZN8touchgfx17LockFreeDMA_Queue5firstEv>:
 80119be:	6902      	ldr	r2, [r0, #16]
 80119c0:	6843      	ldr	r3, [r0, #4]
 80119c2:	2024      	movs	r0, #36	@ 0x24
 80119c4:	fb00 3002 	mla	r0, r0, r2, r3
 80119c8:	4770      	bx	lr

080119ca <_ZN8touchgfx13DMA_Interface13seedExecutionEv>:
 80119ca:	6803      	ldr	r3, [r0, #0]
 80119cc:	691b      	ldr	r3, [r3, #16]
 80119ce:	4718      	bx	r3

080119d0 <_ZN8touchgfx13DMA_Interface7executeEv>:
 80119d0:	b570      	push	{r4, r5, r6, lr}
 80119d2:	2301      	movs	r3, #1
 80119d4:	7203      	strb	r3, [r0, #8]
 80119d6:	4604      	mov	r4, r0
 80119d8:	6840      	ldr	r0, [r0, #4]
 80119da:	6803      	ldr	r3, [r0, #0]
 80119dc:	699b      	ldr	r3, [r3, #24]
 80119de:	4798      	blx	r3
 80119e0:	6803      	ldr	r3, [r0, #0]
 80119e2:	2b40      	cmp	r3, #64	@ 0x40
 80119e4:	4605      	mov	r5, r0
 80119e6:	d00c      	beq.n	8011a02 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80119e8:	d810      	bhi.n	8011a0c <_ZN8touchgfx13DMA_Interface7executeEv+0x3c>
 80119ea:	2b04      	cmp	r3, #4
 80119ec:	d01d      	beq.n	8011a2a <_ZN8touchgfx13DMA_Interface7executeEv+0x5a>
 80119ee:	d804      	bhi.n	80119fa <_ZN8touchgfx13DMA_Interface7executeEv+0x2a>
 80119f0:	2b01      	cmp	r3, #1
 80119f2:	d006      	beq.n	8011a02 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 80119f4:	2b02      	cmp	r3, #2
 80119f6:	d02c      	beq.n	8011a52 <_ZN8touchgfx13DMA_Interface7executeEv+0x82>
 80119f8:	bd70      	pop	{r4, r5, r6, pc}
 80119fa:	2b08      	cmp	r3, #8
 80119fc:	d01d      	beq.n	8011a3a <_ZN8touchgfx13DMA_Interface7executeEv+0x6a>
 80119fe:	2b20      	cmp	r3, #32
 8011a00:	d1fa      	bne.n	80119f8 <_ZN8touchgfx13DMA_Interface7executeEv+0x28>
 8011a02:	6823      	ldr	r3, [r4, #0]
 8011a04:	4620      	mov	r0, r4
 8011a06:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011a08:	4798      	blx	r3
 8011a0a:	e013      	b.n	8011a34 <_ZN8touchgfx13DMA_Interface7executeEv+0x64>
 8011a0c:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8011a10:	d0f7      	beq.n	8011a02 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a12:	d804      	bhi.n	8011a1e <_ZN8touchgfx13DMA_Interface7executeEv+0x4e>
 8011a14:	2b80      	cmp	r3, #128	@ 0x80
 8011a16:	d0f4      	beq.n	8011a02 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a18:	f5b3 7f80 	cmp.w	r3, #256	@ 0x100
 8011a1c:	e7f0      	b.n	8011a00 <_ZN8touchgfx13DMA_Interface7executeEv+0x30>
 8011a1e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 8011a22:	d0ee      	beq.n	8011a02 <_ZN8touchgfx13DMA_Interface7executeEv+0x32>
 8011a24:	f5b3 6f00 	cmp.w	r3, #2048	@ 0x800
 8011a28:	e7e5      	b.n	80119f6 <_ZN8touchgfx13DMA_Interface7executeEv+0x26>
 8011a2a:	6823      	ldr	r3, [r4, #0]
 8011a2c:	7f01      	ldrb	r1, [r0, #28]
 8011a2e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011a30:	4620      	mov	r0, r4
 8011a32:	4798      	blx	r3
 8011a34:	6823      	ldr	r3, [r4, #0]
 8011a36:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8011a38:	e006      	b.n	8011a48 <_ZN8touchgfx13DMA_Interface7executeEv+0x78>
 8011a3a:	6823      	ldr	r3, [r4, #0]
 8011a3c:	7f01      	ldrb	r1, [r0, #28]
 8011a3e:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011a40:	4620      	mov	r0, r4
 8011a42:	4798      	blx	r3
 8011a44:	6823      	ldr	r3, [r4, #0]
 8011a46:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8011a48:	4629      	mov	r1, r5
 8011a4a:	4620      	mov	r0, r4
 8011a4c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011a50:	4718      	bx	r3
 8011a52:	6823      	ldr	r3, [r4, #0]
 8011a54:	4620      	mov	r0, r4
 8011a56:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 8011a58:	4798      	blx	r3
 8011a5a:	e7f3      	b.n	8011a44 <_ZN8touchgfx13DMA_Interface7executeEv+0x74>

08011a5c <_ZN8touchgfx13DMA_Interface11enableAlphaEh>:
 8011a5c:	4770      	bx	lr

08011a5e <_ZN8touchgfx13DMA_Interface12disableAlphaEv>:
 8011a5e:	4770      	bx	lr

08011a60 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE>:
 8011a60:	e9d0 3203 	ldrd	r3, r2, [r0, #12]
 8011a64:	1ad2      	subs	r2, r2, r3
 8011a66:	2a00      	cmp	r2, #0
 8011a68:	b510      	push	{r4, lr}
 8011a6a:	bfdc      	itt	le
 8011a6c:	6884      	ldrle	r4, [r0, #8]
 8011a6e:	1912      	addle	r2, r2, r4
 8011a70:	2a01      	cmp	r2, #1
 8011a72:	dd16      	ble.n	8011aa2 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x42>
 8011a74:	6842      	ldr	r2, [r0, #4]
 8011a76:	2424      	movs	r4, #36	@ 0x24
 8011a78:	fb04 2303 	mla	r3, r4, r3, r2
 8011a7c:	f101 0220 	add.w	r2, r1, #32
 8011a80:	f851 4b04 	ldr.w	r4, [r1], #4
 8011a84:	f843 4b04 	str.w	r4, [r3], #4
 8011a88:	4291      	cmp	r1, r2
 8011a8a:	d1f9      	bne.n	8011a80 <_ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE+0x20>
 8011a8c:	780a      	ldrb	r2, [r1, #0]
 8011a8e:	701a      	strb	r2, [r3, #0]
 8011a90:	68c3      	ldr	r3, [r0, #12]
 8011a92:	6882      	ldr	r2, [r0, #8]
 8011a94:	f3bf 8f5b 	dmb	ish
 8011a98:	3301      	adds	r3, #1
 8011a9a:	429a      	cmp	r2, r3
 8011a9c:	bfd8      	it	le
 8011a9e:	1a9b      	suble	r3, r3, r2
 8011aa0:	60c3      	str	r3, [r0, #12]
 8011aa2:	bd10      	pop	{r4, pc}

08011aa4 <_ZN8touchgfx17LockFreeDMA_Queue3popEv>:
 8011aa4:	6903      	ldr	r3, [r0, #16]
 8011aa6:	6882      	ldr	r2, [r0, #8]
 8011aa8:	f3bf 8f5b 	dmb	ish
 8011aac:	3301      	adds	r3, #1
 8011aae:	429a      	cmp	r2, r3
 8011ab0:	bfd8      	it	le
 8011ab2:	1a9b      	suble	r3, r3, r2
 8011ab4:	6103      	str	r3, [r0, #16]
 8011ab6:	4770      	bx	lr

08011ab8 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE>:
 8011ab8:	b570      	push	{r4, r5, r6, lr}
 8011aba:	4604      	mov	r4, r0
 8011abc:	460e      	mov	r6, r1
 8011abe:	6860      	ldr	r0, [r4, #4]
 8011ac0:	6803      	ldr	r3, [r0, #0]
 8011ac2:	685b      	ldr	r3, [r3, #4]
 8011ac4:	4798      	blx	r3
 8011ac6:	2800      	cmp	r0, #0
 8011ac8:	d1f9      	bne.n	8011abe <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x6>
 8011aca:	4d0d      	ldr	r5, [pc, #52]	@ (8011b00 <_ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE+0x48>)
 8011acc:	6828      	ldr	r0, [r5, #0]
 8011ace:	6803      	ldr	r3, [r0, #0]
 8011ad0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011ad2:	4798      	blx	r3
 8011ad4:	f7fd fa1a 	bl	800ef0c <_ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv>
 8011ad8:	6828      	ldr	r0, [r5, #0]
 8011ada:	2101      	movs	r1, #1
 8011adc:	f7ff ff2a 	bl	8011934 <_ZN8touchgfx3HAL18setRenderingMethodENS0_15RenderingMethodE>
 8011ae0:	6860      	ldr	r0, [r4, #4]
 8011ae2:	6803      	ldr	r3, [r0, #0]
 8011ae4:	4631      	mov	r1, r6
 8011ae6:	689b      	ldr	r3, [r3, #8]
 8011ae8:	4798      	blx	r3
 8011aea:	6823      	ldr	r3, [r4, #0]
 8011aec:	4620      	mov	r0, r4
 8011aee:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8011af0:	4798      	blx	r3
 8011af2:	6828      	ldr	r0, [r5, #0]
 8011af4:	6803      	ldr	r3, [r0, #0]
 8011af6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011afa:	6f9b      	ldr	r3, [r3, #120]	@ 0x78
 8011afc:	4718      	bx	r3
 8011afe:	bf00      	nop
 8011b00:	20002f54 	.word	0x20002f54

08011b04 <_ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv>:
 8011b04:	b508      	push	{r3, lr}
 8011b06:	f7fd f9df 	bl	800eec8 <_ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv>
 8011b0a:	e8bd 4008 	ldmia.w	sp!, {r3, lr}
 8011b0e:	f7fd b9f1 	b.w	800eef4 <_ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv>

08011b12 <_ZN8touchgfx13DMA_Interface5startEv>:
 8011b12:	b510      	push	{r4, lr}
 8011b14:	4604      	mov	r4, r0
 8011b16:	6840      	ldr	r0, [r0, #4]
 8011b18:	6803      	ldr	r3, [r0, #0]
 8011b1a:	681b      	ldr	r3, [r3, #0]
 8011b1c:	4798      	blx	r3
 8011b1e:	b948      	cbnz	r0, 8011b34 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b20:	7a63      	ldrb	r3, [r4, #9]
 8011b22:	b13b      	cbz	r3, 8011b34 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b24:	7a23      	ldrb	r3, [r4, #8]
 8011b26:	b92b      	cbnz	r3, 8011b34 <_ZN8touchgfx13DMA_Interface5startEv+0x22>
 8011b28:	6823      	ldr	r3, [r4, #0]
 8011b2a:	4620      	mov	r0, r4
 8011b2c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011b2e:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011b32:	4718      	bx	r3
 8011b34:	bd10      	pop	{r4, pc}

08011b36 <_ZN8touchgfx13DMA_Interface16executeCompletedEv>:
 8011b36:	b570      	push	{r4, r5, r6, lr}
 8011b38:	4604      	mov	r4, r0
 8011b3a:	6840      	ldr	r0, [r0, #4]
 8011b3c:	6803      	ldr	r3, [r0, #0]
 8011b3e:	681b      	ldr	r3, [r3, #0]
 8011b40:	4798      	blx	r3
 8011b42:	4605      	mov	r5, r0
 8011b44:	b930      	cbnz	r0, 8011b54 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011b46:	7a23      	ldrb	r3, [r4, #8]
 8011b48:	b123      	cbz	r3, 8011b54 <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x1e>
 8011b4a:	6860      	ldr	r0, [r4, #4]
 8011b4c:	6803      	ldr	r3, [r0, #0]
 8011b4e:	695b      	ldr	r3, [r3, #20]
 8011b50:	4798      	blx	r3
 8011b52:	7225      	strb	r5, [r4, #8]
 8011b54:	6860      	ldr	r0, [r4, #4]
 8011b56:	6803      	ldr	r3, [r0, #0]
 8011b58:	681b      	ldr	r3, [r3, #0]
 8011b5a:	4798      	blx	r3
 8011b5c:	b928      	cbnz	r0, 8011b6a <_ZN8touchgfx13DMA_Interface16executeCompletedEv+0x34>
 8011b5e:	6823      	ldr	r3, [r4, #0]
 8011b60:	4620      	mov	r0, r4
 8011b62:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8011b64:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b68:	4718      	bx	r3
 8011b6a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011b6e:	f7fd b9d9 	b.w	800ef24 <_ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv>
	...

08011b74 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi>:
 8011b74:	b510      	push	{r4, lr}
 8011b76:	4c04      	ldr	r4, [pc, #16]	@ (8011b88 <_ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEi+0x14>)
 8011b78:	6082      	str	r2, [r0, #8]
 8011b7a:	2200      	movs	r2, #0
 8011b7c:	e9c0 4100 	strd	r4, r1, [r0]
 8011b80:	e9c0 2203 	strd	r2, r2, [r0, #12]
 8011b84:	bd10      	pop	{r4, pc}
 8011b86:	bf00      	nop
 8011b88:	08029260 	.word	0x08029260

08011b8c <_ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv>:
 8011b8c:	6840      	ldr	r0, [r0, #4]
 8011b8e:	6803      	ldr	r3, [r0, #0]
 8011b90:	681b      	ldr	r3, [r3, #0]
 8011b92:	4718      	bx	r3

08011b94 <_ZNK8touchgfx14AbstractButton15getPressedStateEv>:
 8011b94:	f890 002c 	ldrb.w	r0, [r0, #44]	@ 0x2c
 8011b98:	4770      	bx	lr

08011b9a <_ZN8touchgfx14AbstractButton13executeActionEv>:
 8011b9a:	b510      	push	{r4, lr}
 8011b9c:	4604      	mov	r4, r0
 8011b9e:	6a80      	ldr	r0, [r0, #40]	@ 0x28
 8011ba0:	b150      	cbz	r0, 8011bb8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011ba2:	6803      	ldr	r3, [r0, #0]
 8011ba4:	68db      	ldr	r3, [r3, #12]
 8011ba6:	4798      	blx	r3
 8011ba8:	b130      	cbz	r0, 8011bb8 <_ZN8touchgfx14AbstractButton13executeActionEv+0x1e>
 8011baa:	6aa0      	ldr	r0, [r4, #40]	@ 0x28
 8011bac:	6803      	ldr	r3, [r0, #0]
 8011bae:	4621      	mov	r1, r4
 8011bb0:	689b      	ldr	r3, [r3, #8]
 8011bb2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8011bb6:	4718      	bx	r3
 8011bb8:	bd10      	pop	{r4, pc}

08011bba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>:
 8011bba:	b570      	push	{r4, r5, r6, lr}
 8011bbc:	790b      	ldrb	r3, [r1, #4]
 8011bbe:	f890 502c 	ldrb.w	r5, [r0, #44]	@ 0x2c
 8011bc2:	2b00      	cmp	r3, #0
 8011bc4:	bf0c      	ite	eq
 8011bc6:	2301      	moveq	r3, #1
 8011bc8:	2300      	movne	r3, #0
 8011bca:	4604      	mov	r4, r0
 8011bcc:	460e      	mov	r6, r1
 8011bce:	f880 302c 	strb.w	r3, [r0, #44]	@ 0x2c
 8011bd2:	d109      	bne.n	8011be8 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x2e>
 8011bd4:	b14d      	cbz	r5, 8011bea <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x30>
 8011bd6:	7933      	ldrb	r3, [r6, #4]
 8011bd8:	2b01      	cmp	r3, #1
 8011bda:	d10c      	bne.n	8011bf6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011bdc:	6823      	ldr	r3, [r4, #0]
 8011bde:	4620      	mov	r0, r4
 8011be0:	6e1b      	ldr	r3, [r3, #96]	@ 0x60
 8011be2:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8011be6:	4718      	bx	r3
 8011be8:	b12d      	cbz	r5, 8011bf6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x3c>
 8011bea:	6823      	ldr	r3, [r4, #0]
 8011bec:	4620      	mov	r0, r4
 8011bee:	695b      	ldr	r3, [r3, #20]
 8011bf0:	4798      	blx	r3
 8011bf2:	2d00      	cmp	r5, #0
 8011bf4:	d1ef      	bne.n	8011bd6 <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE+0x1c>
 8011bf6:	bd70      	pop	{r4, r5, r6, pc}

08011bf8 <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE>:
 8011bf8:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8011bfc:	b133      	cbz	r3, 8011c0c <_ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE+0x14>
 8011bfe:	790b      	ldrb	r3, [r1, #4]
 8011c00:	2b01      	cmp	r3, #1
 8011c02:	bf01      	itttt	eq
 8011c04:	8dc3      	ldrheq	r3, [r0, #46]	@ 0x2e
 8011c06:	8e02      	ldrheq	r2, [r0, #48]	@ 0x30
 8011c08:	85c2      	strheq	r2, [r0, #46]	@ 0x2e
 8011c0a:	8603      	strheq	r3, [r0, #48]	@ 0x30
 8011c0c:	f7ff bfd5 	b.w	8011bba <_ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE>

08011c10 <_ZNK8touchgfx6Button17invalidateContentEv>:
 8011c10:	f890 2032 	ldrb.w	r2, [r0, #50]	@ 0x32
 8011c14:	b12a      	cbz	r2, 8011c22 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011c16:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 8011c1a:	b112      	cbz	r2, 8011c22 <_ZNK8touchgfx6Button17invalidateContentEv+0x12>
 8011c1c:	6803      	ldr	r3, [r0, #0]
 8011c1e:	695b      	ldr	r3, [r3, #20]
 8011c20:	4718      	bx	r3
 8011c22:	4770      	bx	lr

08011c24 <_ZN8touchgfx12ToggleButton10forceStateEb>:
 8011c24:	8e83      	ldrh	r3, [r0, #52]	@ 0x34
 8011c26:	b129      	cbz	r1, 8011c34 <_ZN8touchgfx12ToggleButton10forceStateEb+0x10>
 8011c28:	8dc2      	ldrh	r2, [r0, #46]	@ 0x2e
 8011c2a:	429a      	cmp	r2, r3
 8011c2c:	d007      	beq.n	8011c3e <_ZN8touchgfx12ToggleButton10forceStateEb+0x1a>
 8011c2e:	8602      	strh	r2, [r0, #48]	@ 0x30
 8011c30:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 8011c32:	4770      	bx	lr
 8011c34:	8e02      	ldrh	r2, [r0, #48]	@ 0x30
 8011c36:	429a      	cmp	r2, r3
 8011c38:	bf1c      	itt	ne
 8011c3a:	85c2      	strhne	r2, [r0, #46]	@ 0x2e
 8011c3c:	8603      	strhne	r3, [r0, #48]	@ 0x30
 8011c3e:	4770      	bx	lr

08011c40 <_ZNK8touchgfx8TextArea12getWildcard1Ev>:
 8011c40:	2000      	movs	r0, #0
 8011c42:	4770      	bx	lr

08011c44 <_ZNK8touchgfx8TextArea12getAlignmentEv>:
 8011c44:	4b07      	ldr	r3, [pc, #28]	@ (8011c64 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x20>)
 8011c46:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8011c48:	881b      	ldrh	r3, [r3, #0]
 8011c4a:	4293      	cmp	r3, r2
 8011c4c:	bf81      	itttt	hi
 8011c4e:	4b06      	ldrhi	r3, [pc, #24]	@ (8011c68 <_ZNK8touchgfx8TextArea12getAlignmentEv+0x24>)
 8011c50:	681b      	ldrhi	r3, [r3, #0]
 8011c52:	eb03 0342 	addhi.w	r3, r3, r2, lsl #1
 8011c56:	7858      	ldrbhi	r0, [r3, #1]
 8011c58:	bf8c      	ite	hi
 8011c5a:	f000 0003 	andhi.w	r0, r0, #3
 8011c5e:	2000      	movls	r0, #0
 8011c60:	4770      	bx	lr
 8011c62:	bf00      	nop
 8011c64:	20002fa8 	.word	0x20002fa8
 8011c68:	20002fa4 	.word	0x20002fa4

08011c6c <_ZNK8touchgfx8TextArea13getTextHeightEv>:
 8011c6c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8011c70:	4b10      	ldr	r3, [pc, #64]	@ (8011cb4 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x48>)
 8011c72:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011c74:	881b      	ldrh	r3, [r3, #0]
 8011c76:	428b      	cmp	r3, r1
 8011c78:	4604      	mov	r4, r0
 8011c7a:	d918      	bls.n	8011cae <_ZNK8touchgfx8TextArea13getTextHeightEv+0x42>
 8011c7c:	6803      	ldr	r3, [r0, #0]
 8011c7e:	6f9d      	ldr	r5, [r3, #120]	@ 0x78
 8011c80:	4b0d      	ldr	r3, [pc, #52]	@ (8011cb8 <_ZNK8touchgfx8TextArea13getTextHeightEv+0x4c>)
 8011c82:	6818      	ldr	r0, [r3, #0]
 8011c84:	f7fb ff28 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 8011c88:	6823      	ldr	r3, [r4, #0]
 8011c8a:	4606      	mov	r6, r0
 8011c8c:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011c8e:	4620      	mov	r0, r4
 8011c90:	4798      	blx	r3
 8011c92:	6823      	ldr	r3, [r4, #0]
 8011c94:	4607      	mov	r7, r0
 8011c96:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011c9a:	4620      	mov	r0, r4
 8011c9c:	4798      	blx	r3
 8011c9e:	463a      	mov	r2, r7
 8011ca0:	4603      	mov	r3, r0
 8011ca2:	4631      	mov	r1, r6
 8011ca4:	4620      	mov	r0, r4
 8011ca6:	46ac      	mov	ip, r5
 8011ca8:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8011cac:	4760      	bx	ip
 8011cae:	2000      	movs	r0, #0
 8011cb0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8011cb4:	20002fa8 	.word	0x20002fa8
 8011cb8:	20002fb0 	.word	0x20002fb0

08011cbc <_ZNK8touchgfx8TextArea12getTextWidthEv>:
 8011cbc:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011cc0:	4b17      	ldr	r3, [pc, #92]	@ (8011d20 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x64>)
 8011cc2:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 8011cc4:	881b      	ldrh	r3, [r3, #0]
 8011cc6:	428b      	cmp	r3, r1
 8011cc8:	4604      	mov	r4, r0
 8011cca:	d926      	bls.n	8011d1a <_ZNK8touchgfx8TextArea12getTextWidthEv+0x5e>
 8011ccc:	4b15      	ldr	r3, [pc, #84]	@ (8011d24 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x68>)
 8011cce:	681b      	ldr	r3, [r3, #0]
 8011cd0:	eb03 0241 	add.w	r2, r3, r1, lsl #1
 8011cd4:	f813 0011 	ldrb.w	r0, [r3, r1, lsl #1]
 8011cd8:	4b13      	ldr	r3, [pc, #76]	@ (8011d28 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x6c>)
 8011cda:	7855      	ldrb	r5, [r2, #1]
 8011cdc:	681b      	ldr	r3, [r3, #0]
 8011cde:	f853 6020 	ldr.w	r6, [r3, r0, lsl #2]
 8011ce2:	6833      	ldr	r3, [r6, #0]
 8011ce4:	69df      	ldr	r7, [r3, #28]
 8011ce6:	4b11      	ldr	r3, [pc, #68]	@ (8011d2c <_ZNK8touchgfx8TextArea12getTextWidthEv+0x70>)
 8011ce8:	6818      	ldr	r0, [r3, #0]
 8011cea:	f7fb fef5 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 8011cee:	6823      	ldr	r3, [r4, #0]
 8011cf0:	4680      	mov	r8, r0
 8011cf2:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011cf4:	4620      	mov	r0, r4
 8011cf6:	4798      	blx	r3
 8011cf8:	6823      	ldr	r3, [r4, #0]
 8011cfa:	4681      	mov	r9, r0
 8011cfc:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011d00:	4620      	mov	r0, r4
 8011d02:	4798      	blx	r3
 8011d04:	f3c5 0581 	ubfx	r5, r5, #2, #2
 8011d08:	9000      	str	r0, [sp, #0]
 8011d0a:	464b      	mov	r3, r9
 8011d0c:	4642      	mov	r2, r8
 8011d0e:	4629      	mov	r1, r5
 8011d10:	4630      	mov	r0, r6
 8011d12:	47b8      	blx	r7
 8011d14:	b003      	add	sp, #12
 8011d16:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8011d1a:	2000      	movs	r0, #0
 8011d1c:	e7fa      	b.n	8011d14 <_ZNK8touchgfx8TextArea12getTextWidthEv+0x58>
 8011d1e:	bf00      	nop
 8011d20:	20002fa8 	.word	0x20002fa8
 8011d24:	20002fa4 	.word	0x20002fa4
 8011d28:	20002fac 	.word	0x20002fac
 8011d2c:	20002fb0 	.word	0x20002fb0

08011d30 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz>:
 8011d30:	b40e      	push	{r1, r2, r3}
 8011d32:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d36:	4b2f      	ldr	r3, [pc, #188]	@ (8011df4 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc4>)
 8011d38:	881a      	ldrh	r2, [r3, #0]
 8011d3a:	8d83      	ldrh	r3, [r0, #44]	@ 0x2c
 8011d3c:	429a      	cmp	r2, r3
 8011d3e:	b09d      	sub	sp, #116	@ 0x74
 8011d40:	4604      	mov	r4, r0
 8011d42:	d954      	bls.n	8011dee <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xbe>
 8011d44:	f8df 90b0 	ldr.w	r9, [pc, #176]	@ 8011df8 <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xc8>
 8011d48:	f8df 80b0 	ldr.w	r8, [pc, #176]	@ 8011dfc <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xcc>
 8011d4c:	aa26      	add	r2, sp, #152	@ 0x98
 8011d4e:	9202      	str	r2, [sp, #8]
 8011d50:	f8d9 2000 	ldr.w	r2, [r9]
 8011d54:	f812 2013 	ldrb.w	r2, [r2, r3, lsl #1]
 8011d58:	f8d8 3000 	ldr.w	r3, [r8]
 8011d5c:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011d60:	682b      	ldr	r3, [r5, #0]
 8011d62:	4628      	mov	r0, r5
 8011d64:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011d66:	4798      	blx	r3
 8011d68:	b207      	sxth	r7, r0
 8011d6a:	4606      	mov	r6, r0
 8011d6c:	a803      	add	r0, sp, #12
 8011d6e:	f003 ff2f 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 8011d72:	682b      	ldr	r3, [r5, #0]
 8011d74:	4628      	mov	r0, r5
 8011d76:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011d78:	4798      	blx	r3
 8011d7a:	682b      	ldr	r3, [r5, #0]
 8011d7c:	4682      	mov	sl, r0
 8011d7e:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011d80:	4628      	mov	r0, r5
 8011d82:	4798      	blx	r3
 8011d84:	4653      	mov	r3, sl
 8011d86:	9000      	str	r0, [sp, #0]
 8011d88:	9a02      	ldr	r2, [sp, #8]
 8011d8a:	9925      	ldr	r1, [sp, #148]	@ 0x94
 8011d8c:	a803      	add	r0, sp, #12
 8011d8e:	f003 ff7a 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8011d92:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011d94:	f8d9 3000 	ldr.w	r3, [r9]
 8011d98:	f894 c037 	ldrb.w	ip, [r4, #55]	@ 0x37
 8011d9c:	8925      	ldrh	r5, [r4, #8]
 8011d9e:	f813 0012 	ldrb.w	r0, [r3, r2, lsl #1]
 8011da2:	eb03 0142 	add.w	r1, r3, r2, lsl #1
 8011da6:	eba5 050c 	sub.w	r5, r5, ip
 8011daa:	784a      	ldrb	r2, [r1, #1]
 8011dac:	f8d8 3000 	ldr.w	r3, [r8]
 8011db0:	f894 1039 	ldrb.w	r1, [r4, #57]	@ 0x39
 8011db4:	b22d      	sxth	r5, r5
 8011db6:	9500      	str	r5, [sp, #0]
 8011db8:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8011dbc:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8011dc0:	a803      	add	r0, sp, #12
 8011dc2:	f001 fdb5 	bl	8013930 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>
 8011dc6:	f9b4 2034 	ldrsh.w	r2, [r4, #52]	@ 0x34
 8011dca:	18b9      	adds	r1, r7, r2
 8011dcc:	2900      	cmp	r1, #0
 8011dce:	b203      	sxth	r3, r0
 8011dd0:	dd0b      	ble.n	8011dea <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xba>
 8011dd2:	3b01      	subs	r3, #1
 8011dd4:	fb13 f302 	smulbb	r3, r3, r2
 8011dd8:	fb16 3300 	smlabb	r3, r6, r0, r3
 8011ddc:	b21f      	sxth	r7, r3
 8011dde:	4638      	mov	r0, r7
 8011de0:	b01d      	add	sp, #116	@ 0x74
 8011de2:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011de6:	b003      	add	sp, #12
 8011de8:	4770      	bx	lr
 8011dea:	2b00      	cmp	r3, #0
 8011dec:	dcf7      	bgt.n	8011dde <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011dee:	2700      	movs	r7, #0
 8011df0:	e7f5      	b.n	8011dde <_ZNK8touchgfx8TextArea19calculateTextHeightEPKtz+0xae>
 8011df2:	bf00      	nop
 8011df4:	20002fa8 	.word	0x20002fa8
 8011df8:	20002fa4 	.word	0x20002fa4
 8011dfc:	20002fac 	.word	0x20002fac

08011e00 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv>:
 8011e00:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011e04:	4bbc      	ldr	r3, [pc, #752]	@ (80120f8 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2f8>)
 8011e06:	460c      	mov	r4, r1
 8011e08:	881b      	ldrh	r3, [r3, #0]
 8011e0a:	8d89      	ldrh	r1, [r1, #44]	@ 0x2c
 8011e0c:	428b      	cmp	r3, r1
 8011e0e:	b0a9      	sub	sp, #164	@ 0xa4
 8011e10:	4680      	mov	r8, r0
 8011e12:	d809      	bhi.n	8011e28 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x28>
 8011e14:	2300      	movs	r3, #0
 8011e16:	f04f 32ff 	mov.w	r2, #4294967295
 8011e1a:	e9c0 3200 	strd	r3, r2, [r0]
 8011e1e:	6083      	str	r3, [r0, #8]
 8011e20:	4640      	mov	r0, r8
 8011e22:	b029      	add	sp, #164	@ 0xa4
 8011e24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011e28:	4eb4      	ldr	r6, [pc, #720]	@ (80120fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>)
 8011e2a:	6833      	ldr	r3, [r6, #0]
 8011e2c:	f813 2011 	ldrb.w	r2, [r3, r1, lsl #1]
 8011e30:	4bb3      	ldr	r3, [pc, #716]	@ (8012100 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x300>)
 8011e32:	681b      	ldr	r3, [r3, #0]
 8011e34:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 8011e38:	4bb2      	ldr	r3, [pc, #712]	@ (8012104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011e3a:	6818      	ldr	r0, [r3, #0]
 8011e3c:	f7fb fe4c 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 8011e40:	682b      	ldr	r3, [r5, #0]
 8011e42:	4681      	mov	r9, r0
 8011e44:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8011e46:	4628      	mov	r0, r5
 8011e48:	4798      	blx	r3
 8011e4a:	8ea7      	ldrh	r7, [r4, #52]	@ 0x34
 8011e4c:	b203      	sxth	r3, r0
 8011e4e:	4407      	add	r7, r0
 8011e50:	9304      	str	r3, [sp, #16]
 8011e52:	b2bb      	uxth	r3, r7
 8011e54:	9303      	str	r3, [sp, #12]
 8011e56:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 8011e5a:	4682      	mov	sl, r0
 8011e5c:	a80f      	add	r0, sp, #60	@ 0x3c
 8011e5e:	2b00      	cmp	r3, #0
 8011e60:	f040 80a6 	bne.w	8011fb0 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x1b0>
 8011e64:	f003 feb4 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 8011e68:	682b      	ldr	r3, [r5, #0]
 8011e6a:	4628      	mov	r0, r5
 8011e6c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011e6e:	4798      	blx	r3
 8011e70:	682b      	ldr	r3, [r5, #0]
 8011e72:	4606      	mov	r6, r0
 8011e74:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011e76:	4628      	mov	r0, r5
 8011e78:	4798      	blx	r3
 8011e7a:	6823      	ldr	r3, [r4, #0]
 8011e7c:	4607      	mov	r7, r0
 8011e7e:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011e80:	4620      	mov	r0, r4
 8011e82:	4798      	blx	r3
 8011e84:	6823      	ldr	r3, [r4, #0]
 8011e86:	4683      	mov	fp, r0
 8011e88:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 8011e8c:	4620      	mov	r0, r4
 8011e8e:	4798      	blx	r3
 8011e90:	463b      	mov	r3, r7
 8011e92:	e9cd b000 	strd	fp, r0, [sp]
 8011e96:	4649      	mov	r1, r9
 8011e98:	4632      	mov	r2, r6
 8011e9a:	a80f      	add	r0, sp, #60	@ 0x3c
 8011e9c:	f003 ff08 	bl	8015cb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011ea0:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011ea4:	f8df b254 	ldr.w	fp, [pc, #596]	@ 80120fc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2fc>
 8011ea8:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011eac:	f04f 0600 	mov.w	r6, #0
 8011eb0:	bf0c      	ite	eq
 8011eb2:	f9b4 900a 	ldrsheq.w	r9, [r4, #10]
 8011eb6:	f9b4 9008 	ldrshne.w	r9, [r4, #8]
 8011eba:	4637      	mov	r7, r6
 8011ebc:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 8011ebe:	f8db 3000 	ldr.w	r3, [fp]
 8011ec2:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8011ec6:	4629      	mov	r1, r5
 8011ec8:	785b      	ldrb	r3, [r3, #1]
 8011eca:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8011ece:	f3c3 0381 	ubfx	r3, r3, #2, #2
 8011ed2:	a80f      	add	r0, sp, #60	@ 0x3c
 8011ed4:	f001 fa33 	bl	801333e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8011ed8:	9b03      	ldr	r3, [sp, #12]
 8011eda:	4286      	cmp	r6, r0
 8011edc:	bfb8      	it	lt
 8011ede:	4606      	movlt	r6, r0
 8011ee0:	3701      	adds	r7, #1
 8011ee2:	eba9 0903 	sub.w	r9, r9, r3
 8011ee6:	a80f      	add	r0, sp, #60	@ 0x3c
 8011ee8:	b236      	sxth	r6, r6
 8011eea:	b2bf      	uxth	r7, r7
 8011eec:	fa0f f989 	sxth.w	r9, r9
 8011ef0:	f003 fe95 	bl	8015c1e <_ZN8touchgfx12TextProvider11endOfStringEv>
 8011ef4:	b918      	cbnz	r0, 8011efe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 8011ef6:	7a2b      	ldrb	r3, [r5, #8]
 8011ef8:	444b      	add	r3, r9
 8011efa:	2b00      	cmp	r3, #0
 8011efc:	dcde      	bgt.n	8011ebc <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xbc>
 8011efe:	9b03      	ldr	r3, [sp, #12]
 8011f00:	9a04      	ldr	r2, [sp, #16]
 8011f02:	f895 9009 	ldrb.w	r9, [r5, #9]
 8011f06:	fb13 f707 	smulbb	r7, r3, r7
 8011f0a:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8011f0c:	1aff      	subs	r7, r7, r3
 8011f0e:	b2bf      	uxth	r7, r7
 8011f10:	b23b      	sxth	r3, r7
 8011f12:	429a      	cmp	r2, r3
 8011f14:	bfa8      	it	ge
 8011f16:	4657      	movge	r7, sl
 8011f18:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011f1c:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8011f20:	6823      	ldr	r3, [r4, #0]
 8011f22:	bf08      	it	eq
 8011f24:	f9b4 a008 	ldrsheq.w	sl, [r4, #8]
 8011f28:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8011f2a:	bf18      	it	ne
 8011f2c:	f9b4 a00a 	ldrshne.w	sl, [r4, #10]
 8011f30:	4620      	mov	r0, r4
 8011f32:	4798      	blx	r3
 8011f34:	444f      	add	r7, r9
 8011f36:	fa1f f987 	uxth.w	r9, r7
 8011f3a:	2801      	cmp	r0, #1
 8011f3c:	fa0f f789 	sxth.w	r7, r9
 8011f40:	b2b3      	uxth	r3, r6
 8011f42:	f000 80e1 	beq.w	8012108 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x308>
 8011f46:	2802      	cmp	r0, #2
 8011f48:	f894 6037 	ldrb.w	r6, [r4, #55]	@ 0x37
 8011f4c:	f000 80e2 	beq.w	8012114 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x314>
 8011f50:	7aea      	ldrb	r2, [r5, #11]
 8011f52:	7b2d      	ldrb	r5, [r5, #12]
 8011f54:	b236      	sxth	r6, r6
 8011f56:	1ab6      	subs	r6, r6, r2
 8011f58:	442a      	add	r2, r5
 8011f5a:	4413      	add	r3, r2
 8011f5c:	f894 2038 	ldrb.w	r2, [r4, #56]	@ 0x38
 8011f60:	fa1f fa86 	uxth.w	sl, r6
 8011f64:	b29b      	uxth	r3, r3
 8011f66:	2a02      	cmp	r2, #2
 8011f68:	fa0f fb8a 	sxth.w	fp, sl
 8011f6c:	b21e      	sxth	r6, r3
 8011f6e:	f000 80d5 	beq.w	801211c <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x31c>
 8011f72:	2a03      	cmp	r2, #3
 8011f74:	f000 80dd 	beq.w	8012132 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x332>
 8011f78:	2a01      	cmp	r2, #1
 8011f7a:	f040 80e5 	bne.w	8012148 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x348>
 8011f7e:	8925      	ldrh	r5, [r4, #8]
 8011f80:	4633      	mov	r3, r6
 8011f82:	eba5 0909 	sub.w	r9, r5, r9
 8011f86:	463e      	mov	r6, r7
 8011f88:	465d      	mov	r5, fp
 8011f8a:	461f      	mov	r7, r3
 8011f8c:	fa0f fb89 	sxth.w	fp, r9
 8011f90:	4b5c      	ldr	r3, [pc, #368]	@ (8012104 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x304>)
 8011f92:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011f94:	6818      	ldr	r0, [r3, #0]
 8011f96:	f7fb fd9f 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 8011f9a:	f8a8 b000 	strh.w	fp, [r8]
 8011f9e:	f8a8 5002 	strh.w	r5, [r8, #2]
 8011fa2:	f8a8 6004 	strh.w	r6, [r8, #4]
 8011fa6:	f8a8 7006 	strh.w	r7, [r8, #6]
 8011faa:	f8c8 0008 	str.w	r0, [r8, #8]
 8011fae:	e737      	b.n	8011e20 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x20>
 8011fb0:	f003 fe0e 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 8011fb4:	682b      	ldr	r3, [r5, #0]
 8011fb6:	4628      	mov	r0, r5
 8011fb8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8011fba:	4798      	blx	r3
 8011fbc:	682b      	ldr	r3, [r5, #0]
 8011fbe:	4607      	mov	r7, r0
 8011fc0:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8011fc2:	4628      	mov	r0, r5
 8011fc4:	4798      	blx	r3
 8011fc6:	6823      	ldr	r3, [r4, #0]
 8011fc8:	4683      	mov	fp, r0
 8011fca:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 8011fcc:	4620      	mov	r0, r4
 8011fce:	4798      	blx	r3
 8011fd0:	6822      	ldr	r2, [r4, #0]
 8011fd2:	9005      	str	r0, [sp, #20]
 8011fd4:	f8d2 2080 	ldr.w	r2, [r2, #128]	@ 0x80
 8011fd8:	4620      	mov	r0, r4
 8011fda:	4790      	blx	r2
 8011fdc:	9b05      	ldr	r3, [sp, #20]
 8011fde:	9001      	str	r0, [sp, #4]
 8011fe0:	463a      	mov	r2, r7
 8011fe2:	4649      	mov	r1, r9
 8011fe4:	9300      	str	r3, [sp, #0]
 8011fe6:	a80f      	add	r0, sp, #60	@ 0x3c
 8011fe8:	465b      	mov	r3, fp
 8011fea:	f003 fe61 	bl	8015cb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>
 8011fee:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8011ff2:	f9b4 9008 	ldrsh.w	r9, [r4, #8]
 8011ff6:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8011ff8:	f894 0039 	ldrb.w	r0, [r4, #57]	@ 0x39
 8011ffc:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 8012000:	f9b4 300a 	ldrsh.w	r3, [r4, #10]
 8012004:	bf0a      	itet	eq
 8012006:	464a      	moveq	r2, r9
 8012008:	461a      	movne	r2, r3
 801200a:	4699      	moveq	r9, r3
 801200c:	f894 3037 	ldrb.w	r3, [r4, #55]	@ 0x37
 8012010:	1ad2      	subs	r2, r2, r3
 8012012:	6833      	ldr	r3, [r6, #0]
 8012014:	f9b4 6034 	ldrsh.w	r6, [r4, #52]	@ 0x34
 8012018:	eb03 0341 	add.w	r3, r3, r1, lsl #1
 801201c:	af0f      	add	r7, sp, #60	@ 0x3c
 801201e:	7859      	ldrb	r1, [r3, #1]
 8012020:	9707      	str	r7, [sp, #28]
 8012022:	2300      	movs	r3, #0
 8012024:	f3c1 0181 	ubfx	r1, r1, #2, #2
 8012028:	f8ad 3018 	strh.w	r3, [sp, #24]
 801202c:	f88d 1020 	strb.w	r1, [sp, #32]
 8012030:	f88d 0021 	strb.w	r0, [sp, #33]	@ 0x21
 8012034:	9509      	str	r5, [sp, #36]	@ 0x24
 8012036:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801203a:	f8ad 902a 	strh.w	r9, [sp, #42]	@ 0x2a
 801203e:	f8ad 602c 	strh.w	r6, [sp, #44]	@ 0x2c
 8012042:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012046:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801204a:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801204e:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 8012052:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012056:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801205a:	f88d 303a 	strb.w	r3, [sp, #58]	@ 0x3a
 801205e:	b350      	cbz	r0, 80120b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012060:	682b      	ldr	r3, [r5, #0]
 8012062:	4628      	mov	r0, r5
 8012064:	695b      	ldr	r3, [r3, #20]
 8012066:	4798      	blx	r3
 8012068:	4607      	mov	r7, r0
 801206a:	b320      	cbz	r0, 80120b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801206c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801206e:	6803      	ldr	r3, [r0, #0]
 8012070:	4639      	mov	r1, r7
 8012072:	68db      	ldr	r3, [r3, #12]
 8012074:	4798      	blx	r3
 8012076:	4606      	mov	r6, r0
 8012078:	b1e8      	cbz	r0, 80120b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 801207a:	7b43      	ldrb	r3, [r0, #13]
 801207c:	7a82      	ldrb	r2, [r0, #10]
 801207e:	005b      	lsls	r3, r3, #1
 8012080:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8012084:	4313      	orrs	r3, r2
 8012086:	f8ad 3038 	strh.w	r3, [sp, #56]	@ 0x38
 801208a:	f89d 3021 	ldrb.w	r3, [sp, #33]	@ 0x21
 801208e:	2b06      	cmp	r3, #6
 8012090:	d111      	bne.n	80120b6 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2b6>
 8012092:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012094:	6803      	ldr	r3, [r0, #0]
 8012096:	4632      	mov	r2, r6
 8012098:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801209a:	4639      	mov	r1, r7
 801209c:	4798      	blx	r3
 801209e:	7b73      	ldrb	r3, [r6, #13]
 80120a0:	005b      	lsls	r3, r3, #1
 80120a2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80120a6:	7ab3      	ldrb	r3, [r6, #10]
 80120a8:	4313      	orrs	r3, r2
 80120aa:	4418      	add	r0, r3
 80120ac:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 80120b0:	4418      	add	r0, r3
 80120b2:	f8ad 0038 	strh.w	r0, [sp, #56]	@ 0x38
 80120b6:	2600      	movs	r6, #0
 80120b8:	4637      	mov	r7, r6
 80120ba:	a806      	add	r0, sp, #24
 80120bc:	f001 fb34 	bl	8013728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 80120c0:	f8bd 0036 	ldrh.w	r0, [sp, #54]	@ 0x36
 80120c4:	9b03      	ldr	r3, [sp, #12]
 80120c6:	4286      	cmp	r6, r0
 80120c8:	eba9 0903 	sub.w	r9, r9, r3
 80120cc:	f8bd 3018 	ldrh.w	r3, [sp, #24]
 80120d0:	bfb8      	it	lt
 80120d2:	4606      	movlt	r6, r0
 80120d4:	3701      	adds	r7, #1
 80120d6:	b236      	sxth	r6, r6
 80120d8:	b2bf      	uxth	r7, r7
 80120da:	fa0f f989 	sxth.w	r9, r9
 80120de:	2b00      	cmp	r3, #0
 80120e0:	f43f af0d 	beq.w	8011efe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80120e4:	f89d 303a 	ldrb.w	r3, [sp, #58]	@ 0x3a
 80120e8:	2b00      	cmp	r3, #0
 80120ea:	f47f af08 	bne.w	8011efe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80120ee:	7a2b      	ldrb	r3, [r5, #8]
 80120f0:	444b      	add	r3, r9
 80120f2:	2b00      	cmp	r3, #0
 80120f4:	dce1      	bgt.n	80120ba <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x2ba>
 80120f6:	e702      	b.n	8011efe <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0xfe>
 80120f8:	20002fa8 	.word	0x20002fa8
 80120fc:	20002fa4 	.word	0x20002fa4
 8012100:	20002fac 	.word	0x20002fac
 8012104:	20002fb0 	.word	0x20002fb0
 8012108:	ebaa 0606 	sub.w	r6, sl, r6
 801210c:	2002      	movs	r0, #2
 801210e:	fb96 f6f0 	sdiv	r6, r6, r0
 8012112:	e71d      	b.n	8011f50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 8012114:	441e      	add	r6, r3
 8012116:	ebaa 0606 	sub.w	r6, sl, r6
 801211a:	e719      	b.n	8011f50 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x150>
 801211c:	8925      	ldrh	r5, [r4, #8]
 801211e:	1aed      	subs	r5, r5, r3
 8012120:	eba5 050a 	sub.w	r5, r5, sl
 8012124:	fa0f fb85 	sxth.w	fp, r5
 8012128:	8965      	ldrh	r5, [r4, #10]
 801212a:	eba5 0509 	sub.w	r5, r5, r9
 801212e:	b22d      	sxth	r5, r5
 8012130:	e72e      	b.n	8011f90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012132:	8965      	ldrh	r5, [r4, #10]
 8012134:	1aed      	subs	r5, r5, r3
 8012136:	eba5 050a 	sub.w	r5, r5, sl
 801213a:	4633      	mov	r3, r6
 801213c:	b22d      	sxth	r5, r5
 801213e:	463e      	mov	r6, r7
 8012140:	f04f 0b00 	mov.w	fp, #0
 8012144:	461f      	mov	r7, r3
 8012146:	e723      	b.n	8011f90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>
 8012148:	2500      	movs	r5, #0
 801214a:	e721      	b.n	8011f90 <_ZNK8touchgfx8TextArea21calculateBoundingAreaEv+0x190>

0801214c <_ZNK8touchgfx8TextArea17invalidateContentEv>:
 801214c:	b513      	push	{r0, r1, r4, lr}
 801214e:	f890 3036 	ldrb.w	r3, [r0, #54]	@ 0x36
 8012152:	4604      	mov	r4, r0
 8012154:	b1fb      	cbz	r3, 8012196 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012156:	4b16      	ldr	r3, [pc, #88]	@ (80121b0 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x64>)
 8012158:	8d81      	ldrh	r1, [r0, #44]	@ 0x2c
 801215a:	881b      	ldrh	r3, [r3, #0]
 801215c:	428b      	cmp	r3, r1
 801215e:	d91a      	bls.n	8012196 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012160:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 8012164:	2b00      	cmp	r3, #0
 8012166:	dd16      	ble.n	8012196 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012168:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 801216c:	2b00      	cmp	r3, #0
 801216e:	dd12      	ble.n	8012196 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 8012170:	4b10      	ldr	r3, [pc, #64]	@ (80121b4 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x68>)
 8012172:	6818      	ldr	r0, [r3, #0]
 8012174:	f7fb fcb0 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 8012178:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 801217c:	6822      	ldr	r2, [r4, #0]
 801217e:	2b00      	cmp	r3, #0
 8012180:	db06      	blt.n	8012190 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 8012182:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 8012186:	2b00      	cmp	r3, #0
 8012188:	db02      	blt.n	8012190 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x44>
 801218a:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 801218c:	4298      	cmp	r0, r3
 801218e:	d004      	beq.n	801219a <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4e>
 8012190:	6953      	ldr	r3, [r2, #20]
 8012192:	4620      	mov	r0, r4
 8012194:	4798      	blx	r3
 8012196:	b002      	add	sp, #8
 8012198:	bd10      	pop	{r4, pc}
 801219a:	f104 013c 	add.w	r1, r4, #60	@ 0x3c
 801219e:	c903      	ldmia	r1, {r0, r1}
 80121a0:	466b      	mov	r3, sp
 80121a2:	e883 0003 	stmia.w	r3, {r0, r1}
 80121a6:	6912      	ldr	r2, [r2, #16]
 80121a8:	4619      	mov	r1, r3
 80121aa:	4620      	mov	r0, r4
 80121ac:	4790      	blx	r2
 80121ae:	e7f2      	b.n	8012196 <_ZNK8touchgfx8TextArea17invalidateContentEv+0x4a>
 80121b0:	20002fa8 	.word	0x20002fa8
 80121b4:	20002fb0 	.word	0x20002fb0

080121b8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE>:
 80121b8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80121bc:	4b44      	ldr	r3, [pc, #272]	@ (80122d0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x118>)
 80121be:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80121c0:	881b      	ldrh	r3, [r3, #0]
 80121c2:	4293      	cmp	r3, r2
 80121c4:	b08e      	sub	sp, #56	@ 0x38
 80121c6:	4604      	mov	r4, r0
 80121c8:	d97e      	bls.n	80122c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 80121ca:	6808      	ldr	r0, [r1, #0]
 80121cc:	4d41      	ldr	r5, [pc, #260]	@ (80122d4 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x11c>)
 80121ce:	6849      	ldr	r1, [r1, #4]
 80121d0:	ab05      	add	r3, sp, #20
 80121d2:	c303      	stmia	r3!, {r0, r1}
 80121d4:	4611      	mov	r1, r2
 80121d6:	6828      	ldr	r0, [r5, #0]
 80121d8:	f7fb fc7e 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 80121dc:	f9b4 3042 	ldrsh.w	r3, [r4, #66]	@ 0x42
 80121e0:	2b00      	cmp	r3, #0
 80121e2:	db11      	blt.n	8012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80121e4:	f9b4 3040 	ldrsh.w	r3, [r4, #64]	@ 0x40
 80121e8:	2b00      	cmp	r3, #0
 80121ea:	db0d      	blt.n	8012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80121ec:	6c63      	ldr	r3, [r4, #68]	@ 0x44
 80121ee:	4298      	cmp	r0, r3
 80121f0:	d10a      	bne.n	8012208 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x50>
 80121f2:	f104 023c 	add.w	r2, r4, #60	@ 0x3c
 80121f6:	e892 0003 	ldmia.w	r2, {r0, r1}
 80121fa:	ab09      	add	r3, sp, #36	@ 0x24
 80121fc:	e883 0003 	stmia.w	r3, {r0, r1}
 8012200:	4619      	mov	r1, r3
 8012202:	a805      	add	r0, sp, #20
 8012204:	f7fe fcca 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8012208:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 801220c:	2b00      	cmp	r3, #0
 801220e:	dd5b      	ble.n	80122c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012210:	f9bd 301a 	ldrsh.w	r3, [sp, #26]
 8012214:	2b00      	cmp	r3, #0
 8012216:	dd57      	ble.n	80122c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 8012218:	4f2f      	ldr	r7, [pc, #188]	@ (80122d8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x120>)
 801221a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801221c:	683b      	ldr	r3, [r7, #0]
 801221e:	f813 2012 	ldrb.w	r2, [r3, r2, lsl #1]
 8012222:	4b2e      	ldr	r3, [pc, #184]	@ (80122dc <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x124>)
 8012224:	681b      	ldr	r3, [r3, #0]
 8012226:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 801222a:	2e00      	cmp	r6, #0
 801222c:	d04c      	beq.n	80122c8 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x110>
 801222e:	6823      	ldr	r3, [r4, #0]
 8012230:	f894 8036 	ldrb.w	r8, [r4, #54]	@ 0x36
 8012234:	6edb      	ldr	r3, [r3, #108]	@ 0x6c
 8012236:	4620      	mov	r0, r4
 8012238:	4798      	blx	r3
 801223a:	8da2      	ldrh	r2, [r4, #44]	@ 0x2c
 801223c:	683b      	ldr	r3, [r7, #0]
 801223e:	f9b4 c034 	ldrsh.w	ip, [r4, #52]	@ 0x34
 8012242:	f894 e038 	ldrb.w	lr, [r4, #56]	@ 0x38
 8012246:	f894 7037 	ldrb.w	r7, [r4, #55]	@ 0x37
 801224a:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 801224c:	eb03 0342 	add.w	r3, r3, r2, lsl #1
 8012250:	f894 2039 	ldrb.w	r2, [r4, #57]	@ 0x39
 8012254:	785b      	ldrb	r3, [r3, #1]
 8012256:	9609      	str	r6, [sp, #36]	@ 0x24
 8012258:	f3c3 0381 	ubfx	r3, r3, #2, #2
 801225c:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8012260:	4b1f      	ldr	r3, [pc, #124]	@ (80122e0 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0x128>)
 8012262:	f88d 0028 	strb.w	r0, [sp, #40]	@ 0x28
 8012266:	681b      	ldr	r3, [r3, #0]
 8012268:	f88d e02a 	strb.w	lr, [sp, #42]	@ 0x2a
 801226c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801226e:	f8ad c030 	strh.w	ip, [sp, #48]	@ 0x30
 8012272:	f88d 8032 	strb.w	r8, [sp, #50]	@ 0x32
 8012276:	f88d 7033 	strb.w	r7, [sp, #51]	@ 0x33
 801227a:	f88d 2034 	strb.w	r2, [sp, #52]	@ 0x34
 801227e:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012282:	b10a      	cbz	r2, 8012288 <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd0>
 8012284:	6cde      	ldr	r6, [r3, #76]	@ 0x4c
 8012286:	b906      	cbnz	r6, 801228a <_ZNK8touchgfx8TextArea4drawERKNS_4RectE+0xd2>
 8012288:	689e      	ldr	r6, [r3, #8]
 801228a:	af07      	add	r7, sp, #28
 801228c:	4621      	mov	r1, r4
 801228e:	4638      	mov	r0, r7
 8012290:	f003 f8e8 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8012294:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 8012296:	6828      	ldr	r0, [r5, #0]
 8012298:	f7fb fc1e 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 801229c:	6823      	ldr	r3, [r4, #0]
 801229e:	4605      	mov	r5, r0
 80122a0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80122a2:	4620      	mov	r0, r4
 80122a4:	4798      	blx	r3
 80122a6:	6823      	ldr	r3, [r4, #0]
 80122a8:	4680      	mov	r8, r0
 80122aa:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80122ae:	4620      	mov	r0, r4
 80122b0:	4798      	blx	r3
 80122b2:	e9cd 8002 	strd	r8, r0, [sp, #8]
 80122b6:	ab09      	add	r3, sp, #36	@ 0x24
 80122b8:	9300      	str	r3, [sp, #0]
 80122ba:	9501      	str	r5, [sp, #4]
 80122bc:	ab05      	add	r3, sp, #20
 80122be:	e897 0006 	ldmia.w	r7, {r1, r2}
 80122c2:	4630      	mov	r0, r6
 80122c4:	f7fb fb99 	bl	800d9fa <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80122c8:	b00e      	add	sp, #56	@ 0x38
 80122ca:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80122ce:	bf00      	nop
 80122d0:	20002fa8 	.word	0x20002fa8
 80122d4:	20002fb0 	.word	0x20002fb0
 80122d8:	20002fa4 	.word	0x20002fa4
 80122dc:	20002fac 	.word	0x20002fac
 80122e0:	20002f54 	.word	0x20002f54

080122e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>:
 80122e4:	b538      	push	{r3, r4, r5, lr}
 80122e6:	4b0e      	ldr	r3, [pc, #56]	@ (8012320 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x3c>)
 80122e8:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 80122ea:	881b      	ldrh	r3, [r3, #0]
 80122ec:	429a      	cmp	r2, r3
 80122ee:	4604      	mov	r4, r0
 80122f0:	d214      	bcs.n	801231c <_ZN8touchgfx8TextArea19resizeToCurrentTextEv+0x38>
 80122f2:	6803      	ldr	r3, [r0, #0]
 80122f4:	6f5b      	ldr	r3, [r3, #116]	@ 0x74
 80122f6:	4798      	blx	r3
 80122f8:	6823      	ldr	r3, [r4, #0]
 80122fa:	4605      	mov	r5, r0
 80122fc:	6f1b      	ldr	r3, [r3, #112]	@ 0x70
 80122fe:	4620      	mov	r0, r4
 8012300:	4798      	blx	r3
 8012302:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8012306:	b22d      	sxth	r5, r5
 8012308:	f013 0ffd 	tst.w	r3, #253	@ 0xfd
 801230c:	4601      	mov	r1, r0
 801230e:	bf06      	itte	eq
 8012310:	4602      	moveq	r2, r0
 8012312:	4629      	moveq	r1, r5
 8012314:	462a      	movne	r2, r5
 8012316:	4620      	mov	r0, r4
 8012318:	f7f7 fd03 	bl	8009d22 <_ZN8touchgfx8Drawable14setWidthHeightEss>
 801231c:	bd38      	pop	{r3, r4, r5, pc}
 801231e:	bf00      	nop
 8012320:	20002fa8 	.word	0x20002fa8

08012324 <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE>:
 8012324:	b530      	push	{r4, r5, lr}
 8012326:	888b      	ldrh	r3, [r1, #4]
 8012328:	8583      	strh	r3, [r0, #44]	@ 0x2c
 801232a:	f9b0 3008 	ldrsh.w	r3, [r0, #8]
 801232e:	b085      	sub	sp, #20
 8012330:	4604      	mov	r4, r0
 8012332:	b923      	cbnz	r3, 801233e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 8012334:	f9b0 300a 	ldrsh.w	r3, [r0, #10]
 8012338:	b90b      	cbnz	r3, 801233e <_ZN8touchgfx8TextArea12setTypedTextERKNS_9TypedTextE+0x1a>
 801233a:	f7ff ffd3 	bl	80122e4 <_ZN8touchgfx8TextArea19resizeToCurrentTextEv>
 801233e:	6823      	ldr	r3, [r4, #0]
 8012340:	466d      	mov	r5, sp
 8012342:	4621      	mov	r1, r4
 8012344:	4628      	mov	r0, r5
 8012346:	f8d3 3084 	ldr.w	r3, [r3, #132]	@ 0x84
 801234a:	4798      	blx	r3
 801234c:	e895 0007 	ldmia.w	r5, {r0, r1, r2}
 8012350:	343c      	adds	r4, #60	@ 0x3c
 8012352:	e884 0007 	stmia.w	r4, {r0, r1, r2}
 8012356:	b005      	add	sp, #20
 8012358:	bd30      	pop	{r4, r5, pc}

0801235a <_ZNK8touchgfx3Box12getSolidRectEv>:
 801235a:	2300      	movs	r3, #0
 801235c:	8083      	strh	r3, [r0, #4]
 801235e:	80c3      	strh	r3, [r0, #6]
 8012360:	8003      	strh	r3, [r0, #0]
 8012362:	8043      	strh	r3, [r0, #2]
 8012364:	f891 3026 	ldrb.w	r3, [r1, #38]	@ 0x26
 8012368:	2bff      	cmp	r3, #255	@ 0xff
 801236a:	bf01      	itttt	eq
 801236c:	890b      	ldrheq	r3, [r1, #8]
 801236e:	8083      	strheq	r3, [r0, #4]
 8012370:	894b      	ldrheq	r3, [r1, #10]
 8012372:	80c3      	strheq	r3, [r0, #6]
 8012374:	4770      	bx	lr
	...

08012378 <_ZNK8touchgfx3Box4drawERKNS_4RectE>:
 8012378:	b537      	push	{r0, r1, r2, r4, r5, lr}
 801237a:	4604      	mov	r4, r0
 801237c:	6808      	ldr	r0, [r1, #0]
 801237e:	6849      	ldr	r1, [r1, #4]
 8012380:	466b      	mov	r3, sp
 8012382:	c303      	stmia	r3!, {r0, r1}
 8012384:	6823      	ldr	r3, [r4, #0]
 8012386:	4669      	mov	r1, sp
 8012388:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801238a:	4620      	mov	r0, r4
 801238c:	4798      	blx	r3
 801238e:	4b08      	ldr	r3, [pc, #32]	@ (80123b0 <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x38>)
 8012390:	681b      	ldr	r3, [r3, #0]
 8012392:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 8012396:	b10a      	cbz	r2, 801239c <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x24>
 8012398:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 801239a:	b900      	cbnz	r0, 801239e <_ZNK8touchgfx3Box4drawERKNS_4RectE+0x26>
 801239c:	6898      	ldr	r0, [r3, #8]
 801239e:	6803      	ldr	r3, [r0, #0]
 80123a0:	6aa2      	ldr	r2, [r4, #40]	@ 0x28
 80123a2:	6a1d      	ldr	r5, [r3, #32]
 80123a4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80123a8:	4669      	mov	r1, sp
 80123aa:	47a8      	blx	r5
 80123ac:	b003      	add	sp, #12
 80123ae:	bd30      	pop	{r4, r5, pc}
 80123b0:	20002f54 	.word	0x20002f54

080123b4 <_ZNK8touchgfx3Box17invalidateContentEv>:
 80123b4:	f890 2026 	ldrb.w	r2, [r0, #38]	@ 0x26
 80123b8:	b12a      	cbz	r2, 80123c6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80123ba:	f890 2025 	ldrb.w	r2, [r0, #37]	@ 0x25
 80123be:	b112      	cbz	r2, 80123c6 <_ZNK8touchgfx3Box17invalidateContentEv+0x12>
 80123c0:	6803      	ldr	r3, [r0, #0]
 80123c2:	695b      	ldr	r3, [r3, #20]
 80123c4:	4718      	bx	r3
 80123c6:	4770      	bx	lr

080123c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>:
 80123c8:	b570      	push	{r4, r5, r6, lr}
 80123ca:	880b      	ldrh	r3, [r1, #0]
 80123cc:	85c3      	strh	r3, [r0, #46]	@ 0x2e
 80123ce:	4605      	mov	r5, r0
 80123d0:	8813      	ldrh	r3, [r2, #0]
 80123d2:	f825 3f30 	strh.w	r3, [r5, #48]!
 80123d6:	4604      	mov	r4, r0
 80123d8:	4628      	mov	r0, r5
 80123da:	f005 f9b7 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 80123de:	4606      	mov	r6, r0
 80123e0:	4628      	mov	r0, r5
 80123e2:	f005 f9e7 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 80123e6:	6823      	ldr	r3, [r4, #0]
 80123e8:	4605      	mov	r5, r0
 80123ea:	4631      	mov	r1, r6
 80123ec:	4620      	mov	r0, r4
 80123ee:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80123f0:	4798      	blx	r3
 80123f2:	6823      	ldr	r3, [r4, #0]
 80123f4:	4629      	mov	r1, r5
 80123f6:	4620      	mov	r0, r4
 80123f8:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80123fa:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80123fe:	4718      	bx	r3

08012400 <_ZNK8touchgfx6Button12getSolidRectEv>:
 8012400:	b510      	push	{r4, lr}
 8012402:	f891 3032 	ldrb.w	r3, [r1, #50]	@ 0x32
 8012406:	2bff      	cmp	r3, #255	@ 0xff
 8012408:	4604      	mov	r4, r0
 801240a:	d006      	beq.n	801241a <_ZNK8touchgfx6Button12getSolidRectEv+0x1a>
 801240c:	2300      	movs	r3, #0
 801240e:	8003      	strh	r3, [r0, #0]
 8012410:	8043      	strh	r3, [r0, #2]
 8012412:	8083      	strh	r3, [r0, #4]
 8012414:	80c3      	strh	r3, [r0, #6]
 8012416:	4620      	mov	r0, r4
 8012418:	bd10      	pop	{r4, pc}
 801241a:	f891 302c 	ldrb.w	r3, [r1, #44]	@ 0x2c
 801241e:	b11b      	cbz	r3, 8012428 <_ZNK8touchgfx6Button12getSolidRectEv+0x28>
 8012420:	3130      	adds	r1, #48	@ 0x30
 8012422:	f005 f9fb 	bl	801781c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 8012426:	e7f6      	b.n	8012416 <_ZNK8touchgfx6Button12getSolidRectEv+0x16>
 8012428:	312e      	adds	r1, #46	@ 0x2e
 801242a:	e7fa      	b.n	8012422 <_ZNK8touchgfx6Button12getSolidRectEv+0x22>

0801242c <_ZNK8touchgfx6Button4drawERKNS_4RectE>:
 801242c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012430:	f890 302c 	ldrb.w	r3, [r0, #44]	@ 0x2c
 8012434:	b08a      	sub	sp, #40	@ 0x28
 8012436:	4604      	mov	r4, r0
 8012438:	4688      	mov	r8, r1
 801243a:	2b00      	cmp	r3, #0
 801243c:	d066      	beq.n	801250c <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe0>
 801243e:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 8012440:	f8ad 3014 	strh.w	r3, [sp, #20]
 8012444:	a805      	add	r0, sp, #20
 8012446:	f005 f981 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801244a:	4607      	mov	r7, r0
 801244c:	a805      	add	r0, sp, #20
 801244e:	f005 f9b1 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012452:	f9b8 6000 	ldrsh.w	r6, [r8]
 8012456:	f8b8 2004 	ldrh.w	r2, [r8, #4]
 801245a:	4432      	add	r2, r6
 801245c:	b292      	uxth	r2, r2
 801245e:	2300      	movs	r3, #0
 8012460:	fa0f fc82 	sxth.w	ip, r2
 8012464:	459c      	cmp	ip, r3
 8012466:	9306      	str	r3, [sp, #24]
 8012468:	dd52      	ble.n	8012510 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801246a:	42b7      	cmp	r7, r6
 801246c:	dd50      	ble.n	8012510 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 801246e:	f9b8 5002 	ldrsh.w	r5, [r8, #2]
 8012472:	f8b8 3006 	ldrh.w	r3, [r8, #6]
 8012476:	442b      	add	r3, r5
 8012478:	b29b      	uxth	r3, r3
 801247a:	b219      	sxth	r1, r3
 801247c:	2900      	cmp	r1, #0
 801247e:	dd47      	ble.n	8012510 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012480:	42a8      	cmp	r0, r5
 8012482:	dd45      	ble.n	8012510 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xe4>
 8012484:	4567      	cmp	r7, ip
 8012486:	bfb8      	it	lt
 8012488:	b2ba      	uxthlt	r2, r7
 801248a:	4288      	cmp	r0, r1
 801248c:	ea26 76e6 	bic.w	r6, r6, r6, asr #31
 8012490:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8012494:	bfb8      	it	lt
 8012496:	b283      	uxthlt	r3, r0
 8012498:	1b92      	subs	r2, r2, r6
 801249a:	1b5b      	subs	r3, r3, r5
 801249c:	f8ad 201c 	strh.w	r2, [sp, #28]
 80124a0:	f8ad 301e 	strh.w	r3, [sp, #30]
 80124a4:	f8ad 6018 	strh.w	r6, [sp, #24]
 80124a8:	f8ad 501a 	strh.w	r5, [sp, #26]
 80124ac:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80124b0:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80124b4:	429a      	cmp	r2, r3
 80124b6:	d026      	beq.n	8012506 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80124b8:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 80124bc:	2b00      	cmp	r3, #0
 80124be:	dd22      	ble.n	8012506 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80124c0:	f9bd 301e 	ldrsh.w	r3, [sp, #30]
 80124c4:	2b00      	cmp	r3, #0
 80124c6:	dd1e      	ble.n	8012506 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xda>
 80124c8:	2300      	movs	r3, #0
 80124ca:	e9cd 3308 	strd	r3, r3, [sp, #32]
 80124ce:	6823      	ldr	r3, [r4, #0]
 80124d0:	a908      	add	r1, sp, #32
 80124d2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80124d4:	4620      	mov	r0, r4
 80124d6:	4798      	blx	r3
 80124d8:	4b0f      	ldr	r3, [pc, #60]	@ (8012518 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xec>)
 80124da:	681b      	ldr	r3, [r3, #0]
 80124dc:	f893 2058 	ldrb.w	r2, [r3, #88]	@ 0x58
 80124e0:	b10a      	cbz	r2, 80124e6 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xba>
 80124e2:	6cd8      	ldr	r0, [r3, #76]	@ 0x4c
 80124e4:	b900      	cbnz	r0, 80124e8 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0xbc>
 80124e6:	6898      	ldr	r0, [r3, #8]
 80124e8:	6801      	ldr	r1, [r0, #0]
 80124ea:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 80124ee:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 80124f2:	2501      	movs	r5, #1
 80124f4:	9502      	str	r5, [sp, #8]
 80124f6:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 80124fa:	9401      	str	r4, [sp, #4]
 80124fc:	ac06      	add	r4, sp, #24
 80124fe:	9400      	str	r4, [sp, #0]
 8012500:	688c      	ldr	r4, [r1, #8]
 8012502:	a905      	add	r1, sp, #20
 8012504:	47a0      	blx	r4
 8012506:	b00a      	add	sp, #40	@ 0x28
 8012508:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 801250c:	8dc3      	ldrh	r3, [r0, #46]	@ 0x2e
 801250e:	e797      	b.n	8012440 <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x14>
 8012510:	2300      	movs	r3, #0
 8012512:	9307      	str	r3, [sp, #28]
 8012514:	e7ca      	b.n	80124ac <_ZNK8touchgfx6Button4drawERKNS_4RectE+0x80>
 8012516:	bf00      	nop
 8012518:	20002f54 	.word	0x20002f54

0801251c <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE>:
 801251c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012520:	4b2f      	ldr	r3, [pc, #188]	@ (80125e0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc4>)
 8012522:	8d82      	ldrh	r2, [r0, #44]	@ 0x2c
 8012524:	881b      	ldrh	r3, [r3, #0]
 8012526:	4293      	cmp	r3, r2
 8012528:	b08d      	sub	sp, #52	@ 0x34
 801252a:	4604      	mov	r4, r0
 801252c:	460f      	mov	r7, r1
 801252e:	d954      	bls.n	80125da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012530:	4b2c      	ldr	r3, [pc, #176]	@ (80125e4 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xc8>)
 8012532:	6819      	ldr	r1, [r3, #0]
 8012534:	eb01 0342 	add.w	r3, r1, r2, lsl #1
 8012538:	f811 1012 	ldrb.w	r1, [r1, r2, lsl #1]
 801253c:	4a2a      	ldr	r2, [pc, #168]	@ (80125e8 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xcc>)
 801253e:	6812      	ldr	r2, [r2, #0]
 8012540:	f852 1021 	ldr.w	r1, [r2, r1, lsl #2]
 8012544:	2900      	cmp	r1, #0
 8012546:	d048      	beq.n	80125da <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xbe>
 8012548:	785a      	ldrb	r2, [r3, #1]
 801254a:	f894 3039 	ldrb.w	r3, [r4, #57]	@ 0x39
 801254e:	f88d 302c 	strb.w	r3, [sp, #44]	@ 0x2c
 8012552:	4b26      	ldr	r3, [pc, #152]	@ (80125ec <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd0>)
 8012554:	f890 5036 	ldrb.w	r5, [r0, #54]	@ 0x36
 8012558:	f9b0 c034 	ldrsh.w	ip, [r0, #52]	@ 0x34
 801255c:	f890 e038 	ldrb.w	lr, [r0, #56]	@ 0x38
 8012560:	6b26      	ldr	r6, [r4, #48]	@ 0x30
 8012562:	f890 0037 	ldrb.w	r0, [r0, #55]	@ 0x37
 8012566:	9107      	str	r1, [sp, #28]
 8012568:	f3c2 0801 	ubfx	r8, r2, #0, #2
 801256c:	f3c2 0281 	ubfx	r2, r2, #2, #2
 8012570:	f88d 2021 	strb.w	r2, [sp, #33]	@ 0x21
 8012574:	681a      	ldr	r2, [r3, #0]
 8012576:	f88d 8020 	strb.w	r8, [sp, #32]
 801257a:	f892 3058 	ldrb.w	r3, [r2, #88]	@ 0x58
 801257e:	f88d e022 	strb.w	lr, [sp, #34]	@ 0x22
 8012582:	9609      	str	r6, [sp, #36]	@ 0x24
 8012584:	f8ad c028 	strh.w	ip, [sp, #40]	@ 0x28
 8012588:	f88d 502a 	strb.w	r5, [sp, #42]	@ 0x2a
 801258c:	f88d 002b 	strb.w	r0, [sp, #43]	@ 0x2b
 8012590:	b10b      	cbz	r3, 8012596 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7a>
 8012592:	6cd5      	ldr	r5, [r2, #76]	@ 0x4c
 8012594:	b905      	cbnz	r5, 8012598 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0x7c>
 8012596:	6895      	ldr	r5, [r2, #8]
 8012598:	ae05      	add	r6, sp, #20
 801259a:	4621      	mov	r1, r4
 801259c:	4630      	mov	r0, r6
 801259e:	f002 ff61 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80125a2:	4b13      	ldr	r3, [pc, #76]	@ (80125f0 <_ZNK8touchgfx24TextAreaWithWildcardBase4drawERKNS_4RectE+0xd4>)
 80125a4:	8da1      	ldrh	r1, [r4, #44]	@ 0x2c
 80125a6:	6818      	ldr	r0, [r3, #0]
 80125a8:	f7fb fa96 	bl	800dad8 <_ZNK8touchgfx5Texts7getTextEt>
 80125ac:	6823      	ldr	r3, [r4, #0]
 80125ae:	4680      	mov	r8, r0
 80125b0:	6fdb      	ldr	r3, [r3, #124]	@ 0x7c
 80125b2:	4620      	mov	r0, r4
 80125b4:	4798      	blx	r3
 80125b6:	6823      	ldr	r3, [r4, #0]
 80125b8:	4681      	mov	r9, r0
 80125ba:	f8d3 3080 	ldr.w	r3, [r3, #128]	@ 0x80
 80125be:	4620      	mov	r0, r4
 80125c0:	4798      	blx	r3
 80125c2:	e9cd 9002 	strd	r9, r0, [sp, #8]
 80125c6:	ab07      	add	r3, sp, #28
 80125c8:	9300      	str	r3, [sp, #0]
 80125ca:	f8cd 8004 	str.w	r8, [sp, #4]
 80125ce:	463b      	mov	r3, r7
 80125d0:	e896 0006 	ldmia.w	r6, {r1, r2}
 80125d4:	4628      	mov	r0, r5
 80125d6:	f7fb fa10 	bl	800d9fa <_ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RKNS0_13StringVisualsEPKtz>
 80125da:	b00d      	add	sp, #52	@ 0x34
 80125dc:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 80125e0:	20002fa8 	.word	0x20002fa8
 80125e4:	20002fa4 	.word	0x20002fa4
 80125e8:	20002fac 	.word	0x20002fac
 80125ec:	20002f54 	.word	0x20002f54
 80125f0:	20002fb0 	.word	0x20002fb0

080125f4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE>:
 80125f4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80125f8:	4604      	mov	r4, r0
 80125fa:	8e03      	ldrh	r3, [r0, #48]	@ 0x30
 80125fc:	8962      	ldrh	r2, [r4, #10]
 80125fe:	b218      	sxth	r0, r3
 8012600:	460e      	mov	r6, r1
 8012602:	005b      	lsls	r3, r3, #1
 8012604:	8921      	ldrh	r1, [r4, #8]
 8012606:	b29b      	uxth	r3, r3
 8012608:	1ac9      	subs	r1, r1, r3
 801260a:	b08e      	sub	sp, #56	@ 0x38
 801260c:	b209      	sxth	r1, r1
 801260e:	1ad3      	subs	r3, r2, r3
 8012610:	b21b      	sxth	r3, r3
 8012612:	2900      	cmp	r1, #0
 8012614:	f8ad 0000 	strh.w	r0, [sp]
 8012618:	f8ad 0002 	strh.w	r0, [sp, #2]
 801261c:	f8ad 1004 	strh.w	r1, [sp, #4]
 8012620:	f8ad 3006 	strh.w	r3, [sp, #6]
 8012624:	dd5e      	ble.n	80126e4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 8012626:	2b00      	cmp	r3, #0
 8012628:	dd5c      	ble.n	80126e4 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xf0>
 801262a:	6830      	ldr	r0, [r6, #0]
 801262c:	6871      	ldr	r1, [r6, #4]
 801262e:	ab02      	add	r3, sp, #8
 8012630:	c303      	stmia	r3!, {r0, r1}
 8012632:	4669      	mov	r1, sp
 8012634:	a802      	add	r0, sp, #8
 8012636:	f7fe fab1 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 801263a:	4620      	mov	r0, r4
 801263c:	a902      	add	r1, sp, #8
 801263e:	f7ff fe9b 	bl	8012378 <_ZNK8touchgfx3Box4drawERKNS_4RectE>
 8012642:	8e20      	ldrh	r0, [r4, #48]	@ 0x30
 8012644:	2800      	cmp	r0, #0
 8012646:	d05f      	beq.n	8012708 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 8012648:	8963      	ldrh	r3, [r4, #10]
 801264a:	f9b4 1008 	ldrsh.w	r1, [r4, #8]
 801264e:	f8ad 101c 	strh.w	r1, [sp, #28]
 8012652:	1a1f      	subs	r7, r3, r0
 8012654:	eba3 0340 	sub.w	r3, r3, r0, lsl #1
 8012658:	b202      	sxth	r2, r0
 801265a:	2500      	movs	r5, #0
 801265c:	b21b      	sxth	r3, r3
 801265e:	f8ad 1024 	strh.w	r1, [sp, #36]	@ 0x24
 8012662:	1a09      	subs	r1, r1, r0
 8012664:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 8012668:	9506      	str	r5, [sp, #24]
 801266a:	f8ad 201e 	strh.w	r2, [sp, #30]
 801266e:	f8ad 5020 	strh.w	r5, [sp, #32]
 8012672:	f8ad 2026 	strh.w	r2, [sp, #38]	@ 0x26
 8012676:	f8ad 5028 	strh.w	r5, [sp, #40]	@ 0x28
 801267a:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801267e:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 8012682:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8012686:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801268a:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801268e:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 8012692:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8012696:	af04      	add	r7, sp, #16
 8012698:	ab06      	add	r3, sp, #24
 801269a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801269e:	e893 0003 	ldmia.w	r3, {r0, r1}
 80126a2:	e887 0003 	stmia.w	r7, {r0, r1}
 80126a6:	4631      	mov	r1, r6
 80126a8:	4638      	mov	r0, r7
 80126aa:	f7fe fa77 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80126ae:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 80126b2:	2b00      	cmp	r3, #0
 80126b4:	dd12      	ble.n	80126dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80126b6:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 80126ba:	2b00      	cmp	r3, #0
 80126bc:	dd0e      	ble.n	80126dc <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xe8>
 80126be:	6823      	ldr	r3, [r4, #0]
 80126c0:	4639      	mov	r1, r7
 80126c2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80126c4:	4620      	mov	r0, r4
 80126c6:	4798      	blx	r3
 80126c8:	f7f6 f872 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 80126cc:	6803      	ldr	r3, [r0, #0]
 80126ce:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80126d0:	f8d3 8020 	ldr.w	r8, [r3, #32]
 80126d4:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 80126d8:	4639      	mov	r1, r7
 80126da:	47c0      	blx	r8
 80126dc:	3501      	adds	r5, #1
 80126de:	2d04      	cmp	r5, #4
 80126e0:	d1da      	bne.n	8012698 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0xa4>
 80126e2:	e011      	b.n	8012708 <_ZNK8touchgfx13BoxWithBorder4drawERKNS_4RectE+0x114>
 80126e4:	6830      	ldr	r0, [r6, #0]
 80126e6:	6871      	ldr	r1, [r6, #4]
 80126e8:	ab06      	add	r3, sp, #24
 80126ea:	c303      	stmia	r3!, {r0, r1}
 80126ec:	6823      	ldr	r3, [r4, #0]
 80126ee:	a906      	add	r1, sp, #24
 80126f0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80126f2:	4620      	mov	r0, r4
 80126f4:	4798      	blx	r3
 80126f6:	f7f6 f85b 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 80126fa:	6803      	ldr	r3, [r0, #0]
 80126fc:	6ae2      	ldr	r2, [r4, #44]	@ 0x2c
 80126fe:	6a1d      	ldr	r5, [r3, #32]
 8012700:	f894 3026 	ldrb.w	r3, [r4, #38]	@ 0x26
 8012704:	a906      	add	r1, sp, #24
 8012706:	47a8      	blx	r5
 8012708:	b00e      	add	sp, #56	@ 0x38
 801270a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

0801270e <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_>:
 801270e:	4770      	bx	lr

08012710 <_ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_>:
 8012710:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012714:	461c      	mov	r4, r3
 8012716:	4606      	mov	r6, r0
 8012718:	9f06      	ldr	r7, [sp, #24]
 801271a:	f7ff fe55 	bl	80123c8 <_ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_>
 801271e:	8823      	ldrh	r3, [r4, #0]
 8012720:	86b3      	strh	r3, [r6, #52]	@ 0x34
 8012722:	883b      	ldrh	r3, [r7, #0]
 8012724:	86f3      	strh	r3, [r6, #54]	@ 0x36
 8012726:	4638      	mov	r0, r7
 8012728:	f9b6 5008 	ldrsh.w	r5, [r6, #8]
 801272c:	f005 f80e 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 8012730:	f04f 0802 	mov.w	r8, #2
 8012734:	fb95 f5f8 	sdiv	r5, r5, r8
 8012738:	b2ad      	uxth	r5, r5
 801273a:	fb90 f0f8 	sdiv	r0, r0, r8
 801273e:	1a2d      	subs	r5, r5, r0
 8012740:	8735      	strh	r5, [r6, #56]	@ 0x38
 8012742:	4638      	mov	r0, r7
 8012744:	f9b6 400a 	ldrsh.w	r4, [r6, #10]
 8012748:	fb94 f4f8 	sdiv	r4, r4, r8
 801274c:	f005 f832 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012750:	b2a4      	uxth	r4, r4
 8012752:	fb90 f0f8 	sdiv	r0, r0, r8
 8012756:	1a24      	subs	r4, r4, r0
 8012758:	8774      	strh	r4, [r6, #58]	@ 0x3a
 801275a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
	...

08012760 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE>:
 8012760:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8012764:	4604      	mov	r4, r0
 8012766:	b08c      	sub	sp, #48	@ 0x30
 8012768:	460d      	mov	r5, r1
 801276a:	f7ff fe5f 	bl	801242c <_ZNK8touchgfx6Button4drawERKNS_4RectE>
 801276e:	f894 302c 	ldrb.w	r3, [r4, #44]	@ 0x2c
 8012772:	2b00      	cmp	r3, #0
 8012774:	d05d      	beq.n	8012832 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd2>
 8012776:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 8012778:	f8ad 3014 	strh.w	r3, [sp, #20]
 801277c:	a805      	add	r0, sp, #20
 801277e:	f9b4 8038 	ldrsh.w	r8, [r4, #56]	@ 0x38
 8012782:	f9b4 703a 	ldrsh.w	r7, [r4, #58]	@ 0x3a
 8012786:	f004 ffe1 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801278a:	4606      	mov	r6, r0
 801278c:	a805      	add	r0, sp, #20
 801278e:	f005 f811 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 8012792:	6869      	ldr	r1, [r5, #4]
 8012794:	f8ad 001e 	strh.w	r0, [sp, #30]
 8012798:	6828      	ldr	r0, [r5, #0]
 801279a:	f8ad 8018 	strh.w	r8, [sp, #24]
 801279e:	ab08      	add	r3, sp, #32
 80127a0:	ad08      	add	r5, sp, #32
 80127a2:	c303      	stmia	r3!, {r0, r1}
 80127a4:	a906      	add	r1, sp, #24
 80127a6:	4628      	mov	r0, r5
 80127a8:	f8ad 701a 	strh.w	r7, [sp, #26]
 80127ac:	f8ad 601c 	strh.w	r6, [sp, #28]
 80127b0:	f7fe f9f4 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80127b4:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 80127b8:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 80127bc:	429a      	cmp	r2, r3
 80127be:	d035      	beq.n	801282c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127c0:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 80127c4:	2b00      	cmp	r3, #0
 80127c6:	dd31      	ble.n	801282c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127c8:	f9bd 3026 	ldrsh.w	r3, [sp, #38]	@ 0x26
 80127cc:	2b00      	cmp	r3, #0
 80127ce:	dd2d      	ble.n	801282c <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xcc>
 80127d0:	2300      	movs	r3, #0
 80127d2:	e9cd 330a 	strd	r3, r3, [sp, #40]	@ 0x28
 80127d6:	6823      	ldr	r3, [r4, #0]
 80127d8:	a90a      	add	r1, sp, #40	@ 0x28
 80127da:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80127dc:	4620      	mov	r0, r4
 80127de:	4798      	blx	r3
 80127e0:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 80127e4:	8f22      	ldrh	r2, [r4, #56]	@ 0x38
 80127e6:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 80127ea:	1a9b      	subs	r3, r3, r2
 80127ec:	f8ad 3020 	strh.w	r3, [sp, #32]
 80127f0:	8f63      	ldrh	r3, [r4, #58]	@ 0x3a
 80127f2:	1ac9      	subs	r1, r1, r3
 80127f4:	f8ad 1022 	strh.w	r1, [sp, #34]	@ 0x22
 80127f8:	490f      	ldr	r1, [pc, #60]	@ (8012838 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xd8>)
 80127fa:	6809      	ldr	r1, [r1, #0]
 80127fc:	f891 0058 	ldrb.w	r0, [r1, #88]	@ 0x58
 8012800:	b108      	cbz	r0, 8012806 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa6>
 8012802:	6cc8      	ldr	r0, [r1, #76]	@ 0x4c
 8012804:	b900      	cbnz	r0, 8012808 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0xa8>
 8012806:	6888      	ldr	r0, [r1, #8]
 8012808:	f8bd 102a 	ldrh.w	r1, [sp, #42]	@ 0x2a
 801280c:	440b      	add	r3, r1
 801280e:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 8012812:	2601      	movs	r6, #1
 8012814:	440a      	add	r2, r1
 8012816:	6801      	ldr	r1, [r0, #0]
 8012818:	9602      	str	r6, [sp, #8]
 801281a:	f894 4032 	ldrb.w	r4, [r4, #50]	@ 0x32
 801281e:	e9cd 5400 	strd	r5, r4, [sp]
 8012822:	b21b      	sxth	r3, r3
 8012824:	688c      	ldr	r4, [r1, #8]
 8012826:	b212      	sxth	r2, r2
 8012828:	a905      	add	r1, sp, #20
 801282a:	47a0      	blx	r4
 801282c:	b00c      	add	sp, #48	@ 0x30
 801282e:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8012832:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 8012834:	e7a0      	b.n	8012778 <_ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE+0x18>
 8012836:	bf00      	nop
 8012838:	20002f54 	.word	0x20002f54

0801283c <_ZN8touchgfx14ButtonWithIconC1Ev>:
 801283c:	b510      	push	{r4, lr}
 801283e:	2101      	movs	r1, #1
 8012840:	2200      	movs	r2, #0
 8012842:	f880 1025 	strb.w	r1, [r0, #37]	@ 0x25
 8012846:	f880 1024 	strb.w	r1, [r0, #36]	@ 0x24
 801284a:	4c0e      	ldr	r4, [pc, #56]	@ (8012884 <_ZN8touchgfx14ButtonWithIconC1Ev+0x48>)
 801284c:	8082      	strh	r2, [r0, #4]
 801284e:	f64f 71ff 	movw	r1, #65535	@ 0xffff
 8012852:	80c2      	strh	r2, [r0, #6]
 8012854:	8102      	strh	r2, [r0, #8]
 8012856:	8142      	strh	r2, [r0, #10]
 8012858:	8182      	strh	r2, [r0, #12]
 801285a:	81c2      	strh	r2, [r0, #14]
 801285c:	8202      	strh	r2, [r0, #16]
 801285e:	8242      	strh	r2, [r0, #18]
 8012860:	e9c0 2205 	strd	r2, r2, [r0, #20]
 8012864:	61c2      	str	r2, [r0, #28]
 8012866:	8402      	strh	r2, [r0, #32]
 8012868:	8442      	strh	r2, [r0, #34]	@ 0x22
 801286a:	6282      	str	r2, [r0, #40]	@ 0x28
 801286c:	f880 202c 	strb.w	r2, [r0, #44]	@ 0x2c
 8012870:	85c1      	strh	r1, [r0, #46]	@ 0x2e
 8012872:	8601      	strh	r1, [r0, #48]	@ 0x30
 8012874:	f880 1032 	strb.w	r1, [r0, #50]	@ 0x32
 8012878:	6004      	str	r4, [r0, #0]
 801287a:	8681      	strh	r1, [r0, #52]	@ 0x34
 801287c:	86c1      	strh	r1, [r0, #54]	@ 0x36
 801287e:	8702      	strh	r2, [r0, #56]	@ 0x38
 8012880:	8742      	strh	r2, [r0, #58]	@ 0x3a
 8012882:	bd10      	pop	{r4, pc}
 8012884:	080295cc 	.word	0x080295cc

08012888 <_ZN8touchgfx3LCD27supportDynamicBitmapDrawingENS_6Bitmap12BitmapFormatE>:
 8012888:	b510      	push	{r4, lr}
 801288a:	6803      	ldr	r3, [r0, #0]
 801288c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801288e:	460c      	mov	r4, r1
 8012890:	4798      	blx	r3
 8012892:	1b03      	subs	r3, r0, r4
 8012894:	4258      	negs	r0, r3
 8012896:	4158      	adcs	r0, r3
 8012898:	bd10      	pop	{r4, pc}
	...

0801289c <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE>:
 801289c:	4b01      	ldr	r3, [pc, #4]	@ (80128a4 <_ZN8touchgfx3LCD15setDefaultColorENS_9colortypeE+0x8>)
 801289e:	6019      	str	r1, [r3, #0]
 80128a0:	4770      	bx	lr
 80128a2:	bf00      	nop
 80128a4:	20002f5c 	.word	0x20002f5c

080128a8 <_ZN8touchgfx3LCD18drawTextureMapQuadERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 80128a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80128ac:	4696      	mov	lr, r2
 80128ae:	4605      	mov	r5, r0
 80128b0:	4614      	mov	r4, r2
 80128b2:	460e      	mov	r6, r1
 80128b4:	461f      	mov	r7, r3
 80128b6:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80128ba:	b097      	sub	sp, #92	@ 0x5c
 80128bc:	f10d 0c1c 	add.w	ip, sp, #28
 80128c0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80128c4:	f8de 3000 	ldr.w	r3, [lr]
 80128c8:	f8cc 3000 	str.w	r3, [ip]
 80128cc:	f104 0e14 	add.w	lr, r4, #20
 80128d0:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80128d4:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 80128d8:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80128dc:	f8de 3000 	ldr.w	r3, [lr]
 80128e0:	f8cc 3000 	str.w	r3, [ip]
 80128e4:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 80128e8:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 80128ec:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 80128f0:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 80128f4:	f89d 908c 	ldrb.w	r9, [sp, #140]	@ 0x8c
 80128f8:	f8bd a090 	ldrh.w	sl, [sp, #144]	@ 0x90
 80128fc:	f8bd 8088 	ldrh.w	r8, [sp, #136]	@ 0x88
 8012900:	f8de 3000 	ldr.w	r3, [lr]
 8012904:	f8cc 3000 	str.w	r3, [ip]
 8012908:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801290a:	682b      	ldr	r3, [r5, #0]
 801290c:	9201      	str	r2, [sp, #4]
 801290e:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 8012912:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012914:	9200      	str	r2, [sp, #0]
 8012916:	f8cd 8008 	str.w	r8, [sp, #8]
 801291a:	f8d3 b03c 	ldr.w	fp, [r3, #60]	@ 0x3c
 801291e:	aa07      	add	r2, sp, #28
 8012920:	463b      	mov	r3, r7
 8012922:	4631      	mov	r1, r6
 8012924:	4628      	mov	r0, r5
 8012926:	47d8      	blx	fp
 8012928:	46a6      	mov	lr, r4
 801292a:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 801292e:	f10d 0c1c 	add.w	ip, sp, #28
 8012932:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012936:	f8de 3000 	ldr.w	r3, [lr]
 801293a:	f8cc 3000 	str.w	r3, [ip]
 801293e:	f104 0e28 	add.w	lr, r4, #40	@ 0x28
 8012942:	e8be 000f 	ldmia.w	lr!, {r0, r1, r2, r3}
 8012946:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 801294a:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 801294e:	343c      	adds	r4, #60	@ 0x3c
 8012950:	f8de 3000 	ldr.w	r3, [lr]
 8012954:	f8cc 3000 	str.w	r3, [ip]
 8012958:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801295a:	f10d 0c44 	add.w	ip, sp, #68	@ 0x44
 801295e:	e8ac 000f 	stmia.w	ip!, {r0, r1, r2, r3}
 8012962:	6823      	ldr	r3, [r4, #0]
 8012964:	f8cc 3000 	str.w	r3, [ip]
 8012968:	682b      	ldr	r3, [r5, #0]
 801296a:	e9cd 9a03 	strd	r9, sl, [sp, #12]
 801296e:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8012970:	9201      	str	r2, [sp, #4]
 8012972:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 8012974:	9200      	str	r2, [sp, #0]
 8012976:	f8cd 8008 	str.w	r8, [sp, #8]
 801297a:	6bdc      	ldr	r4, [r3, #60]	@ 0x3c
 801297c:	aa07      	add	r2, sp, #28
 801297e:	463b      	mov	r3, r7
 8012980:	4631      	mov	r1, r6
 8012982:	4628      	mov	r0, r5
 8012984:	47a0      	blx	r4
 8012986:	b017      	add	sp, #92	@ 0x5c
 8012988:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801298c <_ZN8touchgfx3LCD28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 801298c:	2000      	movs	r0, #0
 801298e:	4770      	bx	lr

08012990 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht>:
 8012990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012994:	b08d      	sub	sp, #52	@ 0x34
 8012996:	4688      	mov	r8, r1
 8012998:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801299a:	f8d3 c000 	ldr.w	ip, [r3]
 801299e:	680f      	ldr	r7, [r1, #0]
 80129a0:	f8bd 4070 	ldrh.w	r4, [sp, #112]	@ 0x70
 80129a4:	ed92 4a09 	vldr	s8, [r2, #36]	@ 0x24
 80129a8:	edd2 4a0b 	vldr	s9, [r2, #44]	@ 0x2c
 80129ac:	edd3 6a07 	vldr	s13, [r3, #28]
 80129b0:	9918      	ldr	r1, [sp, #96]	@ 0x60
 80129b2:	f8dd a064 	ldr.w	sl, [sp, #100]	@ 0x64
 80129b6:	f9b1 9000 	ldrsh.w	r9, [r1]
 80129ba:	f9ba 1000 	ldrsh.w	r1, [sl]
 80129be:	edd3 1a0a 	vldr	s3, [r3, #40]	@ 0x28
 80129c2:	ed93 2a0d 	vldr	s4, [r3, #52]	@ 0x34
 80129c6:	eba7 070c 	sub.w	r7, r7, ip
 80129ca:	42bc      	cmp	r4, r7
 80129cc:	bfa8      	it	ge
 80129ce:	463c      	movge	r4, r7
 80129d0:	ee07 4a90 	vmov	s15, r4
 80129d4:	eeb8 5ae7 	vcvt.f32.s32	s10, s15
 80129d8:	edd2 7a0d 	vldr	s15, [r2, #52]	@ 0x34
 80129dc:	ee25 4a04 	vmul.f32	s8, s10, s8
 80129e0:	ee65 4a24 	vmul.f32	s9, s10, s9
 80129e4:	ee25 5a27 	vmul.f32	s10, s10, s15
 80129e8:	eef7 7a00 	vmov.f32	s15, #112	@ 0x3f800000  1.0
 80129ec:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80129f0:	eb09 0e0c 	add.w	lr, r9, ip
 80129f4:	4571      	cmp	r1, lr
 80129f6:	ee71 0aa4 	vadd.f32	s1, s3, s9
 80129fa:	ee32 1a05 	vadd.f32	s2, s4, s10
 80129fe:	ee36 0a84 	vadd.f32	s0, s13, s8
 8012a02:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012a06:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012a0a:	f340 808d 	ble.w	8012b28 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x198>
 8012a0e:	eba1 060e 	sub.w	r6, r1, lr
 8012a12:	fb96 f5f4 	sdiv	r5, r6, r4
 8012a16:	ee07 5a10 	vmov	s14, r5
 8012a1a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8012a1e:	2d00      	cmp	r5, #0
 8012a20:	fb04 6615 	mls	r6, r4, r5, r6
 8012a24:	eea7 0a04 	vfma.f32	s0, s14, s8
 8012a28:	eee7 0a24 	vfma.f32	s1, s14, s9
 8012a2c:	eea7 1a05 	vfma.f32	s2, s14, s10
 8012a30:	dd13      	ble.n	8012a5a <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xca>
 8012a32:	ee70 6a44 	vsub.f32	s13, s0, s8
 8012a36:	ee70 1ae4 	vsub.f32	s3, s1, s9
 8012a3a:	eef5 6a40 	vcmp.f32	s13, #0.0
 8012a3e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a42:	bf18      	it	ne
 8012a44:	ee87 7aa6 	vdivne.f32	s14, s15, s13
 8012a48:	ee31 2a45 	vsub.f32	s4, s2, s10
 8012a4c:	bf08      	it	eq
 8012a4e:	eeb0 7a67 	vmoveq.f32	s14, s15
 8012a52:	ee61 1a87 	vmul.f32	s3, s3, s14
 8012a56:	ee22 2a07 	vmul.f32	s4, s4, s14
 8012a5a:	fb05 f204 	mul.w	r2, r5, r4
 8012a5e:	1abf      	subs	r7, r7, r2
 8012a60:	4494      	add	ip, r2
 8012a62:	f8ba 2004 	ldrh.w	r2, [sl, #4]
 8012a66:	4411      	add	r1, r2
 8012a68:	eb09 020c 	add.w	r2, r9, ip
 8012a6c:	443a      	add	r2, r7
 8012a6e:	b209      	sxth	r1, r1
 8012a70:	428a      	cmp	r2, r1
 8012a72:	bfc4      	itt	gt
 8012a74:	eba1 0209 	subgt.w	r2, r1, r9
 8012a78:	eba2 070c 	subgt.w	r7, r2, ip
 8012a7c:	2f00      	cmp	r7, #0
 8012a7e:	dd50      	ble.n	8012b22 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0x192>
 8012a80:	fb97 f1f4 	sdiv	r1, r7, r4
 8012a84:	fb04 7211 	mls	r2, r4, r1, r7
 8012a88:	b90a      	cbnz	r2, 8012a8e <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xfe>
 8012a8a:	3901      	subs	r1, #1
 8012a8c:	4622      	mov	r2, r4
 8012a8e:	eec7 3a80 	vdiv.f32	s7, s15, s0
 8012a92:	6840      	ldr	r0, [r0, #4]
 8012a94:	900b      	str	r0, [sp, #44]	@ 0x2c
 8012a96:	f8d0 a000 	ldr.w	sl, [r0]
 8012a9a:	9817      	ldr	r0, [sp, #92]	@ 0x5c
 8012a9c:	9008      	str	r0, [sp, #32]
 8012a9e:	f89d b06c 	ldrb.w	fp, [sp, #108]	@ 0x6c
 8012aa2:	9818      	ldr	r0, [sp, #96]	@ 0x60
 8012aa4:	f8cd b024 	str.w	fp, [sp, #36]	@ 0x24
 8012aa8:	f9b0 b002 	ldrsh.w	fp, [r0, #2]
 8012aac:	695b      	ldr	r3, [r3, #20]
 8012aae:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8012ab0:	445b      	add	r3, fp
 8012ab2:	eef0 6a42 	vmov.f32	s13, s4
 8012ab6:	ee60 2aa3 	vmul.f32	s5, s1, s7
 8012aba:	ee21 3a23 	vmul.f32	s6, s2, s7
 8012abe:	ee72 7ae1 	vsub.f32	s15, s5, s3
 8012ac2:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8012ac6:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012aca:	9307      	str	r3, [sp, #28]
 8012acc:	ee17 7a90 	vmov	r7, s15
 8012ad0:	ee73 7a42 	vsub.f32	s15, s6, s4
 8012ad4:	eeb0 7a61 	vmov.f32	s14, s3
 8012ad8:	eefe 7ac8 	vcvt.s32.f32	s15, s15, #16
 8012adc:	ee16 3a90 	vmov	r3, s13
 8012ae0:	fb97 f7f4 	sdiv	r7, r7, r4
 8012ae4:	ee17 ca90 	vmov	ip, s15
 8012ae8:	eebe 7ac8 	vcvt.s32.f32	s14, s14, #16
 8012aec:	fb9c fcf4 	sdiv	ip, ip, r4
 8012af0:	fb0c 3306 	mla	r3, ip, r6, r3
 8012af4:	9302      	str	r3, [sp, #8]
 8012af6:	ee17 3a10 	vmov	r3, s14
 8012afa:	44b6      	add	lr, r6
 8012afc:	fb04 e505 	mla	r5, r4, r5, lr
 8012b00:	e9cd 7c03 	strd	r7, ip, [sp, #12]
 8012b04:	fb07 3706 	mla	r7, r7, r6, r3
 8012b08:	e9cd 8505 	strd	r8, r5, [sp, #20]
 8012b0c:	e9cd 4700 	strd	r4, r7, [sp]
 8012b10:	2900      	cmp	r1, #0
 8012b12:	bfcc      	ite	gt
 8012b14:	46a1      	movgt	r9, r4
 8012b16:	4691      	movle	r9, r2
 8012b18:	eba9 0306 	sub.w	r3, r9, r6
 8012b1c:	f8da 4008 	ldr.w	r4, [sl, #8]
 8012b20:	47a0      	blx	r4
 8012b22:	b00d      	add	sp, #52	@ 0x34
 8012b24:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012b28:	2500      	movs	r5, #0
 8012b2a:	462e      	mov	r6, r5
 8012b2c:	e799      	b.n	8012a62 <_ZN8touchgfx3LCD22drawTextureMapScanLineERKNS_14DrawingSurfaceERKNS_9GradientsEPKNS_4EdgeES9_RKNS_14TextureSurfaceERKNS_4RectESF_tht+0xd2>
	...

08012b30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht>:
 8012b30:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012b34:	b0db      	sub	sp, #364	@ 0x16c
 8012b36:	461d      	mov	r5, r3
 8012b38:	f8bd 3198 	ldrh.w	r3, [sp, #408]	@ 0x198
 8012b3c:	930a      	str	r3, [sp, #40]	@ 0x28
 8012b3e:	f89d 319c 	ldrb.w	r3, [sp, #412]	@ 0x19c
 8012b42:	930b      	str	r3, [sp, #44]	@ 0x2c
 8012b44:	f8bd 31a0 	ldrh.w	r3, [sp, #416]	@ 0x1a0
 8012b48:	9310      	str	r3, [sp, #64]	@ 0x40
 8012b4a:	6803      	ldr	r3, [r0, #0]
 8012b4c:	910f      	str	r1, [sp, #60]	@ 0x3c
 8012b4e:	6c5f      	ldr	r7, [r3, #68]	@ 0x44
 8012b50:	9009      	str	r0, [sp, #36]	@ 0x24
 8012b52:	4614      	mov	r4, r2
 8012b54:	4629      	mov	r1, r5
 8012b56:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	@ 0x28
 8012b5a:	f8dd b194 	ldr.w	fp, [sp, #404]	@ 0x194
 8012b5e:	47b8      	blx	r7
 8012b60:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012b62:	6058      	str	r0, [r3, #4]
 8012b64:	2800      	cmp	r0, #0
 8012b66:	f000 83a1 	beq.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b6a:	682b      	ldr	r3, [r5, #0]
 8012b6c:	9314      	str	r3, [sp, #80]	@ 0x50
 8012b6e:	686b      	ldr	r3, [r5, #4]
 8012b70:	9315      	str	r3, [sp, #84]	@ 0x54
 8012b72:	4bc4      	ldr	r3, [pc, #784]	@ (8012e84 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x354>)
 8012b74:	ed94 7a02 	vldr	s14, [r4, #8]
 8012b78:	7819      	ldrb	r1, [r3, #0]
 8012b7a:	e9d5 2302 	ldrd	r2, r3, [r5, #8]
 8012b7e:	eef2 7a04 	vmov.f32	s15, #36	@ 0x41200000  10.0
 8012b82:	2900      	cmp	r1, #0
 8012b84:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012b88:	bf16      	itet	ne
 8012b8a:	4619      	movne	r1, r3
 8012b8c:	4611      	moveq	r1, r2
 8012b8e:	4613      	movne	r3, r2
 8012b90:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b94:	9116      	str	r1, [sp, #88]	@ 0x58
 8012b96:	e9cd 3217 	strd	r3, r2, [sp, #92]	@ 0x5c
 8012b9a:	f240 8387 	bls.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012b9e:	ed94 7a07 	vldr	s14, [r4, #28]
 8012ba2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012ba6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012baa:	f240 837f 	bls.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bae:	ed94 7a0c 	vldr	s14, [r4, #48]	@ 0x30
 8012bb2:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8012bb6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012bba:	f240 8377 	bls.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bbe:	6822      	ldr	r2, [r4, #0]
 8012bc0:	4bb1      	ldr	r3, [pc, #708]	@ (8012e88 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x358>)
 8012bc2:	429a      	cmp	r2, r3
 8012bc4:	f2c0 8372 	blt.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bc8:	49b0      	ldr	r1, [pc, #704]	@ (8012e8c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x35c>)
 8012bca:	6963      	ldr	r3, [r4, #20]
 8012bcc:	428a      	cmp	r2, r1
 8012bce:	f300 836d 	bgt.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bd2:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012bd6:	48ae      	ldr	r0, [pc, #696]	@ (8012e90 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x360>)
 8012bd8:	33ff      	adds	r3, #255	@ 0xff
 8012bda:	4283      	cmp	r3, r0
 8012bdc:	f200 8366 	bhi.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012be0:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8012be2:	4dac      	ldr	r5, [pc, #688]	@ (8012e94 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x364>)
 8012be4:	f503 331c 	add.w	r3, r3, #159744	@ 0x27000
 8012be8:	33ff      	adds	r3, #255	@ 0xff
 8012bea:	42ab      	cmp	r3, r5
 8012bec:	f200 835e 	bhi.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bf0:	6862      	ldr	r2, [r4, #4]
 8012bf2:	f502 331c 	add.w	r3, r2, #159744	@ 0x27000
 8012bf6:	33ff      	adds	r3, #255	@ 0xff
 8012bf8:	4283      	cmp	r3, r0
 8012bfa:	f200 8357 	bhi.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012bfe:	69a1      	ldr	r1, [r4, #24]
 8012c00:	f501 331c 	add.w	r3, r1, #159744	@ 0x27000
 8012c04:	33ff      	adds	r3, #255	@ 0xff
 8012c06:	4283      	cmp	r3, r0
 8012c08:	f200 8350 	bhi.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012c0c:	6ae3      	ldr	r3, [r4, #44]	@ 0x2c
 8012c0e:	f503 301c 	add.w	r0, r3, #159744	@ 0x27000
 8012c12:	30ff      	adds	r0, #255	@ 0xff
 8012c14:	42a8      	cmp	r0, r5
 8012c16:	f200 8349 	bhi.w	80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 8012c1a:	428a      	cmp	r2, r1
 8012c1c:	f280 8110 	bge.w	8012e40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x310>
 8012c20:	429a      	cmp	r2, r3
 8012c22:	f300 8119 	bgt.w	8012e58 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x328>
 8012c26:	4299      	cmp	r1, r3
 8012c28:	f280 811d 	bge.w	8012e66 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x336>
 8012c2c:	2502      	movs	r5, #2
 8012c2e:	2701      	movs	r7, #1
 8012c30:	46a9      	mov	r9, r5
 8012c32:	46b8      	mov	r8, r7
 8012c34:	f04f 0a00 	mov.w	sl, #0
 8012c38:	4621      	mov	r1, r4
 8012c3a:	a849      	add	r0, sp, #292	@ 0x124
 8012c3c:	f003 fd3a 	bl	80166b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>
 8012c40:	4622      	mov	r2, r4
 8012c42:	4653      	mov	r3, sl
 8012c44:	a949      	add	r1, sp, #292	@ 0x124
 8012c46:	f8cd 9000 	str.w	r9, [sp]
 8012c4a:	a819      	add	r0, sp, #100	@ 0x64
 8012c4c:	f003 fe62 	bl	8016914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012c50:	4622      	mov	r2, r4
 8012c52:	4653      	mov	r3, sl
 8012c54:	a949      	add	r1, sp, #292	@ 0x124
 8012c56:	f8cd 8000 	str.w	r8, [sp]
 8012c5a:	a829      	add	r0, sp, #164	@ 0xa4
 8012c5c:	f003 fe5a 	bl	8016914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012c60:	4643      	mov	r3, r8
 8012c62:	4622      	mov	r2, r4
 8012c64:	a949      	add	r1, sp, #292	@ 0x124
 8012c66:	f8cd 9000 	str.w	r9, [sp]
 8012c6a:	a839      	add	r0, sp, #228	@ 0xe4
 8012c6c:	f003 fe52 	bl	8016914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>
 8012c70:	42af      	cmp	r7, r5
 8012c72:	bfb5      	itete	lt
 8012c74:	2300      	movlt	r3, #0
 8012c76:	2301      	movge	r3, #1
 8012c78:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8012c7a:	930e      	strge	r3, [sp, #56]	@ 0x38
 8012c7c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8012c7e:	e893 0003 	ldmia.w	r3, {r0, r1}
 8012c82:	af12      	add	r7, sp, #72	@ 0x48
 8012c84:	bfb9      	ittee	lt
 8012c86:	ad29      	addlt	r5, sp, #164	@ 0xa4
 8012c88:	ac19      	addlt	r4, sp, #100	@ 0x64
 8012c8a:	ad19      	addge	r5, sp, #100	@ 0x64
 8012c8c:	ac29      	addge	r4, sp, #164	@ 0xa4
 8012c8e:	e887 0003 	stmia.w	r7, {r0, r1}
 8012c92:	b928      	cbnz	r0, 8012ca0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x170>
 8012c94:	4b80      	ldr	r3, [pc, #512]	@ (8012e98 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x368>)
 8012c96:	6818      	ldr	r0, [r3, #0]
 8012c98:	6803      	ldr	r3, [r0, #0]
 8012c9a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8012c9c:	4798      	blx	r3
 8012c9e:	6038      	str	r0, [r7, #0]
 8012ca0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012ca2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012ca6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012caa:	930c      	str	r3, [sp, #48]	@ 0x30
 8012cac:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012cae:	6963      	ldr	r3, [r4, #20]
 8012cb0:	9a2f      	ldr	r2, [sp, #188]	@ 0xbc
 8012cb2:	440b      	add	r3, r1
 8012cb4:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012cb8:	4408      	add	r0, r1
 8012cba:	b200      	sxth	r0, r0
 8012cbc:	4283      	cmp	r3, r0
 8012cbe:	900d      	str	r0, [sp, #52]	@ 0x34
 8012cc0:	f280 80dd 	bge.w	8012e7e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x34e>
 8012cc4:	428b      	cmp	r3, r1
 8012cc6:	da08      	bge.n	8012cda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012cc8:	2a00      	cmp	r2, #0
 8012cca:	dd06      	ble.n	8012cda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012ccc:	1acb      	subs	r3, r1, r3
 8012cce:	429a      	cmp	r2, r3
 8012cd0:	f2c0 80e4 	blt.w	8012e9c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36c>
 8012cd4:	2b00      	cmp	r3, #0
 8012cd6:	f300 80e2 	bgt.w	8012e9e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x36e>
 8012cda:	6967      	ldr	r7, [r4, #20]
 8012cdc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8012cde:	443b      	add	r3, r7
 8012ce0:	461f      	mov	r7, r3
 8012ce2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8012ce4:	1bdf      	subs	r7, r3, r7
 8012ce6:	4297      	cmp	r7, r2
 8012ce8:	bfa8      	it	ge
 8012cea:	4617      	movge	r7, r2
 8012cec:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 8012cf0:	2f00      	cmp	r7, #0
 8012cf2:	f340 8166 	ble.w	8012fc2 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x492>
 8012cf6:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012cf8:	6829      	ldr	r1, [r5, #0]
 8012cfa:	f9b3 2000 	ldrsh.w	r2, [r3]
 8012cfe:	f9bb 3000 	ldrsh.w	r3, [fp]
 8012d02:	6820      	ldr	r0, [r4, #0]
 8012d04:	4411      	add	r1, r2
 8012d06:	4299      	cmp	r1, r3
 8012d08:	dd1a      	ble.n	8012d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012d0a:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 8012d0e:	440b      	add	r3, r1
 8012d10:	4402      	add	r2, r0
 8012d12:	b21b      	sxth	r3, r3
 8012d14:	429a      	cmp	r2, r3
 8012d16:	dc13      	bgt.n	8012d40 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x210>
 8012d18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8012d1a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8012d1c:	681b      	ldr	r3, [r3, #0]
 8012d1e:	9206      	str	r2, [sp, #24]
 8012d20:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8012d22:	9205      	str	r2, [sp, #20]
 8012d24:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8012d26:	9500      	str	r5, [sp, #0]
 8012d28:	e9cd b203 	strd	fp, r2, [sp, #12]
 8012d2c:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 8012d2e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8012d30:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8012d34:	a912      	add	r1, sp, #72	@ 0x48
 8012d36:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8012d3a:	aa49      	add	r2, sp, #292	@ 0x124
 8012d3c:	4623      	mov	r3, r4
 8012d3e:	47c8      	blx	r9
 8012d40:	e9d4 2300 	ldrd	r2, r3, [r4]
 8012d44:	441a      	add	r2, r3
 8012d46:	6963      	ldr	r3, [r4, #20]
 8012d48:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 8012d4c:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 8012d50:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8012d54:	68a1      	ldr	r1, [r4, #8]
 8012d56:	ed94 6a08 	vldr	s12, [r4, #32]
 8012d5a:	6022      	str	r2, [r4, #0]
 8012d5c:	3301      	adds	r3, #1
 8012d5e:	6163      	str	r3, [r4, #20]
 8012d60:	69a3      	ldr	r3, [r4, #24]
 8012d62:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012d66:	3b01      	subs	r3, #1
 8012d68:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 8012d6c:	61a3      	str	r3, [r4, #24]
 8012d6e:	6923      	ldr	r3, [r4, #16]
 8012d70:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012d74:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012d78:	edd4 6a07 	vldr	s13, [r4, #28]
 8012d7c:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012d80:	440b      	add	r3, r1
 8012d82:	68e1      	ldr	r1, [r4, #12]
 8012d84:	6123      	str	r3, [r4, #16]
 8012d86:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012d8a:	428b      	cmp	r3, r1
 8012d8c:	edc4 6a07 	vstr	s13, [r4, #28]
 8012d90:	db15      	blt.n	8012dbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x28e>
 8012d92:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 8012d96:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012d9a:	3201      	adds	r2, #1
 8012d9c:	edc4 6a07 	vstr	s13, [r4, #28]
 8012da0:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 8012da4:	6022      	str	r2, [r4, #0]
 8012da6:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012daa:	1a5b      	subs	r3, r3, r1
 8012dac:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 8012db0:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 8012db4:	6123      	str	r3, [r4, #16]
 8012db6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012dba:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 8012dbe:	e9d5 2300 	ldrd	r2, r3, [r5]
 8012dc2:	441a      	add	r2, r3
 8012dc4:	696b      	ldr	r3, [r5, #20]
 8012dc6:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 8012dca:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 8012dce:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8012dd2:	68a9      	ldr	r1, [r5, #8]
 8012dd4:	ed95 6a08 	vldr	s12, [r5, #32]
 8012dd8:	602a      	str	r2, [r5, #0]
 8012dda:	3301      	adds	r3, #1
 8012ddc:	616b      	str	r3, [r5, #20]
 8012dde:	69ab      	ldr	r3, [r5, #24]
 8012de0:	ee37 7a27 	vadd.f32	s14, s14, s15
 8012de4:	3b01      	subs	r3, #1
 8012de6:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8012dea:	61ab      	str	r3, [r5, #24]
 8012dec:	692b      	ldr	r3, [r5, #16]
 8012dee:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012df2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8012df6:	edd5 6a07 	vldr	s13, [r5, #28]
 8012dfa:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012dfe:	440b      	add	r3, r1
 8012e00:	68e9      	ldr	r1, [r5, #12]
 8012e02:	612b      	str	r3, [r5, #16]
 8012e04:	ee76 6a86 	vadd.f32	s13, s13, s12
 8012e08:	428b      	cmp	r3, r1
 8012e0a:	edc5 6a07 	vstr	s13, [r5, #28]
 8012e0e:	db15      	blt.n	8012e3c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x30c>
 8012e10:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8012e14:	ee76 6a26 	vadd.f32	s13, s12, s13
 8012e18:	3201      	adds	r2, #1
 8012e1a:	edc5 6a07 	vstr	s13, [r5, #28]
 8012e1e:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8012e22:	602a      	str	r2, [r5, #0]
 8012e24:	ee36 7a87 	vadd.f32	s14, s13, s14
 8012e28:	1a5b      	subs	r3, r3, r1
 8012e2a:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8012e2e:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8012e32:	612b      	str	r3, [r5, #16]
 8012e34:	ee77 7a27 	vadd.f32	s15, s14, s15
 8012e38:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 8012e3c:	3f01      	subs	r7, #1
 8012e3e:	e757      	b.n	8012cf0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1c0>
 8012e40:	4299      	cmp	r1, r3
 8012e42:	dc13      	bgt.n	8012e6c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x33c>
 8012e44:	429a      	cmp	r2, r3
 8012e46:	da14      	bge.n	8012e72 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x342>
 8012e48:	2502      	movs	r5, #2
 8012e4a:	2703      	movs	r7, #3
 8012e4c:	46a9      	mov	r9, r5
 8012e4e:	f04f 0800 	mov.w	r8, #0
 8012e52:	f04f 0a01 	mov.w	sl, #1
 8012e56:	e6ef      	b.n	8012c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012e58:	2501      	movs	r5, #1
 8012e5a:	2700      	movs	r7, #0
 8012e5c:	46a9      	mov	r9, r5
 8012e5e:	46b8      	mov	r8, r7
 8012e60:	f04f 0a02 	mov.w	sl, #2
 8012e64:	e6e8      	b.n	8012c38 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x108>
 8012e66:	2501      	movs	r5, #1
 8012e68:	2702      	movs	r7, #2
 8012e6a:	e6e1      	b.n	8012c30 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x100>
 8012e6c:	2500      	movs	r5, #0
 8012e6e:	2701      	movs	r7, #1
 8012e70:	e7f4      	b.n	8012e5c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x32c>
 8012e72:	2702      	movs	r7, #2
 8012e74:	2503      	movs	r5, #3
 8012e76:	f04f 0900 	mov.w	r9, #0
 8012e7a:	46b8      	mov	r8, r7
 8012e7c:	e7e9      	b.n	8012e52 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x322>
 8012e7e:	4613      	mov	r3, r2
 8012e80:	e728      	b.n	8012cd4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1a4>
 8012e82:	bf00      	nop
 8012e84:	20002f4c 	.word	0x20002f4c
 8012e88:	fffd8f01 	.word	0xfffd8f01
 8012e8c:	00027100 	.word	0x00027100
 8012e90:	0004e1ff 	.word	0x0004e1ff
 8012e94:	0004e1fe 	.word	0x0004e1fe
 8012e98:	20002f54 	.word	0x20002f54
 8012e9c:	4613      	mov	r3, r2
 8012e9e:	992b      	ldr	r1, [sp, #172]	@ 0xac
 8012ea0:	9111      	str	r1, [sp, #68]	@ 0x44
 8012ea2:	e9dd 0a29 	ldrd	r0, sl, [sp, #164]	@ 0xa4
 8012ea6:	e9dd 812c 	ldrd	r8, r1, [sp, #176]	@ 0xb0
 8012eaa:	9f2e      	ldr	r7, [sp, #184]	@ 0xb8
 8012eac:	eddd 4a34 	vldr	s9, [sp, #208]	@ 0xd0
 8012eb0:	ed9d 7a33 	vldr	s14, [sp, #204]	@ 0xcc
 8012eb4:	ed9d 4a37 	vldr	s8, [sp, #220]	@ 0xdc
 8012eb8:	eddd 7a36 	vldr	s15, [sp, #216]	@ 0xd8
 8012ebc:	eddd 3a31 	vldr	s7, [sp, #196]	@ 0xc4
 8012ec0:	eddd 6a30 	vldr	s13, [sp, #192]	@ 0xc0
 8012ec4:	ed9d 5a32 	vldr	s10, [sp, #200]	@ 0xc8
 8012ec8:	eddd 5a35 	vldr	s11, [sp, #212]	@ 0xd4
 8012ecc:	ed9d 6a38 	vldr	s12, [sp, #224]	@ 0xe0
 8012ed0:	469e      	mov	lr, r3
 8012ed2:	469c      	mov	ip, r3
 8012ed4:	f04f 0900 	mov.w	r9, #0
 8012ed8:	f1bc 0f00 	cmp.w	ip, #0
 8012edc:	d147      	bne.n	8012f6e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x43e>
 8012ede:	eb03 0c07 	add.w	ip, r3, r7
 8012ee2:	1ad7      	subs	r7, r2, r3
 8012ee4:	f1b9 0f00 	cmp.w	r9, #0
 8012ee8:	d009      	beq.n	8012efe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3ce>
 8012eea:	e9cd c72e 	strd	ip, r7, [sp, #184]	@ 0xb8
 8012eee:	9029      	str	r0, [sp, #164]	@ 0xa4
 8012ef0:	ed8d 7a33 	vstr	s14, [sp, #204]	@ 0xcc
 8012ef4:	edcd 7a36 	vstr	s15, [sp, #216]	@ 0xd8
 8012ef8:	edcd 6a30 	vstr	s13, [sp, #192]	@ 0xc0
 8012efc:	912d      	str	r1, [sp, #180]	@ 0xb4
 8012efe:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 8012f00:	9111      	str	r1, [sp, #68]	@ 0x44
 8012f02:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 8012f06:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 8012f0a:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 8012f0e:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 8012f12:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 8012f16:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 8012f1a:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 8012f1e:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 8012f22:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8012f26:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8012f2a:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 8012f2e:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 8012f32:	f04f 0800 	mov.w	r8, #0
 8012f36:	f1be 0f00 	cmp.w	lr, #0
 8012f3a:	d031      	beq.n	8012fa0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x470>
 8012f3c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012f3e:	4431      	add	r1, r6
 8012f40:	4549      	cmp	r1, r9
 8012f42:	4450      	add	r0, sl
 8012f44:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8012f48:	ee37 7a04 	vadd.f32	s14, s14, s8
 8012f4c:	ee77 7aa3 	vadd.f32	s15, s15, s7
 8012f50:	db08      	blt.n	8012f64 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x434>
 8012f52:	ee77 7a85 	vadd.f32	s15, s15, s10
 8012f56:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8012f5a:	ee37 7a06 	vadd.f32	s14, s14, s12
 8012f5e:	3001      	adds	r0, #1
 8012f60:	eba1 0109 	sub.w	r1, r1, r9
 8012f64:	f10e 3eff 	add.w	lr, lr, #4294967295
 8012f68:	f04f 0801 	mov.w	r8, #1
 8012f6c:	e7e3      	b.n	8012f36 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x406>
 8012f6e:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8012f70:	4431      	add	r1, r6
 8012f72:	4541      	cmp	r1, r8
 8012f74:	4450      	add	r0, sl
 8012f76:	ee37 7a24 	vadd.f32	s14, s14, s9
 8012f7a:	ee77 7a84 	vadd.f32	s15, s15, s8
 8012f7e:	ee76 6aa3 	vadd.f32	s13, s13, s7
 8012f82:	db08      	blt.n	8012f96 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x466>
 8012f84:	ee76 6a85 	vadd.f32	s13, s13, s10
 8012f88:	ee37 7a25 	vadd.f32	s14, s14, s11
 8012f8c:	ee77 7a86 	vadd.f32	s15, s15, s12
 8012f90:	3001      	adds	r0, #1
 8012f92:	eba1 0108 	sub.w	r1, r1, r8
 8012f96:	f10c 3cff 	add.w	ip, ip, #4294967295
 8012f9a:	f04f 0901 	mov.w	r9, #1
 8012f9e:	e79b      	b.n	8012ed8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x3a8>
 8012fa0:	449c      	add	ip, r3
 8012fa2:	1aff      	subs	r7, r7, r3
 8012fa4:	f1b8 0f00 	cmp.w	r8, #0
 8012fa8:	d009      	beq.n	8012fbe <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x48e>
 8012faa:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8012fae:	9019      	str	r0, [sp, #100]	@ 0x64
 8012fb0:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 8012fb4:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8012fb8:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8012fbc:	911d      	str	r1, [sp, #116]	@ 0x74
 8012fbe:	1ad2      	subs	r2, r2, r3
 8012fc0:	e68b      	b.n	8012cda <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x1aa>
 8012fc2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8012fc4:	9a3f      	ldr	r2, [sp, #252]	@ 0xfc
 8012fc6:	2b00      	cmp	r3, #0
 8012fc8:	f000 80d1 	beq.w	801316e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63e>
 8012fcc:	ad19      	add	r5, sp, #100	@ 0x64
 8012fce:	ac39      	add	r4, sp, #228	@ 0xe4
 8012fd0:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8012fd2:	f8bb 0006 	ldrh.w	r0, [fp, #6]
 8012fd6:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 8012fda:	930c      	str	r3, [sp, #48]	@ 0x30
 8012fdc:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8012fde:	6963      	ldr	r3, [r4, #20]
 8012fe0:	440b      	add	r3, r1
 8012fe2:	f9bb 1002 	ldrsh.w	r1, [fp, #2]
 8012fe6:	4408      	add	r0, r1
 8012fe8:	b200      	sxth	r0, r0
 8012fea:	4283      	cmp	r3, r0
 8012fec:	900d      	str	r0, [sp, #52]	@ 0x34
 8012fee:	f280 80c1 	bge.w	8013174 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x644>
 8012ff2:	428b      	cmp	r3, r1
 8012ff4:	da08      	bge.n	8013008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012ff6:	2a00      	cmp	r2, #0
 8012ff8:	dd06      	ble.n	8013008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 8012ffa:	1acb      	subs	r3, r1, r3
 8012ffc:	429a      	cmp	r2, r3
 8012ffe:	f2c0 80bb 	blt.w	8013178 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x648>
 8013002:	2b00      	cmp	r3, #0
 8013004:	f300 80b9 	bgt.w	801317a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x64a>
 8013008:	6967      	ldr	r7, [r4, #20]
 801300a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801300c:	443b      	add	r3, r7
 801300e:	461f      	mov	r7, r3
 8013010:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8013012:	1bdf      	subs	r7, r3, r7
 8013014:	4297      	cmp	r7, r2
 8013016:	bfa8      	it	ge
 8013018:	4617      	movge	r7, r2
 801301a:	f10d 0850 	add.w	r8, sp, #80	@ 0x50
 801301e:	2f00      	cmp	r7, #0
 8013020:	f340 813c 	ble.w	801329c <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x76c>
 8013024:	9b64      	ldr	r3, [sp, #400]	@ 0x190
 8013026:	6829      	ldr	r1, [r5, #0]
 8013028:	f9b3 2000 	ldrsh.w	r2, [r3]
 801302c:	f9bb 3000 	ldrsh.w	r3, [fp]
 8013030:	6820      	ldr	r0, [r4, #0]
 8013032:	4411      	add	r1, r2
 8013034:	4299      	cmp	r1, r3
 8013036:	dd1a      	ble.n	801306e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013038:	f8bb 1004 	ldrh.w	r1, [fp, #4]
 801303c:	440b      	add	r3, r1
 801303e:	4402      	add	r2, r0
 8013040:	b21b      	sxth	r3, r3
 8013042:	429a      	cmp	r2, r3
 8013044:	dc13      	bgt.n	801306e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x53e>
 8013046:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013048:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801304a:	681b      	ldr	r3, [r3, #0]
 801304c:	9206      	str	r2, [sp, #24]
 801304e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8013050:	9205      	str	r2, [sp, #20]
 8013052:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8013054:	9500      	str	r5, [sp, #0]
 8013056:	e9cd b203 	strd	fp, r2, [sp, #12]
 801305a:	9a64      	ldr	r2, [sp, #400]	@ 0x190
 801305c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 801305e:	e9cd 8201 	strd	r8, r2, [sp, #4]
 8013062:	a912      	add	r1, sp, #72	@ 0x48
 8013064:	f8d3 9048 	ldr.w	r9, [r3, #72]	@ 0x48
 8013068:	aa49      	add	r2, sp, #292	@ 0x124
 801306a:	4623      	mov	r3, r4
 801306c:	47c8      	blx	r9
 801306e:	e9d4 2300 	ldrd	r2, r3, [r4]
 8013072:	441a      	add	r2, r3
 8013074:	6963      	ldr	r3, [r4, #20]
 8013076:	ed94 7a0a 	vldr	s14, [r4, #40]	@ 0x28
 801307a:	edd4 7a0b 	vldr	s15, [r4, #44]	@ 0x2c
 801307e:	edd4 6a0e 	vldr	s13, [r4, #56]	@ 0x38
 8013082:	68a1      	ldr	r1, [r4, #8]
 8013084:	ed94 6a08 	vldr	s12, [r4, #32]
 8013088:	6022      	str	r2, [r4, #0]
 801308a:	3301      	adds	r3, #1
 801308c:	6163      	str	r3, [r4, #20]
 801308e:	69a3      	ldr	r3, [r4, #24]
 8013090:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013094:	3b01      	subs	r3, #1
 8013096:	edd4 7a0d 	vldr	s15, [r4, #52]	@ 0x34
 801309a:	61a3      	str	r3, [r4, #24]
 801309c:	6923      	ldr	r3, [r4, #16]
 801309e:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80130a2:	ee77 7aa6 	vadd.f32	s15, s15, s13
 80130a6:	edd4 6a07 	vldr	s13, [r4, #28]
 80130aa:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80130ae:	440b      	add	r3, r1
 80130b0:	68e1      	ldr	r1, [r4, #12]
 80130b2:	6123      	str	r3, [r4, #16]
 80130b4:	ee76 6a86 	vadd.f32	s13, s13, s12
 80130b8:	428b      	cmp	r3, r1
 80130ba:	edc4 6a07 	vstr	s13, [r4, #28]
 80130be:	db15      	blt.n	80130ec <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x5bc>
 80130c0:	ed94 6a09 	vldr	s12, [r4, #36]	@ 0x24
 80130c4:	ee76 6a26 	vadd.f32	s13, s12, s13
 80130c8:	3201      	adds	r2, #1
 80130ca:	edc4 6a07 	vstr	s13, [r4, #28]
 80130ce:	edd4 6a0c 	vldr	s13, [r4, #48]	@ 0x30
 80130d2:	6022      	str	r2, [r4, #0]
 80130d4:	ee36 7a87 	vadd.f32	s14, s13, s14
 80130d8:	1a5b      	subs	r3, r3, r1
 80130da:	ed84 7a0a 	vstr	s14, [r4, #40]	@ 0x28
 80130de:	ed94 7a0f 	vldr	s14, [r4, #60]	@ 0x3c
 80130e2:	6123      	str	r3, [r4, #16]
 80130e4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80130e8:	edc4 7a0d 	vstr	s15, [r4, #52]	@ 0x34
 80130ec:	e9d5 2300 	ldrd	r2, r3, [r5]
 80130f0:	441a      	add	r2, r3
 80130f2:	696b      	ldr	r3, [r5, #20]
 80130f4:	ed95 7a0a 	vldr	s14, [r5, #40]	@ 0x28
 80130f8:	edd5 7a0b 	vldr	s15, [r5, #44]	@ 0x2c
 80130fc:	edd5 6a0e 	vldr	s13, [r5, #56]	@ 0x38
 8013100:	68a9      	ldr	r1, [r5, #8]
 8013102:	ed95 6a08 	vldr	s12, [r5, #32]
 8013106:	602a      	str	r2, [r5, #0]
 8013108:	3301      	adds	r3, #1
 801310a:	616b      	str	r3, [r5, #20]
 801310c:	69ab      	ldr	r3, [r5, #24]
 801310e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8013112:	3b01      	subs	r3, #1
 8013114:	edd5 7a0d 	vldr	s15, [r5, #52]	@ 0x34
 8013118:	61ab      	str	r3, [r5, #24]
 801311a:	692b      	ldr	r3, [r5, #16]
 801311c:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 8013120:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8013124:	edd5 6a07 	vldr	s13, [r5, #28]
 8013128:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801312c:	440b      	add	r3, r1
 801312e:	68e9      	ldr	r1, [r5, #12]
 8013130:	612b      	str	r3, [r5, #16]
 8013132:	ee76 6a86 	vadd.f32	s13, s13, s12
 8013136:	428b      	cmp	r3, r1
 8013138:	edc5 6a07 	vstr	s13, [r5, #28]
 801313c:	db15      	blt.n	801316a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x63a>
 801313e:	ed95 6a09 	vldr	s12, [r5, #36]	@ 0x24
 8013142:	ee76 6a26 	vadd.f32	s13, s12, s13
 8013146:	3201      	adds	r2, #1
 8013148:	edc5 6a07 	vstr	s13, [r5, #28]
 801314c:	edd5 6a0c 	vldr	s13, [r5, #48]	@ 0x30
 8013150:	602a      	str	r2, [r5, #0]
 8013152:	ee36 7a87 	vadd.f32	s14, s13, s14
 8013156:	1a5b      	subs	r3, r3, r1
 8013158:	ed85 7a0a 	vstr	s14, [r5, #40]	@ 0x28
 801315c:	ed95 7a0f 	vldr	s14, [r5, #60]	@ 0x3c
 8013160:	612b      	str	r3, [r5, #16]
 8013162:	ee77 7a27 	vadd.f32	s15, s14, s15
 8013166:	edc5 7a0d 	vstr	s15, [r5, #52]	@ 0x34
 801316a:	3f01      	subs	r7, #1
 801316c:	e757      	b.n	801301e <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4ee>
 801316e:	ad39      	add	r5, sp, #228	@ 0xe4
 8013170:	ac19      	add	r4, sp, #100	@ 0x64
 8013172:	e72d      	b.n	8012fd0 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4a0>
 8013174:	4613      	mov	r3, r2
 8013176:	e744      	b.n	8013002 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d2>
 8013178:	4613      	mov	r3, r2
 801317a:	e9dd 0a39 	ldrd	r0, sl, [sp, #228]	@ 0xe4
 801317e:	9e3b      	ldr	r6, [sp, #236]	@ 0xec
 8013180:	f8dd c0f8 	ldr.w	ip, [sp, #248]	@ 0xf8
 8013184:	ed9d 7a43 	vldr	s14, [sp, #268]	@ 0x10c
 8013188:	eddd 4a44 	vldr	s9, [sp, #272]	@ 0x110
 801318c:	eddd 7a46 	vldr	s15, [sp, #280]	@ 0x118
 8013190:	ed9d 4a47 	vldr	s8, [sp, #284]	@ 0x11c
 8013194:	eddd 6a40 	vldr	s13, [sp, #256]	@ 0x100
 8013198:	eddd 3a41 	vldr	s7, [sp, #260]	@ 0x104
 801319c:	993d      	ldr	r1, [sp, #244]	@ 0xf4
 801319e:	f8dd 80f0 	ldr.w	r8, [sp, #240]	@ 0xf0
 80131a2:	ed9d 5a42 	vldr	s10, [sp, #264]	@ 0x108
 80131a6:	eddd 5a45 	vldr	s11, [sp, #276]	@ 0x114
 80131aa:	ed9d 6a48 	vldr	s12, [sp, #288]	@ 0x120
 80131ae:	960e      	str	r6, [sp, #56]	@ 0x38
 80131b0:	469e      	mov	lr, r3
 80131b2:	461f      	mov	r7, r3
 80131b4:	f04f 0900 	mov.w	r9, #0
 80131b8:	2f00      	cmp	r7, #0
 80131ba:	d146      	bne.n	801324a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x71a>
 80131bc:	449c      	add	ip, r3
 80131be:	1ad7      	subs	r7, r2, r3
 80131c0:	f1b9 0f00 	cmp.w	r9, #0
 80131c4:	d009      	beq.n	80131da <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6aa>
 80131c6:	e9cd c73e 	strd	ip, r7, [sp, #248]	@ 0xf8
 80131ca:	9039      	str	r0, [sp, #228]	@ 0xe4
 80131cc:	913d      	str	r1, [sp, #244]	@ 0xf4
 80131ce:	edcd 6a40 	vstr	s13, [sp, #256]	@ 0x100
 80131d2:	ed8d 7a43 	vstr	s14, [sp, #268]	@ 0x10c
 80131d6:	edcd 7a46 	vstr	s15, [sp, #280]	@ 0x118
 80131da:	991b      	ldr	r1, [sp, #108]	@ 0x6c
 80131dc:	910e      	str	r1, [sp, #56]	@ 0x38
 80131de:	e9dd 0a19 	ldrd	r0, sl, [sp, #100]	@ 0x64
 80131e2:	e9dd c71e 	ldrd	ip, r7, [sp, #120]	@ 0x78
 80131e6:	e9dd 911c 	ldrd	r9, r1, [sp, #112]	@ 0x70
 80131ea:	eddd 4a24 	vldr	s9, [sp, #144]	@ 0x90
 80131ee:	eddd 6a23 	vldr	s13, [sp, #140]	@ 0x8c
 80131f2:	ed9d 4a27 	vldr	s8, [sp, #156]	@ 0x9c
 80131f6:	ed9d 7a26 	vldr	s14, [sp, #152]	@ 0x98
 80131fa:	eddd 3a21 	vldr	s7, [sp, #132]	@ 0x84
 80131fe:	eddd 7a20 	vldr	s15, [sp, #128]	@ 0x80
 8013202:	ed9d 5a22 	vldr	s10, [sp, #136]	@ 0x88
 8013206:	eddd 5a25 	vldr	s11, [sp, #148]	@ 0x94
 801320a:	ed9d 6a28 	vldr	s12, [sp, #160]	@ 0xa0
 801320e:	f04f 0800 	mov.w	r8, #0
 8013212:	f1be 0f00 	cmp.w	lr, #0
 8013216:	d030      	beq.n	801327a <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x74a>
 8013218:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801321a:	4431      	add	r1, r6
 801321c:	4549      	cmp	r1, r9
 801321e:	4450      	add	r0, sl
 8013220:	ee76 6aa4 	vadd.f32	s13, s13, s9
 8013224:	ee37 7a04 	vadd.f32	s14, s14, s8
 8013228:	ee77 7aa3 	vadd.f32	s15, s15, s7
 801322c:	db08      	blt.n	8013240 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x710>
 801322e:	ee77 7a85 	vadd.f32	s15, s15, s10
 8013232:	ee76 6aa5 	vadd.f32	s13, s13, s11
 8013236:	ee37 7a06 	vadd.f32	s14, s14, s12
 801323a:	3001      	adds	r0, #1
 801323c:	eba1 0109 	sub.w	r1, r1, r9
 8013240:	f10e 3eff 	add.w	lr, lr, #4294967295
 8013244:	f04f 0801 	mov.w	r8, #1
 8013248:	e7e3      	b.n	8013212 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x6e2>
 801324a:	9e0e      	ldr	r6, [sp, #56]	@ 0x38
 801324c:	4431      	add	r1, r6
 801324e:	4541      	cmp	r1, r8
 8013250:	4450      	add	r0, sl
 8013252:	ee37 7a24 	vadd.f32	s14, s14, s9
 8013256:	ee77 7a84 	vadd.f32	s15, s15, s8
 801325a:	ee76 6aa3 	vadd.f32	s13, s13, s7
 801325e:	db08      	blt.n	8013272 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x742>
 8013260:	ee76 6a85 	vadd.f32	s13, s13, s10
 8013264:	ee37 7a25 	vadd.f32	s14, s14, s11
 8013268:	ee77 7a86 	vadd.f32	s15, s15, s12
 801326c:	3001      	adds	r0, #1
 801326e:	eba1 0108 	sub.w	r1, r1, r8
 8013272:	3f01      	subs	r7, #1
 8013274:	f04f 0901 	mov.w	r9, #1
 8013278:	e79e      	b.n	80131b8 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x688>
 801327a:	449c      	add	ip, r3
 801327c:	1aff      	subs	r7, r7, r3
 801327e:	f1b8 0f00 	cmp.w	r8, #0
 8013282:	d009      	beq.n	8013298 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x768>
 8013284:	e9cd c71e 	strd	ip, r7, [sp, #120]	@ 0x78
 8013288:	9019      	str	r0, [sp, #100]	@ 0x64
 801328a:	edcd 6a23 	vstr	s13, [sp, #140]	@ 0x8c
 801328e:	ed8d 7a26 	vstr	s14, [sp, #152]	@ 0x98
 8013292:	edcd 7a20 	vstr	s15, [sp, #128]	@ 0x80
 8013296:	911d      	str	r1, [sp, #116]	@ 0x74
 8013298:	1ad2      	subs	r2, r2, r3
 801329a:	e6b5      	b.n	8013008 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x4d8>
 801329c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801329e:	681b      	ldr	r3, [r3, #0]
 80132a0:	b923      	cbnz	r3, 80132ac <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x77c>
 80132a2:	4b04      	ldr	r3, [pc, #16]	@ (80132b4 <_ZN8touchgfx3LCD22drawTextureMapTriangleERKNS_14DrawingSurfaceEPKNS_7Point3DERKNS_14TextureSurfaceERKNS_4RectESC_tht+0x784>)
 80132a4:	6818      	ldr	r0, [r3, #0]
 80132a6:	6803      	ldr	r3, [r0, #0]
 80132a8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80132aa:	4798      	blx	r3
 80132ac:	b05b      	add	sp, #364	@ 0x16c
 80132ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80132b2:	bf00      	nop
 80132b4:	20002f54 	.word	0x20002f54

080132b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>:
 80132b8:	b570      	push	{r4, r5, r6, lr}
 80132ba:	4604      	mov	r4, r0
 80132bc:	f89d 601c 	ldrb.w	r6, [sp, #28]
 80132c0:	9805      	ldr	r0, [sp, #20]
 80132c2:	6061      	str	r1, [r4, #4]
 80132c4:	2500      	movs	r5, #0
 80132c6:	f89d 1010 	ldrb.w	r1, [sp, #16]
 80132ca:	8263      	strh	r3, [r4, #18]
 80132cc:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80132d0:	8025      	strh	r5, [r4, #0]
 80132d2:	7221      	strb	r1, [r4, #8]
 80132d4:	7266      	strb	r6, [r4, #9]
 80132d6:	60e0      	str	r0, [r4, #12]
 80132d8:	8222      	strh	r2, [r4, #16]
 80132da:	82a3      	strh	r3, [r4, #20]
 80132dc:	82e5      	strh	r5, [r4, #22]
 80132de:	8325      	strh	r5, [r4, #24]
 80132e0:	8365      	strh	r5, [r4, #26]
 80132e2:	83a5      	strh	r5, [r4, #28]
 80132e4:	83e5      	strh	r5, [r4, #30]
 80132e6:	8425      	strh	r5, [r4, #32]
 80132e8:	f884 5022 	strb.w	r5, [r4, #34]	@ 0x22
 80132ec:	b32e      	cbz	r6, 801333a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80132ee:	6803      	ldr	r3, [r0, #0]
 80132f0:	695b      	ldr	r3, [r3, #20]
 80132f2:	4798      	blx	r3
 80132f4:	4606      	mov	r6, r0
 80132f6:	b300      	cbz	r0, 801333a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 80132f8:	68e0      	ldr	r0, [r4, #12]
 80132fa:	6803      	ldr	r3, [r0, #0]
 80132fc:	4631      	mov	r1, r6
 80132fe:	68db      	ldr	r3, [r3, #12]
 8013300:	4798      	blx	r3
 8013302:	4605      	mov	r5, r0
 8013304:	b1c8      	cbz	r0, 801333a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 8013306:	7b43      	ldrb	r3, [r0, #13]
 8013308:	7a82      	ldrb	r2, [r0, #10]
 801330a:	005b      	lsls	r3, r3, #1
 801330c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8013310:	4313      	orrs	r3, r2
 8013312:	8423      	strh	r3, [r4, #32]
 8013314:	7a63      	ldrb	r3, [r4, #9]
 8013316:	2b06      	cmp	r3, #6
 8013318:	d10f      	bne.n	801333a <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE+0x82>
 801331a:	68e0      	ldr	r0, [r4, #12]
 801331c:	6803      	ldr	r3, [r0, #0]
 801331e:	462a      	mov	r2, r5
 8013320:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8013322:	4631      	mov	r1, r6
 8013324:	4798      	blx	r3
 8013326:	7b6b      	ldrb	r3, [r5, #13]
 8013328:	005b      	lsls	r3, r3, #1
 801332a:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 801332e:	7aab      	ldrb	r3, [r5, #10]
 8013330:	4313      	orrs	r3, r2
 8013332:	4418      	add	r0, r3
 8013334:	8c23      	ldrh	r3, [r4, #32]
 8013336:	4418      	add	r0, r3
 8013338:	8420      	strh	r0, [r4, #32]
 801333a:	4620      	mov	r0, r4
 801333c:	bd70      	pop	{r4, r5, r6, pc}

0801333e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>:
 801333e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013342:	2400      	movs	r4, #0
 8013344:	b085      	sub	sp, #20
 8013346:	4681      	mov	r9, r0
 8013348:	4688      	mov	r8, r1
 801334a:	4692      	mov	sl, r2
 801334c:	469b      	mov	fp, r3
 801334e:	4627      	mov	r7, r4
 8013350:	4625      	mov	r5, r4
 8013352:	4626      	mov	r6, r4
 8013354:	4554      	cmp	r4, sl
 8013356:	da2a      	bge.n	80133ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013358:	2300      	movs	r3, #0
 801335a:	9303      	str	r3, [sp, #12]
 801335c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013360:	429d      	cmp	r5, r3
 8013362:	d004      	beq.n	801336e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x30>
 8013364:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013368:	429d      	cmp	r5, r3
 801336a:	bf18      	it	ne
 801336c:	462f      	movne	r7, r5
 801336e:	ab03      	add	r3, sp, #12
 8013370:	4642      	mov	r2, r8
 8013372:	4659      	mov	r1, fp
 8013374:	4648      	mov	r0, r9
 8013376:	f002 ffb3 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801337a:	4605      	mov	r5, r0
 801337c:	b1b8      	cbz	r0, 80133ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 801337e:	280a      	cmp	r0, #10
 8013380:	d015      	beq.n	80133ae <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x70>
 8013382:	9a03      	ldr	r2, [sp, #12]
 8013384:	b18a      	cbz	r2, 80133aa <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x6c>
 8013386:	7b50      	ldrb	r0, [r2, #13]
 8013388:	7a93      	ldrb	r3, [r2, #10]
 801338a:	8895      	ldrh	r5, [r2, #4]
 801338c:	0040      	lsls	r0, r0, #1
 801338e:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8013392:	4303      	orrs	r3, r0
 8013394:	9301      	str	r3, [sp, #4]
 8013396:	f8d8 3000 	ldr.w	r3, [r8]
 801339a:	4639      	mov	r1, r7
 801339c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801339e:	4640      	mov	r0, r8
 80133a0:	4798      	blx	r3
 80133a2:	9b01      	ldr	r3, [sp, #4]
 80133a4:	4418      	add	r0, r3
 80133a6:	4406      	add	r6, r0
 80133a8:	b2b6      	uxth	r6, r6
 80133aa:	3401      	adds	r4, #1
 80133ac:	e7d2      	b.n	8013354 <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih+0x16>
 80133ae:	4630      	mov	r0, r6
 80133b0:	b005      	add	sp, #20
 80133b2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080133b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>:
 80133b6:	2a02      	cmp	r2, #2
 80133b8:	b530      	push	{r4, r5, lr}
 80133ba:	d011      	beq.n	80133e0 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x2a>
 80133bc:	2a03      	cmp	r2, #3
 80133be:	d01c      	beq.n	80133fa <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x44>
 80133c0:	2a01      	cmp	r2, #1
 80133c2:	d10c      	bne.n	80133de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80133c4:	888b      	ldrh	r3, [r1, #4]
 80133c6:	8801      	ldrh	r1, [r0, #0]
 80133c8:	f9b0 2004 	ldrsh.w	r2, [r0, #4]
 80133cc:	8844      	ldrh	r4, [r0, #2]
 80133ce:	8004      	strh	r4, [r0, #0]
 80133d0:	1a5b      	subs	r3, r3, r1
 80133d2:	1a9b      	subs	r3, r3, r2
 80133d4:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 80133d8:	8043      	strh	r3, [r0, #2]
 80133da:	8081      	strh	r1, [r0, #4]
 80133dc:	80c2      	strh	r2, [r0, #6]
 80133de:	bd30      	pop	{r4, r5, pc}
 80133e0:	88cb      	ldrh	r3, [r1, #6]
 80133e2:	8842      	ldrh	r2, [r0, #2]
 80133e4:	1a9b      	subs	r3, r3, r2
 80133e6:	88c2      	ldrh	r2, [r0, #6]
 80133e8:	1a9b      	subs	r3, r3, r2
 80133ea:	888a      	ldrh	r2, [r1, #4]
 80133ec:	8801      	ldrh	r1, [r0, #0]
 80133ee:	8043      	strh	r3, [r0, #2]
 80133f0:	1a52      	subs	r2, r2, r1
 80133f2:	8881      	ldrh	r1, [r0, #4]
 80133f4:	1a52      	subs	r2, r2, r1
 80133f6:	8002      	strh	r2, [r0, #0]
 80133f8:	e7f1      	b.n	80133de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>
 80133fa:	88cb      	ldrh	r3, [r1, #6]
 80133fc:	8841      	ldrh	r1, [r0, #2]
 80133fe:	f9b0 2006 	ldrsh.w	r2, [r0, #6]
 8013402:	f9b0 5000 	ldrsh.w	r5, [r0]
 8013406:	f9b0 4004 	ldrsh.w	r4, [r0, #4]
 801340a:	8045      	strh	r5, [r0, #2]
 801340c:	1a5b      	subs	r3, r3, r1
 801340e:	1a9b      	subs	r3, r3, r2
 8013410:	8003      	strh	r3, [r0, #0]
 8013412:	8082      	strh	r2, [r0, #4]
 8013414:	80c4      	strh	r4, [r0, #6]
 8013416:	e7e2      	b.n	80133de <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE+0x28>

08013418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>:
 8013418:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801341c:	b09f      	sub	sp, #124	@ 0x7c
 801341e:	920f      	str	r2, [sp, #60]	@ 0x3c
 8013420:	9312      	str	r3, [sp, #72]	@ 0x48
 8013422:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013424:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013426:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 8013428:	8812      	ldrh	r2, [r2, #0]
 801342a:	889b      	ldrh	r3, [r3, #4]
 801342c:	900e      	str	r0, [sp, #56]	@ 0x38
 801342e:	4413      	add	r3, r2
 8013430:	6828      	ldr	r0, [r5, #0]
 8013432:	9117      	str	r1, [sp, #92]	@ 0x5c
 8013434:	b21b      	sxth	r3, r3
 8013436:	9311      	str	r3, [sp, #68]	@ 0x44
 8013438:	6803      	ldr	r3, [r0, #0]
 801343a:	f89d b0ac 	ldrb.w	fp, [sp, #172]	@ 0xac
 801343e:	6d5b      	ldr	r3, [r3, #84]	@ 0x54
 8013440:	f89d 40b8 	ldrb.w	r4, [sp, #184]	@ 0xb8
 8013444:	4798      	blx	r3
 8013446:	682b      	ldr	r3, [r5, #0]
 8013448:	9013      	str	r0, [sp, #76]	@ 0x4c
 801344a:	7b1a      	ldrb	r2, [r3, #12]
 801344c:	7adb      	ldrb	r3, [r3, #11]
 801344e:	9215      	str	r2, [sp, #84]	@ 0x54
 8013450:	9316      	str	r3, [sp, #88]	@ 0x58
 8013452:	f9bd 60a0 	ldrsh.w	r6, [sp, #160]	@ 0xa0
 8013456:	2c00      	cmp	r4, #0
 8013458:	d067      	beq.n	801352a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x112>
 801345a:	7c2b      	ldrb	r3, [r5, #16]
 801345c:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 801345e:	2b06      	cmp	r3, #6
 8013460:	bf14      	ite	ne
 8013462:	2301      	movne	r3, #1
 8013464:	2302      	moveq	r3, #2
 8013466:	4413      	add	r3, r2
 8013468:	f04f 0900 	mov.w	r9, #0
 801346c:	9310      	str	r3, [sp, #64]	@ 0x40
 801346e:	f8cd 9034 	str.w	r9, [sp, #52]	@ 0x34
 8013472:	464c      	mov	r4, r9
 8013474:	f8cd 9030 	str.w	r9, [sp, #48]	@ 0x30
 8013478:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801347a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801347c:	4293      	cmp	r3, r2
 801347e:	f280 808b 	bge.w	8013598 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 8013482:	2300      	movs	r3, #0
 8013484:	e9cd 331c 	strd	r3, r3, [sp, #112]	@ 0x70
 8013488:	f88d 306f 	strb.w	r3, [sp, #111]	@ 0x6f
 801348c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013490:	429c      	cmp	r4, r3
 8013492:	d006      	beq.n	80134a2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x8a>
 8013494:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013496:	f242 020b 	movw	r2, #8203	@ 0x200b
 801349a:	4294      	cmp	r4, r2
 801349c:	bf18      	it	ne
 801349e:	4623      	movne	r3, r4
 80134a0:	930c      	str	r3, [sp, #48]	@ 0x30
 80134a2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80134a4:	992d      	ldr	r1, [sp, #180]	@ 0xb4
 80134a6:	682a      	ldr	r2, [r5, #0]
 80134a8:	428b      	cmp	r3, r1
 80134aa:	db40      	blt.n	801352e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x116>
 80134ac:	6813      	ldr	r3, [r2, #0]
 80134ae:	4610      	mov	r0, r2
 80134b0:	695b      	ldr	r3, [r3, #20]
 80134b2:	4798      	blx	r3
 80134b4:	4604      	mov	r4, r0
 80134b6:	6828      	ldr	r0, [r5, #0]
 80134b8:	6803      	ldr	r3, [r0, #0]
 80134ba:	aa1d      	add	r2, sp, #116	@ 0x74
 80134bc:	689f      	ldr	r7, [r3, #8]
 80134be:	4621      	mov	r1, r4
 80134c0:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 80134c4:	47b8      	blx	r7
 80134c6:	901c      	str	r0, [sp, #112]	@ 0x70
 80134c8:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 80134cc:	429c      	cmp	r4, r3
 80134ce:	f000 80ea 	beq.w	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80134d2:	f242 030b 	movw	r3, #8203	@ 0x200b
 80134d6:	429c      	cmp	r4, r3
 80134d8:	f000 80e5 	beq.w	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80134dc:	2c00      	cmp	r4, #0
 80134de:	f000 810c 	beq.w	80136fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80134e2:	2c0a      	cmp	r4, #10
 80134e4:	d05e      	beq.n	80135a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80134e6:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 80134e8:	b36a      	cbz	r2, 8013546 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x12e>
 80134ea:	8894      	ldrh	r4, [r2, #4]
 80134ec:	f1bb 0f00 	cmp.w	fp, #0
 80134f0:	d03a      	beq.n	8013568 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x150>
 80134f2:	f892 900d 	ldrb.w	r9, [r2, #13]
 80134f6:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80134fa:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 80134fe:	f892 900a 	ldrb.w	r9, [r2, #10]
 8013502:	f1bb 0f01 	cmp.w	fp, #1
 8013506:	ea49 0903 	orr.w	r9, r9, r3
 801350a:	d133      	bne.n	8013574 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x15c>
 801350c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801350e:	eba6 0609 	sub.w	r6, r6, r9
 8013512:	2b00      	cmp	r3, #0
 8013514:	d14d      	bne.n	80135b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013516:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8013518:	eb09 0306 	add.w	r3, r9, r6
 801351c:	4413      	add	r3, r2
 801351e:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8013520:	f9b2 2000 	ldrsh.w	r2, [r2]
 8013524:	4293      	cmp	r3, r2
 8013526:	da4e      	bge.n	80135c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013528:	e036      	b.n	8013598 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x180>
 801352a:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 801352c:	e79c      	b.n	8013468 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x50>
 801352e:	f10d 036f 	add.w	r3, sp, #111	@ 0x6f
 8013532:	9301      	str	r3, [sp, #4]
 8013534:	ab1d      	add	r3, sp, #116	@ 0x74
 8013536:	9300      	str	r3, [sp, #0]
 8013538:	4659      	mov	r1, fp
 801353a:	ab1c      	add	r3, sp, #112	@ 0x70
 801353c:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 801353e:	f002 ff18 	bl	8016372 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>
 8013542:	4604      	mov	r4, r0
 8013544:	e7c0      	b.n	80134c8 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xb0>
 8013546:	6828      	ldr	r0, [r5, #0]
 8013548:	6803      	ldr	r3, [r0, #0]
 801354a:	691b      	ldr	r3, [r3, #16]
 801354c:	4798      	blx	r3
 801354e:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013552:	4298      	cmp	r0, r3
 8013554:	f000 80a7 	beq.w	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013558:	f242 030b 	movw	r3, #8203	@ 0x200b
 801355c:	4298      	cmp	r0, r3
 801355e:	f000 80a2 	beq.w	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013562:	f1bb 0f00 	cmp.w	fp, #0
 8013566:	d100      	bne.n	801356a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x152>
 8013568:	444e      	add	r6, r9
 801356a:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 801356c:	2a00      	cmp	r2, #0
 801356e:	d1c0      	bne.n	80134f2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xda>
 8013570:	4691      	mov	r9, r2
 8013572:	e098      	b.n	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013574:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8013576:	2b00      	cmp	r3, #0
 8013578:	f000 80c1 	beq.w	80136fe <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e6>
 801357c:	f1bb 0f00 	cmp.w	fp, #0
 8013580:	d117      	bne.n	80135b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x19a>
 8013582:	6828      	ldr	r0, [r5, #0]
 8013584:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8013586:	6803      	ldr	r3, [r0, #0]
 8013588:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801358a:	4798      	blx	r3
 801358c:	4406      	add	r6, r0
 801358e:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8013590:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8013592:	1af3      	subs	r3, r6, r3
 8013594:	4293      	cmp	r3, r2
 8013596:	dd16      	ble.n	80135c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>
 8013598:	2c00      	cmp	r4, #0
 801359a:	f000 80ae 	beq.w	80136fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 801359e:	2c0a      	cmp	r4, #10
 80135a0:	f040 809c 	bne.w	80136dc <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c4>
 80135a4:	240a      	movs	r4, #10
 80135a6:	fab4 f084 	clz	r0, r4
 80135aa:	0940      	lsrs	r0, r0, #5
 80135ac:	b01f      	add	sp, #124	@ 0x7c
 80135ae:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80135b2:	6828      	ldr	r0, [r5, #0]
 80135b4:	990c      	ldr	r1, [sp, #48]	@ 0x30
 80135b6:	6803      	ldr	r3, [r0, #0]
 80135b8:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80135ba:	4798      	blx	r3
 80135bc:	f1bb 0f01 	cmp.w	fp, #1
 80135c0:	eba6 0600 	sub.w	r6, r6, r0
 80135c4:	d0a7      	beq.n	8013516 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0xfe>
 80135c6:	981c      	ldr	r0, [sp, #112]	@ 0x70
 80135c8:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 80135ca:	f990 1009 	ldrsb.w	r1, [r0, #9]
 80135ce:	f9b3 8000 	ldrsh.w	r8, [r3]
 80135d2:	7b43      	ldrb	r3, [r0, #13]
 80135d4:	015b      	lsls	r3, r3, #5
 80135d6:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80135da:	7983      	ldrb	r3, [r0, #6]
 80135dc:	4431      	add	r1, r6
 80135de:	4313      	orrs	r3, r2
 80135e0:	440b      	add	r3, r1
 80135e2:	4543      	cmp	r3, r8
 80135e4:	db5f      	blt.n	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80135e6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80135e8:	4299      	cmp	r1, r3
 80135ea:	da5c      	bge.n	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80135ec:	6828      	ldr	r0, [r5, #0]
 80135ee:	6803      	ldr	r3, [r0, #0]
 80135f0:	45b0      	cmp	r8, r6
 80135f2:	bfc8      	it	gt
 80135f4:	eba8 0806 	subgt.w	r8, r8, r6
 80135f8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80135fa:	bfcc      	ite	gt
 80135fc:	fa1f f888 	uxthgt.w	r8, r8
 8013600:	f04f 0800 	movle.w	r8, #0
 8013604:	4798      	blx	r3
 8013606:	9a1c      	ldr	r2, [sp, #112]	@ 0x70
 8013608:	7b53      	ldrb	r3, [r2, #13]
 801360a:	00d9      	lsls	r1, r3, #3
 801360c:	f401 7780 	and.w	r7, r1, #256	@ 0x100
 8013610:	7a11      	ldrb	r1, [r2, #8]
 8013612:	4339      	orrs	r1, r7
 8013614:	065f      	lsls	r7, r3, #25
 8013616:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 8013618:	bf44      	itt	mi
 801361a:	f5a1 7100 	submi.w	r1, r1, #512	@ 0x200
 801361e:	b209      	sxthmi	r1, r1
 8013620:	19c7      	adds	r7, r0, r7
 8013622:	1a7f      	subs	r7, r7, r1
 8013624:	9929      	ldr	r1, [sp, #164]	@ 0xa4
 8013626:	b2bf      	uxth	r7, r7
 8013628:	f9b1 1002 	ldrsh.w	r1, [r1, #2]
 801362c:	fa0f fa87 	sxth.w	sl, r7
 8013630:	4551      	cmp	r1, sl
 8013632:	dd3c      	ble.n	80136ae <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x296>
 8013634:	011b      	lsls	r3, r3, #4
 8013636:	79d0      	ldrb	r0, [r2, #7]
 8013638:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 801363c:	4303      	orrs	r3, r0
 801363e:	449a      	add	sl, r3
 8013640:	4551      	cmp	r1, sl
 8013642:	dc30      	bgt.n	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 8013644:	1bcf      	subs	r7, r1, r7
 8013646:	b23f      	sxth	r7, r7
 8013648:	468a      	mov	sl, r1
 801364a:	9219      	str	r2, [sp, #100]	@ 0x64
 801364c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801364e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8013650:	6828      	ldr	r0, [r5, #0]
 8013652:	2a00      	cmp	r2, #0
 8013654:	d12d      	bne.n	80136b2 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x29a>
 8013656:	9318      	str	r3, [sp, #96]	@ 0x60
 8013658:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801365a:	6819      	ldr	r1, [r3, #0]
 801365c:	6ccb      	ldr	r3, [r1, #76]	@ 0x4c
 801365e:	6801      	ldr	r1, [r0, #0]
 8013660:	9314      	str	r3, [sp, #80]	@ 0x50
 8013662:	6c09      	ldr	r1, [r1, #64]	@ 0x40
 8013664:	4788      	blx	r1
 8013666:	79a9      	ldrb	r1, [r5, #6]
 8013668:	910b      	str	r1, [sp, #44]	@ 0x2c
 801366a:	7ba9      	ldrb	r1, [r5, #14]
 801366c:	910a      	str	r1, [sp, #40]	@ 0x28
 801366e:	f89d 106f 	ldrb.w	r1, [sp, #111]	@ 0x6f
 8013672:	9109      	str	r1, [sp, #36]	@ 0x24
 8013674:	68a9      	ldr	r1, [r5, #8]
 8013676:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8013678:	9306      	str	r3, [sp, #24]
 801367a:	b2bf      	uxth	r7, r7
 801367c:	e9cd 8702 	strd	r8, r7, [sp, #8]
 8013680:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8013682:	9304      	str	r3, [sp, #16]
 8013684:	44b0      	add	r8, r6
 8013686:	e9cd 0107 	strd	r0, r1, [sp, #28]
 801368a:	fa0f f388 	sxth.w	r3, r8
 801368e:	9300      	str	r3, [sp, #0]
 8013690:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 8013692:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8013694:	9205      	str	r2, [sp, #20]
 8013696:	f8cd a004 	str.w	sl, [sp, #4]
 801369a:	681a      	ldr	r2, [r3, #0]
 801369c:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 801369e:	685b      	ldr	r3, [r3, #4]
 80136a0:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80136a2:	9f14      	ldr	r7, [sp, #80]	@ 0x50
 80136a4:	47b8      	blx	r7
 80136a6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80136a8:	3301      	adds	r3, #1
 80136aa:	930d      	str	r3, [sp, #52]	@ 0x34
 80136ac:	e6e4      	b.n	8013478 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x60>
 80136ae:	2700      	movs	r7, #0
 80136b0:	e7cb      	b.n	801364a <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x232>
 80136b2:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80136b4:	f8d2 c008 	ldr.w	ip, [r2, #8]
 80136b8:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80136ba:	f8dc 1000 	ldr.w	r1, [ip]
 80136be:	e9cd 6204 	strd	r6, r2, [sp, #16]
 80136c2:	79aa      	ldrb	r2, [r5, #6]
 80136c4:	9203      	str	r2, [sp, #12]
 80136c6:	7baa      	ldrb	r2, [r5, #14]
 80136c8:	9202      	str	r2, [sp, #8]
 80136ca:	68aa      	ldr	r2, [r5, #8]
 80136cc:	e9cd 0200 	strd	r0, r2, [sp]
 80136d0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80136d2:	688f      	ldr	r7, [r1, #8]
 80136d4:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80136d6:	4660      	mov	r0, ip
 80136d8:	47b8      	blx	r7
 80136da:	e7e4      	b.n	80136a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x28e>
 80136dc:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80136de:	9b2d      	ldr	r3, [sp, #180]	@ 0xb4
 80136e0:	3501      	adds	r5, #1
 80136e2:	429d      	cmp	r5, r3
 80136e4:	f6bf af5f 	bge.w	80135a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80136e8:	4659      	mov	r1, fp
 80136ea:	982c      	ldr	r0, [sp, #176]	@ 0xb0
 80136ec:	f7fa f8d4 	bl	800d898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80136f0:	4604      	mov	r4, r0
 80136f2:	b110      	cbz	r0, 80136fa <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2e2>
 80136f4:	280a      	cmp	r0, #10
 80136f6:	d1f2      	bne.n	80136de <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x2c6>
 80136f8:	e754      	b.n	80135a4 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18c>
 80136fa:	2400      	movs	r4, #0
 80136fc:	e753      	b.n	80135a6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x18e>
 80136fe:	f1bb 0f00 	cmp.w	fp, #0
 8013702:	f43f af44 	beq.w	801358e <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x176>
 8013706:	e75e      	b.n	80135c6 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib+0x1ae>

08013708 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>:
 8013708:	b530      	push	{r4, r5, lr}
 801370a:	8ac4      	ldrh	r4, [r0, #22]
 801370c:	8b45      	ldrh	r5, [r0, #26]
 801370e:	8343      	strh	r3, [r0, #26]
 8013710:	442c      	add	r4, r5
 8013712:	1ae4      	subs	r4, r4, r3
 8013714:	82c4      	strh	r4, [r0, #22]
 8013716:	8b83      	ldrh	r3, [r0, #28]
 8013718:	8b04      	ldrh	r4, [r0, #24]
 801371a:	4422      	add	r2, r4
 801371c:	440c      	add	r4, r1
 801371e:	1a59      	subs	r1, r3, r1
 8013720:	83c2      	strh	r2, [r0, #30]
 8013722:	8304      	strh	r4, [r0, #24]
 8013724:	8381      	strh	r1, [r0, #28]
 8013726:	bd30      	pop	{r4, r5, pc}

08013728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>:
 8013728:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801372c:	4604      	mov	r4, r0
 801372e:	8a47      	ldrh	r7, [r0, #18]
 8013730:	68c0      	ldr	r0, [r0, #12]
 8013732:	6803      	ldr	r3, [r0, #0]
 8013734:	b085      	sub	sp, #20
 8013736:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013738:	4798      	blx	r3
 801373a:	f9b4 6014 	ldrsh.w	r6, [r4, #20]
 801373e:	7a63      	ldrb	r3, [r4, #9]
 8013740:	eb06 0640 	add.w	r6, r6, r0, lsl #1
 8013744:	42b7      	cmp	r7, r6
 8013746:	f103 33ff 	add.w	r3, r3, #4294967295
 801374a:	bfac      	ite	ge
 801374c:	f04f 0900 	movge.w	r9, #0
 8013750:	f04f 0901 	movlt.w	r9, #1
 8013754:	2b05      	cmp	r3, #5
 8013756:	d804      	bhi.n	8013762 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x3a>
 8013758:	e8df f003 	tbb	[pc, r3]
 801375c:	470e0854 	.word	0x470e0854
 8013760:	4c4c      	.short	0x4c4c
 8013762:	2500      	movs	r5, #0
 8013764:	46a9      	mov	r9, r5
 8013766:	462e      	mov	r6, r5
 8013768:	462f      	mov	r7, r5
 801376a:	e00d      	b.n	8013788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 801376c:	42b7      	cmp	r7, r6
 801376e:	bfb4      	ite	lt
 8013770:	2600      	movlt	r6, #0
 8013772:	2601      	movge	r6, #1
 8013774:	2500      	movs	r5, #0
 8013776:	e7f7      	b.n	8013768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 8013778:	42b7      	cmp	r7, r6
 801377a:	464d      	mov	r5, r9
 801377c:	f04f 0900 	mov.w	r9, #0
 8013780:	bfb4      	ite	lt
 8013782:	2600      	movlt	r6, #0
 8013784:	2601      	movge	r6, #1
 8013786:	464f      	mov	r7, r9
 8013788:	f04f 0800 	mov.w	r8, #0
 801378c:	f8a4 8016 	strh.w	r8, [r4, #22]
 8013790:	f8a4 8018 	strh.w	r8, [r4, #24]
 8013794:	f8cd 8004 	str.w	r8, [sp, #4]
 8013798:	2300      	movs	r3, #0
 801379a:	9303      	str	r3, [sp, #12]
 801379c:	8823      	ldrh	r3, [r4, #0]
 801379e:	2b20      	cmp	r3, #32
 80137a0:	d034      	beq.n	801380c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xe4>
 80137a2:	f242 010b 	movw	r1, #8203	@ 0x200b
 80137a6:	1a5a      	subs	r2, r3, r1
 80137a8:	f1d2 0a00 	rsbs	sl, r2, #0
 80137ac:	eb4a 0a02 	adc.w	sl, sl, r2
 80137b0:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 80137b4:	4293      	cmp	r3, r2
 80137b6:	d009      	beq.n	80137cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 80137b8:	428b      	cmp	r3, r1
 80137ba:	9a01      	ldr	r2, [sp, #4]
 80137bc:	bf18      	it	ne
 80137be:	461a      	movne	r2, r3
 80137c0:	9201      	str	r2, [sp, #4]
 80137c2:	bf0c      	ite	eq
 80137c4:	f04f 0a01 	moveq.w	sl, #1
 80137c8:	f04f 0a00 	movne.w	sl, #0
 80137cc:	ab03      	add	r3, sp, #12
 80137ce:	68e2      	ldr	r2, [r4, #12]
 80137d0:	7a21      	ldrb	r1, [r4, #8]
 80137d2:	6860      	ldr	r0, [r4, #4]
 80137d4:	f002 fd84 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80137d8:	8020      	strh	r0, [r4, #0]
 80137da:	b9d8      	cbnz	r0, 8013814 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xec>
 80137dc:	8ba2      	ldrh	r2, [r4, #28]
 80137de:	2300      	movs	r3, #0
 80137e0:	4611      	mov	r1, r2
 80137e2:	4620      	mov	r0, r4
 80137e4:	f7ff ff90 	bl	8013708 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80137e8:	e06e      	b.n	80138c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 80137ea:	2500      	movs	r5, #0
 80137ec:	46a9      	mov	r9, r5
 80137ee:	462e      	mov	r6, r5
 80137f0:	2701      	movs	r7, #1
 80137f2:	e7c9      	b.n	8013788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 80137f4:	42b7      	cmp	r7, r6
 80137f6:	f04f 0500 	mov.w	r5, #0
 80137fa:	bfb4      	ite	lt
 80137fc:	2700      	movlt	r7, #0
 80137fe:	2701      	movge	r7, #1
 8013800:	462e      	mov	r6, r5
 8013802:	e7c1      	b.n	8013788 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x60>
 8013804:	2500      	movs	r5, #0
 8013806:	46a9      	mov	r9, r5
 8013808:	2601      	movs	r6, #1
 801380a:	e7ad      	b.n	8013768 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x40>
 801380c:	9301      	str	r3, [sp, #4]
 801380e:	f04f 0a01 	mov.w	sl, #1
 8013812:	e7db      	b.n	80137cc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xa4>
 8013814:	8b63      	ldrh	r3, [r4, #26]
 8013816:	280a      	cmp	r0, #10
 8013818:	f103 0301 	add.w	r3, r3, #1
 801381c:	8363      	strh	r3, [r4, #26]
 801381e:	d0dd      	beq.n	80137dc <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb4>
 8013820:	9a03      	ldr	r2, [sp, #12]
 8013822:	bb62      	cbnz	r2, 801387e <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x156>
 8013824:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8013828:	4298      	cmp	r0, r3
 801382a:	d003      	beq.n	8013834 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 801382c:	f242 030b 	movw	r3, #8203	@ 0x200b
 8013830:	4298      	cmp	r0, r3
 8013832:	d1b1      	bne.n	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013834:	8823      	ldrh	r3, [r4, #0]
 8013836:	8ba1      	ldrh	r1, [r4, #28]
 8013838:	2b20      	cmp	r3, #32
 801383a:	d003      	beq.n	8013844 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x11c>
 801383c:	f242 000b 	movw	r0, #8203	@ 0x200b
 8013840:	4283      	cmp	r3, r0
 8013842:	d131      	bne.n	80138a8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x180>
 8013844:	f1ba 0f00 	cmp.w	sl, #0
 8013848:	bf0a      	itet	eq
 801384a:	4688      	moveq	r8, r1
 801384c:	4650      	movne	r0, sl
 801384e:	2001      	moveq	r0, #1
 8013850:	440a      	add	r2, r1
 8013852:	8b23      	ldrh	r3, [r4, #24]
 8013854:	f8b4 c010 	ldrh.w	ip, [r4, #16]
 8013858:	b292      	uxth	r2, r2
 801385a:	83a2      	strh	r2, [r4, #28]
 801385c:	4413      	add	r3, r2
 801385e:	f1b9 0f00 	cmp.w	r9, #0
 8013862:	d102      	bne.n	801386a <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x142>
 8013864:	2d00      	cmp	r5, #0
 8013866:	d042      	beq.n	80138ee <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1c6>
 8013868:	b300      	cbz	r0, 80138ac <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x184>
 801386a:	8c21      	ldrh	r1, [r4, #32]
 801386c:	4419      	add	r1, r3
 801386e:	458c      	cmp	ip, r1
 8013870:	da37      	bge.n	80138e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013872:	8ae1      	ldrh	r1, [r4, #22]
 8013874:	2900      	cmp	r1, #0
 8013876:	d034      	beq.n	80138e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ba>
 8013878:	4563      	cmp	r3, ip
 801387a:	dd8d      	ble.n	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801387c:	e01d      	b.n	80138ba <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x192>
 801387e:	8893      	ldrh	r3, [r2, #4]
 8013880:	8023      	strh	r3, [r4, #0]
 8013882:	f892 b00d 	ldrb.w	fp, [r2, #13]
 8013886:	9901      	ldr	r1, [sp, #4]
 8013888:	ea4f 0b4b 	mov.w	fp, fp, lsl #1
 801388c:	f40b 7080 	and.w	r0, fp, #256	@ 0x100
 8013890:	f892 b00a 	ldrb.w	fp, [r2, #10]
 8013894:	ea4b 0b00 	orr.w	fp, fp, r0
 8013898:	68e0      	ldr	r0, [r4, #12]
 801389a:	6803      	ldr	r3, [r0, #0]
 801389c:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 801389e:	4798      	blx	r3
 80138a0:	eb0b 0200 	add.w	r2, fp, r0
 80138a4:	b292      	uxth	r2, r2
 80138a6:	e7c5      	b.n	8013834 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x10c>
 80138a8:	2000      	movs	r0, #0
 80138aa:	e7d1      	b.n	8013850 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x128>
 80138ac:	4563      	cmp	r3, ip
 80138ae:	f77f af73 	ble.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80138b2:	8ae3      	ldrh	r3, [r4, #22]
 80138b4:	2b00      	cmp	r3, #0
 80138b6:	f43f af6f 	beq.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80138ba:	2301      	movs	r3, #1
 80138bc:	f884 3022 	strb.w	r3, [r4, #34]	@ 0x22
 80138c0:	8c22      	ldrh	r2, [r4, #32]
 80138c2:	8be3      	ldrh	r3, [r4, #30]
 80138c4:	4413      	add	r3, r2
 80138c6:	83e3      	strh	r3, [r4, #30]
 80138c8:	68e0      	ldr	r0, [r4, #12]
 80138ca:	6803      	ldr	r3, [r0, #0]
 80138cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 80138ce:	4798      	blx	r3
 80138d0:	f9b4 3014 	ldrsh.w	r3, [r4, #20]
 80138d4:	4418      	add	r0, r3
 80138d6:	8a63      	ldrh	r3, [r4, #18]
 80138d8:	1a18      	subs	r0, r3, r0
 80138da:	8260      	strh	r0, [r4, #18]
 80138dc:	b005      	add	sp, #20
 80138de:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80138e2:	2300      	movs	r3, #0
 80138e4:	4611      	mov	r1, r2
 80138e6:	4620      	mov	r0, r4
 80138e8:	f7ff ff0e 	bl	8013708 <_ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt>
 80138ec:	e754      	b.n	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 80138ee:	4563      	cmp	r3, ip
 80138f0:	dd14      	ble.n	801391c <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1f4>
 80138f2:	b117      	cbz	r7, 80138fa <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1d2>
 80138f4:	2301      	movs	r3, #1
 80138f6:	460a      	mov	r2, r1
 80138f8:	e772      	b.n	80137e0 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xb8>
 80138fa:	2e00      	cmp	r6, #0
 80138fc:	f43f af4c 	beq.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013900:	2800      	cmp	r0, #0
 8013902:	f47f af49 	bne.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013906:	f1ba 0f00 	cmp.w	sl, #0
 801390a:	d002      	beq.n	8013912 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1ea>
 801390c:	2301      	movs	r3, #1
 801390e:	4642      	mov	r2, r8
 8013910:	e767      	b.n	80137e2 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0xba>
 8013912:	8ae3      	ldrh	r3, [r4, #22]
 8013914:	2b00      	cmp	r3, #0
 8013916:	f43f af3f 	beq.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801391a:	e7d5      	b.n	80138c8 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1a0>
 801391c:	2800      	cmp	r0, #0
 801391e:	f47f af3b 	bne.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 8013922:	f1ba 0f00 	cmp.w	sl, #0
 8013926:	f43f af37 	beq.w	8013798 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x70>
 801392a:	2301      	movs	r3, #1
 801392c:	4642      	mov	r2, r8
 801392e:	e7da      	b.n	80138e6 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv+0x1be>

08013930 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs>:
 8013930:	b5f0      	push	{r4, r5, r6, r7, lr}
 8013932:	4605      	mov	r5, r0
 8013934:	b08f      	sub	sp, #60	@ 0x3c
 8013936:	4617      	mov	r7, r2
 8013938:	461c      	mov	r4, r3
 801393a:	460e      	mov	r6, r1
 801393c:	b1d1      	cbz	r1, 8013974 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x44>
 801393e:	681b      	ldr	r3, [r3, #0]
 8013940:	4620      	mov	r0, r4
 8013942:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013944:	4798      	blx	r3
 8013946:	4240      	negs	r0, r0
 8013948:	b200      	sxth	r0, r0
 801394a:	e9cd 4001 	strd	r4, r0, [sp, #4]
 801394e:	9603      	str	r6, [sp, #12]
 8013950:	9700      	str	r7, [sp, #0]
 8013952:	f64f 73ff 	movw	r3, #65535	@ 0xffff
 8013956:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 801395a:	4629      	mov	r1, r5
 801395c:	a805      	add	r0, sp, #20
 801395e:	f7ff fcab 	bl	80132b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013962:	2401      	movs	r4, #1
 8013964:	a805      	add	r0, sp, #20
 8013966:	f7ff fedf 	bl	8013728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 801396a:	f8bd 3014 	ldrh.w	r3, [sp, #20]
 801396e:	b163      	cbz	r3, 801398a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x5a>
 8013970:	3401      	adds	r4, #1
 8013972:	e7f7      	b.n	8013964 <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x34>
 8013974:	f002 fd82 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013978:	2401      	movs	r4, #1
 801397a:	280a      	cmp	r0, #10
 801397c:	4628      	mov	r0, r5
 801397e:	bf08      	it	eq
 8013980:	3401      	addeq	r4, #1
 8013982:	f002 fd7b 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013986:	2800      	cmp	r0, #0
 8013988:	d1f7      	bne.n	801397a <_ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs+0x4a>
 801398a:	b2a0      	uxth	r0, r4
 801398c:	b00f      	add	sp, #60	@ 0x3c
 801398e:	bdf0      	pop	{r4, r5, r6, r7, pc}

08013990 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list>:
 8013990:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013994:	b0e3      	sub	sp, #396	@ 0x18c
 8013996:	461c      	mov	r4, r3
 8013998:	9b6c      	ldr	r3, [sp, #432]	@ 0x1b0
 801399a:	4683      	mov	fp, r0
 801399c:	4688      	mov	r8, r1
 801399e:	2b00      	cmp	r3, #0
 80139a0:	f000 8112 	beq.w	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80139a4:	6823      	ldr	r3, [r4, #0]
 80139a6:	2b00      	cmp	r3, #0
 80139a8:	f000 810e 	beq.w	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80139ac:	7ba3      	ldrb	r3, [r4, #14]
 80139ae:	2b00      	cmp	r3, #0
 80139b0:	f000 810a 	beq.w	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 80139b4:	6810      	ldr	r0, [r2, #0]
 80139b6:	6851      	ldr	r1, [r2, #4]
 80139b8:	f9b8 2004 	ldrsh.w	r2, [r8, #4]
 80139bc:	f8ad 2034 	strh.w	r2, [sp, #52]	@ 0x34
 80139c0:	ad0a      	add	r5, sp, #40	@ 0x28
 80139c2:	462b      	mov	r3, r5
 80139c4:	c303      	stmia	r3!, {r0, r1}
 80139c6:	2100      	movs	r1, #0
 80139c8:	f9b8 3006 	ldrsh.w	r3, [r8, #6]
 80139cc:	910c      	str	r1, [sp, #48]	@ 0x30
 80139ce:	79a2      	ldrb	r2, [r4, #6]
 80139d0:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 80139d4:	a90c      	add	r1, sp, #48	@ 0x30
 80139d6:	4628      	mov	r0, r5
 80139d8:	f7ff fced 	bl	80133b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80139dc:	a90c      	add	r1, sp, #48	@ 0x30
 80139de:	4608      	mov	r0, r1
 80139e0:	79a2      	ldrb	r2, [r4, #6]
 80139e2:	f7ff fce8 	bl	80133b6 <_ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE>
 80139e6:	a817      	add	r0, sp, #92	@ 0x5c
 80139e8:	f002 f8f2 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 80139ec:	6820      	ldr	r0, [r4, #0]
 80139ee:	6803      	ldr	r3, [r0, #0]
 80139f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80139f2:	4798      	blx	r3
 80139f4:	4606      	mov	r6, r0
 80139f6:	6820      	ldr	r0, [r4, #0]
 80139f8:	6803      	ldr	r3, [r0, #0]
 80139fa:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80139fc:	4798      	blx	r3
 80139fe:	4633      	mov	r3, r6
 8013a00:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013a02:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013a04:	9000      	str	r0, [sp, #0]
 8013a06:	a817      	add	r0, sp, #92	@ 0x5c
 8013a08:	f002 f93d 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013a0c:	6820      	ldr	r0, [r4, #0]
 8013a0e:	f894 a004 	ldrb.w	sl, [r4, #4]
 8013a12:	6803      	ldr	r3, [r0, #0]
 8013a14:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 8013a16:	4798      	blx	r3
 8013a18:	f9b4 600c 	ldrsh.w	r6, [r4, #12]
 8013a1c:	6823      	ldr	r3, [r4, #0]
 8013a1e:	4607      	mov	r7, r0
 8013a20:	4406      	add	r6, r0
 8013a22:	a830      	add	r0, sp, #192	@ 0xc0
 8013a24:	f893 9009 	ldrb.w	r9, [r3, #9]
 8013a28:	f002 f8d2 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 8013a2c:	7c23      	ldrb	r3, [r4, #16]
 8013a2e:	b17b      	cbz	r3, 8013a50 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xc0>
 8013a30:	6820      	ldr	r0, [r4, #0]
 8013a32:	6803      	ldr	r3, [r0, #0]
 8013a34:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8013a36:	4798      	blx	r3
 8013a38:	9009      	str	r0, [sp, #36]	@ 0x24
 8013a3a:	6820      	ldr	r0, [r4, #0]
 8013a3c:	6802      	ldr	r2, [r0, #0]
 8013a3e:	6d12      	ldr	r2, [r2, #80]	@ 0x50
 8013a40:	4790      	blx	r2
 8013a42:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013a44:	9000      	str	r0, [sp, #0]
 8013a46:	9a6d      	ldr	r2, [sp, #436]	@ 0x1b4
 8013a48:	996c      	ldr	r1, [sp, #432]	@ 0x1b0
 8013a4a:	a830      	add	r0, sp, #192	@ 0xc0
 8013a4c:	f002 f91b 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8013a50:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 8013a54:	7be2      	ldrb	r2, [r4, #15]
 8013a56:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013a5a:	1a8a      	subs	r2, r1, r2
 8013a5c:	7c21      	ldrb	r1, [r4, #16]
 8013a5e:	9103      	str	r1, [sp, #12]
 8013a60:	f9b4 100c 	ldrsh.w	r1, [r4, #12]
 8013a64:	9102      	str	r1, [sp, #8]
 8013a66:	6821      	ldr	r1, [r4, #0]
 8013a68:	9101      	str	r1, [sp, #4]
 8013a6a:	7961      	ldrb	r1, [r4, #5]
 8013a6c:	9100      	str	r1, [sp, #0]
 8013a6e:	b292      	uxth	r2, r2
 8013a70:	a930      	add	r1, sp, #192	@ 0xc0
 8013a72:	a80e      	add	r0, sp, #56	@ 0x38
 8013a74:	f7ff fc20 	bl	80132b8 <_ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEtthPKNS_4FontEsNS_14WideTextActionE>
 8013a78:	2e00      	cmp	r6, #0
 8013a7a:	dc5b      	bgt.n	8013b34 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1a4>
 8013a7c:	af17      	add	r7, sp, #92	@ 0x5c
 8013a7e:	f04f 0900 	mov.w	r9, #0
 8013a82:	7c23      	ldrb	r3, [r4, #16]
 8013a84:	2b00      	cmp	r3, #0
 8013a86:	f000 80b1 	beq.w	8013bec <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x25c>
 8013a8a:	a80e      	add	r0, sp, #56	@ 0x38
 8013a8c:	f7ff fe4c 	bl	8013728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013a90:	f1ba 0f00 	cmp.w	sl, #0
 8013a94:	f000 80a5 	beq.w	8013be2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013a98:	7c23      	ldrb	r3, [r4, #16]
 8013a9a:	9309      	str	r3, [sp, #36]	@ 0x24
 8013a9c:	2264      	movs	r2, #100	@ 0x64
 8013a9e:	4639      	mov	r1, r7
 8013aa0:	a849      	add	r0, sp, #292	@ 0x124
 8013aa2:	f012 fcac 	bl	80263fe <memcpy>
 8013aa6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013aa8:	2b00      	cmp	r3, #0
 8013aaa:	f000 80a7 	beq.w	8013bfc <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x26c>
 8013aae:	f9bd 3056 	ldrsh.w	r3, [sp, #86]	@ 0x56
 8013ab2:	7922      	ldrb	r2, [r4, #4]
 8013ab4:	2a01      	cmp	r2, #1
 8013ab6:	f040 808a 	bne.w	8013bce <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x23e>
 8013aba:	f9bd 0034 	ldrsh.w	r0, [sp, #52]	@ 0x34
 8013abe:	1ac0      	subs	r0, r0, r3
 8013ac0:	2302      	movs	r3, #2
 8013ac2:	fb90 f0f3 	sdiv	r0, r0, r3
 8013ac6:	b200      	sxth	r0, r0
 8013ac8:	7c23      	ldrb	r3, [r4, #16]
 8013aca:	2b00      	cmp	r3, #0
 8013acc:	f000 808b 	beq.w	8013be6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x256>
 8013ad0:	f8bd 204e 	ldrh.w	r2, [sp, #78]	@ 0x4e
 8013ad4:	f89d 105a 	ldrb.w	r1, [sp, #90]	@ 0x5a
 8013ad8:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013adc:	e9cd 2105 	strd	r2, r1, [sp, #20]
 8013ae0:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 8013ae4:	4410      	add	r0, r2
 8013ae6:	b200      	sxth	r0, r0
 8013ae8:	9000      	str	r0, [sp, #0]
 8013aea:	e9cd 9703 	strd	r9, r7, [sp, #12]
 8013aee:	e9cd 5401 	strd	r5, r4, [sp, #4]
 8013af2:	4642      	mov	r2, r8
 8013af4:	2100      	movs	r1, #0
 8013af6:	4658      	mov	r0, fp
 8013af8:	f7ff fc8e 	bl	8013418 <_ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEssRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib>
 8013afc:	2800      	cmp	r0, #0
 8013afe:	d163      	bne.n	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013b00:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013b04:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8013b08:	b2b2      	uxth	r2, r6
 8013b0a:	4413      	add	r3, r2
 8013b0c:	1a8a      	subs	r2, r1, r2
 8013b0e:	f8ad 2036 	strh.w	r2, [sp, #54]	@ 0x36
 8013b12:	f89d 205a 	ldrb.w	r2, [sp, #90]	@ 0x5a
 8013b16:	b21b      	sxth	r3, r3
 8013b18:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013b1c:	2a00      	cmp	r2, #0
 8013b1e:	d153      	bne.n	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013b20:	6822      	ldr	r2, [r4, #0]
 8013b22:	8869      	ldrh	r1, [r5, #2]
 8013b24:	7a12      	ldrb	r2, [r2, #8]
 8013b26:	1a9b      	subs	r3, r3, r2
 8013b28:	88ea      	ldrh	r2, [r5, #6]
 8013b2a:	440a      	add	r2, r1
 8013b2c:	b212      	sxth	r2, r2
 8013b2e:	4293      	cmp	r3, r2
 8013b30:	dda7      	ble.n	8013a82 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xf2>
 8013b32:	e049      	b.n	8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013b34:	7c23      	ldrb	r3, [r4, #16]
 8013b36:	444f      	add	r7, r9
 8013b38:	b1c3      	cbz	r3, 8013b6c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1dc>
 8013b3a:	f64f 79ff 	movw	r9, #65535	@ 0xffff
 8013b3e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013b42:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013b46:	443b      	add	r3, r7
 8013b48:	4293      	cmp	r3, r2
 8013b4a:	da97      	bge.n	8013a7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013b4c:	a80e      	add	r0, sp, #56	@ 0x38
 8013b4e:	f7ff fdeb 	bl	8013728 <_ZN8touchgfx3LCD22WideTextInternalStruct23scanStringLengthForLineEv>
 8013b52:	f8bd 304e 	ldrh.w	r3, [sp, #78]	@ 0x4e
 8013b56:	3b01      	subs	r3, #1
 8013b58:	b29b      	uxth	r3, r3
 8013b5a:	454b      	cmp	r3, r9
 8013b5c:	9309      	str	r3, [sp, #36]	@ 0x24
 8013b5e:	d021      	beq.n	8013ba4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x214>
 8013b60:	7961      	ldrb	r1, [r4, #5]
 8013b62:	a817      	add	r0, sp, #92	@ 0x5c
 8013b64:	f7f9 fe98 	bl	800d898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 8013b68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8013b6a:	e7f4      	b.n	8013b56 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1c6>
 8013b6c:	fa1f f986 	uxth.w	r9, r6
 8013b70:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 8013b74:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 8013b78:	443b      	add	r3, r7
 8013b7a:	4293      	cmp	r3, r2
 8013b7c:	f6bf af7e 	bge.w	8013a7c <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0xec>
 8013b80:	a817      	add	r0, sp, #92	@ 0x5c
 8013b82:	f002 fc7b 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8013b86:	b1f8      	cbz	r0, 8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013b88:	280a      	cmp	r0, #10
 8013b8a:	d1f1      	bne.n	8013b70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013b8c:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 8013b90:	444b      	add	r3, r9
 8013b92:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8013b96:	f8bd 3036 	ldrh.w	r3, [sp, #54]	@ 0x36
 8013b9a:	eba3 0309 	sub.w	r3, r3, r9
 8013b9e:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013ba2:	e7e5      	b.n	8013b70 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1e0>
 8013ba4:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 8013ba8:	b2b3      	uxth	r3, r6
 8013baa:	441a      	add	r2, r3
 8013bac:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 8013bb0:	f8bd 2036 	ldrh.w	r2, [sp, #54]	@ 0x36
 8013bb4:	1ad3      	subs	r3, r2, r3
 8013bb6:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 8013bba:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 8013bbe:	b11b      	cbz	r3, 8013bc8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x238>
 8013bc0:	f89d 305a 	ldrb.w	r3, [sp, #90]	@ 0x5a
 8013bc4:	2b00      	cmp	r3, #0
 8013bc6:	d0ba      	beq.n	8013b3e <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x1ae>
 8013bc8:	b063      	add	sp, #396	@ 0x18c
 8013bca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013bce:	2a02      	cmp	r2, #2
 8013bd0:	d105      	bne.n	8013bde <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x24e>
 8013bd2:	7be2      	ldrb	r2, [r4, #15]
 8013bd4:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8013bd8:	1a80      	subs	r0, r0, r2
 8013bda:	1ac0      	subs	r0, r0, r3
 8013bdc:	e773      	b.n	8013ac6 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x136>
 8013bde:	2000      	movs	r0, #0
 8013be0:	e772      	b.n	8013ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013be2:	7be0      	ldrb	r0, [r4, #15]
 8013be4:	e770      	b.n	8013ac8 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x138>
 8013be6:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013bea:	e773      	b.n	8013ad4 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x144>
 8013bec:	f1ba 0f00 	cmp.w	sl, #0
 8013bf0:	d0f7      	beq.n	8013be2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x252>
 8013bf2:	2264      	movs	r2, #100	@ 0x64
 8013bf4:	4639      	mov	r1, r7
 8013bf6:	a849      	add	r0, sp, #292	@ 0x124
 8013bf8:	f012 fc01 	bl	80263fe <memcpy>
 8013bfc:	2300      	movs	r3, #0
 8013bfe:	f647 72ff 	movw	r2, #32767	@ 0x7fff
 8013c02:	6821      	ldr	r1, [r4, #0]
 8013c04:	a849      	add	r0, sp, #292	@ 0x124
 8013c06:	f7ff fb9a 	bl	801333e <_ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih>
 8013c0a:	b203      	sxth	r3, r0
 8013c0c:	e751      	b.n	8013ab2 <_ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list+0x122>

08013c0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>:
 8013c0e:	2b03      	cmp	r3, #3
 8013c10:	d818      	bhi.n	8013c44 <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x36>
 8013c12:	e8df f003 	tbb	[pc, r3]
 8013c16:	0602      	.short	0x0602
 8013c18:	130d      	.short	0x130d
 8013c1a:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013c1e:	1850      	adds	r0, r2, r1
 8013c20:	4770      	bx	lr
 8013c22:	8803      	ldrh	r3, [r0, #0]
 8013c24:	8880      	ldrh	r0, [r0, #4]
 8013c26:	4418      	add	r0, r3
 8013c28:	b200      	sxth	r0, r0
 8013c2a:	1a80      	subs	r0, r0, r2
 8013c2c:	3801      	subs	r0, #1
 8013c2e:	4770      	bx	lr
 8013c30:	8803      	ldrh	r3, [r0, #0]
 8013c32:	8880      	ldrh	r0, [r0, #4]
 8013c34:	4418      	add	r0, r3
 8013c36:	b200      	sxth	r0, r0
 8013c38:	1a40      	subs	r0, r0, r1
 8013c3a:	e7f7      	b.n	8013c2c <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE+0x1e>
 8013c3c:	f9b0 0000 	ldrsh.w	r0, [r0]
 8013c40:	4410      	add	r0, r2
 8013c42:	4770      	bx	lr
 8013c44:	2000      	movs	r0, #0
 8013c46:	4770      	bx	lr

08013c48 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>:
 8013c48:	2b03      	cmp	r3, #3
 8013c4a:	d817      	bhi.n	8013c7c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x34>
 8013c4c:	e8df f003 	tbb	[pc, r3]
 8013c50:	10090602 	.word	0x10090602
 8013c54:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8013c58:	1850      	adds	r0, r2, r1
 8013c5a:	4770      	bx	lr
 8013c5c:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 8013c60:	e7fa      	b.n	8013c58 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x10>
 8013c62:	8843      	ldrh	r3, [r0, #2]
 8013c64:	88c0      	ldrh	r0, [r0, #6]
 8013c66:	4418      	add	r0, r3
 8013c68:	b200      	sxth	r0, r0
 8013c6a:	1a80      	subs	r0, r0, r2
 8013c6c:	3801      	subs	r0, #1
 8013c6e:	4770      	bx	lr
 8013c70:	8843      	ldrh	r3, [r0, #2]
 8013c72:	88c0      	ldrh	r0, [r0, #6]
 8013c74:	4418      	add	r0, r3
 8013c76:	b200      	sxth	r0, r0
 8013c78:	1a40      	subs	r0, r0, r1
 8013c7a:	e7f7      	b.n	8013c6c <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE+0x24>
 8013c7c:	2000      	movs	r0, #0
 8013c7e:	4770      	bx	lr

08013c80 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE>:
 8013c80:	4b01      	ldr	r3, [pc, #4]	@ (8013c88 <_GLOBAL__sub_I__ZN8touchgfx3LCD12defaultColorE+0x8>)
 8013c82:	2200      	movs	r2, #0
 8013c84:	601a      	str	r2, [r3, #0]
 8013c86:	4770      	bx	lr
 8013c88:	20002f5c 	.word	0x20002f5c

08013c8c <_ZN8touchgfx16TouchCalibration4clzuEm>:
 8013c8c:	4603      	mov	r3, r0
 8013c8e:	b1c8      	cbz	r0, 8013cc4 <_ZN8touchgfx16TouchCalibration4clzuEm+0x38>
 8013c90:	0c02      	lsrs	r2, r0, #16
 8013c92:	0412      	lsls	r2, r2, #16
 8013c94:	b9a2      	cbnz	r2, 8013cc0 <_ZN8touchgfx16TouchCalibration4clzuEm+0x34>
 8013c96:	0403      	lsls	r3, r0, #16
 8013c98:	2010      	movs	r0, #16
 8013c9a:	f013 4f7f 	tst.w	r3, #4278190080	@ 0xff000000
 8013c9e:	bf04      	itt	eq
 8013ca0:	021b      	lsleq	r3, r3, #8
 8013ca2:	3008      	addeq	r0, #8
 8013ca4:	f013 4f70 	tst.w	r3, #4026531840	@ 0xf0000000
 8013ca8:	bf04      	itt	eq
 8013caa:	011b      	lsleq	r3, r3, #4
 8013cac:	3004      	addeq	r0, #4
 8013cae:	f013 4f40 	tst.w	r3, #3221225472	@ 0xc0000000
 8013cb2:	bf04      	itt	eq
 8013cb4:	009b      	lsleq	r3, r3, #2
 8013cb6:	3002      	addeq	r0, #2
 8013cb8:	2b00      	cmp	r3, #0
 8013cba:	db04      	blt.n	8013cc6 <_ZN8touchgfx16TouchCalibration4clzuEm+0x3a>
 8013cbc:	3001      	adds	r0, #1
 8013cbe:	4770      	bx	lr
 8013cc0:	2000      	movs	r0, #0
 8013cc2:	e7ea      	b.n	8013c9a <_ZN8touchgfx16TouchCalibration4clzuEm+0xe>
 8013cc4:	2020      	movs	r0, #32
 8013cc6:	4770      	bx	lr

08013cc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>:
 8013cc8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013ccc:	b087      	sub	sp, #28
 8013cce:	460d      	mov	r5, r1
 8013cd0:	4616      	mov	r6, r2
 8013cd2:	4698      	mov	r8, r3
 8013cd4:	e9dd 4710 	ldrd	r4, r7, [sp, #64]	@ 0x40
 8013cd8:	4601      	mov	r1, r0
 8013cda:	b120      	cbz	r0, 8013ce6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013cdc:	b11a      	cbz	r2, 8013ce6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013cde:	2d1f      	cmp	r5, #31
 8013ce0:	d801      	bhi.n	8013ce6 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x1e>
 8013ce2:	2b1f      	cmp	r3, #31
 8013ce4:	d904      	bls.n	8013cf0 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x28>
 8013ce6:	2000      	movs	r0, #0
 8013ce8:	6038      	str	r0, [r7, #0]
 8013cea:	b007      	add	sp, #28
 8013cec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013cf0:	b97d      	cbnz	r5, 8013d12 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x4a>
 8013cf2:	b143      	cbz	r3, 8013d06 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x3e>
 8013cf4:	4602      	mov	r2, r0
 8013cf6:	e9cd 4700 	strd	r4, r7, [sp]
 8013cfa:	462b      	mov	r3, r5
 8013cfc:	4641      	mov	r1, r8
 8013cfe:	4630      	mov	r0, r6
 8013d00:	f7ff ffe2 	bl	8013cc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d04:	e7f1      	b.n	8013cea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d06:	f04f 33ff 	mov.w	r3, #4294967295
 8013d0a:	603b      	str	r3, [r7, #0]
 8013d0c:	f06f 4000 	mvn.w	r0, #2147483648	@ 0x80000000
 8013d10:	e7eb      	b.n	8013cea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d12:	fa32 fa05 	lsrs.w	sl, r2, r5
 8013d16:	d106      	bne.n	8013d26 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x5e>
 8013d18:	4346      	muls	r6, r0
 8013d1a:	fbb6 f0f4 	udiv	r0, r6, r4
 8013d1e:	fb04 6610 	mls	r6, r4, r0, r6
 8013d22:	603e      	str	r6, [r7, #0]
 8013d24:	e7e1      	b.n	8013cea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>
 8013d26:	2201      	movs	r2, #1
 8013d28:	40aa      	lsls	r2, r5
 8013d2a:	3a01      	subs	r2, #1
 8013d2c:	4016      	ands	r6, r2
 8013d2e:	fa00 fb05 	lsl.w	fp, r0, r5
 8013d32:	4630      	mov	r0, r6
 8013d34:	fbbb f9f4 	udiv	r9, fp, r4
 8013d38:	fb0a f309 	mul.w	r3, sl, r9
 8013d3c:	9303      	str	r3, [sp, #12]
 8013d3e:	f7ff ffa5 	bl	8013c8c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013d42:	462b      	mov	r3, r5
 8013d44:	460a      	mov	r2, r1
 8013d46:	e9cd 4700 	strd	r4, r7, [sp]
 8013d4a:	4601      	mov	r1, r0
 8013d4c:	4630      	mov	r0, r6
 8013d4e:	f7ff ffbb 	bl	8013cc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d52:	fb04 b919 	mls	r9, r4, r9, fp
 8013d56:	4606      	mov	r6, r0
 8013d58:	4648      	mov	r0, r9
 8013d5a:	eb05 0108 	add.w	r1, r5, r8
 8013d5e:	f7ff ff95 	bl	8013c8c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013d62:	ab05      	add	r3, sp, #20
 8013d64:	e9cd 4300 	strd	r4, r3, [sp]
 8013d68:	464a      	mov	r2, r9
 8013d6a:	4603      	mov	r3, r0
 8013d6c:	4650      	mov	r0, sl
 8013d6e:	f7ff ffab 	bl	8013cc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013d72:	6839      	ldr	r1, [r7, #0]
 8013d74:	9a05      	ldr	r2, [sp, #20]
 8013d76:	9b03      	ldr	r3, [sp, #12]
 8013d78:	4411      	add	r1, r2
 8013d7a:	fbb1 f2f4 	udiv	r2, r1, r4
 8013d7e:	18d3      	adds	r3, r2, r3
 8013d80:	441e      	add	r6, r3
 8013d82:	fb04 1412 	mls	r4, r4, r2, r1
 8013d86:	4430      	add	r0, r6
 8013d88:	603c      	str	r4, [r7, #0]
 8013d8a:	e7ae      	b.n	8013cea <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm+0x22>

08013d8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>:
 8013d8c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8013d90:	b085      	sub	sp, #20
 8013d92:	f1b0 0900 	subs.w	r9, r0, #0
 8013d96:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8013d98:	461d      	mov	r5, r3
 8013d9a:	bfbf      	itttt	lt
 8013d9c:	6823      	ldrlt	r3, [r4, #0]
 8013d9e:	425b      	neglt	r3, r3
 8013da0:	f1c9 0900 	rsblt	r9, r9, #0
 8013da4:	6023      	strlt	r3, [r4, #0]
 8013da6:	bfb4      	ite	lt
 8013da8:	f04f 36ff 	movlt.w	r6, #4294967295
 8013dac:	2601      	movge	r6, #1
 8013dae:	2a00      	cmp	r2, #0
 8013db0:	4617      	mov	r7, r2
 8013db2:	da04      	bge.n	8013dbe <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x32>
 8013db4:	6823      	ldr	r3, [r4, #0]
 8013db6:	425b      	negs	r3, r3
 8013db8:	4257      	negs	r7, r2
 8013dba:	4276      	negs	r6, r6
 8013dbc:	6023      	str	r3, [r4, #0]
 8013dbe:	2d00      	cmp	r5, #0
 8013dc0:	4638      	mov	r0, r7
 8013dc2:	bfba      	itte	lt
 8013dc4:	426d      	neglt	r5, r5
 8013dc6:	f04f 38ff 	movlt.w	r8, #4294967295
 8013dca:	f04f 0801 	movge.w	r8, #1
 8013dce:	f7ff ff5d 	bl	8013c8c <_ZN8touchgfx16TouchCalibration4clzuEm>
 8013dd2:	ab03      	add	r3, sp, #12
 8013dd4:	e9cd 5300 	strd	r5, r3, [sp]
 8013dd8:	463a      	mov	r2, r7
 8013dda:	4603      	mov	r3, r0
 8013ddc:	4648      	mov	r0, r9
 8013dde:	f7ff ff73 	bl	8013cc8 <_ZN8touchgfx16TouchCalibration7muldivuEmmmmmRm>
 8013de2:	6823      	ldr	r3, [r4, #0]
 8013de4:	9a03      	ldr	r2, [sp, #12]
 8013de6:	4546      	cmp	r6, r8
 8013de8:	441a      	add	r2, r3
 8013dea:	fb92 f3f5 	sdiv	r3, r2, r5
 8013dee:	4418      	add	r0, r3
 8013df0:	bf18      	it	ne
 8013df2:	4240      	negne	r0, r0
 8013df4:	fb05 2313 	mls	r3, r5, r3, r2
 8013df8:	1c72      	adds	r2, r6, #1
 8013dfa:	6023      	str	r3, [r4, #0]
 8013dfc:	d105      	bne.n	8013e0a <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7e>
 8013dfe:	2b00      	cmp	r3, #0
 8013e00:	f1c3 0200 	rsb	r2, r3, #0
 8013e04:	db0b      	blt.n	8013e1e <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x92>
 8013e06:	6022      	str	r2, [r4, #0]
 8013e08:	e006      	b.n	8013e18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e0a:	2e01      	cmp	r6, #1
 8013e0c:	d104      	bne.n	8013e18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e0e:	2b00      	cmp	r3, #0
 8013e10:	da02      	bge.n	8013e18 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x8c>
 8013e12:	442b      	add	r3, r5
 8013e14:	3801      	subs	r0, #1
 8013e16:	6023      	str	r3, [r4, #0]
 8013e18:	b005      	add	sp, #20
 8013e1a:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8013e1e:	3801      	subs	r0, #1
 8013e20:	1b52      	subs	r2, r2, r5
 8013e22:	e7f0      	b.n	8013e06 <_ZN8touchgfx16TouchCalibration6muldivEllllRl+0x7a>

08013e24 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE>:
 8013e24:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8013e28:	4c1c      	ldr	r4, [pc, #112]	@ (8013e9c <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x78>)
 8013e2a:	6807      	ldr	r7, [r0, #0]
 8013e2c:	69a3      	ldr	r3, [r4, #24]
 8013e2e:	4605      	mov	r5, r0
 8013e30:	b92b      	cbnz	r3, 8013e3e <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x1a>
 8013e32:	6840      	ldr	r0, [r0, #4]
 8013e34:	e9c5 7000 	strd	r7, r0, [r5]
 8013e38:	b004      	add	sp, #16
 8013e3a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013e3e:	68a2      	ldr	r2, [r4, #8]
 8013e40:	6820      	ldr	r0, [r4, #0]
 8013e42:	ae04      	add	r6, sp, #16
 8013e44:	f04f 0802 	mov.w	r8, #2
 8013e48:	fb93 f1f8 	sdiv	r1, r3, r8
 8013e4c:	440a      	add	r2, r1
 8013e4e:	f846 2d04 	str.w	r2, [r6, #-4]!
 8013e52:	69e1      	ldr	r1, [r4, #28]
 8013e54:	9600      	str	r6, [sp, #0]
 8013e56:	463a      	mov	r2, r7
 8013e58:	f7ff ff98 	bl	8013d8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e5c:	69a3      	ldr	r3, [r4, #24]
 8013e5e:	686a      	ldr	r2, [r5, #4]
 8013e60:	6a21      	ldr	r1, [r4, #32]
 8013e62:	9600      	str	r6, [sp, #0]
 8013e64:	4607      	mov	r7, r0
 8013e66:	6860      	ldr	r0, [r4, #4]
 8013e68:	f7ff ff90 	bl	8013d8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e6c:	6962      	ldr	r2, [r4, #20]
 8013e6e:	69a3      	ldr	r3, [r4, #24]
 8013e70:	fb93 f8f8 	sdiv	r8, r3, r8
 8013e74:	4442      	add	r2, r8
 8013e76:	9203      	str	r2, [sp, #12]
 8013e78:	6a61      	ldr	r1, [r4, #36]	@ 0x24
 8013e7a:	682a      	ldr	r2, [r5, #0]
 8013e7c:	9600      	str	r6, [sp, #0]
 8013e7e:	4407      	add	r7, r0
 8013e80:	68e0      	ldr	r0, [r4, #12]
 8013e82:	f7ff ff83 	bl	8013d8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e86:	9600      	str	r6, [sp, #0]
 8013e88:	4680      	mov	r8, r0
 8013e8a:	69a3      	ldr	r3, [r4, #24]
 8013e8c:	686a      	ldr	r2, [r5, #4]
 8013e8e:	6aa1      	ldr	r1, [r4, #40]	@ 0x28
 8013e90:	6920      	ldr	r0, [r4, #16]
 8013e92:	f7ff ff7b 	bl	8013d8c <_ZN8touchgfx16TouchCalibration6muldivEllllRl>
 8013e96:	4440      	add	r0, r8
 8013e98:	e7cc      	b.n	8013e34 <_ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE+0x10>
 8013e9a:	bf00      	nop
 8013e9c:	20002f60 	.word	0x20002f60

08013ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>:
 8013ea0:	4b07      	ldr	r3, [pc, #28]	@ (8013ec0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x20>)
 8013ea2:	781b      	ldrb	r3, [r3, #0]
 8013ea4:	2b01      	cmp	r3, #1
 8013ea6:	d109      	bne.n	8013ebc <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x1c>
 8013ea8:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013eac:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013eb0:	8003      	strh	r3, [r0, #0]
 8013eb2:	4b04      	ldr	r3, [pc, #16]	@ (8013ec4 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_+0x24>)
 8013eb4:	881b      	ldrh	r3, [r3, #0]
 8013eb6:	3b01      	subs	r3, #1
 8013eb8:	1a9b      	subs	r3, r3, r2
 8013eba:	800b      	strh	r3, [r1, #0]
 8013ebc:	4770      	bx	lr
 8013ebe:	bf00      	nop
 8013ec0:	20002f4c 	.word	0x20002f4c
 8013ec4:	20002f48 	.word	0x20002f48

08013ec8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_>:
 8013ec8:	b510      	push	{r4, lr}
 8013eca:	4b07      	ldr	r3, [pc, #28]	@ (8013ee8 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x20>)
 8013ecc:	781b      	ldrb	r3, [r3, #0]
 8013ece:	2b01      	cmp	r3, #1
 8013ed0:	d108      	bne.n	8013ee4 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x1c>
 8013ed2:	4b06      	ldr	r3, [pc, #24]	@ (8013eec <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_+0x24>)
 8013ed4:	880c      	ldrh	r4, [r1, #0]
 8013ed6:	881b      	ldrh	r3, [r3, #0]
 8013ed8:	f9b0 2000 	ldrsh.w	r2, [r0]
 8013edc:	3b01      	subs	r3, #1
 8013ede:	1b1b      	subs	r3, r3, r4
 8013ee0:	8003      	strh	r3, [r0, #0]
 8013ee2:	800a      	strh	r2, [r1, #0]
 8013ee4:	bd10      	pop	{r4, pc}
 8013ee6:	bf00      	nop
 8013ee8:	20002f4c 	.word	0x20002f4c
 8013eec:	20002f48 	.word	0x20002f48

08013ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>:
 8013ef0:	b510      	push	{r4, lr}
 8013ef2:	4b0a      	ldr	r3, [pc, #40]	@ (8013f1c <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x2c>)
 8013ef4:	781b      	ldrb	r3, [r3, #0]
 8013ef6:	2b01      	cmp	r3, #1
 8013ef8:	d10e      	bne.n	8013f18 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x28>
 8013efa:	f9b0 1006 	ldrsh.w	r1, [r0, #6]
 8013efe:	8843      	ldrh	r3, [r0, #2]
 8013f00:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013f04:	8044      	strh	r4, [r0, #2]
 8013f06:	18ca      	adds	r2, r1, r3
 8013f08:	4b05      	ldr	r3, [pc, #20]	@ (8013f20 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE+0x30>)
 8013f0a:	881b      	ldrh	r3, [r3, #0]
 8013f0c:	1a9b      	subs	r3, r3, r2
 8013f0e:	8003      	strh	r3, [r0, #0]
 8013f10:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013f14:	80c3      	strh	r3, [r0, #6]
 8013f16:	8081      	strh	r1, [r0, #4]
 8013f18:	bd10      	pop	{r4, pc}
 8013f1a:	bf00      	nop
 8013f1c:	20002f4c 	.word	0x20002f4c
 8013f20:	20002f48 	.word	0x20002f48

08013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>:
 8013f24:	4b08      	ldr	r3, [pc, #32]	@ (8013f48 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x24>)
 8013f26:	781b      	ldrb	r3, [r3, #0]
 8013f28:	2b01      	cmp	r3, #1
 8013f2a:	d10c      	bne.n	8013f46 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x22>
 8013f2c:	8803      	ldrh	r3, [r0, #0]
 8013f2e:	f9b0 1004 	ldrsh.w	r1, [r0, #4]
 8013f32:	8842      	ldrh	r2, [r0, #2]
 8013f34:	8002      	strh	r2, [r0, #0]
 8013f36:	185a      	adds	r2, r3, r1
 8013f38:	4b04      	ldr	r3, [pc, #16]	@ (8013f4c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE+0x28>)
 8013f3a:	881b      	ldrh	r3, [r3, #0]
 8013f3c:	1a9b      	subs	r3, r3, r2
 8013f3e:	8043      	strh	r3, [r0, #2]
 8013f40:	88c3      	ldrh	r3, [r0, #6]
 8013f42:	8083      	strh	r3, [r0, #4]
 8013f44:	80c1      	strh	r1, [r0, #6]
 8013f46:	4770      	bx	lr
 8013f48:	20002f4c 	.word	0x20002f4c
 8013f4c:	20002f48 	.word	0x20002f48

08013f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>:
 8013f50:	b510      	push	{r4, lr}
 8013f52:	4b07      	ldr	r3, [pc, #28]	@ (8013f70 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x20>)
 8013f54:	781b      	ldrb	r3, [r3, #0]
 8013f56:	2b01      	cmp	r3, #1
 8013f58:	d108      	bne.n	8013f6c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE+0x1c>
 8013f5a:	f9b1 3000 	ldrsh.w	r3, [r1]
 8013f5e:	f9b0 4000 	ldrsh.w	r4, [r0]
 8013f62:	8003      	strh	r3, [r0, #0]
 8013f64:	8893      	ldrh	r3, [r2, #4]
 8013f66:	3b01      	subs	r3, #1
 8013f68:	1b1b      	subs	r3, r3, r4
 8013f6a:	800b      	strh	r3, [r1, #0]
 8013f6c:	bd10      	pop	{r4, pc}
 8013f6e:	bf00      	nop
 8013f70:	20002f4c 	.word	0x20002f4c

08013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>:
 8013f74:	b510      	push	{r4, lr}
 8013f76:	4b0a      	ldr	r3, [pc, #40]	@ (8013fa0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x2c>)
 8013f78:	781b      	ldrb	r3, [r3, #0]
 8013f7a:	2b01      	cmp	r3, #1
 8013f7c:	460a      	mov	r2, r1
 8013f7e:	d10d      	bne.n	8013f9c <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_+0x28>
 8013f80:	8881      	ldrh	r1, [r0, #4]
 8013f82:	8803      	ldrh	r3, [r0, #0]
 8013f84:	440b      	add	r3, r1
 8013f86:	4601      	mov	r1, r0
 8013f88:	3b01      	subs	r3, #1
 8013f8a:	f821 3b02 	strh.w	r3, [r1], #2
 8013f8e:	f7ff ffdf 	bl	8013f50 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE>
 8013f92:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 8013f96:	88c2      	ldrh	r2, [r0, #6]
 8013f98:	8082      	strh	r2, [r0, #4]
 8013f9a:	80c3      	strh	r3, [r0, #6]
 8013f9c:	bd10      	pop	{r4, pc}
 8013f9e:	bf00      	nop
 8013fa0:	20002f4c 	.word	0x20002f4c

08013fa4 <_ZN8touchgfx11Application13requestRedrawEv>:
 8013fa4:	4b06      	ldr	r3, [pc, #24]	@ (8013fc0 <_ZN8touchgfx11Application13requestRedrawEv+0x1c>)
 8013fa6:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013faa:	4b06      	ldr	r3, [pc, #24]	@ (8013fc4 <_ZN8touchgfx11Application13requestRedrawEv+0x20>)
 8013fac:	f8a0 2134 	strh.w	r2, [r0, #308]	@ 0x134
 8013fb0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013fb4:	f8a0 3136 	strh.w	r3, [r0, #310]	@ 0x136
 8013fb8:	2100      	movs	r1, #0
 8013fba:	f8c0 1130 	str.w	r1, [r0, #304]	@ 0x130
 8013fbe:	4770      	bx	lr
 8013fc0:	20002f48 	.word	0x20002f48
 8013fc4:	20002f4a 	.word	0x20002f4a

08013fc8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE>:
 8013fc8:	4b03      	ldr	r3, [pc, #12]	@ (8013fd8 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0x10>)
 8013fca:	6818      	ldr	r0, [r3, #0]
 8013fcc:	b110      	cbz	r0, 8013fd4 <_ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE+0xc>
 8013fce:	6803      	ldr	r3, [r0, #0]
 8013fd0:	699b      	ldr	r3, [r3, #24]
 8013fd2:	4718      	bx	r3
 8013fd4:	4770      	bx	lr
 8013fd6:	bf00      	nop
 8013fd8:	20002f90 	.word	0x20002f90

08013fdc <_ZN8touchgfx11Application29handlePendingScreenTransitionEv>:
 8013fdc:	4770      	bx	lr
	...

08013fe0 <_ZN8touchgfx11Application4drawEv>:
 8013fe0:	b507      	push	{r0, r1, r2, lr}
 8013fe2:	4b09      	ldr	r3, [pc, #36]	@ (8014008 <_ZN8touchgfx11Application4drawEv+0x28>)
 8013fe4:	f9b3 2000 	ldrsh.w	r2, [r3]
 8013fe8:	4b08      	ldr	r3, [pc, #32]	@ (801400c <_ZN8touchgfx11Application4drawEv+0x2c>)
 8013fea:	f8ad 2004 	strh.w	r2, [sp, #4]
 8013fee:	f9b3 3000 	ldrsh.w	r3, [r3]
 8013ff2:	f8ad 3006 	strh.w	r3, [sp, #6]
 8013ff6:	6803      	ldr	r3, [r0, #0]
 8013ff8:	2100      	movs	r1, #0
 8013ffa:	9100      	str	r1, [sp, #0]
 8013ffc:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8013ffe:	4669      	mov	r1, sp
 8014000:	4798      	blx	r3
 8014002:	b003      	add	sp, #12
 8014004:	f85d fb04 	ldr.w	pc, [sp], #4
 8014008:	20002f48 	.word	0x20002f48
 801400c:	20002f4a 	.word	0x20002f4a

08014010 <_ZN8touchgfx11Application10invalidateEv>:
 8014010:	4b09      	ldr	r3, [pc, #36]	@ (8014038 <_ZN8touchgfx11Application10invalidateEv+0x28>)
 8014012:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014016:	4b09      	ldr	r3, [pc, #36]	@ (801403c <_ZN8touchgfx11Application10invalidateEv+0x2c>)
 8014018:	b082      	sub	sp, #8
 801401a:	f9b3 3000 	ldrsh.w	r3, [r3]
 801401e:	f8ad 2004 	strh.w	r2, [sp, #4]
 8014022:	2100      	movs	r1, #0
 8014024:	f8ad 3006 	strh.w	r3, [sp, #6]
 8014028:	9100      	str	r1, [sp, #0]
 801402a:	6803      	ldr	r3, [r0, #0]
 801402c:	aa02      	add	r2, sp, #8
 801402e:	e912 0006 	ldmdb	r2, {r1, r2}
 8014032:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014034:	b002      	add	sp, #8
 8014036:	4718      	bx	r3
 8014038:	20002f48 	.word	0x20002f48
 801403c:	20002f4a 	.word	0x20002f4a

08014040 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE>:
 8014040:	4b03      	ldr	r3, [pc, #12]	@ (8014050 <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0x10>)
 8014042:	6818      	ldr	r0, [r3, #0]
 8014044:	b110      	cbz	r0, 801404c <_ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE+0xc>
 8014046:	6803      	ldr	r3, [r0, #0]
 8014048:	69db      	ldr	r3, [r3, #28]
 801404a:	4718      	bx	r3
 801404c:	4770      	bx	lr
 801404e:	bf00      	nop
 8014050:	20002f90 	.word	0x20002f90

08014054 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE>:
 8014054:	4b03      	ldr	r3, [pc, #12]	@ (8014064 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0x10>)
 8014056:	6818      	ldr	r0, [r3, #0]
 8014058:	b110      	cbz	r0, 8014060 <_ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE+0xc>
 801405a:	6803      	ldr	r3, [r0, #0]
 801405c:	6a1b      	ldr	r3, [r3, #32]
 801405e:	4718      	bx	r3
 8014060:	4770      	bx	lr
 8014062:	bf00      	nop
 8014064:	20002f90 	.word	0x20002f90

08014068 <_ZN8touchgfx11Application16clearCachedAreasEv>:
 8014068:	2300      	movs	r3, #0
 801406a:	f8a0 30ec 	strh.w	r3, [r0, #236]	@ 0xec
 801406e:	4770      	bx	lr

08014070 <_ZN8touchgfx11Application14handleKeyEventEh>:
 8014070:	4b03      	ldr	r3, [pc, #12]	@ (8014080 <_ZN8touchgfx11Application14handleKeyEventEh+0x10>)
 8014072:	6818      	ldr	r0, [r3, #0]
 8014074:	b110      	cbz	r0, 801407c <_ZN8touchgfx11Application14handleKeyEventEh+0xc>
 8014076:	6803      	ldr	r3, [r0, #0]
 8014078:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801407a:	4718      	bx	r3
 801407c:	4770      	bx	lr
 801407e:	bf00      	nop
 8014080:	20002f90 	.word	0x20002f90

08014084 <_ZNK8touchgfx4Rect9intersectERKS0_>:
 8014084:	b510      	push	{r4, lr}
 8014086:	f9b1 4000 	ldrsh.w	r4, [r1]
 801408a:	888a      	ldrh	r2, [r1, #4]
 801408c:	f9b0 3000 	ldrsh.w	r3, [r0]
 8014090:	4422      	add	r2, r4
 8014092:	b212      	sxth	r2, r2
 8014094:	4293      	cmp	r3, r2
 8014096:	da15      	bge.n	80140c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 8014098:	8882      	ldrh	r2, [r0, #4]
 801409a:	4413      	add	r3, r2
 801409c:	b21b      	sxth	r3, r3
 801409e:	429c      	cmp	r4, r3
 80140a0:	da10      	bge.n	80140c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80140a2:	f9b1 3002 	ldrsh.w	r3, [r1, #2]
 80140a6:	88c9      	ldrh	r1, [r1, #6]
 80140a8:	f9b0 2002 	ldrsh.w	r2, [r0, #2]
 80140ac:	4419      	add	r1, r3
 80140ae:	b209      	sxth	r1, r1
 80140b0:	428a      	cmp	r2, r1
 80140b2:	da07      	bge.n	80140c4 <_ZNK8touchgfx4Rect9intersectERKS0_+0x40>
 80140b4:	88c0      	ldrh	r0, [r0, #6]
 80140b6:	4410      	add	r0, r2
 80140b8:	b200      	sxth	r0, r0
 80140ba:	4283      	cmp	r3, r0
 80140bc:	bfac      	ite	ge
 80140be:	2000      	movge	r0, #0
 80140c0:	2001      	movlt	r0, #1
 80140c2:	bd10      	pop	{r4, pc}
 80140c4:	2000      	movs	r0, #0
 80140c6:	e7fc      	b.n	80140c2 <_ZNK8touchgfx4Rect9intersectERKS0_+0x3e>

080140c8 <_ZN8touchgfx4Rect10restrictToEss>:
 80140c8:	f9b0 3000 	ldrsh.w	r3, [r0]
 80140cc:	2b00      	cmp	r3, #0
 80140ce:	b510      	push	{r4, lr}
 80140d0:	da04      	bge.n	80140dc <_ZN8touchgfx4Rect10restrictToEss+0x14>
 80140d2:	8884      	ldrh	r4, [r0, #4]
 80140d4:	4423      	add	r3, r4
 80140d6:	8083      	strh	r3, [r0, #4]
 80140d8:	2300      	movs	r3, #0
 80140da:	8003      	strh	r3, [r0, #0]
 80140dc:	f9b0 4000 	ldrsh.w	r4, [r0]
 80140e0:	f9b0 3004 	ldrsh.w	r3, [r0, #4]
 80140e4:	1b09      	subs	r1, r1, r4
 80140e6:	428b      	cmp	r3, r1
 80140e8:	f9b0 3002 	ldrsh.w	r3, [r0, #2]
 80140ec:	bfc8      	it	gt
 80140ee:	8081      	strhgt	r1, [r0, #4]
 80140f0:	2b00      	cmp	r3, #0
 80140f2:	da04      	bge.n	80140fe <_ZN8touchgfx4Rect10restrictToEss+0x36>
 80140f4:	88c1      	ldrh	r1, [r0, #6]
 80140f6:	440b      	add	r3, r1
 80140f8:	80c3      	strh	r3, [r0, #6]
 80140fa:	2300      	movs	r3, #0
 80140fc:	8043      	strh	r3, [r0, #2]
 80140fe:	f9b0 1002 	ldrsh.w	r1, [r0, #2]
 8014102:	f9b0 3006 	ldrsh.w	r3, [r0, #6]
 8014106:	1a52      	subs	r2, r2, r1
 8014108:	4293      	cmp	r3, r2
 801410a:	bfc8      	it	gt
 801410c:	80c2      	strhgt	r2, [r0, #6]
 801410e:	bd10      	pop	{r4, pc}

08014110 <_ZN8touchgfx11Application4drawERNS_4RectE>:
 8014110:	b510      	push	{r4, lr}
 8014112:	4b10      	ldr	r3, [pc, #64]	@ (8014154 <_ZN8touchgfx11Application4drawERNS_4RectE+0x44>)
 8014114:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014118:	4b0f      	ldr	r3, [pc, #60]	@ (8014158 <_ZN8touchgfx11Application4drawERNS_4RectE+0x48>)
 801411a:	460c      	mov	r4, r1
 801411c:	4620      	mov	r0, r4
 801411e:	f9b3 1000 	ldrsh.w	r1, [r3]
 8014122:	f7ff ffd1 	bl	80140c8 <_ZN8touchgfx4Rect10restrictToEss>
 8014126:	4b0d      	ldr	r3, [pc, #52]	@ (801415c <_ZN8touchgfx11Application4drawERNS_4RectE+0x4c>)
 8014128:	6818      	ldr	r0, [r3, #0]
 801412a:	b190      	cbz	r0, 8014152 <_ZN8touchgfx11Application4drawERNS_4RectE+0x42>
 801412c:	6803      	ldr	r3, [r0, #0]
 801412e:	4621      	mov	r1, r4
 8014130:	689b      	ldr	r3, [r3, #8]
 8014132:	4798      	blx	r3
 8014134:	4b0a      	ldr	r3, [pc, #40]	@ (8014160 <_ZN8touchgfx11Application4drawERNS_4RectE+0x50>)
 8014136:	6818      	ldr	r0, [r3, #0]
 8014138:	b118      	cbz	r0, 8014142 <_ZN8touchgfx11Application4drawERNS_4RectE+0x32>
 801413a:	6803      	ldr	r3, [r0, #0]
 801413c:	4621      	mov	r1, r4
 801413e:	689b      	ldr	r3, [r3, #8]
 8014140:	4798      	blx	r3
 8014142:	4b08      	ldr	r3, [pc, #32]	@ (8014164 <_ZN8touchgfx11Application4drawERNS_4RectE+0x54>)
 8014144:	6818      	ldr	r0, [r3, #0]
 8014146:	6803      	ldr	r3, [r0, #0]
 8014148:	4621      	mov	r1, r4
 801414a:	69db      	ldr	r3, [r3, #28]
 801414c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8014150:	4718      	bx	r3
 8014152:	bd10      	pop	{r4, pc}
 8014154:	20002f4a 	.word	0x20002f4a
 8014158:	20002f48 	.word	0x20002f48
 801415c:	20002f90 	.word	0x20002f90
 8014160:	20002f8c 	.word	0x20002f8c
 8014164:	20002f54 	.word	0x20002f54

08014168 <_ZNK8touchgfx4Rect8includesERKS0_>:
 8014168:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801416a:	4606      	mov	r6, r0
 801416c:	4608      	mov	r0, r1
 801416e:	460f      	mov	r7, r1
 8014170:	f7fc fd57 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014174:	b9e8      	cbnz	r0, 80141b2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014176:	f9b7 5000 	ldrsh.w	r5, [r7]
 801417a:	f9b6 4000 	ldrsh.w	r4, [r6]
 801417e:	42a5      	cmp	r5, r4
 8014180:	db17      	blt.n	80141b2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 8014182:	f9b7 2002 	ldrsh.w	r2, [r7, #2]
 8014186:	f9b6 3002 	ldrsh.w	r3, [r6, #2]
 801418a:	429a      	cmp	r2, r3
 801418c:	db11      	blt.n	80141b2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801418e:	88b9      	ldrh	r1, [r7, #4]
 8014190:	440d      	add	r5, r1
 8014192:	88b1      	ldrh	r1, [r6, #4]
 8014194:	440c      	add	r4, r1
 8014196:	b22d      	sxth	r5, r5
 8014198:	b224      	sxth	r4, r4
 801419a:	42a5      	cmp	r5, r4
 801419c:	dc09      	bgt.n	80141b2 <_ZNK8touchgfx4Rect8includesERKS0_+0x4a>
 801419e:	88f8      	ldrh	r0, [r7, #6]
 80141a0:	4410      	add	r0, r2
 80141a2:	88f2      	ldrh	r2, [r6, #6]
 80141a4:	4413      	add	r3, r2
 80141a6:	b200      	sxth	r0, r0
 80141a8:	b21b      	sxth	r3, r3
 80141aa:	4298      	cmp	r0, r3
 80141ac:	bfcc      	ite	gt
 80141ae:	2000      	movgt	r0, #0
 80141b0:	2001      	movle	r0, #1
 80141b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080141b4 <_ZN8touchgfx4Rect11expandToFitERKS0_>:
 80141b4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80141b6:	4604      	mov	r4, r0
 80141b8:	4608      	mov	r0, r1
 80141ba:	460d      	mov	r5, r1
 80141bc:	f7fc fd31 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141c0:	b978      	cbnz	r0, 80141e2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
 80141c2:	4620      	mov	r0, r4
 80141c4:	f7fc fd2d 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80141c8:	f9b5 6000 	ldrsh.w	r6, [r5]
 80141cc:	b150      	cbz	r0, 80141e4 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x30>
 80141ce:	8026      	strh	r6, [r4, #0]
 80141d0:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 80141d4:	8063      	strh	r3, [r4, #2]
 80141d6:	f9b5 3004 	ldrsh.w	r3, [r5, #4]
 80141da:	80a3      	strh	r3, [r4, #4]
 80141dc:	f9b5 3006 	ldrsh.w	r3, [r5, #6]
 80141e0:	80e3      	strh	r3, [r4, #6]
 80141e2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80141e4:	f9b4 1000 	ldrsh.w	r1, [r4]
 80141e8:	f9b5 2002 	ldrsh.w	r2, [r5, #2]
 80141ec:	f9b4 3002 	ldrsh.w	r3, [r4, #2]
 80141f0:	f8b5 c004 	ldrh.w	ip, [r5, #4]
 80141f4:	88ed      	ldrh	r5, [r5, #6]
 80141f6:	42b1      	cmp	r1, r6
 80141f8:	460f      	mov	r7, r1
 80141fa:	bfa8      	it	ge
 80141fc:	4637      	movge	r7, r6
 80141fe:	4293      	cmp	r3, r2
 8014200:	4618      	mov	r0, r3
 8014202:	4466      	add	r6, ip
 8014204:	bfa8      	it	ge
 8014206:	4610      	movge	r0, r2
 8014208:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 801420c:	8027      	strh	r7, [r4, #0]
 801420e:	442a      	add	r2, r5
 8014210:	88e5      	ldrh	r5, [r4, #6]
 8014212:	8060      	strh	r0, [r4, #2]
 8014214:	4461      	add	r1, ip
 8014216:	442b      	add	r3, r5
 8014218:	b236      	sxth	r6, r6
 801421a:	b209      	sxth	r1, r1
 801421c:	b212      	sxth	r2, r2
 801421e:	b21b      	sxth	r3, r3
 8014220:	428e      	cmp	r6, r1
 8014222:	bfac      	ite	ge
 8014224:	ebc7 0106 	rsbge	r1, r7, r6
 8014228:	ebc7 0101 	rsblt	r1, r7, r1
 801422c:	429a      	cmp	r2, r3
 801422e:	bfac      	ite	ge
 8014230:	ebc0 0202 	rsbge	r2, r0, r2
 8014234:	ebc0 0203 	rsblt	r2, r0, r3
 8014238:	80a1      	strh	r1, [r4, #4]
 801423a:	80e2      	strh	r2, [r4, #6]
 801423c:	e7d1      	b.n	80141e2 <_ZN8touchgfx4Rect11expandToFitERKS0_+0x2e>
	...

08014240 <_ZN8touchgfx11Application11getInstanceEv>:
 8014240:	4b01      	ldr	r3, [pc, #4]	@ (8014248 <_ZN8touchgfx11Application11getInstanceEv+0x8>)
 8014242:	6818      	ldr	r0, [r3, #0]
 8014244:	4770      	bx	lr
 8014246:	bf00      	nop
 8014248:	20002fa0 	.word	0x20002fa0

0801424c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>:
 801424c:	b510      	push	{r4, lr}
 801424e:	2300      	movs	r3, #0
 8014250:	f8a0 30a4 	strh.w	r3, [r0, #164]	@ 0xa4
 8014254:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8014258:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 801425c:	4604      	mov	r4, r0
 801425e:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014262:	f8b4 20a6 	ldrh.w	r2, [r4, #166]	@ 0xa6
 8014266:	429a      	cmp	r2, r3
 8014268:	d90e      	bls.n	8014288 <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x3c>
 801426a:	18e2      	adds	r2, r4, r3
 801426c:	f892 2084 	ldrb.w	r2, [r2, #132]	@ 0x84
 8014270:	b122      	cbz	r2, 801427c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x30>
 8014272:	f854 0023 	ldr.w	r0, [r4, r3, lsl #2]
 8014276:	6803      	ldr	r3, [r0, #0]
 8014278:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801427a:	4798      	blx	r3
 801427c:	f8b4 30a4 	ldrh.w	r3, [r4, #164]	@ 0xa4
 8014280:	3301      	adds	r3, #1
 8014282:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 8014286:	e7ea      	b.n	801425e <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv+0x12>
 8014288:	bd10      	pop	{r4, pc}

0801428a <_ZN8touchgfx11Application12TimerWidgets5clearEv>:
 801428a:	2300      	movs	r3, #0
 801428c:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 8014290:	f100 0284 	add.w	r2, r0, #132	@ 0x84
 8014294:	30a4      	adds	r0, #164	@ 0xa4
 8014296:	f802 3b01 	strb.w	r3, [r2], #1
 801429a:	4282      	cmp	r2, r0
 801429c:	d1fb      	bne.n	8014296 <_ZN8touchgfx11Application12TimerWidgets5clearEv+0xc>
 801429e:	4770      	bx	lr

080142a0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE>:
 80142a0:	b570      	push	{r4, r5, r6, lr}
 80142a2:	4c0b      	ldr	r4, [pc, #44]	@ (80142d0 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x30>)
 80142a4:	4605      	mov	r5, r0
 80142a6:	6820      	ldr	r0, [r4, #0]
 80142a8:	460e      	mov	r6, r1
 80142aa:	b110      	cbz	r0, 80142b2 <_ZN8touchgfx11Application12switchScreenEPNS_6ScreenE+0x12>
 80142ac:	6803      	ldr	r3, [r0, #0]
 80142ae:	695b      	ldr	r3, [r3, #20]
 80142b0:	4798      	blx	r3
 80142b2:	1d28      	adds	r0, r5, #4
 80142b4:	f7ff ffe9 	bl	801428a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 80142b8:	6026      	str	r6, [r4, #0]
 80142ba:	6833      	ldr	r3, [r6, #0]
 80142bc:	4630      	mov	r0, r6
 80142be:	68db      	ldr	r3, [r3, #12]
 80142c0:	4798      	blx	r3
 80142c2:	682b      	ldr	r3, [r5, #0]
 80142c4:	4628      	mov	r0, r5
 80142c6:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80142c8:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80142cc:	4718      	bx	r3
 80142ce:	bf00      	nop
 80142d0:	20002f90 	.word	0x20002f90

080142d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>:
 80142d4:	2300      	movs	r3, #0
 80142d6:	f8b0 c080 	ldrh.w	ip, [r0, #128]	@ 0x80
 80142da:	f8b0 10a4 	ldrh.w	r1, [r0, #164]	@ 0xa4
 80142de:	b5f0      	push	{r4, r5, r6, r7, lr}
 80142e0:	461a      	mov	r2, r3
 80142e2:	461c      	mov	r4, r3
 80142e4:	461d      	mov	r5, r3
 80142e6:	459c      	cmp	ip, r3
 80142e8:	dd1a      	ble.n	8014320 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x4c>
 80142ea:	18c6      	adds	r6, r0, r3
 80142ec:	f896 6084 	ldrb.w	r6, [r6, #132]	@ 0x84
 80142f0:	b16e      	cbz	r6, 801430e <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x3a>
 80142f2:	429a      	cmp	r2, r3
 80142f4:	d008      	beq.n	8014308 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x34>
 80142f6:	fa1f fe82 	uxth.w	lr, r2
 80142fa:	f850 7023 	ldr.w	r7, [r0, r3, lsl #2]
 80142fe:	f840 702e 	str.w	r7, [r0, lr, lsl #2]
 8014302:	1887      	adds	r7, r0, r2
 8014304:	f887 6084 	strb.w	r6, [r7, #132]	@ 0x84
 8014308:	3201      	adds	r2, #1
 801430a:	3301      	adds	r3, #1
 801430c:	e7eb      	b.n	80142e6 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x12>
 801430e:	f8b0 60a6 	ldrh.w	r6, [r0, #166]	@ 0xa6
 8014312:	4299      	cmp	r1, r3
 8014314:	bfa8      	it	ge
 8014316:	3501      	addge	r5, #1
 8014318:	429e      	cmp	r6, r3
 801431a:	bfc8      	it	gt
 801431c:	3401      	addgt	r4, #1
 801431e:	e7f4      	b.n	801430a <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x36>
 8014320:	f8b0 30a6 	ldrh.w	r3, [r0, #166]	@ 0xa6
 8014324:	1b49      	subs	r1, r1, r5
 8014326:	1b1b      	subs	r3, r3, r4
 8014328:	f8a0 10a4 	strh.w	r1, [r0, #164]	@ 0xa4
 801432c:	f8a0 30a6 	strh.w	r3, [r0, #166]	@ 0xa6
 8014330:	f8b0 3080 	ldrh.w	r3, [r0, #128]	@ 0x80
 8014334:	4293      	cmp	r3, r2
 8014336:	dd03      	ble.n	8014340 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x6c>
 8014338:	3b01      	subs	r3, #1
 801433a:	f8a0 3080 	strh.w	r3, [r0, #128]	@ 0x80
 801433e:	e7f7      	b.n	8014330 <_ZN8touchgfx11Application12TimerWidgets7compactEv+0x5c>
 8014340:	bdf0      	pop	{r4, r5, r6, r7, pc}
	...

08014344 <_ZN8touchgfx11Application15handleTickEventEv>:
 8014344:	b570      	push	{r4, r5, r6, lr}
 8014346:	4d16      	ldr	r5, [pc, #88]	@ (80143a0 <_ZN8touchgfx11Application15handleTickEventEv+0x5c>)
 8014348:	4604      	mov	r4, r0
 801434a:	6828      	ldr	r0, [r5, #0]
 801434c:	b140      	cbz	r0, 8014360 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 801434e:	7a03      	ldrb	r3, [r0, #8]
 8014350:	b933      	cbnz	r3, 8014360 <_ZN8touchgfx11Application15handleTickEventEv+0x1c>
 8014352:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8014356:	6803      	ldr	r3, [r0, #0]
 8014358:	689b      	ldr	r3, [r3, #8]
 801435a:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801435e:	4718      	bx	r3
 8014360:	f894 3138 	ldrb.w	r3, [r4, #312]	@ 0x138
 8014364:	4e0f      	ldr	r6, [pc, #60]	@ (80143a4 <_ZN8touchgfx11Application15handleTickEventEv+0x60>)
 8014366:	b973      	cbnz	r3, 8014386 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 8014368:	b168      	cbz	r0, 8014386 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801436a:	7a03      	ldrb	r3, [r0, #8]
 801436c:	b15b      	cbz	r3, 8014386 <_ZN8touchgfx11Application15handleTickEventEv+0x42>
 801436e:	6830      	ldr	r0, [r6, #0]
 8014370:	b110      	cbz	r0, 8014378 <_ZN8touchgfx11Application15handleTickEventEv+0x34>
 8014372:	6803      	ldr	r3, [r0, #0]
 8014374:	691b      	ldr	r3, [r3, #16]
 8014376:	4798      	blx	r3
 8014378:	6828      	ldr	r0, [r5, #0]
 801437a:	6803      	ldr	r3, [r0, #0]
 801437c:	68db      	ldr	r3, [r3, #12]
 801437e:	4798      	blx	r3
 8014380:	2301      	movs	r3, #1
 8014382:	f884 3138 	strb.w	r3, [r4, #312]	@ 0x138
 8014386:	3404      	adds	r4, #4
 8014388:	4620      	mov	r0, r4
 801438a:	f7ff ff5f 	bl	801424c <_ZN8touchgfx11Application12TimerWidgets10tickActiveEv>
 801438e:	4620      	mov	r0, r4
 8014390:	f7ff ffa0 	bl	80142d4 <_ZN8touchgfx11Application12TimerWidgets7compactEv>
 8014394:	6830      	ldr	r0, [r6, #0]
 8014396:	b110      	cbz	r0, 801439e <_ZN8touchgfx11Application15handleTickEventEv+0x5a>
 8014398:	6803      	ldr	r3, [r0, #0]
 801439a:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 801439c:	e7dd      	b.n	801435a <_ZN8touchgfx11Application15handleTickEventEv+0x16>
 801439e:	bd70      	pop	{r4, r5, r6, pc}
 80143a0:	20002f94 	.word	0x20002f94
 80143a4:	20002f90 	.word	0x20002f90

080143a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>:
 80143a8:	4603      	mov	r3, r0
 80143aa:	f100 0140 	add.w	r1, r0, #64	@ 0x40
 80143ae:	2200      	movs	r2, #0
 80143b0:	801a      	strh	r2, [r3, #0]
 80143b2:	805a      	strh	r2, [r3, #2]
 80143b4:	809a      	strh	r2, [r3, #4]
 80143b6:	80da      	strh	r2, [r3, #6]
 80143b8:	3308      	adds	r3, #8
 80143ba:	428b      	cmp	r3, r1
 80143bc:	d1f8      	bne.n	80143b0 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev+0x8>
 80143be:	f8a0 2040 	strh.w	r2, [r0, #64]	@ 0x40
 80143c2:	4770      	bx	lr

080143c4 <_ZN8touchgfx11ApplicationC1Ev>:
 80143c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80143c6:	4606      	mov	r6, r0
 80143c8:	4b1c      	ldr	r3, [pc, #112]	@ (801443c <_ZN8touchgfx11ApplicationC1Ev+0x78>)
 80143ca:	f846 3b04 	str.w	r3, [r6], #4
 80143ce:	4604      	mov	r4, r0
 80143d0:	2500      	movs	r5, #0
 80143d2:	22a8      	movs	r2, #168	@ 0xa8
 80143d4:	2100      	movs	r1, #0
 80143d6:	4630      	mov	r0, r6
 80143d8:	f011 ff41 	bl	802625e <memset>
 80143dc:	f8a4 5084 	strh.w	r5, [r4, #132]	@ 0x84
 80143e0:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 80143e4:	f7ff ffe0 	bl	80143a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80143e8:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 80143ec:	f7ff ffdc 	bl	80143a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 80143f0:	f8a4 5130 	strh.w	r5, [r4, #304]	@ 0x130
 80143f4:	f8a4 5132 	strh.w	r5, [r4, #306]	@ 0x132
 80143f8:	f8a4 5134 	strh.w	r5, [r4, #308]	@ 0x134
 80143fc:	f8a4 5136 	strh.w	r5, [r4, #310]	@ 0x136
 8014400:	f884 5138 	strb.w	r5, [r4, #312]	@ 0x138
 8014404:	490e      	ldr	r1, [pc, #56]	@ (8014440 <_ZN8touchgfx11ApplicationC1Ev+0x7c>)
 8014406:	480f      	ldr	r0, [pc, #60]	@ (8014444 <_ZN8touchgfx11ApplicationC1Ev+0x80>)
 8014408:	4f0f      	ldr	r7, [pc, #60]	@ (8014448 <_ZN8touchgfx11ApplicationC1Ev+0x84>)
 801440a:	f011 fb49 	bl	8025aa0 <CRC_Lock>
 801440e:	4b0f      	ldr	r3, [pc, #60]	@ (801444c <_ZN8touchgfx11ApplicationC1Ev+0x88>)
 8014410:	b158      	cbz	r0, 801442a <_ZN8touchgfx11ApplicationC1Ev+0x66>
 8014412:	801d      	strh	r5, [r3, #0]
 8014414:	4a0e      	ldr	r2, [pc, #56]	@ (8014450 <_ZN8touchgfx11ApplicationC1Ev+0x8c>)
 8014416:	2300      	movs	r3, #0
 8014418:	6013      	str	r3, [r2, #0]
 801441a:	4a0e      	ldr	r2, [pc, #56]	@ (8014454 <_ZN8touchgfx11ApplicationC1Ev+0x90>)
 801441c:	603b      	str	r3, [r7, #0]
 801441e:	4630      	mov	r0, r6
 8014420:	6013      	str	r3, [r2, #0]
 8014422:	f7ff ff32 	bl	801428a <_ZN8touchgfx11Application12TimerWidgets5clearEv>
 8014426:	4620      	mov	r0, r4
 8014428:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801442a:	f44f 6280 	mov.w	r2, #1024	@ 0x400
 801442e:	2002      	movs	r0, #2
 8014430:	801a      	strh	r2, [r3, #0]
 8014432:	6038      	str	r0, [r7, #0]
 8014434:	f001 fa52 	bl	80158dc <_ZN8touchgfx6Screen4drawEv>
 8014438:	e7ec      	b.n	8014414 <_ZN8touchgfx11ApplicationC1Ev+0x50>
 801443a:	bf00      	nop
 801443c:	0802969c 	.word	0x0802969c
 8014440:	b5e8b5cd 	.word	0xb5e8b5cd
 8014444:	f407a5c2 	.word	0xf407a5c2
 8014448:	20002f90 	.word	0x20002f90
 801444c:	2000002c 	.word	0x2000002c
 8014450:	20002fa0 	.word	0x20002fa0
 8014454:	20002f94 	.word	0x20002f94

08014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>:
 8014458:	f8b0 3040 	ldrh.w	r3, [r0, #64]	@ 0x40
 801445c:	3b01      	subs	r3, #1
 801445e:	b29b      	uxth	r3, r3
 8014460:	428b      	cmp	r3, r1
 8014462:	b510      	push	{r4, lr}
 8014464:	f8a0 3040 	strh.w	r3, [r0, #64]	@ 0x40
 8014468:	d908      	bls.n	801447c <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt+0x24>
 801446a:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801446e:	eb00 04c1 	add.w	r4, r0, r1, lsl #3
 8014472:	681a      	ldr	r2, [r3, #0]
 8014474:	f840 2031 	str.w	r2, [r0, r1, lsl #3]
 8014478:	685a      	ldr	r2, [r3, #4]
 801447a:	6062      	str	r2, [r4, #4]
 801447c:	bd10      	pop	{r4, pc}
	...

08014480 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE>:
 8014480:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014484:	4b8f      	ldr	r3, [pc, #572]	@ (80146c4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x244>)
 8014486:	b08f      	sub	sp, #60	@ 0x3c
 8014488:	ac0a      	add	r4, sp, #40	@ 0x28
 801448a:	e884 0006 	stmia.w	r4, {r1, r2}
 801448e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8014492:	4b8d      	ldr	r3, [pc, #564]	@ (80146c8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x248>)
 8014494:	4683      	mov	fp, r0
 8014496:	f9b3 1000 	ldrsh.w	r1, [r3]
 801449a:	4620      	mov	r0, r4
 801449c:	f7ff fe14 	bl	80140c8 <_ZN8touchgfx4Rect10restrictToEss>
 80144a0:	4620      	mov	r0, r4
 80144a2:	f7fc fbbe 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80144a6:	2800      	cmp	r0, #0
 80144a8:	d16a      	bne.n	8014580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80144aa:	9403      	str	r4, [sp, #12]
 80144ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80144b0:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 80144b4:	eb0b 05c4 	add.w	r5, fp, r4, lsl #3
 80144b8:	35a4      	adds	r5, #164	@ 0xa4
 80144ba:	9301      	str	r3, [sp, #4]
 80144bc:	b15c      	cbz	r4, 80144d6 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x56>
 80144be:	4629      	mov	r1, r5
 80144c0:	9803      	ldr	r0, [sp, #12]
 80144c2:	f7ff fe51 	bl	8014168 <_ZNK8touchgfx4Rect8includesERKS0_>
 80144c6:	3c01      	subs	r4, #1
 80144c8:	b118      	cbz	r0, 80144d2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52>
 80144ca:	b2a1      	uxth	r1, r4
 80144cc:	9801      	ldr	r0, [sp, #4]
 80144ce:	f7ff ffc3 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80144d2:	3d08      	subs	r5, #8
 80144d4:	e7f2      	b.n	80144bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c>
 80144d6:	f8bb a0ec 	ldrh.w	sl, [fp, #236]	@ 0xec
 80144da:	f8cd a010 	str.w	sl, [sp, #16]
 80144de:	f10a 33ff 	add.w	r3, sl, #4294967295
 80144e2:	9302      	str	r3, [sp, #8]
 80144e4:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80144e8:	f103 04a4 	add.w	r4, r3, #164	@ 0xa4
 80144ec:	9306      	str	r3, [sp, #24]
 80144ee:	445c      	add	r4, fp
 80144f0:	2500      	movs	r5, #0
 80144f2:	4626      	mov	r6, r4
 80144f4:	f8cd a014 	str.w	sl, [sp, #20]
 80144f8:	462f      	mov	r7, r5
 80144fa:	9b05      	ldr	r3, [sp, #20]
 80144fc:	2b00      	cmp	r3, #0
 80144fe:	d073      	beq.n	80145e8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x168>
 8014500:	9903      	ldr	r1, [sp, #12]
 8014502:	4630      	mov	r0, r6
 8014504:	f7ff fdbe 	bl	8014084 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014508:	b350      	cbz	r0, 8014560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 801450a:	f9bd e028 	ldrsh.w	lr, [sp, #40]	@ 0x28
 801450e:	f9b6 c000 	ldrsh.w	ip, [r6]
 8014512:	f9bd 802a 	ldrsh.w	r8, [sp, #42]	@ 0x2a
 8014516:	f9b6 9002 	ldrsh.w	r9, [r6, #2]
 801451a:	45e6      	cmp	lr, ip
 801451c:	db33      	blt.n	8014586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 801451e:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8014522:	88b3      	ldrh	r3, [r6, #4]
 8014524:	4472      	add	r2, lr
 8014526:	4463      	add	r3, ip
 8014528:	b212      	sxth	r2, r2
 801452a:	b21b      	sxth	r3, r3
 801452c:	429a      	cmp	r2, r3
 801452e:	dc2a      	bgt.n	8014586 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x106>
 8014530:	88f3      	ldrh	r3, [r6, #6]
 8014532:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014536:	fa1f f289 	uxth.w	r2, r9
 801453a:	4413      	add	r3, r2
 801453c:	b29b      	uxth	r3, r3
 801453e:	45c8      	cmp	r8, r9
 8014540:	fa1f fc88 	uxth.w	ip, r8
 8014544:	fa0f fe83 	sxth.w	lr, r3
 8014548:	db0f      	blt.n	801456a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xea>
 801454a:	eba3 030c 	sub.w	r3, r3, ip
 801454e:	1ac9      	subs	r1, r1, r3
 8014550:	b209      	sxth	r1, r1
 8014552:	2900      	cmp	r1, #0
 8014554:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014558:	dd12      	ble.n	8014580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 801455a:	f8ad e02a 	strh.w	lr, [sp, #42]	@ 0x2a
 801455e:	4605      	mov	r5, r0
 8014560:	9b05      	ldr	r3, [sp, #20]
 8014562:	3b01      	subs	r3, #1
 8014564:	9305      	str	r3, [sp, #20]
 8014566:	3e08      	subs	r6, #8
 8014568:	e7c7      	b.n	80144fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x7a>
 801456a:	4461      	add	r1, ip
 801456c:	b209      	sxth	r1, r1
 801456e:	4571      	cmp	r1, lr
 8014570:	dc38      	bgt.n	80145e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 8014572:	eba2 020c 	sub.w	r2, r2, ip
 8014576:	b212      	sxth	r2, r2
 8014578:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801457c:	2a00      	cmp	r2, #0
 801457e:	dcee      	bgt.n	801455e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 8014580:	b00f      	add	sp, #60	@ 0x3c
 8014582:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014586:	45c8      	cmp	r8, r9
 8014588:	db2c      	blt.n	80145e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 801458a:	88f3      	ldrh	r3, [r6, #6]
 801458c:	4499      	add	r9, r3
 801458e:	f8bd 302e 	ldrh.w	r3, [sp, #46]	@ 0x2e
 8014592:	4498      	add	r8, r3
 8014594:	fa0f f989 	sxth.w	r9, r9
 8014598:	fa0f f888 	sxth.w	r8, r8
 801459c:	45c1      	cmp	r9, r8
 801459e:	db21      	blt.n	80145e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80145a0:	88b3      	ldrh	r3, [r6, #4]
 80145a2:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 80145a6:	fa1f f28c 	uxth.w	r2, ip
 80145aa:	4413      	add	r3, r2
 80145ac:	b29b      	uxth	r3, r3
 80145ae:	45e6      	cmp	lr, ip
 80145b0:	fa1f f88e 	uxth.w	r8, lr
 80145b4:	fa0f f983 	sxth.w	r9, r3
 80145b8:	db0a      	blt.n	80145d0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x150>
 80145ba:	eba3 0308 	sub.w	r3, r3, r8
 80145be:	1ac9      	subs	r1, r1, r3
 80145c0:	b209      	sxth	r1, r1
 80145c2:	2900      	cmp	r1, #0
 80145c4:	f8ad 102c 	strh.w	r1, [sp, #44]	@ 0x2c
 80145c8:	ddda      	ble.n	8014580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 80145ca:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 80145ce:	e7c6      	b.n	801455e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xde>
 80145d0:	4441      	add	r1, r8
 80145d2:	b209      	sxth	r1, r1
 80145d4:	4549      	cmp	r1, r9
 80145d6:	dc05      	bgt.n	80145e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x164>
 80145d8:	eba2 0208 	sub.w	r2, r2, r8
 80145dc:	b212      	sxth	r2, r2
 80145de:	f8ad 202c 	strh.w	r2, [sp, #44]	@ 0x2c
 80145e2:	e7cb      	b.n	801457c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xfc>
 80145e4:	4607      	mov	r7, r0
 80145e6:	e7bb      	b.n	8014560 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0xe0>
 80145e8:	2d00      	cmp	r5, #0
 80145ea:	d181      	bne.n	80144f0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x70>
 80145ec:	2f00      	cmp	r7, #0
 80145ee:	f000 81dd 	beq.w	80149ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80145f2:	f9bd 6028 	ldrsh.w	r6, [sp, #40]	@ 0x28
 80145f6:	f9bd 702a 	ldrsh.w	r7, [sp, #42]	@ 0x2a
 80145fa:	f8bd a02e 	ldrh.w	sl, [sp, #46]	@ 0x2e
 80145fe:	b2b3      	uxth	r3, r6
 8014600:	9305      	str	r3, [sp, #20]
 8014602:	9a05      	ldr	r2, [sp, #20]
 8014604:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 8014608:	4413      	add	r3, r2
 801460a:	b2ba      	uxth	r2, r7
 801460c:	4492      	add	sl, r2
 801460e:	b29b      	uxth	r3, r3
 8014610:	fa1f fa8a 	uxth.w	sl, sl
 8014614:	fa0f f883 	sxth.w	r8, r3
 8014618:	fa0f f98a 	sxth.w	r9, sl
 801461c:	e9cd 2307 	strd	r2, r3, [sp, #28]
 8014620:	9b04      	ldr	r3, [sp, #16]
 8014622:	2b00      	cmp	r3, #0
 8014624:	d052      	beq.n	80146cc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x24c>
 8014626:	9903      	ldr	r1, [sp, #12]
 8014628:	4620      	mov	r0, r4
 801462a:	f7ff fd2b 	bl	8014084 <_ZNK8touchgfx4Rect9intersectERKS0_>
 801462e:	e9dd 2307 	ldrd	r2, r3, [sp, #28]
 8014632:	b1c0      	cbz	r0, 8014666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014634:	f9b4 e000 	ldrsh.w	lr, [r4]
 8014638:	f9b4 1002 	ldrsh.w	r1, [r4, #2]
 801463c:	4576      	cmp	r6, lr
 801463e:	dc22      	bgt.n	8014686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 8014640:	f8b4 c004 	ldrh.w	ip, [r4, #4]
 8014644:	44f4      	add	ip, lr
 8014646:	fa0f fc8c 	sxth.w	ip, ip
 801464a:	45e0      	cmp	r8, ip
 801464c:	db1b      	blt.n	8014686 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x206>
 801464e:	428f      	cmp	r7, r1
 8014650:	fa1f fc81 	uxth.w	ip, r1
 8014654:	88e1      	ldrh	r1, [r4, #6]
 8014656:	dc0d      	bgt.n	8014674 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1f4>
 8014658:	ebaa 0c0c 	sub.w	ip, sl, ip
 801465c:	eba1 010c 	sub.w	r1, r1, ip
 8014660:	f8a4 9002 	strh.w	r9, [r4, #2]
 8014664:	80e1      	strh	r1, [r4, #6]
 8014666:	4628      	mov	r0, r5
 8014668:	9904      	ldr	r1, [sp, #16]
 801466a:	3901      	subs	r1, #1
 801466c:	9104      	str	r1, [sp, #16]
 801466e:	3c08      	subs	r4, #8
 8014670:	4605      	mov	r5, r0
 8014672:	e7d3      	b.n	801461c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x19c>
 8014674:	4461      	add	r1, ip
 8014676:	b209      	sxth	r1, r1
 8014678:	4549      	cmp	r1, r9
 801467a:	dcf5      	bgt.n	8014668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801467c:	eba2 0c0c 	sub.w	ip, r2, ip
 8014680:	f8a4 c006 	strh.w	ip, [r4, #6]
 8014684:	e7ef      	b.n	8014666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 8014686:	428f      	cmp	r7, r1
 8014688:	dcee      	bgt.n	8014668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 801468a:	f8b4 c006 	ldrh.w	ip, [r4, #6]
 801468e:	4461      	add	r1, ip
 8014690:	b209      	sxth	r1, r1
 8014692:	4589      	cmp	r9, r1
 8014694:	dbe8      	blt.n	8014668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 8014696:	4576      	cmp	r6, lr
 8014698:	fa1f fc8e 	uxth.w	ip, lr
 801469c:	88a1      	ldrh	r1, [r4, #4]
 801469e:	dc07      	bgt.n	80146b0 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x230>
 80146a0:	eba3 0c0c 	sub.w	ip, r3, ip
 80146a4:	eba1 010c 	sub.w	r1, r1, ip
 80146a8:	f8a4 8000 	strh.w	r8, [r4]
 80146ac:	80a1      	strh	r1, [r4, #4]
 80146ae:	e7da      	b.n	8014666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80146b0:	4461      	add	r1, ip
 80146b2:	b209      	sxth	r1, r1
 80146b4:	4588      	cmp	r8, r1
 80146b6:	dbd7      	blt.n	8014668 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e8>
 80146b8:	9905      	ldr	r1, [sp, #20]
 80146ba:	eba1 0c0c 	sub.w	ip, r1, ip
 80146be:	f8a4 c004 	strh.w	ip, [r4, #4]
 80146c2:	e7d0      	b.n	8014666 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x1e6>
 80146c4:	20002f4a 	.word	0x20002f4a
 80146c8:	20002f48 	.word	0x20002f48
 80146cc:	2d00      	cmp	r5, #0
 80146ce:	f000 816d 	beq.w	80149ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80146d2:	9b06      	ldr	r3, [sp, #24]
 80146d4:	445b      	add	r3, fp
 80146d6:	461c      	mov	r4, r3
 80146d8:	9b02      	ldr	r3, [sp, #8]
 80146da:	3301      	adds	r3, #1
 80146dc:	f000 8166 	beq.w	80149ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x52c>
 80146e0:	f104 05a4 	add.w	r5, r4, #164	@ 0xa4
 80146e4:	4629      	mov	r1, r5
 80146e6:	9803      	ldr	r0, [sp, #12]
 80146e8:	f7ff fd3e 	bl	8014168 <_ZNK8touchgfx4Rect8includesERKS0_>
 80146ec:	b120      	cbz	r0, 80146f8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x278>
 80146ee:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 80146f2:	9801      	ldr	r0, [sp, #4]
 80146f4:	f7ff feb0 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 80146f8:	9903      	ldr	r1, [sp, #12]
 80146fa:	4628      	mov	r0, r5
 80146fc:	f7ff fcc2 	bl	8014084 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014700:	2800      	cmp	r0, #0
 8014702:	f000 809c 	beq.w	801483e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 8014706:	f9b4 90a4 	ldrsh.w	r9, [r4, #164]	@ 0xa4
 801470a:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 801470e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014712:	9309      	str	r3, [sp, #36]	@ 0x24
 8014714:	fa1f f189 	uxth.w	r1, r9
 8014718:	eb01 0c03 	add.w	ip, r1, r3
 801471c:	fa1f fa8c 	uxth.w	sl, ip
 8014720:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 8014724:	f9bd e02a 	ldrsh.w	lr, [sp, #42]	@ 0x2a
 8014728:	f9b4 20a6 	ldrsh.w	r2, [r4, #166]	@ 0xa6
 801472c:	b283      	uxth	r3, r0
 801472e:	eb03 050c 	add.w	r5, r3, ip
 8014732:	b2ad      	uxth	r5, r5
 8014734:	9505      	str	r5, [sp, #20]
 8014736:	f9bd 5014 	ldrsh.w	r5, [sp, #20]
 801473a:	9504      	str	r5, [sp, #16]
 801473c:	4548      	cmp	r0, r9
 801473e:	f8bb 50ec 	ldrh.w	r5, [fp, #236]	@ 0xec
 8014742:	f340 8099 	ble.w	8014878 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3f8>
 8014746:	1a5b      	subs	r3, r3, r1
 8014748:	b29b      	uxth	r3, r3
 801474a:	4596      	cmp	lr, r2
 801474c:	fa0f f08a 	sxth.w	r0, sl
 8014750:	b21e      	sxth	r6, r3
 8014752:	dd2e      	ble.n	80147b2 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x332>
 8014754:	9f02      	ldr	r7, [sp, #8]
 8014756:	f8bd 402e 	ldrh.w	r4, [sp, #46]	@ 0x2e
 801475a:	eb0b 08c7 	add.w	r8, fp, r7, lsl #3
 801475e:	9f04      	ldr	r7, [sp, #16]
 8014760:	1a3f      	subs	r7, r7, r0
 8014762:	f8b8 00b2 	ldrh.w	r0, [r8, #178]	@ 0xb2
 8014766:	fa1f fe8e 	uxth.w	lr, lr
 801476a:	b292      	uxth	r2, r2
 801476c:	ebae 0102 	sub.w	r1, lr, r2
 8014770:	44a6      	add	lr, r4
 8014772:	4402      	add	r2, r0
 8014774:	b289      	uxth	r1, r1
 8014776:	fa0f fe8e 	sxth.w	lr, lr
 801477a:	b212      	sxth	r2, r2
 801477c:	b20d      	sxth	r5, r1
 801477e:	ebae 0202 	sub.w	r2, lr, r2
 8014782:	436f      	muls	r7, r5
 8014784:	4372      	muls	r2, r6
 8014786:	4297      	cmp	r7, r2
 8014788:	db09      	blt.n	801479e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x31e>
 801478a:	f8b8 20ac 	ldrh.w	r2, [r8, #172]	@ 0xac
 801478e:	f8a8 50b2 	strh.w	r5, [r8, #178]	@ 0xb2
 8014792:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 8014796:	449c      	add	ip, r3
 8014798:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801479c:	e686      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801479e:	4421      	add	r1, r4
 80147a0:	f8b8 30ae 	ldrh.w	r3, [r8, #174]	@ 0xae
 80147a4:	f8a8 60b0 	strh.w	r6, [r8, #176]	@ 0xb0
 80147a8:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 80147ac:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 80147b0:	e67c      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80147b2:	9f04      	ldr	r7, [sp, #16]
 80147b4:	42b8      	cmp	r0, r7
 80147b6:	da27      	bge.n	8014808 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x388>
 80147b8:	9902      	ldr	r1, [sp, #8]
 80147ba:	f8bd 502e 	ldrh.w	r5, [sp, #46]	@ 0x2e
 80147be:	eb0b 04c1 	add.w	r4, fp, r1, lsl #3
 80147c2:	eb05 010e 	add.w	r1, r5, lr
 80147c6:	fa1f f881 	uxth.w	r8, r1
 80147ca:	f8b4 10b2 	ldrh.w	r1, [r4, #178]	@ 0xb2
 80147ce:	4411      	add	r1, r2
 80147d0:	eba1 0108 	sub.w	r1, r1, r8
 80147d4:	b289      	uxth	r1, r1
 80147d6:	fa0f f988 	sxth.w	r9, r8
 80147da:	eba2 020e 	sub.w	r2, r2, lr
 80147de:	fa0f f881 	sxth.w	r8, r1
 80147e2:	1a3f      	subs	r7, r7, r0
 80147e4:	4372      	muls	r2, r6
 80147e6:	fb08 f707 	mul.w	r7, r8, r7
 80147ea:	42ba      	cmp	r2, r7
 80147ec:	dc06      	bgt.n	80147fc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x37c>
 80147ee:	f8a4 90ae 	strh.w	r9, [r4, #174]	@ 0xae
 80147f2:	f8a4 80b2 	strh.w	r8, [r4, #178]	@ 0xb2
 80147f6:	f8b4 20ac 	ldrh.w	r2, [r4, #172]	@ 0xac
 80147fa:	e7ca      	b.n	8014792 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x312>
 80147fc:	f8a4 60b0 	strh.w	r6, [r4, #176]	@ 0xb0
 8014800:	4429      	add	r1, r5
 8014802:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014806:	e651      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014808:	9805      	ldr	r0, [sp, #20]
 801480a:	ebaa 0000 	sub.w	r0, sl, r0
 801480e:	b280      	uxth	r0, r0
 8014810:	2d06      	cmp	r5, #6
 8014812:	fa0f fe80 	sxth.w	lr, r0
 8014816:	d817      	bhi.n	8014848 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3c8>
 8014818:	9b04      	ldr	r3, [sp, #16]
 801481a:	f8a4 30a4 	strh.w	r3, [r4, #164]	@ 0xa4
 801481e:	1c6b      	adds	r3, r5, #1
 8014820:	f9b4 10aa 	ldrsh.w	r1, [r4, #170]	@ 0xaa
 8014824:	f8a4 e0a8 	strh.w	lr, [r4, #168]	@ 0xa8
 8014828:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 801482c:	9b01      	ldr	r3, [sp, #4]
 801482e:	9801      	ldr	r0, [sp, #4]
 8014830:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014834:	f820 9035 	strh.w	r9, [r0, r5, lsl #3]
 8014838:	805a      	strh	r2, [r3, #2]
 801483a:	809e      	strh	r6, [r3, #4]
 801483c:	80d9      	strh	r1, [r3, #6]
 801483e:	9b02      	ldr	r3, [sp, #8]
 8014840:	3b01      	subs	r3, #1
 8014842:	9302      	str	r3, [sp, #8]
 8014844:	3c08      	subs	r4, #8
 8014846:	e747      	b.n	80146d8 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x258>
 8014848:	9a02      	ldr	r2, [sp, #8]
 801484a:	45b6      	cmp	lr, r6
 801484c:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8014850:	db0d      	blt.n	801486e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3ee>
 8014852:	449c      	add	ip, r3
 8014854:	fa1f fc8c 	uxth.w	ip, ip
 8014858:	445a      	add	r2, fp
 801485a:	f8ad c02c 	strh.w	ip, [sp, #44]	@ 0x2c
 801485e:	448c      	add	ip, r1
 8014860:	f8ad 9028 	strh.w	r9, [sp, #40]	@ 0x28
 8014864:	f8a2 c0ac 	strh.w	ip, [r2, #172]	@ 0xac
 8014868:	f8a2 e0b0 	strh.w	lr, [r2, #176]	@ 0xb0
 801486c:	e61e      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 801486e:	445a      	add	r2, fp
 8014870:	4484      	add	ip, r0
 8014872:	f8a2 60b0 	strh.w	r6, [r2, #176]	@ 0xb0
 8014876:	e78f      	b.n	8014798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014878:	f8bd 602e 	ldrh.w	r6, [sp, #46]	@ 0x2e
 801487c:	fa1f f18e 	uxth.w	r1, lr
 8014880:	eb01 0806 	add.w	r8, r1, r6
 8014884:	b293      	uxth	r3, r2
 8014886:	fa1f f888 	uxth.w	r8, r8
 801488a:	9306      	str	r3, [sp, #24]
 801488c:	fa0f f388 	sxth.w	r3, r8
 8014890:	9307      	str	r3, [sp, #28]
 8014892:	9f06      	ldr	r7, [sp, #24]
 8014894:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014898:	443b      	add	r3, r7
 801489a:	b29b      	uxth	r3, r3
 801489c:	4596      	cmp	lr, r2
 801489e:	9308      	str	r3, [sp, #32]
 80148a0:	da24      	bge.n	80148ec <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x46c>
 80148a2:	9905      	ldr	r1, [sp, #20]
 80148a4:	eba3 0308 	sub.w	r3, r3, r8
 80148a8:	ebaa 0401 	sub.w	r4, sl, r1
 80148ac:	b2a4      	uxth	r4, r4
 80148ae:	b29b      	uxth	r3, r3
 80148b0:	b225      	sxth	r5, r4
 80148b2:	b219      	sxth	r1, r3
 80148b4:	eba2 020e 	sub.w	r2, r2, lr
 80148b8:	eba9 0000 	sub.w	r0, r9, r0
 80148bc:	436a      	muls	r2, r5
 80148be:	4348      	muls	r0, r1
 80148c0:	4282      	cmp	r2, r0
 80148c2:	9a02      	ldr	r2, [sp, #8]
 80148c4:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80148c8:	445a      	add	r2, fp
 80148ca:	dc06      	bgt.n	80148da <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x45a>
 80148cc:	9b07      	ldr	r3, [sp, #28]
 80148ce:	f8a2 10b2 	strh.w	r1, [r2, #178]	@ 0xb2
 80148d2:	f8a2 30ae 	strh.w	r3, [r2, #174]	@ 0xae
 80148d6:	44a4      	add	ip, r4
 80148d8:	e75e      	b.n	8014798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 80148da:	9904      	ldr	r1, [sp, #16]
 80148dc:	f8a2 50b0 	strh.w	r5, [r2, #176]	@ 0xb0
 80148e0:	f8a2 10ac 	strh.w	r1, [r2, #172]	@ 0xac
 80148e4:	4433      	add	r3, r6
 80148e6:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 80148ea:	e5df      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80148ec:	9f06      	ldr	r7, [sp, #24]
 80148ee:	9b04      	ldr	r3, [sp, #16]
 80148f0:	1bc9      	subs	r1, r1, r7
 80148f2:	fa0f f78a 	sxth.w	r7, sl
 80148f6:	b289      	uxth	r1, r1
 80148f8:	429f      	cmp	r7, r3
 80148fa:	fa0f fe81 	sxth.w	lr, r1
 80148fe:	dd23      	ble.n	8014948 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4c8>
 8014900:	9a05      	ldr	r2, [sp, #20]
 8014902:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014906:	9d07      	ldr	r5, [sp, #28]
 8014908:	ebaa 0202 	sub.w	r2, sl, r2
 801490c:	b292      	uxth	r2, r2
 801490e:	eba5 0a03 	sub.w	sl, r5, r3
 8014912:	b214      	sxth	r4, r2
 8014914:	eba9 0000 	sub.w	r0, r9, r0
 8014918:	9b02      	ldr	r3, [sp, #8]
 801491a:	fb0e f000 	mul.w	r0, lr, r0
 801491e:	fb04 fa0a 	mul.w	sl, r4, sl
 8014922:	00db      	lsls	r3, r3, #3
 8014924:	4550      	cmp	r0, sl
 8014926:	445b      	add	r3, fp
 8014928:	db03      	blt.n	8014932 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4b2>
 801492a:	f8a3 e0b2 	strh.w	lr, [r3, #178]	@ 0xb2
 801492e:	4494      	add	ip, r2
 8014930:	e732      	b.n	8014798 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x318>
 8014932:	9a04      	ldr	r2, [sp, #16]
 8014934:	f8a3 20ac 	strh.w	r2, [r3, #172]	@ 0xac
 8014938:	f8a3 40b0 	strh.w	r4, [r3, #176]	@ 0xb0
 801493c:	f8b3 30ae 	ldrh.w	r3, [r3, #174]	@ 0xae
 8014940:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 8014944:	4431      	add	r1, r6
 8014946:	e75c      	b.n	8014802 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x382>
 8014948:	9b08      	ldr	r3, [sp, #32]
 801494a:	eba3 0308 	sub.w	r3, r3, r8
 801494e:	b29b      	uxth	r3, r3
 8014950:	2d06      	cmp	r5, #6
 8014952:	b218      	sxth	r0, r3
 8014954:	d813      	bhi.n	801497e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x4fe>
 8014956:	9b07      	ldr	r3, [sp, #28]
 8014958:	f8a4 30a6 	strh.w	r3, [r4, #166]	@ 0xa6
 801495c:	1c6b      	adds	r3, r5, #1
 801495e:	f8a4 00aa 	strh.w	r0, [r4, #170]	@ 0xaa
 8014962:	f8ab 30ec 	strh.w	r3, [fp, #236]	@ 0xec
 8014966:	9b01      	ldr	r3, [sp, #4]
 8014968:	9901      	ldr	r1, [sp, #4]
 801496a:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 801496e:	f821 9035 	strh.w	r9, [r1, r5, lsl #3]
 8014972:	805a      	strh	r2, [r3, #2]
 8014974:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8014976:	809a      	strh	r2, [r3, #4]
 8014978:	f8a3 e006 	strh.w	lr, [r3, #6]
 801497c:	e75f      	b.n	801483e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x3be>
 801497e:	9c02      	ldr	r4, [sp, #8]
 8014980:	4570      	cmp	r0, lr
 8014982:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 8014986:	db0d      	blt.n	80149a4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x524>
 8014988:	4431      	add	r1, r6
 801498a:	9b06      	ldr	r3, [sp, #24]
 801498c:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 8014990:	b289      	uxth	r1, r1
 8014992:	445c      	add	r4, fp
 8014994:	f8ad 102e 	strh.w	r1, [sp, #46]	@ 0x2e
 8014998:	4419      	add	r1, r3
 801499a:	f8a4 10ae 	strh.w	r1, [r4, #174]	@ 0xae
 801499e:	f8a4 00b2 	strh.w	r0, [r4, #178]	@ 0xb2
 80149a2:	e583      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 80149a4:	445c      	add	r4, fp
 80149a6:	f8a4 e0b2 	strh.w	lr, [r4, #178]	@ 0xb2
 80149aa:	e79b      	b.n	80148e4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x464>
 80149ac:	f8bb 40ec 	ldrh.w	r4, [fp, #236]	@ 0xec
 80149b0:	1e65      	subs	r5, r4, #1
 80149b2:	b2ad      	uxth	r5, r5
 80149b4:	eb0b 04c4 	add.w	r4, fp, r4, lsl #3
 80149b8:	f64f 76ff 	movw	r6, #65535	@ 0xffff
 80149bc:	42b5      	cmp	r5, r6
 80149be:	d044      	beq.n	8014a4a <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5ca>
 80149c0:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 80149c4:	f9b4 00a6 	ldrsh.w	r0, [r4, #166]	@ 0xa6
 80149c8:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 80149cc:	f9b4 70a4 	ldrsh.w	r7, [r4, #164]	@ 0xa4
 80149d0:	4282      	cmp	r2, r0
 80149d2:	d11f      	bne.n	8014a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80149d4:	f9bd c02e 	ldrsh.w	ip, [sp, #46]	@ 0x2e
 80149d8:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 80149dc:	459c      	cmp	ip, r3
 80149de:	d119      	bne.n	8014a14 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x594>
 80149e0:	f8b4 30a8 	ldrh.w	r3, [r4, #168]	@ 0xa8
 80149e4:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 80149e8:	19d8      	adds	r0, r3, r7
 80149ea:	b200      	sxth	r0, r0
 80149ec:	4288      	cmp	r0, r1
 80149ee:	d109      	bne.n	8014a04 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x584>
 80149f0:	f8ad 7028 	strh.w	r7, [sp, #40]	@ 0x28
 80149f4:	4413      	add	r3, r2
 80149f6:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 80149fa:	4629      	mov	r1, r5
 80149fc:	9801      	ldr	r0, [sp, #4]
 80149fe:	f7ff fd2b 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014a02:	e003      	b.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014a04:	4411      	add	r1, r2
 8014a06:	b209      	sxth	r1, r1
 8014a08:	42b9      	cmp	r1, r7
 8014a0a:	d0f3      	beq.n	80149f4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x574>
 8014a0c:	3d01      	subs	r5, #1
 8014a0e:	b2ad      	uxth	r5, r5
 8014a10:	3c08      	subs	r4, #8
 8014a12:	e7d3      	b.n	80149bc <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x53c>
 8014a14:	42b9      	cmp	r1, r7
 8014a16:	d1f9      	bne.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014a18:	f9bd 102c 	ldrsh.w	r1, [sp, #44]	@ 0x2c
 8014a1c:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014a20:	4299      	cmp	r1, r3
 8014a22:	d1f3      	bne.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014a24:	f8b4 30aa 	ldrh.w	r3, [r4, #170]	@ 0xaa
 8014a28:	f8bd 102e 	ldrh.w	r1, [sp, #46]	@ 0x2e
 8014a2c:	181f      	adds	r7, r3, r0
 8014a2e:	b23f      	sxth	r7, r7
 8014a30:	42ba      	cmp	r2, r7
 8014a32:	d105      	bne.n	8014a40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5c0>
 8014a34:	f8ad 002a 	strh.w	r0, [sp, #42]	@ 0x2a
 8014a38:	440b      	add	r3, r1
 8014a3a:	f8ad 302e 	strh.w	r3, [sp, #46]	@ 0x2e
 8014a3e:	e7dc      	b.n	80149fa <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x57a>
 8014a40:	440a      	add	r2, r1
 8014a42:	b212      	sxth	r2, r2
 8014a44:	4290      	cmp	r0, r2
 8014a46:	d1e1      	bne.n	8014a0c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x58c>
 8014a48:	e7f6      	b.n	8014a38 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5b8>
 8014a4a:	f8bb 60ec 	ldrh.w	r6, [fp, #236]	@ 0xec
 8014a4e:	2e07      	cmp	r6, #7
 8014a50:	ea4f 04c6 	mov.w	r4, r6, lsl #3
 8014a54:	d812      	bhi.n	8014a7c <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x5fc>
 8014a56:	1c75      	adds	r5, r6, #1
 8014a58:	f8ab 50ec 	strh.w	r5, [fp, #236]	@ 0xec
 8014a5c:	9d01      	ldr	r5, [sp, #4]
 8014a5e:	f9bd 0028 	ldrsh.w	r0, [sp, #40]	@ 0x28
 8014a62:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8014a66:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8014a6a:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 8014a6e:	f825 0036 	strh.w	r0, [r5, r6, lsl #3]
 8014a72:	442c      	add	r4, r5
 8014a74:	8061      	strh	r1, [r4, #2]
 8014a76:	80a2      	strh	r2, [r4, #4]
 8014a78:	80e3      	strh	r3, [r4, #6]
 8014a7a:	e581      	b.n	8014580 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x100>
 8014a7c:	f10b 03ac 	add.w	r3, fp, #172	@ 0xac
 8014a80:	3e01      	subs	r6, #1
 8014a82:	445c      	add	r4, fp
 8014a84:	f06f 4a00 	mvn.w	sl, #2147483648	@ 0x80000000
 8014a88:	f04f 37ff 	mov.w	r7, #4294967295
 8014a8c:	2500      	movs	r5, #0
 8014a8e:	9305      	str	r3, [sp, #20]
 8014a90:	f9b4 30a8 	ldrsh.w	r3, [r4, #168]	@ 0xa8
 8014a94:	9302      	str	r3, [sp, #8]
 8014a96:	1e72      	subs	r2, r6, #1
 8014a98:	f9b4 30aa 	ldrsh.w	r3, [r4, #170]	@ 0xaa
 8014a9c:	9304      	str	r3, [sp, #16]
 8014a9e:	4691      	mov	r9, r2
 8014aa0:	f104 03a4 	add.w	r3, r4, #164	@ 0xa4
 8014aa4:	f1b9 3fff 	cmp.w	r9, #4294967295
 8014aa8:	bf14      	ite	ne
 8014aaa:	9905      	ldrne	r1, [sp, #20]
 8014aac:	f8dd e00c 	ldreq.w	lr, [sp, #12]
 8014ab0:	6818      	ldr	r0, [r3, #0]
 8014ab2:	9207      	str	r2, [sp, #28]
 8014ab4:	bf18      	it	ne
 8014ab6:	eb01 0ec9 	addne.w	lr, r1, r9, lsl #3
 8014aba:	f10d 0c30 	add.w	ip, sp, #48	@ 0x30
 8014abe:	f8be 1006 	ldrh.w	r1, [lr, #6]
 8014ac2:	f8be 8004 	ldrh.w	r8, [lr, #4]
 8014ac6:	9306      	str	r3, [sp, #24]
 8014ac8:	fb18 f801 	smulbb	r8, r8, r1
 8014acc:	6859      	ldr	r1, [r3, #4]
 8014ace:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8014ad2:	4671      	mov	r1, lr
 8014ad4:	a80c      	add	r0, sp, #48	@ 0x30
 8014ad6:	f7ff fb6d 	bl	80141b4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014ada:	f8bd 1036 	ldrh.w	r1, [sp, #54]	@ 0x36
 8014ade:	f8bd 0034 	ldrh.w	r0, [sp, #52]	@ 0x34
 8014ae2:	9b04      	ldr	r3, [sp, #16]
 8014ae4:	9a02      	ldr	r2, [sp, #8]
 8014ae6:	fb10 f001 	smulbb	r0, r0, r1
 8014aea:	fb02 8803 	mla	r8, r2, r3, r8
 8014aee:	eba0 0108 	sub.w	r1, r0, r8
 8014af2:	f04f 0c08 	mov.w	ip, #8
 8014af6:	fb90 f0fc 	sdiv	r0, r0, ip
 8014afa:	4288      	cmp	r0, r1
 8014afc:	dc20      	bgt.n	8014b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014afe:	4551      	cmp	r1, sl
 8014b00:	e9dd 3206 	ldrd	r3, r2, [sp, #24]
 8014b04:	da03      	bge.n	8014b0e <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x68e>
 8014b06:	b1d9      	cbz	r1, 8014b40 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c0>
 8014b08:	468a      	mov	sl, r1
 8014b0a:	464f      	mov	r7, r9
 8014b0c:	4635      	mov	r5, r6
 8014b0e:	f109 39ff 	add.w	r9, r9, #4294967295
 8014b12:	f119 0f02 	cmn.w	r9, #2
 8014b16:	d1c5      	bne.n	8014aa4 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x624>
 8014b18:	4616      	mov	r6, r2
 8014b1a:	3201      	adds	r2, #1
 8014b1c:	f1a4 0408 	sub.w	r4, r4, #8
 8014b20:	d1b6      	bne.n	8014a90 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x610>
 8014b22:	9b01      	ldr	r3, [sp, #4]
 8014b24:	b2ac      	uxth	r4, r5
 8014b26:	00ed      	lsls	r5, r5, #3
 8014b28:	1958      	adds	r0, r3, r5
 8014b2a:	1c7b      	adds	r3, r7, #1
 8014b2c:	d10b      	bne.n	8014b46 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6c6>
 8014b2e:	4601      	mov	r1, r0
 8014b30:	9803      	ldr	r0, [sp, #12]
 8014b32:	f7ff fb3f 	bl	80141b4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014b36:	4621      	mov	r1, r4
 8014b38:	9801      	ldr	r0, [sp, #4]
 8014b3a:	f7ff fc8d 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014b3e:	e4b5      	b.n	80144ac <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x2c>
 8014b40:	464f      	mov	r7, r9
 8014b42:	4635      	mov	r5, r6
 8014b44:	e7ed      	b.n	8014b22 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6a2>
 8014b46:	9b01      	ldr	r3, [sp, #4]
 8014b48:	00ff      	lsls	r7, r7, #3
 8014b4a:	19d9      	adds	r1, r3, r7
 8014b4c:	f7ff fb32 	bl	80141b4 <_ZN8touchgfx4Rect11expandToFitERKS0_>
 8014b50:	9b03      	ldr	r3, [sp, #12]
 8014b52:	cb03      	ldmia	r3!, {r0, r1}
 8014b54:	445f      	add	r7, fp
 8014b56:	445d      	add	r5, fp
 8014b58:	f8c7 00ac 	str.w	r0, [r7, #172]	@ 0xac
 8014b5c:	f8c7 10b0 	str.w	r1, [r7, #176]	@ 0xb0
 8014b60:	f855 0fac 	ldr.w	r0, [r5, #172]!
 8014b64:	9b03      	ldr	r3, [sp, #12]
 8014b66:	6869      	ldr	r1, [r5, #4]
 8014b68:	c303      	stmia	r3!, {r0, r1}
 8014b6a:	e7e4      	b.n	8014b36 <_ZN8touchgfx11Application14invalidateAreaENS_4RectE+0x6b6>

08014b6c <_ZN8touchgfx11Application15drawCachedAreasEv>:
 8014b6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014b70:	f500 7698 	add.w	r6, r0, #304	@ 0x130
 8014b74:	b09b      	sub	sp, #108	@ 0x6c
 8014b76:	4604      	mov	r4, r0
 8014b78:	4630      	mov	r0, r6
 8014b7a:	f7fc f852 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014b7e:	4605      	mov	r5, r0
 8014b80:	b948      	cbnz	r0, 8014b96 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2a>
 8014b82:	6823      	ldr	r3, [r4, #0]
 8014b84:	e896 0006 	ldmia.w	r6, {r1, r2}
 8014b88:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014b8a:	4620      	mov	r0, r4
 8014b8c:	4798      	blx	r3
 8014b8e:	f8c4 5130 	str.w	r5, [r4, #304]	@ 0x130
 8014b92:	f8c4 5134 	str.w	r5, [r4, #308]	@ 0x134
 8014b96:	4bc6      	ldr	r3, [pc, #792]	@ (8014eb0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x344>)
 8014b98:	681b      	ldr	r3, [r3, #0]
 8014b9a:	2b00      	cmp	r3, #0
 8014b9c:	d03f      	beq.n	8014c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014b9e:	4dc5      	ldr	r5, [pc, #788]	@ (8014eb4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x348>)
 8014ba0:	4628      	mov	r0, r5
 8014ba2:	f7fc f83e 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014ba6:	4606      	mov	r6, r0
 8014ba8:	2800      	cmp	r0, #0
 8014baa:	d138      	bne.n	8014c1e <_ZN8touchgfx11Application15drawCachedAreasEv+0xb2>
 8014bac:	4628      	mov	r0, r5
 8014bae:	f7ff f99f 	bl	8013ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014bb2:	6823      	ldr	r3, [r4, #0]
 8014bb4:	6829      	ldr	r1, [r5, #0]
 8014bb6:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8014bb8:	686a      	ldr	r2, [r5, #4]
 8014bba:	4620      	mov	r0, r4
 8014bbc:	4798      	blx	r3
 8014bbe:	802e      	strh	r6, [r5, #0]
 8014bc0:	806e      	strh	r6, [r5, #2]
 8014bc2:	80ae      	strh	r6, [r5, #4]
 8014bc4:	80ee      	strh	r6, [r5, #6]
 8014bc6:	f10d 0824 	add.w	r8, sp, #36	@ 0x24
 8014bca:	4dbb      	ldr	r5, [pc, #748]	@ (8014eb8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x34c>)
 8014bcc:	4640      	mov	r0, r8
 8014bce:	f7ff fbeb 	bl	80143a8 <_ZN8touchgfx6VectorINS_4RectELt8EEC1Ev>
 8014bd2:	882e      	ldrh	r6, [r5, #0]
 8014bd4:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014bd8:	4633      	mov	r3, r6
 8014bda:	f104 00ac 	add.w	r0, r4, #172	@ 0xac
 8014bde:	42bb      	cmp	r3, r7
 8014be0:	d224      	bcs.n	8014c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014be2:	f8bd 1064 	ldrh.w	r1, [sp, #100]	@ 0x64
 8014be6:	2907      	cmp	r1, #7
 8014be8:	d816      	bhi.n	8014c18 <_ZN8touchgfx11Application15drawCachedAreasEv+0xac>
 8014bea:	eb00 02c3 	add.w	r2, r0, r3, lsl #3
 8014bee:	f930 9033 	ldrsh.w	r9, [r0, r3, lsl #3]
 8014bf2:	f9b2 a002 	ldrsh.w	sl, [r2, #2]
 8014bf6:	f9b2 e004 	ldrsh.w	lr, [r2, #4]
 8014bfa:	f9b2 c006 	ldrsh.w	ip, [r2, #6]
 8014bfe:	1c4a      	adds	r2, r1, #1
 8014c00:	f8ad 2064 	strh.w	r2, [sp, #100]	@ 0x64
 8014c04:	eb08 02c1 	add.w	r2, r8, r1, lsl #3
 8014c08:	f828 9031 	strh.w	r9, [r8, r1, lsl #3]
 8014c0c:	f8a2 a002 	strh.w	sl, [r2, #2]
 8014c10:	f8a2 e004 	strh.w	lr, [r2, #4]
 8014c14:	f8a2 c006 	strh.w	ip, [r2, #6]
 8014c18:	3301      	adds	r3, #1
 8014c1a:	b29b      	uxth	r3, r3
 8014c1c:	e7df      	b.n	8014bde <_ZN8touchgfx11Application15drawCachedAreasEv+0x72>
 8014c1e:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014c22:	2b00      	cmp	r3, #0
 8014c24:	d1cf      	bne.n	8014bc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x5a>
 8014c26:	b01b      	add	sp, #108	@ 0x6c
 8014c28:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014c2c:	f8b4 312e 	ldrh.w	r3, [r4, #302]	@ 0x12e
 8014c30:	42b3      	cmp	r3, r6
 8014c32:	d90c      	bls.n	8014c4e <_ZN8touchgfx11Application15drawCachedAreasEv+0xe2>
 8014c34:	eb04 03c6 	add.w	r3, r4, r6, lsl #3
 8014c38:	6822      	ldr	r2, [r4, #0]
 8014c3a:	f8d3 10ee 	ldr.w	r1, [r3, #238]	@ 0xee
 8014c3e:	6c17      	ldr	r7, [r2, #64]	@ 0x40
 8014c40:	f8d3 20f2 	ldr.w	r2, [r3, #242]	@ 0xf2
 8014c44:	4620      	mov	r0, r4
 8014c46:	3601      	adds	r6, #1
 8014c48:	47b8      	blx	r7
 8014c4a:	b2b6      	uxth	r6, r6
 8014c4c:	e7ee      	b.n	8014c2c <_ZN8touchgfx11Application15drawCachedAreasEv+0xc0>
 8014c4e:	4a9b      	ldr	r2, [pc, #620]	@ (8014ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014c50:	6813      	ldr	r3, [r2, #0]
 8014c52:	f893 3048 	ldrb.w	r3, [r3, #72]	@ 0x48
 8014c56:	2b01      	cmp	r3, #1
 8014c58:	4691      	mov	r9, r2
 8014c5a:	f040 80e2 	bne.w	8014e22 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b6>
 8014c5e:	8829      	ldrh	r1, [r5, #0]
 8014c60:	f8b4 70ec 	ldrh.w	r7, [r4, #236]	@ 0xec
 8014c64:	eb04 03c1 	add.w	r3, r4, r1, lsl #3
 8014c68:	33ae      	adds	r3, #174	@ 0xae
 8014c6a:	2600      	movs	r6, #0
 8014c6c:	428f      	cmp	r7, r1
 8014c6e:	f103 0308 	add.w	r3, r3, #8
 8014c72:	dd0a      	ble.n	8014c8a <_ZN8touchgfx11Application15drawCachedAreasEv+0x11e>
 8014c74:	f833 2c04 	ldrh.w	r2, [r3, #-4]
 8014c78:	f833 0c08 	ldrh.w	r0, [r3, #-8]
 8014c7c:	4402      	add	r2, r0
 8014c7e:	b212      	sxth	r2, r2
 8014c80:	4296      	cmp	r6, r2
 8014c82:	bfb8      	it	lt
 8014c84:	4616      	movlt	r6, r2
 8014c86:	3101      	adds	r1, #1
 8014c88:	e7f0      	b.n	8014c6c <_ZN8touchgfx11Application15drawCachedAreasEv+0x100>
 8014c8a:	4b8d      	ldr	r3, [pc, #564]	@ (8014ec0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x354>)
 8014c8c:	f8df 922c 	ldr.w	r9, [pc, #556]	@ 8014ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>
 8014c90:	881b      	ldrh	r3, [r3, #0]
 8014c92:	2b0f      	cmp	r3, #15
 8014c94:	bf88      	it	hi
 8014c96:	ea4f 0bd3 	movhi.w	fp, r3, lsr #3
 8014c9a:	f04f 0300 	mov.w	r3, #0
 8014c9e:	e9cd 3305 	strd	r3, r3, [sp, #20]
 8014ca2:	bf98      	it	ls
 8014ca4:	f04f 0b01 	movls.w	fp, #1
 8014ca8:	f8bd 7016 	ldrh.w	r7, [sp, #22]
 8014cac:	f8bd 001a 	ldrh.w	r0, [sp, #26]
 8014cb0:	4b82      	ldr	r3, [pc, #520]	@ (8014ebc <_ZN8touchgfx11Application15drawCachedAreasEv+0x350>)
 8014cb2:	4438      	add	r0, r7
 8014cb4:	b207      	sxth	r7, r0
 8014cb6:	6818      	ldr	r0, [r3, #0]
 8014cb8:	42b7      	cmp	r7, r6
 8014cba:	6803      	ldr	r3, [r0, #0]
 8014cbc:	f280 8083 	bge.w	8014dc6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x25a>
 8014cc0:	f8d3 309c 	ldr.w	r3, [r3, #156]	@ 0x9c
 8014cc4:	4798      	blx	r3
 8014cc6:	eb07 030b 	add.w	r3, r7, fp
 8014cca:	4298      	cmp	r0, r3
 8014ccc:	da07      	bge.n	8014cde <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014cce:	42b0      	cmp	r0, r6
 8014cd0:	da05      	bge.n	8014cde <_ZN8touchgfx11Application15drawCachedAreasEv+0x172>
 8014cd2:	4287      	cmp	r7, r0
 8014cd4:	dd6c      	ble.n	8014db0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014cd6:	2f00      	cmp	r7, #0
 8014cd8:	dd6a      	ble.n	8014db0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x244>
 8014cda:	4630      	mov	r0, r6
 8014cdc:	e004      	b.n	8014ce8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x17c>
 8014cde:	4287      	cmp	r7, r0
 8014ce0:	dcfb      	bgt.n	8014cda <_ZN8touchgfx11Application15drawCachedAreasEv+0x16e>
 8014ce2:	42b0      	cmp	r0, r6
 8014ce4:	bfa8      	it	ge
 8014ce6:	4630      	movge	r0, r6
 8014ce8:	4b76      	ldr	r3, [pc, #472]	@ (8014ec4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x358>)
 8014cea:	f8ad 7016 	strh.w	r7, [sp, #22]
 8014cee:	1bc0      	subs	r0, r0, r7
 8014cf0:	f9b3 3000 	ldrsh.w	r3, [r3]
 8014cf4:	882f      	ldrh	r7, [r5, #0]
 8014cf6:	f8ad 3018 	strh.w	r3, [sp, #24]
 8014cfa:	2200      	movs	r2, #0
 8014cfc:	f8ad 2014 	strh.w	r2, [sp, #20]
 8014d00:	f8ad 001a 	strh.w	r0, [sp, #26]
 8014d04:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8014d08:	42bb      	cmp	r3, r7
 8014d0a:	d9cd      	bls.n	8014ca8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014d0c:	eb04 02c7 	add.w	r2, r4, r7, lsl #3
 8014d10:	ab07      	add	r3, sp, #28
 8014d12:	f852 0fac 	ldr.w	r0, [r2, #172]!
 8014d16:	6851      	ldr	r1, [r2, #4]
 8014d18:	c303      	stmia	r3!, {r0, r1}
 8014d1a:	a905      	add	r1, sp, #20
 8014d1c:	a807      	add	r0, sp, #28
 8014d1e:	f7ff f9b1 	bl	8014084 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8014d22:	2800      	cmp	r0, #0
 8014d24:	d04c      	beq.n	8014dc0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x254>
 8014d26:	f9bd 001c 	ldrsh.w	r0, [sp, #28]
 8014d2a:	f9bd 2014 	ldrsh.w	r2, [sp, #20]
 8014d2e:	f8bd a020 	ldrh.w	sl, [sp, #32]
 8014d32:	f9bd 101e 	ldrsh.w	r1, [sp, #30]
 8014d36:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8014d3a:	9302      	str	r3, [sp, #8]
 8014d3c:	4686      	mov	lr, r0
 8014d3e:	4290      	cmp	r0, r2
 8014d40:	4450      	add	r0, sl
 8014d42:	f8bd a018 	ldrh.w	sl, [sp, #24]
 8014d46:	bfb8      	it	lt
 8014d48:	4696      	movlt	lr, r2
 8014d4a:	4452      	add	r2, sl
 8014d4c:	4299      	cmp	r1, r3
 8014d4e:	b280      	uxth	r0, r0
 8014d50:	b292      	uxth	r2, r2
 8014d52:	468c      	mov	ip, r1
 8014d54:	fa0f fa82 	sxth.w	sl, r2
 8014d58:	bfb8      	it	lt
 8014d5a:	469c      	movlt	ip, r3
 8014d5c:	b203      	sxth	r3, r0
 8014d5e:	4553      	cmp	r3, sl
 8014d60:	bfb8      	it	lt
 8014d62:	4602      	movlt	r2, r0
 8014d64:	eba2 020e 	sub.w	r2, r2, lr
 8014d68:	f8ad 2020 	strh.w	r2, [sp, #32]
 8014d6c:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 8014d70:	9b02      	ldr	r3, [sp, #8]
 8014d72:	f8ad e01c 	strh.w	lr, [sp, #28]
 8014d76:	4411      	add	r1, r2
 8014d78:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 8014d7c:	f8ad c01e 	strh.w	ip, [sp, #30]
 8014d80:	4413      	add	r3, r2
 8014d82:	b289      	uxth	r1, r1
 8014d84:	b29b      	uxth	r3, r3
 8014d86:	b208      	sxth	r0, r1
 8014d88:	b21a      	sxth	r2, r3
 8014d8a:	4290      	cmp	r0, r2
 8014d8c:	bfb8      	it	lt
 8014d8e:	460b      	movlt	r3, r1
 8014d90:	eba3 030c 	sub.w	r3, r3, ip
 8014d94:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 8014d98:	a807      	add	r0, sp, #28
 8014d9a:	f7fb ff42 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014d9e:	b920      	cbnz	r0, 8014daa <_ZN8touchgfx11Application15drawCachedAreasEv+0x23e>
 8014da0:	6823      	ldr	r3, [r4, #0]
 8014da2:	a907      	add	r1, sp, #28
 8014da4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014da6:	4620      	mov	r0, r4
 8014da8:	4798      	blx	r3
 8014daa:	3701      	adds	r7, #1
 8014dac:	b2bf      	uxth	r7, r7
 8014dae:	e7a9      	b.n	8014d04 <_ZN8touchgfx11Application15drawCachedAreasEv+0x198>
 8014db0:	f8d9 0000 	ldr.w	r0, [r9]
 8014db4:	6803      	ldr	r3, [r0, #0]
 8014db6:	2101      	movs	r1, #1
 8014db8:	f8d3 3098 	ldr.w	r3, [r3, #152]	@ 0x98
 8014dbc:	4798      	blx	r3
 8014dbe:	e773      	b.n	8014ca8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x13c>
 8014dc0:	e9cd 0007 	strd	r0, r0, [sp, #28]
 8014dc4:	e7e8      	b.n	8014d98 <_ZN8touchgfx11Application15drawCachedAreasEv+0x22c>
 8014dc6:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8014dc8:	4798      	blx	r3
 8014dca:	4b3f      	ldr	r3, [pc, #252]	@ (8014ec8 <_ZN8touchgfx11Application15drawCachedAreasEv+0x35c>)
 8014dcc:	781b      	ldrb	r3, [r3, #0]
 8014dce:	2b00      	cmp	r3, #0
 8014dd0:	f43f af29 	beq.w	8014c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014dd4:	2300      	movs	r3, #0
 8014dd6:	f8a4 312e 	strh.w	r3, [r4, #302]	@ 0x12e
 8014dda:	882b      	ldrh	r3, [r5, #0]
 8014ddc:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 8014de0:	f104 00ee 	add.w	r0, r4, #238	@ 0xee
 8014de4:	42ab      	cmp	r3, r5
 8014de6:	f4bf af1e 	bcs.w	8014c26 <_ZN8touchgfx11Application15drawCachedAreasEv+0xba>
 8014dea:	f8b4 112e 	ldrh.w	r1, [r4, #302]	@ 0x12e
 8014dee:	2907      	cmp	r1, #7
 8014df0:	d814      	bhi.n	8014e1c <_ZN8touchgfx11Application15drawCachedAreasEv+0x2b0>
 8014df2:	eb08 02c3 	add.w	r2, r8, r3, lsl #3
 8014df6:	f938 e033 	ldrsh.w	lr, [r8, r3, lsl #3]
 8014dfa:	f9b2 c002 	ldrsh.w	ip, [r2, #2]
 8014dfe:	f9b2 7004 	ldrsh.w	r7, [r2, #4]
 8014e02:	f9b2 6006 	ldrsh.w	r6, [r2, #6]
 8014e06:	1c4a      	adds	r2, r1, #1
 8014e08:	f8a4 212e 	strh.w	r2, [r4, #302]	@ 0x12e
 8014e0c:	eb00 02c1 	add.w	r2, r0, r1, lsl #3
 8014e10:	f820 e031 	strh.w	lr, [r0, r1, lsl #3]
 8014e14:	f8a2 c002 	strh.w	ip, [r2, #2]
 8014e18:	8097      	strh	r7, [r2, #4]
 8014e1a:	80d6      	strh	r6, [r2, #6]
 8014e1c:	3301      	adds	r3, #1
 8014e1e:	b29b      	uxth	r3, r3
 8014e20:	e7e0      	b.n	8014de4 <_ZN8touchgfx11Application15drawCachedAreasEv+0x278>
 8014e22:	2b02      	cmp	r3, #2
 8014e24:	f040 8133 	bne.w	801508e <_ZN8touchgfx11Application15drawCachedAreasEv+0x522>
 8014e28:	4b28      	ldr	r3, [pc, #160]	@ (8014ecc <_ZN8touchgfx11Application15drawCachedAreasEv+0x360>)
 8014e2a:	781b      	ldrb	r3, [r3, #0]
 8014e2c:	2b01      	cmp	r3, #1
 8014e2e:	f104 0aac 	add.w	sl, r4, #172	@ 0xac
 8014e32:	f000 8098 	beq.w	8014f66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014e36:	882a      	ldrh	r2, [r5, #0]
 8014e38:	f8b4 10ec 	ldrh.w	r1, [r4, #236]	@ 0xec
 8014e3c:	3201      	adds	r2, #1
 8014e3e:	b292      	uxth	r2, r2
 8014e40:	2900      	cmp	r1, #0
 8014e42:	d0c2      	beq.n	8014dca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014e44:	f8b4 60ae 	ldrh.w	r6, [r4, #174]	@ 0xae
 8014e48:	f8b4 30b2 	ldrh.w	r3, [r4, #178]	@ 0xb2
 8014e4c:	441e      	add	r6, r3
 8014e4e:	b236      	sxth	r6, r6
 8014e50:	4694      	mov	ip, r2
 8014e52:	f04f 0900 	mov.w	r9, #0
 8014e56:	fa1f f38c 	uxth.w	r3, ip
 8014e5a:	4299      	cmp	r1, r3
 8014e5c:	ea4f 07c9 	mov.w	r7, r9, lsl #3
 8014e60:	f240 80bf 	bls.w	8014fe2 <_ZN8touchgfx11Application15drawCachedAreasEv+0x476>
 8014e64:	4427      	add	r7, r4
 8014e66:	eb04 0ecc 	add.w	lr, r4, ip, lsl #3
 8014e6a:	f9b7 30ae 	ldrsh.w	r3, [r7, #174]	@ 0xae
 8014e6e:	f9be 00ae 	ldrsh.w	r0, [lr, #174]	@ 0xae
 8014e72:	4283      	cmp	r3, r0
 8014e74:	f340 80a1 	ble.w	8014fba <_ZN8touchgfx11Application15drawCachedAreasEv+0x44e>
 8014e78:	f8be 60b2 	ldrh.w	r6, [lr, #178]	@ 0xb2
 8014e7c:	4406      	add	r6, r0
 8014e7e:	b236      	sxth	r6, r6
 8014e80:	429e      	cmp	r6, r3
 8014e82:	bfa8      	it	ge
 8014e84:	461e      	movge	r6, r3
 8014e86:	46e1      	mov	r9, ip
 8014e88:	f10c 0c01 	add.w	ip, ip, #1
 8014e8c:	e7e3      	b.n	8014e56 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ea>
 8014e8e:	d10a      	bne.n	8014ea6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x33a>
 8014e90:	f9b6 00b2 	ldrsh.w	r0, [r6, #178]	@ 0xb2
 8014e94:	f9be 10b2 	ldrsh.w	r1, [lr, #178]	@ 0xb2
 8014e98:	4562      	cmp	r2, ip
 8014e9a:	bfb8      	it	lt
 8014e9c:	4662      	movlt	r2, ip
 8014e9e:	4288      	cmp	r0, r1
 8014ea0:	bfb8      	it	lt
 8014ea2:	461f      	movlt	r7, r3
 8014ea4:	e087      	b.n	8014fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014ea6:	428a      	cmp	r2, r1
 8014ea8:	bfb8      	it	lt
 8014eaa:	460a      	movlt	r2, r1
 8014eac:	e083      	b.n	8014fb6 <_ZN8touchgfx11Application15drawCachedAreasEv+0x44a>
 8014eae:	bf00      	nop
 8014eb0:	20002f8c 	.word	0x20002f8c
 8014eb4:	20002f98 	.word	0x20002f98
 8014eb8:	2000002c 	.word	0x2000002c
 8014ebc:	20002f54 	.word	0x20002f54
 8014ec0:	20002f4a 	.word	0x20002f4a
 8014ec4:	20002f48 	.word	0x20002f48
 8014ec8:	20002f52 	.word	0x20002f52
 8014ecc:	20002f4c 	.word	0x20002f4c
 8014ed0:	19a1      	adds	r1, r4, r6
 8014ed2:	ab07      	add	r3, sp, #28
 8014ed4:	f851 0fac 	ldr.w	r0, [r1, #172]!
 8014ed8:	6849      	ldr	r1, [r1, #4]
 8014eda:	c303      	stmia	r3!, {r0, r1}
 8014edc:	f9bd 3020 	ldrsh.w	r3, [sp, #32]
 8014ee0:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014ee4:	2b13      	cmp	r3, #19
 8014ee6:	bfd8      	it	le
 8014ee8:	f9bd 201c 	ldrshle.w	r2, [sp, #28]
 8014eec:	f8ad 201c 	strh.w	r2, [sp, #28]
 8014ef0:	440b      	add	r3, r1
 8014ef2:	1a9b      	subs	r3, r3, r2
 8014ef4:	a807      	add	r0, sp, #28
 8014ef6:	f8ad 3020 	strh.w	r3, [sp, #32]
 8014efa:	f7ff f813 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8014efe:	a807      	add	r0, sp, #28
 8014f00:	f7fb fe8f 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8014f04:	bb78      	cbnz	r0, 8014f66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014f06:	f9bd c022 	ldrsh.w	ip, [sp, #34]	@ 0x22
 8014f0a:	f8d9 0000 	ldr.w	r0, [r9]
 8014f0e:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8014f12:	f8d0 e000 	ldr.w	lr, [r0]
 8014f16:	f8bd 201e 	ldrh.w	r2, [sp, #30]
 8014f1a:	f8bd 101c 	ldrh.w	r1, [sp, #28]
 8014f1e:	f1bc 0f14 	cmp.w	ip, #20
 8014f22:	bfa8      	it	ge
 8014f24:	f04f 0c14 	movge.w	ip, #20
 8014f28:	fa1f fc8c 	uxth.w	ip, ip
 8014f2c:	f8cd c000 	str.w	ip, [sp]
 8014f30:	f8de b090 	ldr.w	fp, [lr, #144]	@ 0x90
 8014f34:	47d8      	blx	fp
 8014f36:	4683      	mov	fp, r0
 8014f38:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8014f3c:	a807      	add	r0, sp, #28
 8014f3e:	f7fe ffd7 	bl	8013ef0 <_ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERNS_4RectE>
 8014f42:	6823      	ldr	r3, [r4, #0]
 8014f44:	4426      	add	r6, r4
 8014f46:	4620      	mov	r0, r4
 8014f48:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8014f4a:	a907      	add	r1, sp, #28
 8014f4c:	4798      	blx	r3
 8014f4e:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014f52:	eba0 000b 	sub.w	r0, r0, fp
 8014f56:	b200      	sxth	r0, r0
 8014f58:	f8a6 00b0 	strh.w	r0, [r6, #176]	@ 0xb0
 8014f5c:	b918      	cbnz	r0, 8014f66 <_ZN8touchgfx11Application15drawCachedAreasEv+0x3fa>
 8014f5e:	b2b9      	uxth	r1, r7
 8014f60:	4650      	mov	r0, sl
 8014f62:	f7ff fa79 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 8014f66:	f8b4 b0ec 	ldrh.w	fp, [r4, #236]	@ 0xec
 8014f6a:	f1bb 0f00 	cmp.w	fp, #0
 8014f6e:	f43f af2c 	beq.w	8014dca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 8014f72:	882b      	ldrh	r3, [r5, #0]
 8014f74:	f9b4 20ac 	ldrsh.w	r2, [r4, #172]	@ 0xac
 8014f78:	3301      	adds	r3, #1
 8014f7a:	b29b      	uxth	r3, r3
 8014f7c:	2700      	movs	r7, #0
 8014f7e:	b299      	uxth	r1, r3
 8014f80:	458b      	cmp	fp, r1
 8014f82:	ea4f 06c7 	mov.w	r6, r7, lsl #3
 8014f86:	d9a3      	bls.n	8014ed0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x364>
 8014f88:	4426      	add	r6, r4
 8014f8a:	eb04 0ec3 	add.w	lr, r4, r3, lsl #3
 8014f8e:	f8b6 10ac 	ldrh.w	r1, [r6, #172]	@ 0xac
 8014f92:	f8b6 00b0 	ldrh.w	r0, [r6, #176]	@ 0xb0
 8014f96:	f9be c0ac 	ldrsh.w	ip, [lr, #172]	@ 0xac
 8014f9a:	4408      	add	r0, r1
 8014f9c:	f8be 10b0 	ldrh.w	r1, [lr, #176]	@ 0xb0
 8014fa0:	4461      	add	r1, ip
 8014fa2:	b200      	sxth	r0, r0
 8014fa4:	b209      	sxth	r1, r1
 8014fa6:	4288      	cmp	r0, r1
 8014fa8:	f6bf af71 	bge.w	8014e8e <_ZN8touchgfx11Application15drawCachedAreasEv+0x322>
 8014fac:	4584      	cmp	ip, r0
 8014fae:	4662      	mov	r2, ip
 8014fb0:	461f      	mov	r7, r3
 8014fb2:	bfb8      	it	lt
 8014fb4:	4602      	movlt	r2, r0
 8014fb6:	3301      	adds	r3, #1
 8014fb8:	e7e1      	b.n	8014f7e <_ZN8touchgfx11Application15drawCachedAreasEv+0x412>
 8014fba:	d10e      	bne.n	8014fda <_ZN8touchgfx11Application15drawCachedAreasEv+0x46e>
 8014fbc:	f9be 00b0 	ldrsh.w	r0, [lr, #176]	@ 0xb0
 8014fc0:	f8be e0b2 	ldrh.w	lr, [lr, #178]	@ 0xb2
 8014fc4:	f9b7 70b0 	ldrsh.w	r7, [r7, #176]	@ 0xb0
 8014fc8:	4473      	add	r3, lr
 8014fca:	b21b      	sxth	r3, r3
 8014fcc:	429e      	cmp	r6, r3
 8014fce:	bfa8      	it	ge
 8014fd0:	461e      	movge	r6, r3
 8014fd2:	4287      	cmp	r7, r0
 8014fd4:	bfb8      	it	lt
 8014fd6:	46e1      	movlt	r9, ip
 8014fd8:	e756      	b.n	8014e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014fda:	4286      	cmp	r6, r0
 8014fdc:	bfa8      	it	ge
 8014fde:	4606      	movge	r6, r0
 8014fe0:	e752      	b.n	8014e88 <_ZN8touchgfx11Application15drawCachedAreasEv+0x31c>
 8014fe2:	eb0a 0007 	add.w	r0, sl, r7
 8014fe6:	4427      	add	r7, r4
 8014fe8:	e9cd 2102 	strd	r2, r1, [sp, #8]
 8014fec:	f9b7 b0b2 	ldrsh.w	fp, [r7, #178]	@ 0xb2
 8014ff0:	f1bb 0f13 	cmp.w	fp, #19
 8014ff4:	bfde      	ittt	le
 8014ff6:	f8b7 60ae 	ldrhle.w	r6, [r7, #174]	@ 0xae
 8014ffa:	445e      	addle	r6, fp
 8014ffc:	b236      	sxthle	r6, r6
 8014ffe:	f7fb fe10 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 8015002:	e9dd 2102 	ldrd	r2, r1, [sp, #8]
 8015006:	2800      	cmp	r0, #0
 8015008:	f47f af1a 	bne.w	8014e40 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2d4>
 801500c:	f9b7 20ae 	ldrsh.w	r2, [r7, #174]	@ 0xae
 8015010:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 8015014:	482a      	ldr	r0, [pc, #168]	@ (80150c0 <_ZN8touchgfx11Application15drawCachedAreasEv+0x554>)
 8015016:	f9b7 10ac 	ldrsh.w	r1, [r7, #172]	@ 0xac
 801501a:	f9b7 30b0 	ldrsh.w	r3, [r7, #176]	@ 0xb0
 801501e:	6800      	ldr	r0, [r0, #0]
 8015020:	f8ad 101c 	strh.w	r1, [sp, #28]
 8015024:	1ab6      	subs	r6, r6, r2
 8015026:	2e14      	cmp	r6, #20
 8015028:	f8ad 201e 	strh.w	r2, [sp, #30]
 801502c:	f8ad 3020 	strh.w	r3, [sp, #32]
 8015030:	bfa8      	it	ge
 8015032:	2614      	movge	r6, #20
 8015034:	f8d0 c000 	ldr.w	ip, [r0]
 8015038:	b2b6      	uxth	r6, r6
 801503a:	fa1f fb8b 	uxth.w	fp, fp
 801503e:	455e      	cmp	r6, fp
 8015040:	bf94      	ite	ls
 8015042:	9600      	strls	r6, [sp, #0]
 8015044:	f8cd b000 	strhi.w	fp, [sp]
 8015048:	b292      	uxth	r2, r2
 801504a:	f8dc 6090 	ldr.w	r6, [ip, #144]	@ 0x90
 801504e:	b29b      	uxth	r3, r3
 8015050:	b289      	uxth	r1, r1
 8015052:	47b0      	blx	r6
 8015054:	6823      	ldr	r3, [r4, #0]
 8015056:	f8ad 0022 	strh.w	r0, [sp, #34]	@ 0x22
 801505a:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 801505c:	a907      	add	r1, sp, #28
 801505e:	4620      	mov	r0, r4
 8015060:	4798      	blx	r3
 8015062:	f8bd 1022 	ldrh.w	r1, [sp, #34]	@ 0x22
 8015066:	f8b7 30b2 	ldrh.w	r3, [r7, #178]	@ 0xb2
 801506a:	f8b7 20ae 	ldrh.w	r2, [r7, #174]	@ 0xae
 801506e:	1a5b      	subs	r3, r3, r1
 8015070:	440a      	add	r2, r1
 8015072:	b21b      	sxth	r3, r3
 8015074:	f8a7 20ae 	strh.w	r2, [r7, #174]	@ 0xae
 8015078:	f8a7 30b2 	strh.w	r3, [r7, #178]	@ 0xb2
 801507c:	2b00      	cmp	r3, #0
 801507e:	f47f aeda 	bne.w	8014e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 8015082:	fa1f f189 	uxth.w	r1, r9
 8015086:	4650      	mov	r0, sl
 8015088:	f7ff f9e6 	bl	8014458 <_ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt>
 801508c:	e6d3      	b.n	8014e36 <_ZN8touchgfx11Application15drawCachedAreasEv+0x2ca>
 801508e:	882e      	ldrh	r6, [r5, #0]
 8015090:	f8b4 30ec 	ldrh.w	r3, [r4, #236]	@ 0xec
 8015094:	42b3      	cmp	r3, r6
 8015096:	f67f ae98 	bls.w	8014dca <_ZN8touchgfx11Application15drawCachedAreasEv+0x25e>
 801509a:	eb04 02c6 	add.w	r2, r4, r6, lsl #3
 801509e:	ab07      	add	r3, sp, #28
 80150a0:	f852 0fac 	ldr.w	r0, [r2, #172]!
 80150a4:	6851      	ldr	r1, [r2, #4]
 80150a6:	c303      	stmia	r3!, {r0, r1}
 80150a8:	a807      	add	r0, sp, #28
 80150aa:	f7fb fdba 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 80150ae:	b920      	cbnz	r0, 80150ba <_ZN8touchgfx11Application15drawCachedAreasEv+0x54e>
 80150b0:	6823      	ldr	r3, [r4, #0]
 80150b2:	a907      	add	r1, sp, #28
 80150b4:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 80150b6:	4620      	mov	r0, r4
 80150b8:	4798      	blx	r3
 80150ba:	3601      	adds	r6, #1
 80150bc:	b2b6      	uxth	r6, r6
 80150be:	e7e7      	b.n	8015090 <_ZN8touchgfx11Application15drawCachedAreasEv+0x524>
 80150c0:	20002f54 	.word	0x20002f54

080150c4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE>:
 80150c4:	4b03      	ldr	r3, [pc, #12]	@ (80150d4 <_GLOBAL__sub_I__ZN8touchgfx11Application8instanceE+0x10>)
 80150c6:	2200      	movs	r2, #0
 80150c8:	801a      	strh	r2, [r3, #0]
 80150ca:	805a      	strh	r2, [r3, #2]
 80150cc:	809a      	strh	r2, [r3, #4]
 80150ce:	80da      	strh	r2, [r3, #6]
 80150d0:	4770      	bx	lr
 80150d2:	bf00      	nop
 80150d4:	20002f98 	.word	0x20002f98

080150d8 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list>:
 80150d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80150dc:	4606      	mov	r6, r0
 80150de:	b09d      	sub	sp, #116	@ 0x74
 80150e0:	a803      	add	r0, sp, #12
 80150e2:	4614      	mov	r4, r2
 80150e4:	468a      	mov	sl, r1
 80150e6:	461d      	mov	r5, r3
 80150e8:	f000 fd72 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 80150ec:	6833      	ldr	r3, [r6, #0]
 80150ee:	4630      	mov	r0, r6
 80150f0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80150f2:	4798      	blx	r3
 80150f4:	6833      	ldr	r3, [r6, #0]
 80150f6:	4607      	mov	r7, r0
 80150f8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80150fa:	4630      	mov	r0, r6
 80150fc:	4798      	blx	r3
 80150fe:	462a      	mov	r2, r5
 8015100:	9000      	str	r0, [sp, #0]
 8015102:	4621      	mov	r1, r4
 8015104:	463b      	mov	r3, r7
 8015106:	a803      	add	r0, sp, #12
 8015108:	f000 fdbd 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 801510c:	2500      	movs	r5, #0
 801510e:	462c      	mov	r4, r5
 8015110:	46a9      	mov	r9, r5
 8015112:	46a8      	mov	r8, r5
 8015114:	f242 0b0b 	movw	fp, #8203	@ 0x200b
 8015118:	2300      	movs	r3, #0
 801511a:	9302      	str	r3, [sp, #8]
 801511c:	f64f 63ff 	movw	r3, #65279	@ 0xfeff
 8015120:	429c      	cmp	r4, r3
 8015122:	d002      	beq.n	801512a <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x52>
 8015124:	455c      	cmp	r4, fp
 8015126:	bf18      	it	ne
 8015128:	4625      	movne	r5, r4
 801512a:	ab02      	add	r3, sp, #8
 801512c:	4632      	mov	r2, r6
 801512e:	4651      	mov	r1, sl
 8015130:	a803      	add	r0, sp, #12
 8015132:	f001 f8d5 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 8015136:	4604      	mov	r4, r0
 8015138:	b108      	cbz	r0, 801513e <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x66>
 801513a:	280a      	cmp	r0, #10
 801513c:	d10a      	bne.n	8015154 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x7c>
 801513e:	45c1      	cmp	r9, r8
 8015140:	bf38      	it	cc
 8015142:	46c1      	movcc	r9, r8
 8015144:	f04f 0800 	mov.w	r8, #0
 8015148:	2c00      	cmp	r4, #0
 801514a:	d1e5      	bne.n	8015118 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801514c:	4648      	mov	r0, r9
 801514e:	b01d      	add	sp, #116	@ 0x74
 8015150:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015154:	9a02      	ldr	r2, [sp, #8]
 8015156:	2a00      	cmp	r2, #0
 8015158:	d0de      	beq.n	8015118 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x40>
 801515a:	7b57      	ldrb	r7, [r2, #13]
 801515c:	6833      	ldr	r3, [r6, #0]
 801515e:	8894      	ldrh	r4, [r2, #4]
 8015160:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015162:	007f      	lsls	r7, r7, #1
 8015164:	f407 7080 	and.w	r0, r7, #256	@ 0x100
 8015168:	7a97      	ldrb	r7, [r2, #10]
 801516a:	4629      	mov	r1, r5
 801516c:	4307      	orrs	r7, r0
 801516e:	4630      	mov	r0, r6
 8015170:	4798      	blx	r3
 8015172:	4438      	add	r0, r7
 8015174:	4480      	add	r8, r0
 8015176:	fa1f f888 	uxth.w	r8, r8
 801517a:	e7e5      	b.n	8015148 <_ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list+0x70>

0801517c <_ZNK8touchgfx4Font12getCharWidthEt>:
 801517c:	b508      	push	{r3, lr}
 801517e:	6803      	ldr	r3, [r0, #0]
 8015180:	68db      	ldr	r3, [r3, #12]
 8015182:	4798      	blx	r3
 8015184:	b128      	cbz	r0, 8015192 <_ZNK8touchgfx4Font12getCharWidthEt+0x16>
 8015186:	7b43      	ldrb	r3, [r0, #13]
 8015188:	7a80      	ldrb	r0, [r0, #10]
 801518a:	005b      	lsls	r3, r3, #1
 801518c:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015190:	4318      	orrs	r0, r3
 8015192:	bd08      	pop	{r3, pc}

08015194 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz>:
 8015194:	b40e      	push	{r1, r2, r3}
 8015196:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015198:	b09e      	sub	sp, #120	@ 0x78
 801519a:	ab23      	add	r3, sp, #140	@ 0x8c
 801519c:	4605      	mov	r5, r0
 801519e:	f853 4b04 	ldr.w	r4, [r3], #4
 80151a2:	9303      	str	r3, [sp, #12]
 80151a4:	a805      	add	r0, sp, #20
 80151a6:	f000 fd13 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 80151aa:	682b      	ldr	r3, [r5, #0]
 80151ac:	4628      	mov	r0, r5
 80151ae:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80151b0:	4798      	blx	r3
 80151b2:	682b      	ldr	r3, [r5, #0]
 80151b4:	4606      	mov	r6, r0
 80151b6:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80151b8:	4628      	mov	r0, r5
 80151ba:	4798      	blx	r3
 80151bc:	4633      	mov	r3, r6
 80151be:	ae1e      	add	r6, sp, #120	@ 0x78
 80151c0:	4621      	mov	r1, r4
 80151c2:	9000      	str	r0, [sp, #0]
 80151c4:	9a03      	ldr	r2, [sp, #12]
 80151c6:	2400      	movs	r4, #0
 80151c8:	a805      	add	r0, sp, #20
 80151ca:	f000 fd5c 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80151ce:	f846 4d68 	str.w	r4, [r6, #-104]!
 80151d2:	462a      	mov	r2, r5
 80151d4:	4633      	mov	r3, r6
 80151d6:	4621      	mov	r1, r4
 80151d8:	a805      	add	r0, sp, #20
 80151da:	f001 f881 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80151de:	b1f0      	cbz	r0, 801521e <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x8a>
 80151e0:	280a      	cmp	r0, #10
 80151e2:	d018      	beq.n	8015216 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80151e4:	9f04      	ldr	r7, [sp, #16]
 80151e6:	b1b7      	cbz	r7, 8015216 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x82>
 80151e8:	7b78      	ldrb	r0, [r7, #13]
 80151ea:	7a3b      	ldrb	r3, [r7, #8]
 80151ec:	88ea      	ldrh	r2, [r5, #6]
 80151ee:	00c1      	lsls	r1, r0, #3
 80151f0:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80151f4:	4319      	orrs	r1, r3
 80151f6:	0643      	lsls	r3, r0, #25
 80151f8:	bf44      	itt	mi
 80151fa:	f5a1 7300 	submi.w	r3, r1, #512	@ 0x200
 80151fe:	b219      	sxthmi	r1, r3
 8015200:	0100      	lsls	r0, r0, #4
 8015202:	79fb      	ldrb	r3, [r7, #7]
 8015204:	f400 7080 	and.w	r0, r0, #256	@ 0x100
 8015208:	4303      	orrs	r3, r0
 801520a:	4413      	add	r3, r2
 801520c:	1a5b      	subs	r3, r3, r1
 801520e:	b21b      	sxth	r3, r3
 8015210:	429c      	cmp	r4, r3
 8015212:	bfb8      	it	lt
 8015214:	461c      	movlt	r4, r3
 8015216:	4633      	mov	r3, r6
 8015218:	462a      	mov	r2, r5
 801521a:	2100      	movs	r1, #0
 801521c:	e7dc      	b.n	80151d8 <_ZNK8touchgfx4Font16getMaxTextHeightEPKtz+0x44>
 801521e:	b2a0      	uxth	r0, r4
 8015220:	b01e      	add	sp, #120	@ 0x78
 8015222:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015226:	b003      	add	sp, #12
 8015228:	4770      	bx	lr

0801522a <_ZNK8touchgfx4Font20getMinimumTextHeightEv>:
 801522a:	7a43      	ldrb	r3, [r0, #9]
 801522c:	8880      	ldrh	r0, [r0, #4]
 801522e:	4418      	add	r0, r3
 8015230:	b280      	uxth	r0, r0
 8015232:	4770      	bx	lr

08015234 <_ZNK8touchgfx4Font13getFontHeightEv>:
 8015234:	6803      	ldr	r3, [r0, #0]
 8015236:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8015238:	4718      	bx	r3

0801523a <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz>:
 801523a:	b40e      	push	{r1, r2, r3}
 801523c:	b570      	push	{r4, r5, r6, lr}
 801523e:	b09d      	sub	sp, #116	@ 0x74
 8015240:	ab21      	add	r3, sp, #132	@ 0x84
 8015242:	4604      	mov	r4, r0
 8015244:	f853 5b04 	ldr.w	r5, [r3], #4
 8015248:	9302      	str	r3, [sp, #8]
 801524a:	a803      	add	r0, sp, #12
 801524c:	f000 fcc0 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 8015250:	6823      	ldr	r3, [r4, #0]
 8015252:	4620      	mov	r0, r4
 8015254:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8015256:	4798      	blx	r3
 8015258:	6823      	ldr	r3, [r4, #0]
 801525a:	4606      	mov	r6, r0
 801525c:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 801525e:	4620      	mov	r0, r4
 8015260:	4798      	blx	r3
 8015262:	4633      	mov	r3, r6
 8015264:	9000      	str	r0, [sp, #0]
 8015266:	9a02      	ldr	r2, [sp, #8]
 8015268:	4629      	mov	r1, r5
 801526a:	a803      	add	r0, sp, #12
 801526c:	f000 fd0b 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015270:	a803      	add	r0, sp, #12
 8015272:	f001 f903 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 8015276:	2401      	movs	r4, #1
 8015278:	b2a3      	uxth	r3, r4
 801527a:	b140      	cbz	r0, 801528e <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x54>
 801527c:	280a      	cmp	r0, #10
 801527e:	bf08      	it	eq
 8015280:	3301      	addeq	r3, #1
 8015282:	a803      	add	r0, sp, #12
 8015284:	bf08      	it	eq
 8015286:	b21c      	sxtheq	r4, r3
 8015288:	f001 f8f8 	bl	801647c <_ZN8touchgfx12TextProvider11getNextCharEv>
 801528c:	e7f4      	b.n	8015278 <_ZNK8touchgfx4Font16getNumberOfLinesEPKtz+0x3e>
 801528e:	4618      	mov	r0, r3
 8015290:	b01d      	add	sp, #116	@ 0x74
 8015292:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015296:	b003      	add	sp, #12
 8015298:	4770      	bx	lr

0801529a <_ZNK8touchgfx4Font15getSpacingAboveEPKtz>:
 801529a:	b40e      	push	{r1, r2, r3}
 801529c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801529e:	b09e      	sub	sp, #120	@ 0x78
 80152a0:	ab23      	add	r3, sp, #140	@ 0x8c
 80152a2:	4604      	mov	r4, r0
 80152a4:	f853 5b04 	ldr.w	r5, [r3], #4
 80152a8:	9303      	str	r3, [sp, #12]
 80152aa:	a805      	add	r0, sp, #20
 80152ac:	f000 fc90 	bl	8015bd0 <_ZN8touchgfx12TextProviderC1Ev>
 80152b0:	6823      	ldr	r3, [r4, #0]
 80152b2:	4620      	mov	r0, r4
 80152b4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80152b6:	4798      	blx	r3
 80152b8:	6823      	ldr	r3, [r4, #0]
 80152ba:	4606      	mov	r6, r0
 80152bc:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80152be:	4620      	mov	r0, r4
 80152c0:	4798      	blx	r3
 80152c2:	4633      	mov	r3, r6
 80152c4:	4629      	mov	r1, r5
 80152c6:	9000      	str	r0, [sp, #0]
 80152c8:	9a03      	ldr	r2, [sp, #12]
 80152ca:	a805      	add	r0, sp, #20
 80152cc:	ad1e      	add	r5, sp, #120	@ 0x78
 80152ce:	f000 fcda 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 80152d2:	2100      	movs	r1, #0
 80152d4:	f845 1d68 	str.w	r1, [r5, #-104]!
 80152d8:	4622      	mov	r2, r4
 80152da:	462b      	mov	r3, r5
 80152dc:	a805      	add	r0, sp, #20
 80152de:	f000 ffff 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 80152e2:	f647 76ff 	movw	r6, #32767	@ 0x7fff
 80152e6:	b1d8      	cbz	r0, 8015320 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x86>
 80152e8:	280a      	cmp	r0, #10
 80152ea:	d012      	beq.n	8015312 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80152ec:	9804      	ldr	r0, [sp, #16]
 80152ee:	b180      	cbz	r0, 8015312 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x78>
 80152f0:	7b47      	ldrb	r7, [r0, #13]
 80152f2:	88e2      	ldrh	r2, [r4, #6]
 80152f4:	00fb      	lsls	r3, r7, #3
 80152f6:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80152fa:	7a03      	ldrb	r3, [r0, #8]
 80152fc:	430b      	orrs	r3, r1
 80152fe:	0679      	lsls	r1, r7, #25
 8015300:	bf44      	itt	mi
 8015302:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015306:	b21b      	sxthmi	r3, r3
 8015308:	1ad3      	subs	r3, r2, r3
 801530a:	b21b      	sxth	r3, r3
 801530c:	429e      	cmp	r6, r3
 801530e:	bfa8      	it	ge
 8015310:	461e      	movge	r6, r3
 8015312:	462b      	mov	r3, r5
 8015314:	4622      	mov	r2, r4
 8015316:	2100      	movs	r1, #0
 8015318:	a805      	add	r0, sp, #20
 801531a:	f000 ffe1 	bl	80162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>
 801531e:	e7e2      	b.n	80152e6 <_ZNK8touchgfx4Font15getSpacingAboveEPKtz+0x4c>
 8015320:	4630      	mov	r0, r6
 8015322:	b01e      	add	sp, #120	@ 0x78
 8015324:	e8bd 40f0 	ldmia.w	sp!, {r4, r5, r6, r7, lr}
 8015328:	b003      	add	sp, #12
 801532a:	4770      	bx	lr

0801532c <_ZNK8touchgfx8Drawable10invalidateEv>:
 801532c:	b513      	push	{r0, r1, r4, lr}
 801532e:	6803      	ldr	r3, [r0, #0]
 8015330:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 8015334:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015338:	f8ad 1004 	strh.w	r1, [sp, #4]
 801533c:	2400      	movs	r4, #0
 801533e:	9400      	str	r4, [sp, #0]
 8015340:	f8ad 2006 	strh.w	r2, [sp, #6]
 8015344:	691b      	ldr	r3, [r3, #16]
 8015346:	4669      	mov	r1, sp
 8015348:	4798      	blx	r3
 801534a:	b002      	add	sp, #8
 801534c:	bd10      	pop	{r4, pc}

0801534e <_ZN8touchgfx8Drawable20getSolidRectAbsoluteEv>:
 801534e:	b538      	push	{r3, r4, r5, lr}
 8015350:	680b      	ldr	r3, [r1, #0]
 8015352:	460c      	mov	r4, r1
 8015354:	68db      	ldr	r3, [r3, #12]
 8015356:	4605      	mov	r5, r0
 8015358:	4798      	blx	r3
 801535a:	6823      	ldr	r3, [r4, #0]
 801535c:	4620      	mov	r0, r4
 801535e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015360:	4629      	mov	r1, r5
 8015362:	4798      	blx	r3
 8015364:	4628      	mov	r0, r5
 8015366:	bd38      	pop	{r3, r4, r5, pc}

08015368 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE>:
 8015368:	b410      	push	{r4}
 801536a:	880a      	ldrh	r2, [r1, #0]
 801536c:	8884      	ldrh	r4, [r0, #4]
 801536e:	4422      	add	r2, r4
 8015370:	800a      	strh	r2, [r1, #0]
 8015372:	88c4      	ldrh	r4, [r0, #6]
 8015374:	884a      	ldrh	r2, [r1, #2]
 8015376:	4422      	add	r2, r4
 8015378:	804a      	strh	r2, [r1, #2]
 801537a:	6940      	ldr	r0, [r0, #20]
 801537c:	b120      	cbz	r0, 8015388 <_ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE+0x20>
 801537e:	6803      	ldr	r3, [r0, #0]
 8015380:	f85d 4b04 	ldr.w	r4, [sp], #4
 8015384:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015386:	4718      	bx	r3
 8015388:	f85d 4b04 	ldr.w	r4, [sp], #4
 801538c:	4770      	bx	lr

0801538e <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE>:
 801538e:	b570      	push	{r4, r5, r6, lr}
 8015390:	8882      	ldrh	r2, [r0, #4]
 8015392:	880b      	ldrh	r3, [r1, #0]
 8015394:	4413      	add	r3, r2
 8015396:	800b      	strh	r3, [r1, #0]
 8015398:	88c2      	ldrh	r2, [r0, #6]
 801539a:	884b      	ldrh	r3, [r1, #2]
 801539c:	460c      	mov	r4, r1
 801539e:	4413      	add	r3, r2
 80153a0:	804b      	strh	r3, [r1, #2]
 80153a2:	4605      	mov	r5, r0
 80153a4:	1d01      	adds	r1, r0, #4
 80153a6:	4620      	mov	r0, r4
 80153a8:	f7fb fbf8 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80153ac:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80153b0:	2b00      	cmp	r3, #0
 80153b2:	dd0b      	ble.n	80153cc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80153b4:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80153b8:	2b00      	cmp	r3, #0
 80153ba:	dd07      	ble.n	80153cc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80153bc:	6968      	ldr	r0, [r5, #20]
 80153be:	b128      	cbz	r0, 80153cc <_ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE+0x3e>
 80153c0:	6803      	ldr	r3, [r0, #0]
 80153c2:	4621      	mov	r1, r4
 80153c4:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80153c6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80153ca:	4718      	bx	r3
 80153cc:	bd70      	pop	{r4, r5, r6, pc}
	...

080153d0 <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE>:
 80153d0:	b570      	push	{r4, r5, r6, lr}
 80153d2:	8882      	ldrh	r2, [r0, #4]
 80153d4:	880b      	ldrh	r3, [r1, #0]
 80153d6:	4413      	add	r3, r2
 80153d8:	800b      	strh	r3, [r1, #0]
 80153da:	88c2      	ldrh	r2, [r0, #6]
 80153dc:	884b      	ldrh	r3, [r1, #2]
 80153de:	460c      	mov	r4, r1
 80153e0:	4413      	add	r3, r2
 80153e2:	804b      	strh	r3, [r1, #2]
 80153e4:	4605      	mov	r5, r0
 80153e6:	1d01      	adds	r1, r0, #4
 80153e8:	4620      	mov	r0, r4
 80153ea:	f7fb fbd7 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80153ee:	f9b4 3004 	ldrsh.w	r3, [r4, #4]
 80153f2:	2b00      	cmp	r3, #0
 80153f4:	dd19      	ble.n	801542a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80153f6:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 80153fa:	2b00      	cmp	r3, #0
 80153fc:	dd15      	ble.n	801542a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 80153fe:	6968      	ldr	r0, [r5, #20]
 8015400:	b128      	cbz	r0, 801540e <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x3e>
 8015402:	6803      	ldr	r3, [r0, #0]
 8015404:	4621      	mov	r1, r4
 8015406:	691b      	ldr	r3, [r3, #16]
 8015408:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 801540c:	4718      	bx	r3
 801540e:	4b07      	ldr	r3, [pc, #28]	@ (801542c <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5c>)
 8015410:	681b      	ldr	r3, [r3, #0]
 8015412:	3304      	adds	r3, #4
 8015414:	429d      	cmp	r5, r3
 8015416:	d108      	bne.n	801542a <_ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE+0x5a>
 8015418:	f7fe ff12 	bl	8014240 <_ZN8touchgfx11Application11getInstanceEv>
 801541c:	6803      	ldr	r3, [r0, #0]
 801541e:	6821      	ldr	r1, [r4, #0]
 8015420:	6862      	ldr	r2, [r4, #4]
 8015422:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 8015424:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015428:	4718      	bx	r3
 801542a:	bd70      	pop	{r4, r5, r6, pc}
 801542c:	20002f90 	.word	0x20002f90

08015430 <_ZN8touchgfx8Drawable12moveRelativeEss>:
 8015430:	b570      	push	{r4, r5, r6, lr}
 8015432:	4604      	mov	r4, r0
 8015434:	4616      	mov	r6, r2
 8015436:	460d      	mov	r5, r1
 8015438:	b901      	cbnz	r1, 801543c <_ZN8touchgfx8Drawable12moveRelativeEss+0xc>
 801543a:	b192      	cbz	r2, 8015462 <_ZN8touchgfx8Drawable12moveRelativeEss+0x32>
 801543c:	6823      	ldr	r3, [r4, #0]
 801543e:	4620      	mov	r0, r4
 8015440:	699b      	ldr	r3, [r3, #24]
 8015442:	4798      	blx	r3
 8015444:	88e2      	ldrh	r2, [r4, #6]
 8015446:	88a1      	ldrh	r1, [r4, #4]
 8015448:	4432      	add	r2, r6
 801544a:	4429      	add	r1, r5
 801544c:	4620      	mov	r0, r4
 801544e:	b212      	sxth	r2, r2
 8015450:	b209      	sxth	r1, r1
 8015452:	f7f4 fc0a 	bl	8009c6a <_ZN8touchgfx8Drawable5setXYEss>
 8015456:	6823      	ldr	r3, [r4, #0]
 8015458:	4620      	mov	r0, r4
 801545a:	699b      	ldr	r3, [r3, #24]
 801545c:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 8015460:	4718      	bx	r3
 8015462:	bd70      	pop	{r4, r5, r6, pc}

08015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>:
 8015464:	b510      	push	{r4, lr}
 8015466:	4604      	mov	r4, r0
 8015468:	4608      	mov	r0, r1
 801546a:	2300      	movs	r3, #0
 801546c:	8023      	strh	r3, [r4, #0]
 801546e:	8063      	strh	r3, [r4, #2]
 8015470:	6803      	ldr	r3, [r0, #0]
 8015472:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8015476:	f9b1 1008 	ldrsh.w	r1, [r1, #8]
 801547a:	80a1      	strh	r1, [r4, #4]
 801547c:	80e2      	strh	r2, [r4, #6]
 801547e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8015480:	4621      	mov	r1, r4
 8015482:	4798      	blx	r3
 8015484:	4620      	mov	r0, r4
 8015486:	bd10      	pop	{r4, pc}

08015488 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt>:
 8015488:	b530      	push	{r4, r5, lr}
 801548a:	8083      	strh	r3, [r0, #4]
 801548c:	f8bd 300c 	ldrh.w	r3, [sp, #12]
 8015490:	80c3      	strh	r3, [r0, #6]
 8015492:	f89d 3010 	ldrb.w	r3, [sp, #16]
 8015496:	7203      	strb	r3, [r0, #8]
 8015498:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801549c:	f89d 5018 	ldrb.w	r5, [sp, #24]
 80154a0:	7243      	strb	r3, [r0, #9]
 80154a2:	7a83      	ldrb	r3, [r0, #10]
 80154a4:	6141      	str	r1, [r0, #20]
 80154a6:	f365 0306 	bfi	r3, r5, #0, #7
 80154aa:	f89d 501c 	ldrb.w	r5, [sp, #28]
 80154ae:	8302      	strh	r2, [r0, #24]
 80154b0:	f365 13c7 	bfi	r3, r5, #7, #1
 80154b4:	7283      	strb	r3, [r0, #10]
 80154b6:	f89d 3020 	ldrb.w	r3, [sp, #32]
 80154ba:	72c3      	strb	r3, [r0, #11]
 80154bc:	f89d 3024 	ldrb.w	r3, [sp, #36]	@ 0x24
 80154c0:	7303      	strb	r3, [r0, #12]
 80154c2:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80154c6:	81c3      	strh	r3, [r0, #14]
 80154c8:	f8bd 302c 	ldrh.w	r3, [sp, #44]	@ 0x2c
 80154cc:	8203      	strh	r3, [r0, #16]
 80154ce:	4b01      	ldr	r3, [pc, #4]	@ (80154d4 <_ZN8touchgfx9ConstFontC1EPKNS_9GlyphNodeEttthhhhhhtt+0x4c>)
 80154d0:	6003      	str	r3, [r0, #0]
 80154d2:	bd30      	pop	{r4, r5, pc}
 80154d4:	08029758 	.word	0x08029758

080154d8 <_ZNK8touchgfx9ConstFont4findEt>:
 80154d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80154da:	6944      	ldr	r4, [r0, #20]
 80154dc:	b3bc      	cbz	r4, 801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80154de:	88a3      	ldrh	r3, [r4, #4]
 80154e0:	8b02      	ldrh	r2, [r0, #24]
 80154e2:	1acb      	subs	r3, r1, r3
 80154e4:	f102 32ff 	add.w	r2, r2, #4294967295
 80154e8:	d431      	bmi.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80154ea:	4293      	cmp	r3, r2
 80154ec:	dd0c      	ble.n	8015508 <_ZNK8touchgfx9ConstFont4findEt+0x30>
 80154ee:	230e      	movs	r3, #14
 80154f0:	fb03 4302 	mla	r3, r3, r2, r4
 80154f4:	889b      	ldrh	r3, [r3, #4]
 80154f6:	1a5b      	subs	r3, r3, r1
 80154f8:	1ad3      	subs	r3, r2, r3
 80154fa:	429a      	cmp	r2, r3
 80154fc:	db27      	blt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 80154fe:	2b00      	cmp	r3, #0
 8015500:	bfbc      	itt	lt
 8015502:	2302      	movlt	r3, #2
 8015504:	fb92 f3f3 	sdivlt	r3, r2, r3
 8015508:	2500      	movs	r5, #0
 801550a:	260e      	movs	r6, #14
 801550c:	4295      	cmp	r5, r2
 801550e:	dc1e      	bgt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015510:	fb06 4003 	mla	r0, r6, r3, r4
 8015514:	8887      	ldrh	r7, [r0, #4]
 8015516:	42b9      	cmp	r1, r7
 8015518:	d01a      	beq.n	8015550 <_ZNK8touchgfx9ConstFont4findEt+0x78>
 801551a:	d20d      	bcs.n	8015538 <_ZNK8touchgfx9ConstFont4findEt+0x60>
 801551c:	1e5a      	subs	r2, r3, #1
 801551e:	4295      	cmp	r5, r2
 8015520:	dc15      	bgt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015522:	f830 3c0a 	ldrh.w	r3, [r0, #-10]
 8015526:	1a5b      	subs	r3, r3, r1
 8015528:	1ad3      	subs	r3, r2, r3
 801552a:	429a      	cmp	r2, r3
 801552c:	db0f      	blt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801552e:	429d      	cmp	r5, r3
 8015530:	ddec      	ble.n	801550c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015532:	1953      	adds	r3, r2, r5
 8015534:	105b      	asrs	r3, r3, #1
 8015536:	e7e9      	b.n	801550c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 8015538:	1c5d      	adds	r5, r3, #1
 801553a:	42aa      	cmp	r2, r5
 801553c:	db07      	blt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 801553e:	8a43      	ldrh	r3, [r0, #18]
 8015540:	1acb      	subs	r3, r1, r3
 8015542:	442b      	add	r3, r5
 8015544:	429d      	cmp	r5, r3
 8015546:	dc02      	bgt.n	801554e <_ZNK8touchgfx9ConstFont4findEt+0x76>
 8015548:	429a      	cmp	r2, r3
 801554a:	dadf      	bge.n	801550c <_ZNK8touchgfx9ConstFont4findEt+0x34>
 801554c:	e7f1      	b.n	8015532 <_ZNK8touchgfx9ConstFont4findEt+0x5a>
 801554e:	2000      	movs	r0, #0
 8015550:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015552 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh>:
 8015552:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8015554:	4604      	mov	r4, r0
 8015556:	4617      	mov	r7, r2
 8015558:	461e      	mov	r6, r3
 801555a:	b911      	cbnz	r1, 8015562 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x10>
 801555c:	2500      	movs	r5, #0
 801555e:	4628      	mov	r0, r5
 8015560:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8015562:	290a      	cmp	r1, #10
 8015564:	d0fa      	beq.n	801555c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015566:	f64f 62ff 	movw	r2, #65279	@ 0xfeff
 801556a:	4291      	cmp	r1, r2
 801556c:	d0f6      	beq.n	801555c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 801556e:	f242 020b 	movw	r2, #8203	@ 0x200b
 8015572:	4291      	cmp	r1, r2
 8015574:	d0f2      	beq.n	801555c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015576:	f7ff ffaf 	bl	80154d8 <_ZNK8touchgfx9ConstFont4findEt>
 801557a:	4605      	mov	r5, r0
 801557c:	b950      	cbnz	r0, 8015594 <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0x42>
 801557e:	6823      	ldr	r3, [r4, #0]
 8015580:	4620      	mov	r0, r4
 8015582:	691b      	ldr	r3, [r3, #16]
 8015584:	4798      	blx	r3
 8015586:	4601      	mov	r1, r0
 8015588:	4620      	mov	r0, r4
 801558a:	f7ff ffa5 	bl	80154d8 <_ZNK8touchgfx9ConstFont4findEt>
 801558e:	4605      	mov	r5, r0
 8015590:	2800      	cmp	r0, #0
 8015592:	d0e3      	beq.n	801555c <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xa>
 8015594:	6823      	ldr	r3, [r4, #0]
 8015596:	4629      	mov	r1, r5
 8015598:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801559a:	4620      	mov	r0, r4
 801559c:	4798      	blx	r3
 801559e:	6038      	str	r0, [r7, #0]
 80155a0:	6823      	ldr	r3, [r4, #0]
 80155a2:	4620      	mov	r0, r4
 80155a4:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80155a6:	4798      	blx	r3
 80155a8:	7030      	strb	r0, [r6, #0]
 80155aa:	e7d8      	b.n	801555e <_ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh+0xc>

080155ac <_ZNK8touchgfx10ClickEvent12getEventTypeEv>:
 80155ac:	2000      	movs	r0, #0
 80155ae:	4770      	bx	lr

080155b0 <_ZNK8touchgfx9DragEvent12getEventTypeEv>:
 80155b0:	2001      	movs	r0, #1
 80155b2:	4770      	bx	lr

080155b4 <_ZNK8touchgfx12GestureEvent12getEventTypeEv>:
 80155b4:	2002      	movs	r0, #2
 80155b6:	4770      	bx	lr

080155b8 <_ZN8touchgfx12GestureEventD1Ev>:
 80155b8:	4770      	bx	lr

080155ba <_ZN8touchgfx9DragEventD1Ev>:
 80155ba:	4770      	bx	lr

080155bc <_ZN8touchgfx10ClickEventD1Ev>:
 80155bc:	4770      	bx	lr

080155be <_ZN8touchgfx10ClickEventD0Ev>:
 80155be:	b510      	push	{r4, lr}
 80155c0:	210c      	movs	r1, #12
 80155c2:	4604      	mov	r4, r0
 80155c4:	f010 fb95 	bl	8025cf2 <_ZdlPvj>
 80155c8:	4620      	mov	r0, r4
 80155ca:	bd10      	pop	{r4, pc}

080155cc <_ZN8touchgfx9DragEventD0Ev>:
 80155cc:	b510      	push	{r4, lr}
 80155ce:	2110      	movs	r1, #16
 80155d0:	4604      	mov	r4, r0
 80155d2:	f010 fb8e 	bl	8025cf2 <_ZdlPvj>
 80155d6:	4620      	mov	r0, r4
 80155d8:	bd10      	pop	{r4, pc}

080155da <_ZN8touchgfx12GestureEventD0Ev>:
 80155da:	b510      	push	{r4, lr}
 80155dc:	210c      	movs	r1, #12
 80155de:	4604      	mov	r4, r0
 80155e0:	f010 fb87 	bl	8025cf2 <_ZdlPvj>
 80155e4:	4620      	mov	r0, r4
 80155e6:	bd10      	pop	{r4, pc}

080155e8 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE>:
 80155e8:	b530      	push	{r4, r5, lr}
 80155ea:	460d      	mov	r5, r1
 80155ec:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80155ee:	b087      	sub	sp, #28
 80155f0:	4604      	mov	r4, r0
 80155f2:	b301      	cbz	r1, 8015636 <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x4e>
 80155f4:	a801      	add	r0, sp, #4
 80155f6:	f7ff ff35 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80155fa:	892a      	ldrh	r2, [r5, #8]
 80155fc:	f8bd 3004 	ldrh.w	r3, [sp, #4]
 8015600:	7928      	ldrb	r0, [r5, #4]
 8015602:	f9b5 1006 	ldrsh.w	r1, [r5, #6]
 8015606:	f88d 0010 	strb.w	r0, [sp, #16]
 801560a:	1ad2      	subs	r2, r2, r3
 801560c:	8ea3      	ldrh	r3, [r4, #52]	@ 0x34
 801560e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 8015610:	f8ad 1012 	strh.w	r1, [sp, #18]
 8015614:	441a      	add	r2, r3
 8015616:	896b      	ldrh	r3, [r5, #10]
 8015618:	f8bd 5006 	ldrh.w	r5, [sp, #6]
 801561c:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015620:	1b5b      	subs	r3, r3, r5
 8015622:	8ee5      	ldrh	r5, [r4, #54]	@ 0x36
 8015624:	442b      	add	r3, r5
 8015626:	4d05      	ldr	r5, [pc, #20]	@ (801563c <_ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE+0x54>)
 8015628:	9503      	str	r5, [sp, #12]
 801562a:	f8ad 3016 	strh.w	r3, [sp, #22]
 801562e:	6803      	ldr	r3, [r0, #0]
 8015630:	a903      	add	r1, sp, #12
 8015632:	6c9b      	ldr	r3, [r3, #72]	@ 0x48
 8015634:	4798      	blx	r3
 8015636:	b007      	add	sp, #28
 8015638:	bd30      	pop	{r4, r5, pc}
 801563a:	bf00      	nop
 801563c:	080297e8 	.word	0x080297e8

08015640 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE>:
 8015640:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015644:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8015646:	b08a      	sub	sp, #40	@ 0x28
 8015648:	4604      	mov	r4, r0
 801564a:	460d      	mov	r5, r1
 801564c:	b113      	cbz	r3, 8015654 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x14>
 801564e:	790b      	ldrb	r3, [r1, #4]
 8015650:	2b00      	cmp	r3, #0
 8015652:	d044      	beq.n	80156de <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015654:	f104 0804 	add.w	r8, r4, #4
 8015658:	4641      	mov	r1, r8
 801565a:	a803      	add	r0, sp, #12
 801565c:	f7ff ff02 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015660:	792b      	ldrb	r3, [r5, #4]
 8015662:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 8015666:	f9bd 600e 	ldrsh.w	r6, [sp, #14]
 801566a:	b983      	cbnz	r3, 801568e <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x4e>
 801566c:	892a      	ldrh	r2, [r5, #8]
 801566e:	88e9      	ldrh	r1, [r5, #6]
 8015670:	f104 0336 	add.w	r3, r4, #54	@ 0x36
 8015674:	1b92      	subs	r2, r2, r6
 8015676:	1bc9      	subs	r1, r1, r7
 8015678:	9301      	str	r3, [sp, #4]
 801567a:	f104 0334 	add.w	r3, r4, #52	@ 0x34
 801567e:	9300      	str	r3, [sp, #0]
 8015680:	b212      	sxth	r2, r2
 8015682:	f104 0330 	add.w	r3, r4, #48	@ 0x30
 8015686:	b209      	sxth	r1, r1
 8015688:	4640      	mov	r0, r8
 801568a:	f7fb f9a3 	bl	80109d4 <_ZN8touchgfx9Container16getLastChildNearEssPPNS_8DrawableEPsS4_>
 801568e:	6b21      	ldr	r1, [r4, #48]	@ 0x30
 8015690:	b329      	cbz	r1, 80156de <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 8015692:	a805      	add	r0, sp, #20
 8015694:	f7ff fee6 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015698:	f8bd 2014 	ldrh.w	r2, [sp, #20]
 801569c:	792b      	ldrb	r3, [r5, #4]
 801569e:	6b20      	ldr	r0, [r4, #48]	@ 0x30
 80156a0:	f88d 3020 	strb.w	r3, [sp, #32]
 80156a4:	1abf      	subs	r7, r7, r2
 80156a6:	88ea      	ldrh	r2, [r5, #6]
 80156a8:	4417      	add	r7, r2
 80156aa:	8ea2      	ldrh	r2, [r4, #52]	@ 0x34
 80156ac:	4417      	add	r7, r2
 80156ae:	f8bd 2016 	ldrh.w	r2, [sp, #22]
 80156b2:	f8ad 7022 	strh.w	r7, [sp, #34]	@ 0x22
 80156b6:	1ab6      	subs	r6, r6, r2
 80156b8:	892a      	ldrh	r2, [r5, #8]
 80156ba:	4416      	add	r6, r2
 80156bc:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 80156be:	4416      	add	r6, r2
 80156c0:	f8ad 6024 	strh.w	r6, [sp, #36]	@ 0x24
 80156c4:	4a07      	ldr	r2, [pc, #28]	@ (80156e4 <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0xa4>)
 80156c6:	9207      	str	r2, [sp, #28]
 80156c8:	2600      	movs	r6, #0
 80156ca:	f8ad 6026 	strh.w	r6, [sp, #38]	@ 0x26
 80156ce:	6803      	ldr	r3, [r0, #0]
 80156d0:	a907      	add	r1, sp, #28
 80156d2:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80156d4:	4798      	blx	r3
 80156d6:	792b      	ldrb	r3, [r5, #4]
 80156d8:	b10b      	cbz	r3, 80156de <_ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE+0x9e>
 80156da:	e9c4 660c 	strd	r6, r6, [r4, #48]	@ 0x30
 80156de:	b00a      	add	sp, #40	@ 0x28
 80156e0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80156e4:	080297c0 	.word	0x080297c0

080156e8 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE>:
 80156e8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80156ec:	460c      	mov	r4, r1
 80156ee:	6b01      	ldr	r1, [r0, #48]	@ 0x30
 80156f0:	b088      	sub	sp, #32
 80156f2:	4605      	mov	r5, r0
 80156f4:	2900      	cmp	r1, #0
 80156f6:	d06d      	beq.n	80157d4 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xec>
 80156f8:	4668      	mov	r0, sp
 80156fa:	f7ff feb3 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 80156fe:	8ea9      	ldrh	r1, [r5, #52]	@ 0x34
 8015700:	88e3      	ldrh	r3, [r4, #6]
 8015702:	f9bd 8000 	ldrsh.w	r8, [sp]
 8015706:	f9bd 7002 	ldrsh.w	r7, [sp, #2]
 801570a:	440b      	add	r3, r1
 801570c:	b21b      	sxth	r3, r3
 801570e:	4543      	cmp	r3, r8
 8015710:	db31      	blt.n	8015776 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015712:	f8bd c004 	ldrh.w	ip, [sp, #4]
 8015716:	44c4      	add	ip, r8
 8015718:	fa0f fc8c 	sxth.w	ip, ip
 801571c:	4563      	cmp	r3, ip
 801571e:	da2a      	bge.n	8015776 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015720:	8eea      	ldrh	r2, [r5, #54]	@ 0x36
 8015722:	8926      	ldrh	r6, [r4, #8]
 8015724:	4416      	add	r6, r2
 8015726:	b236      	sxth	r6, r6
 8015728:	42be      	cmp	r6, r7
 801572a:	db24      	blt.n	8015776 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 801572c:	f8bd 0006 	ldrh.w	r0, [sp, #6]
 8015730:	4438      	add	r0, r7
 8015732:	b200      	sxth	r0, r0
 8015734:	4286      	cmp	r6, r0
 8015736:	da1e      	bge.n	8015776 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015738:	8963      	ldrh	r3, [r4, #10]
 801573a:	4419      	add	r1, r3
 801573c:	b209      	sxth	r1, r1
 801573e:	4541      	cmp	r1, r8
 8015740:	db08      	blt.n	8015754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015742:	4561      	cmp	r1, ip
 8015744:	da06      	bge.n	8015754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015746:	89a3      	ldrh	r3, [r4, #12]
 8015748:	441a      	add	r2, r3
 801574a:	b212      	sxth	r2, r2
 801574c:	42ba      	cmp	r2, r7
 801574e:	db01      	blt.n	8015754 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x6c>
 8015750:	4282      	cmp	r2, r0
 8015752:	db10      	blt.n	8015776 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0x8e>
 8015754:	4b21      	ldr	r3, [pc, #132]	@ (80157dc <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf4>)
 8015756:	9304      	str	r3, [sp, #16]
 8015758:	2302      	movs	r3, #2
 801575a:	f88d 3014 	strb.w	r3, [sp, #20]
 801575e:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 8015760:	2300      	movs	r3, #0
 8015762:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015766:	f8ad 3018 	strh.w	r3, [sp, #24]
 801576a:	f8ad 301a 	strh.w	r3, [sp, #26]
 801576e:	6803      	ldr	r3, [r0, #0]
 8015770:	a904      	add	r1, sp, #16
 8015772:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8015774:	4798      	blx	r3
 8015776:	1d29      	adds	r1, r5, #4
 8015778:	a802      	add	r0, sp, #8
 801577a:	f7ff fe73 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 801577e:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015782:	88e0      	ldrh	r0, [r4, #6]
 8015784:	7921      	ldrb	r1, [r4, #4]
 8015786:	f8b5 c034 	ldrh.w	ip, [r5, #52]	@ 0x34
 801578a:	8922      	ldrh	r2, [r4, #8]
 801578c:	8eee      	ldrh	r6, [r5, #54]	@ 0x36
 801578e:	f88d 1014 	strb.w	r1, [sp, #20]
 8015792:	eba3 0808 	sub.w	r8, r3, r8
 8015796:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801579a:	1bdf      	subs	r7, r3, r7
 801579c:	b2bb      	uxth	r3, r7
 801579e:	fa1f f888 	uxth.w	r8, r8
 80157a2:	8967      	ldrh	r7, [r4, #10]
 80157a4:	89a4      	ldrh	r4, [r4, #12]
 80157a6:	4440      	add	r0, r8
 80157a8:	4460      	add	r0, ip
 80157aa:	441a      	add	r2, r3
 80157ac:	44b8      	add	r8, r7
 80157ae:	4423      	add	r3, r4
 80157b0:	f8ad 0016 	strh.w	r0, [sp, #22]
 80157b4:	4433      	add	r3, r6
 80157b6:	4432      	add	r2, r6
 80157b8:	44e0      	add	r8, ip
 80157ba:	4c09      	ldr	r4, [pc, #36]	@ (80157e0 <_ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE+0xf8>)
 80157bc:	6b28      	ldr	r0, [r5, #48]	@ 0x30
 80157be:	9404      	str	r4, [sp, #16]
 80157c0:	f8ad 2018 	strh.w	r2, [sp, #24]
 80157c4:	f8ad 801a 	strh.w	r8, [sp, #26]
 80157c8:	f8ad 301c 	strh.w	r3, [sp, #28]
 80157cc:	6803      	ldr	r3, [r0, #0]
 80157ce:	a904      	add	r1, sp, #16
 80157d0:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80157d2:	4798      	blx	r3
 80157d4:	b008      	add	sp, #32
 80157d6:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80157da:	bf00      	nop
 80157dc:	080297c0 	.word	0x080297c0
 80157e0:	080297d4 	.word	0x080297d4

080157e4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>:
 80157e4:	b537      	push	{r0, r1, r2, r4, r5, lr}
 80157e6:	4604      	mov	r4, r0
 80157e8:	f934 2f0c 	ldrsh.w	r2, [r4, #12]!
 80157ec:	3201      	adds	r2, #1
 80157ee:	d112      	bne.n	8015816 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv+0x32>
 80157f0:	6803      	ldr	r3, [r0, #0]
 80157f2:	f9b0 1008 	ldrsh.w	r1, [r0, #8]
 80157f6:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 80157fa:	f8ad 1004 	strh.w	r1, [sp, #4]
 80157fe:	2500      	movs	r5, #0
 8015800:	9500      	str	r5, [sp, #0]
 8015802:	466d      	mov	r5, sp
 8015804:	4629      	mov	r1, r5
 8015806:	f8ad 2006 	strh.w	r2, [sp, #6]
 801580a:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801580c:	4798      	blx	r3
 801580e:	e895 0003 	ldmia.w	r5, {r0, r1}
 8015812:	e884 0003 	stmia.w	r4, {r0, r1}
 8015816:	4620      	mov	r0, r4
 8015818:	b003      	add	sp, #12
 801581a:	bd30      	pop	{r4, r5, pc}

0801581c <_ZN8touchgfx8Drawable13getCachedAbsXEv>:
 801581c:	b513      	push	{r0, r1, r4, lr}
 801581e:	f9b0 3020 	ldrsh.w	r3, [r0, #32]
 8015822:	3301      	adds	r3, #1
 8015824:	4604      	mov	r4, r0
 8015826:	d109      	bne.n	801583c <_ZN8touchgfx8Drawable13getCachedAbsXEv+0x20>
 8015828:	4601      	mov	r1, r0
 801582a:	4668      	mov	r0, sp
 801582c:	f7ff fe1a 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015830:	f8bd 3000 	ldrh.w	r3, [sp]
 8015834:	8423      	strh	r3, [r4, #32]
 8015836:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 801583a:	8463      	strh	r3, [r4, #34]	@ 0x22
 801583c:	f9b4 0020 	ldrsh.w	r0, [r4, #32]
 8015840:	b002      	add	sp, #8
 8015842:	bd10      	pop	{r4, pc}

08015844 <_ZN8touchgfx8Drawable13getCachedAbsYEv>:
 8015844:	b513      	push	{r0, r1, r4, lr}
 8015846:	f9b0 3022 	ldrsh.w	r3, [r0, #34]	@ 0x22
 801584a:	3301      	adds	r3, #1
 801584c:	4604      	mov	r4, r0
 801584e:	d109      	bne.n	8015864 <_ZN8touchgfx8Drawable13getCachedAbsYEv+0x20>
 8015850:	4601      	mov	r1, r0
 8015852:	4668      	mov	r0, sp
 8015854:	f7ff fe06 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015858:	f8bd 3000 	ldrh.w	r3, [sp]
 801585c:	8423      	strh	r3, [r4, #32]
 801585e:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015862:	8463      	strh	r3, [r4, #34]	@ 0x22
 8015864:	f9b4 0022 	ldrsh.w	r0, [r4, #34]	@ 0x22
 8015868:	b002      	add	sp, #8
 801586a:	bd10      	pop	{r4, pc}

0801586c <_ZN8touchgfx6ScreenC1Ev>:
 801586c:	b570      	push	{r4, r5, r6, lr}
 801586e:	4605      	mov	r5, r0
 8015870:	4b16      	ldr	r3, [pc, #88]	@ (80158cc <_ZN8touchgfx6ScreenC1Ev+0x60>)
 8015872:	f845 3b04 	str.w	r3, [r5], #4
 8015876:	2300      	movs	r3, #0
 8015878:	8103      	strh	r3, [r0, #8]
 801587a:	8143      	strh	r3, [r0, #10]
 801587c:	8183      	strh	r3, [r0, #12]
 801587e:	81c3      	strh	r3, [r0, #14]
 8015880:	8203      	strh	r3, [r0, #16]
 8015882:	8243      	strh	r3, [r0, #18]
 8015884:	8283      	strh	r3, [r0, #20]
 8015886:	82c3      	strh	r3, [r0, #22]
 8015888:	e9c0 3306 	strd	r3, r3, [r0, #24]
 801588c:	6203      	str	r3, [r0, #32]
 801588e:	8483      	strh	r3, [r0, #36]	@ 0x24
 8015890:	84c3      	strh	r3, [r0, #38]	@ 0x26
 8015892:	f880 3028 	strb.w	r3, [r0, #40]	@ 0x28
 8015896:	4a0e      	ldr	r2, [pc, #56]	@ (80158d0 <_ZN8touchgfx6ScreenC1Ev+0x64>)
 8015898:	6343      	str	r3, [r0, #52]	@ 0x34
 801589a:	e9c0 330b 	strd	r3, r3, [r0, #44]	@ 0x2c
 801589e:	4b0d      	ldr	r3, [pc, #52]	@ (80158d4 <_ZN8touchgfx6ScreenC1Ev+0x68>)
 80158a0:	6042      	str	r2, [r0, #4]
 80158a2:	f9b3 6000 	ldrsh.w	r6, [r3]
 80158a6:	6b93      	ldr	r3, [r2, #56]	@ 0x38
 80158a8:	4a0b      	ldr	r2, [pc, #44]	@ (80158d8 <_ZN8touchgfx6ScreenC1Ev+0x6c>)
 80158aa:	4604      	mov	r4, r0
 80158ac:	2101      	movs	r1, #1
 80158ae:	f880 1029 	strb.w	r1, [r0, #41]	@ 0x29
 80158b2:	f880 1038 	strb.w	r1, [r0, #56]	@ 0x38
 80158b6:	f9b2 1000 	ldrsh.w	r1, [r2]
 80158ba:	4628      	mov	r0, r5
 80158bc:	4798      	blx	r3
 80158be:	6863      	ldr	r3, [r4, #4]
 80158c0:	4628      	mov	r0, r5
 80158c2:	6bdb      	ldr	r3, [r3, #60]	@ 0x3c
 80158c4:	4631      	mov	r1, r6
 80158c6:	4798      	blx	r3
 80158c8:	4620      	mov	r0, r4
 80158ca:	bd70      	pop	{r4, r5, r6, pc}
 80158cc:	080297fc 	.word	0x080297fc
 80158d0:	0802909c 	.word	0x0802909c
 80158d4:	20002f4a 	.word	0x20002f4a
 80158d8:	20002f48 	.word	0x20002f48

080158dc <_ZN8touchgfx6Screen4drawEv>:
 80158dc:	b507      	push	{r0, r1, r2, lr}
 80158de:	4b09      	ldr	r3, [pc, #36]	@ (8015904 <_ZN8touchgfx6Screen4drawEv+0x28>)
 80158e0:	f9b3 2000 	ldrsh.w	r2, [r3]
 80158e4:	4b08      	ldr	r3, [pc, #32]	@ (8015908 <_ZN8touchgfx6Screen4drawEv+0x2c>)
 80158e6:	f8ad 2004 	strh.w	r2, [sp, #4]
 80158ea:	f9b3 3000 	ldrsh.w	r3, [r3]
 80158ee:	f8ad 3006 	strh.w	r3, [sp, #6]
 80158f2:	6803      	ldr	r3, [r0, #0]
 80158f4:	2100      	movs	r1, #0
 80158f6:	9100      	str	r1, [sp, #0]
 80158f8:	689b      	ldr	r3, [r3, #8]
 80158fa:	4669      	mov	r1, sp
 80158fc:	4798      	blx	r3
 80158fe:	b003      	add	sp, #12
 8015900:	f85d fb04 	ldr.w	pc, [sp], #4
 8015904:	20002f48 	.word	0x20002f48
 8015908:	20002f4a 	.word	0x20002f4a

0801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>:
 801590c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015910:	f9b1 3004 	ldrsh.w	r3, [r1, #4]
 8015914:	2b00      	cmp	r3, #0
 8015916:	b089      	sub	sp, #36	@ 0x24
 8015918:	4680      	mov	r8, r0
 801591a:	460c      	mov	r4, r1
 801591c:	4615      	mov	r5, r2
 801591e:	dd0e      	ble.n	801593e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015920:	f9b1 3006 	ldrsh.w	r3, [r1, #6]
 8015924:	2b00      	cmp	r3, #0
 8015926:	dd0a      	ble.n	801593e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015928:	4628      	mov	r0, r5
 801592a:	f7ff ff5b 	bl	80157e4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 801592e:	4621      	mov	r1, r4
 8015930:	f7fe fba8 	bl	8014084 <_ZNK8touchgfx4Rect9intersectERKS0_>
 8015934:	69eb      	ldr	r3, [r5, #28]
 8015936:	b928      	cbnz	r0, 8015944 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x38>
 8015938:	461d      	mov	r5, r3
 801593a:	2b00      	cmp	r3, #0
 801593c:	d1f4      	bne.n	8015928 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1c>
 801593e:	b009      	add	sp, #36	@ 0x24
 8015940:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015944:	ae04      	add	r6, sp, #16
 8015946:	2b00      	cmp	r3, #0
 8015948:	f000 80b5 	beq.w	8015ab6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 801594c:	682b      	ldr	r3, [r5, #0]
 801594e:	4629      	mov	r1, r5
 8015950:	68db      	ldr	r3, [r3, #12]
 8015952:	a802      	add	r0, sp, #8
 8015954:	4798      	blx	r3
 8015956:	4628      	mov	r0, r5
 8015958:	f7ff ff60 	bl	801581c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 801595c:	f8bd 7008 	ldrh.w	r7, [sp, #8]
 8015960:	4407      	add	r7, r0
 8015962:	4628      	mov	r0, r5
 8015964:	f7ff ff6e 	bl	8015844 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015968:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801596c:	f9bd 200c 	ldrsh.w	r2, [sp, #12]
 8015970:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015974:	4418      	add	r0, r3
 8015976:	4621      	mov	r1, r4
 8015978:	f9bd 300e 	ldrsh.w	r3, [sp, #14]
 801597c:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015980:	b23f      	sxth	r7, r7
 8015982:	4630      	mov	r0, r6
 8015984:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015988:	f8ad 7010 	strh.w	r7, [sp, #16]
 801598c:	f7fb f906 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8015990:	4628      	mov	r0, r5
 8015992:	f7ff ff27 	bl	80157e4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015996:	4602      	mov	r2, r0
 8015998:	e896 0003 	ldmia.w	r6, {r0, r1}
 801599c:	ab06      	add	r3, sp, #24
 801599e:	e883 0003 	stmia.w	r3, {r0, r1}
 80159a2:	4611      	mov	r1, r2
 80159a4:	4618      	mov	r0, r3
 80159a6:	f7fb f8f9 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 80159aa:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 80159ae:	f9b4 1000 	ldrsh.w	r1, [r4]
 80159b2:	f9bd a01a 	ldrsh.w	sl, [sp, #26]
 80159b6:	f9bd b01c 	ldrsh.w	fp, [sp, #28]
 80159ba:	f9bd 901e 	ldrsh.w	r9, [sp, #30]
 80159be:	4299      	cmp	r1, r3
 80159c0:	d10b      	bne.n	80159da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80159c2:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80159c6:	4552      	cmp	r2, sl
 80159c8:	d107      	bne.n	80159da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80159ca:	f9b4 2004 	ldrsh.w	r2, [r4, #4]
 80159ce:	455a      	cmp	r2, fp
 80159d0:	d103      	bne.n	80159da <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0xce>
 80159d2:	f9b4 2006 	ldrsh.w	r2, [r4, #6]
 80159d6:	454a      	cmp	r2, r9
 80159d8:	d06d      	beq.n	8015ab6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 80159da:	f1bb 0f00 	cmp.w	fp, #0
 80159de:	dd65      	ble.n	8015aac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80159e0:	f1b9 0f00 	cmp.w	r9, #0
 80159e4:	dd62      	ble.n	8015aac <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a0>
 80159e6:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 80159ea:	fa1f f08a 	uxth.w	r0, sl
 80159ee:	4552      	cmp	r2, sl
 80159f0:	9000      	str	r0, [sp, #0]
 80159f2:	da12      	bge.n	8015a1a <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x10e>
 80159f4:	9301      	str	r3, [sp, #4]
 80159f6:	9b00      	ldr	r3, [sp, #0]
 80159f8:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 80159fc:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015a00:	1a9a      	subs	r2, r3, r2
 8015a02:	f8ad 1010 	strh.w	r1, [sp, #16]
 8015a06:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015a0a:	f8ad 2016 	strh.w	r2, [sp, #22]
 8015a0e:	69ea      	ldr	r2, [r5, #28]
 8015a10:	4631      	mov	r1, r6
 8015a12:	4640      	mov	r0, r8
 8015a14:	f7ff ff7a 	bl	801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015a18:	9b01      	ldr	r3, [sp, #4]
 8015a1a:	f9b4 2000 	ldrsh.w	r2, [r4]
 8015a1e:	429a      	cmp	r2, r3
 8015a20:	b29f      	uxth	r7, r3
 8015a22:	da0d      	bge.n	8015a40 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x134>
 8015a24:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015a28:	1aba      	subs	r2, r7, r2
 8015a2a:	f8ad a012 	strh.w	sl, [sp, #18]
 8015a2e:	f8ad 2014 	strh.w	r2, [sp, #20]
 8015a32:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015a36:	69ea      	ldr	r2, [r5, #28]
 8015a38:	4631      	mov	r1, r6
 8015a3a:	4640      	mov	r0, r8
 8015a3c:	f7ff ff66 	bl	801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015a40:	8822      	ldrh	r2, [r4, #0]
 8015a42:	88a3      	ldrh	r3, [r4, #4]
 8015a44:	445f      	add	r7, fp
 8015a46:	4413      	add	r3, r2
 8015a48:	b29b      	uxth	r3, r3
 8015a4a:	b2bf      	uxth	r7, r7
 8015a4c:	b23a      	sxth	r2, r7
 8015a4e:	b219      	sxth	r1, r3
 8015a50:	4291      	cmp	r1, r2
 8015a52:	dd0d      	ble.n	8015a70 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x164>
 8015a54:	1bdb      	subs	r3, r3, r7
 8015a56:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015a5a:	f8ad a012 	strh.w	sl, [sp, #18]
 8015a5e:	f8ad 3014 	strh.w	r3, [sp, #20]
 8015a62:	f8ad 9016 	strh.w	r9, [sp, #22]
 8015a66:	69ea      	ldr	r2, [r5, #28]
 8015a68:	4631      	mov	r1, r6
 8015a6a:	4640      	mov	r0, r8
 8015a6c:	f7ff ff4e 	bl	801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015a70:	88e2      	ldrh	r2, [r4, #6]
 8015a72:	8863      	ldrh	r3, [r4, #2]
 8015a74:	4413      	add	r3, r2
 8015a76:	9a00      	ldr	r2, [sp, #0]
 8015a78:	444a      	add	r2, r9
 8015a7a:	b29b      	uxth	r3, r3
 8015a7c:	fa1f f982 	uxth.w	r9, r2
 8015a80:	fa0f f289 	sxth.w	r2, r9
 8015a84:	b219      	sxth	r1, r3
 8015a86:	428a      	cmp	r2, r1
 8015a88:	da15      	bge.n	8015ab6 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1aa>
 8015a8a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8015a8e:	f9b4 0000 	ldrsh.w	r0, [r4]
 8015a92:	f8ad 1014 	strh.w	r1, [sp, #20]
 8015a96:	eba3 0309 	sub.w	r3, r3, r9
 8015a9a:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015a9e:	f8ad 2012 	strh.w	r2, [sp, #18]
 8015aa2:	f8ad 3016 	strh.w	r3, [sp, #22]
 8015aa6:	69ea      	ldr	r2, [r5, #28]
 8015aa8:	4631      	mov	r1, r6
 8015aaa:	e001      	b.n	8015ab0 <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x1a4>
 8015aac:	69ea      	ldr	r2, [r5, #28]
 8015aae:	4621      	mov	r1, r4
 8015ab0:	4640      	mov	r0, r8
 8015ab2:	f7ff ff2b 	bl	801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015ab6:	4628      	mov	r0, r5
 8015ab8:	f7ff fe94 	bl	80157e4 <_ZN8touchgfx8Drawable20getCachedVisibleRectEv>
 8015abc:	6861      	ldr	r1, [r4, #4]
 8015abe:	4602      	mov	r2, r0
 8015ac0:	6820      	ldr	r0, [r4, #0]
 8015ac2:	4633      	mov	r3, r6
 8015ac4:	c303      	stmia	r3!, {r0, r1}
 8015ac6:	4611      	mov	r1, r2
 8015ac8:	4630      	mov	r0, r6
 8015aca:	f7fb f867 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8015ace:	f9bd 3014 	ldrsh.w	r3, [sp, #20]
 8015ad2:	2b00      	cmp	r3, #0
 8015ad4:	f77f af33 	ble.w	801593e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015ad8:	f9bd 3016 	ldrsh.w	r3, [sp, #22]
 8015adc:	2b00      	cmp	r3, #0
 8015ade:	f77f af2e 	ble.w	801593e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>
 8015ae2:	4628      	mov	r0, r5
 8015ae4:	f7ff fe9a 	bl	801581c <_ZN8touchgfx8Drawable13getCachedAbsXEv>
 8015ae8:	f8bd 3010 	ldrh.w	r3, [sp, #16]
 8015aec:	1a18      	subs	r0, r3, r0
 8015aee:	f8ad 0010 	strh.w	r0, [sp, #16]
 8015af2:	4628      	mov	r0, r5
 8015af4:	f7ff fea6 	bl	8015844 <_ZN8touchgfx8Drawable13getCachedAbsYEv>
 8015af8:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 8015afc:	1a18      	subs	r0, r3, r0
 8015afe:	f8ad 0012 	strh.w	r0, [sp, #18]
 8015b02:	682b      	ldr	r3, [r5, #0]
 8015b04:	4631      	mov	r1, r6
 8015b06:	689b      	ldr	r3, [r3, #8]
 8015b08:	4628      	mov	r0, r5
 8015b0a:	4798      	blx	r3
 8015b0c:	e717      	b.n	801593e <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE+0x32>

08015b0e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>:
 8015b0e:	b570      	push	{r4, r5, r6, lr}
 8015b10:	460c      	mov	r4, r1
 8015b12:	b086      	sub	sp, #24
 8015b14:	1d06      	adds	r6, r0, #4
 8015b16:	2300      	movs	r3, #0
 8015b18:	4631      	mov	r1, r6
 8015b1a:	4605      	mov	r5, r0
 8015b1c:	a802      	add	r0, sp, #8
 8015b1e:	9301      	str	r3, [sp, #4]
 8015b20:	f7ff fca0 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b24:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 8015b28:	8822      	ldrh	r2, [r4, #0]
 8015b2a:	f8bd 100a 	ldrh.w	r1, [sp, #10]
 8015b2e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 8015b32:	f8ad 0014 	strh.w	r0, [sp, #20]
 8015b36:	1ad2      	subs	r2, r2, r3
 8015b38:	8863      	ldrh	r3, [r4, #2]
 8015b3a:	f8ad 2010 	strh.w	r2, [sp, #16]
 8015b3e:	1a5b      	subs	r3, r3, r1
 8015b40:	f9b4 1006 	ldrsh.w	r1, [r4, #6]
 8015b44:	f8ad 1016 	strh.w	r1, [sp, #22]
 8015b48:	aa01      	add	r2, sp, #4
 8015b4a:	a904      	add	r1, sp, #16
 8015b4c:	4630      	mov	r0, r6
 8015b4e:	f8ad 3012 	strh.w	r3, [sp, #18]
 8015b52:	f7fb f8fb 	bl	8010d4c <_ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE>
 8015b56:	9a01      	ldr	r2, [sp, #4]
 8015b58:	b11a      	cbz	r2, 8015b62 <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE+0x54>
 8015b5a:	4621      	mov	r1, r4
 8015b5c:	4628      	mov	r0, r5
 8015b5e:	f7ff fed5 	bl	801590c <_ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE>
 8015b62:	b006      	add	sp, #24
 8015b64:	bd70      	pop	{r4, r5, r6, pc}

08015b66 <_ZN8touchgfx6Screen4drawERNS_4RectE>:
 8015b66:	b530      	push	{r4, r5, lr}
 8015b68:	4602      	mov	r2, r0
 8015b6a:	4604      	mov	r4, r0
 8015b6c:	f852 0f08 	ldr.w	r0, [r2, #8]!
 8015b70:	b085      	sub	sp, #20
 8015b72:	460d      	mov	r5, r1
 8015b74:	6851      	ldr	r1, [r2, #4]
 8015b76:	466b      	mov	r3, sp
 8015b78:	c303      	stmia	r3!, {r0, r1}
 8015b7a:	4629      	mov	r1, r5
 8015b7c:	4668      	mov	r0, sp
 8015b7e:	f7fb f80d 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 8015b82:	f894 3038 	ldrb.w	r3, [r4, #56]	@ 0x38
 8015b86:	b12b      	cbz	r3, 8015b94 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2e>
 8015b88:	4669      	mov	r1, sp
 8015b8a:	4620      	mov	r0, r4
 8015b8c:	f7ff ffbf 	bl	8015b0e <_ZN8touchgfx6Screen9startSMOCERKNS_4RectE>
 8015b90:	b005      	add	sp, #20
 8015b92:	bd30      	pop	{r4, r5, pc}
 8015b94:	3404      	adds	r4, #4
 8015b96:	4621      	mov	r1, r4
 8015b98:	a802      	add	r0, sp, #8
 8015b9a:	f7ff fc63 	bl	8015464 <_ZNK8touchgfx8Drawable15getAbsoluteRectEv>
 8015b9e:	f8bd 3000 	ldrh.w	r3, [sp]
 8015ba2:	f8bd 2008 	ldrh.w	r2, [sp, #8]
 8015ba6:	1a9b      	subs	r3, r3, r2
 8015ba8:	f8ad 3000 	strh.w	r3, [sp]
 8015bac:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 8015bb0:	f8bd 3002 	ldrh.w	r3, [sp, #2]
 8015bb4:	4669      	mov	r1, sp
 8015bb6:	1a9b      	subs	r3, r3, r2
 8015bb8:	4620      	mov	r0, r4
 8015bba:	f8ad 3002 	strh.w	r3, [sp, #2]
 8015bbe:	f7fb f88c 	bl	8010cda <_ZNK8touchgfx9Container4drawERKNS_4RectE>
 8015bc2:	e7e5      	b.n	8015b90 <_ZN8touchgfx6Screen4drawERNS_4RectE+0x2a>

08015bc4 <_ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE>:
 8015bc4:	680a      	ldr	r2, [r1, #0]
 8015bc6:	460b      	mov	r3, r1
 8015bc8:	6992      	ldr	r2, [r2, #24]
 8015bca:	1d01      	adds	r1, r0, #4
 8015bcc:	4618      	mov	r0, r3
 8015bce:	4710      	bx	r2

08015bd0 <_ZN8touchgfx12TextProviderC1Ev>:
 8015bd0:	b538      	push	{r3, r4, r5, lr}
 8015bd2:	2500      	movs	r5, #0
 8015bd4:	2302      	movs	r3, #2
 8015bd6:	4604      	mov	r4, r0
 8015bd8:	e9c0 5500 	strd	r5, r5, [r0]
 8015bdc:	7403      	strb	r3, [r0, #16]
 8015bde:	6145      	str	r5, [r0, #20]
 8015be0:	7605      	strb	r5, [r0, #24]
 8015be2:	83c5      	strh	r5, [r0, #30]
 8015be4:	8405      	strh	r5, [r0, #32]
 8015be6:	86c5      	strh	r5, [r0, #54]	@ 0x36
 8015be8:	8705      	strh	r5, [r0, #56]	@ 0x38
 8015bea:	87c5      	strh	r5, [r0, #62]	@ 0x3e
 8015bec:	f8a0 5040 	strh.w	r5, [r0, #64]	@ 0x40
 8015bf0:	e9c0 5511 	strd	r5, r5, [r0, #68]	@ 0x44
 8015bf4:	220e      	movs	r2, #14
 8015bf6:	4629      	mov	r1, r5
 8015bf8:	304c      	adds	r0, #76	@ 0x4c
 8015bfa:	f010 fb30 	bl	802625e <memset>
 8015bfe:	2301      	movs	r3, #1
 8015c00:	4620      	mov	r0, r4
 8015c02:	f8a4 505a 	strh.w	r5, [r4, #90]	@ 0x5a
 8015c06:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8015c0a:	f8a4 505e 	strh.w	r5, [r4, #94]	@ 0x5e
 8015c0e:	f884 3060 	strb.w	r3, [r4, #96]	@ 0x60
 8015c12:	f884 5061 	strb.w	r5, [r4, #97]	@ 0x61
 8015c16:	f7f7 fee5 	bl	800d9e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>
 8015c1a:	4620      	mov	r0, r4
 8015c1c:	bd38      	pop	{r3, r4, r5, pc}

08015c1e <_ZN8touchgfx12TextProvider11endOfStringEv>:
 8015c1e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8015c20:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8015c24:	8c40      	ldrh	r0, [r0, #34]	@ 0x22
 8015c26:	fab0 f080 	clz	r0, r0
 8015c2a:	0940      	lsrs	r0, r0, #5
 8015c2c:	4770      	bx	lr

08015c2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>:
 8015c2e:	b530      	push	{r4, r5, lr}
 8015c30:	2500      	movs	r5, #0
 8015c32:	2401      	movs	r4, #1
 8015c34:	6843      	ldr	r3, [r0, #4]
 8015c36:	b913      	cbnz	r3, 8015c3e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x10>
 8015c38:	6803      	ldr	r3, [r0, #0]
 8015c3a:	b313      	cbz	r3, 8015c82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015c3c:	6043      	str	r3, [r0, #4]
 8015c3e:	7e03      	ldrb	r3, [r0, #24]
 8015c40:	b143      	cbz	r3, 8015c54 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x26>
 8015c42:	6943      	ldr	r3, [r0, #20]
 8015c44:	b12b      	cbz	r3, 8015c52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015c46:	881a      	ldrh	r2, [r3, #0]
 8015c48:	b11a      	cbz	r2, 8015c52 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x24>
 8015c4a:	1c9a      	adds	r2, r3, #2
 8015c4c:	6142      	str	r2, [r0, #20]
 8015c4e:	8818      	ldrh	r0, [r3, #0]
 8015c50:	bd30      	pop	{r4, r5, pc}
 8015c52:	7605      	strb	r5, [r0, #24]
 8015c54:	6843      	ldr	r3, [r0, #4]
 8015c56:	8819      	ldrh	r1, [r3, #0]
 8015c58:	b199      	cbz	r1, 8015c82 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x54>
 8015c5a:	1c9a      	adds	r2, r3, #2
 8015c5c:	2902      	cmp	r1, #2
 8015c5e:	6042      	str	r2, [r0, #4]
 8015c60:	d1f5      	bne.n	8015c4e <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x20>
 8015c62:	7c03      	ldrb	r3, [r0, #16]
 8015c64:	2b01      	cmp	r3, #1
 8015c66:	d8e5      	bhi.n	8015c34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015c68:	1c5a      	adds	r2, r3, #1
 8015c6a:	3302      	adds	r3, #2
 8015c6c:	7402      	strb	r2, [r0, #16]
 8015c6e:	f850 3023 	ldr.w	r3, [r0, r3, lsl #2]
 8015c72:	6143      	str	r3, [r0, #20]
 8015c74:	2b00      	cmp	r3, #0
 8015c76:	d0dd      	beq.n	8015c34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015c78:	881b      	ldrh	r3, [r3, #0]
 8015c7a:	2b00      	cmp	r3, #0
 8015c7c:	d0da      	beq.n	8015c34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015c7e:	7604      	strb	r4, [r0, #24]
 8015c80:	e7d8      	b.n	8015c34 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x6>
 8015c82:	2000      	movs	r0, #0
 8015c84:	e7e4      	b.n	8015c50 <_ZN8touchgfx12TextProvider19getNextCharInternalEv+0x22>

08015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>:
 8015c86:	b430      	push	{r4, r5}
 8015c88:	6001      	str	r1, [r0, #0]
 8015c8a:	2100      	movs	r1, #0
 8015c8c:	6041      	str	r1, [r0, #4]
 8015c8e:	6815      	ldr	r5, [r2, #0]
 8015c90:	6085      	str	r5, [r0, #8]
 8015c92:	6852      	ldr	r2, [r2, #4]
 8015c94:	6443      	str	r3, [r0, #68]	@ 0x44
 8015c96:	9b02      	ldr	r3, [sp, #8]
 8015c98:	60c2      	str	r2, [r0, #12]
 8015c9a:	7401      	strb	r1, [r0, #16]
 8015c9c:	6141      	str	r1, [r0, #20]
 8015c9e:	7601      	strb	r1, [r0, #24]
 8015ca0:	8701      	strh	r1, [r0, #56]	@ 0x38
 8015ca2:	8401      	strh	r1, [r0, #32]
 8015ca4:	f8a0 1040 	strh.w	r1, [r0, #64]	@ 0x40
 8015ca8:	6483      	str	r3, [r0, #72]	@ 0x48
 8015caa:	bc30      	pop	{r4, r5}
 8015cac:	f7f7 be9a 	b.w	800d9e4 <_ZN8touchgfx12TextProvider18initializeInternalEv>

08015cb0 <_ZN8touchgfx12TextProvider10initializeEPKtS2_PKNS_24FontContextualFormsTableEz>:
 8015cb0:	b408      	push	{r3}
 8015cb2:	b510      	push	{r4, lr}
 8015cb4:	b085      	sub	sp, #20
 8015cb6:	ac07      	add	r4, sp, #28
 8015cb8:	f854 3b04 	ldr.w	r3, [r4], #4
 8015cbc:	9300      	str	r3, [sp, #0]
 8015cbe:	4613      	mov	r3, r2
 8015cc0:	4622      	mov	r2, r4
 8015cc2:	9403      	str	r4, [sp, #12]
 8015cc4:	f7ff ffdf 	bl	8015c86 <_ZN8touchgfx12TextProvider10initializeEPKtSt9__va_listS2_PKNS_24FontContextualFormsTableE>
 8015cc8:	b005      	add	sp, #20
 8015cca:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8015cce:	b001      	add	sp, #4
 8015cd0:	4770      	bx	lr

08015cd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>:
 8015cd2:	b5f0      	push	{r4, r5, r6, r7, lr}
 8015cd4:	4605      	mov	r5, r0
 8015cd6:	4608      	mov	r0, r1
 8015cd8:	b1e9      	cbz	r1, 8015d16 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x44>
 8015cda:	f105 044c 	add.w	r4, r5, #76	@ 0x4c
 8015cde:	460b      	mov	r3, r1
 8015ce0:	f101 0708 	add.w	r7, r1, #8
 8015ce4:	4622      	mov	r2, r4
 8015ce6:	6818      	ldr	r0, [r3, #0]
 8015ce8:	6859      	ldr	r1, [r3, #4]
 8015cea:	4626      	mov	r6, r4
 8015cec:	c603      	stmia	r6!, {r0, r1}
 8015cee:	3308      	adds	r3, #8
 8015cf0:	42bb      	cmp	r3, r7
 8015cf2:	4634      	mov	r4, r6
 8015cf4:	d1f7      	bne.n	8015ce6 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE+0x14>
 8015cf6:	6818      	ldr	r0, [r3, #0]
 8015cf8:	6030      	str	r0, [r6, #0]
 8015cfa:	889b      	ldrh	r3, [r3, #4]
 8015cfc:	80b3      	strh	r3, [r6, #4]
 8015cfe:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015d02:	015b      	lsls	r3, r3, #5
 8015d04:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 8015d08:	f895 3052 	ldrb.w	r3, [r5, #82]	@ 0x52
 8015d0c:	430b      	orrs	r3, r1
 8015d0e:	425b      	negs	r3, r3
 8015d10:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015d14:	4610      	mov	r0, r2
 8015d16:	bdf0      	pop	{r4, r5, r6, r7, pc}

08015d18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>:
 8015d18:	b538      	push	{r3, r4, r5, lr}
 8015d1a:	460c      	mov	r4, r1
 8015d1c:	6811      	ldr	r1, [r2, #0]
 8015d1e:	4610      	mov	r0, r2
 8015d20:	68cd      	ldr	r5, [r1, #12]
 8015d22:	4619      	mov	r1, r3
 8015d24:	47a8      	blx	r5
 8015d26:	2800      	cmp	r0, #0
 8015d28:	bf08      	it	eq
 8015d2a:	4620      	moveq	r0, r4
 8015d2c:	bd38      	pop	{r3, r4, r5, pc}
	...

08015d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>:
 8015d30:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015d34:	468c      	mov	ip, r1
 8015d36:	4605      	mov	r5, r0
 8015d38:	4614      	mov	r4, r2
 8015d3a:	b942      	cbnz	r2, 8015d4e <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e>
 8015d3c:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015d40:	f8a5 205c 	strh.w	r2, [r5, #92]	@ 0x5c
 8015d44:	f8a5 205e 	strh.w	r2, [r5, #94]	@ 0x5e
 8015d48:	4620      	mov	r0, r4
 8015d4a:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015d4e:	7b50      	ldrb	r0, [r2, #13]
 8015d50:	8893      	ldrh	r3, [r2, #4]
 8015d52:	0106      	lsls	r6, r0, #4
 8015d54:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015d58:	79e6      	ldrb	r6, [r4, #7]
 8015d5a:	f46f 6163 	mvn.w	r1, #3632	@ 0xe30
 8015d5e:	4316      	orrs	r6, r2
 8015d60:	185a      	adds	r2, r3, r1
 8015d62:	b291      	uxth	r1, r2
 8015d64:	291d      	cmp	r1, #29
 8015d66:	b2b7      	uxth	r7, r6
 8015d68:	d87e      	bhi.n	8015e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015d6a:	2201      	movs	r2, #1
 8015d6c:	408a      	lsls	r2, r1
 8015d6e:	498a      	ldr	r1, [pc, #552]	@ (8015f98 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x268>)
 8015d70:	420a      	tst	r2, r1
 8015d72:	ea4f 06e6 	mov.w	r6, r6, asr #3
 8015d76:	d12d      	bne.n	8015dd4 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xa4>
 8015d78:	f412 7f60 	tst.w	r2, #896	@ 0x380
 8015d7c:	d074      	beq.n	8015e68 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x138>
 8015d7e:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015d82:	4623      	mov	r3, r4
 8015d84:	f104 0e08 	add.w	lr, r4, #8
 8015d88:	4614      	mov	r4, r2
 8015d8a:	6818      	ldr	r0, [r3, #0]
 8015d8c:	6859      	ldr	r1, [r3, #4]
 8015d8e:	4694      	mov	ip, r2
 8015d90:	e8ac 0003 	stmia.w	ip!, {r0, r1}
 8015d94:	3308      	adds	r3, #8
 8015d96:	4573      	cmp	r3, lr
 8015d98:	4662      	mov	r2, ip
 8015d9a:	d1f6      	bne.n	8015d8a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x5a>
 8015d9c:	6818      	ldr	r0, [r3, #0]
 8015d9e:	f8cc 0000 	str.w	r0, [ip]
 8015da2:	889b      	ldrh	r3, [r3, #4]
 8015da4:	f8ac 3004 	strh.w	r3, [ip, #4]
 8015da8:	f8b5 105c 	ldrh.w	r1, [r5, #92]	@ 0x5c
 8015dac:	f895 0059 	ldrb.w	r0, [r5, #89]	@ 0x59
 8015db0:	b2b3      	uxth	r3, r6
 8015db2:	1aca      	subs	r2, r1, r3
 8015db4:	b292      	uxth	r2, r2
 8015db6:	f885 2054 	strb.w	r2, [r5, #84]	@ 0x54
 8015dba:	10d2      	asrs	r2, r2, #3
 8015dbc:	f020 0060 	bic.w	r0, r0, #96	@ 0x60
 8015dc0:	f002 0260 	and.w	r2, r2, #96	@ 0x60
 8015dc4:	4302      	orrs	r2, r0
 8015dc6:	1bcf      	subs	r7, r1, r7
 8015dc8:	f885 2059 	strb.w	r2, [r5, #89]	@ 0x59
 8015dcc:	1afb      	subs	r3, r7, r3
 8015dce:	f8a5 305c 	strh.w	r3, [r5, #92]	@ 0x5c
 8015dd2:	e7b9      	b.n	8015d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015dd4:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015dd8:	4623      	mov	r3, r4
 8015dda:	f104 0808 	add.w	r8, r4, #8
 8015dde:	4614      	mov	r4, r2
 8015de0:	6818      	ldr	r0, [r3, #0]
 8015de2:	6859      	ldr	r1, [r3, #4]
 8015de4:	4696      	mov	lr, r2
 8015de6:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015dea:	3308      	adds	r3, #8
 8015dec:	4543      	cmp	r3, r8
 8015dee:	4672      	mov	r2, lr
 8015df0:	d1f6      	bne.n	8015de0 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0xb0>
 8015df2:	6818      	ldr	r0, [r3, #0]
 8015df4:	f8ce 0000 	str.w	r0, [lr]
 8015df8:	889b      	ldrh	r3, [r3, #4]
 8015dfa:	f8ae 3004 	strh.w	r3, [lr, #4]
 8015dfe:	8eeb      	ldrh	r3, [r5, #54]	@ 0x36
 8015e00:	eb05 0343 	add.w	r3, r5, r3, lsl #1
 8015e04:	8c59      	ldrh	r1, [r3, #34]	@ 0x22
 8015e06:	f640 6333 	movw	r3, #3635	@ 0xe33
 8015e0a:	4299      	cmp	r1, r3
 8015e0c:	d111      	bne.n	8015e32 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x102>
 8015e0e:	f8dc 3000 	ldr.w	r3, [ip]
 8015e12:	4660      	mov	r0, ip
 8015e14:	68db      	ldr	r3, [r3, #12]
 8015e16:	4798      	blx	r3
 8015e18:	7b41      	ldrb	r1, [r0, #13]
 8015e1a:	00cb      	lsls	r3, r1, #3
 8015e1c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015e20:	7a03      	ldrb	r3, [r0, #8]
 8015e22:	4313      	orrs	r3, r2
 8015e24:	064a      	lsls	r2, r1, #25
 8015e26:	bf44      	itt	mi
 8015e28:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015e2c:	b21b      	sxthmi	r3, r3
 8015e2e:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015e32:	f8b5 305a 	ldrh.w	r3, [r5, #90]	@ 0x5a
 8015e36:	f895 2059 	ldrb.w	r2, [r5, #89]	@ 0x59
 8015e3a:	443b      	add	r3, r7
 8015e3c:	4433      	add	r3, r6
 8015e3e:	b29b      	uxth	r3, r3
 8015e40:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015e44:	f885 3054 	strb.w	r3, [r5, #84]	@ 0x54
 8015e48:	10db      	asrs	r3, r3, #3
 8015e4a:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 8015e4e:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8015e52:	4313      	orrs	r3, r2
 8015e54:	f885 3059 	strb.w	r3, [r5, #89]	@ 0x59
 8015e58:	f895 205e 	ldrb.w	r2, [r5, #94]	@ 0x5e
 8015e5c:	f895 3055 	ldrb.w	r3, [r5, #85]	@ 0x55
 8015e60:	1a9b      	subs	r3, r3, r2
 8015e62:	f885 3055 	strb.w	r3, [r5, #85]	@ 0x55
 8015e66:	e76f      	b.n	8015d48 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x18>
 8015e68:	f023 0204 	bic.w	r2, r3, #4
 8015e6c:	f640 611b 	movw	r1, #3611	@ 0xe1b
 8015e70:	428a      	cmp	r2, r1
 8015e72:	d003      	beq.n	8015e7c <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x14c>
 8015e74:	f640 621d 	movw	r2, #3613	@ 0xe1d
 8015e78:	4293      	cmp	r3, r2
 8015e7a:	d137      	bne.n	8015eec <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1bc>
 8015e7c:	f105 064c 	add.w	r6, r5, #76	@ 0x4c
 8015e80:	4622      	mov	r2, r4
 8015e82:	f104 0808 	add.w	r8, r4, #8
 8015e86:	4634      	mov	r4, r6
 8015e88:	6810      	ldr	r0, [r2, #0]
 8015e8a:	6851      	ldr	r1, [r2, #4]
 8015e8c:	46b6      	mov	lr, r6
 8015e8e:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 8015e92:	3208      	adds	r2, #8
 8015e94:	4542      	cmp	r2, r8
 8015e96:	4676      	mov	r6, lr
 8015e98:	d1f6      	bne.n	8015e88 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x158>
 8015e9a:	6810      	ldr	r0, [r2, #0]
 8015e9c:	f8ce 0000 	str.w	r0, [lr]
 8015ea0:	8892      	ldrh	r2, [r2, #4]
 8015ea2:	f8ae 2004 	strh.w	r2, [lr, #4]
 8015ea6:	3b01      	subs	r3, #1
 8015ea8:	b29b      	uxth	r3, r3
 8015eaa:	4662      	mov	r2, ip
 8015eac:	4621      	mov	r1, r4
 8015eae:	4628      	mov	r0, r5
 8015eb0:	f7ff ff32 	bl	8015d18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015eb4:	7b41      	ldrb	r1, [r0, #13]
 8015eb6:	00cb      	lsls	r3, r1, #3
 8015eb8:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015ebc:	7a03      	ldrb	r3, [r0, #8]
 8015ebe:	0648      	lsls	r0, r1, #25
 8015ec0:	ea43 0302 	orr.w	r3, r3, r2
 8015ec4:	bf44      	itt	mi
 8015ec6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015eca:	b21b      	sxthmi	r3, r3
 8015ecc:	f8a5 305a 	strh.w	r3, [r5, #90]	@ 0x5a
 8015ed0:	f895 3059 	ldrb.w	r3, [r5, #89]	@ 0x59
 8015ed4:	f895 2056 	ldrb.w	r2, [r5, #86]	@ 0x56
 8015ed8:	005b      	lsls	r3, r3, #1
 8015eda:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015ede:	4313      	orrs	r3, r2
 8015ee0:	115a      	asrs	r2, r3, #5
 8015ee2:	eb02 0393 	add.w	r3, r2, r3, lsr #2
 8015ee6:	f8a5 305e 	strh.w	r3, [r5, #94]	@ 0x5e
 8015eea:	e046      	b.n	8015f7a <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x24a>
 8015eec:	00c2      	lsls	r2, r0, #3
 8015eee:	f402 7180 	and.w	r1, r2, #256	@ 0x100
 8015ef2:	7a22      	ldrb	r2, [r4, #8]
 8015ef4:	430a      	orrs	r2, r1
 8015ef6:	0641      	lsls	r1, r0, #25
 8015ef8:	bf44      	itt	mi
 8015efa:	f5a2 7200 	submi.w	r2, r2, #512	@ 0x200
 8015efe:	b212      	sxthmi	r2, r2
 8015f00:	f8a5 205a 	strh.w	r2, [r5, #90]	@ 0x5a
 8015f04:	f640 6109 	movw	r1, #3593	@ 0xe09
 8015f08:	f023 0210 	bic.w	r2, r3, #16
 8015f0c:	428a      	cmp	r2, r1
 8015f0e:	d003      	beq.n	8015f18 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1e8>
 8015f10:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015f14:	4293      	cmp	r3, r2
 8015f16:	d13d      	bne.n	8015f94 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x264>
 8015f18:	f105 024c 	add.w	r2, r5, #76	@ 0x4c
 8015f1c:	f104 0808 	add.w	r8, r4, #8
 8015f20:	4696      	mov	lr, r2
 8015f22:	6820      	ldr	r0, [r4, #0]
 8015f24:	6861      	ldr	r1, [r4, #4]
 8015f26:	4616      	mov	r6, r2
 8015f28:	c603      	stmia	r6!, {r0, r1}
 8015f2a:	3408      	adds	r4, #8
 8015f2c:	4544      	cmp	r4, r8
 8015f2e:	4632      	mov	r2, r6
 8015f30:	d1f7      	bne.n	8015f22 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1f2>
 8015f32:	6820      	ldr	r0, [r4, #0]
 8015f34:	6030      	str	r0, [r6, #0]
 8015f36:	88a1      	ldrh	r1, [r4, #4]
 8015f38:	80b1      	strh	r1, [r6, #4]
 8015f3a:	f895 6059 	ldrb.w	r6, [r5, #89]	@ 0x59
 8015f3e:	0076      	lsls	r6, r6, #1
 8015f40:	f406 7280 	and.w	r2, r6, #256	@ 0x100
 8015f44:	f895 6056 	ldrb.w	r6, [r5, #86]	@ 0x56
 8015f48:	4316      	orrs	r6, r2
 8015f4a:	f640 6213 	movw	r2, #3603	@ 0xe13
 8015f4e:	4293      	cmp	r3, r2
 8015f50:	bf1a      	itte	ne
 8015f52:	f103 33ff 	addne.w	r3, r3, #4294967295
 8015f56:	b29b      	uxthne	r3, r3
 8015f58:	f640 630c 	movweq	r3, #3596	@ 0xe0c
 8015f5c:	4662      	mov	r2, ip
 8015f5e:	4671      	mov	r1, lr
 8015f60:	4628      	mov	r0, r5
 8015f62:	4674      	mov	r4, lr
 8015f64:	f7ff fed8 	bl	8015d18 <_ZNK8touchgfx12TextProvider15thaiLookupGlyphEPKNS_9GlyphNodeEPKNS_4FontEt>
 8015f68:	7b43      	ldrb	r3, [r0, #13]
 8015f6a:	7a82      	ldrb	r2, [r0, #10]
 8015f6c:	005b      	lsls	r3, r3, #1
 8015f6e:	f403 7380 	and.w	r3, r3, #256	@ 0x100
 8015f72:	4313      	orrs	r3, r2
 8015f74:	1af6      	subs	r6, r6, r3
 8015f76:	f8a5 605e 	strh.w	r6, [r5, #94]	@ 0x5e
 8015f7a:	7b61      	ldrb	r1, [r4, #13]
 8015f7c:	00cb      	lsls	r3, r1, #3
 8015f7e:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8015f82:	7a23      	ldrb	r3, [r4, #8]
 8015f84:	4313      	orrs	r3, r2
 8015f86:	064a      	lsls	r2, r1, #25
 8015f88:	bf44      	itt	mi
 8015f8a:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8015f8e:	b21b      	sxthmi	r3, r3
 8015f90:	1bdb      	subs	r3, r3, r7
 8015f92:	e71c      	b.n	8015dce <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x9e>
 8015f94:	2300      	movs	r3, #0
 8015f96:	e7a6      	b.n	8015ee6 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE+0x1b6>
 8015f98:	3fc00079 	.word	0x3fc00079

08015f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>:
 8015f9c:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8015fa0:	4604      	mov	r4, r0
 8015fa2:	b942      	cbnz	r2, 8015fb6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1a>
 8015fa4:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 8015fa8:	f8a0 305a 	strh.w	r3, [r0, #90]	@ 0x5a
 8015fac:	f8a0 305c 	strh.w	r3, [r0, #92]	@ 0x5c
 8015fb0:	f8a4 305e 	strh.w	r3, [r4, #94]	@ 0x5e
 8015fb4:	e047      	b.n	8016046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8015fb6:	7b51      	ldrb	r1, [r2, #13]
 8015fb8:	8893      	ldrh	r3, [r2, #4]
 8015fba:	010d      	lsls	r5, r1, #4
 8015fbc:	f405 7080 	and.w	r0, r5, #256	@ 0x100
 8015fc0:	79d5      	ldrb	r5, [r2, #7]
 8015fc2:	4305      	orrs	r5, r0
 8015fc4:	2d04      	cmp	r5, #4
 8015fc6:	bfcc      	ite	gt
 8015fc8:	ea4f 0e95 	movgt.w	lr, r5, lsr #2
 8015fcc:	f04f 0e01 	movle.w	lr, #1
 8015fd0:	f5b3 6fdd 	cmp.w	r3, #1768	@ 0x6e8
 8015fd4:	f200 80ab 	bhi.w	801612e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x192>
 8015fd8:	f240 60e7 	movw	r0, #1767	@ 0x6e7
 8015fdc:	4283      	cmp	r3, r0
 8015fde:	d216      	bcs.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015fe0:	f240 605b 	movw	r0, #1627	@ 0x65b
 8015fe4:	4283      	cmp	r3, r0
 8015fe6:	d859      	bhi.n	801609c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x100>
 8015fe8:	f240 6057 	movw	r0, #1623	@ 0x657
 8015fec:	4283      	cmp	r3, r0
 8015fee:	d20e      	bcs.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ff0:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8015ff4:	d24a      	bcs.n	801608c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xf0>
 8015ff6:	f240 604e 	movw	r0, #1614	@ 0x64e
 8015ffa:	4283      	cmp	r3, r0
 8015ffc:	d207      	bcs.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8015ffe:	f240 601a 	movw	r0, #1562	@ 0x61a
 8016002:	4283      	cmp	r3, r0
 8016004:	d02a      	beq.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016006:	d821      	bhi.n	801604c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xb0>
 8016008:	f5b3 6fc2 	cmp.w	r3, #1552	@ 0x610
 801600c:	d35b      	bcc.n	80160c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801600e:	f9b4 305a 	ldrsh.w	r3, [r4, #90]	@ 0x5a
 8016012:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016016:	f040 80d0 	bne.w	80161ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 801601a:	f9b4 005c 	ldrsh.w	r0, [r4, #92]	@ 0x5c
 801601e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016022:	f040 80ca 	bne.w	80161ba <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x21e>
 8016026:	00cb      	lsls	r3, r1, #3
 8016028:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801602c:	7a13      	ldrb	r3, [r2, #8]
 801602e:	0649      	lsls	r1, r1, #25
 8016030:	ea43 0300 	orr.w	r3, r3, r0
 8016034:	bf44      	itt	mi
 8016036:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 801603a:	b21b      	sxthmi	r3, r3
 801603c:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016040:	1b5d      	subs	r5, r3, r5
 8016042:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 8016046:	4610      	mov	r0, r2
 8016048:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801604c:	f240 604b 	movw	r0, #1611	@ 0x64b
 8016050:	4283      	cmp	r3, r0
 8016052:	d338      	bcc.n	80160c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 8016054:	f240 604c 	movw	r0, #1612	@ 0x64c
 8016058:	4283      	cmp	r3, r0
 801605a:	d9d8      	bls.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801605c:	f9b4 005a 	ldrsh.w	r0, [r4, #90]	@ 0x5a
 8016060:	f9b4 305c 	ldrsh.w	r3, [r4, #92]	@ 0x5c
 8016064:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016068:	f040 80f2 	bne.w	8016250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 801606c:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016070:	f040 80ee 	bne.w	8016250 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b4>
 8016074:	00cb      	lsls	r3, r1, #3
 8016076:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 801607a:	7a13      	ldrb	r3, [r2, #8]
 801607c:	064e      	lsls	r6, r1, #25
 801607e:	ea43 0300 	orr.w	r3, r3, r0
 8016082:	bf44      	itt	mi
 8016084:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016088:	b21b      	sxthmi	r3, r3
 801608a:	e7d9      	b.n	8016040 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xa4>
 801608c:	f240 6054 	movw	r0, #1620	@ 0x654
 8016090:	4283      	cmp	r3, r0
 8016092:	d8e3      	bhi.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016094:	f5b3 6fca 	cmp.w	r3, #1616	@ 0x650
 8016098:	d9e0      	bls.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801609a:	e7b8      	b.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801609c:	f240 6074 	movw	r0, #1652	@ 0x674
 80160a0:	4283      	cmp	r3, r0
 80160a2:	d0b4      	beq.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80160a4:	d82d      	bhi.n	8016102 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x166>
 80160a6:	f240 605e 	movw	r0, #1630	@ 0x65e
 80160aa:	4283      	cmp	r3, r0
 80160ac:	d804      	bhi.n	80160b8 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x11c>
 80160ae:	f240 605d 	movw	r0, #1629	@ 0x65d
 80160b2:	4283      	cmp	r3, r0
 80160b4:	d3d2      	bcc.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80160b6:	e7aa      	b.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80160b8:	f240 605f 	movw	r0, #1631	@ 0x65f
 80160bc:	4283      	cmp	r3, r0
 80160be:	d0cd      	beq.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80160c0:	f5b3 6fce 	cmp.w	r3, #1648	@ 0x670
 80160c4:	d0a3      	beq.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80160c6:	00cb      	lsls	r3, r1, #3
 80160c8:	f403 7080 	and.w	r0, r3, #256	@ 0x100
 80160cc:	7a13      	ldrb	r3, [r2, #8]
 80160ce:	0649      	lsls	r1, r1, #25
 80160d0:	ea43 0300 	orr.w	r3, r3, r0
 80160d4:	bf44      	itt	mi
 80160d6:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80160da:	b21b      	sxthmi	r3, r3
 80160dc:	1b5d      	subs	r5, r3, r5
 80160de:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 80160e2:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80160e6:	7b53      	ldrb	r3, [r2, #13]
 80160e8:	015b      	lsls	r3, r3, #5
 80160ea:	f403 7180 	and.w	r1, r3, #256	@ 0x100
 80160ee:	7993      	ldrb	r3, [r2, #6]
 80160f0:	430b      	orrs	r3, r1
 80160f2:	005b      	lsls	r3, r3, #1
 80160f4:	2105      	movs	r1, #5
 80160f6:	fb93 f3f1 	sdiv	r3, r3, r1
 80160fa:	f992 1009 	ldrsb.w	r1, [r2, #9]
 80160fe:	440b      	add	r3, r1
 8016100:	e756      	b.n	8015fb0 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x14>
 8016102:	f240 60e2 	movw	r0, #1762	@ 0x6e2
 8016106:	4283      	cmp	r3, r0
 8016108:	d809      	bhi.n	801611e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x182>
 801610a:	f240 60df 	movw	r0, #1759	@ 0x6df
 801610e:	4283      	cmp	r3, r0
 8016110:	f4bf af7d 	bcs.w	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016114:	f2a3 63d6 	subw	r3, r3, #1750	@ 0x6d6
 8016118:	2b05      	cmp	r3, #5
 801611a:	d8d4      	bhi.n	80160c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801611c:	e777      	b.n	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801611e:	f240 60e3 	movw	r0, #1763	@ 0x6e3
 8016122:	4283      	cmp	r3, r0
 8016124:	d09a      	beq.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016126:	f240 60e4 	movw	r0, #1764	@ 0x6e4
 801612a:	4283      	cmp	r3, r0
 801612c:	e7ca      	b.n	80160c4 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x128>
 801612e:	f5b3 6f0f 	cmp.w	r3, #2288	@ 0x8f0
 8016132:	d22b      	bcs.n	801618c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1f0>
 8016134:	f640 00ed 	movw	r0, #2285	@ 0x8ed
 8016138:	4283      	cmp	r3, r0
 801613a:	d28f      	bcs.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801613c:	f640 00e5 	movw	r0, #2277	@ 0x8e5
 8016140:	4283      	cmp	r3, r0
 8016142:	d816      	bhi.n	8016172 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d6>
 8016144:	f640 00e4 	movw	r0, #2276	@ 0x8e4
 8016148:	4283      	cmp	r3, r0
 801614a:	f4bf af60 	bcs.w	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801614e:	f240 60ec 	movw	r0, #1772	@ 0x6ec
 8016152:	4283      	cmp	r3, r0
 8016154:	d80a      	bhi.n	801616c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1d0>
 8016156:	f240 60eb 	movw	r0, #1771	@ 0x6eb
 801615a:	4283      	cmp	r3, r0
 801615c:	f4bf af57 	bcs.w	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 8016160:	f240 60ea 	movw	r0, #1770	@ 0x6ea
 8016164:	4283      	cmp	r3, r0
 8016166:	f43f af79 	beq.w	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801616a:	e7ac      	b.n	80160c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x12a>
 801616c:	f240 60ed 	movw	r0, #1773	@ 0x6ed
 8016170:	e7f8      	b.n	8016164 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1c8>
 8016172:	f640 00e8 	movw	r0, #2280	@ 0x8e8
 8016176:	4283      	cmp	r3, r0
 8016178:	d802      	bhi.n	8016180 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e4>
 801617a:	f640 00e7 	movw	r0, #2279	@ 0x8e7
 801617e:	e798      	b.n	80160b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x116>
 8016180:	f640 00e9 	movw	r0, #2281	@ 0x8e9
 8016184:	4283      	cmp	r3, r0
 8016186:	f47f af42 	bne.w	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 801618a:	e767      	b.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 801618c:	f640 00f6 	movw	r0, #2294	@ 0x8f6
 8016190:	4283      	cmp	r3, r0
 8016192:	f43f af63 	beq.w	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 8016196:	d802      	bhi.n	801619e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x202>
 8016198:	f640 00f2 	movw	r0, #2290	@ 0x8f2
 801619c:	e7f2      	b.n	8016184 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x1e8>
 801619e:	f640 00fa 	movw	r0, #2298	@ 0x8fa
 80161a2:	4283      	cmp	r3, r0
 80161a4:	d805      	bhi.n	80161b2 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x216>
 80161a6:	f640 00f9 	movw	r0, #2297	@ 0x8f9
 80161aa:	4283      	cmp	r3, r0
 80161ac:	f4ff af2f 	bcc.w	801600e <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x72>
 80161b0:	e754      	b.n	801605c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xc0>
 80161b2:	f640 00fe 	movw	r0, #2302	@ 0x8fe
 80161b6:	4283      	cmp	r3, r0
 80161b8:	e7af      	b.n	801611a <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x17e>
 80161ba:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 80161be:	4617      	mov	r7, r2
 80161c0:	f102 0808 	add.w	r8, r2, #8
 80161c4:	4666      	mov	r6, ip
 80161c6:	6838      	ldr	r0, [r7, #0]
 80161c8:	6879      	ldr	r1, [r7, #4]
 80161ca:	46e6      	mov	lr, ip
 80161cc:	e8ae 0003 	stmia.w	lr!, {r0, r1}
 80161d0:	3708      	adds	r7, #8
 80161d2:	4547      	cmp	r7, r8
 80161d4:	46f4      	mov	ip, lr
 80161d6:	d1f6      	bne.n	80161c6 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x22a>
 80161d8:	6838      	ldr	r0, [r7, #0]
 80161da:	f8ce 0000 	str.w	r0, [lr]
 80161de:	88b9      	ldrh	r1, [r7, #4]
 80161e0:	f8ae 1004 	strh.w	r1, [lr, #4]
 80161e4:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 80161e8:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 80161ec:	d009      	beq.n	8016202 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x266>
 80161ee:	7b51      	ldrb	r1, [r2, #13]
 80161f0:	7992      	ldrb	r2, [r2, #6]
 80161f2:	0149      	lsls	r1, r1, #5
 80161f4:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 80161f8:	4311      	orrs	r1, r2
 80161fa:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 80161fe:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016202:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 8016206:	b2ad      	uxth	r5, r5
 8016208:	d00d      	beq.n	8016226 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x28a>
 801620a:	442b      	add	r3, r5
 801620c:	b29b      	uxth	r3, r3
 801620e:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 8016212:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 8016216:	10db      	asrs	r3, r3, #3
 8016218:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 801621c:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 8016220:	4313      	orrs	r3, r2
 8016222:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 8016226:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 801622a:	00cb      	lsls	r3, r1, #3
 801622c:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 8016230:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 8016234:	064f      	lsls	r7, r1, #25
 8016236:	ea43 0302 	orr.w	r3, r3, r2
 801623a:	bf44      	itt	mi
 801623c:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 8016240:	b21b      	sxthmi	r3, r3
 8016242:	f8a4 305a 	strh.w	r3, [r4, #90]	@ 0x5a
 8016246:	1b5b      	subs	r3, r3, r5
 8016248:	f8a4 305c 	strh.w	r3, [r4, #92]	@ 0x5c
 801624c:	4632      	mov	r2, r6
 801624e:	e6fa      	b.n	8016046 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0xaa>
 8016250:	f104 0c4c 	add.w	ip, r4, #76	@ 0x4c
 8016254:	4617      	mov	r7, r2
 8016256:	f102 0908 	add.w	r9, r2, #8
 801625a:	4666      	mov	r6, ip
 801625c:	6838      	ldr	r0, [r7, #0]
 801625e:	6879      	ldr	r1, [r7, #4]
 8016260:	46e0      	mov	r8, ip
 8016262:	e8a8 0003 	stmia.w	r8!, {r0, r1}
 8016266:	3708      	adds	r7, #8
 8016268:	454f      	cmp	r7, r9
 801626a:	46c4      	mov	ip, r8
 801626c:	d1f6      	bne.n	801625c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2c0>
 801626e:	6838      	ldr	r0, [r7, #0]
 8016270:	f8c8 0000 	str.w	r0, [r8]
 8016274:	88b9      	ldrh	r1, [r7, #4]
 8016276:	f8a8 1004 	strh.w	r1, [r8, #4]
 801627a:	f9b4 005e 	ldrsh.w	r0, [r4, #94]	@ 0x5e
 801627e:	f510 4f00 	cmn.w	r0, #32768	@ 0x8000
 8016282:	d009      	beq.n	8016298 <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2fc>
 8016284:	7b51      	ldrb	r1, [r2, #13]
 8016286:	7992      	ldrb	r2, [r2, #6]
 8016288:	0149      	lsls	r1, r1, #5
 801628a:	f401 7180 	and.w	r1, r1, #256	@ 0x100
 801628e:	4311      	orrs	r1, r2
 8016290:	eba0 0051 	sub.w	r0, r0, r1, lsr #1
 8016294:	f884 0055 	strb.w	r0, [r4, #85]	@ 0x55
 8016298:	f513 4f00 	cmn.w	r3, #32768	@ 0x8000
 801629c:	d00e      	beq.n	80162bc <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x320>
 801629e:	eba3 030e 	sub.w	r3, r3, lr
 80162a2:	f894 2059 	ldrb.w	r2, [r4, #89]	@ 0x59
 80162a6:	b29b      	uxth	r3, r3
 80162a8:	f884 3054 	strb.w	r3, [r4, #84]	@ 0x54
 80162ac:	10db      	asrs	r3, r3, #3
 80162ae:	f003 0360 	and.w	r3, r3, #96	@ 0x60
 80162b2:	f022 0260 	bic.w	r2, r2, #96	@ 0x60
 80162b6:	4313      	orrs	r3, r2
 80162b8:	f884 3059 	strb.w	r3, [r4, #89]	@ 0x59
 80162bc:	f894 1059 	ldrb.w	r1, [r4, #89]	@ 0x59
 80162c0:	00cb      	lsls	r3, r1, #3
 80162c2:	f403 7280 	and.w	r2, r3, #256	@ 0x100
 80162c6:	f894 3054 	ldrb.w	r3, [r4, #84]	@ 0x54
 80162ca:	0648      	lsls	r0, r1, #25
 80162cc:	ea43 0302 	orr.w	r3, r3, r2
 80162d0:	bf44      	itt	mi
 80162d2:	f5a3 7300 	submi.w	r3, r3, #512	@ 0x200
 80162d6:	b21b      	sxthmi	r3, r3
 80162d8:	1b5d      	subs	r5, r3, r5
 80162da:	f8a4 505c 	strh.w	r5, [r4, #92]	@ 0x5c
 80162de:	e7b5      	b.n	801624c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt+0x2b0>

080162e0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE>:
 80162e0:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80162e4:	461e      	mov	r6, r3
 80162e6:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 80162e8:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 80162ec:	4604      	mov	r4, r0
 80162ee:	4617      	mov	r7, r2
 80162f0:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 80162f4:	f7f7 fad0 	bl	800d898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 80162f8:	4605      	mov	r5, r0
 80162fa:	b918      	cbnz	r0, 8016304 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x24>
 80162fc:	6030      	str	r0, [r6, #0]
 80162fe:	4628      	mov	r0, r5
 8016300:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8016304:	683b      	ldr	r3, [r7, #0]
 8016306:	4601      	mov	r1, r0
 8016308:	68db      	ldr	r3, [r3, #12]
 801630a:	4638      	mov	r0, r7
 801630c:	4798      	blx	r3
 801630e:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 8016312:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 8016316:	4602      	mov	r2, r0
 8016318:	6030      	str	r0, [r6, #0]
 801631a:	d213      	bcs.n	8016344 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x64>
 801631c:	4643      	mov	r3, r8
 801631e:	4639      	mov	r1, r7
 8016320:	4620      	mov	r0, r4
 8016322:	f7ff fe3b 	bl	8015f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 8016326:	6030      	str	r0, [r6, #0]
 8016328:	6833      	ldr	r3, [r6, #0]
 801632a:	b143      	cbz	r3, 801633e <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x5e>
 801632c:	7b5a      	ldrb	r2, [r3, #13]
 801632e:	7a9b      	ldrb	r3, [r3, #10]
 8016330:	0052      	lsls	r2, r2, #1
 8016332:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 8016336:	4313      	orrs	r3, r2
 8016338:	bf0c      	ite	eq
 801633a:	2301      	moveq	r3, #1
 801633c:	2300      	movne	r3, #0
 801633e:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 8016342:	e7dc      	b.n	80162fe <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x1e>
 8016344:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 8016348:	b29b      	uxth	r3, r3
 801634a:	2b7f      	cmp	r3, #127	@ 0x7f
 801634c:	d804      	bhi.n	8016358 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x78>
 801634e:	4639      	mov	r1, r7
 8016350:	4620      	mov	r0, r4
 8016352:	f7ff fced 	bl	8015d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 8016356:	e7e6      	b.n	8016326 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>
 8016358:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 801635c:	2b00      	cmp	r3, #0
 801635e:	d0e3      	beq.n	8016328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016360:	f640 1302 	movw	r3, #2306	@ 0x902
 8016364:	429d      	cmp	r5, r3
 8016366:	d1df      	bne.n	8016328 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x48>
 8016368:	4601      	mov	r1, r0
 801636a:	4620      	mov	r0, r4
 801636c:	f7ff fcb1 	bl	8015cd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016370:	e7d9      	b.n	8016326 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeE+0x46>

08016372 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh>:
 8016372:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8016376:	461e      	mov	r6, r3
 8016378:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 801637a:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801637e:	4604      	mov	r4, r0
 8016380:	4617      	mov	r7, r2
 8016382:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016386:	f7f7 fa87 	bl	800d898 <_ZN8touchgfx12TextProvider15getNextLigatureEh>
 801638a:	4605      	mov	r5, r0
 801638c:	b918      	cbnz	r0, 8016396 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x24>
 801638e:	6030      	str	r0, [r6, #0]
 8016390:	4628      	mov	r0, r5
 8016392:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8016396:	683b      	ldr	r3, [r7, #0]
 8016398:	4601      	mov	r1, r0
 801639a:	f8d3 9008 	ldr.w	r9, [r3, #8]
 801639e:	4638      	mov	r0, r7
 80163a0:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 80163a4:	47c8      	blx	r9
 80163a6:	f5a8 63c0 	sub.w	r3, r8, #1536	@ 0x600
 80163aa:	f5b3 7f40 	cmp.w	r3, #768	@ 0x300
 80163ae:	4602      	mov	r2, r0
 80163b0:	6030      	str	r0, [r6, #0]
 80163b2:	d213      	bcs.n	80163dc <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x6a>
 80163b4:	4643      	mov	r3, r8
 80163b6:	4639      	mov	r1, r7
 80163b8:	4620      	mov	r0, r4
 80163ba:	f7ff fdef 	bl	8015f9c <_ZN8touchgfx12TextProvider17adjustArabicGlyphEPKNS_4FontEPKNS_9GlyphNodeEt>
 80163be:	6030      	str	r0, [r6, #0]
 80163c0:	6833      	ldr	r3, [r6, #0]
 80163c2:	b143      	cbz	r3, 80163d6 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x64>
 80163c4:	7b5a      	ldrb	r2, [r3, #13]
 80163c6:	7a9b      	ldrb	r3, [r3, #10]
 80163c8:	0052      	lsls	r2, r2, #1
 80163ca:	f402 7280 	and.w	r2, r2, #256	@ 0x100
 80163ce:	4313      	orrs	r3, r2
 80163d0:	bf0c      	ite	eq
 80163d2:	2301      	moveq	r3, #1
 80163d4:	2300      	movne	r3, #0
 80163d6:	f884 3061 	strb.w	r3, [r4, #97]	@ 0x61
 80163da:	e7d9      	b.n	8016390 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x1e>
 80163dc:	f5a5 6360 	sub.w	r3, r5, #3584	@ 0xe00
 80163e0:	b29b      	uxth	r3, r3
 80163e2:	2b7f      	cmp	r3, #127	@ 0x7f
 80163e4:	d804      	bhi.n	80163f0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x7e>
 80163e6:	4639      	mov	r1, r7
 80163e8:	4620      	mov	r0, r4
 80163ea:	f7ff fca1 	bl	8015d30 <_ZN8touchgfx12TextProvider15adjustThaiGlyphEPKNS_4FontEPKNS_9GlyphNodeE>
 80163ee:	e7e6      	b.n	80163be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>
 80163f0:	f894 3061 	ldrb.w	r3, [r4, #97]	@ 0x61
 80163f4:	2b00      	cmp	r3, #0
 80163f6:	d0e3      	beq.n	80163c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 80163f8:	f640 1302 	movw	r3, #2306	@ 0x902
 80163fc:	429d      	cmp	r5, r3
 80163fe:	d1df      	bne.n	80163c0 <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4e>
 8016400:	4601      	mov	r1, r0
 8016402:	4620      	mov	r0, r4
 8016404:	f7ff fc65 	bl	8015cd2 <_ZN8touchgfx12TextProvider16adjustHindiGlyphEPKNS_9GlyphNodeE>
 8016408:	e7d9      	b.n	80163be <_ZN8touchgfx12TextProvider15getNextLigatureEhPKNS_4FontERPKNS_9GlyphNodeERPKhRh+0x4c>

0801640a <_ZN8touchgfx12TextProvider15fillInputBufferEv>:
 801640a:	b510      	push	{r4, lr}
 801640c:	4604      	mov	r4, r0
 801640e:	f8b4 1040 	ldrh.w	r1, [r4, #64]	@ 0x40
 8016412:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016414:	b1f1      	cbz	r1, 8016454 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 8016416:	2b0a      	cmp	r3, #10
 8016418:	d02f      	beq.n	801647a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801641a:	8fe2      	ldrh	r2, [r4, #62]	@ 0x3e
 801641c:	eb04 0042 	add.w	r0, r4, r2, lsl #1
 8016420:	3901      	subs	r1, #1
 8016422:	8f40      	ldrh	r0, [r0, #58]	@ 0x3a
 8016424:	f8a4 1040 	strh.w	r1, [r4, #64]	@ 0x40
 8016428:	1c51      	adds	r1, r2, #1
 801642a:	b289      	uxth	r1, r1
 801642c:	2901      	cmp	r1, #1
 801642e:	bf84      	itt	hi
 8016430:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8016434:	87e2      	strhhi	r2, [r4, #62]	@ 0x3e
 8016436:	f103 0201 	add.w	r2, r3, #1
 801643a:	8722      	strh	r2, [r4, #56]	@ 0x38
 801643c:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 801643e:	bf98      	it	ls
 8016440:	87e1      	strhls	r1, [r4, #62]	@ 0x3e
 8016442:	4413      	add	r3, r2
 8016444:	b29b      	uxth	r3, r3
 8016446:	2b09      	cmp	r3, #9
 8016448:	bf88      	it	hi
 801644a:	3b0a      	subhi	r3, #10
 801644c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016450:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016452:	e7dc      	b.n	801640e <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4>
 8016454:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016456:	2b0a      	cmp	r3, #10
 8016458:	d00f      	beq.n	801647a <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x70>
 801645a:	4620      	mov	r0, r4
 801645c:	f7ff fbe7 	bl	8015c2e <_ZN8touchgfx12TextProvider19getNextCharInternalEv>
 8016460:	8f23      	ldrh	r3, [r4, #56]	@ 0x38
 8016462:	1c5a      	adds	r2, r3, #1
 8016464:	8722      	strh	r2, [r4, #56]	@ 0x38
 8016466:	8ee2      	ldrh	r2, [r4, #54]	@ 0x36
 8016468:	4413      	add	r3, r2
 801646a:	b29b      	uxth	r3, r3
 801646c:	2b09      	cmp	r3, #9
 801646e:	bf88      	it	hi
 8016470:	3b0a      	subhi	r3, #10
 8016472:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8016476:	8458      	strh	r0, [r3, #34]	@ 0x22
 8016478:	e7ec      	b.n	8016454 <_ZN8touchgfx12TextProvider15fillInputBufferEv+0x4a>
 801647a:	bd10      	pop	{r4, pc}

0801647c <_ZN8touchgfx12TextProvider11getNextCharEv>:
 801647c:	b538      	push	{r3, r4, r5, lr}
 801647e:	8ec3      	ldrh	r3, [r0, #54]	@ 0x36
 8016480:	eb00 0243 	add.w	r2, r0, r3, lsl #1
 8016484:	4604      	mov	r4, r0
 8016486:	8c55      	ldrh	r5, [r2, #34]	@ 0x22
 8016488:	8f02      	ldrh	r2, [r0, #56]	@ 0x38
 801648a:	3a01      	subs	r2, #1
 801648c:	8702      	strh	r2, [r0, #56]	@ 0x38
 801648e:	1c5a      	adds	r2, r3, #1
 8016490:	b292      	uxth	r2, r2
 8016492:	2a09      	cmp	r2, #9
 8016494:	bf86      	itte	hi
 8016496:	3b09      	subhi	r3, #9
 8016498:	86c3      	strhhi	r3, [r0, #54]	@ 0x36
 801649a:	86c2      	strhls	r2, [r0, #54]	@ 0x36
 801649c:	f7ff ffb5 	bl	801640a <_ZN8touchgfx12TextProvider15fillInputBufferEv>
 80164a0:	8c23      	ldrh	r3, [r4, #32]
 80164a2:	2b01      	cmp	r3, #1
 80164a4:	bf9c      	itt	ls
 80164a6:	3301      	addls	r3, #1
 80164a8:	8423      	strhls	r3, [r4, #32]
 80164aa:	8be3      	ldrh	r3, [r4, #30]
 80164ac:	b90b      	cbnz	r3, 80164b2 <_ZN8touchgfx12TextProvider11getNextCharEv+0x36>
 80164ae:	2302      	movs	r3, #2
 80164b0:	83e3      	strh	r3, [r4, #30]
 80164b2:	8be3      	ldrh	r3, [r4, #30]
 80164b4:	3b01      	subs	r3, #1
 80164b6:	b29b      	uxth	r3, r3
 80164b8:	83e3      	strh	r3, [r4, #30]
 80164ba:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80164be:	4628      	mov	r0, r5
 80164c0:	8365      	strh	r5, [r4, #26]
 80164c2:	bd38      	pop	{r3, r4, r5, pc}

080164c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>:
 80164c4:	428a      	cmp	r2, r1
 80164c6:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80164ca:	8ec7      	ldrh	r7, [r0, #54]	@ 0x36
 80164cc:	d931      	bls.n	8016532 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x6e>
 80164ce:	8f05      	ldrh	r5, [r0, #56]	@ 0x38
 80164d0:	f8b0 8040 	ldrh.w	r8, [r0, #64]	@ 0x40
 80164d4:	f8b0 c03e 	ldrh.w	ip, [r0, #62]	@ 0x3e
 80164d8:	19ee      	adds	r6, r5, r7
 80164da:	1a54      	subs	r4, r2, r1
 80164dc:	3e01      	subs	r6, #1
 80164de:	fa1f fe84 	uxth.w	lr, r4
 80164e2:	b2b4      	uxth	r4, r6
 80164e4:	eba4 090e 	sub.w	r9, r4, lr
 80164e8:	fa1f f989 	uxth.w	r9, r9
 80164ec:	2c09      	cmp	r4, #9
 80164ee:	4626      	mov	r6, r4
 80164f0:	bf88      	it	hi
 80164f2:	f1a4 060a 	subhi.w	r6, r4, #10
 80164f6:	f1bc 0f00 	cmp.w	ip, #0
 80164fa:	bf08      	it	eq
 80164fc:	f04f 0c02 	moveq.w	ip, #2
 8016500:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 8016504:	f10c 3cff 	add.w	ip, ip, #4294967295
 8016508:	fa1f fc8c 	uxth.w	ip, ip
 801650c:	3c01      	subs	r4, #1
 801650e:	f8b6 a022 	ldrh.w	sl, [r6, #34]	@ 0x22
 8016512:	b2a4      	uxth	r4, r4
 8016514:	eb00 064c 	add.w	r6, r0, ip, lsl #1
 8016518:	454c      	cmp	r4, r9
 801651a:	f8a6 a03a 	strh.w	sl, [r6, #58]	@ 0x3a
 801651e:	d1e5      	bne.n	80164ec <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x28>
 8016520:	eba5 050e 	sub.w	r5, r5, lr
 8016524:	eb0e 0408 	add.w	r4, lr, r8
 8016528:	8705      	strh	r5, [r0, #56]	@ 0x38
 801652a:	f8a0 4040 	strh.w	r4, [r0, #64]	@ 0x40
 801652e:	f8a0 c03e 	strh.w	ip, [r0, #62]	@ 0x3e
 8016532:	8f04      	ldrh	r4, [r0, #56]	@ 0x38
 8016534:	1a64      	subs	r4, r4, r1
 8016536:	4439      	add	r1, r7
 8016538:	b289      	uxth	r1, r1
 801653a:	2909      	cmp	r1, #9
 801653c:	bf88      	it	hi
 801653e:	390a      	subhi	r1, #10
 8016540:	8704      	strh	r4, [r0, #56]	@ 0x38
 8016542:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016544:	250a      	movs	r5, #10
 8016546:	b18a      	cbz	r2, 801656c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0xa8>
 8016548:	8f01      	ldrh	r1, [r0, #56]	@ 0x38
 801654a:	3a01      	subs	r2, #1
 801654c:	b292      	uxth	r2, r2
 801654e:	3101      	adds	r1, #1
 8016550:	f833 4012 	ldrh.w	r4, [r3, r2, lsl #1]
 8016554:	8701      	strh	r1, [r0, #56]	@ 0x38
 8016556:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 8016558:	b901      	cbnz	r1, 801655c <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x98>
 801655a:	86c5      	strh	r5, [r0, #54]	@ 0x36
 801655c:	8ec1      	ldrh	r1, [r0, #54]	@ 0x36
 801655e:	3901      	subs	r1, #1
 8016560:	b289      	uxth	r1, r1
 8016562:	86c1      	strh	r1, [r0, #54]	@ 0x36
 8016564:	eb00 0141 	add.w	r1, r0, r1, lsl #1
 8016568:	844c      	strh	r4, [r1, #34]	@ 0x22
 801656a:	e7ec      	b.n	8016546 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt+0x82>
 801656c:	e8bd 47f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016570:	f7ff bf4b 	b.w	801640a <_ZN8touchgfx12TextProvider15fillInputBufferEv>

08016574 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>:
 8016574:	b570      	push	{r4, r5, r6, lr}
 8016576:	2500      	movs	r5, #0
 8016578:	4295      	cmp	r5, r2
 801657a:	d011      	beq.n	80165a0 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x2c>
 801657c:	8bc4      	ldrh	r4, [r0, #30]
 801657e:	f831 6b02 	ldrh.w	r6, [r1], #2
 8016582:	4414      	add	r4, r2
 8016584:	3c01      	subs	r4, #1
 8016586:	1b64      	subs	r4, r4, r5
 8016588:	b2a4      	uxth	r4, r4
 801658a:	2c01      	cmp	r4, #1
 801658c:	bf88      	it	hi
 801658e:	3c02      	subhi	r4, #2
 8016590:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8016594:	8b64      	ldrh	r4, [r4, #26]
 8016596:	42b4      	cmp	r4, r6
 8016598:	d117      	bne.n	80165ca <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x56>
 801659a:	3501      	adds	r5, #1
 801659c:	b2ad      	uxth	r5, r5
 801659e:	e7eb      	b.n	8016578 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x4>
 80165a0:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 80165a4:	2400      	movs	r4, #0
 80165a6:	4413      	add	r3, r2
 80165a8:	b2a2      	uxth	r2, r4
 80165aa:	429a      	cmp	r2, r3
 80165ac:	da0f      	bge.n	80165ce <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x5a>
 80165ae:	8ec6      	ldrh	r6, [r0, #54]	@ 0x36
 80165b0:	f831 5014 	ldrh.w	r5, [r1, r4, lsl #1]
 80165b4:	4432      	add	r2, r6
 80165b6:	b292      	uxth	r2, r2
 80165b8:	2a09      	cmp	r2, #9
 80165ba:	bf88      	it	hi
 80165bc:	3a0a      	subhi	r2, #10
 80165be:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 80165c2:	3401      	adds	r4, #1
 80165c4:	8c52      	ldrh	r2, [r2, #34]	@ 0x22
 80165c6:	42aa      	cmp	r2, r5
 80165c8:	d0ee      	beq.n	80165a8 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x34>
 80165ca:	2000      	movs	r0, #0
 80165cc:	bd70      	pop	{r4, r5, r6, pc}
 80165ce:	2001      	movs	r0, #1
 80165d0:	e7fc      	b.n	80165cc <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt+0x58>

080165d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>:
 80165d2:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80165d6:	4605      	mov	r5, r0
 80165d8:	4616      	mov	r6, r2
 80165da:	1c8c      	adds	r4, r1, #2
 80165dc:	8809      	ldrh	r1, [r1, #0]
 80165de:	ea4f 3a11 	mov.w	sl, r1, lsr #12
 80165e2:	f834 301a 	ldrh.w	r3, [r4, sl, lsl #1]
 80165e6:	42b3      	cmp	r3, r6
 80165e8:	d124      	bne.n	8016634 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x62>
 80165ea:	f3c1 2903 	ubfx	r9, r1, #8, #4
 80165ee:	f3c1 1803 	ubfx	r8, r1, #4, #4
 80165f2:	f001 070f 	and.w	r7, r1, #15
 80165f6:	f8cd 8000 	str.w	r8, [sp]
 80165fa:	464b      	mov	r3, r9
 80165fc:	4652      	mov	r2, sl
 80165fe:	4621      	mov	r1, r4
 8016600:	4628      	mov	r0, r5
 8016602:	f7ff ffb7 	bl	8016574 <_ZN8touchgfx12TextProvider13gsubRuleMatchEPKtttt>
 8016606:	4683      	mov	fp, r0
 8016608:	b168      	cbz	r0, 8016626 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x54>
 801660a:	eb0a 0109 	add.w	r1, sl, r9
 801660e:	4441      	add	r1, r8
 8016610:	eb04 0341 	add.w	r3, r4, r1, lsl #1
 8016614:	463a      	mov	r2, r7
 8016616:	4649      	mov	r1, r9
 8016618:	4628      	mov	r0, r5
 801661a:	f7ff ff53 	bl	80164c4 <_ZN8touchgfx12TextProvider22replaceInputCharactersEttPKt>
 801661e:	4658      	mov	r0, fp
 8016620:	b003      	add	sp, #12
 8016622:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016626:	eb07 010a 	add.w	r1, r7, sl
 801662a:	4449      	add	r1, r9
 801662c:	4441      	add	r1, r8
 801662e:	eb04 0141 	add.w	r1, r4, r1, lsl #1
 8016632:	e7d2      	b.n	80165da <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x8>
 8016634:	f04f 0b00 	mov.w	fp, #0
 8016638:	e7f1      	b.n	801661e <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt+0x4c>

0801663a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>:
 801663a:	b570      	push	{r4, r5, r6, lr}
 801663c:	8810      	ldrh	r0, [r2, #0]
 801663e:	4298      	cmp	r0, r3
 8016640:	d817      	bhi.n	8016672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016642:	1e48      	subs	r0, r1, #1
 8016644:	f832 0020 	ldrh.w	r0, [r2, r0, lsl #2]
 8016648:	4298      	cmp	r0, r3
 801664a:	d312      	bcc.n	8016672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 801664c:	2400      	movs	r4, #0
 801664e:	428c      	cmp	r4, r1
 8016650:	d20f      	bcs.n	8016672 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x38>
 8016652:	1860      	adds	r0, r4, r1
 8016654:	1040      	asrs	r0, r0, #1
 8016656:	0085      	lsls	r5, r0, #2
 8016658:	f832 6020 	ldrh.w	r6, [r2, r0, lsl #2]
 801665c:	42b3      	cmp	r3, r6
 801665e:	d902      	bls.n	8016666 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x2c>
 8016660:	3001      	adds	r0, #1
 8016662:	b284      	uxth	r4, r0
 8016664:	e7f3      	b.n	801664e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 8016666:	d201      	bcs.n	801666c <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x32>
 8016668:	b281      	uxth	r1, r0
 801666a:	e7f0      	b.n	801664e <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x14>
 801666c:	442a      	add	r2, r5
 801666e:	8850      	ldrh	r0, [r2, #2]
 8016670:	bd70      	pop	{r4, r5, r6, pc}
 8016672:	2000      	movs	r0, #0
 8016674:	e7fc      	b.n	8016670 <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt+0x36>

08016676 <_ZN8touchgfx12TextProvider16substituteGlyphsEv>:
 8016676:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 801667a:	6c45      	ldr	r5, [r0, #68]	@ 0x44
 801667c:	886f      	ldrh	r7, [r5, #2]
 801667e:	4604      	mov	r4, r0
 8016680:	087f      	lsrs	r7, r7, #1
 8016682:	260b      	movs	r6, #11
 8016684:	3e01      	subs	r6, #1
 8016686:	d013      	beq.n	80166b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 8016688:	8ee3      	ldrh	r3, [r4, #54]	@ 0x36
 801668a:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801668e:	462a      	mov	r2, r5
 8016690:	f8b3 8022 	ldrh.w	r8, [r3, #34]	@ 0x22
 8016694:	4639      	mov	r1, r7
 8016696:	4643      	mov	r3, r8
 8016698:	4620      	mov	r0, r4
 801669a:	f7ff ffce 	bl	801663a <_ZNK8touchgfx12TextProvider21gsubTableBinarySearchEtPKtt>
 801669e:	b138      	cbz	r0, 80166b0 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0x3a>
 80166a0:	eb05 0140 	add.w	r1, r5, r0, lsl #1
 80166a4:	4642      	mov	r2, r8
 80166a6:	4620      	mov	r0, r4
 80166a8:	f7ff ff93 	bl	80165d2 <_ZN8touchgfx12TextProvider14applyGsubRulesEPKtt>
 80166ac:	2800      	cmp	r0, #0
 80166ae:	d1e9      	bne.n	8016684 <_ZN8touchgfx12TextProvider16substituteGlyphsEv+0xe>
 80166b0:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

080166b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE>:
 80166b4:	b570      	push	{r4, r5, r6, lr}
 80166b6:	694a      	ldr	r2, [r1, #20]
 80166b8:	6a8d      	ldr	r5, [r1, #40]	@ 0x28
 80166ba:	684b      	ldr	r3, [r1, #4]
 80166bc:	6ace      	ldr	r6, [r1, #44]	@ 0x2c
 80166be:	1b54      	subs	r4, r2, r5
 80166c0:	f000 8106 	beq.w	80168d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x21c>
 80166c4:	1b9b      	subs	r3, r3, r6
 80166c6:	d003      	beq.n	80166d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80166c8:	4363      	muls	r3, r4
 80166ca:	2210      	movs	r2, #16
 80166cc:	fb93 f3f2 	sdiv	r3, r3, r2
 80166d0:	680c      	ldr	r4, [r1, #0]
 80166d2:	698a      	ldr	r2, [r1, #24]
 80166d4:	1b65      	subs	r5, r4, r5
 80166d6:	f000 80fd 	beq.w	80168d4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x220>
 80166da:	1b92      	subs	r2, r2, r6
 80166dc:	d003      	beq.n	80166e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80166de:	436a      	muls	r2, r5
 80166e0:	2410      	movs	r4, #16
 80166e2:	fb92 f2f4 	sdiv	r2, r2, r4
 80166e6:	1a9b      	subs	r3, r3, r2
 80166e8:	ee07 3a90 	vmov	s15, r3
 80166ec:	ed9f 4a88 	vldr	s8, [pc, #544]	@ 8016910 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x25c>
 80166f0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80166f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80166f8:	ee67 7a84 	vmul.f32	s15, s15, s8
 80166fc:	460a      	mov	r2, r1
 80166fe:	ee87 3a27 	vdiv.f32	s6, s14, s15
 8016702:	4603      	mov	r3, r0
 8016704:	f100 040c 	add.w	r4, r0, #12
 8016708:	eeb1 6a43 	vneg.f32	s12, s6
 801670c:	edd2 7a02 	vldr	s15, [r2, #8]
 8016710:	eec7 6a27 	vdiv.f32	s13, s14, s15
 8016714:	3214      	adds	r2, #20
 8016716:	ece3 6a01 	vstmia	r3!, {s13}
 801671a:	ed52 7a02 	vldr	s15, [r2, #-8]
 801671e:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016722:	429c      	cmp	r4, r3
 8016724:	edc3 7a02 	vstr	s15, [r3, #8]
 8016728:	ed52 7a01 	vldr	s15, [r2, #-4]
 801672c:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8016730:	edc3 7a05 	vstr	s15, [r3, #20]
 8016734:	d1ea      	bne.n	801670c <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x58>
 8016736:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016738:	698b      	ldr	r3, [r1, #24]
 801673a:	edd0 4a02 	vldr	s9, [r0, #8]
 801673e:	edd0 3a00 	vldr	s7, [r0]
 8016742:	edd0 6a01 	vldr	s13, [r0, #4]
 8016746:	ed90 5a05 	vldr	s10, [r0, #20]
 801674a:	ed90 2a03 	vldr	s4, [r0, #12]
 801674e:	edd0 5a04 	vldr	s11, [r0, #16]
 8016752:	ed90 1a07 	vldr	s2, [r0, #28]
 8016756:	edd0 2a06 	vldr	s5, [r0, #24]
 801675a:	1a9b      	subs	r3, r3, r2
 801675c:	ee07 3a90 	vmov	s15, r3
 8016760:	684b      	ldr	r3, [r1, #4]
 8016762:	1a9b      	subs	r3, r3, r2
 8016764:	ee07 3a10 	vmov	s14, r3
 8016768:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801676c:	ee76 6ae4 	vsub.f32	s13, s13, s9
 8016770:	ee67 7a84 	vmul.f32	s15, s15, s8
 8016774:	ee73 4ae4 	vsub.f32	s9, s7, s9
 8016778:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801677c:	ee64 7ae7 	vnmul.f32	s15, s9, s15
 8016780:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016784:	ee75 5ac5 	vsub.f32	s11, s11, s10
 8016788:	eee6 7a87 	vfma.f32	s15, s13, s14
 801678c:	ee32 5a45 	vsub.f32	s10, s4, s10
 8016790:	ee67 7a83 	vmul.f32	s15, s15, s6
 8016794:	edc0 7a09 	vstr	s15, [r0, #36]	@ 0x24
 8016798:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801679a:	694a      	ldr	r2, [r1, #20]
 801679c:	1b13      	subs	r3, r2, r4
 801679e:	ee07 3a10 	vmov	s14, r3
 80167a2:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80167a6:	680b      	ldr	r3, [r1, #0]
 80167a8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80167ac:	1b1b      	subs	r3, r3, r4
 80167ae:	ee64 4ac7 	vnmul.f32	s9, s9, s14
 80167b2:	ee07 3a10 	vmov	s14, r3
 80167b6:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80167ba:	ee27 7a04 	vmul.f32	s14, s14, s8
 80167be:	eee6 4a87 	vfma.f32	s9, s13, s14
 80167c2:	ee64 4a86 	vmul.f32	s9, s9, s12
 80167c6:	edc0 4a0a 	vstr	s9, [r0, #40]	@ 0x28
 80167ca:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 80167cc:	698b      	ldr	r3, [r1, #24]
 80167ce:	1a9b      	subs	r3, r3, r2
 80167d0:	ee06 3a90 	vmov	s13, r3
 80167d4:	684b      	ldr	r3, [r1, #4]
 80167d6:	1a9b      	subs	r3, r3, r2
 80167d8:	ee07 3a10 	vmov	s14, r3
 80167dc:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 80167e0:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80167e4:	ee66 6a84 	vmul.f32	s13, s13, s8
 80167e8:	ee27 7a04 	vmul.f32	s14, s14, s8
 80167ec:	ee65 6a66 	vnmul.f32	s13, s10, s13
 80167f0:	eee5 6a87 	vfma.f32	s13, s11, s14
 80167f4:	ee66 6a83 	vmul.f32	s13, s13, s6
 80167f8:	edc0 6a0b 	vstr	s13, [r0, #44]	@ 0x2c
 80167fc:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 80167fe:	694a      	ldr	r2, [r1, #20]
 8016800:	1b13      	subs	r3, r2, r4
 8016802:	ee07 3a10 	vmov	s14, r3
 8016806:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801680a:	680b      	ldr	r3, [r1, #0]
 801680c:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016810:	1b1b      	subs	r3, r3, r4
 8016812:	ee25 5a47 	vnmul.f32	s10, s10, s14
 8016816:	ee07 3a10 	vmov	s14, r3
 801681a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801681e:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016822:	eea5 5a87 	vfma.f32	s10, s11, s14
 8016826:	edd0 5a08 	vldr	s11, [r0, #32]
 801682a:	ee25 5a06 	vmul.f32	s10, s10, s12
 801682e:	ee31 1a65 	vsub.f32	s2, s2, s11
 8016832:	ed80 5a0c 	vstr	s10, [r0, #48]	@ 0x30
 8016836:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016838:	698b      	ldr	r3, [r1, #24]
 801683a:	1a9b      	subs	r3, r3, r2
 801683c:	ee07 3a10 	vmov	s14, r3
 8016840:	684b      	ldr	r3, [r1, #4]
 8016842:	1a9b      	subs	r3, r3, r2
 8016844:	ee01 3a90 	vmov	s3, r3
 8016848:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801684c:	ee72 5ae5 	vsub.f32	s11, s5, s11
 8016850:	ee27 7a04 	vmul.f32	s14, s14, s8
 8016854:	eef8 1ae1 	vcvt.f32.s32	s3, s3
 8016858:	ee25 7ac7 	vnmul.f32	s14, s11, s14
 801685c:	ee61 1a84 	vmul.f32	s3, s3, s8
 8016860:	eea1 7a21 	vfma.f32	s14, s2, s3
 8016864:	ee27 7a03 	vmul.f32	s14, s14, s6
 8016868:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 801686c:	6a8c      	ldr	r4, [r1, #40]	@ 0x28
 801686e:	694a      	ldr	r2, [r1, #20]
 8016870:	1b13      	subs	r3, r2, r4
 8016872:	ee03 3a10 	vmov	s6, r3
 8016876:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801687a:	680b      	ldr	r3, [r1, #0]
 801687c:	ee23 3a04 	vmul.f32	s6, s6, s8
 8016880:	1b1b      	subs	r3, r3, r4
 8016882:	ee65 5ac3 	vnmul.f32	s11, s11, s6
 8016886:	ee03 3a10 	vmov	s6, r3
 801688a:	eeb8 3ac3 	vcvt.f32.s32	s6, s6
 801688e:	ee23 4a04 	vmul.f32	s8, s6, s8
 8016892:	eee1 5a04 	vfma.f32	s11, s2, s8
 8016896:	ee25 6a86 	vmul.f32	s12, s11, s12
 801689a:	ee62 5a67 	vnmul.f32	s11, s4, s15
 801689e:	ed80 6a0e 	vstr	s12, [r0, #56]	@ 0x38
 80168a2:	eee3 5aa6 	vfma.f32	s11, s7, s13
 80168a6:	eef5 5ac0 	vcmpe.f32	s11, #0.0
 80168aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168ae:	dd13      	ble.n	80168d8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x224>
 80168b0:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80168b4:	ee62 7ae7 	vnmul.f32	s15, s5, s15
 80168b8:	63c3      	str	r3, [r0, #60]	@ 0x3c
 80168ba:	eee3 7a87 	vfma.f32	s15, s7, s14
 80168be:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80168c2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168c6:	dd15      	ble.n	80168f4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x240>
 80168c8:	f44f 4300 	mov.w	r3, #32768	@ 0x8000
 80168cc:	6403      	str	r3, [r0, #64]	@ 0x40
 80168ce:	bd70      	pop	{r4, r5, r6, pc}
 80168d0:	4623      	mov	r3, r4
 80168d2:	e6fd      	b.n	80166d0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1c>
 80168d4:	462a      	mov	r2, r5
 80168d6:	e706      	b.n	80166e6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x32>
 80168d8:	d502      	bpl.n	80168e0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x22c>
 80168da:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80168de:	e7e9      	b.n	80168b4 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x200>
 80168e0:	ee22 2a64 	vnmul.f32	s4, s4, s9
 80168e4:	eea3 2a85 	vfma.f32	s4, s7, s10
 80168e8:	eeb5 2ac0 	vcmpe.f32	s4, #0.0
 80168ec:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80168f0:	dade      	bge.n	80168b0 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x1fc>
 80168f2:	e7f2      	b.n	80168da <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x226>
 80168f4:	d502      	bpl.n	80168fc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x248>
 80168f6:	f647 73ff 	movw	r3, #32767	@ 0x7fff
 80168fa:	e7e7      	b.n	80168cc <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x218>
 80168fc:	ee62 4ae4 	vnmul.f32	s9, s5, s9
 8016900:	eee3 4a86 	vfma.f32	s9, s7, s12
 8016904:	eef5 4ac0 	vcmpe.f32	s9, #0.0
 8016908:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801690c:	dadc      	bge.n	80168c8 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x214>
 801690e:	e7f2      	b.n	80168f6 <_ZN8touchgfx9GradientsC1EPKNS_7Point3DE+0x242>
 8016910:	3d800000 	.word	0x3d800000

08016914 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii>:
 8016914:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8016918:	2714      	movs	r7, #20
 801691a:	435f      	muls	r7, r3
 801691c:	eb02 0c07 	add.w	ip, r2, r7
 8016920:	f8dc 5004 	ldr.w	r5, [ip, #4]
 8016924:	f115 0e0f 	adds.w	lr, r5, #15
 8016928:	f100 80a2 	bmi.w	8016a70 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x15c>
 801692c:	ea4f 1e2e 	mov.w	lr, lr, asr #4
 8016930:	9c08      	ldr	r4, [sp, #32]
 8016932:	f8c0 e014 	str.w	lr, [r0, #20]
 8016936:	2614      	movs	r6, #20
 8016938:	4366      	muls	r6, r4
 801693a:	eb02 0806 	add.w	r8, r2, r6
 801693e:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8016942:	f115 040f 	adds.w	r4, r5, #15
 8016946:	f100 809f 	bmi.w	8016a88 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x174>
 801694a:	1124      	asrs	r4, r4, #4
 801694c:	eba4 040e 	sub.w	r4, r4, lr
 8016950:	6184      	str	r4, [r0, #24]
 8016952:	2c00      	cmp	r4, #0
 8016954:	f000 808a 	beq.w	8016a6c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x158>
 8016958:	f8dc 9004 	ldr.w	r9, [ip, #4]
 801695c:	f8d8 4004 	ldr.w	r4, [r8, #4]
 8016960:	5995      	ldr	r5, [r2, r6]
 8016962:	eba4 0809 	sub.w	r8, r4, r9
 8016966:	59d4      	ldr	r4, [r2, r7]
 8016968:	eba5 0a04 	sub.w	sl, r5, r4
 801696c:	ea4f 150a 	mov.w	r5, sl, lsl #4
 8016970:	fb0e fe05 	mul.w	lr, lr, r5
 8016974:	fb0a ee19 	mls	lr, sl, r9, lr
 8016978:	fb08 e404 	mla	r4, r8, r4, lr
 801697c:	ea4f 1608 	mov.w	r6, r8, lsl #4
 8016980:	3c01      	subs	r4, #1
 8016982:	19a4      	adds	r4, r4, r6
 8016984:	f100 808c 	bmi.w	8016aa0 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x18c>
 8016988:	fb94 fef6 	sdiv	lr, r4, r6
 801698c:	f8c0 e000 	str.w	lr, [r0]
 8016990:	fb06 441e 	mls	r4, r6, lr, r4
 8016994:	6104      	str	r4, [r0, #16]
 8016996:	2d00      	cmp	r5, #0
 8016998:	f2c0 8095 	blt.w	8016ac6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1b2>
 801699c:	fb95 f4f6 	sdiv	r4, r5, r6
 80169a0:	6044      	str	r4, [r0, #4]
 80169a2:	fb06 5514 	mls	r5, r6, r4, r5
 80169a6:	6085      	str	r5, [r0, #8]
 80169a8:	60c6      	str	r6, [r0, #12]
 80169aa:	f8dc 4004 	ldr.w	r4, [ip, #4]
 80169ae:	6945      	ldr	r5, [r0, #20]
 80169b0:	59d2      	ldr	r2, [r2, r7]
 80169b2:	eddf 6a4d 	vldr	s13, [pc, #308]	@ 8016ae8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1d4>
 80169b6:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 80169ba:	ebc4 1405 	rsb	r4, r4, r5, lsl #4
 80169be:	ee07 4a10 	vmov	s14, r4
 80169c2:	6804      	ldr	r4, [r0, #0]
 80169c4:	ebc2 1204 	rsb	r2, r2, r4, lsl #4
 80169c8:	ee07 2a90 	vmov	s15, r2
 80169cc:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 80169d0:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80169d4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 80169d8:	ee27 7a26 	vmul.f32	s14, s14, s13
 80169dc:	ee67 7aa6 	vmul.f32	s15, s15, s13
 80169e0:	edd3 6a00 	vldr	s13, [r3]
 80169e4:	eee6 6a07 	vfma.f32	s13, s12, s14
 80169e8:	ed91 6a09 	vldr	s12, [r1, #36]	@ 0x24
 80169ec:	eee6 6a27 	vfma.f32	s13, s12, s15
 80169f0:	edc0 6a07 	vstr	s13, [r0, #28]
 80169f4:	edd0 6a01 	vldr	s13, [r0, #4]
 80169f8:	edd1 5a09 	vldr	s11, [r1, #36]	@ 0x24
 80169fc:	ed91 6a0a 	vldr	s12, [r1, #40]	@ 0x28
 8016a00:	eef8 6ae6 	vcvt.f32.s32	s13, s13
 8016a04:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016a08:	ed80 6a08 	vstr	s12, [r0, #32]
 8016a0c:	6a4a      	ldr	r2, [r1, #36]	@ 0x24
 8016a0e:	6242      	str	r2, [r0, #36]	@ 0x24
 8016a10:	edd1 5a0c 	vldr	s11, [r1, #48]	@ 0x30
 8016a14:	ed93 6a03 	vldr	s12, [r3, #12]
 8016a18:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016a1c:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016a20:	eea5 6aa7 	vfma.f32	s12, s11, s15
 8016a24:	ed80 6a0a 	vstr	s12, [r0, #40]	@ 0x28
 8016a28:	edd1 5a0b 	vldr	s11, [r1, #44]	@ 0x2c
 8016a2c:	ed91 6a0c 	vldr	s12, [r1, #48]	@ 0x30
 8016a30:	eea6 6aa5 	vfma.f32	s12, s13, s11
 8016a34:	ed80 6a0b 	vstr	s12, [r0, #44]	@ 0x2c
 8016a38:	6aca      	ldr	r2, [r1, #44]	@ 0x2c
 8016a3a:	6302      	str	r2, [r0, #48]	@ 0x30
 8016a3c:	ed93 6a06 	vldr	s12, [r3, #24]
 8016a40:	edd1 5a0e 	vldr	s11, [r1, #56]	@ 0x38
 8016a44:	eea5 6a87 	vfma.f32	s12, s11, s14
 8016a48:	eeb0 7a46 	vmov.f32	s14, s12
 8016a4c:	ed91 6a0d 	vldr	s12, [r1, #52]	@ 0x34
 8016a50:	eea6 7a27 	vfma.f32	s14, s12, s15
 8016a54:	ed80 7a0d 	vstr	s14, [r0, #52]	@ 0x34
 8016a58:	ed91 7a0d 	vldr	s14, [r1, #52]	@ 0x34
 8016a5c:	edd1 7a0e 	vldr	s15, [r1, #56]	@ 0x38
 8016a60:	eee6 7a87 	vfma.f32	s15, s13, s14
 8016a64:	edc0 7a0e 	vstr	s15, [r0, #56]	@ 0x38
 8016a68:	6b4b      	ldr	r3, [r1, #52]	@ 0x34
 8016a6a:	63c3      	str	r3, [r0, #60]	@ 0x3c
 8016a6c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8016a70:	f1c5 0501 	rsb	r5, r5, #1
 8016a74:	f015 050f 	ands.w	r5, r5, #15
 8016a78:	bf18      	it	ne
 8016a7a:	2501      	movne	r5, #1
 8016a7c:	2410      	movs	r4, #16
 8016a7e:	fb9e fef4 	sdiv	lr, lr, r4
 8016a82:	ebae 0e05 	sub.w	lr, lr, r5
 8016a86:	e753      	b.n	8016930 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x1c>
 8016a88:	f1c5 0501 	rsb	r5, r5, #1
 8016a8c:	f015 050f 	ands.w	r5, r5, #15
 8016a90:	bf18      	it	ne
 8016a92:	2501      	movne	r5, #1
 8016a94:	f04f 0910 	mov.w	r9, #16
 8016a98:	fb94 f4f9 	sdiv	r4, r4, r9
 8016a9c:	1b64      	subs	r4, r4, r5
 8016a9e:	e755      	b.n	801694c <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x38>
 8016aa0:	4264      	negs	r4, r4
 8016aa2:	fb94 fef6 	sdiv	lr, r4, r6
 8016aa6:	f1ce 0800 	rsb	r8, lr, #0
 8016aaa:	fb06 441e 	mls	r4, r6, lr, r4
 8016aae:	f8c0 8000 	str.w	r8, [r0]
 8016ab2:	6104      	str	r4, [r0, #16]
 8016ab4:	2c00      	cmp	r4, #0
 8016ab6:	f43f af6e 	beq.w	8016996 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x82>
 8016aba:	ea6f 0e0e 	mvn.w	lr, lr
 8016abe:	f8c0 e000 	str.w	lr, [r0]
 8016ac2:	1b34      	subs	r4, r6, r4
 8016ac4:	e766      	b.n	8016994 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x80>
 8016ac6:	426d      	negs	r5, r5
 8016ac8:	fb95 f4f6 	sdiv	r4, r5, r6
 8016acc:	f1c4 0e00 	rsb	lr, r4, #0
 8016ad0:	fb06 5514 	mls	r5, r6, r4, r5
 8016ad4:	f8c0 e004 	str.w	lr, [r0, #4]
 8016ad8:	6085      	str	r5, [r0, #8]
 8016ada:	2d00      	cmp	r5, #0
 8016adc:	f43f af64 	beq.w	80169a8 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x94>
 8016ae0:	43e4      	mvns	r4, r4
 8016ae2:	6044      	str	r4, [r0, #4]
 8016ae4:	1b75      	subs	r5, r6, r5
 8016ae6:	e75e      	b.n	80169a6 <_ZN8touchgfx4EdgeC1ERKNS_9GradientsEPKNS_7Point3DEii+0x92>
 8016ae8:	3d800000 	.word	0x3d800000

08016aec <_ZN8touchgfx7Unicode6strlenEPKt>:
 8016aec:	4602      	mov	r2, r0
 8016aee:	b148      	cbz	r0, 8016b04 <_ZN8touchgfx7Unicode6strlenEPKt+0x18>
 8016af0:	2300      	movs	r3, #0
 8016af2:	b298      	uxth	r0, r3
 8016af4:	3301      	adds	r3, #1
 8016af6:	eb02 0143 	add.w	r1, r2, r3, lsl #1
 8016afa:	f831 1c02 	ldrh.w	r1, [r1, #-2]
 8016afe:	2900      	cmp	r1, #0
 8016b00:	d1f7      	bne.n	8016af2 <_ZN8touchgfx7Unicode6strlenEPKt+0x6>
 8016b02:	4770      	bx	lr
 8016b04:	4770      	bx	lr

08016b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>:
 8016b06:	b530      	push	{r4, r5, lr}
 8016b08:	4604      	mov	r4, r0
 8016b0a:	b159      	cbz	r1, 8016b24 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1e>
 8016b0c:	b148      	cbz	r0, 8016b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016b0e:	2300      	movs	r3, #0
 8016b10:	b298      	uxth	r0, r3
 8016b12:	4282      	cmp	r2, r0
 8016b14:	d905      	bls.n	8016b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>
 8016b16:	5ccd      	ldrb	r5, [r1, r3]
 8016b18:	f824 5013 	strh.w	r5, [r4, r3, lsl #1]
 8016b1c:	3301      	adds	r3, #1
 8016b1e:	2d00      	cmp	r5, #0
 8016b20:	d1f6      	bne.n	8016b10 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0xa>
 8016b22:	bd30      	pop	{r4, r5, pc}
 8016b24:	4608      	mov	r0, r1
 8016b26:	e7fc      	b.n	8016b22 <_ZN8touchgfx7Unicode7strncpyEPtPKct+0x1c>

08016b28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>:
 8016b28:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016b2a:	b08b      	sub	sp, #44	@ 0x2c
 8016b2c:	468c      	mov	ip, r1
 8016b2e:	2100      	movs	r1, #0
 8016b30:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8016b34:	4604      	mov	r4, r0
 8016b36:	261f      	movs	r6, #31
 8016b38:	af01      	add	r7, sp, #4
 8016b3a:	fb94 fef3 	sdiv	lr, r4, r3
 8016b3e:	fb03 441e 	mls	r4, r3, lr, r4
 8016b42:	ea84 75e4 	eor.w	r5, r4, r4, asr #31
 8016b46:	eba5 75e4 	sub.w	r5, r5, r4, asr #31
 8016b4a:	b2ec      	uxtb	r4, r5
 8016b4c:	2d09      	cmp	r5, #9
 8016b4e:	bfd4      	ite	le
 8016b50:	3430      	addle	r4, #48	@ 0x30
 8016b52:	3457      	addgt	r4, #87	@ 0x57
 8016b54:	b2e4      	uxtb	r4, r4
 8016b56:	55bc      	strb	r4, [r7, r6]
 8016b58:	4674      	mov	r4, lr
 8016b5a:	1e71      	subs	r1, r6, #1
 8016b5c:	b974      	cbnz	r4, 8016b7c <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x54>
 8016b5e:	2800      	cmp	r0, #0
 8016b60:	da05      	bge.n	8016b6e <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x46>
 8016b62:	ab0a      	add	r3, sp, #40	@ 0x28
 8016b64:	4419      	add	r1, r3
 8016b66:	232d      	movs	r3, #45	@ 0x2d
 8016b68:	f801 3c24 	strb.w	r3, [r1, #-36]
 8016b6c:	1eb1      	subs	r1, r6, #2
 8016b6e:	3101      	adds	r1, #1
 8016b70:	4439      	add	r1, r7
 8016b72:	4660      	mov	r0, ip
 8016b74:	f7ff ffc7 	bl	8016b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016b78:	b00b      	add	sp, #44	@ 0x2c
 8016b7a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016b7c:	460e      	mov	r6, r1
 8016b7e:	e7dc      	b.n	8016b3a <_ZN8touchgfx7Unicode4itoaElPtti.part.2+0x12>

08016b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>:
 8016b80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8016b82:	b08b      	sub	sp, #44	@ 0x2c
 8016b84:	468c      	mov	ip, r1
 8016b86:	2100      	movs	r1, #0
 8016b88:	f88d 1024 	strb.w	r1, [sp, #36]	@ 0x24
 8016b8c:	ae01      	add	r6, sp, #4
 8016b8e:	211f      	movs	r1, #31
 8016b90:	fbb0 f7f3 	udiv	r7, r0, r3
 8016b94:	fb03 0517 	mls	r5, r3, r7, r0
 8016b98:	b2ec      	uxtb	r4, r5
 8016b9a:	2d09      	cmp	r5, #9
 8016b9c:	bfd4      	ite	le
 8016b9e:	3430      	addle	r4, #48	@ 0x30
 8016ba0:	3457      	addgt	r4, #87	@ 0x57
 8016ba2:	b2e4      	uxtb	r4, r4
 8016ba4:	558c      	strb	r4, [r1, r6]
 8016ba6:	4638      	mov	r0, r7
 8016ba8:	1e4c      	subs	r4, r1, #1
 8016baa:	b92f      	cbnz	r7, 8016bb8 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x38>
 8016bac:	4431      	add	r1, r6
 8016bae:	4660      	mov	r0, ip
 8016bb0:	f7ff ffa9 	bl	8016b06 <_ZN8touchgfx7Unicode7strncpyEPtPKct>
 8016bb4:	b00b      	add	sp, #44	@ 0x2c
 8016bb6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8016bb8:	4621      	mov	r1, r4
 8016bba:	e7e9      	b.n	8016b90 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3+0x10>

08016bbc <_ZN8touchgfx7Unicode4itoaElPtti>:
 8016bbc:	b410      	push	{r4}
 8016bbe:	b131      	cbz	r1, 8016bce <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016bc0:	1e9c      	subs	r4, r3, #2
 8016bc2:	2c22      	cmp	r4, #34	@ 0x22
 8016bc4:	d803      	bhi.n	8016bce <_ZN8touchgfx7Unicode4itoaElPtti+0x12>
 8016bc6:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016bca:	f7ff bfad 	b.w	8016b28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8016bce:	f85d 4b04 	ldr.w	r4, [sp], #4
 8016bd2:	4770      	bx	lr

08016bd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>:
 8016bd4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016bd8:	4691      	mov	r9, r2
 8016bda:	b085      	sub	sp, #20
 8016bdc:	6802      	ldr	r2, [r0, #0]
 8016bde:	9201      	str	r2, [sp, #4]
 8016be0:	4688      	mov	r8, r1
 8016be2:	4683      	mov	fp, r0
 8016be4:	f89d 1040 	ldrb.w	r1, [sp, #64]	@ 0x40
 8016be8:	9103      	str	r1, [sp, #12]
 8016bea:	4610      	mov	r0, r2
 8016bec:	461c      	mov	r4, r3
 8016bee:	f89d 3048 	ldrb.w	r3, [sp, #72]	@ 0x48
 8016bf2:	9302      	str	r3, [sp, #8]
 8016bf4:	f7ff ff7a 	bl	8016aec <_ZN8touchgfx7Unicode6strlenEPKt>
 8016bf8:	f1b8 0f00 	cmp.w	r8, #0
 8016bfc:	bf0c      	ite	eq
 8016bfe:	4684      	moveq	ip, r0
 8016c00:	f100 0c01 	addne.w	ip, r0, #1
 8016c04:	f1b9 0f69 	cmp.w	r9, #105	@ 0x69
 8016c08:	f89d 6038 	ldrb.w	r6, [sp, #56]	@ 0x38
 8016c0c:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 8016c0e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8016c10:	f8dd a054 	ldr.w	sl, [sp, #84]	@ 0x54
 8016c14:	9903      	ldr	r1, [sp, #12]
 8016c16:	fa1f fc8c 	uxth.w	ip, ip
 8016c1a:	e9dd 2301 	ldrd	r2, r3, [sp, #4]
 8016c1e:	d041      	beq.n	8016ca4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016c20:	d834      	bhi.n	8016c8c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xb8>
 8016c22:	f1b9 0f63 	cmp.w	r9, #99	@ 0x63
 8016c26:	d059      	beq.n	8016cdc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x108>
 8016c28:	f1b9 0f64 	cmp.w	r9, #100	@ 0x64
 8016c2c:	d03a      	beq.n	8016ca4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xd0>
 8016c2e:	f1b9 0f58 	cmp.w	r9, #88	@ 0x58
 8016c32:	d034      	beq.n	8016c9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016c34:	2400      	movs	r4, #0
 8016c36:	f8bd 2050 	ldrh.w	r2, [sp, #80]	@ 0x50
 8016c3a:	3a01      	subs	r2, #1
 8016c3c:	b169      	cbz	r1, 8016c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016c3e:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8016c40:	458c      	cmp	ip, r1
 8016c42:	da09      	bge.n	8016c58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016c44:	eba1 010c 	sub.w	r1, r1, ip
 8016c48:	b289      	uxth	r1, r1
 8016c4a:	b933      	cbnz	r3, 8016c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016c4c:	2e00      	cmp	r6, #0
 8016c4e:	d051      	beq.n	8016cf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016c50:	2800      	cmp	r0, #0
 8016c52:	d04f      	beq.n	8016cf4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x120>
 8016c54:	440c      	add	r4, r1
 8016c56:	b2a4      	uxth	r4, r4
 8016c58:	2100      	movs	r1, #0
 8016c5a:	682b      	ldr	r3, [r5, #0]
 8016c5c:	4293      	cmp	r3, r2
 8016c5e:	da07      	bge.n	8016c70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016c60:	f1b8 0f00 	cmp.w	r8, #0
 8016c64:	d004      	beq.n	8016c70 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9c>
 8016c66:	f82a 8013 	strh.w	r8, [sl, r3, lsl #1]
 8016c6a:	682b      	ldr	r3, [r5, #0]
 8016c6c:	3301      	adds	r3, #1
 8016c6e:	602b      	str	r3, [r5, #0]
 8016c70:	2730      	movs	r7, #48	@ 0x30
 8016c72:	2c00      	cmp	r4, #0
 8016c74:	d04e      	beq.n	8016d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016c76:	682e      	ldr	r6, [r5, #0]
 8016c78:	3c01      	subs	r4, #1
 8016c7a:	42b2      	cmp	r2, r6
 8016c7c:	b2a4      	uxth	r4, r4
 8016c7e:	dd49      	ble.n	8016d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016c80:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016c84:	682b      	ldr	r3, [r5, #0]
 8016c86:	3301      	adds	r3, #1
 8016c88:	602b      	str	r3, [r5, #0]
 8016c8a:	e7f2      	b.n	8016c72 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x9e>
 8016c8c:	f1b9 0f73 	cmp.w	r9, #115	@ 0x73
 8016c90:	d01d      	beq.n	8016cce <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xfa>
 8016c92:	f1b9 0f78 	cmp.w	r9, #120	@ 0x78
 8016c96:	d002      	beq.n	8016c9e <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xca>
 8016c98:	f1b9 0f6f 	cmp.w	r9, #111	@ 0x6f
 8016c9c:	e7c9      	b.n	8016c32 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x5e>
 8016c9e:	4684      	mov	ip, r0
 8016ca0:	f04f 0800 	mov.w	r8, #0
 8016ca4:	2c00      	cmp	r4, #0
 8016ca6:	d0c6      	beq.n	8016c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016ca8:	b947      	cbnz	r7, 8016cbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016caa:	2801      	cmp	r0, #1
 8016cac:	d106      	bne.n	8016cbc <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xe8>
 8016cae:	8814      	ldrh	r4, [r2, #0]
 8016cb0:	2c30      	cmp	r4, #48	@ 0x30
 8016cb2:	bf02      	ittt	eq
 8016cb4:	3202      	addeq	r2, #2
 8016cb6:	f8cb 2000 	streq.w	r2, [fp]
 8016cba:	4638      	moveq	r0, r7
 8016cbc:	45bc      	cmp	ip, r7
 8016cbe:	da14      	bge.n	8016cea <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x116>
 8016cc0:	b2bf      	uxth	r7, r7
 8016cc2:	eba7 040c 	sub.w	r4, r7, ip
 8016cc6:	b2a4      	uxth	r4, r4
 8016cc8:	46bc      	mov	ip, r7
 8016cca:	2600      	movs	r6, #0
 8016ccc:	e7b3      	b.n	8016c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016cce:	4684      	mov	ip, r0
 8016cd0:	b16c      	cbz	r4, 8016cee <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x11a>
 8016cd2:	42b8      	cmp	r0, r7
 8016cd4:	dd00      	ble.n	8016cd8 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x104>
 8016cd6:	b2b8      	uxth	r0, r7
 8016cd8:	2400      	movs	r4, #0
 8016cda:	e003      	b.n	8016ce4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x110>
 8016cdc:	f04f 0c01 	mov.w	ip, #1
 8016ce0:	2400      	movs	r4, #0
 8016ce2:	4660      	mov	r0, ip
 8016ce4:	4626      	mov	r6, r4
 8016ce6:	46a0      	mov	r8, r4
 8016ce8:	e7a5      	b.n	8016c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016cea:	2400      	movs	r4, #0
 8016cec:	e7ed      	b.n	8016cca <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0xf6>
 8016cee:	4626      	mov	r6, r4
 8016cf0:	46a0      	mov	r8, r4
 8016cf2:	e7a0      	b.n	8016c36 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x62>
 8016cf4:	2900      	cmp	r1, #0
 8016cf6:	d0b0      	beq.n	8016c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016cf8:	2720      	movs	r7, #32
 8016cfa:	682e      	ldr	r6, [r5, #0]
 8016cfc:	2900      	cmp	r1, #0
 8016cfe:	d0ac      	beq.n	8016c5a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x86>
 8016d00:	3901      	subs	r1, #1
 8016d02:	4296      	cmp	r6, r2
 8016d04:	b289      	uxth	r1, r1
 8016d06:	daa7      	bge.n	8016c58 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x84>
 8016d08:	f82a 7016 	strh.w	r7, [sl, r6, lsl #1]
 8016d0c:	682b      	ldr	r3, [r5, #0]
 8016d0e:	3301      	adds	r3, #1
 8016d10:	602b      	str	r3, [r5, #0]
 8016d12:	e7f2      	b.n	8016cfa <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x126>
 8016d14:	b188      	cbz	r0, 8016d3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016d16:	682b      	ldr	r3, [r5, #0]
 8016d18:	3801      	subs	r0, #1
 8016d1a:	429a      	cmp	r2, r3
 8016d1c:	b280      	uxth	r0, r0
 8016d1e:	dd0c      	ble.n	8016d3a <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x166>
 8016d20:	f8db 3000 	ldr.w	r3, [fp]
 8016d24:	1c9c      	adds	r4, r3, #2
 8016d26:	f8cb 4000 	str.w	r4, [fp]
 8016d2a:	881c      	ldrh	r4, [r3, #0]
 8016d2c:	682b      	ldr	r3, [r5, #0]
 8016d2e:	f82a 4013 	strh.w	r4, [sl, r3, lsl #1]
 8016d32:	682b      	ldr	r3, [r5, #0]
 8016d34:	3301      	adds	r3, #1
 8016d36:	602b      	str	r3, [r5, #0]
 8016d38:	e7ec      	b.n	8016d14 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x140>
 8016d3a:	2620      	movs	r6, #32
 8016d3c:	b151      	cbz	r1, 8016d54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016d3e:	6828      	ldr	r0, [r5, #0]
 8016d40:	3901      	subs	r1, #1
 8016d42:	4282      	cmp	r2, r0
 8016d44:	b289      	uxth	r1, r1
 8016d46:	dd05      	ble.n	8016d54 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x180>
 8016d48:	f82a 6010 	strh.w	r6, [sl, r0, lsl #1]
 8016d4c:	682b      	ldr	r3, [r5, #0]
 8016d4e:	3301      	adds	r3, #1
 8016d50:	602b      	str	r3, [r5, #0]
 8016d52:	e7f3      	b.n	8016d3c <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt+0x168>
 8016d54:	b005      	add	sp, #20
 8016d56:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08016d5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>:
 8016d5a:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8016d5e:	e9dd 8c07 	ldrd	r8, ip, [sp, #28]
 8016d62:	e9dd e609 	ldrd	lr, r6, [sp, #36]	@ 0x24
 8016d66:	e9dd 750b 	ldrd	r7, r5, [sp, #44]	@ 0x2c
 8016d6a:	2400      	movs	r4, #0
 8016d6c:	8014      	strh	r4, [r2, #0]
 8016d6e:	701c      	strb	r4, [r3, #0]
 8016d70:	f888 4000 	strb.w	r4, [r8]
 8016d74:	f88c 4000 	strb.w	r4, [ip]
 8016d78:	f88e 4000 	strb.w	r4, [lr]
 8016d7c:	703c      	strb	r4, [r7, #0]
 8016d7e:	6804      	ldr	r4, [r0, #0]
 8016d80:	b1a4      	cbz	r4, 8016dac <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x52>
 8016d82:	8824      	ldrh	r4, [r4, #0]
 8016d84:	f04f 0901 	mov.w	r9, #1
 8016d88:	b314      	cbz	r4, 8016dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016d8a:	2c2b      	cmp	r4, #43	@ 0x2b
 8016d8c:	d001      	beq.n	8016d92 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x38>
 8016d8e:	2c20      	cmp	r4, #32
 8016d90:	d110      	bne.n	8016db4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x5a>
 8016d92:	8014      	strh	r4, [r2, #0]
 8016d94:	6804      	ldr	r4, [r0, #0]
 8016d96:	b10c      	cbz	r4, 8016d9c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x42>
 8016d98:	3402      	adds	r4, #2
 8016d9a:	6004      	str	r4, [r0, #0]
 8016d9c:	680c      	ldr	r4, [r1, #0]
 8016d9e:	b10c      	cbz	r4, 8016da4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x4a>
 8016da0:	3401      	adds	r4, #1
 8016da2:	600c      	str	r4, [r1, #0]
 8016da4:	6804      	ldr	r4, [r0, #0]
 8016da6:	b17c      	cbz	r4, 8016dc8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x6e>
 8016da8:	8824      	ldrh	r4, [r4, #0]
 8016daa:	e7ed      	b.n	8016d88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016dac:	680c      	ldr	r4, [r1, #0]
 8016dae:	b17c      	cbz	r4, 8016dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016db0:	7824      	ldrb	r4, [r4, #0]
 8016db2:	e7e7      	b.n	8016d84 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2a>
 8016db4:	2c2d      	cmp	r4, #45	@ 0x2d
 8016db6:	d102      	bne.n	8016dbe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x64>
 8016db8:	f883 9000 	strb.w	r9, [r3]
 8016dbc:	e7ea      	b.n	8016d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016dbe:	2c23      	cmp	r4, #35	@ 0x23
 8016dc0:	d107      	bne.n	8016dd2 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x78>
 8016dc2:	f888 9000 	strb.w	r9, [r8]
 8016dc6:	e7e5      	b.n	8016d94 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x3a>
 8016dc8:	680c      	ldr	r4, [r1, #0]
 8016dca:	b10c      	cbz	r4, 8016dd0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x76>
 8016dcc:	7824      	ldrb	r4, [r4, #0]
 8016dce:	e7db      	b.n	8016d88 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x2e>
 8016dd0:	2400      	movs	r4, #0
 8016dd2:	f1a4 0330 	sub.w	r3, r4, #48	@ 0x30
 8016dd6:	2b09      	cmp	r3, #9
 8016dd8:	d901      	bls.n	8016dde <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x84>
 8016dda:	2c2a      	cmp	r4, #42	@ 0x2a
 8016ddc:	d122      	bne.n	8016e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016dde:	2301      	movs	r3, #1
 8016de0:	2c30      	cmp	r4, #48	@ 0x30
 8016de2:	f88e 3000 	strb.w	r3, [lr]
 8016de6:	d10d      	bne.n	8016e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016de8:	f88c 3000 	strb.w	r3, [ip]
 8016dec:	6803      	ldr	r3, [r0, #0]
 8016dee:	b10b      	cbz	r3, 8016df4 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x9a>
 8016df0:	3302      	adds	r3, #2
 8016df2:	6003      	str	r3, [r0, #0]
 8016df4:	680b      	ldr	r3, [r1, #0]
 8016df6:	b10b      	cbz	r3, 8016dfc <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xa2>
 8016df8:	3301      	adds	r3, #1
 8016dfa:	600b      	str	r3, [r1, #0]
 8016dfc:	6803      	ldr	r3, [r0, #0]
 8016dfe:	2b00      	cmp	r3, #0
 8016e00:	d02f      	beq.n	8016e62 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x108>
 8016e02:	881c      	ldrh	r4, [r3, #0]
 8016e04:	2c2a      	cmp	r4, #42	@ 0x2a
 8016e06:	d135      	bne.n	8016e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016e08:	f04f 33ff 	mov.w	r3, #4294967295
 8016e0c:	6033      	str	r3, [r6, #0]
 8016e0e:	6803      	ldr	r3, [r0, #0]
 8016e10:	b10b      	cbz	r3, 8016e16 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xbc>
 8016e12:	3302      	adds	r3, #2
 8016e14:	6003      	str	r3, [r0, #0]
 8016e16:	680b      	ldr	r3, [r1, #0]
 8016e18:	b10b      	cbz	r3, 8016e1e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xc4>
 8016e1a:	3301      	adds	r3, #1
 8016e1c:	600b      	str	r3, [r1, #0]
 8016e1e:	6803      	ldr	r3, [r0, #0]
 8016e20:	b31b      	cbz	r3, 8016e6a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x110>
 8016e22:	881c      	ldrh	r4, [r3, #0]
 8016e24:	2c2e      	cmp	r4, #46	@ 0x2e
 8016e26:	d11a      	bne.n	8016e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016e28:	2301      	movs	r3, #1
 8016e2a:	703b      	strb	r3, [r7, #0]
 8016e2c:	6803      	ldr	r3, [r0, #0]
 8016e2e:	b10b      	cbz	r3, 8016e34 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xda>
 8016e30:	3302      	adds	r3, #2
 8016e32:	6003      	str	r3, [r0, #0]
 8016e34:	680b      	ldr	r3, [r1, #0]
 8016e36:	b10b      	cbz	r3, 8016e3c <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xe2>
 8016e38:	3301      	adds	r3, #1
 8016e3a:	600b      	str	r3, [r1, #0]
 8016e3c:	6803      	ldr	r3, [r0, #0]
 8016e3e:	2b00      	cmp	r3, #0
 8016e40:	d036      	beq.n	8016eb0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x156>
 8016e42:	881b      	ldrh	r3, [r3, #0]
 8016e44:	2b2a      	cmp	r3, #42	@ 0x2a
 8016e46:	d137      	bne.n	8016eb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016e48:	f04f 33ff 	mov.w	r3, #4294967295
 8016e4c:	602b      	str	r3, [r5, #0]
 8016e4e:	6803      	ldr	r3, [r0, #0]
 8016e50:	b10b      	cbz	r3, 8016e56 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xfc>
 8016e52:	3302      	adds	r3, #2
 8016e54:	6003      	str	r3, [r0, #0]
 8016e56:	680b      	ldr	r3, [r1, #0]
 8016e58:	b10b      	cbz	r3, 8016e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016e5a:	3301      	adds	r3, #1
 8016e5c:	600b      	str	r3, [r1, #0]
 8016e5e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8016e62:	680c      	ldr	r4, [r1, #0]
 8016e64:	b134      	cbz	r4, 8016e74 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x11a>
 8016e66:	7824      	ldrb	r4, [r4, #0]
 8016e68:	e7cc      	b.n	8016e04 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xaa>
 8016e6a:	680b      	ldr	r3, [r1, #0]
 8016e6c:	2b00      	cmp	r3, #0
 8016e6e:	d0f6      	beq.n	8016e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>
 8016e70:	781c      	ldrb	r4, [r3, #0]
 8016e72:	e7d7      	b.n	8016e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016e74:	2300      	movs	r3, #0
 8016e76:	6033      	str	r3, [r6, #0]
 8016e78:	220a      	movs	r2, #10
 8016e7a:	f1a4 0c30 	sub.w	ip, r4, #48	@ 0x30
 8016e7e:	fa1f f38c 	uxth.w	r3, ip
 8016e82:	2b09      	cmp	r3, #9
 8016e84:	d8ce      	bhi.n	8016e24 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xca>
 8016e86:	6833      	ldr	r3, [r6, #0]
 8016e88:	fb02 c303 	mla	r3, r2, r3, ip
 8016e8c:	6033      	str	r3, [r6, #0]
 8016e8e:	6803      	ldr	r3, [r0, #0]
 8016e90:	b10b      	cbz	r3, 8016e96 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x13c>
 8016e92:	3302      	adds	r3, #2
 8016e94:	6003      	str	r3, [r0, #0]
 8016e96:	680b      	ldr	r3, [r1, #0]
 8016e98:	b10b      	cbz	r3, 8016e9e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x144>
 8016e9a:	3301      	adds	r3, #1
 8016e9c:	600b      	str	r3, [r1, #0]
 8016e9e:	6803      	ldr	r3, [r0, #0]
 8016ea0:	b10b      	cbz	r3, 8016ea6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x14c>
 8016ea2:	881c      	ldrh	r4, [r3, #0]
 8016ea4:	e7e9      	b.n	8016e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016ea6:	680c      	ldr	r4, [r1, #0]
 8016ea8:	2c00      	cmp	r4, #0
 8016eaa:	d0e6      	beq.n	8016e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016eac:	7824      	ldrb	r4, [r4, #0]
 8016eae:	e7e4      	b.n	8016e7a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x120>
 8016eb0:	680b      	ldr	r3, [r1, #0]
 8016eb2:	b10b      	cbz	r3, 8016eb8 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x15e>
 8016eb4:	781b      	ldrb	r3, [r3, #0]
 8016eb6:	e7c5      	b.n	8016e44 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0xea>
 8016eb8:	2200      	movs	r2, #0
 8016eba:	602a      	str	r2, [r5, #0]
 8016ebc:	240a      	movs	r4, #10
 8016ebe:	3b30      	subs	r3, #48	@ 0x30
 8016ec0:	b29e      	uxth	r6, r3
 8016ec2:	2e09      	cmp	r6, #9
 8016ec4:	682a      	ldr	r2, [r5, #0]
 8016ec6:	d813      	bhi.n	8016ef0 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x196>
 8016ec8:	fb04 3302 	mla	r3, r4, r2, r3
 8016ecc:	602b      	str	r3, [r5, #0]
 8016ece:	6803      	ldr	r3, [r0, #0]
 8016ed0:	b10b      	cbz	r3, 8016ed6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x17c>
 8016ed2:	3302      	adds	r3, #2
 8016ed4:	6003      	str	r3, [r0, #0]
 8016ed6:	680b      	ldr	r3, [r1, #0]
 8016ed8:	b10b      	cbz	r3, 8016ede <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x184>
 8016eda:	3301      	adds	r3, #1
 8016edc:	600b      	str	r3, [r1, #0]
 8016ede:	6803      	ldr	r3, [r0, #0]
 8016ee0:	b10b      	cbz	r3, 8016ee6 <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x18c>
 8016ee2:	881b      	ldrh	r3, [r3, #0]
 8016ee4:	e7eb      	b.n	8016ebe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016ee6:	680b      	ldr	r3, [r1, #0]
 8016ee8:	2b00      	cmp	r3, #0
 8016eea:	d0e8      	beq.n	8016ebe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016eec:	781b      	ldrb	r3, [r3, #0]
 8016eee:	e7e6      	b.n	8016ebe <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x164>
 8016ef0:	2a06      	cmp	r2, #6
 8016ef2:	bfa8      	it	ge
 8016ef4:	2206      	movge	r2, #6
 8016ef6:	602a      	str	r2, [r5, #0]
 8016ef8:	e7b1      	b.n	8016e5e <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_+0x104>

08016efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>:
 8016efa:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8016efe:	b0a3      	sub	sp, #140	@ 0x8c
 8016f00:	2600      	movs	r6, #0
 8016f02:	f10d 0944 	add.w	r9, sp, #68	@ 0x44
 8016f06:	4607      	mov	r7, r0
 8016f08:	4688      	mov	r8, r1
 8016f0a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 8016f0e:	4631      	mov	r1, r6
 8016f10:	2242      	movs	r2, #66	@ 0x42
 8016f12:	4648      	mov	r0, r9
 8016f14:	9c2c      	ldr	r4, [sp, #176]	@ 0xb0
 8016f16:	960d      	str	r6, [sp, #52]	@ 0x34
 8016f18:	f00f f9a1 	bl	802625e <memset>
 8016f1c:	b15f      	cbz	r7, 8016f36 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x3c>
 8016f1e:	f108 3aff 	add.w	sl, r8, #4294967295
 8016f22:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8016f24:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016f26:	b152      	cbz	r2, 8016f3e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x44>
 8016f28:	8812      	ldrh	r2, [r2, #0]
 8016f2a:	b10a      	cbz	r2, 8016f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016f2c:	459a      	cmp	sl, r3
 8016f2e:	dc2e      	bgt.n	8016f8e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x94>
 8016f30:	2200      	movs	r2, #0
 8016f32:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016f36:	4638      	mov	r0, r7
 8016f38:	b023      	add	sp, #140	@ 0x8c
 8016f3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8016f3e:	9a08      	ldr	r2, [sp, #32]
 8016f40:	2a00      	cmp	r2, #0
 8016f42:	d0f5      	beq.n	8016f30 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x36>
 8016f44:	7812      	ldrb	r2, [r2, #0]
 8016f46:	e7f0      	b.n	8016f2a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x30>
 8016f48:	2d00      	cmp	r5, #0
 8016f4a:	d0ea      	beq.n	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016f4c:	782a      	ldrb	r2, [r5, #0]
 8016f4e:	b142      	cbz	r2, 8016f62 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x68>
 8016f50:	2a25      	cmp	r2, #37	@ 0x25
 8016f52:	d001      	beq.n	8016f58 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x5e>
 8016f54:	459a      	cmp	sl, r3
 8016f56:	dc08      	bgt.n	8016f6a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x70>
 8016f58:	f1bb 0f00 	cmp.w	fp, #0
 8016f5c:	d121      	bne.n	8016fa2 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xa8>
 8016f5e:	2d00      	cmp	r5, #0
 8016f60:	d0df      	beq.n	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016f62:	782a      	ldrb	r2, [r5, #0]
 8016f64:	f04f 0b00 	mov.w	fp, #0
 8016f68:	e01d      	b.n	8016fa6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xac>
 8016f6a:	f1bb 0f00 	cmp.w	fp, #0
 8016f6e:	d078      	beq.n	8017062 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x168>
 8016f70:	f8bb 2000 	ldrh.w	r2, [fp]
 8016f74:	f827 2013 	strh.w	r2, [r7, r3, lsl #1]
 8016f78:	f1bb 0f00 	cmp.w	fp, #0
 8016f7c:	d002      	beq.n	8016f84 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x8a>
 8016f7e:	f10b 0202 	add.w	r2, fp, #2
 8016f82:	9209      	str	r2, [sp, #36]	@ 0x24
 8016f84:	b10d      	cbz	r5, 8016f8a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x90>
 8016f86:	3501      	adds	r5, #1
 8016f88:	9508      	str	r5, [sp, #32]
 8016f8a:	3301      	adds	r3, #1
 8016f8c:	930d      	str	r3, [sp, #52]	@ 0x34
 8016f8e:	e9dd 5b08 	ldrd	r5, fp, [sp, #32]
 8016f92:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8016f94:	f1bb 0f00 	cmp.w	fp, #0
 8016f98:	d0d6      	beq.n	8016f48 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x4e>
 8016f9a:	f8bb 2000 	ldrh.w	r2, [fp]
 8016f9e:	2a00      	cmp	r2, #0
 8016fa0:	d1d6      	bne.n	8016f50 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x56>
 8016fa2:	f8bb 2000 	ldrh.w	r2, [fp]
 8016fa6:	2a00      	cmp	r2, #0
 8016fa8:	d0bb      	beq.n	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016faa:	459a      	cmp	sl, r3
 8016fac:	ddb9      	ble.n	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 8016fae:	f8ad 6032 	strh.w	r6, [sp, #50]	@ 0x32
 8016fb2:	f88d 602d 	strb.w	r6, [sp, #45]	@ 0x2d
 8016fb6:	f88d 602e 	strb.w	r6, [sp, #46]	@ 0x2e
 8016fba:	f88d 602f 	strb.w	r6, [sp, #47]	@ 0x2f
 8016fbe:	f88d 6030 	strb.w	r6, [sp, #48]	@ 0x30
 8016fc2:	960e      	str	r6, [sp, #56]	@ 0x38
 8016fc4:	f88d 6031 	strb.w	r6, [sp, #49]	@ 0x31
 8016fc8:	960f      	str	r6, [sp, #60]	@ 0x3c
 8016fca:	f1bb 0f00 	cmp.w	fp, #0
 8016fce:	d002      	beq.n	8016fd6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xdc>
 8016fd0:	f10b 0302 	add.w	r3, fp, #2
 8016fd4:	9309      	str	r3, [sp, #36]	@ 0x24
 8016fd6:	b10d      	cbz	r5, 8016fdc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0xe2>
 8016fd8:	1c6b      	adds	r3, r5, #1
 8016fda:	9308      	str	r3, [sp, #32]
 8016fdc:	ab0f      	add	r3, sp, #60	@ 0x3c
 8016fde:	9305      	str	r3, [sp, #20]
 8016fe0:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 8016fe4:	9304      	str	r3, [sp, #16]
 8016fe6:	ab0e      	add	r3, sp, #56	@ 0x38
 8016fe8:	9303      	str	r3, [sp, #12]
 8016fea:	ab0c      	add	r3, sp, #48	@ 0x30
 8016fec:	9302      	str	r3, [sp, #8]
 8016fee:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 8016ff2:	9301      	str	r3, [sp, #4]
 8016ff4:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8016ff8:	9300      	str	r3, [sp, #0]
 8016ffa:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8016ffe:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 8017002:	a908      	add	r1, sp, #32
 8017004:	a809      	add	r0, sp, #36	@ 0x24
 8017006:	f7ff fea8 	bl	8016d5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 801700a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801700c:	2b00      	cmp	r3, #0
 801700e:	bfbe      	ittt	lt
 8017010:	6823      	ldrlt	r3, [r4, #0]
 8017012:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 8017016:	930e      	strlt	r3, [sp, #56]	@ 0x38
 8017018:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801701a:	bfb8      	it	lt
 801701c:	3404      	addlt	r4, #4
 801701e:	2b00      	cmp	r3, #0
 8017020:	bfb8      	it	lt
 8017022:	6823      	ldrlt	r3, [r4, #0]
 8017024:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 8017028:	bfbe      	ittt	lt
 801702a:	ea23 73e3 	biclt.w	r3, r3, r3, asr #31
 801702e:	930f      	strlt	r3, [sp, #60]	@ 0x3c
 8017030:	3404      	addlt	r4, #4
 8017032:	b1d9      	cbz	r1, 801706c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x172>
 8017034:	880b      	ldrh	r3, [r1, #0]
 8017036:	2b69      	cmp	r3, #105	@ 0x69
 8017038:	d01f      	beq.n	801707a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 801703a:	d82f      	bhi.n	801709c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1a2>
 801703c:	2b58      	cmp	r3, #88	@ 0x58
 801703e:	d01c      	beq.n	801707a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 8017040:	d818      	bhi.n	8017074 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x17a>
 8017042:	2b25      	cmp	r3, #37	@ 0x25
 8017044:	d034      	beq.n	80170b0 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1b6>
 8017046:	e9cd 5b08 	strd	r5, fp, [sp, #32]
 801704a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801704c:	f1bb 0f00 	cmp.w	fp, #0
 8017050:	f000 80b8 	beq.w	80171c4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2ca>
 8017054:	f8bb 5000 	ldrh.w	r5, [fp]
 8017058:	f827 5013 	strh.w	r5, [r7, r3, lsl #1]
 801705c:	3301      	adds	r3, #1
 801705e:	930d      	str	r3, [sp, #52]	@ 0x34
 8017060:	e029      	b.n	80170b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017062:	b10d      	cbz	r5, 8017068 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x16e>
 8017064:	782a      	ldrb	r2, [r5, #0]
 8017066:	e785      	b.n	8016f74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 8017068:	462a      	mov	r2, r5
 801706a:	e783      	b.n	8016f74 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x7a>
 801706c:	2a00      	cmp	r2, #0
 801706e:	d0ea      	beq.n	8017046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 8017070:	7813      	ldrb	r3, [r2, #0]
 8017072:	e7e0      	b.n	8017036 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x13c>
 8017074:	3b63      	subs	r3, #99	@ 0x63
 8017076:	2b01      	cmp	r3, #1
 8017078:	d8e5      	bhi.n	8017046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 801707a:	f8cd 9040 	str.w	r9, [sp, #64]	@ 0x40
 801707e:	b329      	cbz	r1, 80170cc <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1d2>
 8017080:	880b      	ldrh	r3, [r1, #0]
 8017082:	2b69      	cmp	r3, #105	@ 0x69
 8017084:	d063      	beq.n	801714e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017086:	d825      	bhi.n	80170d4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1da>
 8017088:	2b63      	cmp	r3, #99	@ 0x63
 801708a:	d038      	beq.n	80170fe <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x204>
 801708c:	2b64      	cmp	r3, #100	@ 0x64
 801708e:	d05e      	beq.n	801714e <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x254>
 8017090:	2b58      	cmp	r3, #88	@ 0x58
 8017092:	d07b      	beq.n	801718c <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x292>
 8017094:	f8ad 6044 	strh.w	r6, [sp, #68]	@ 0x44
 8017098:	4625      	mov	r5, r4
 801709a:	e036      	b.n	801710a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801709c:	2b73      	cmp	r3, #115	@ 0x73
 801709e:	d0ec      	beq.n	801707a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80170a0:	d802      	bhi.n	80170a8 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1ae>
 80170a2:	2b6f      	cmp	r3, #111	@ 0x6f
 80170a4:	d1cf      	bne.n	8017046 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x14c>
 80170a6:	e7e8      	b.n	801707a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80170a8:	2b75      	cmp	r3, #117	@ 0x75
 80170aa:	d0e6      	beq.n	801707a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x180>
 80170ac:	2b78      	cmp	r3, #120	@ 0x78
 80170ae:	e7f9      	b.n	80170a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1aa>
 80170b0:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80170b2:	f827 3012 	strh.w	r3, [r7, r2, lsl #1]
 80170b6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80170b8:	b10b      	cbz	r3, 80170be <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1c4>
 80170ba:	3302      	adds	r3, #2
 80170bc:	9309      	str	r3, [sp, #36]	@ 0x24
 80170be:	9b08      	ldr	r3, [sp, #32]
 80170c0:	2b00      	cmp	r3, #0
 80170c2:	f43f af2e 	beq.w	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80170c6:	3301      	adds	r3, #1
 80170c8:	9308      	str	r3, [sp, #32]
 80170ca:	e72a      	b.n	8016f22 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x28>
 80170cc:	2a00      	cmp	r2, #0
 80170ce:	d0e1      	beq.n	8017094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80170d0:	7813      	ldrb	r3, [r2, #0]
 80170d2:	e7d6      	b.n	8017082 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x188>
 80170d4:	2b73      	cmp	r3, #115	@ 0x73
 80170d6:	d036      	beq.n	8017146 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x24c>
 80170d8:	d807      	bhi.n	80170ea <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1f0>
 80170da:	2b6f      	cmp	r3, #111	@ 0x6f
 80170dc:	d1da      	bne.n	8017094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80170de:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80170e0:	1d25      	adds	r5, r4, #4
 80170e2:	eba8 0202 	sub.w	r2, r8, r2
 80170e6:	2308      	movs	r3, #8
 80170e8:	e04a      	b.n	8017180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80170ea:	2b75      	cmp	r3, #117	@ 0x75
 80170ec:	d043      	beq.n	8017176 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x27c>
 80170ee:	2b78      	cmp	r3, #120	@ 0x78
 80170f0:	d1d0      	bne.n	8017094 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x19a>
 80170f2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80170f4:	1d25      	adds	r5, r4, #4
 80170f6:	eba8 0202 	sub.w	r2, r8, r2
 80170fa:	2310      	movs	r3, #16
 80170fc:	e040      	b.n	8017180 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x286>
 80170fe:	6823      	ldr	r3, [r4, #0]
 8017100:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 8017104:	1d25      	adds	r5, r4, #4
 8017106:	f8ad 6046 	strh.w	r6, [sp, #70]	@ 0x46
 801710a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801710c:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 8017110:	2b00      	cmp	r3, #0
 8017112:	d052      	beq.n	80171ba <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2c0>
 8017114:	881a      	ldrh	r2, [r3, #0]
 8017116:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 801711a:	a80d      	add	r0, sp, #52	@ 0x34
 801711c:	9005      	str	r0, [sp, #20]
 801711e:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 8017122:	9004      	str	r0, [sp, #16]
 8017124:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8017126:	9003      	str	r0, [sp, #12]
 8017128:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 801712c:	9002      	str	r0, [sp, #8]
 801712e:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017130:	9001      	str	r0, [sp, #4]
 8017132:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 8017136:	9000      	str	r0, [sp, #0]
 8017138:	e9cd 8706 	strd	r8, r7, [sp, #24]
 801713c:	a810      	add	r0, sp, #64	@ 0x40
 801713e:	f7ff fd49 	bl	8016bd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 8017142:	462c      	mov	r4, r5
 8017144:	e7b7      	b.n	80170b6 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x1bc>
 8017146:	6823      	ldr	r3, [r4, #0]
 8017148:	1d25      	adds	r5, r4, #4
 801714a:	9310      	str	r3, [sp, #64]	@ 0x40
 801714c:	e7dd      	b.n	801710a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801714e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017150:	6820      	ldr	r0, [r4, #0]
 8017152:	eba8 0202 	sub.w	r2, r8, r2
 8017156:	230a      	movs	r3, #10
 8017158:	b292      	uxth	r2, r2
 801715a:	4649      	mov	r1, r9
 801715c:	f7ff fce4 	bl	8016b28 <_ZN8touchgfx7Unicode4itoaElPtti.part.2>
 8017160:	f8bd 3044 	ldrh.w	r3, [sp, #68]	@ 0x44
 8017164:	2b2d      	cmp	r3, #45	@ 0x2d
 8017166:	f104 0504 	add.w	r5, r4, #4
 801716a:	d1ce      	bne.n	801710a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801716c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 8017170:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017172:	3302      	adds	r3, #2
 8017174:	e7e9      	b.n	801714a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x250>
 8017176:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8017178:	1d25      	adds	r5, r4, #4
 801717a:	eba8 0202 	sub.w	r2, r8, r2
 801717e:	230a      	movs	r3, #10
 8017180:	b292      	uxth	r2, r2
 8017182:	4649      	mov	r1, r9
 8017184:	6820      	ldr	r0, [r4, #0]
 8017186:	f7ff fcfb 	bl	8016b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801718a:	e7be      	b.n	801710a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 801718c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801718e:	6820      	ldr	r0, [r4, #0]
 8017190:	eba8 0202 	sub.w	r2, r8, r2
 8017194:	b292      	uxth	r2, r2
 8017196:	2310      	movs	r3, #16
 8017198:	4649      	mov	r1, r9
 801719a:	f7ff fcf1 	bl	8016b80 <_ZN8touchgfx7Unicode4utoaEmPtti.part.3>
 801719e:	1d25      	adds	r5, r4, #4
 80171a0:	f10d 0242 	add.w	r2, sp, #66	@ 0x42
 80171a4:	f832 3f02 	ldrh.w	r3, [r2, #2]!
 80171a8:	2b00      	cmp	r3, #0
 80171aa:	d0ae      	beq.n	801710a <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x210>
 80171ac:	f1a3 0161 	sub.w	r1, r3, #97	@ 0x61
 80171b0:	2919      	cmp	r1, #25
 80171b2:	d8f7      	bhi.n	80171a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80171b4:	3b20      	subs	r3, #32
 80171b6:	8013      	strh	r3, [r2, #0]
 80171b8:	e7f4      	b.n	80171a4 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x2aa>
 80171ba:	9a08      	ldr	r2, [sp, #32]
 80171bc:	2a00      	cmp	r2, #0
 80171be:	d0aa      	beq.n	8017116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80171c0:	7812      	ldrb	r2, [r2, #0]
 80171c2:	e7a8      	b.n	8017116 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x21c>
 80171c4:	2d00      	cmp	r5, #0
 80171c6:	f43f af47 	beq.w	8017058 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>
 80171ca:	782d      	ldrb	r5, [r5, #0]
 80171cc:	e744      	b.n	8017058 <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list+0x15e>

080171ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>:
 80171ce:	b507      	push	{r0, r1, r2, lr}
 80171d0:	9300      	str	r3, [sp, #0]
 80171d2:	4613      	mov	r3, r2
 80171d4:	2200      	movs	r2, #0
 80171d6:	f7ff fe90 	bl	8016efa <_ZN8touchgfx7Unicode9vsnprintfEPttPKtPKcSt9__va_list>
 80171da:	b003      	add	sp, #12
 80171dc:	f85d fb04 	ldr.w	pc, [sp], #4

080171e0 <_ZN8touchgfx7Unicode8snprintfEPttPKcz>:
 80171e0:	b40c      	push	{r2, r3}
 80171e2:	b507      	push	{r0, r1, r2, lr}
 80171e4:	ab04      	add	r3, sp, #16
 80171e6:	f853 2b04 	ldr.w	r2, [r3], #4
 80171ea:	9301      	str	r3, [sp, #4]
 80171ec:	f7ff ffef 	bl	80171ce <_ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list>
 80171f0:	b003      	add	sp, #12
 80171f2:	f85d eb04 	ldr.w	lr, [sp], #4
 80171f6:	b002      	add	sp, #8
 80171f8:	4770      	bx	lr
	...

080171fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>:
 80171fc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017200:	b0c5      	sub	sp, #276	@ 0x114
 8017202:	2400      	movs	r4, #0
 8017204:	af11      	add	r7, sp, #68	@ 0x44
 8017206:	4606      	mov	r6, r0
 8017208:	468a      	mov	sl, r1
 801720a:	e9cd 3208 	strd	r3, r2, [sp, #32]
 801720e:	4621      	mov	r1, r4
 8017210:	22c8      	movs	r2, #200	@ 0xc8
 8017212:	4638      	mov	r0, r7
 8017214:	f8dd b138 	ldr.w	fp, [sp, #312]	@ 0x138
 8017218:	940d      	str	r4, [sp, #52]	@ 0x34
 801721a:	f00f f820 	bl	802625e <memset>
 801721e:	b16e      	cbz	r6, 801723c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x40>
 8017220:	ed9f 5aa8 	vldr	s10, [pc, #672]	@ 80174c4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2c8>
 8017224:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8017226:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017228:	b162      	cbz	r2, 8017244 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x48>
 801722a:	8812      	ldrh	r2, [r2, #0]
 801722c:	b11a      	cbz	r2, 8017236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801722e:	f10a 31ff 	add.w	r1, sl, #4294967295
 8017232:	4299      	cmp	r1, r3
 8017234:	dc2e      	bgt.n	8017294 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x98>
 8017236:	2200      	movs	r2, #0
 8017238:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801723c:	4630      	mov	r0, r6
 801723e:	b045      	add	sp, #276	@ 0x114
 8017240:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8017244:	9a08      	ldr	r2, [sp, #32]
 8017246:	2a00      	cmp	r2, #0
 8017248:	d0f5      	beq.n	8017236 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a>
 801724a:	7812      	ldrb	r2, [r2, #0]
 801724c:	e7ee      	b.n	801722c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x30>
 801724e:	2d00      	cmp	r5, #0
 8017250:	d0e8      	beq.n	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017252:	782a      	ldrb	r2, [r5, #0]
 8017254:	b142      	cbz	r2, 8017268 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x6c>
 8017256:	2a25      	cmp	r2, #37	@ 0x25
 8017258:	d001      	beq.n	801725e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x62>
 801725a:	4299      	cmp	r1, r3
 801725c:	dc08      	bgt.n	8017270 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x74>
 801725e:	f1b8 0f00 	cmp.w	r8, #0
 8017262:	d121      	bne.n	80172a8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xac>
 8017264:	2d00      	cmp	r5, #0
 8017266:	d0dd      	beq.n	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017268:	782a      	ldrb	r2, [r5, #0]
 801726a:	f04f 0800 	mov.w	r8, #0
 801726e:	e01d      	b.n	80172ac <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xb0>
 8017270:	f1b8 0f00 	cmp.w	r8, #0
 8017274:	d07f      	beq.n	8017376 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x17a>
 8017276:	f8b8 2000 	ldrh.w	r2, [r8]
 801727a:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 801727e:	f1b8 0f00 	cmp.w	r8, #0
 8017282:	d002      	beq.n	801728a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x8e>
 8017284:	f108 0202 	add.w	r2, r8, #2
 8017288:	9209      	str	r2, [sp, #36]	@ 0x24
 801728a:	b10d      	cbz	r5, 8017290 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x94>
 801728c:	3501      	adds	r5, #1
 801728e:	9508      	str	r5, [sp, #32]
 8017290:	3301      	adds	r3, #1
 8017292:	930d      	str	r3, [sp, #52]	@ 0x34
 8017294:	e9dd 5808 	ldrd	r5, r8, [sp, #32]
 8017298:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801729a:	f1b8 0f00 	cmp.w	r8, #0
 801729e:	d0d6      	beq.n	801724e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x52>
 80172a0:	f8b8 2000 	ldrh.w	r2, [r8]
 80172a4:	2a00      	cmp	r2, #0
 80172a6:	d1d6      	bne.n	8017256 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x5a>
 80172a8:	f8b8 2000 	ldrh.w	r2, [r8]
 80172ac:	2a00      	cmp	r2, #0
 80172ae:	d0b9      	beq.n	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80172b0:	4299      	cmp	r1, r3
 80172b2:	ddb7      	ble.n	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 80172b4:	2300      	movs	r3, #0
 80172b6:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 80172ba:	f88d 302d 	strb.w	r3, [sp, #45]	@ 0x2d
 80172be:	f88d 302e 	strb.w	r3, [sp, #46]	@ 0x2e
 80172c2:	f88d 302f 	strb.w	r3, [sp, #47]	@ 0x2f
 80172c6:	f88d 3030 	strb.w	r3, [sp, #48]	@ 0x30
 80172ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80172cc:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80172d0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80172d2:	f1b8 0f00 	cmp.w	r8, #0
 80172d6:	d002      	beq.n	80172de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe2>
 80172d8:	f108 0302 	add.w	r3, r8, #2
 80172dc:	9309      	str	r3, [sp, #36]	@ 0x24
 80172de:	b10d      	cbz	r5, 80172e4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0xe8>
 80172e0:	1c6b      	adds	r3, r5, #1
 80172e2:	9308      	str	r3, [sp, #32]
 80172e4:	ab0f      	add	r3, sp, #60	@ 0x3c
 80172e6:	9305      	str	r3, [sp, #20]
 80172e8:	f10d 0331 	add.w	r3, sp, #49	@ 0x31
 80172ec:	9304      	str	r3, [sp, #16]
 80172ee:	ab0e      	add	r3, sp, #56	@ 0x38
 80172f0:	9303      	str	r3, [sp, #12]
 80172f2:	ab0c      	add	r3, sp, #48	@ 0x30
 80172f4:	9302      	str	r3, [sp, #8]
 80172f6:	f10d 032f 	add.w	r3, sp, #47	@ 0x2f
 80172fa:	9301      	str	r3, [sp, #4]
 80172fc:	f10d 032e 	add.w	r3, sp, #46	@ 0x2e
 8017300:	9300      	str	r3, [sp, #0]
 8017302:	f10d 0232 	add.w	r2, sp, #50	@ 0x32
 8017306:	f10d 032d 	add.w	r3, sp, #45	@ 0x2d
 801730a:	a908      	add	r1, sp, #32
 801730c:	a809      	add	r0, sp, #36	@ 0x24
 801730e:	f7ff fd24 	bl	8016d5a <_ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRPKcRtRbS8_S8_S8_RiS8_S9_>
 8017312:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017314:	2b00      	cmp	r3, #0
 8017316:	da0b      	bge.n	8017330 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x134>
 8017318:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801731c:	edd3 7a00 	vldr	s15, [r3]
 8017320:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017324:	3401      	adds	r4, #1
 8017326:	ee17 3a90 	vmov	r3, s15
 801732a:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801732e:	930e      	str	r3, [sp, #56]	@ 0x38
 8017330:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8017332:	2b00      	cmp	r3, #0
 8017334:	da0b      	bge.n	801734e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x152>
 8017336:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801733a:	edd3 7a00 	vldr	s15, [r3]
 801733e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8017342:	3401      	adds	r4, #1
 8017344:	ee17 3a90 	vmov	r3, s15
 8017348:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801734c:	930f      	str	r3, [sp, #60]	@ 0x3c
 801734e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8017350:	b1b3      	cbz	r3, 8017380 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x184>
 8017352:	881a      	ldrh	r2, [r3, #0]
 8017354:	2a25      	cmp	r2, #37	@ 0x25
 8017356:	d018      	beq.n	801738a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x18e>
 8017358:	2a66      	cmp	r2, #102	@ 0x66
 801735a:	d01c      	beq.n	8017396 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x19a>
 801735c:	e9cd 5808 	strd	r5, r8, [sp, #32]
 8017360:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8017362:	f1b8 0f00 	cmp.w	r8, #0
 8017366:	f000 8136 	beq.w	80175d6 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3da>
 801736a:	f8b8 5000 	ldrh.w	r5, [r8]
 801736e:	f826 5013 	strh.w	r5, [r6, r3, lsl #1]
 8017372:	3301      	adds	r3, #1
 8017374:	e00d      	b.n	8017392 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x196>
 8017376:	b10d      	cbz	r5, 801737c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x180>
 8017378:	782a      	ldrb	r2, [r5, #0]
 801737a:	e77e      	b.n	801727a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 801737c:	462a      	mov	r2, r5
 801737e:	e77c      	b.n	801727a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x7e>
 8017380:	9b08      	ldr	r3, [sp, #32]
 8017382:	2b00      	cmp	r3, #0
 8017384:	d0ea      	beq.n	801735c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x160>
 8017386:	781a      	ldrb	r2, [r3, #0]
 8017388:	e7e4      	b.n	8017354 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x158>
 801738a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801738c:	f826 2013 	strh.w	r2, [r6, r3, lsl #1]
 8017390:	3302      	adds	r3, #2
 8017392:	930d      	str	r3, [sp, #52]	@ 0x34
 8017394:	e041      	b.n	801741a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x21e>
 8017396:	eb0b 0384 	add.w	r3, fp, r4, lsl #2
 801739a:	edd3 7a00 	vldr	s15, [r3]
 801739e:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80173a2:	9710      	str	r7, [sp, #64]	@ 0x40
 80173a4:	3401      	adds	r4, #1
 80173a6:	b923      	cbnz	r3, 80173b2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1b6>
 80173a8:	2301      	movs	r3, #1
 80173aa:	f88d 3031 	strb.w	r3, [sp, #49]	@ 0x31
 80173ae:	2306      	movs	r3, #6
 80173b0:	930f      	str	r3, [sp, #60]	@ 0x3c
 80173b2:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 80173b6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173ba:	bf48      	it	mi
 80173bc:	eef1 7a67 	vnegmi.f32	s15, s15
 80173c0:	eeb0 7ae7 	vabs.f32	s14, s15
 80173c4:	bf48      	it	mi
 80173c6:	232d      	movmi	r3, #45	@ 0x2d
 80173c8:	eeb4 7a45 	vcmp.f32	s14, s10
 80173cc:	bf48      	it	mi
 80173ce:	f8ad 3032 	strhmi.w	r3, [sp, #50]	@ 0x32
 80173d2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80173d6:	dd2b      	ble.n	8017430 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x234>
 80173d8:	4b3b      	ldr	r3, [pc, #236]	@ (80174c8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2cc>)
 80173da:	9311      	str	r3, [sp, #68]	@ 0x44
 80173dc:	2366      	movs	r3, #102	@ 0x66
 80173de:	9312      	str	r3, [sp, #72]	@ 0x48
 80173e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80173e2:	f8bd 1032 	ldrh.w	r1, [sp, #50]	@ 0x32
 80173e6:	2b00      	cmp	r3, #0
 80173e8:	f000 80ef 	beq.w	80175ca <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3ce>
 80173ec:	881a      	ldrh	r2, [r3, #0]
 80173ee:	f89d 3031 	ldrb.w	r3, [sp, #49]	@ 0x31
 80173f2:	a80d      	add	r0, sp, #52	@ 0x34
 80173f4:	9005      	str	r0, [sp, #20]
 80173f6:	f89d 002d 	ldrb.w	r0, [sp, #45]	@ 0x2d
 80173fa:	9004      	str	r0, [sp, #16]
 80173fc:	980e      	ldr	r0, [sp, #56]	@ 0x38
 80173fe:	9003      	str	r0, [sp, #12]
 8017400:	f89d 0030 	ldrb.w	r0, [sp, #48]	@ 0x30
 8017404:	9002      	str	r0, [sp, #8]
 8017406:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8017408:	9001      	str	r0, [sp, #4]
 801740a:	f89d 002f 	ldrb.w	r0, [sp, #47]	@ 0x2f
 801740e:	9000      	str	r0, [sp, #0]
 8017410:	e9cd a606 	strd	sl, r6, [sp, #24]
 8017414:	a810      	add	r0, sp, #64	@ 0x40
 8017416:	f7ff fbdd 	bl	8016bd4 <_ZN8touchgfx7Unicode13composeStringERPKtttbbibibRitPt>
 801741a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801741c:	b10b      	cbz	r3, 8017422 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x226>
 801741e:	3302      	adds	r3, #2
 8017420:	9309      	str	r3, [sp, #36]	@ 0x24
 8017422:	9b08      	ldr	r3, [sp, #32]
 8017424:	2b00      	cmp	r3, #0
 8017426:	f43f aefd 	beq.w	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 801742a:	3301      	adds	r3, #1
 801742c:	9308      	str	r3, [sp, #32]
 801742e:	e6f9      	b.n	8017224 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x28>
 8017430:	eef4 7a67 	vcmp.f32	s15, s15
 8017434:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017438:	d63a      	bvs.n	80174b0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2b4>
 801743a:	f10d 0846 	add.w	r8, sp, #70	@ 0x46
 801743e:	eeb2 7a04 	vmov.f32	s14, #36	@ 0x41200000  10.0
 8017442:	f8cd 8040 	str.w	r8, [sp, #64]	@ 0x40
 8017446:	eeb0 6a67 	vmov.f32	s12, s15
 801744a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801744e:	eef0 5a47 	vmov.f32	s11, s14
 8017452:	eeb4 6ac7 	vcmpe.f32	s12, s14
 8017456:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801745a:	da2d      	bge.n	80174b8 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2bc>
 801745c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 801745e:	eeb6 6a00 	vmov.f32	s12, #96	@ 0x3f000000  0.5
 8017462:	2100      	movs	r1, #0
 8017464:	eef0 4a46 	vmov.f32	s9, s12
 8017468:	ebaa 0202 	sub.w	r2, sl, r2
 801746c:	eef4 6ac6 	vcmpe.f32	s13, s12
 8017470:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017474:	b28b      	uxth	r3, r1
 8017476:	db2c      	blt.n	80174d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 8017478:	1a50      	subs	r0, r2, r1
 801747a:	2800      	cmp	r0, #0
 801747c:	dd29      	ble.n	80174d2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d6>
 801747e:	3101      	adds	r1, #1
 8017480:	2964      	cmp	r1, #100	@ 0x64
 8017482:	d025      	beq.n	80174d0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d4>
 8017484:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8017488:	eebd 7ac7 	vcvt.s32.f32	s14, s14
 801748c:	ee17 3a10 	vmov	r3, s14
 8017490:	2b09      	cmp	r3, #9
 8017492:	bfa8      	it	ge
 8017494:	2309      	movge	r3, #9
 8017496:	ee07 3a10 	vmov	s14, r3
 801749a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801749e:	f103 0030 	add.w	r0, r3, #48	@ 0x30
 80174a2:	eee7 7a66 	vfms.f32	s15, s14, s13
 80174a6:	f827 0011 	strh.w	r0, [r7, r1, lsl #1]
 80174aa:	eec6 6aa5 	vdiv.f32	s13, s13, s11
 80174ae:	e7dd      	b.n	801746c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x270>
 80174b0:	4b06      	ldr	r3, [pc, #24]	@ (80174cc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2d0>)
 80174b2:	9311      	str	r3, [sp, #68]	@ 0x44
 80174b4:	236e      	movs	r3, #110	@ 0x6e
 80174b6:	e792      	b.n	80173de <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e2>
 80174b8:	ee66 6a87 	vmul.f32	s13, s13, s14
 80174bc:	ee86 6a07 	vdiv.f32	s12, s12, s14
 80174c0:	e7c7      	b.n	8017452 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x256>
 80174c2:	bf00      	nop
 80174c4:	7f7fffff 	.word	0x7f7fffff
 80174c8:	006e0069 	.word	0x006e0069
 80174cc:	0061006e 	.word	0x0061006e
 80174d0:	2363      	movs	r3, #99	@ 0x63
 80174d2:	2a63      	cmp	r2, #99	@ 0x63
 80174d4:	bfd4      	ite	le
 80174d6:	ebc3 0202 	rsble	r2, r3, r2
 80174da:	f1c3 0263 	rsbgt	r2, r3, #99	@ 0x63
 80174de:	2a00      	cmp	r2, #0
 80174e0:	f103 0501 	add.w	r5, r3, #1
 80174e4:	dd57      	ble.n	8017596 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 80174e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80174e8:	2900      	cmp	r1, #0
 80174ea:	dd2b      	ble.n	8017544 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x348>
 80174ec:	f04f 0901 	mov.w	r9, #1
 80174f0:	230a      	movs	r3, #10
 80174f2:	f111 31ff 	adds.w	r1, r1, #4294967295
 80174f6:	d30c      	bcc.n	8017512 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x316>
 80174f8:	ee67 7aa5 	vmul.f32	s15, s15, s11
 80174fc:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8017500:	ee17 0a10 	vmov	r0, s14
 8017504:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 8017508:	fb03 0909 	mla	r9, r3, r9, r0
 801750c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8017510:	e7ef      	b.n	80174f2 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x2f6>
 8017512:	910f      	str	r1, [sp, #60]	@ 0x3c
 8017514:	230a      	movs	r3, #10
 8017516:	b292      	uxth	r2, r2
 8017518:	eb07 0145 	add.w	r1, r7, r5, lsl #1
 801751c:	4648      	mov	r0, r9
 801751e:	f7ff fb4d 	bl	8016bbc <_ZN8touchgfx7Unicode4itoaElPtti>
 8017522:	f1b9 0f01 	cmp.w	r9, #1
 8017526:	dc0b      	bgt.n	8017540 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x344>
 8017528:	f89d 302e 	ldrb.w	r3, [sp, #46]	@ 0x2e
 801752c:	2b00      	cmp	r3, #0
 801752e:	bf0c      	ite	eq
 8017530:	2300      	moveq	r3, #0
 8017532:	232e      	movne	r3, #46	@ 0x2e
 8017534:	aa44      	add	r2, sp, #272	@ 0x110
 8017536:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 801753a:	f825 3ccc 	strh.w	r3, [r5, #-204]
 801753e:	e015      	b.n	801756c <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x370>
 8017540:	232e      	movs	r3, #46	@ 0x2e
 8017542:	e7f7      	b.n	8017534 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x338>
 8017544:	2a01      	cmp	r2, #1
 8017546:	d026      	beq.n	8017596 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017548:	2b63      	cmp	r3, #99	@ 0x63
 801754a:	d024      	beq.n	8017596 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 801754c:	f89d 202e 	ldrb.w	r2, [sp, #46]	@ 0x2e
 8017550:	b30a      	cbz	r2, 8017596 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x39a>
 8017552:	aa44      	add	r2, sp, #272	@ 0x110
 8017554:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8017558:	222e      	movs	r2, #46	@ 0x2e
 801755a:	f825 2ccc 	strh.w	r2, [r5, #-204]
 801755e:	3302      	adds	r3, #2
 8017560:	aa44      	add	r2, sp, #272	@ 0x110
 8017562:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8017566:	2200      	movs	r2, #0
 8017568:	f823 2ccc 	strh.w	r2, [r3, #-204]
 801756c:	eef4 7ae4 	vcmpe.f32	s15, s9
 8017570:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8017574:	f6ff af34 	blt.w	80173e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8017578:	2300      	movs	r3, #0
 801757a:	f838 2b02 	ldrh.w	r2, [r8], #2
 801757e:	1c59      	adds	r1, r3, #1
 8017580:	b972      	cbnz	r2, 80175a0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a4>
 8017582:	b29b      	uxth	r3, r3
 8017584:	2130      	movs	r1, #48	@ 0x30
 8017586:	b96b      	cbnz	r3, 80175a4 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3a8>
 8017588:	2331      	movs	r3, #49	@ 0x31
 801758a:	f8ad 3044 	strh.w	r3, [sp, #68]	@ 0x44
 801758e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017590:	3b02      	subs	r3, #2
 8017592:	9310      	str	r3, [sp, #64]	@ 0x40
 8017594:	e724      	b.n	80173e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 8017596:	ab44      	add	r3, sp, #272	@ 0x110
 8017598:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801759c:	2300      	movs	r3, #0
 801759e:	e7cc      	b.n	801753a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x33e>
 80175a0:	460b      	mov	r3, r1
 80175a2:	e7ea      	b.n	801757a <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x37e>
 80175a4:	f837 2013 	ldrh.w	r2, [r7, r3, lsl #1]
 80175a8:	f1a2 0030 	sub.w	r0, r2, #48	@ 0x30
 80175ac:	2808      	cmp	r0, #8
 80175ae:	d806      	bhi.n	80175be <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x3c2>
 80175b0:	a944      	add	r1, sp, #272	@ 0x110
 80175b2:	eb01 0343 	add.w	r3, r1, r3, lsl #1
 80175b6:	3201      	adds	r2, #1
 80175b8:	f823 2ccc 	strh.w	r2, [r3, #-204]
 80175bc:	e710      	b.n	80173e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1e4>
 80175be:	2a39      	cmp	r2, #57	@ 0x39
 80175c0:	bf08      	it	eq
 80175c2:	f827 1013 	strheq.w	r1, [r7, r3, lsl #1]
 80175c6:	3b01      	subs	r3, #1
 80175c8:	e7dd      	b.n	8017586 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x38a>
 80175ca:	9a08      	ldr	r2, [sp, #32]
 80175cc:	2a00      	cmp	r2, #0
 80175ce:	f43f af0e 	beq.w	80173ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80175d2:	7812      	ldrb	r2, [r2, #0]
 80175d4:	e70b      	b.n	80173ee <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x1f2>
 80175d6:	2d00      	cmp	r5, #0
 80175d8:	f43f aec9 	beq.w	801736e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>
 80175dc:	782d      	ldrb	r5, [r5, #0]
 80175de:	e6c6      	b.n	801736e <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf+0x172>

080175e0 <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKcPKf>:
 80175e0:	b507      	push	{r0, r1, r2, lr}
 80175e2:	9300      	str	r3, [sp, #0]
 80175e4:	4613      	mov	r3, r2
 80175e6:	2200      	movs	r2, #0
 80175e8:	f7ff fe08 	bl	80171fc <_ZN8touchgfx7Unicode14snprintfFloatsEPttPKtPKcPKf>
 80175ec:	b003      	add	sp, #12
 80175ee:	f85d fb04 	ldr.w	pc, [sp], #4
	...

080175f4 <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE>:
 80175f4:	4b01      	ldr	r3, [pc, #4]	@ (80175fc <_ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE+0x8>)
 80175f6:	6018      	str	r0, [r3, #0]
 80175f8:	4770      	bx	lr
 80175fa:	bf00      	nop
 80175fc:	20002fb4 	.word	0x20002fb4

08017600 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>:
 8017600:	4b06      	ldr	r3, [pc, #24]	@ (801761c <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x1c>)
 8017602:	881a      	ldrh	r2, [r3, #0]
 8017604:	4282      	cmp	r2, r0
 8017606:	d807      	bhi.n	8017618 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x18>
 8017608:	4b05      	ldr	r3, [pc, #20]	@ (8017620 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt+0x20>)
 801760a:	881b      	ldrh	r3, [r3, #0]
 801760c:	4413      	add	r3, r2
 801760e:	4298      	cmp	r0, r3
 8017610:	bfac      	ite	ge
 8017612:	2000      	movge	r0, #0
 8017614:	2001      	movlt	r0, #1
 8017616:	4770      	bx	lr
 8017618:	2000      	movs	r0, #0
 801761a:	4770      	bx	lr
 801761c:	20002fd4 	.word	0x20002fd4
 8017620:	20002fd8 	.word	0x20002fd8

08017624 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt>:
 8017624:	b508      	push	{r3, lr}
 8017626:	4601      	mov	r1, r0
 8017628:	f7ff ffea 	bl	8017600 <_ZN8touchgfx6Bitmap15isDynamicBitmapEt>
 801762c:	b118      	cbz	r0, 8017636 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x12>
 801762e:	4b02      	ldr	r3, [pc, #8]	@ (8017638 <_ZN8touchgfx6Bitmap23dynamicBitmapGetAddressEt+0x14>)
 8017630:	681b      	ldr	r3, [r3, #0]
 8017632:	f853 0021 	ldr.w	r0, [r3, r1, lsl #2]
 8017636:	bd08      	pop	{r3, pc}
 8017638:	20002fb8 	.word	0x20002fb8

0801763c <_ZN8touchgfx6Bitmap10clearCacheEv>:
 801763c:	b5f0      	push	{r4, r5, r6, r7, lr}
 801763e:	4c24      	ldr	r4, [pc, #144]	@ (80176d0 <_ZN8touchgfx6Bitmap10clearCacheEv+0x94>)
 8017640:	6823      	ldr	r3, [r4, #0]
 8017642:	2b00      	cmp	r3, #0
 8017644:	d042      	beq.n	80176cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 8017646:	4a23      	ldr	r2, [pc, #140]	@ (80176d4 <_ZN8touchgfx6Bitmap10clearCacheEv+0x98>)
 8017648:	4d23      	ldr	r5, [pc, #140]	@ (80176d8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x9c>)
 801764a:	8811      	ldrh	r1, [r2, #0]
 801764c:	f8b5 c000 	ldrh.w	ip, [r5]
 8017650:	4822      	ldr	r0, [pc, #136]	@ (80176dc <_ZN8touchgfx6Bitmap10clearCacheEv+0xa0>)
 8017652:	4461      	add	r1, ip
 8017654:	1c4a      	adds	r2, r1, #1
 8017656:	f022 0201 	bic.w	r2, r2, #1
 801765a:	008f      	lsls	r7, r1, #2
 801765c:	0412      	lsls	r2, r2, #16
 801765e:	19de      	adds	r6, r3, r7
 8017660:	0c12      	lsrs	r2, r2, #16
 8017662:	eb07 0742 	add.w	r7, r7, r2, lsl #1
 8017666:	6006      	str	r6, [r0, #0]
 8017668:	4e1d      	ldr	r6, [pc, #116]	@ (80176e0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa4>)
 801766a:	19da      	adds	r2, r3, r7
 801766c:	6032      	str	r2, [r6, #0]
 801766e:	220e      	movs	r2, #14
 8017670:	fb02 f20c 	mul.w	r2, r2, ip
 8017674:	3203      	adds	r2, #3
 8017676:	f022 0203 	bic.w	r2, r2, #3
 801767a:	443a      	add	r2, r7
 801767c:	4f19      	ldr	r7, [pc, #100]	@ (80176e4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xa8>)
 801767e:	4413      	add	r3, r2
 8017680:	603b      	str	r3, [r7, #0]
 8017682:	4f19      	ldr	r7, [pc, #100]	@ (80176e8 <_ZN8touchgfx6Bitmap10clearCacheEv+0xac>)
 8017684:	2300      	movs	r3, #0
 8017686:	803b      	strh	r3, [r7, #0]
 8017688:	4f18      	ldr	r7, [pc, #96]	@ (80176ec <_ZN8touchgfx6Bitmap10clearCacheEv+0xb0>)
 801768a:	683f      	ldr	r7, [r7, #0]
 801768c:	1aba      	subs	r2, r7, r2
 801768e:	4f18      	ldr	r7, [pc, #96]	@ (80176f0 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb4>)
 8017690:	603a      	str	r2, [r7, #0]
 8017692:	4a18      	ldr	r2, [pc, #96]	@ (80176f4 <_ZN8touchgfx6Bitmap10clearCacheEv+0xb8>)
 8017694:	469c      	mov	ip, r3
 8017696:	8013      	strh	r3, [r2, #0]
 8017698:	f64f 77ff 	movw	r7, #65535	@ 0xffff
 801769c:	428b      	cmp	r3, r1
 801769e:	d10d      	bne.n	80176bc <_ZN8touchgfx6Bitmap10clearCacheEv+0x80>
 80176a0:	882d      	ldrh	r5, [r5, #0]
 80176a2:	6830      	ldr	r0, [r6, #0]
 80176a4:	2300      	movs	r3, #0
 80176a6:	240e      	movs	r4, #14
 80176a8:	429d      	cmp	r5, r3
 80176aa:	d90f      	bls.n	80176cc <_ZN8touchgfx6Bitmap10clearCacheEv+0x90>
 80176ac:	fb04 0203 	mla	r2, r4, r3, r0
 80176b0:	3301      	adds	r3, #1
 80176b2:	7b11      	ldrb	r1, [r2, #12]
 80176b4:	f36f 1145 	bfc	r1, #5, #1
 80176b8:	7311      	strb	r1, [r2, #12]
 80176ba:	e7f5      	b.n	80176a8 <_ZN8touchgfx6Bitmap10clearCacheEv+0x6c>
 80176bc:	6822      	ldr	r2, [r4, #0]
 80176be:	f842 c023 	str.w	ip, [r2, r3, lsl #2]
 80176c2:	6802      	ldr	r2, [r0, #0]
 80176c4:	f822 7013 	strh.w	r7, [r2, r3, lsl #1]
 80176c8:	3301      	adds	r3, #1
 80176ca:	e7e7      	b.n	801769c <_ZN8touchgfx6Bitmap10clearCacheEv+0x60>
 80176cc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80176ce:	bf00      	nop
 80176d0:	20002fb8 	.word	0x20002fb8
 80176d4:	20002fd4 	.word	0x20002fd4
 80176d8:	20002fd8 	.word	0x20002fd8
 80176dc:	20002fcc 	.word	0x20002fcc
 80176e0:	20002fbc 	.word	0x20002fbc
 80176e4:	20002fc4 	.word	0x20002fc4
 80176e8:	20002fd6 	.word	0x20002fd6
 80176ec:	20002fc0 	.word	0x20002fc0
 80176f0:	20002fd0 	.word	0x20002fd0
 80176f4:	20002fc8 	.word	0x20002fc8

080176f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>:
 80176f8:	4b06      	ldr	r3, [pc, #24]	@ (8017714 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x1c>)
 80176fa:	681b      	ldr	r3, [r3, #0]
 80176fc:	b943      	cbnz	r3, 8017710 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 80176fe:	b139      	cbz	r1, 8017710 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x18>
 8017700:	4b05      	ldr	r3, [pc, #20]	@ (8017718 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x20>)
 8017702:	801a      	strh	r2, [r3, #0]
 8017704:	4b05      	ldr	r3, [pc, #20]	@ (801771c <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x24>)
 8017706:	6019      	str	r1, [r3, #0]
 8017708:	4b05      	ldr	r3, [pc, #20]	@ (8017720 <_ZN8touchgfx6Bitmap8setCacheEPtmm+0x28>)
 801770a:	6018      	str	r0, [r3, #0]
 801770c:	f7ff bf96 	b.w	801763c <_ZN8touchgfx6Bitmap10clearCacheEv>
 8017710:	4770      	bx	lr
 8017712:	bf00      	nop
 8017714:	20002fc4 	.word	0x20002fc4
 8017718:	20002fd8 	.word	0x20002fd8
 801771c:	20002fc0 	.word	0x20002fc0
 8017720:	20002fb8 	.word	0x20002fb8

08017724 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm>:
 8017724:	b470      	push	{r4, r5, r6}
 8017726:	4c07      	ldr	r4, [pc, #28]	@ (8017744 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x20>)
 8017728:	6826      	ldr	r6, [r4, #0]
 801772a:	4605      	mov	r5, r0
 801772c:	4610      	mov	r0, r2
 801772e:	9a03      	ldr	r2, [sp, #12]
 8017730:	b936      	cbnz	r6, 8017740 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x1c>
 8017732:	6025      	str	r5, [r4, #0]
 8017734:	4c04      	ldr	r4, [pc, #16]	@ (8017748 <_ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtmm+0x24>)
 8017736:	8021      	strh	r1, [r4, #0]
 8017738:	bc70      	pop	{r4, r5, r6}
 801773a:	4619      	mov	r1, r3
 801773c:	f7ff bfdc 	b.w	80176f8 <_ZN8touchgfx6Bitmap8setCacheEPtmm>
 8017740:	bc70      	pop	{r4, r5, r6}
 8017742:	4770      	bx	lr
 8017744:	20002fdc 	.word	0x20002fdc
 8017748:	20002fd4 	.word	0x20002fd4

0801774c <_ZNK8touchgfx6Bitmap8getWidthEv>:
 801774c:	4a12      	ldr	r2, [pc, #72]	@ (8017798 <_ZNK8touchgfx6Bitmap8getWidthEv+0x4c>)
 801774e:	8803      	ldrh	r3, [r0, #0]
 8017750:	8812      	ldrh	r2, [r2, #0]
 8017752:	4293      	cmp	r3, r2
 8017754:	d207      	bcs.n	8017766 <_ZNK8touchgfx6Bitmap8getWidthEv+0x1a>
 8017756:	4a11      	ldr	r2, [pc, #68]	@ (801779c <_ZNK8touchgfx6Bitmap8getWidthEv+0x50>)
 8017758:	6812      	ldr	r2, [r2, #0]
 801775a:	2114      	movs	r1, #20
 801775c:	fb01 2303 	mla	r3, r1, r3, r2
 8017760:	f9b3 0008 	ldrsh.w	r0, [r3, #8]
 8017764:	4770      	bx	lr
 8017766:	490e      	ldr	r1, [pc, #56]	@ (80177a0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x54>)
 8017768:	8809      	ldrh	r1, [r1, #0]
 801776a:	4411      	add	r1, r2
 801776c:	428b      	cmp	r3, r1
 801776e:	da04      	bge.n	801777a <_ZNK8touchgfx6Bitmap8getWidthEv+0x2e>
 8017770:	1a9b      	subs	r3, r3, r2
 8017772:	4a0c      	ldr	r2, [pc, #48]	@ (80177a4 <_ZNK8touchgfx6Bitmap8getWidthEv+0x58>)
 8017774:	210e      	movs	r1, #14
 8017776:	6812      	ldr	r2, [r2, #0]
 8017778:	e7f0      	b.n	801775c <_ZNK8touchgfx6Bitmap8getWidthEv+0x10>
 801777a:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801777e:	4293      	cmp	r3, r2
 8017780:	d108      	bne.n	8017794 <_ZNK8touchgfx6Bitmap8getWidthEv+0x48>
 8017782:	4b09      	ldr	r3, [pc, #36]	@ (80177a8 <_ZNK8touchgfx6Bitmap8getWidthEv+0x5c>)
 8017784:	781b      	ldrb	r3, [r3, #0]
 8017786:	b91b      	cbnz	r3, 8017790 <_ZNK8touchgfx6Bitmap8getWidthEv+0x44>
 8017788:	4b08      	ldr	r3, [pc, #32]	@ (80177ac <_ZNK8touchgfx6Bitmap8getWidthEv+0x60>)
 801778a:	f9b3 0000 	ldrsh.w	r0, [r3]
 801778e:	4770      	bx	lr
 8017790:	4b07      	ldr	r3, [pc, #28]	@ (80177b0 <_ZNK8touchgfx6Bitmap8getWidthEv+0x64>)
 8017792:	e7fa      	b.n	801778a <_ZNK8touchgfx6Bitmap8getWidthEv+0x3e>
 8017794:	2000      	movs	r0, #0
 8017796:	4770      	bx	lr
 8017798:	20002fd4 	.word	0x20002fd4
 801779c:	20002fdc 	.word	0x20002fdc
 80177a0:	20002fd8 	.word	0x20002fd8
 80177a4:	20002fbc 	.word	0x20002fbc
 80177a8:	20002f4c 	.word	0x20002f4c
 80177ac:	20002f4e 	.word	0x20002f4e
 80177b0:	20002f50 	.word	0x20002f50

080177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>:
 80177b4:	4a12      	ldr	r2, [pc, #72]	@ (8017800 <_ZNK8touchgfx6Bitmap9getHeightEv+0x4c>)
 80177b6:	8803      	ldrh	r3, [r0, #0]
 80177b8:	8812      	ldrh	r2, [r2, #0]
 80177ba:	4293      	cmp	r3, r2
 80177bc:	d207      	bcs.n	80177ce <_ZNK8touchgfx6Bitmap9getHeightEv+0x1a>
 80177be:	4a11      	ldr	r2, [pc, #68]	@ (8017804 <_ZNK8touchgfx6Bitmap9getHeightEv+0x50>)
 80177c0:	6812      	ldr	r2, [r2, #0]
 80177c2:	2114      	movs	r1, #20
 80177c4:	fb01 2303 	mla	r3, r1, r3, r2
 80177c8:	f9b3 000a 	ldrsh.w	r0, [r3, #10]
 80177cc:	4770      	bx	lr
 80177ce:	490e      	ldr	r1, [pc, #56]	@ (8017808 <_ZNK8touchgfx6Bitmap9getHeightEv+0x54>)
 80177d0:	8809      	ldrh	r1, [r1, #0]
 80177d2:	4411      	add	r1, r2
 80177d4:	428b      	cmp	r3, r1
 80177d6:	da04      	bge.n	80177e2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x2e>
 80177d8:	1a9b      	subs	r3, r3, r2
 80177da:	4a0c      	ldr	r2, [pc, #48]	@ (801780c <_ZNK8touchgfx6Bitmap9getHeightEv+0x58>)
 80177dc:	210e      	movs	r1, #14
 80177de:	6812      	ldr	r2, [r2, #0]
 80177e0:	e7f0      	b.n	80177c4 <_ZNK8touchgfx6Bitmap9getHeightEv+0x10>
 80177e2:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 80177e6:	4293      	cmp	r3, r2
 80177e8:	d108      	bne.n	80177fc <_ZNK8touchgfx6Bitmap9getHeightEv+0x48>
 80177ea:	4b09      	ldr	r3, [pc, #36]	@ (8017810 <_ZNK8touchgfx6Bitmap9getHeightEv+0x5c>)
 80177ec:	781b      	ldrb	r3, [r3, #0]
 80177ee:	b91b      	cbnz	r3, 80177f8 <_ZNK8touchgfx6Bitmap9getHeightEv+0x44>
 80177f0:	4b08      	ldr	r3, [pc, #32]	@ (8017814 <_ZNK8touchgfx6Bitmap9getHeightEv+0x60>)
 80177f2:	f9b3 0000 	ldrsh.w	r0, [r3]
 80177f6:	4770      	bx	lr
 80177f8:	4b07      	ldr	r3, [pc, #28]	@ (8017818 <_ZNK8touchgfx6Bitmap9getHeightEv+0x64>)
 80177fa:	e7fa      	b.n	80177f2 <_ZNK8touchgfx6Bitmap9getHeightEv+0x3e>
 80177fc:	2000      	movs	r0, #0
 80177fe:	4770      	bx	lr
 8017800:	20002fd4 	.word	0x20002fd4
 8017804:	20002fdc 	.word	0x20002fdc
 8017808:	20002fd8 	.word	0x20002fd8
 801780c:	20002fbc 	.word	0x20002fbc
 8017810:	20002f4c 	.word	0x20002f4c
 8017814:	20002f50 	.word	0x20002f50
 8017818:	20002f4e 	.word	0x20002f4e

0801781c <_ZNK8touchgfx6Bitmap12getSolidRectEv>:
 801781c:	b530      	push	{r4, r5, lr}
 801781e:	4a22      	ldr	r2, [pc, #136]	@ (80178a8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x8c>)
 8017820:	880b      	ldrh	r3, [r1, #0]
 8017822:	8812      	ldrh	r2, [r2, #0]
 8017824:	4293      	cmp	r3, r2
 8017826:	d213      	bcs.n	8017850 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x34>
 8017828:	4a20      	ldr	r2, [pc, #128]	@ (80178ac <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x90>)
 801782a:	6812      	ldr	r2, [r2, #0]
 801782c:	2114      	movs	r1, #20
 801782e:	fb01 2303 	mla	r3, r1, r3, r2
 8017832:	8a1a      	ldrh	r2, [r3, #16]
 8017834:	f9b3 400c 	ldrsh.w	r4, [r3, #12]
 8017838:	f9b3 100e 	ldrsh.w	r1, [r3, #14]
 801783c:	8a5b      	ldrh	r3, [r3, #18]
 801783e:	8004      	strh	r4, [r0, #0]
 8017840:	f3c2 020c 	ubfx	r2, r2, #0, #13
 8017844:	f3c3 030c 	ubfx	r3, r3, #0, #13
 8017848:	8041      	strh	r1, [r0, #2]
 801784a:	8082      	strh	r2, [r0, #4]
 801784c:	80c3      	strh	r3, [r0, #6]
 801784e:	e024      	b.n	801789a <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x7e>
 8017850:	4917      	ldr	r1, [pc, #92]	@ (80178b0 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x94>)
 8017852:	8809      	ldrh	r1, [r1, #0]
 8017854:	4411      	add	r1, r2
 8017856:	428b      	cmp	r3, r1
 8017858:	da10      	bge.n	801787c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x60>
 801785a:	1a9b      	subs	r3, r3, r2
 801785c:	220e      	movs	r2, #14
 801785e:	4353      	muls	r3, r2
 8017860:	4a14      	ldr	r2, [pc, #80]	@ (80178b4 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x98>)
 8017862:	6811      	ldr	r1, [r2, #0]
 8017864:	18ca      	adds	r2, r1, r3
 8017866:	5ecd      	ldrsh	r5, [r1, r3]
 8017868:	f9b2 4002 	ldrsh.w	r4, [r2, #2]
 801786c:	f9b2 1004 	ldrsh.w	r1, [r2, #4]
 8017870:	f9b2 3006 	ldrsh.w	r3, [r2, #6]
 8017874:	8005      	strh	r5, [r0, #0]
 8017876:	8044      	strh	r4, [r0, #2]
 8017878:	8081      	strh	r1, [r0, #4]
 801787a:	e7e7      	b.n	801784c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 801787c:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 8017880:	4293      	cmp	r3, r2
 8017882:	d10b      	bne.n	801789c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x80>
 8017884:	4b0c      	ldr	r3, [pc, #48]	@ (80178b8 <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x9c>)
 8017886:	f9b3 1000 	ldrsh.w	r1, [r3]
 801788a:	4b0c      	ldr	r3, [pc, #48]	@ (80178bc <_ZNK8touchgfx6Bitmap12getSolidRectEv+0xa0>)
 801788c:	8081      	strh	r1, [r0, #4]
 801788e:	f9b3 2000 	ldrsh.w	r2, [r3]
 8017892:	80c2      	strh	r2, [r0, #6]
 8017894:	2300      	movs	r3, #0
 8017896:	8003      	strh	r3, [r0, #0]
 8017898:	8043      	strh	r3, [r0, #2]
 801789a:	bd30      	pop	{r4, r5, pc}
 801789c:	2300      	movs	r3, #0
 801789e:	8003      	strh	r3, [r0, #0]
 80178a0:	8043      	strh	r3, [r0, #2]
 80178a2:	8083      	strh	r3, [r0, #4]
 80178a4:	e7d2      	b.n	801784c <_ZNK8touchgfx6Bitmap12getSolidRectEv+0x30>
 80178a6:	bf00      	nop
 80178a8:	20002fd4 	.word	0x20002fd4
 80178ac:	20002fdc 	.word	0x20002fdc
 80178b0:	20002fd8 	.word	0x20002fd8
 80178b4:	20002fbc 	.word	0x20002fbc
 80178b8:	20002f48 	.word	0x20002f48
 80178bc:	20002f4a 	.word	0x20002f4a

080178c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>:
 80178c0:	4a17      	ldr	r2, [pc, #92]	@ (8017920 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x60>)
 80178c2:	8803      	ldrh	r3, [r0, #0]
 80178c4:	8812      	ldrh	r2, [r2, #0]
 80178c6:	4293      	cmp	r3, r2
 80178c8:	d213      	bcs.n	80178f2 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x32>
 80178ca:	4a16      	ldr	r2, [pc, #88]	@ (8017924 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x64>)
 80178cc:	6812      	ldr	r2, [r2, #0]
 80178ce:	2114      	movs	r1, #20
 80178d0:	fb01 2303 	mla	r3, r1, r3, r2
 80178d4:	8a1a      	ldrh	r2, [r3, #16]
 80178d6:	8919      	ldrh	r1, [r3, #8]
 80178d8:	f3c2 020c 	ubfx	r2, r2, #0, #13
 80178dc:	428a      	cmp	r2, r1
 80178de:	db1d      	blt.n	801791c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 80178e0:	8a58      	ldrh	r0, [r3, #18]
 80178e2:	f3c0 000c 	ubfx	r0, r0, #0, #13
 80178e6:	895b      	ldrh	r3, [r3, #10]
 80178e8:	4298      	cmp	r0, r3
 80178ea:	bfac      	ite	ge
 80178ec:	2000      	movge	r0, #0
 80178ee:	2001      	movlt	r0, #1
 80178f0:	4770      	bx	lr
 80178f2:	490d      	ldr	r1, [pc, #52]	@ (8017928 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x68>)
 80178f4:	8809      	ldrh	r1, [r1, #0]
 80178f6:	4411      	add	r1, r2
 80178f8:	428b      	cmp	r3, r1
 80178fa:	da0d      	bge.n	8017918 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x58>
 80178fc:	1a9b      	subs	r3, r3, r2
 80178fe:	4a0b      	ldr	r2, [pc, #44]	@ (801792c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x6c>)
 8017900:	6812      	ldr	r2, [r2, #0]
 8017902:	210e      	movs	r1, #14
 8017904:	fb01 2303 	mla	r3, r1, r3, r2
 8017908:	f9b3 1004 	ldrsh.w	r1, [r3, #4]
 801790c:	891a      	ldrh	r2, [r3, #8]
 801790e:	4291      	cmp	r1, r2
 8017910:	db04      	blt.n	801791c <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x5c>
 8017912:	f9b3 0006 	ldrsh.w	r0, [r3, #6]
 8017916:	e7e6      	b.n	80178e6 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv+0x26>
 8017918:	2000      	movs	r0, #0
 801791a:	4770      	bx	lr
 801791c:	2001      	movs	r0, #1
 801791e:	4770      	bx	lr
 8017920:	20002fd4 	.word	0x20002fd4
 8017924:	20002fdc 	.word	0x20002fdc
 8017928:	20002fd8 	.word	0x20002fd8
 801792c:	20002fbc 	.word	0x20002fbc

08017930 <_ZNK8touchgfx6Bitmap7getDataEv>:
 8017930:	4a12      	ldr	r2, [pc, #72]	@ (801797c <_ZNK8touchgfx6Bitmap7getDataEv+0x4c>)
 8017932:	8803      	ldrh	r3, [r0, #0]
 8017934:	8811      	ldrh	r1, [r2, #0]
 8017936:	428b      	cmp	r3, r1
 8017938:	d20b      	bcs.n	8017952 <_ZNK8touchgfx6Bitmap7getDataEv+0x22>
 801793a:	4a11      	ldr	r2, [pc, #68]	@ (8017980 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801793c:	6812      	ldr	r2, [r2, #0]
 801793e:	b112      	cbz	r2, 8017946 <_ZNK8touchgfx6Bitmap7getDataEv+0x16>
 8017940:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017944:	b9c0      	cbnz	r0, 8017978 <_ZNK8touchgfx6Bitmap7getDataEv+0x48>
 8017946:	4a0f      	ldr	r2, [pc, #60]	@ (8017984 <_ZNK8touchgfx6Bitmap7getDataEv+0x54>)
 8017948:	6811      	ldr	r1, [r2, #0]
 801794a:	2214      	movs	r2, #20
 801794c:	4353      	muls	r3, r2
 801794e:	58c8      	ldr	r0, [r1, r3]
 8017950:	4770      	bx	lr
 8017952:	4a0d      	ldr	r2, [pc, #52]	@ (8017988 <_ZNK8touchgfx6Bitmap7getDataEv+0x58>)
 8017954:	8812      	ldrh	r2, [r2, #0]
 8017956:	440a      	add	r2, r1
 8017958:	4293      	cmp	r3, r2
 801795a:	da04      	bge.n	8017966 <_ZNK8touchgfx6Bitmap7getDataEv+0x36>
 801795c:	4a08      	ldr	r2, [pc, #32]	@ (8017980 <_ZNK8touchgfx6Bitmap7getDataEv+0x50>)
 801795e:	6812      	ldr	r2, [r2, #0]
 8017960:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8017964:	4770      	bx	lr
 8017966:	f64f 72fe 	movw	r2, #65534	@ 0xfffe
 801796a:	4293      	cmp	r3, r2
 801796c:	d103      	bne.n	8017976 <_ZNK8touchgfx6Bitmap7getDataEv+0x46>
 801796e:	4b07      	ldr	r3, [pc, #28]	@ (801798c <_ZNK8touchgfx6Bitmap7getDataEv+0x5c>)
 8017970:	681b      	ldr	r3, [r3, #0]
 8017972:	6c58      	ldr	r0, [r3, #68]	@ 0x44
 8017974:	4770      	bx	lr
 8017976:	2000      	movs	r0, #0
 8017978:	4770      	bx	lr
 801797a:	bf00      	nop
 801797c:	20002fd4 	.word	0x20002fd4
 8017980:	20002fb8 	.word	0x20002fb8
 8017984:	20002fdc 	.word	0x20002fdc
 8017988:	20002fd8 	.word	0x20002fd8
 801798c:	20002f54 	.word	0x20002f54

08017990 <_ZNK8touchgfx6Bitmap12getExtraDataEv>:
 8017990:	4b24      	ldr	r3, [pc, #144]	@ (8017a24 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x94>)
 8017992:	8802      	ldrh	r2, [r0, #0]
 8017994:	8818      	ldrh	r0, [r3, #0]
 8017996:	4282      	cmp	r2, r0
 8017998:	d221      	bcs.n	80179de <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x4e>
 801799a:	4b23      	ldr	r3, [pc, #140]	@ (8017a28 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x98>)
 801799c:	6819      	ldr	r1, [r3, #0]
 801799e:	2314      	movs	r3, #20
 80179a0:	fb03 1302 	mla	r3, r3, r2, r1
 80179a4:	6858      	ldr	r0, [r3, #4]
 80179a6:	2800      	cmp	r0, #0
 80179a8:	d03a      	beq.n	8017a20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80179aa:	4920      	ldr	r1, [pc, #128]	@ (8017a2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 80179ac:	6809      	ldr	r1, [r1, #0]
 80179ae:	2900      	cmp	r1, #0
 80179b0:	d036      	beq.n	8017a20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80179b2:	f851 1022 	ldr.w	r1, [r1, r2, lsl #2]
 80179b6:	2900      	cmp	r1, #0
 80179b8:	d032      	beq.n	8017a20 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x90>
 80179ba:	891a      	ldrh	r2, [r3, #8]
 80179bc:	8958      	ldrh	r0, [r3, #10]
 80179be:	4350      	muls	r0, r2
 80179c0:	7c5a      	ldrb	r2, [r3, #17]
 80179c2:	7cdb      	ldrb	r3, [r3, #19]
 80179c4:	0952      	lsrs	r2, r2, #5
 80179c6:	f3c3 1342 	ubfx	r3, r3, #5, #3
 80179ca:	ea43 03c2 	orr.w	r3, r3, r2, lsl #3
 80179ce:	2b0b      	cmp	r3, #11
 80179d0:	bf18      	it	ne
 80179d2:	0040      	lslne	r0, r0, #1
 80179d4:	3003      	adds	r0, #3
 80179d6:	f020 0003 	bic.w	r0, r0, #3
 80179da:	4408      	add	r0, r1
 80179dc:	4770      	bx	lr
 80179de:	4b14      	ldr	r3, [pc, #80]	@ (8017a30 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa0>)
 80179e0:	881b      	ldrh	r3, [r3, #0]
 80179e2:	4403      	add	r3, r0
 80179e4:	429a      	cmp	r2, r3
 80179e6:	da1a      	bge.n	8017a1e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 80179e8:	4b12      	ldr	r3, [pc, #72]	@ (8017a34 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0xa4>)
 80179ea:	681b      	ldr	r3, [r3, #0]
 80179ec:	1a10      	subs	r0, r2, r0
 80179ee:	210e      	movs	r1, #14
 80179f0:	fb01 3000 	mla	r0, r1, r0, r3
 80179f4:	7b03      	ldrb	r3, [r0, #12]
 80179f6:	f003 031f 	and.w	r3, r3, #31
 80179fa:	2b0b      	cmp	r3, #11
 80179fc:	d10b      	bne.n	8017a16 <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x86>
 80179fe:	8903      	ldrh	r3, [r0, #8]
 8017a00:	8940      	ldrh	r0, [r0, #10]
 8017a02:	4358      	muls	r0, r3
 8017a04:	4b09      	ldr	r3, [pc, #36]	@ (8017a2c <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x9c>)
 8017a06:	6819      	ldr	r1, [r3, #0]
 8017a08:	3003      	adds	r0, #3
 8017a0a:	f020 0303 	bic.w	r3, r0, #3
 8017a0e:	f851 0022 	ldr.w	r0, [r1, r2, lsl #2]
 8017a12:	4418      	add	r0, r3
 8017a14:	4770      	bx	lr
 8017a16:	2b0d      	cmp	r3, #13
 8017a18:	d101      	bne.n	8017a1e <_ZNK8touchgfx6Bitmap12getExtraDataEv+0x8e>
 8017a1a:	300d      	adds	r0, #13
 8017a1c:	4770      	bx	lr
 8017a1e:	2000      	movs	r0, #0
 8017a20:	4770      	bx	lr
 8017a22:	bf00      	nop
 8017a24:	20002fd4 	.word	0x20002fd4
 8017a28:	20002fdc 	.word	0x20002fdc
 8017a2c:	20002fb8 	.word	0x20002fb8
 8017a30:	20002fd8 	.word	0x20002fd8
 8017a34:	20002fbc 	.word	0x20002fbc

08017a38 <_ZNK8touchgfx6Bitmap9getFormatEv>:
 8017a38:	b510      	push	{r4, lr}
 8017a3a:	4b1f      	ldr	r3, [pc, #124]	@ (8017ab8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x80>)
 8017a3c:	8802      	ldrh	r2, [r0, #0]
 8017a3e:	881b      	ldrh	r3, [r3, #0]
 8017a40:	429a      	cmp	r2, r3
 8017a42:	d21a      	bcs.n	8017a7a <_ZNK8touchgfx6Bitmap9getFormatEv+0x42>
 8017a44:	4b1d      	ldr	r3, [pc, #116]	@ (8017abc <_ZNK8touchgfx6Bitmap9getFormatEv+0x84>)
 8017a46:	681b      	ldr	r3, [r3, #0]
 8017a48:	2114      	movs	r1, #20
 8017a4a:	fb01 3102 	mla	r1, r1, r2, r3
 8017a4e:	7c4b      	ldrb	r3, [r1, #17]
 8017a50:	0958      	lsrs	r0, r3, #5
 8017a52:	7ccb      	ldrb	r3, [r1, #19]
 8017a54:	491a      	ldr	r1, [pc, #104]	@ (8017ac0 <_ZNK8touchgfx6Bitmap9getFormatEv+0x88>)
 8017a56:	f3c3 1342 	ubfx	r3, r3, #5, #3
 8017a5a:	6809      	ldr	r1, [r1, #0]
 8017a5c:	ea43 03c0 	orr.w	r3, r3, r0, lsl #3
 8017a60:	b2d8      	uxtb	r0, r3
 8017a62:	b149      	cbz	r1, 8017a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017a64:	f851 2022 	ldr.w	r2, [r1, r2, lsl #2]
 8017a68:	b132      	cbz	r2, 8017a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017a6a:	2b0e      	cmp	r3, #14
 8017a6c:	d021      	beq.n	8017ab2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8017a6e:	280f      	cmp	r0, #15
 8017a70:	d01d      	beq.n	8017aae <_ZNK8touchgfx6Bitmap9getFormatEv+0x76>
 8017a72:	2810      	cmp	r0, #16
 8017a74:	bf08      	it	eq
 8017a76:	2002      	moveq	r0, #2
 8017a78:	bd10      	pop	{r4, pc}
 8017a7a:	4912      	ldr	r1, [pc, #72]	@ (8017ac4 <_ZNK8touchgfx6Bitmap9getFormatEv+0x8c>)
 8017a7c:	8809      	ldrh	r1, [r1, #0]
 8017a7e:	4419      	add	r1, r3
 8017a80:	428a      	cmp	r2, r1
 8017a82:	da09      	bge.n	8017a98 <_ZNK8touchgfx6Bitmap9getFormatEv+0x60>
 8017a84:	1ad3      	subs	r3, r2, r3
 8017a86:	4a10      	ldr	r2, [pc, #64]	@ (8017ac8 <_ZNK8touchgfx6Bitmap9getFormatEv+0x90>)
 8017a88:	6812      	ldr	r2, [r2, #0]
 8017a8a:	210e      	movs	r1, #14
 8017a8c:	fb01 2303 	mla	r3, r1, r3, r2
 8017a90:	7b18      	ldrb	r0, [r3, #12]
 8017a92:	f000 001f 	and.w	r0, r0, #31
 8017a96:	e7ef      	b.n	8017a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017a98:	f64f 73fe 	movw	r3, #65534	@ 0xfffe
 8017a9c:	429a      	cmp	r2, r3
 8017a9e:	d108      	bne.n	8017ab2 <_ZNK8touchgfx6Bitmap9getFormatEv+0x7a>
 8017aa0:	f7f0 fe86 	bl	80087b0 <_ZN8touchgfx3HAL3lcdEv>
 8017aa4:	6803      	ldr	r3, [r0, #0]
 8017aa6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8017aaa:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8017aac:	4718      	bx	r3
 8017aae:	2001      	movs	r0, #1
 8017ab0:	e7e2      	b.n	8017a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017ab2:	2000      	movs	r0, #0
 8017ab4:	e7e0      	b.n	8017a78 <_ZNK8touchgfx6Bitmap9getFormatEv+0x40>
 8017ab6:	bf00      	nop
 8017ab8:	20002fd4 	.word	0x20002fd4
 8017abc:	20002fdc 	.word	0x20002fdc
 8017ac0:	20002fb8 	.word	0x20002fb8
 8017ac4:	20002fd8 	.word	0x20002fd8
 8017ac8:	20002fbc 	.word	0x20002fbc

08017acc <_ZNK8touchgfx8LCD16bpp8bitDepthEv>:
 8017acc:	2010      	movs	r0, #16
 8017ace:	4770      	bx	lr

08017ad0 <_ZNK8touchgfx8LCD16bpp17framebufferFormatEv>:
 8017ad0:	2000      	movs	r0, #0
 8017ad2:	4770      	bx	lr

08017ad4 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv>:
 8017ad4:	4b02      	ldr	r3, [pc, #8]	@ (8017ae0 <_ZNK8touchgfx8LCD16bpp17framebufferStrideEv+0xc>)
 8017ad6:	8818      	ldrh	r0, [r3, #0]
 8017ad8:	0040      	lsls	r0, r0, #1
 8017ada:	b280      	uxth	r0, r0
 8017adc:	4770      	bx	lr
 8017ade:	bf00      	nop
 8017ae0:	20002f4e 	.word	0x20002f4e

08017ae4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth>:
 8017ae4:	2bff      	cmp	r3, #255	@ 0xff
 8017ae6:	d05e      	beq.n	8017ba6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xc2>
 8017ae8:	2a0b      	cmp	r2, #11
 8017aea:	d058      	beq.n	8017b9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8017aec:	d80e      	bhi.n	8017b0c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x28>
 8017aee:	2a03      	cmp	r2, #3
 8017af0:	d04d      	beq.n	8017b8e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xaa>
 8017af2:	d804      	bhi.n	8017afe <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x1a>
 8017af4:	2a01      	cmp	r2, #1
 8017af6:	d04c      	beq.n	8017b92 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xae>
 8017af8:	d94d      	bls.n	8017b96 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb2>
 8017afa:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8017afc:	e031      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017afe:	2a09      	cmp	r2, #9
 8017b00:	d04d      	beq.n	8017b9e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xba>
 8017b02:	d84a      	bhi.n	8017b9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8017b04:	2a08      	cmp	r2, #8
 8017b06:	d048      	beq.n	8017b9a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xb6>
 8017b08:	2300      	movs	r3, #0
 8017b0a:	e02a      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b0c:	2a2f      	cmp	r2, #47	@ 0x2f
 8017b0e:	d02c      	beq.n	8017b6a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x86>
 8017b10:	d811      	bhi.n	8017b36 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x52>
 8017b12:	2a2d      	cmp	r2, #45	@ 0x2d
 8017b14:	d018      	beq.n	8017b48 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x64>
 8017b16:	d831      	bhi.n	8017b7c <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x98>
 8017b18:	2a2c      	cmp	r2, #44	@ 0x2c
 8017b1a:	d1f5      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b1c:	684a      	ldr	r2, [r1, #4]
 8017b1e:	7813      	ldrb	r3, [r2, #0]
 8017b20:	7852      	ldrb	r2, [r2, #1]
 8017b22:	2a00      	cmp	r2, #0
 8017b24:	d1f0      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b26:	2b01      	cmp	r3, #1
 8017b28:	d01d      	beq.n	8017b66 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x82>
 8017b2a:	2b00      	cmp	r3, #0
 8017b2c:	d02d      	beq.n	8017b8a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xa6>
 8017b2e:	2b02      	cmp	r3, #2
 8017b30:	d1ea      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b32:	68c3      	ldr	r3, [r0, #12]
 8017b34:	e015      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b36:	2a31      	cmp	r2, #49	@ 0x31
 8017b38:	d004      	beq.n	8017b44 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x60>
 8017b3a:	d332      	bcc.n	8017ba2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8017b3c:	2a32      	cmp	r2, #50	@ 0x32
 8017b3e:	d030      	beq.n	8017ba2 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xbe>
 8017b40:	2a33      	cmp	r2, #51	@ 0x33
 8017b42:	d1e1      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b44:	6f43      	ldr	r3, [r0, #116]	@ 0x74
 8017b46:	e00c      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b48:	684a      	ldr	r2, [r1, #4]
 8017b4a:	7813      	ldrb	r3, [r2, #0]
 8017b4c:	7852      	ldrb	r2, [r2, #1]
 8017b4e:	2a00      	cmp	r2, #0
 8017b50:	d1da      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b52:	2b01      	cmp	r3, #1
 8017b54:	d004      	beq.n	8017b60 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7c>
 8017b56:	d30f      	bcc.n	8017b78 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x94>
 8017b58:	2b02      	cmp	r3, #2
 8017b5a:	d1d5      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b5c:	6943      	ldr	r3, [r0, #20]
 8017b5e:	e000      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b60:	6a43      	ldr	r3, [r0, #36]	@ 0x24
 8017b62:	4618      	mov	r0, r3
 8017b64:	4770      	bx	lr
 8017b66:	69c3      	ldr	r3, [r0, #28]
 8017b68:	e7fb      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b6a:	684b      	ldr	r3, [r1, #4]
 8017b6c:	781a      	ldrb	r2, [r3, #0]
 8017b6e:	785b      	ldrb	r3, [r3, #1]
 8017b70:	2b00      	cmp	r3, #0
 8017b72:	d1c9      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b74:	2a00      	cmp	r2, #0
 8017b76:	d1f4      	bne.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b78:	6b43      	ldr	r3, [r0, #52]	@ 0x34
 8017b7a:	e7f2      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b7c:	684b      	ldr	r3, [r1, #4]
 8017b7e:	781a      	ldrb	r2, [r3, #0]
 8017b80:	785b      	ldrb	r3, [r3, #1]
 8017b82:	2b00      	cmp	r3, #0
 8017b84:	d1c0      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017b86:	2a00      	cmp	r2, #0
 8017b88:	d1eb      	bne.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b8a:	6ac3      	ldr	r3, [r0, #44]	@ 0x2c
 8017b8c:	e7e9      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b8e:	6cc3      	ldr	r3, [r0, #76]	@ 0x4c
 8017b90:	e7e7      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b92:	6d43      	ldr	r3, [r0, #84]	@ 0x54
 8017b94:	e7e5      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b96:	6c43      	ldr	r3, [r0, #68]	@ 0x44
 8017b98:	e7e3      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b9a:	6dc3      	ldr	r3, [r0, #92]	@ 0x5c
 8017b9c:	e7e1      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017b9e:	6e43      	ldr	r3, [r0, #100]	@ 0x64
 8017ba0:	e7df      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017ba2:	6ec3      	ldr	r3, [r0, #108]	@ 0x6c
 8017ba4:	e7dd      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017ba6:	2a0b      	cmp	r2, #11
 8017ba8:	d059      	beq.n	8017c5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8017baa:	d80e      	bhi.n	8017bca <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe6>
 8017bac:	2a03      	cmp	r2, #3
 8017bae:	d050      	beq.n	8017c52 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16e>
 8017bb0:	d804      	bhi.n	8017bbc <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xd8>
 8017bb2:	2a01      	cmp	r2, #1
 8017bb4:	d04f      	beq.n	8017c56 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x172>
 8017bb6:	d950      	bls.n	8017c5a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x176>
 8017bb8:	6c03      	ldr	r3, [r0, #64]	@ 0x40
 8017bba:	e7d2      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017bbc:	2a09      	cmp	r2, #9
 8017bbe:	d04e      	beq.n	8017c5e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17a>
 8017bc0:	d801      	bhi.n	8017bc6 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0xe2>
 8017bc2:	2a08      	cmp	r2, #8
 8017bc4:	d1a0      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017bc6:	6e03      	ldr	r3, [r0, #96]	@ 0x60
 8017bc8:	e7cb      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017bca:	2a2f      	cmp	r2, #47	@ 0x2f
 8017bcc:	d02d      	beq.n	8017c2a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x146>
 8017bce:	d811      	bhi.n	8017bf4 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x110>
 8017bd0:	2a2d      	cmp	r2, #45	@ 0x2d
 8017bd2:	d018      	beq.n	8017c06 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x122>
 8017bd4:	d833      	bhi.n	8017c3e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x15a>
 8017bd6:	2a2c      	cmp	r2, #44	@ 0x2c
 8017bd8:	d196      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017bda:	684a      	ldr	r2, [r1, #4]
 8017bdc:	7813      	ldrb	r3, [r2, #0]
 8017bde:	7852      	ldrb	r2, [r2, #1]
 8017be0:	2a00      	cmp	r2, #0
 8017be2:	d191      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017be4:	2b01      	cmp	r3, #1
 8017be6:	d01e      	beq.n	8017c26 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x142>
 8017be8:	2b00      	cmp	r3, #0
 8017bea:	d030      	beq.n	8017c4e <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x16a>
 8017bec:	2b02      	cmp	r3, #2
 8017bee:	d18b      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017bf0:	6903      	ldr	r3, [r0, #16]
 8017bf2:	e7b6      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017bf4:	2a31      	cmp	r2, #49	@ 0x31
 8017bf6:	d004      	beq.n	8017c02 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x11e>
 8017bf8:	d333      	bcc.n	8017c62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8017bfa:	2a32      	cmp	r2, #50	@ 0x32
 8017bfc:	d031      	beq.n	8017c62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x17e>
 8017bfe:	2a33      	cmp	r2, #51	@ 0x33
 8017c00:	d182      	bne.n	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017c02:	6f83      	ldr	r3, [r0, #120]	@ 0x78
 8017c04:	e7ad      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c06:	684a      	ldr	r2, [r1, #4]
 8017c08:	7813      	ldrb	r3, [r2, #0]
 8017c0a:	7852      	ldrb	r2, [r2, #1]
 8017c0c:	2a00      	cmp	r2, #0
 8017c0e:	f47f af7b 	bne.w	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017c12:	2b01      	cmp	r3, #1
 8017c14:	d005      	beq.n	8017c22 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x13e>
 8017c16:	d310      	bcc.n	8017c3a <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x156>
 8017c18:	2b02      	cmp	r3, #2
 8017c1a:	f47f af75 	bne.w	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017c1e:	6983      	ldr	r3, [r0, #24]
 8017c20:	e79f      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c22:	6a83      	ldr	r3, [r0, #40]	@ 0x28
 8017c24:	e79d      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c26:	6a03      	ldr	r3, [r0, #32]
 8017c28:	e79b      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c2a:	684b      	ldr	r3, [r1, #4]
 8017c2c:	781a      	ldrb	r2, [r3, #0]
 8017c2e:	785b      	ldrb	r3, [r3, #1]
 8017c30:	2b00      	cmp	r3, #0
 8017c32:	f47f af69 	bne.w	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017c36:	2a00      	cmp	r2, #0
 8017c38:	d193      	bne.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c3a:	6b83      	ldr	r3, [r0, #56]	@ 0x38
 8017c3c:	e791      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c3e:	684b      	ldr	r3, [r1, #4]
 8017c40:	781a      	ldrb	r2, [r3, #0]
 8017c42:	785b      	ldrb	r3, [r3, #1]
 8017c44:	2b00      	cmp	r3, #0
 8017c46:	f47f af5f 	bne.w	8017b08 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x24>
 8017c4a:	2a00      	cmp	r2, #0
 8017c4c:	d189      	bne.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c4e:	6b03      	ldr	r3, [r0, #48]	@ 0x30
 8017c50:	e787      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c52:	6d03      	ldr	r3, [r0, #80]	@ 0x50
 8017c54:	e785      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c56:	6d83      	ldr	r3, [r0, #88]	@ 0x58
 8017c58:	e783      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c5a:	6c83      	ldr	r3, [r0, #72]	@ 0x48
 8017c5c:	e781      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c5e:	6e83      	ldr	r3, [r0, #104]	@ 0x68
 8017c60:	e77f      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>
 8017c62:	6f03      	ldr	r3, [r0, #112]	@ 0x70
 8017c64:	e77d      	b.n	8017b62 <_ZN8touchgfx8LCD16bpp28getTextureMapperDrawScanLineERKNS_14TextureSurfaceEth+0x7e>

08017c66 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017c66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017c6a:	b087      	sub	sp, #28
 8017c6c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8017c6e:	9205      	str	r2, [sp, #20]
 8017c70:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8017c74:	9202      	str	r2, [sp, #8]
 8017c76:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8017c7a:	9101      	str	r1, [sp, #4]
 8017c7c:	6841      	ldr	r1, [r0, #4]
 8017c7e:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8017c82:	fb01 2404 	mla	r4, r1, r4, r2
 8017c86:	6802      	ldr	r2, [r0, #0]
 8017c88:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017c8c:	f8de 2000 	ldr.w	r2, [lr]
 8017c90:	9203      	str	r2, [sp, #12]
 8017c92:	f8de 2004 	ldr.w	r2, [lr, #4]
 8017c96:	3204      	adds	r2, #4
 8017c98:	9204      	str	r2, [sp, #16]
 8017c9a:	9a02      	ldr	r2, [sp, #8]
 8017c9c:	43d6      	mvns	r6, r2
 8017c9e:	b2f6      	uxtb	r6, r6
 8017ca0:	9a01      	ldr	r2, [sp, #4]
 8017ca2:	2a00      	cmp	r2, #0
 8017ca4:	dc03      	bgt.n	8017cae <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8017ca6:	9a05      	ldr	r2, [sp, #20]
 8017ca8:	2a00      	cmp	r2, #0
 8017caa:	f340 8129 	ble.w	8017f00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017cae:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8017cb0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 8017cb4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 8017cb8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8017cbc:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8017cbe:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017cc2:	2b00      	cmp	r3, #0
 8017cc4:	dd0e      	ble.n	8017ce4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8017cc6:	1408      	asrs	r0, r1, #16
 8017cc8:	d405      	bmi.n	8017cd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017cca:	4560      	cmp	r0, ip
 8017ccc:	da03      	bge.n	8017cd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017cce:	1410      	asrs	r0, r2, #16
 8017cd0:	d401      	bmi.n	8017cd6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017cd2:	42b8      	cmp	r0, r7
 8017cd4:	db07      	blt.n	8017ce6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8017cd6:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017cd8:	4401      	add	r1, r0
 8017cda:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017cdc:	3b01      	subs	r3, #1
 8017cde:	4402      	add	r2, r0
 8017ce0:	3402      	adds	r4, #2
 8017ce2:	e7ee      	b.n	8017cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8017ce4:	d071      	beq.n	8017dca <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8017ce6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8017ce8:	1e58      	subs	r0, r3, #1
 8017cea:	fb05 1500 	mla	r5, r5, r0, r1
 8017cee:	142d      	asrs	r5, r5, #16
 8017cf0:	d45f      	bmi.n	8017db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017cf2:	4565      	cmp	r5, ip
 8017cf4:	da5d      	bge.n	8017db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017cf6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8017cf8:	fb05 2000 	mla	r0, r5, r0, r2
 8017cfc:	1400      	asrs	r0, r0, #16
 8017cfe:	d458      	bmi.n	8017db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017d00:	42b8      	cmp	r0, r7
 8017d02:	da56      	bge.n	8017db2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14c>
 8017d04:	f8bd b008 	ldrh.w	fp, [sp, #8]
 8017d08:	4699      	mov	r9, r3
 8017d0a:	46a2      	mov	sl, r4
 8017d0c:	f1b9 0f00 	cmp.w	r9, #0
 8017d10:	dd57      	ble.n	8017dc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15c>
 8017d12:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8017d16:	9803      	ldr	r0, [sp, #12]
 8017d18:	ea4f 4c22 	mov.w	ip, r2, asr #16
 8017d1c:	140d      	asrs	r5, r1, #16
 8017d1e:	fb07 000c 	mla	r0, r7, ip, r0
 8017d22:	f109 39ff 	add.w	r9, r9, #4294967295
 8017d26:	5d40      	ldrb	r0, [r0, r5]
 8017d28:	9d04      	ldr	r5, [sp, #16]
 8017d2a:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017d2e:	f8ba 5000 	ldrh.w	r5, [sl]
 8017d32:	122f      	asrs	r7, r5, #8
 8017d34:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017d38:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017d3c:	fb17 f706 	smulbb	r7, r7, r6
 8017d40:	ea4f 08e5 	mov.w	r8, r5, asr #3
 8017d44:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017d48:	00ed      	lsls	r5, r5, #3
 8017d4a:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8017d4e:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8017d52:	10c7      	asrs	r7, r0, #3
 8017d54:	b2ed      	uxtb	r5, r5
 8017d56:	00c0      	lsls	r0, r0, #3
 8017d58:	fb18 f806 	smulbb	r8, r8, r6
 8017d5c:	fb15 f506 	smulbb	r5, r5, r6
 8017d60:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017d64:	b2c0      	uxtb	r0, r0
 8017d66:	fa1f fc8c 	uxth.w	ip, ip
 8017d6a:	fb07 870b 	mla	r7, r7, fp, r8
 8017d6e:	fb00 500b 	mla	r0, r0, fp, r5
 8017d72:	b280      	uxth	r0, r0
 8017d74:	b2bf      	uxth	r7, r7
 8017d76:	f10c 0501 	add.w	r5, ip, #1
 8017d7a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017d7e:	f107 0801 	add.w	r8, r7, #1
 8017d82:	1c45      	adds	r5, r0, #1
 8017d84:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017d88:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8017d8c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017d8e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017d92:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017d96:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8017d9a:	ea45 0c0c 	orr.w	ip, r5, ip
 8017d9e:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8017da2:	4401      	add	r1, r0
 8017da4:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017da6:	ea4c 0c08 	orr.w	ip, ip, r8
 8017daa:	f82a cb02 	strh.w	ip, [sl], #2
 8017dae:	4402      	add	r2, r0
 8017db0:	e7ac      	b.n	8017d0c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8017db2:	f8bd a008 	ldrh.w	sl, [sp, #8]
 8017db6:	f04f 0800 	mov.w	r8, #0
 8017dba:	eb03 0008 	add.w	r0, r3, r8
 8017dbe:	2800      	cmp	r0, #0
 8017dc0:	dc41      	bgt.n	8017e46 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 8017dc2:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017dc6:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017dca:	9b01      	ldr	r3, [sp, #4]
 8017dcc:	2b00      	cmp	r3, #0
 8017dce:	f340 8097 	ble.w	8017f00 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29a>
 8017dd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017dd6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8017dda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8017dde:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017de0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017de4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017de8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017dec:	eef0 6a62 	vmov.f32	s13, s5
 8017df0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017df4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017df8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017dfc:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 8017e00:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017e04:	eef0 6a43 	vmov.f32	s13, s6
 8017e08:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017e0c:	ee12 2a90 	vmov	r2, s5
 8017e10:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017e14:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e18:	ee13 2a10 	vmov	r2, s6
 8017e1c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8017e1e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017e20:	fb92 f3f3 	sdiv	r3, r2, r3
 8017e24:	9314      	str	r3, [sp, #80]	@ 0x50
 8017e26:	9b01      	ldr	r3, [sp, #4]
 8017e28:	9a05      	ldr	r2, [sp, #20]
 8017e2a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8017e2e:	3b01      	subs	r3, #1
 8017e30:	9301      	str	r3, [sp, #4]
 8017e32:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8017e36:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8017e38:	eeb0 3a67 	vmov.f32	s6, s15
 8017e3c:	bf08      	it	eq
 8017e3e:	4613      	moveq	r3, r2
 8017e40:	eef0 2a47 	vmov.f32	s5, s14
 8017e44:	e72c      	b.n	8017ca0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8017e46:	140f      	asrs	r7, r1, #16
 8017e48:	d453      	bmi.n	8017ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017e4a:	f8de 5008 	ldr.w	r5, [lr, #8]
 8017e4e:	42bd      	cmp	r5, r7
 8017e50:	dd4f      	ble.n	8017ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017e52:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8017e56:	d44c      	bmi.n	8017ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017e58:	f8de 000c 	ldr.w	r0, [lr, #12]
 8017e5c:	4560      	cmp	r0, ip
 8017e5e:	dd48      	ble.n	8017ef2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8017e60:	9803      	ldr	r0, [sp, #12]
 8017e62:	b22d      	sxth	r5, r5
 8017e64:	fb0c 0505 	mla	r5, ip, r5, r0
 8017e68:	5de8      	ldrb	r0, [r5, r7]
 8017e6a:	9d04      	ldr	r5, [sp, #16]
 8017e6c:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8017e70:	f06f 0501 	mvn.w	r5, #1
 8017e74:	fb05 fb08 	mul.w	fp, r5, r8
 8017e78:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8017e7c:	f834 500b 	ldrh.w	r5, [r4, fp]
 8017e80:	122f      	asrs	r7, r5, #8
 8017e82:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8017e86:	fb17 f706 	smulbb	r7, r7, r6
 8017e8a:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8017e8e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8017e92:	00ed      	lsls	r5, r5, #3
 8017e94:	fb0c 7c0a 	mla	ip, ip, sl, r7
 8017e98:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8017e9c:	10c7      	asrs	r7, r0, #3
 8017e9e:	b2ed      	uxtb	r5, r5
 8017ea0:	00c0      	lsls	r0, r0, #3
 8017ea2:	fb19 f906 	smulbb	r9, r9, r6
 8017ea6:	fb15 f506 	smulbb	r5, r5, r6
 8017eaa:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8017eae:	b2c0      	uxtb	r0, r0
 8017eb0:	fa1f fc8c 	uxth.w	ip, ip
 8017eb4:	fb07 970a 	mla	r7, r7, sl, r9
 8017eb8:	fb00 500a 	mla	r0, r0, sl, r5
 8017ebc:	b2bf      	uxth	r7, r7
 8017ebe:	b280      	uxth	r0, r0
 8017ec0:	f10c 0501 	add.w	r5, ip, #1
 8017ec4:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8017ec8:	f107 0901 	add.w	r9, r7, #1
 8017ecc:	1c45      	adds	r5, r0, #1
 8017ece:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 8017ed2:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 8017ed6:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8017eda:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8017ede:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8017ee2:	ea45 0c0c 	orr.w	ip, r5, ip
 8017ee6:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8017eea:	ea4c 0c09 	orr.w	ip, ip, r9
 8017eee:	f824 c00b 	strh.w	ip, [r4, fp]
 8017ef2:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8017ef4:	4401      	add	r1, r0
 8017ef6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8017ef8:	f108 38ff 	add.w	r8, r8, #4294967295
 8017efc:	4402      	add	r2, r0
 8017efe:	e75c      	b.n	8017dba <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x154>
 8017f00:	b007      	add	sp, #28
 8017f02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08017f06 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8017f06:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8017f0a:	b085      	sub	sp, #20
 8017f0c:	4693      	mov	fp, r2
 8017f0e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8017f10:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 8017f12:	6870      	ldr	r0, [r6, #4]
 8017f14:	9100      	str	r1, [sp, #0]
 8017f16:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8017f1a:	fb00 2404 	mla	r4, r0, r4, r2
 8017f1e:	6832      	ldr	r2, [r6, #0]
 8017f20:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8017f24:	682a      	ldr	r2, [r5, #0]
 8017f26:	9201      	str	r2, [sp, #4]
 8017f28:	686a      	ldr	r2, [r5, #4]
 8017f2a:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 8017f2e:	3204      	adds	r2, #4
 8017f30:	9202      	str	r2, [sp, #8]
 8017f32:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8017f36:	9a00      	ldr	r2, [sp, #0]
 8017f38:	2a00      	cmp	r2, #0
 8017f3a:	dc03      	bgt.n	8017f44 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8017f3c:	f1bb 0f00 	cmp.w	fp, #0
 8017f40:	f340 80a0 	ble.w	8018084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017f44:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8017f46:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8017f4a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 8017f4e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8017f52:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8017f54:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8017f58:	2b00      	cmp	r3, #0
 8017f5a:	dd0c      	ble.n	8017f76 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8017f5c:	1406      	asrs	r6, r0, #16
 8017f5e:	d405      	bmi.n	8017f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017f60:	454e      	cmp	r6, r9
 8017f62:	da03      	bge.n	8017f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017f64:	1416      	asrs	r6, r2, #16
 8017f66:	d401      	bmi.n	8017f6c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8017f68:	4546      	cmp	r6, r8
 8017f6a:	db05      	blt.n	8017f78 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8017f6c:	4470      	add	r0, lr
 8017f6e:	4462      	add	r2, ip
 8017f70:	3b01      	subs	r3, #1
 8017f72:	3402      	adds	r4, #2
 8017f74:	e7f0      	b.n	8017f58 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8017f76:	d00f      	beq.n	8017f98 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8017f78:	1e5e      	subs	r6, r3, #1
 8017f7a:	fb0e 0706 	mla	r7, lr, r6, r0
 8017f7e:	143f      	asrs	r7, r7, #16
 8017f80:	d541      	bpl.n	8018006 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x100>
 8017f82:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8017f86:	4698      	mov	r8, r3
 8017f88:	9603      	str	r6, [sp, #12]
 8017f8a:	f1b8 0f00 	cmp.w	r8, #0
 8017f8e:	dc59      	bgt.n	8018044 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 8017f90:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8017f94:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8017f98:	9b00      	ldr	r3, [sp, #0]
 8017f9a:	2b00      	cmp	r3, #0
 8017f9c:	dd72      	ble.n	8018084 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17e>
 8017f9e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8017fa2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8017fa6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8017faa:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017fac:	ee31 1a05 	vadd.f32	s2, s2, s10
 8017fb0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8017fb4:	eeb0 6a62 	vmov.f32	s12, s5
 8017fb8:	ee61 7a27 	vmul.f32	s15, s2, s15
 8017fbc:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017fc0:	ee77 2a62 	vsub.f32	s5, s14, s5
 8017fc4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8017fc8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8017fcc:	eeb0 6a43 	vmov.f32	s12, s6
 8017fd0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8017fd4:	ee12 2a90 	vmov	r2, s5
 8017fd8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8017fdc:	fb92 fef3 	sdiv	lr, r2, r3
 8017fe0:	ee13 2a10 	vmov	r2, s6
 8017fe4:	fb92 fcf3 	sdiv	ip, r2, r3
 8017fe8:	9b00      	ldr	r3, [sp, #0]
 8017fea:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8017fee:	3b01      	subs	r3, #1
 8017ff0:	9300      	str	r3, [sp, #0]
 8017ff2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8017ff6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8017ff8:	eeb0 3a67 	vmov.f32	s6, s15
 8017ffc:	bf08      	it	eq
 8017ffe:	465b      	moveq	r3, fp
 8018000:	eef0 2a47 	vmov.f32	s5, s14
 8018004:	e797      	b.n	8017f36 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018006:	454f      	cmp	r7, r9
 8018008:	dabb      	bge.n	8017f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 801800a:	fb0c 2606 	mla	r6, ip, r6, r2
 801800e:	1436      	asrs	r6, r6, #16
 8018010:	d4b7      	bmi.n	8017f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018012:	4546      	cmp	r6, r8
 8018014:	dab5      	bge.n	8017f82 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018016:	461e      	mov	r6, r3
 8018018:	46a0      	mov	r8, r4
 801801a:	2e00      	cmp	r6, #0
 801801c:	ddb8      	ble.n	8017f90 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 801801e:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8018022:	9901      	ldr	r1, [sp, #4]
 8018024:	1417      	asrs	r7, r2, #16
 8018026:	ea4f 4920 	mov.w	r9, r0, asr #16
 801802a:	fb0a 1707 	mla	r7, sl, r7, r1
 801802e:	9902      	ldr	r1, [sp, #8]
 8018030:	f817 7009 	ldrb.w	r7, [r7, r9]
 8018034:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8018038:	f828 7b02 	strh.w	r7, [r8], #2
 801803c:	4470      	add	r0, lr
 801803e:	4462      	add	r2, ip
 8018040:	3e01      	subs	r6, #1
 8018042:	e7ea      	b.n	801801a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x114>
 8018044:	ea5f 4920 	movs.w	r9, r0, asr #16
 8018048:	d417      	bmi.n	801807a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801804a:	68ae      	ldr	r6, [r5, #8]
 801804c:	454e      	cmp	r6, r9
 801804e:	dd14      	ble.n	801807a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018050:	ea5f 4a22 	movs.w	sl, r2, asr #16
 8018054:	d411      	bmi.n	801807a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 8018056:	68ef      	ldr	r7, [r5, #12]
 8018058:	4557      	cmp	r7, sl
 801805a:	dd0e      	ble.n	801807a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x174>
 801805c:	9f01      	ldr	r7, [sp, #4]
 801805e:	b236      	sxth	r6, r6
 8018060:	fb0a 7606 	mla	r6, sl, r6, r7
 8018064:	9f02      	ldr	r7, [sp, #8]
 8018066:	f816 6009 	ldrb.w	r6, [r6, r9]
 801806a:	f06f 0101 	mvn.w	r1, #1
 801806e:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8018072:	fb01 f608 	mul.w	r6, r1, r8
 8018076:	9903      	ldr	r1, [sp, #12]
 8018078:	538f      	strh	r7, [r1, r6]
 801807a:	4470      	add	r0, lr
 801807c:	4462      	add	r2, ip
 801807e:	f108 38ff 	add.w	r8, r8, #4294967295
 8018082:	e782      	b.n	8017f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018084:	b005      	add	sp, #20
 8018086:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801808a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801808a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801808e:	b087      	sub	sp, #28
 8018090:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018092:	9205      	str	r2, [sp, #20]
 8018094:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018098:	9203      	str	r2, [sp, #12]
 801809a:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 801809e:	9102      	str	r1, [sp, #8]
 80180a0:	6861      	ldr	r1, [r4, #4]
 80180a2:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 80180a6:	fb01 2000 	mla	r0, r1, r0, r2
 80180aa:	6822      	ldr	r2, [r4, #0]
 80180ac:	eb02 0240 	add.w	r2, r2, r0, lsl #1
 80180b0:	9200      	str	r2, [sp, #0]
 80180b2:	f8dc 2000 	ldr.w	r2, [ip]
 80180b6:	9204      	str	r2, [sp, #16]
 80180b8:	f8dc 2004 	ldr.w	r2, [ip, #4]
 80180bc:	3204      	adds	r2, #4
 80180be:	9201      	str	r2, [sp, #4]
 80180c0:	9a03      	ldr	r2, [sp, #12]
 80180c2:	43d5      	mvns	r5, r2
 80180c4:	b2ed      	uxtb	r5, r5
 80180c6:	9a02      	ldr	r2, [sp, #8]
 80180c8:	2a00      	cmp	r2, #0
 80180ca:	dc03      	bgt.n	80180d4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80180cc:	9a05      	ldr	r2, [sp, #20]
 80180ce:	2a00      	cmp	r2, #0
 80180d0:	f340 812c 	ble.w	801832c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80180d4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 80180d6:	f9bc e008 	ldrsh.w	lr, [ip, #8]
 80180da:	f9bc 700c 	ldrsh.w	r7, [ip, #12]
 80180de:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80180e2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80180e4:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80180e8:	2b00      	cmp	r3, #0
 80180ea:	dd10      	ble.n	801810e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80180ec:	140c      	asrs	r4, r1, #16
 80180ee:	d405      	bmi.n	80180fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80180f0:	4574      	cmp	r4, lr
 80180f2:	da03      	bge.n	80180fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80180f4:	1414      	asrs	r4, r2, #16
 80180f6:	d401      	bmi.n	80180fc <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 80180f8:	42bc      	cmp	r4, r7
 80180fa:	db09      	blt.n	8018110 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 80180fc:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80180fe:	9800      	ldr	r0, [sp, #0]
 8018100:	4421      	add	r1, r4
 8018102:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018104:	3002      	adds	r0, #2
 8018106:	4422      	add	r2, r4
 8018108:	3b01      	subs	r3, #1
 801810a:	9000      	str	r0, [sp, #0]
 801810c:	e7ec      	b.n	80180e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 801810e:	d071      	beq.n	80181f4 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16a>
 8018110:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018112:	1e5c      	subs	r4, r3, #1
 8018114:	fb06 1604 	mla	r6, r6, r4, r1
 8018118:	1436      	asrs	r6, r6, #16
 801811a:	d45d      	bmi.n	80181d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801811c:	4576      	cmp	r6, lr
 801811e:	da5b      	bge.n	80181d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8018120:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8018122:	fb06 2404 	mla	r4, r6, r4, r2
 8018126:	1424      	asrs	r4, r4, #16
 8018128:	d456      	bmi.n	80181d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801812a:	42bc      	cmp	r4, r7
 801812c:	da54      	bge.n	80181d8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 801812e:	f8dd 9000 	ldr.w	r9, [sp]
 8018132:	f8bd a00c 	ldrh.w	sl, [sp, #12]
 8018136:	4698      	mov	r8, r3
 8018138:	f1b8 0f00 	cmp.w	r8, #0
 801813c:	dd54      	ble.n	80181e8 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 801813e:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018142:	9804      	ldr	r0, [sp, #16]
 8018144:	1414      	asrs	r4, r2, #16
 8018146:	fb07 0404 	mla	r4, r7, r4, r0
 801814a:	140e      	asrs	r6, r1, #16
 801814c:	9801      	ldr	r0, [sp, #4]
 801814e:	f814 e006 	ldrb.w	lr, [r4, r6]
 8018152:	f8b9 4000 	ldrh.w	r4, [r9]
 8018156:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801815a:	eb00 0b0e 	add.w	fp, r0, lr
 801815e:	1227      	asrs	r7, r4, #8
 8018160:	f89b 6002 	ldrb.w	r6, [fp, #2]
 8018164:	f89b b001 	ldrb.w	fp, [fp, #1]
 8018168:	f810 e00e 	ldrb.w	lr, [r0, lr]
 801816c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801816e:	fb16 f60a 	smulbb	r6, r6, sl
 8018172:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018176:	fb07 6705 	mla	r7, r7, r5, r6
 801817a:	10e6      	asrs	r6, r4, #3
 801817c:	00e4      	lsls	r4, r4, #3
 801817e:	b2e4      	uxtb	r4, r4
 8018180:	fb1b fb0a 	smulbb	fp, fp, sl
 8018184:	fb14 f405 	smulbb	r4, r4, r5
 8018188:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801818c:	b2bf      	uxth	r7, r7
 801818e:	fb06 b605 	mla	r6, r6, r5, fp
 8018192:	fb0e 4e0a 	mla	lr, lr, sl, r4
 8018196:	b2b6      	uxth	r6, r6
 8018198:	fa1f fe8e 	uxth.w	lr, lr
 801819c:	1c7c      	adds	r4, r7, #1
 801819e:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80181a2:	f106 0b01 	add.w	fp, r6, #1
 80181a6:	f10e 0401 	add.w	r4, lr, #1
 80181aa:	eb04 241e 	add.w	r4, r4, lr, lsr #8
 80181ae:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 80181b2:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80181b6:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 80181ba:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 80181be:	4327      	orrs	r7, r4
 80181c0:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 80181c4:	4401      	add	r1, r0
 80181c6:	9814      	ldr	r0, [sp, #80]	@ 0x50
 80181c8:	ea47 070b 	orr.w	r7, r7, fp
 80181cc:	f829 7b02 	strh.w	r7, [r9], #2
 80181d0:	4402      	add	r2, r0
 80181d2:	f108 38ff 	add.w	r8, r8, #4294967295
 80181d6:	e7af      	b.n	8018138 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xae>
 80181d8:	f8bd 900c 	ldrh.w	r9, [sp, #12]
 80181dc:	f04f 0e00 	mov.w	lr, #0
 80181e0:	eb03 040e 	add.w	r4, r3, lr
 80181e4:	2c00      	cmp	r4, #0
 80181e6:	dc43      	bgt.n	8018270 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 80181e8:	9a00      	ldr	r2, [sp, #0]
 80181ea:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80181ee:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80181f2:	9300      	str	r3, [sp, #0]
 80181f4:	9b02      	ldr	r3, [sp, #8]
 80181f6:	2b00      	cmp	r3, #0
 80181f8:	f340 8098 	ble.w	801832c <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 80181fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018200:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8018204:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8018208:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801820a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801820e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018212:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018216:	eef0 6a62 	vmov.f32	s13, s5
 801821a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801821e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018222:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018226:	edcd 6a11 	vstr	s13, [sp, #68]	@ 0x44
 801822a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801822e:	eef0 6a43 	vmov.f32	s13, s6
 8018232:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018236:	ee12 2a90 	vmov	r2, s5
 801823a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801823e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018242:	ee13 2a10 	vmov	r2, s6
 8018246:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018248:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801824a:	fb92 f3f3 	sdiv	r3, r2, r3
 801824e:	9314      	str	r3, [sp, #80]	@ 0x50
 8018250:	9b02      	ldr	r3, [sp, #8]
 8018252:	9a05      	ldr	r2, [sp, #20]
 8018254:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8018258:	3b01      	subs	r3, #1
 801825a:	9302      	str	r3, [sp, #8]
 801825c:	edcd 6a12 	vstr	s13, [sp, #72]	@ 0x48
 8018260:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018262:	eeb0 3a67 	vmov.f32	s6, s15
 8018266:	bf08      	it	eq
 8018268:	4613      	moveq	r3, r2
 801826a:	eef0 2a47 	vmov.f32	s5, s14
 801826e:	e72a      	b.n	80180c6 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018270:	140f      	asrs	r7, r1, #16
 8018272:	d454      	bmi.n	801831e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018274:	f8dc 6008 	ldr.w	r6, [ip, #8]
 8018278:	42be      	cmp	r6, r7
 801827a:	dd50      	ble.n	801831e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801827c:	ea5f 4822 	movs.w	r8, r2, asr #16
 8018280:	d44d      	bmi.n	801831e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 8018282:	f8dc 400c 	ldr.w	r4, [ip, #12]
 8018286:	4544      	cmp	r4, r8
 8018288:	dd49      	ble.n	801831e <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x294>
 801828a:	9c04      	ldr	r4, [sp, #16]
 801828c:	b236      	sxth	r6, r6
 801828e:	fb08 4606 	mla	r6, r8, r6, r4
 8018292:	f06f 0001 	mvn.w	r0, #1
 8018296:	f816 8007 	ldrb.w	r8, [r6, r7]
 801829a:	9c01      	ldr	r4, [sp, #4]
 801829c:	fb00 fa0e 	mul.w	sl, r0, lr
 80182a0:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 80182a4:	9800      	ldr	r0, [sp, #0]
 80182a6:	eb04 0b08 	add.w	fp, r4, r8
 80182aa:	f830 400a 	ldrh.w	r4, [r0, sl]
 80182ae:	f89b 6002 	ldrb.w	r6, [fp, #2]
 80182b2:	9801      	ldr	r0, [sp, #4]
 80182b4:	f89b b001 	ldrb.w	fp, [fp, #1]
 80182b8:	f810 8008 	ldrb.w	r8, [r0, r8]
 80182bc:	9800      	ldr	r0, [sp, #0]
 80182be:	1227      	asrs	r7, r4, #8
 80182c0:	fb16 f609 	smulbb	r6, r6, r9
 80182c4:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80182c8:	fb07 6705 	mla	r7, r7, r5, r6
 80182cc:	10e6      	asrs	r6, r4, #3
 80182ce:	00e4      	lsls	r4, r4, #3
 80182d0:	b2e4      	uxtb	r4, r4
 80182d2:	fb1b fb09 	smulbb	fp, fp, r9
 80182d6:	fb14 f405 	smulbb	r4, r4, r5
 80182da:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80182de:	b2bf      	uxth	r7, r7
 80182e0:	fb06 b605 	mla	r6, r6, r5, fp
 80182e4:	fb08 4809 	mla	r8, r8, r9, r4
 80182e8:	b2b6      	uxth	r6, r6
 80182ea:	fa1f f888 	uxth.w	r8, r8
 80182ee:	1c7c      	adds	r4, r7, #1
 80182f0:	eb04 2717 	add.w	r7, r4, r7, lsr #8
 80182f4:	f106 0b01 	add.w	fp, r6, #1
 80182f8:	f108 0401 	add.w	r4, r8, #1
 80182fc:	eb04 2418 	add.w	r4, r4, r8, lsr #8
 8018300:	eb0b 2b16 	add.w	fp, fp, r6, lsr #8
 8018304:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018308:	f3c4 24c4 	ubfx	r4, r4, #11, #5
 801830c:	ea4f 1b5b 	mov.w	fp, fp, lsr #5
 8018310:	4327      	orrs	r7, r4
 8018312:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8018316:	ea47 070b 	orr.w	r7, r7, fp
 801831a:	f820 700a 	strh.w	r7, [r0, sl]
 801831e:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8018320:	4401      	add	r1, r0
 8018322:	9814      	ldr	r0, [sp, #80]	@ 0x50
 8018324:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018328:	4402      	add	r2, r0
 801832a:	e759      	b.n	80181e0 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 801832c:	b007      	add	sp, #28
 801832e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
	...

08018334 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018334:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018338:	b085      	sub	sp, #20
 801833a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801833e:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 8018340:	9203      	str	r2, [sp, #12]
 8018342:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8018346:	6870      	ldr	r0, [r6, #4]
 8018348:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 801834a:	f8dd c044 	ldr.w	ip, [sp, #68]	@ 0x44
 801834e:	686f      	ldr	r7, [r5, #4]
 8018350:	9101      	str	r1, [sp, #4]
 8018352:	fb00 2404 	mla	r4, r0, r4, r2
 8018356:	6832      	ldr	r2, [r6, #0]
 8018358:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801835c:	682a      	ldr	r2, [r5, #0]
 801835e:	9202      	str	r2, [sp, #8]
 8018360:	3704      	adds	r7, #4
 8018362:	9a01      	ldr	r2, [sp, #4]
 8018364:	2a00      	cmp	r2, #0
 8018366:	dc03      	bgt.n	8018370 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8018368:	9a03      	ldr	r2, [sp, #12]
 801836a:	2a00      	cmp	r2, #0
 801836c:	f340 80cc 	ble.w	8018508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8018370:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018372:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 8018376:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801837a:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 801837e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018380:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018384:	2b00      	cmp	r3, #0
 8018386:	dd0d      	ble.n	80183a4 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8018388:	1406      	asrs	r6, r0, #16
 801838a:	d405      	bmi.n	8018398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 801838c:	454e      	cmp	r6, r9
 801838e:	da03      	bge.n	8018398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018390:	1416      	asrs	r6, r2, #16
 8018392:	d401      	bmi.n	8018398 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x64>
 8018394:	4546      	cmp	r6, r8
 8018396:	db06      	blt.n	80183a6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8018398:	9e12      	ldr	r6, [sp, #72]	@ 0x48
 801839a:	4460      	add	r0, ip
 801839c:	4432      	add	r2, r6
 801839e:	3b01      	subs	r3, #1
 80183a0:	3402      	adds	r4, #2
 80183a2:	e7ef      	b.n	8018384 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x50>
 80183a4:	d00f      	beq.n	80183c6 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80183a6:	1e5e      	subs	r6, r3, #1
 80183a8:	fb0c 0e06 	mla	lr, ip, r6, r0
 80183ac:	ea5f 4e2e 	movs.w	lr, lr, asr #16
 80183b0:	d543      	bpl.n	801843a <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 80183b2:	4698      	mov	r8, r3
 80183b4:	eb04 0a43 	add.w	sl, r4, r3, lsl #1
 80183b8:	f1b8 0f00 	cmp.w	r8, #0
 80183bc:	dc71      	bgt.n	80184a2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16e>
 80183be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80183c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80183c6:	9b01      	ldr	r3, [sp, #4]
 80183c8:	2b00      	cmp	r3, #0
 80183ca:	f340 809d 	ble.w	8018508 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 80183ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80183d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80183d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80183da:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80183dc:	ee31 1a05 	vadd.f32	s2, s2, s10
 80183e0:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80183e4:	eeb0 6a62 	vmov.f32	s12, s5
 80183e8:	ee61 7a27 	vmul.f32	s15, s2, s15
 80183ec:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80183f0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80183f4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80183f8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80183fc:	eeb0 6a43 	vmov.f32	s12, s6
 8018400:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018404:	ee12 2a90 	vmov	r2, s5
 8018408:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801840c:	fb92 fcf3 	sdiv	ip, r2, r3
 8018410:	ee13 2a10 	vmov	r2, s6
 8018414:	fb92 f3f3 	sdiv	r3, r2, r3
 8018418:	9312      	str	r3, [sp, #72]	@ 0x48
 801841a:	9b01      	ldr	r3, [sp, #4]
 801841c:	9a03      	ldr	r2, [sp, #12]
 801841e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018422:	3b01      	subs	r3, #1
 8018424:	9301      	str	r3, [sp, #4]
 8018426:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801842a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801842c:	eeb0 3a67 	vmov.f32	s6, s15
 8018430:	bf08      	it	eq
 8018432:	4613      	moveq	r3, r2
 8018434:	eef0 2a47 	vmov.f32	s5, s14
 8018438:	e793      	b.n	8018362 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 801843a:	45ce      	cmp	lr, r9
 801843c:	dab9      	bge.n	80183b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801843e:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018440:	fb01 2606 	mla	r6, r1, r6, r2
 8018444:	1436      	asrs	r6, r6, #16
 8018446:	d4b4      	bmi.n	80183b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018448:	4546      	cmp	r6, r8
 801844a:	dab2      	bge.n	80183b2 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 801844c:	4698      	mov	r8, r3
 801844e:	46a2      	mov	sl, r4
 8018450:	f1b8 0f00 	cmp.w	r8, #0
 8018454:	ddb3      	ble.n	80183be <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8018456:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801845a:	9902      	ldr	r1, [sp, #8]
 801845c:	1416      	asrs	r6, r2, #16
 801845e:	fb09 1606 	mla	r6, r9, r6, r1
 8018462:	ea4f 4e20 	mov.w	lr, r0, asr #16
 8018466:	492a      	ldr	r1, [pc, #168]	@ (8018510 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1dc>)
 8018468:	f816 e00e 	ldrb.w	lr, [r6, lr]
 801846c:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 8018470:	eb07 0b0e 	add.w	fp, r7, lr
 8018474:	4460      	add	r0, ip
 8018476:	f89b 6001 	ldrb.w	r6, [fp, #1]
 801847a:	f89b 9002 	ldrb.w	r9, [fp, #2]
 801847e:	00f6      	lsls	r6, r6, #3
 8018480:	ea01 2909 	and.w	r9, r1, r9, lsl #8
 8018484:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8018488:	ea49 0606 	orr.w	r6, r9, r6
 801848c:	f817 900e 	ldrb.w	r9, [r7, lr]
 8018490:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8018492:	ea46 06d9 	orr.w	r6, r6, r9, lsr #3
 8018496:	f82a 6b02 	strh.w	r6, [sl], #2
 801849a:	440a      	add	r2, r1
 801849c:	f108 38ff 	add.w	r8, r8, #4294967295
 80184a0:	e7d6      	b.n	8018450 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80184a2:	ea5f 4920 	movs.w	r9, r0, asr #16
 80184a6:	d429      	bmi.n	80184fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80184a8:	68ae      	ldr	r6, [r5, #8]
 80184aa:	454e      	cmp	r6, r9
 80184ac:	dd26      	ble.n	80184fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80184ae:	ea5f 4b22 	movs.w	fp, r2, asr #16
 80184b2:	d423      	bmi.n	80184fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80184b4:	68e9      	ldr	r1, [r5, #12]
 80184b6:	4559      	cmp	r1, fp
 80184b8:	dd20      	ble.n	80184fc <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 80184ba:	9902      	ldr	r1, [sp, #8]
 80184bc:	fa0f fe86 	sxth.w	lr, r6
 80184c0:	fb0b 1e0e 	mla	lr, fp, lr, r1
 80184c4:	f06f 0101 	mvn.w	r1, #1
 80184c8:	f81e e009 	ldrb.w	lr, [lr, r9]
 80184cc:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 80184d0:	eb07 060e 	add.w	r6, r7, lr
 80184d4:	fb01 f908 	mul.w	r9, r1, r8
 80184d8:	f896 b002 	ldrb.w	fp, [r6, #2]
 80184dc:	7876      	ldrb	r6, [r6, #1]
 80184de:	f2a1 71fe 	subw	r1, r1, #2046	@ 0x7fe
 80184e2:	00f6      	lsls	r6, r6, #3
 80184e4:	ea01 2b0b 	and.w	fp, r1, fp, lsl #8
 80184e8:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 80184ec:	ea4b 0606 	orr.w	r6, fp, r6
 80184f0:	f817 b00e 	ldrb.w	fp, [r7, lr]
 80184f4:	ea46 06db 	orr.w	r6, r6, fp, lsr #3
 80184f8:	f82a 6009 	strh.w	r6, [sl, r9]
 80184fc:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80184fe:	4460      	add	r0, ip
 8018500:	440a      	add	r2, r1
 8018502:	f108 38ff 	add.w	r8, r8, #4294967295
 8018506:	e757      	b.n	80183b8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 8018508:	b005      	add	sp, #20
 801850a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801850e:	bf00      	nop
 8018510:	fffff800 	.word	0xfffff800

08018514 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018514:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018518:	b087      	sub	sp, #28
 801851a:	468b      	mov	fp, r1
 801851c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 801851e:	9204      	str	r2, [sp, #16]
 8018520:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018524:	9205      	str	r2, [sp, #20]
 8018526:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 801852a:	6841      	ldr	r1, [r0, #4]
 801852c:	f8dd c060 	ldr.w	ip, [sp, #96]	@ 0x60
 8018530:	fb01 2404 	mla	r4, r1, r4, r2
 8018534:	6802      	ldr	r2, [r0, #0]
 8018536:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801853a:	f8dc 2000 	ldr.w	r2, [ip]
 801853e:	9201      	str	r2, [sp, #4]
 8018540:	f8dc 2004 	ldr.w	r2, [ip, #4]
 8018544:	3204      	adds	r2, #4
 8018546:	9202      	str	r2, [sp, #8]
 8018548:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801854c:	f1bb 0f00 	cmp.w	fp, #0
 8018550:	dc03      	bgt.n	801855a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8018552:	9a04      	ldr	r2, [sp, #16]
 8018554:	2a00      	cmp	r2, #0
 8018556:	f340 8138 	ble.w	80187ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801855a:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801855c:	f9bc 7008 	ldrsh.w	r7, [ip, #8]
 8018560:	f9bc 600c 	ldrsh.w	r6, [ip, #12]
 8018564:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8018568:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801856a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801856e:	2b00      	cmp	r3, #0
 8018570:	dd0e      	ble.n	8018590 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018572:	1402      	asrs	r2, r0, #16
 8018574:	d405      	bmi.n	8018582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8018576:	42ba      	cmp	r2, r7
 8018578:	da03      	bge.n	8018582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801857a:	140a      	asrs	r2, r1, #16
 801857c:	d401      	bmi.n	8018582 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801857e:	42b2      	cmp	r2, r6
 8018580:	db07      	blt.n	8018592 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8018582:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8018584:	4410      	add	r0, r2
 8018586:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018588:	3b01      	subs	r3, #1
 801858a:	4411      	add	r1, r2
 801858c:	3402      	adds	r4, #2
 801858e:	e7ee      	b.n	801856e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 8018590:	d019      	beq.n	80185c6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8018592:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018594:	1e5a      	subs	r2, r3, #1
 8018596:	fb05 0502 	mla	r5, r5, r2, r0
 801859a:	142d      	asrs	r5, r5, #16
 801859c:	d409      	bmi.n	80185b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801859e:	42bd      	cmp	r5, r7
 80185a0:	da07      	bge.n	80185b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80185a2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80185a4:	fb05 1202 	mla	r2, r5, r2, r1
 80185a8:	1412      	asrs	r2, r2, #16
 80185aa:	d402      	bmi.n	80185b2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 80185ac:	42b2      	cmp	r2, r6
 80185ae:	f2c0 80ac 	blt.w	801870a <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f6>
 80185b2:	f04f 0e00 	mov.w	lr, #0
 80185b6:	eb03 020e 	add.w	r2, r3, lr
 80185ba:	2a00      	cmp	r2, #0
 80185bc:	dc3e      	bgt.n	801863c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 80185be:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80185c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80185c6:	f1bb 0f00 	cmp.w	fp, #0
 80185ca:	f340 80fe 	ble.w	80187ca <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 80185ce:	ee30 0a04 	vadd.f32	s0, s0, s8
 80185d2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80185d6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 80185da:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80185dc:	f1bb 0b01 	subs.w	fp, fp, #1
 80185e0:	ee31 1a05 	vadd.f32	s2, s2, s10
 80185e4:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80185e8:	eeb0 6a62 	vmov.f32	s12, s5
 80185ec:	ee61 7a27 	vmul.f32	s15, s2, s15
 80185f0:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80185f4:	ee77 2a62 	vsub.f32	s5, s14, s5
 80185f8:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 80185fc:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018600:	eeb0 6a43 	vmov.f32	s12, s6
 8018604:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018608:	ee12 2a90 	vmov	r2, s5
 801860c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018610:	fb92 f3f3 	sdiv	r3, r2, r3
 8018614:	ee13 2a10 	vmov	r2, s6
 8018618:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801861c:	9313      	str	r3, [sp, #76]	@ 0x4c
 801861e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018620:	fb92 f3f3 	sdiv	r3, r2, r3
 8018624:	9a04      	ldr	r2, [sp, #16]
 8018626:	9314      	str	r3, [sp, #80]	@ 0x50
 8018628:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801862c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801862e:	eeb0 3a67 	vmov.f32	s6, s15
 8018632:	bf08      	it	eq
 8018634:	4613      	moveq	r3, r2
 8018636:	eef0 2a47 	vmov.f32	s5, s14
 801863a:	e787      	b.n	801854c <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801863c:	1406      	asrs	r6, r0, #16
 801863e:	d45d      	bmi.n	80186fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018640:	f8dc 5008 	ldr.w	r5, [ip, #8]
 8018644:	42b5      	cmp	r5, r6
 8018646:	dd59      	ble.n	80186fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018648:	140f      	asrs	r7, r1, #16
 801864a:	d457      	bmi.n	80186fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 801864c:	f8dc 200c 	ldr.w	r2, [ip, #12]
 8018650:	42ba      	cmp	r2, r7
 8018652:	dd53      	ble.n	80186fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018654:	9a01      	ldr	r2, [sp, #4]
 8018656:	b22d      	sxth	r5, r5
 8018658:	fb07 2505 	mla	r5, r7, r5, r2
 801865c:	5daa      	ldrb	r2, [r5, r6]
 801865e:	9d02      	ldr	r5, [sp, #8]
 8018660:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 8018664:	0e2e      	lsrs	r6, r5, #24
 8018666:	d049      	beq.n	80186fc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8018668:	f06f 0201 	mvn.w	r2, #1
 801866c:	fb02 f20e 	mul.w	r2, r2, lr
 8018670:	9203      	str	r2, [sp, #12]
 8018672:	f834 8002 	ldrh.w	r8, [r4, r2]
 8018676:	9a05      	ldr	r2, [sp, #20]
 8018678:	4356      	muls	r6, r2
 801867a:	1c72      	adds	r2, r6, #1
 801867c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018680:	1212      	asrs	r2, r2, #8
 8018682:	fa1f f982 	uxth.w	r9, r2
 8018686:	ea4f 2728 	mov.w	r7, r8, asr #8
 801868a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801868e:	43d2      	mvns	r2, r2
 8018690:	b2d2      	uxtb	r2, r2
 8018692:	fb16 f609 	smulbb	r6, r6, r9
 8018696:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801869a:	fb07 6702 	mla	r7, r7, r2, r6
 801869e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80186a2:	ea4f 06e8 	mov.w	r6, r8, asr #3
 80186a6:	b2ed      	uxtb	r5, r5
 80186a8:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 80186ac:	fa5f f888 	uxtb.w	r8, r8
 80186b0:	fb15 f509 	smulbb	r5, r5, r9
 80186b4:	fb08 5502 	mla	r5, r8, r2, r5
 80186b8:	b2bf      	uxth	r7, r7
 80186ba:	fb1a fa09 	smulbb	sl, sl, r9
 80186be:	b2ad      	uxth	r5, r5
 80186c0:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80186c4:	fb06 a602 	mla	r6, r6, r2, sl
 80186c8:	1c7a      	adds	r2, r7, #1
 80186ca:	f105 0a01 	add.w	sl, r5, #1
 80186ce:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 80186d2:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 80186d6:	b2b6      	uxth	r6, r6
 80186d8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80186dc:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80186e0:	ea4a 0707 	orr.w	r7, sl, r7
 80186e4:	f106 0a01 	add.w	sl, r6, #1
 80186e8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80186ec:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80186f0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80186f4:	9a03      	ldr	r2, [sp, #12]
 80186f6:	ea47 070a 	orr.w	r7, r7, sl
 80186fa:	52a7      	strh	r7, [r4, r2]
 80186fc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80186fe:	4410      	add	r0, r2
 8018700:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8018702:	f10e 3eff 	add.w	lr, lr, #4294967295
 8018706:	4411      	add	r1, r2
 8018708:	e755      	b.n	80185b6 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 801870a:	f04f 0800 	mov.w	r8, #0
 801870e:	eba3 0208 	sub.w	r2, r3, r8
 8018712:	2a00      	cmp	r2, #0
 8018714:	f77f af53 	ble.w	80185be <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8018718:	f9bc 6008 	ldrsh.w	r6, [ip, #8]
 801871c:	9f01      	ldr	r7, [sp, #4]
 801871e:	140a      	asrs	r2, r1, #16
 8018720:	1405      	asrs	r5, r0, #16
 8018722:	fb06 7202 	mla	r2, r6, r2, r7
 8018726:	5d52      	ldrb	r2, [r2, r5]
 8018728:	9d02      	ldr	r5, [sp, #8]
 801872a:	f855 5022 	ldr.w	r5, [r5, r2, lsl #2]
 801872e:	0e2e      	lsrs	r6, r5, #24
 8018730:	d044      	beq.n	80187bc <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 8018732:	9a05      	ldr	r2, [sp, #20]
 8018734:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8018738:	4356      	muls	r6, r2
 801873a:	1c72      	adds	r2, r6, #1
 801873c:	eb02 2226 	add.w	r2, r2, r6, asr #8
 8018740:	1212      	asrs	r2, r2, #8
 8018742:	fa1f f982 	uxth.w	r9, r2
 8018746:	ea4f 272e 	mov.w	r7, lr, asr #8
 801874a:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801874e:	43d2      	mvns	r2, r2
 8018750:	b2d2      	uxtb	r2, r2
 8018752:	fb16 f609 	smulbb	r6, r6, r9
 8018756:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801875a:	fb07 6702 	mla	r7, r7, r2, r6
 801875e:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018762:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018766:	b2ed      	uxtb	r5, r5
 8018768:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801876c:	fa5f fe8e 	uxtb.w	lr, lr
 8018770:	fb15 f509 	smulbb	r5, r5, r9
 8018774:	fb0e 5502 	mla	r5, lr, r2, r5
 8018778:	b2bf      	uxth	r7, r7
 801877a:	fb1a fa09 	smulbb	sl, sl, r9
 801877e:	b2ad      	uxth	r5, r5
 8018780:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018784:	fb06 a602 	mla	r6, r6, r2, sl
 8018788:	1c7a      	adds	r2, r7, #1
 801878a:	f105 0a01 	add.w	sl, r5, #1
 801878e:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8018792:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018796:	b2b6      	uxth	r6, r6
 8018798:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801879c:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 80187a0:	ea4a 0707 	orr.w	r7, sl, r7
 80187a4:	f106 0a01 	add.w	sl, r6, #1
 80187a8:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 80187ac:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80187b0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80187b4:	ea47 070a 	orr.w	r7, r7, sl
 80187b8:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 80187bc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80187be:	4410      	add	r0, r2
 80187c0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80187c2:	f108 0801 	add.w	r8, r8, #1
 80187c6:	4411      	add	r1, r2
 80187c8:	e7a1      	b.n	801870e <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 80187ca:	b007      	add	sp, #28
 80187cc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080187d0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80187d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80187d4:	b085      	sub	sp, #20
 80187d6:	468b      	mov	fp, r1
 80187d8:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 80187da:	9203      	str	r2, [sp, #12]
 80187dc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 80187e0:	6841      	ldr	r1, [r0, #4]
 80187e2:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 80187e6:	fb01 2404 	mla	r4, r1, r4, r2
 80187ea:	6802      	ldr	r2, [r0, #0]
 80187ec:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80187f0:	f8de 2000 	ldr.w	r2, [lr]
 80187f4:	9200      	str	r2, [sp, #0]
 80187f6:	f8de 2004 	ldr.w	r2, [lr, #4]
 80187fa:	3204      	adds	r2, #4
 80187fc:	9201      	str	r2, [sp, #4]
 80187fe:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018802:	f1bb 0f00 	cmp.w	fp, #0
 8018806:	dc03      	bgt.n	8018810 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8018808:	9a03      	ldr	r2, [sp, #12]
 801880a:	2a00      	cmp	r2, #0
 801880c:	f340 8153 	ble.w	8018ab6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018810:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018812:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018816:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 801881a:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801881e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018820:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018824:	2b00      	cmp	r3, #0
 8018826:	dd0e      	ble.n	8018846 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018828:	1408      	asrs	r0, r1, #16
 801882a:	d405      	bmi.n	8018838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 801882c:	42b8      	cmp	r0, r7
 801882e:	da03      	bge.n	8018838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018830:	1410      	asrs	r0, r2, #16
 8018832:	d401      	bmi.n	8018838 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8018834:	42b0      	cmp	r0, r6
 8018836:	db07      	blt.n	8018848 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8018838:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801883a:	4401      	add	r1, r0
 801883c:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801883e:	3b01      	subs	r3, #1
 8018840:	4402      	add	r2, r0
 8018842:	3402      	adds	r4, #2
 8018844:	e7ee      	b.n	8018824 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8018846:	d017      	beq.n	8018878 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018848:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801884a:	1e58      	subs	r0, r3, #1
 801884c:	fb05 1500 	mla	r5, r5, r0, r1
 8018850:	142d      	asrs	r5, r5, #16
 8018852:	d409      	bmi.n	8018868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018854:	42bd      	cmp	r5, r7
 8018856:	da07      	bge.n	8018868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018858:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 801885a:	fb05 2000 	mla	r0, r5, r0, r2
 801885e:	1400      	asrs	r0, r0, #16
 8018860:	d402      	bmi.n	8018868 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018862:	42b0      	cmp	r0, r6
 8018864:	f2c0 80bc 	blt.w	80189e0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x210>
 8018868:	2600      	movs	r6, #0
 801886a:	1998      	adds	r0, r3, r6
 801886c:	2800      	cmp	r0, #0
 801886e:	dc3e      	bgt.n	80188ee <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11e>
 8018870:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018874:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8018878:	f1bb 0f00 	cmp.w	fp, #0
 801887c:	f340 811b 	ble.w	8018ab6 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e6>
 8018880:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018884:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018888:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801888c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801888e:	f1bb 0b01 	subs.w	fp, fp, #1
 8018892:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018896:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801889a:	eeb0 6a62 	vmov.f32	s12, s5
 801889e:	ee61 7a27 	vmul.f32	s15, s2, s15
 80188a2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80188a6:	ee77 2a62 	vsub.f32	s5, s14, s5
 80188aa:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80188ae:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80188b2:	eeb0 6a43 	vmov.f32	s12, s6
 80188b6:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80188ba:	ee12 2a90 	vmov	r2, s5
 80188be:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80188c2:	fb92 f3f3 	sdiv	r3, r2, r3
 80188c6:	ee13 2a10 	vmov	r2, s6
 80188ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80188ce:	9311      	str	r3, [sp, #68]	@ 0x44
 80188d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80188d2:	fb92 f3f3 	sdiv	r3, r2, r3
 80188d6:	9a03      	ldr	r2, [sp, #12]
 80188d8:	9312      	str	r3, [sp, #72]	@ 0x48
 80188da:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80188de:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80188e0:	eeb0 3a67 	vmov.f32	s6, s15
 80188e4:	bf08      	it	eq
 80188e6:	4613      	moveq	r3, r2
 80188e8:	eef0 2a47 	vmov.f32	s5, s14
 80188ec:	e789      	b.n	8018802 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 80188ee:	140f      	asrs	r7, r1, #16
 80188f0:	d426      	bmi.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80188f2:	f8de 5008 	ldr.w	r5, [lr, #8]
 80188f6:	42bd      	cmp	r5, r7
 80188f8:	dd22      	ble.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80188fa:	ea5f 4c22 	movs.w	ip, r2, asr #16
 80188fe:	d41f      	bmi.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018900:	f8de 000c 	ldr.w	r0, [lr, #12]
 8018904:	4560      	cmp	r0, ip
 8018906:	dd1b      	ble.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018908:	9800      	ldr	r0, [sp, #0]
 801890a:	b22d      	sxth	r5, r5
 801890c:	fb0c 0505 	mla	r5, ip, r5, r0
 8018910:	5de8      	ldrb	r0, [r5, r7]
 8018912:	9d01      	ldr	r5, [sp, #4]
 8018914:	f855 0020 	ldr.w	r0, [r5, r0, lsl #2]
 8018918:	0e07      	lsrs	r7, r0, #24
 801891a:	2fff      	cmp	r7, #255	@ 0xff
 801891c:	d116      	bne.n	801894c <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801891e:	f06f 0501 	mvn.w	r5, #1
 8018922:	fb05 f706 	mul.w	r7, r5, r6
 8018926:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 801892a:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 801892e:	0945      	lsrs	r5, r0, #5
 8018930:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8018934:	ea4c 0505 	orr.w	r5, ip, r5
 8018938:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801893c:	4305      	orrs	r5, r0
 801893e:	53e5      	strh	r5, [r4, r7]
 8018940:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018942:	4401      	add	r1, r0
 8018944:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018946:	3e01      	subs	r6, #1
 8018948:	4402      	add	r2, r0
 801894a:	e78e      	b.n	801886a <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801894c:	b2fd      	uxtb	r5, r7
 801894e:	2f00      	cmp	r7, #0
 8018950:	d0f6      	beq.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8018952:	f06f 0701 	mvn.w	r7, #1
 8018956:	4377      	muls	r7, r6
 8018958:	fa1f f985 	uxth.w	r9, r5
 801895c:	f834 8007 	ldrh.w	r8, [r4, r7]
 8018960:	9702      	str	r7, [sp, #8]
 8018962:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018966:	f3c0 4707 	ubfx	r7, r0, #16, #8
 801896a:	43ed      	mvns	r5, r5
 801896c:	b2ed      	uxtb	r5, r5
 801896e:	fb17 f709 	smulbb	r7, r7, r9
 8018972:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018976:	fb0c 7c05 	mla	ip, ip, r5, r7
 801897a:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 801897e:	ea4f 07e8 	mov.w	r7, r8, asr #3
 8018982:	b2c0      	uxtb	r0, r0
 8018984:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018988:	fa5f f888 	uxtb.w	r8, r8
 801898c:	fb10 f009 	smulbb	r0, r0, r9
 8018990:	fb08 0005 	mla	r0, r8, r5, r0
 8018994:	b280      	uxth	r0, r0
 8018996:	fa1f fc8c 	uxth.w	ip, ip
 801899a:	fb1a fa09 	smulbb	sl, sl, r9
 801899e:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 80189a2:	fb07 a705 	mla	r7, r7, r5, sl
 80189a6:	f100 0a01 	add.w	sl, r0, #1
 80189aa:	f10c 0501 	add.w	r5, ip, #1
 80189ae:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 80189b2:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80189b6:	b2bf      	uxth	r7, r7
 80189b8:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 80189bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80189c0:	ea4a 0c0c 	orr.w	ip, sl, ip
 80189c4:	f107 0a01 	add.w	sl, r7, #1
 80189c8:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 80189cc:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 80189d0:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 80189d4:	9802      	ldr	r0, [sp, #8]
 80189d6:	ea4c 0c0a 	orr.w	ip, ip, sl
 80189da:	f824 c000 	strh.w	ip, [r4, r0]
 80189de:	e7af      	b.n	8018940 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 80189e0:	f04f 0800 	mov.w	r8, #0
 80189e4:	eba3 0008 	sub.w	r0, r3, r8
 80189e8:	2800      	cmp	r0, #0
 80189ea:	f77f af41 	ble.w	8018870 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80189ee:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 80189f2:	9f00      	ldr	r7, [sp, #0]
 80189f4:	1410      	asrs	r0, r2, #16
 80189f6:	140d      	asrs	r5, r1, #16
 80189f8:	fb06 7000 	mla	r0, r6, r0, r7
 80189fc:	5d40      	ldrb	r0, [r0, r5]
 80189fe:	9d01      	ldr	r5, [sp, #4]
 8018a00:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8018a04:	0e2e      	lsrs	r6, r5, #24
 8018a06:	2eff      	cmp	r6, #255	@ 0xff
 8018a08:	d112      	bne.n	8018a30 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x260>
 8018a0a:	482c      	ldr	r0, [pc, #176]	@ (8018abc <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ec>)
 8018a0c:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8018a10:	0968      	lsrs	r0, r5, #5
 8018a12:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8018a16:	4330      	orrs	r0, r6
 8018a18:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8018a1c:	4328      	orrs	r0, r5
 8018a1e:	f824 0018 	strh.w	r0, [r4, r8, lsl #1]
 8018a22:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8018a24:	4401      	add	r1, r0
 8018a26:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8018a28:	f108 0801 	add.w	r8, r8, #1
 8018a2c:	4402      	add	r2, r0
 8018a2e:	e7d9      	b.n	80189e4 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8018a30:	b2f0      	uxtb	r0, r6
 8018a32:	2e00      	cmp	r6, #0
 8018a34:	d0f5      	beq.n	8018a22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018a36:	f834 c018 	ldrh.w	ip, [r4, r8, lsl #1]
 8018a3a:	fa1f f980 	uxth.w	r9, r0
 8018a3e:	ea4f 272c 	mov.w	r7, ip, asr #8
 8018a42:	f3c5 4607 	ubfx	r6, r5, #16, #8
 8018a46:	43c0      	mvns	r0, r0
 8018a48:	b2c0      	uxtb	r0, r0
 8018a4a:	fb16 f609 	smulbb	r6, r6, r9
 8018a4e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018a52:	fb07 6700 	mla	r7, r7, r0, r6
 8018a56:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 8018a5a:	ea4f 06ec 	mov.w	r6, ip, asr #3
 8018a5e:	b2ed      	uxtb	r5, r5
 8018a60:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8018a64:	fa5f fc8c 	uxtb.w	ip, ip
 8018a68:	fb15 f509 	smulbb	r5, r5, r9
 8018a6c:	fb0c 5500 	mla	r5, ip, r0, r5
 8018a70:	b2bf      	uxth	r7, r7
 8018a72:	fb1a fa09 	smulbb	sl, sl, r9
 8018a76:	b2ad      	uxth	r5, r5
 8018a78:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018a7c:	fb06 a600 	mla	r6, r6, r0, sl
 8018a80:	1c78      	adds	r0, r7, #1
 8018a82:	f105 0a01 	add.w	sl, r5, #1
 8018a86:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 8018a8a:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018a8e:	b2b6      	uxth	r6, r6
 8018a90:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018a94:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8018a98:	ea4a 0707 	orr.w	r7, sl, r7
 8018a9c:	f106 0a01 	add.w	sl, r6, #1
 8018aa0:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018aa4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018aa8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018aac:	ea47 070a 	orr.w	r7, r7, sl
 8018ab0:	f824 7018 	strh.w	r7, [r4, r8, lsl #1]
 8018ab4:	e7b5      	b.n	8018a22 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 8018ab6:	b005      	add	sp, #20
 8018ab8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8018abc:	fffff800 	.word	0xfffff800

08018ac0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018ac0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018ac4:	b087      	sub	sp, #28
 8018ac6:	468b      	mov	fp, r1
 8018ac8:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8018aca:	9204      	str	r2, [sp, #16]
 8018acc:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8018ad0:	9205      	str	r2, [sp, #20]
 8018ad2:	e9dd 2016 	ldrd	r2, r0, [sp, #88]	@ 0x58
 8018ad6:	6861      	ldr	r1, [r4, #4]
 8018ad8:	f8dd e060 	ldr.w	lr, [sp, #96]	@ 0x60
 8018adc:	fb01 2000 	mla	r0, r1, r0, r2
 8018ae0:	6822      	ldr	r2, [r4, #0]
 8018ae2:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018ae6:	f8de 2000 	ldr.w	r2, [lr]
 8018aea:	9201      	str	r2, [sp, #4]
 8018aec:	f8de 2004 	ldr.w	r2, [lr, #4]
 8018af0:	9202      	str	r2, [sp, #8]
 8018af2:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018af6:	f1bb 0f00 	cmp.w	fp, #0
 8018afa:	dc03      	bgt.n	8018b04 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44>
 8018afc:	9a04      	ldr	r2, [sp, #16]
 8018afe:	2a00      	cmp	r2, #0
 8018b00:	f340 8142 	ble.w	8018d88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018b04:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8018b06:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8018b0a:	f9be 600c 	ldrsh.w	r6, [lr, #12]
 8018b0e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018b12:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8018b14:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018b18:	2b00      	cmp	r3, #0
 8018b1a:	dd0e      	ble.n	8018b3a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8018b1c:	140c      	asrs	r4, r1, #16
 8018b1e:	d405      	bmi.n	8018b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018b20:	42bc      	cmp	r4, r7
 8018b22:	da03      	bge.n	8018b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018b24:	1414      	asrs	r4, r2, #16
 8018b26:	d401      	bmi.n	8018b2c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8018b28:	42b4      	cmp	r4, r6
 8018b2a:	db07      	blt.n	8018b3c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8018b2c:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018b2e:	4421      	add	r1, r4
 8018b30:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018b32:	3b01      	subs	r3, #1
 8018b34:	4422      	add	r2, r4
 8018b36:	3002      	adds	r0, #2
 8018b38:	e7ee      	b.n	8018b18 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8018b3a:	d019      	beq.n	8018b70 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8018b3c:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8018b3e:	1e5c      	subs	r4, r3, #1
 8018b40:	fb05 1504 	mla	r5, r5, r4, r1
 8018b44:	142d      	asrs	r5, r5, #16
 8018b46:	d409      	bmi.n	8018b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b48:	42bd      	cmp	r5, r7
 8018b4a:	da07      	bge.n	8018b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b4c:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8018b4e:	fb05 2404 	mla	r4, r5, r4, r2
 8018b52:	1424      	asrs	r4, r4, #16
 8018b54:	d402      	bmi.n	8018b5c <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8018b56:	42b4      	cmp	r4, r6
 8018b58:	f2c0 80b1 	blt.w	8018cbe <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 8018b5c:	f04f 0800 	mov.w	r8, #0
 8018b60:	eb03 0408 	add.w	r4, r3, r8
 8018b64:	2c00      	cmp	r4, #0
 8018b66:	dc3e      	bgt.n	8018be6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8018b68:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018b6c:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018b70:	f1bb 0f00 	cmp.w	fp, #0
 8018b74:	f340 8108 	ble.w	8018d88 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c8>
 8018b78:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018b7c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018b80:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018b84:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018b86:	f1bb 0b01 	subs.w	fp, fp, #1
 8018b8a:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018b8e:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018b92:	eeb0 6a62 	vmov.f32	s12, s5
 8018b96:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018b9a:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018b9e:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018ba2:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8018ba6:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018baa:	eeb0 6a43 	vmov.f32	s12, s6
 8018bae:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018bb2:	ee12 2a90 	vmov	r2, s5
 8018bb6:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018bba:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bbe:	ee13 2a10 	vmov	r2, s6
 8018bc2:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018bc6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8018bc8:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018bca:	fb92 f3f3 	sdiv	r3, r2, r3
 8018bce:	9a04      	ldr	r2, [sp, #16]
 8018bd0:	9314      	str	r3, [sp, #80]	@ 0x50
 8018bd2:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8018bd6:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8018bd8:	eeb0 3a67 	vmov.f32	s6, s15
 8018bdc:	bf08      	it	eq
 8018bde:	4613      	moveq	r3, r2
 8018be0:	eef0 2a47 	vmov.f32	s5, s14
 8018be4:	e787      	b.n	8018af6 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36>
 8018be6:	140e      	asrs	r6, r1, #16
 8018be8:	d462      	bmi.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018bea:	f8de 5008 	ldr.w	r5, [lr, #8]
 8018bee:	42b5      	cmp	r5, r6
 8018bf0:	dd5e      	ble.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018bf2:	1417      	asrs	r7, r2, #16
 8018bf4:	d45c      	bmi.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018bf6:	f8de 400c 	ldr.w	r4, [lr, #12]
 8018bfa:	42bc      	cmp	r4, r7
 8018bfc:	dd58      	ble.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018bfe:	b22d      	sxth	r5, r5
 8018c00:	fb07 6505 	mla	r5, r7, r5, r6
 8018c04:	9c02      	ldr	r4, [sp, #8]
 8018c06:	5d66      	ldrb	r6, [r4, r5]
 8018c08:	2e00      	cmp	r6, #0
 8018c0a:	d051      	beq.n	8018cb0 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 8018c0c:	9c01      	ldr	r4, [sp, #4]
 8018c0e:	f834 9015 	ldrh.w	r9, [r4, r5, lsl #1]
 8018c12:	f06f 0401 	mvn.w	r4, #1
 8018c16:	fb04 f408 	mul.w	r4, r4, r8
 8018c1a:	9403      	str	r4, [sp, #12]
 8018c1c:	5b05      	ldrh	r5, [r0, r4]
 8018c1e:	9c05      	ldr	r4, [sp, #20]
 8018c20:	4366      	muls	r6, r4
 8018c22:	1c74      	adds	r4, r6, #1
 8018c24:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018c28:	1224      	asrs	r4, r4, #8
 8018c2a:	b2a7      	uxth	r7, r4
 8018c2c:	122e      	asrs	r6, r5, #8
 8018c2e:	43e4      	mvns	r4, r4
 8018c30:	b2e4      	uxtb	r4, r4
 8018c32:	ea4f 2c29 	mov.w	ip, r9, asr #8
 8018c36:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018c3a:	fb16 f604 	smulbb	r6, r6, r4
 8018c3e:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018c42:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018c46:	00ed      	lsls	r5, r5, #3
 8018c48:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018c4c:	b2ed      	uxtb	r5, r5
 8018c4e:	ea4f 06e9 	mov.w	r6, r9, asr #3
 8018c52:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018c56:	fb15 f504 	smulbb	r5, r5, r4
 8018c5a:	fa5f f989 	uxtb.w	r9, r9
 8018c5e:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018c62:	fb09 5507 	mla	r5, r9, r7, r5
 8018c66:	fb1a fa04 	smulbb	sl, sl, r4
 8018c6a:	fa1f fc8c 	uxth.w	ip, ip
 8018c6e:	b2ad      	uxth	r5, r5
 8018c70:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018c74:	fb06 a607 	mla	r6, r6, r7, sl
 8018c78:	f10c 0401 	add.w	r4, ip, #1
 8018c7c:	f105 0a01 	add.w	sl, r5, #1
 8018c80:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018c84:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018c88:	b2b6      	uxth	r6, r6
 8018c8a:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018c8e:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018c92:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018c96:	f106 0a01 	add.w	sl, r6, #1
 8018c9a:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018c9e:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018ca2:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018ca6:	9c03      	ldr	r4, [sp, #12]
 8018ca8:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018cac:	f820 c004 	strh.w	ip, [r0, r4]
 8018cb0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018cb2:	4421      	add	r1, r4
 8018cb4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018cb6:	f108 38ff 	add.w	r8, r8, #4294967295
 8018cba:	4422      	add	r2, r4
 8018cbc:	e750      	b.n	8018b60 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8018cbe:	f04f 0900 	mov.w	r9, #0
 8018cc2:	eba3 0409 	sub.w	r4, r3, r9
 8018cc6:	2c00      	cmp	r4, #0
 8018cc8:	f77f af4e 	ble.w	8018b68 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8018ccc:	f9be 6008 	ldrsh.w	r6, [lr, #8]
 8018cd0:	140d      	asrs	r5, r1, #16
 8018cd2:	1414      	asrs	r4, r2, #16
 8018cd4:	fb06 5404 	mla	r4, r6, r4, r5
 8018cd8:	9d02      	ldr	r5, [sp, #8]
 8018cda:	5d2e      	ldrb	r6, [r5, r4]
 8018cdc:	2e00      	cmp	r6, #0
 8018cde:	d04c      	beq.n	8018d7a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ba>
 8018ce0:	9d01      	ldr	r5, [sp, #4]
 8018ce2:	f835 8014 	ldrh.w	r8, [r5, r4, lsl #1]
 8018ce6:	9c05      	ldr	r4, [sp, #20]
 8018ce8:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018cec:	4366      	muls	r6, r4
 8018cee:	1c74      	adds	r4, r6, #1
 8018cf0:	eb04 2416 	add.w	r4, r4, r6, lsr #8
 8018cf4:	1224      	asrs	r4, r4, #8
 8018cf6:	b2a7      	uxth	r7, r4
 8018cf8:	122e      	asrs	r6, r5, #8
 8018cfa:	43e4      	mvns	r4, r4
 8018cfc:	b2e4      	uxtb	r4, r4
 8018cfe:	ea4f 2c28 	mov.w	ip, r8, asr #8
 8018d02:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018d06:	fb16 f604 	smulbb	r6, r6, r4
 8018d0a:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018d0e:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018d12:	00ed      	lsls	r5, r5, #3
 8018d14:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018d18:	b2ed      	uxtb	r5, r5
 8018d1a:	ea4f 06e8 	mov.w	r6, r8, asr #3
 8018d1e:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8018d22:	fb15 f504 	smulbb	r5, r5, r4
 8018d26:	fa5f f888 	uxtb.w	r8, r8
 8018d2a:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018d2e:	fb08 5507 	mla	r5, r8, r7, r5
 8018d32:	fb1a fa04 	smulbb	sl, sl, r4
 8018d36:	fa1f fc8c 	uxth.w	ip, ip
 8018d3a:	b2ad      	uxth	r5, r5
 8018d3c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8018d40:	fb06 a607 	mla	r6, r6, r7, sl
 8018d44:	f10c 0401 	add.w	r4, ip, #1
 8018d48:	f105 0a01 	add.w	sl, r5, #1
 8018d4c:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 8018d50:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018d54:	b2b6      	uxth	r6, r6
 8018d56:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018d5a:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8018d5e:	ea4a 0c0c 	orr.w	ip, sl, ip
 8018d62:	f106 0a01 	add.w	sl, r6, #1
 8018d66:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8018d6a:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018d6e:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018d72:	ea4c 0c0a 	orr.w	ip, ip, sl
 8018d76:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8018d7a:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018d7c:	4421      	add	r1, r4
 8018d7e:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8018d80:	f109 0901 	add.w	r9, r9, #1
 8018d84:	4422      	add	r2, r4
 8018d86:	e79c      	b.n	8018cc2 <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x202>
 8018d88:	b007      	add	sp, #28
 8018d8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08018d8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8018d8e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8018d92:	b085      	sub	sp, #20
 8018d94:	468b      	mov	fp, r1
 8018d96:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8018d98:	9203      	str	r2, [sp, #12]
 8018d9a:	e9dd 2014 	ldrd	r2, r0, [sp, #80]	@ 0x50
 8018d9e:	6861      	ldr	r1, [r4, #4]
 8018da0:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 8018da4:	fb01 2000 	mla	r0, r1, r0, r2
 8018da8:	6822      	ldr	r2, [r4, #0]
 8018daa:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 8018dae:	f8d8 2000 	ldr.w	r2, [r8]
 8018db2:	9200      	str	r2, [sp, #0]
 8018db4:	f8d8 2004 	ldr.w	r2, [r8, #4]
 8018db8:	9201      	str	r2, [sp, #4]
 8018dba:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8018dbe:	f1bb 0f00 	cmp.w	fp, #0
 8018dc2:	dc03      	bgt.n	8018dcc <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8018dc4:	9a03      	ldr	r2, [sp, #12]
 8018dc6:	2a00      	cmp	r2, #0
 8018dc8:	f340 8146 	ble.w	8019058 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018dcc:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8018dce:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8018dd2:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8018dd6:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8018dda:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8018ddc:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8018de0:	2b00      	cmp	r3, #0
 8018de2:	dd0e      	ble.n	8018e02 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8018de4:	140c      	asrs	r4, r1, #16
 8018de6:	d405      	bmi.n	8018df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018de8:	42bc      	cmp	r4, r7
 8018dea:	da03      	bge.n	8018df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018dec:	1414      	asrs	r4, r2, #16
 8018dee:	d401      	bmi.n	8018df4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8018df0:	42b4      	cmp	r4, r6
 8018df2:	db07      	blt.n	8018e04 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8018df4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018df6:	4421      	add	r1, r4
 8018df8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018dfa:	3b01      	subs	r3, #1
 8018dfc:	4422      	add	r2, r4
 8018dfe:	3002      	adds	r0, #2
 8018e00:	e7ee      	b.n	8018de0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8018e02:	d017      	beq.n	8018e34 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 8018e04:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8018e06:	1e5c      	subs	r4, r3, #1
 8018e08:	fb05 1504 	mla	r5, r5, r4, r1
 8018e0c:	142d      	asrs	r5, r5, #16
 8018e0e:	d409      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018e10:	42bd      	cmp	r5, r7
 8018e12:	da07      	bge.n	8018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018e14:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8018e16:	fb05 2404 	mla	r4, r5, r4, r2
 8018e1a:	1424      	asrs	r4, r4, #16
 8018e1c:	d402      	bmi.n	8018e24 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8018e1e:	42b4      	cmp	r4, r6
 8018e20:	f2c0 80b3 	blt.w	8018f8a <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fc>
 8018e24:	2600      	movs	r6, #0
 8018e26:	199c      	adds	r4, r3, r6
 8018e28:	2c00      	cmp	r4, #0
 8018e2a:	dc3e      	bgt.n	8018eaa <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 8018e2c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8018e30:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 8018e34:	f1bb 0f00 	cmp.w	fp, #0
 8018e38:	f340 810e 	ble.w	8019058 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ca>
 8018e3c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8018e40:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8018e44:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8018e48:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e4a:	f1bb 0b01 	subs.w	fp, fp, #1
 8018e4e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8018e52:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8018e56:	eeb0 6a62 	vmov.f32	s12, s5
 8018e5a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8018e5e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e62:	ee77 2a62 	vsub.f32	s5, s14, s5
 8018e66:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 8018e6a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8018e6e:	eeb0 6a43 	vmov.f32	s12, s6
 8018e72:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8018e76:	ee12 2a90 	vmov	r2, s5
 8018e7a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8018e7e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e82:	ee13 2a10 	vmov	r2, s6
 8018e86:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8018e8a:	9311      	str	r3, [sp, #68]	@ 0x44
 8018e8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8018e92:	9a03      	ldr	r2, [sp, #12]
 8018e94:	9312      	str	r3, [sp, #72]	@ 0x48
 8018e96:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 8018e9a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8018e9c:	eeb0 3a67 	vmov.f32	s6, s15
 8018ea0:	bf08      	it	eq
 8018ea2:	4613      	moveq	r3, r2
 8018ea4:	eef0 2a47 	vmov.f32	s5, s14
 8018ea8:	e789      	b.n	8018dbe <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8018eaa:	140f      	asrs	r7, r1, #16
 8018eac:	d418      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018eae:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8018eb2:	42bd      	cmp	r5, r7
 8018eb4:	dd14      	ble.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018eb6:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8018eba:	d411      	bmi.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018ebc:	f8d8 400c 	ldr.w	r4, [r8, #12]
 8018ec0:	4564      	cmp	r4, ip
 8018ec2:	dd0d      	ble.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018ec4:	b22d      	sxth	r5, r5
 8018ec6:	fb0c 7505 	mla	r5, ip, r5, r7
 8018eca:	9c01      	ldr	r4, [sp, #4]
 8018ecc:	5d64      	ldrb	r4, [r4, r5]
 8018ece:	2cff      	cmp	r4, #255	@ 0xff
 8018ed0:	d10c      	bne.n	8018eec <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x15e>
 8018ed2:	9c00      	ldr	r4, [sp, #0]
 8018ed4:	f834 5015 	ldrh.w	r5, [r4, r5, lsl #1]
 8018ed8:	f06f 0401 	mvn.w	r4, #1
 8018edc:	4374      	muls	r4, r6
 8018ede:	5305      	strh	r5, [r0, r4]
 8018ee0:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018ee2:	4421      	add	r1, r4
 8018ee4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018ee6:	3e01      	subs	r6, #1
 8018ee8:	4422      	add	r2, r4
 8018eea:	e79c      	b.n	8018e26 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8018eec:	2c00      	cmp	r4, #0
 8018eee:	d0f7      	beq.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018ef0:	9f00      	ldr	r7, [sp, #0]
 8018ef2:	f837 9015 	ldrh.w	r9, [r7, r5, lsl #1]
 8018ef6:	f06f 0501 	mvn.w	r5, #1
 8018efa:	4375      	muls	r5, r6
 8018efc:	9502      	str	r5, [sp, #8]
 8018efe:	5b45      	ldrh	r5, [r0, r5]
 8018f00:	fa1f fc84 	uxth.w	ip, r4
 8018f04:	122f      	asrs	r7, r5, #8
 8018f06:	43e4      	mvns	r4, r4
 8018f08:	b2e4      	uxtb	r4, r4
 8018f0a:	ea4f 2e29 	mov.w	lr, r9, asr #8
 8018f0e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8018f12:	fb17 f704 	smulbb	r7, r7, r4
 8018f16:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018f1a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8018f1e:	00ed      	lsls	r5, r5, #3
 8018f20:	fb0e 7e0c 	mla	lr, lr, ip, r7
 8018f24:	b2ed      	uxtb	r5, r5
 8018f26:	ea4f 07e9 	mov.w	r7, r9, asr #3
 8018f2a:	ea4f 09c9 	mov.w	r9, r9, lsl #3
 8018f2e:	fb15 f504 	smulbb	r5, r5, r4
 8018f32:	fa5f f989 	uxtb.w	r9, r9
 8018f36:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 8018f3a:	fb09 550c 	mla	r5, r9, ip, r5
 8018f3e:	fb1a fa04 	smulbb	sl, sl, r4
 8018f42:	fa1f fe8e 	uxth.w	lr, lr
 8018f46:	b2ad      	uxth	r5, r5
 8018f48:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8018f4c:	fb07 a70c 	mla	r7, r7, ip, sl
 8018f50:	f10e 0401 	add.w	r4, lr, #1
 8018f54:	f105 0a01 	add.w	sl, r5, #1
 8018f58:	eb04 2e1e 	add.w	lr, r4, lr, lsr #8
 8018f5c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8018f60:	b2bf      	uxth	r7, r7
 8018f62:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8018f66:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8018f6a:	ea4a 0e0e 	orr.w	lr, sl, lr
 8018f6e:	f107 0a01 	add.w	sl, r7, #1
 8018f72:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8018f76:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8018f7a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8018f7e:	9c02      	ldr	r4, [sp, #8]
 8018f80:	ea4e 0e0a 	orr.w	lr, lr, sl
 8018f84:	f820 e004 	strh.w	lr, [r0, r4]
 8018f88:	e7aa      	b.n	8018ee0 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8018f8a:	f04f 0900 	mov.w	r9, #0
 8018f8e:	eba3 0409 	sub.w	r4, r3, r9
 8018f92:	2c00      	cmp	r4, #0
 8018f94:	f77f af4a 	ble.w	8018e2c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8018f98:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 8018f9c:	1414      	asrs	r4, r2, #16
 8018f9e:	140d      	asrs	r5, r1, #16
 8018fa0:	fb06 5504 	mla	r5, r6, r4, r5
 8018fa4:	9c01      	ldr	r4, [sp, #4]
 8018fa6:	5d64      	ldrb	r4, [r4, r5]
 8018fa8:	2cff      	cmp	r4, #255	@ 0xff
 8018faa:	d10b      	bne.n	8018fc4 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 8018fac:	9c00      	ldr	r4, [sp, #0]
 8018fae:	f834 4015 	ldrh.w	r4, [r4, r5, lsl #1]
 8018fb2:	f820 4019 	strh.w	r4, [r0, r9, lsl #1]
 8018fb6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8018fb8:	4421      	add	r1, r4
 8018fba:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8018fbc:	f109 0901 	add.w	r9, r9, #1
 8018fc0:	4422      	add	r2, r4
 8018fc2:	e7e4      	b.n	8018f8e <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8018fc4:	2c00      	cmp	r4, #0
 8018fc6:	d0f6      	beq.n	8018fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8018fc8:	9e00      	ldr	r6, [sp, #0]
 8018fca:	f836 e015 	ldrh.w	lr, [r6, r5, lsl #1]
 8018fce:	f830 5019 	ldrh.w	r5, [r0, r9, lsl #1]
 8018fd2:	b2a7      	uxth	r7, r4
 8018fd4:	122e      	asrs	r6, r5, #8
 8018fd6:	43e4      	mvns	r4, r4
 8018fd8:	b2e4      	uxtb	r4, r4
 8018fda:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8018fde:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8018fe2:	fb16 f604 	smulbb	r6, r6, r4
 8018fe6:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8018fea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8018fee:	00ed      	lsls	r5, r5, #3
 8018ff0:	fb0c 6c07 	mla	ip, ip, r7, r6
 8018ff4:	b2ed      	uxtb	r5, r5
 8018ff6:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8018ffa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8018ffe:	fb15 f504 	smulbb	r5, r5, r4
 8019002:	fa5f fe8e 	uxtb.w	lr, lr
 8019006:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801900a:	fb0e 5507 	mla	r5, lr, r7, r5
 801900e:	fb1a fa04 	smulbb	sl, sl, r4
 8019012:	fa1f fc8c 	uxth.w	ip, ip
 8019016:	b2ad      	uxth	r5, r5
 8019018:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801901c:	fb06 a607 	mla	r6, r6, r7, sl
 8019020:	f10c 0401 	add.w	r4, ip, #1
 8019024:	f105 0a01 	add.w	sl, r5, #1
 8019028:	eb04 2c1c 	add.w	ip, r4, ip, lsr #8
 801902c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019030:	b2b6      	uxth	r6, r6
 8019032:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019036:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801903a:	ea4a 0c0c 	orr.w	ip, sl, ip
 801903e:	f106 0a01 	add.w	sl, r6, #1
 8019042:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019046:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801904a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801904e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019052:	f820 c019 	strh.w	ip, [r0, r9, lsl #1]
 8019056:	e7ae      	b.n	8018fb6 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 8019058:	b005      	add	sp, #20
 801905a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801905e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801905e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019062:	b085      	sub	sp, #20
 8019064:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 8019066:	9203      	str	r2, [sp, #12]
 8019068:	f89d 205c 	ldrb.w	r2, [sp, #92]	@ 0x5c
 801906c:	9201      	str	r2, [sp, #4]
 801906e:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019072:	9100      	str	r1, [sp, #0]
 8019074:	6841      	ldr	r1, [r0, #4]
 8019076:	f8dd e058 	ldr.w	lr, [sp, #88]	@ 0x58
 801907a:	fb01 2404 	mla	r4, r1, r4, r2
 801907e:	6802      	ldr	r2, [r0, #0]
 8019080:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019084:	f8de 2000 	ldr.w	r2, [lr]
 8019088:	9202      	str	r2, [sp, #8]
 801908a:	9a01      	ldr	r2, [sp, #4]
 801908c:	43d6      	mvns	r6, r2
 801908e:	b2f6      	uxtb	r6, r6
 8019090:	9a00      	ldr	r2, [sp, #0]
 8019092:	2a00      	cmp	r2, #0
 8019094:	dc03      	bgt.n	801909e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 8019096:	9a03      	ldr	r2, [sp, #12]
 8019098:	2a00      	cmp	r2, #0
 801909a:	f340 8124 	ble.w	80192e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 801909e:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80190a0:	f9be c008 	ldrsh.w	ip, [lr, #8]
 80190a4:	f9be 700c 	ldrsh.w	r7, [lr, #12]
 80190a8:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80190ac:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80190ae:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80190b2:	2b00      	cmp	r3, #0
 80190b4:	dd0e      	ble.n	80190d4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80190b6:	1408      	asrs	r0, r1, #16
 80190b8:	d405      	bmi.n	80190c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190ba:	4560      	cmp	r0, ip
 80190bc:	da03      	bge.n	80190c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190be:	1410      	asrs	r0, r2, #16
 80190c0:	d401      	bmi.n	80190c6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 80190c2:	42b8      	cmp	r0, r7
 80190c4:	db07      	blt.n	80190d6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 80190c6:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80190c8:	4401      	add	r1, r0
 80190ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80190cc:	3b01      	subs	r3, #1
 80190ce:	4402      	add	r2, r0
 80190d0:	3402      	adds	r4, #2
 80190d2:	e7ee      	b.n	80190b2 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 80190d4:	d06e      	beq.n	80191b4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x156>
 80190d6:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80190d8:	1e58      	subs	r0, r3, #1
 80190da:	fb05 1500 	mla	r5, r5, r0, r1
 80190de:	142d      	asrs	r5, r5, #16
 80190e0:	d45c      	bmi.n	801919c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80190e2:	4565      	cmp	r5, ip
 80190e4:	da5a      	bge.n	801919c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80190e6:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80190e8:	fb05 2000 	mla	r0, r5, r0, r2
 80190ec:	1400      	asrs	r0, r0, #16
 80190ee:	d455      	bmi.n	801919c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80190f0:	42b8      	cmp	r0, r7
 80190f2:	da53      	bge.n	801919c <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x13e>
 80190f4:	f8bd b004 	ldrh.w	fp, [sp, #4]
 80190f8:	4699      	mov	r9, r3
 80190fa:	46a2      	mov	sl, r4
 80190fc:	f1b9 0f00 	cmp.w	r9, #0
 8019100:	dd54      	ble.n	80191ac <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14e>
 8019102:	f9be 7008 	ldrsh.w	r7, [lr, #8]
 8019106:	140d      	asrs	r5, r1, #16
 8019108:	1410      	asrs	r0, r2, #16
 801910a:	fb07 5000 	mla	r0, r7, r0, r5
 801910e:	9d02      	ldr	r5, [sp, #8]
 8019110:	f835 0010 	ldrh.w	r0, [r5, r0, lsl #1]
 8019114:	f8ba 5000 	ldrh.w	r5, [sl]
 8019118:	122f      	asrs	r7, r5, #8
 801911a:	ea4f 2c20 	mov.w	ip, r0, asr #8
 801911e:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019122:	fb17 f706 	smulbb	r7, r7, r6
 8019126:	ea4f 08e5 	mov.w	r8, r5, asr #3
 801912a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801912e:	00ed      	lsls	r5, r5, #3
 8019130:	fb0c 7c0b 	mla	ip, ip, fp, r7
 8019134:	f008 08fc 	and.w	r8, r8, #252	@ 0xfc
 8019138:	10c7      	asrs	r7, r0, #3
 801913a:	b2ed      	uxtb	r5, r5
 801913c:	00c0      	lsls	r0, r0, #3
 801913e:	fb18 f806 	smulbb	r8, r8, r6
 8019142:	fb15 f506 	smulbb	r5, r5, r6
 8019146:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801914a:	b2c0      	uxtb	r0, r0
 801914c:	fa1f fc8c 	uxth.w	ip, ip
 8019150:	fb07 870b 	mla	r7, r7, fp, r8
 8019154:	fb00 500b 	mla	r0, r0, fp, r5
 8019158:	b280      	uxth	r0, r0
 801915a:	b2bf      	uxth	r7, r7
 801915c:	f10c 0501 	add.w	r5, ip, #1
 8019160:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 8019164:	f107 0801 	add.w	r8, r7, #1
 8019168:	1c45      	adds	r5, r0, #1
 801916a:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801916e:	eb08 2817 	add.w	r8, r8, r7, lsr #8
 8019172:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019174:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019178:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801917c:	ea4f 1858 	mov.w	r8, r8, lsr #5
 8019180:	ea45 0c0c 	orr.w	ip, r5, ip
 8019184:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8019188:	4401      	add	r1, r0
 801918a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801918c:	ea4c 0c08 	orr.w	ip, ip, r8
 8019190:	f82a cb02 	strh.w	ip, [sl], #2
 8019194:	4402      	add	r2, r0
 8019196:	f109 39ff 	add.w	r9, r9, #4294967295
 801919a:	e7af      	b.n	80190fc <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 801919c:	f8bd a004 	ldrh.w	sl, [sp, #4]
 80191a0:	f04f 0800 	mov.w	r8, #0
 80191a4:	eb03 0008 	add.w	r0, r3, r8
 80191a8:	2800      	cmp	r0, #0
 80191aa:	dc41      	bgt.n	8019230 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 80191ac:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80191b0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80191b4:	9b00      	ldr	r3, [sp, #0]
 80191b6:	2b00      	cmp	r3, #0
 80191b8:	f340 8095 	ble.w	80192e6 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x288>
 80191bc:	ee30 0a04 	vadd.f32	s0, s0, s8
 80191c0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80191c4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80191c8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80191ca:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80191ce:	ee31 1a05 	vadd.f32	s2, s2, s10
 80191d2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80191d6:	eef0 6a62 	vmov.f32	s13, s5
 80191da:	ee61 7a27 	vmul.f32	s15, s2, s15
 80191de:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80191e2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80191e6:	edcd 6a0f 	vstr	s13, [sp, #60]	@ 0x3c
 80191ea:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80191ee:	eef0 6a43 	vmov.f32	s13, s6
 80191f2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80191f6:	ee12 2a90 	vmov	r2, s5
 80191fa:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80191fe:	fb92 f3f3 	sdiv	r3, r2, r3
 8019202:	ee13 2a10 	vmov	r2, s6
 8019206:	9311      	str	r3, [sp, #68]	@ 0x44
 8019208:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801920a:	fb92 f3f3 	sdiv	r3, r2, r3
 801920e:	9312      	str	r3, [sp, #72]	@ 0x48
 8019210:	9b00      	ldr	r3, [sp, #0]
 8019212:	9a03      	ldr	r2, [sp, #12]
 8019214:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8019218:	3b01      	subs	r3, #1
 801921a:	9300      	str	r3, [sp, #0]
 801921c:	edcd 6a10 	vstr	s13, [sp, #64]	@ 0x40
 8019220:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8019222:	eeb0 3a67 	vmov.f32	s6, s15
 8019226:	bf08      	it	eq
 8019228:	4613      	moveq	r3, r2
 801922a:	eef0 2a47 	vmov.f32	s5, s14
 801922e:	e72f      	b.n	8019090 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 8019230:	140f      	asrs	r7, r1, #16
 8019232:	d451      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019234:	f8de 5008 	ldr.w	r5, [lr, #8]
 8019238:	42bd      	cmp	r5, r7
 801923a:	dd4d      	ble.n	80192d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801923c:	ea5f 4c22 	movs.w	ip, r2, asr #16
 8019240:	d44a      	bmi.n	80192d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 8019242:	f8de 000c 	ldr.w	r0, [lr, #12]
 8019246:	4560      	cmp	r0, ip
 8019248:	dd46      	ble.n	80192d8 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27a>
 801924a:	b22d      	sxth	r5, r5
 801924c:	fb0c 7505 	mla	r5, ip, r5, r7
 8019250:	9802      	ldr	r0, [sp, #8]
 8019252:	f830 0015 	ldrh.w	r0, [r0, r5, lsl #1]
 8019256:	f06f 0501 	mvn.w	r5, #1
 801925a:	fb05 fb08 	mul.w	fp, r5, r8
 801925e:	ea4f 2c20 	mov.w	ip, r0, asr #8
 8019262:	f834 500b 	ldrh.w	r5, [r4, fp]
 8019266:	122f      	asrs	r7, r5, #8
 8019268:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801926c:	fb17 f706 	smulbb	r7, r7, r6
 8019270:	ea4f 09e5 	mov.w	r9, r5, asr #3
 8019274:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019278:	00ed      	lsls	r5, r5, #3
 801927a:	fb0c 7c0a 	mla	ip, ip, sl, r7
 801927e:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 8019282:	10c7      	asrs	r7, r0, #3
 8019284:	b2ed      	uxtb	r5, r5
 8019286:	00c0      	lsls	r0, r0, #3
 8019288:	fb19 f906 	smulbb	r9, r9, r6
 801928c:	fb15 f506 	smulbb	r5, r5, r6
 8019290:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019294:	b2c0      	uxtb	r0, r0
 8019296:	fa1f fc8c 	uxth.w	ip, ip
 801929a:	fb07 970a 	mla	r7, r7, sl, r9
 801929e:	fb00 500a 	mla	r0, r0, sl, r5
 80192a2:	b2bf      	uxth	r7, r7
 80192a4:	b280      	uxth	r0, r0
 80192a6:	f10c 0501 	add.w	r5, ip, #1
 80192aa:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 80192ae:	f107 0901 	add.w	r9, r7, #1
 80192b2:	1c45      	adds	r5, r0, #1
 80192b4:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 80192b8:	eb09 2917 	add.w	r9, r9, r7, lsr #8
 80192bc:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 80192c0:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 80192c4:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80192c8:	ea45 0c0c 	orr.w	ip, r5, ip
 80192cc:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 80192d0:	ea4c 0c09 	orr.w	ip, ip, r9
 80192d4:	f824 c00b 	strh.w	ip, [r4, fp]
 80192d8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80192da:	4401      	add	r1, r0
 80192dc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80192de:	f108 38ff 	add.w	r8, r8, #4294967295
 80192e2:	4402      	add	r2, r0
 80192e4:	e75e      	b.n	80191a4 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x146>
 80192e6:	b005      	add	sp, #20
 80192e8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080192ec <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80192ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80192f0:	b085      	sub	sp, #20
 80192f2:	4693      	mov	fp, r2
 80192f4:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 80192f6:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80192f8:	6870      	ldr	r0, [r6, #4]
 80192fa:	9101      	str	r1, [sp, #4]
 80192fc:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019300:	fb00 2404 	mla	r4, r0, r4, r2
 8019304:	6832      	ldr	r2, [r6, #0]
 8019306:	e9dd ec11 	ldrd	lr, ip, [sp, #68]	@ 0x44
 801930a:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 801930e:	682a      	ldr	r2, [r5, #0]
 8019310:	9202      	str	r2, [sp, #8]
 8019312:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019316:	9a01      	ldr	r2, [sp, #4]
 8019318:	2a00      	cmp	r2, #0
 801931a:	dc03      	bgt.n	8019324 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 801931c:	f1bb 0f00 	cmp.w	fp, #0
 8019320:	f340 809a 	ble.w	8019458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 8019324:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8019326:	f9b5 9008 	ldrsh.w	r9, [r5, #8]
 801932a:	f9b5 800c 	ldrsh.w	r8, [r5, #12]
 801932e:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019332:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8019334:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 8019338:	2b00      	cmp	r3, #0
 801933a:	dd0c      	ble.n	8019356 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6a>
 801933c:	1406      	asrs	r6, r0, #16
 801933e:	d405      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019340:	454e      	cmp	r6, r9
 8019342:	da03      	bge.n	801934c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019344:	1416      	asrs	r6, r2, #16
 8019346:	d401      	bmi.n	801934c <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 8019348:	4546      	cmp	r6, r8
 801934a:	db05      	blt.n	8019358 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 801934c:	4470      	add	r0, lr
 801934e:	4462      	add	r2, ip
 8019350:	3b01      	subs	r3, #1
 8019352:	3402      	adds	r4, #2
 8019354:	e7f0      	b.n	8019338 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8019356:	d00f      	beq.n	8019378 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 8019358:	1e5e      	subs	r6, r3, #1
 801935a:	fb0e 0706 	mla	r7, lr, r6, r0
 801935e:	143f      	asrs	r7, r7, #16
 8019360:	d541      	bpl.n	80193e6 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfa>
 8019362:	eb04 0643 	add.w	r6, r4, r3, lsl #1
 8019366:	4698      	mov	r8, r3
 8019368:	9603      	str	r6, [sp, #12]
 801936a:	f1b8 0f00 	cmp.w	r8, #0
 801936e:	dc56      	bgt.n	801941e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x132>
 8019370:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019374:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019378:	9b01      	ldr	r3, [sp, #4]
 801937a:	2b00      	cmp	r3, #0
 801937c:	dd6c      	ble.n	8019458 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x16c>
 801937e:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019382:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019386:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801938a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801938c:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019390:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019394:	eeb0 6a62 	vmov.f32	s12, s5
 8019398:	ee61 7a27 	vmul.f32	s15, s2, s15
 801939c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193a0:	ee77 2a62 	vsub.f32	s5, s14, s5
 80193a4:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 80193a8:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80193ac:	eeb0 6a43 	vmov.f32	s12, s6
 80193b0:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80193b4:	ee12 2a90 	vmov	r2, s5
 80193b8:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80193bc:	fb92 fef3 	sdiv	lr, r2, r3
 80193c0:	ee13 2a10 	vmov	r2, s6
 80193c4:	fb92 fcf3 	sdiv	ip, r2, r3
 80193c8:	9b01      	ldr	r3, [sp, #4]
 80193ca:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 80193ce:	3b01      	subs	r3, #1
 80193d0:	9301      	str	r3, [sp, #4]
 80193d2:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 80193d6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80193d8:	eeb0 3a67 	vmov.f32	s6, s15
 80193dc:	bf08      	it	eq
 80193de:	465b      	moveq	r3, fp
 80193e0:	eef0 2a47 	vmov.f32	s5, s14
 80193e4:	e797      	b.n	8019316 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 80193e6:	454f      	cmp	r7, r9
 80193e8:	dabb      	bge.n	8019362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80193ea:	fb0c 2606 	mla	r6, ip, r6, r2
 80193ee:	1436      	asrs	r6, r6, #16
 80193f0:	d4b7      	bmi.n	8019362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80193f2:	4546      	cmp	r6, r8
 80193f4:	dab5      	bge.n	8019362 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80193f6:	461e      	mov	r6, r3
 80193f8:	46a0      	mov	r8, r4
 80193fa:	2e00      	cmp	r6, #0
 80193fc:	ddb8      	ble.n	8019370 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80193fe:	f9b5 a008 	ldrsh.w	sl, [r5, #8]
 8019402:	9902      	ldr	r1, [sp, #8]
 8019404:	1417      	asrs	r7, r2, #16
 8019406:	ea4f 4920 	mov.w	r9, r0, asr #16
 801940a:	fb0a 9707 	mla	r7, sl, r7, r9
 801940e:	4470      	add	r0, lr
 8019410:	f831 7017 	ldrh.w	r7, [r1, r7, lsl #1]
 8019414:	f828 7b02 	strh.w	r7, [r8], #2
 8019418:	4462      	add	r2, ip
 801941a:	3e01      	subs	r6, #1
 801941c:	e7ed      	b.n	80193fa <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10e>
 801941e:	ea5f 4920 	movs.w	r9, r0, asr #16
 8019422:	d414      	bmi.n	801944e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019424:	68ae      	ldr	r6, [r5, #8]
 8019426:	454e      	cmp	r6, r9
 8019428:	dd11      	ble.n	801944e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 801942a:	ea5f 4a22 	movs.w	sl, r2, asr #16
 801942e:	d40e      	bmi.n	801944e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019430:	68ef      	ldr	r7, [r5, #12]
 8019432:	4557      	cmp	r7, sl
 8019434:	dd0b      	ble.n	801944e <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x162>
 8019436:	b236      	sxth	r6, r6
 8019438:	fb0a 9606 	mla	r6, sl, r6, r9
 801943c:	9f02      	ldr	r7, [sp, #8]
 801943e:	f06f 0101 	mvn.w	r1, #1
 8019442:	f837 7016 	ldrh.w	r7, [r7, r6, lsl #1]
 8019446:	fb01 f608 	mul.w	r6, r1, r8
 801944a:	9903      	ldr	r1, [sp, #12]
 801944c:	538f      	strh	r7, [r1, r6]
 801944e:	4470      	add	r0, lr
 8019450:	4462      	add	r2, ip
 8019452:	f108 38ff 	add.w	r8, r8, #4294967295
 8019456:	e788      	b.n	801936a <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019458:	b005      	add	sp, #20
 801945a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801945e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801945e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019462:	b087      	sub	sp, #28
 8019464:	468b      	mov	fp, r1
 8019466:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019468:	9203      	str	r2, [sp, #12]
 801946a:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801946e:	9204      	str	r2, [sp, #16]
 8019470:	e9dd 2516 	ldrd	r2, r5, [sp, #88]	@ 0x58
 8019474:	6841      	ldr	r1, [r0, #4]
 8019476:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 801947a:	fb01 2505 	mla	r5, r1, r5, r2
 801947e:	6802      	ldr	r2, [r0, #0]
 8019480:	eb02 0545 	add.w	r5, r2, r5, lsl #1
 8019484:	f8d9 2000 	ldr.w	r2, [r9]
 8019488:	9201      	str	r2, [sp, #4]
 801948a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801948e:	f1bb 0f00 	cmp.w	fp, #0
 8019492:	dc03      	bgt.n	801949c <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8019494:	9a03      	ldr	r2, [sp, #12]
 8019496:	2a00      	cmp	r2, #0
 8019498:	f340 8159 	ble.w	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801949c:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801949e:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 80194a2:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 80194a6:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 80194aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80194ac:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 80194b0:	2b00      	cmp	r3, #0
 80194b2:	dd0e      	ble.n	80194d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 80194b4:	1402      	asrs	r2, r0, #16
 80194b6:	d405      	bmi.n	80194c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80194b8:	42ba      	cmp	r2, r7
 80194ba:	da03      	bge.n	80194c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80194bc:	140a      	asrs	r2, r1, #16
 80194be:	d401      	bmi.n	80194c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 80194c0:	42b2      	cmp	r2, r6
 80194c2:	db07      	blt.n	80194d4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 80194c4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80194c6:	4410      	add	r0, r2
 80194c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80194ca:	3b01      	subs	r3, #1
 80194cc:	4411      	add	r1, r2
 80194ce:	3502      	adds	r5, #2
 80194d0:	e7ee      	b.n	80194b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 80194d2:	d017      	beq.n	8019504 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa6>
 80194d4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80194d6:	1e5a      	subs	r2, r3, #1
 80194d8:	fb04 0402 	mla	r4, r4, r2, r0
 80194dc:	1424      	asrs	r4, r4, #16
 80194de:	d409      	bmi.n	80194f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80194e0:	42bc      	cmp	r4, r7
 80194e2:	da07      	bge.n	80194f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80194e4:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80194e6:	fb04 1202 	mla	r2, r4, r2, r1
 80194ea:	1412      	asrs	r2, r2, #16
 80194ec:	d402      	bmi.n	80194f4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 80194ee:	42b2      	cmp	r2, r6
 80194f0:	f2c0 80bf 	blt.w	8019672 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 80194f4:	2700      	movs	r7, #0
 80194f6:	19da      	adds	r2, r3, r7
 80194f8:	2a00      	cmp	r2, #0
 80194fa:	dc3e      	bgt.n	801957a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80194fc:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019500:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 8019504:	f1bb 0f00 	cmp.w	fp, #0
 8019508:	f340 8121 	ble.w	801974e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801950c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019510:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019514:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019518:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801951a:	f1bb 0b01 	subs.w	fp, fp, #1
 801951e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019522:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019526:	eeb0 6a62 	vmov.f32	s12, s5
 801952a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801952e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019532:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019536:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 801953a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801953e:	eeb0 6a43 	vmov.f32	s12, s6
 8019542:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019546:	ee12 2a90 	vmov	r2, s5
 801954a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801954e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019552:	ee13 2a10 	vmov	r2, s6
 8019556:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801955a:	9313      	str	r3, [sp, #76]	@ 0x4c
 801955c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801955e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019562:	9a03      	ldr	r2, [sp, #12]
 8019564:	9314      	str	r3, [sp, #80]	@ 0x50
 8019566:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 801956a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801956c:	eeb0 3a67 	vmov.f32	s6, s15
 8019570:	bf08      	it	eq
 8019572:	4613      	moveq	r3, r2
 8019574:	eef0 2a47 	vmov.f32	s5, s14
 8019578:	e789      	b.n	801948e <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 801957a:	1406      	asrs	r6, r0, #16
 801957c:	d42d      	bmi.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801957e:	f8d9 4008 	ldr.w	r4, [r9, #8]
 8019582:	42b4      	cmp	r4, r6
 8019584:	dd29      	ble.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019586:	ea5f 4c21 	movs.w	ip, r1, asr #16
 801958a:	d426      	bmi.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 801958c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019590:	4562      	cmp	r2, ip
 8019592:	dd22      	ble.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019594:	b224      	sxth	r4, r4
 8019596:	9a01      	ldr	r2, [sp, #4]
 8019598:	fb0c 6404 	mla	r4, ip, r4, r6
 801959c:	f852 4024 	ldr.w	r4, [r2, r4, lsl #2]
 80195a0:	0e22      	lsrs	r2, r4, #24
 80195a2:	d01a      	beq.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 80195a4:	9e04      	ldr	r6, [sp, #16]
 80195a6:	4372      	muls	r2, r6
 80195a8:	1c56      	adds	r6, r2, #1
 80195aa:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80195ae:	1212      	asrs	r2, r2, #8
 80195b0:	0a26      	lsrs	r6, r4, #8
 80195b2:	2aff      	cmp	r2, #255	@ 0xff
 80195b4:	9605      	str	r6, [sp, #20]
 80195b6:	d116      	bne.n	80195e6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x188>
 80195b8:	f06f 0201 	mvn.w	r2, #1
 80195bc:	fb02 fc07 	mul.w	ip, r2, r7
 80195c0:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80195c4:	0962      	lsrs	r2, r4, #5
 80195c6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80195ca:	f026 0607 	bic.w	r6, r6, #7
 80195ce:	4316      	orrs	r6, r2
 80195d0:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80195d4:	4326      	orrs	r6, r4
 80195d6:	f825 600c 	strh.w	r6, [r5, ip]
 80195da:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80195dc:	4410      	add	r0, r2
 80195de:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80195e0:	3f01      	subs	r7, #1
 80195e2:	4411      	add	r1, r2
 80195e4:	e787      	b.n	80194f6 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 80195e6:	f06f 0601 	mvn.w	r6, #1
 80195ea:	437e      	muls	r6, r7
 80195ec:	fa1f fa82 	uxth.w	sl, r2
 80195f0:	f835 8006 	ldrh.w	r8, [r5, r6]
 80195f4:	9602      	str	r6, [sp, #8]
 80195f6:	ea4f 2e28 	mov.w	lr, r8, asr #8
 80195fa:	f3c4 4c07 	ubfx	ip, r4, #16, #8
 80195fe:	43d2      	mvns	r2, r2
 8019600:	b2d2      	uxtb	r2, r2
 8019602:	fb1c fc0a 	smulbb	ip, ip, sl
 8019606:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801960a:	fb0e ce02 	mla	lr, lr, r2, ip
 801960e:	b2e4      	uxtb	r4, r4
 8019610:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019614:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019618:	f89d 6014 	ldrb.w	r6, [sp, #20]
 801961c:	fa5f f888 	uxtb.w	r8, r8
 8019620:	fb14 f40a 	smulbb	r4, r4, sl
 8019624:	fb08 4402 	mla	r4, r8, r2, r4
 8019628:	fa1f fe8e 	uxth.w	lr, lr
 801962c:	fb16 f60a 	smulbb	r6, r6, sl
 8019630:	b2a4      	uxth	r4, r4
 8019632:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019636:	fb0c 6c02 	mla	ip, ip, r2, r6
 801963a:	f10e 0201 	add.w	r2, lr, #1
 801963e:	1c66      	adds	r6, r4, #1
 8019640:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019644:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 8019648:	fa1f fc8c 	uxth.w	ip, ip
 801964c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019650:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019654:	ea46 0e0e 	orr.w	lr, r6, lr
 8019658:	f10c 0601 	add.w	r6, ip, #1
 801965c:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019660:	0976      	lsrs	r6, r6, #5
 8019662:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019666:	9a02      	ldr	r2, [sp, #8]
 8019668:	ea4e 0e06 	orr.w	lr, lr, r6
 801966c:	f825 e002 	strh.w	lr, [r5, r2]
 8019670:	e7b3      	b.n	80195da <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x17c>
 8019672:	f04f 0800 	mov.w	r8, #0
 8019676:	eba3 0208 	sub.w	r2, r3, r8
 801967a:	2a00      	cmp	r2, #0
 801967c:	f77f af3e 	ble.w	80194fc <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9e>
 8019680:	f9b9 6008 	ldrsh.w	r6, [r9, #8]
 8019684:	1404      	asrs	r4, r0, #16
 8019686:	140a      	asrs	r2, r1, #16
 8019688:	fb06 4202 	mla	r2, r6, r2, r4
 801968c:	9c01      	ldr	r4, [sp, #4]
 801968e:	f854 4022 	ldr.w	r4, [r4, r2, lsl #2]
 8019692:	0e22      	lsrs	r2, r4, #24
 8019694:	d016      	beq.n	80196c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 8019696:	9e04      	ldr	r6, [sp, #16]
 8019698:	4372      	muls	r2, r6
 801969a:	1c56      	adds	r6, r2, #1
 801969c:	eb06 2222 	add.w	r2, r6, r2, asr #8
 80196a0:	1212      	asrs	r2, r2, #8
 80196a2:	2aff      	cmp	r2, #255	@ 0xff
 80196a4:	ea4f 2614 	mov.w	r6, r4, lsr #8
 80196a8:	d113      	bne.n	80196d2 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x274>
 80196aa:	0962      	lsrs	r2, r4, #5
 80196ac:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 80196b0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80196b4:	f026 0607 	bic.w	r6, r6, #7
 80196b8:	4316      	orrs	r6, r2
 80196ba:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 80196be:	4326      	orrs	r6, r4
 80196c0:	f825 6018 	strh.w	r6, [r5, r8, lsl #1]
 80196c4:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80196c6:	4410      	add	r0, r2
 80196c8:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 80196ca:	f108 0801 	add.w	r8, r8, #1
 80196ce:	4411      	add	r1, r2
 80196d0:	e7d1      	b.n	8019676 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x218>
 80196d2:	f835 e018 	ldrh.w	lr, [r5, r8, lsl #1]
 80196d6:	fa1f fa82 	uxth.w	sl, r2
 80196da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80196de:	f3c4 4707 	ubfx	r7, r4, #16, #8
 80196e2:	43d2      	mvns	r2, r2
 80196e4:	b2d2      	uxtb	r2, r2
 80196e6:	fb17 f70a 	smulbb	r7, r7, sl
 80196ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80196ee:	fb0c 7c02 	mla	ip, ip, r2, r7
 80196f2:	b2e4      	uxtb	r4, r4
 80196f4:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80196f8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80196fc:	fa5f fe8e 	uxtb.w	lr, lr
 8019700:	fb14 f40a 	smulbb	r4, r4, sl
 8019704:	fb0e 4402 	mla	r4, lr, r2, r4
 8019708:	b2f6      	uxtb	r6, r6
 801970a:	fa1f fc8c 	uxth.w	ip, ip
 801970e:	fb16 f60a 	smulbb	r6, r6, sl
 8019712:	b2a4      	uxth	r4, r4
 8019714:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019718:	fb07 6702 	mla	r7, r7, r2, r6
 801971c:	f10c 0201 	add.w	r2, ip, #1
 8019720:	1c66      	adds	r6, r4, #1
 8019722:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019726:	eb06 2614 	add.w	r6, r6, r4, lsr #8
 801972a:	b2bf      	uxth	r7, r7
 801972c:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019730:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019734:	ea46 0c0c 	orr.w	ip, r6, ip
 8019738:	1c7e      	adds	r6, r7, #1
 801973a:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801973e:	0976      	lsrs	r6, r6, #5
 8019740:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019744:	ea4c 0c06 	orr.w	ip, ip, r6
 8019748:	f825 c018 	strh.w	ip, [r5, r8, lsl #1]
 801974c:	e7ba      	b.n	80196c4 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x266>
 801974e:	b007      	add	sp, #28
 8019750:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08019754 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019754:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019758:	b085      	sub	sp, #20
 801975a:	468b      	mov	fp, r1
 801975c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801975e:	9203      	str	r2, [sp, #12]
 8019760:	e9dd 2414 	ldrd	r2, r4, [sp, #80]	@ 0x50
 8019764:	6841      	ldr	r1, [r0, #4]
 8019766:	f8dd 8058 	ldr.w	r8, [sp, #88]	@ 0x58
 801976a:	fb01 2404 	mla	r4, r1, r4, r2
 801976e:	6802      	ldr	r2, [r0, #0]
 8019770:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019774:	f8d8 2000 	ldr.w	r2, [r8]
 8019778:	9201      	str	r2, [sp, #4]
 801977a:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801977e:	f1bb 0f00 	cmp.w	fp, #0
 8019782:	dc03      	bgt.n	801978c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8019784:	9a03      	ldr	r2, [sp, #12]
 8019786:	2a00      	cmp	r2, #0
 8019788:	f340 814f 	ble.w	8019a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 801978c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801978e:	f9b8 7008 	ldrsh.w	r7, [r8, #8]
 8019792:	f9b8 600c 	ldrsh.w	r6, [r8, #12]
 8019796:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 801979a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801979c:	f502 4200 	add.w	r2, r2, #32768	@ 0x8000
 80197a0:	2b00      	cmp	r3, #0
 80197a2:	dd0e      	ble.n	80197c2 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 80197a4:	1408      	asrs	r0, r1, #16
 80197a6:	d405      	bmi.n	80197b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80197a8:	42b8      	cmp	r0, r7
 80197aa:	da03      	bge.n	80197b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80197ac:	1410      	asrs	r0, r2, #16
 80197ae:	d401      	bmi.n	80197b4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x60>
 80197b0:	42b0      	cmp	r0, r6
 80197b2:	db07      	blt.n	80197c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 80197b4:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80197b6:	4401      	add	r1, r0
 80197b8:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80197ba:	3b01      	subs	r3, #1
 80197bc:	4402      	add	r2, r0
 80197be:	3402      	adds	r4, #2
 80197c0:	e7ee      	b.n	80197a0 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 80197c2:	d017      	beq.n	80197f4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 80197c4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80197c6:	1e58      	subs	r0, r3, #1
 80197c8:	fb05 1500 	mla	r5, r5, r0, r1
 80197cc:	142d      	asrs	r5, r5, #16
 80197ce:	d409      	bmi.n	80197e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80197d0:	42bd      	cmp	r5, r7
 80197d2:	da07      	bge.n	80197e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80197d4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80197d6:	fb05 2000 	mla	r0, r5, r0, r2
 80197da:	1400      	asrs	r0, r0, #16
 80197dc:	d402      	bmi.n	80197e4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80197de:	42b0      	cmp	r0, r6
 80197e0:	f2c0 80ba 	blt.w	8019958 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 80197e4:	2600      	movs	r6, #0
 80197e6:	1998      	adds	r0, r3, r6
 80197e8:	2800      	cmp	r0, #0
 80197ea:	dc3e      	bgt.n	801986a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 80197ec:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 80197f0:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 80197f4:	f1bb 0f00 	cmp.w	fp, #0
 80197f8:	f340 8117 	ble.w	8019a2a <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d6>
 80197fc:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019800:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019804:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019808:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801980a:	f1bb 0b01 	subs.w	fp, fp, #1
 801980e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019812:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019816:	eeb0 6a62 	vmov.f32	s12, s5
 801981a:	ee61 7a27 	vmul.f32	s15, s2, s15
 801981e:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019822:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019826:	ed8d 6a0f 	vstr	s12, [sp, #60]	@ 0x3c
 801982a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801982e:	eeb0 6a43 	vmov.f32	s12, s6
 8019832:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019836:	ee12 2a90 	vmov	r2, s5
 801983a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801983e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019842:	ee13 2a10 	vmov	r2, s6
 8019846:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801984a:	9311      	str	r3, [sp, #68]	@ 0x44
 801984c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801984e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019852:	9a03      	ldr	r2, [sp, #12]
 8019854:	9312      	str	r3, [sp, #72]	@ 0x48
 8019856:	ed8d 6a10 	vstr	s12, [sp, #64]	@ 0x40
 801985a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801985c:	eeb0 3a67 	vmov.f32	s6, s15
 8019860:	bf08      	it	eq
 8019862:	4613      	moveq	r3, r2
 8019864:	eef0 2a47 	vmov.f32	s5, s14
 8019868:	e789      	b.n	801977e <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 801986a:	140f      	asrs	r7, r1, #16
 801986c:	d424      	bmi.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801986e:	f8d8 5008 	ldr.w	r5, [r8, #8]
 8019872:	42bd      	cmp	r5, r7
 8019874:	dd20      	ble.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019876:	ea5f 4c22 	movs.w	ip, r2, asr #16
 801987a:	d41d      	bmi.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 801987c:	f8d8 000c 	ldr.w	r0, [r8, #12]
 8019880:	4560      	cmp	r0, ip
 8019882:	dd19      	ble.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019884:	b22d      	sxth	r5, r5
 8019886:	fb0c 7505 	mla	r5, ip, r5, r7
 801988a:	9801      	ldr	r0, [sp, #4]
 801988c:	f850 0025 	ldr.w	r0, [r0, r5, lsl #2]
 8019890:	0e07      	lsrs	r7, r0, #24
 8019892:	2fff      	cmp	r7, #255	@ 0xff
 8019894:	d116      	bne.n	80198c4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x170>
 8019896:	f06f 0501 	mvn.w	r5, #1
 801989a:	fb05 f706 	mul.w	r7, r5, r6
 801989e:	f2a5 75fe 	subw	r5, r5, #2046	@ 0x7fe
 80198a2:	ea05 2c10 	and.w	ip, r5, r0, lsr #8
 80198a6:	0945      	lsrs	r5, r0, #5
 80198a8:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80198ac:	ea4c 0505 	orr.w	r5, ip, r5
 80198b0:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 80198b4:	4305      	orrs	r5, r0
 80198b6:	53e5      	strh	r5, [r4, r7]
 80198b8:	9811      	ldr	r0, [sp, #68]	@ 0x44
 80198ba:	4401      	add	r1, r0
 80198bc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80198be:	3e01      	subs	r6, #1
 80198c0:	4402      	add	r2, r0
 80198c2:	e790      	b.n	80197e6 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80198c4:	b2fd      	uxtb	r5, r7
 80198c6:	2f00      	cmp	r7, #0
 80198c8:	d0f6      	beq.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80198ca:	f06f 0701 	mvn.w	r7, #1
 80198ce:	4377      	muls	r7, r6
 80198d0:	fa1f f985 	uxth.w	r9, r5
 80198d4:	f834 e007 	ldrh.w	lr, [r4, r7]
 80198d8:	9702      	str	r7, [sp, #8]
 80198da:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 80198de:	f3c0 4707 	ubfx	r7, r0, #16, #8
 80198e2:	43ed      	mvns	r5, r5
 80198e4:	b2ed      	uxtb	r5, r5
 80198e6:	fb17 f709 	smulbb	r7, r7, r9
 80198ea:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 80198ee:	fb0c 7c05 	mla	ip, ip, r5, r7
 80198f2:	f3c0 2a07 	ubfx	sl, r0, #8, #8
 80198f6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 80198fa:	b2c0      	uxtb	r0, r0
 80198fc:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019900:	fa5f fe8e 	uxtb.w	lr, lr
 8019904:	fb10 f009 	smulbb	r0, r0, r9
 8019908:	fb0e 0005 	mla	r0, lr, r5, r0
 801990c:	b280      	uxth	r0, r0
 801990e:	fa1f fc8c 	uxth.w	ip, ip
 8019912:	fb1a fa09 	smulbb	sl, sl, r9
 8019916:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801991a:	fb07 a705 	mla	r7, r7, r5, sl
 801991e:	f100 0a01 	add.w	sl, r0, #1
 8019922:	f10c 0501 	add.w	r5, ip, #1
 8019926:	eb0a 2a10 	add.w	sl, sl, r0, lsr #8
 801992a:	eb05 2c1c 	add.w	ip, r5, ip, lsr #8
 801992e:	b2bf      	uxth	r7, r7
 8019930:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019934:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019938:	ea4a 0c0c 	orr.w	ip, sl, ip
 801993c:	f107 0a01 	add.w	sl, r7, #1
 8019940:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 8019944:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019948:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801994c:	9802      	ldr	r0, [sp, #8]
 801994e:	ea4c 0c0a 	orr.w	ip, ip, sl
 8019952:	f824 c000 	strh.w	ip, [r4, r0]
 8019956:	e7af      	b.n	80198b8 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8019958:	f04f 0e00 	mov.w	lr, #0
 801995c:	eba3 000e 	sub.w	r0, r3, lr
 8019960:	2800      	cmp	r0, #0
 8019962:	f77f af43 	ble.w	80197ec <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x98>
 8019966:	f9b8 6008 	ldrsh.w	r6, [r8, #8]
 801996a:	140d      	asrs	r5, r1, #16
 801996c:	1410      	asrs	r0, r2, #16
 801996e:	fb06 5000 	mla	r0, r6, r0, r5
 8019972:	9d01      	ldr	r5, [sp, #4]
 8019974:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]
 8019978:	0e2e      	lsrs	r6, r5, #24
 801997a:	2eff      	cmp	r6, #255	@ 0xff
 801997c:	d112      	bne.n	80199a4 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x250>
 801997e:	482c      	ldr	r0, [pc, #176]	@ (8019a30 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2dc>)
 8019980:	ea00 2615 	and.w	r6, r0, r5, lsr #8
 8019984:	0968      	lsrs	r0, r5, #5
 8019986:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801998a:	4330      	orrs	r0, r6
 801998c:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019990:	4328      	orrs	r0, r5
 8019992:	f824 001e 	strh.w	r0, [r4, lr, lsl #1]
 8019996:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8019998:	4401      	add	r1, r0
 801999a:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801999c:	f10e 0e01 	add.w	lr, lr, #1
 80199a0:	4402      	add	r2, r0
 80199a2:	e7db      	b.n	801995c <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x208>
 80199a4:	b2f0      	uxtb	r0, r6
 80199a6:	2e00      	cmp	r6, #0
 80199a8:	d0f5      	beq.n	8019996 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80199aa:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 80199ae:	fa1f f980 	uxth.w	r9, r0
 80199b2:	ea4f 272c 	mov.w	r7, ip, asr #8
 80199b6:	f3c5 4607 	ubfx	r6, r5, #16, #8
 80199ba:	43c0      	mvns	r0, r0
 80199bc:	b2c0      	uxtb	r0, r0
 80199be:	fb16 f609 	smulbb	r6, r6, r9
 80199c2:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 80199c6:	fb07 6700 	mla	r7, r7, r0, r6
 80199ca:	f3c5 2a07 	ubfx	sl, r5, #8, #8
 80199ce:	ea4f 06ec 	mov.w	r6, ip, asr #3
 80199d2:	b2ed      	uxtb	r5, r5
 80199d4:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80199d8:	fa5f fc8c 	uxtb.w	ip, ip
 80199dc:	fb15 f509 	smulbb	r5, r5, r9
 80199e0:	fb0c 5500 	mla	r5, ip, r0, r5
 80199e4:	b2bf      	uxth	r7, r7
 80199e6:	fb1a fa09 	smulbb	sl, sl, r9
 80199ea:	b2ad      	uxth	r5, r5
 80199ec:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80199f0:	fb06 a600 	mla	r6, r6, r0, sl
 80199f4:	1c78      	adds	r0, r7, #1
 80199f6:	f105 0a01 	add.w	sl, r5, #1
 80199fa:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 80199fe:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 8019a02:	b2b6      	uxth	r6, r6
 8019a04:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019a08:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019a0c:	ea4a 0707 	orr.w	r7, sl, r7
 8019a10:	f106 0a01 	add.w	sl, r6, #1
 8019a14:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019a18:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019a1c:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019a20:	ea47 070a 	orr.w	r7, r7, sl
 8019a24:	f824 701e 	strh.w	r7, [r4, lr, lsl #1]
 8019a28:	e7b5      	b.n	8019996 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 8019a2a:	b005      	add	sp, #20
 8019a2c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019a30:	fffff800 	.word	0xfffff800

08019a34 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019a34:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019a38:	b087      	sub	sp, #28
 8019a3a:	468b      	mov	fp, r1
 8019a3c:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019a3e:	9203      	str	r2, [sp, #12]
 8019a40:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 8019a44:	9204      	str	r2, [sp, #16]
 8019a46:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019a4a:	6841      	ldr	r1, [r0, #4]
 8019a4c:	f8dd 9060 	ldr.w	r9, [sp, #96]	@ 0x60
 8019a50:	fb01 2404 	mla	r4, r1, r4, r2
 8019a54:	6802      	ldr	r2, [r0, #0]
 8019a56:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019a5a:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019a5e:	3201      	adds	r2, #1
 8019a60:	f022 0201 	bic.w	r2, r2, #1
 8019a64:	9200      	str	r2, [sp, #0]
 8019a66:	f8d9 2000 	ldr.w	r2, [r9]
 8019a6a:	9201      	str	r2, [sp, #4]
 8019a6c:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019a70:	f1bb 0f00 	cmp.w	fp, #0
 8019a74:	dc03      	bgt.n	8019a7e <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8019a76:	9a03      	ldr	r2, [sp, #12]
 8019a78:	2a00      	cmp	r2, #0
 8019a7a:	f340 8169 	ble.w	8019d50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019a7e:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019a80:	f9b9 7008 	ldrsh.w	r7, [r9, #8]
 8019a84:	f9b9 600c 	ldrsh.w	r6, [r9, #12]
 8019a88:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019a8c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019a8e:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019a92:	2b00      	cmp	r3, #0
 8019a94:	dd0e      	ble.n	8019ab4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019a96:	1402      	asrs	r2, r0, #16
 8019a98:	d405      	bmi.n	8019aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a9a:	42ba      	cmp	r2, r7
 8019a9c:	da03      	bge.n	8019aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019a9e:	140a      	asrs	r2, r1, #16
 8019aa0:	d401      	bmi.n	8019aa6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 8019aa2:	42b2      	cmp	r2, r6
 8019aa4:	db07      	blt.n	8019ab6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 8019aa6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019aa8:	4410      	add	r0, r2
 8019aaa:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019aac:	3b01      	subs	r3, #1
 8019aae:	4411      	add	r1, r2
 8019ab0:	3402      	adds	r4, #2
 8019ab2:	e7ee      	b.n	8019a92 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5e>
 8019ab4:	d017      	beq.n	8019ae6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb2>
 8019ab6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019ab8:	1e5a      	subs	r2, r3, #1
 8019aba:	fb05 0502 	mla	r5, r5, r2, r0
 8019abe:	142d      	asrs	r5, r5, #16
 8019ac0:	d409      	bmi.n	8019ad6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019ac2:	42bd      	cmp	r5, r7
 8019ac4:	da07      	bge.n	8019ad6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019ac6:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019ac8:	fb05 1202 	mla	r2, r5, r2, r1
 8019acc:	1412      	asrs	r2, r2, #16
 8019ace:	d402      	bmi.n	8019ad6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019ad0:	42b2      	cmp	r2, r6
 8019ad2:	f2c0 80c7 	blt.w	8019c64 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x230>
 8019ad6:	2700      	movs	r7, #0
 8019ad8:	19da      	adds	r2, r3, r7
 8019ada:	2a00      	cmp	r2, #0
 8019adc:	dc3e      	bgt.n	8019b5c <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019ade:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019ae2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019ae6:	f1bb 0f00 	cmp.w	fp, #0
 8019aea:	f340 8131 	ble.w	8019d50 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8019aee:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019af2:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019af6:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019afa:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019afc:	f1bb 0b01 	subs.w	fp, fp, #1
 8019b00:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019b04:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019b08:	eeb0 6a62 	vmov.f32	s12, s5
 8019b0c:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019b10:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b14:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019b18:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019b1c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019b20:	eeb0 6a43 	vmov.f32	s12, s6
 8019b24:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019b28:	ee12 2a90 	vmov	r2, s5
 8019b2c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019b30:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b34:	ee13 2a10 	vmov	r2, s6
 8019b38:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019b3c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019b3e:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b40:	fb92 f3f3 	sdiv	r3, r2, r3
 8019b44:	9a03      	ldr	r2, [sp, #12]
 8019b46:	9314      	str	r3, [sp, #80]	@ 0x50
 8019b48:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019b4c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019b4e:	eeb0 3a67 	vmov.f32	s6, s15
 8019b52:	bf08      	it	eq
 8019b54:	4613      	moveq	r3, r2
 8019b56:	eef0 2a47 	vmov.f32	s5, s14
 8019b5a:	e789      	b.n	8019a70 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8019b5c:	1405      	asrs	r5, r0, #16
 8019b5e:	d435      	bmi.n	8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b60:	f8d9 2008 	ldr.w	r2, [r9, #8]
 8019b64:	42aa      	cmp	r2, r5
 8019b66:	dd31      	ble.n	8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b68:	140e      	asrs	r6, r1, #16
 8019b6a:	d42f      	bmi.n	8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b6c:	f8d9 200c 	ldr.w	r2, [r9, #12]
 8019b70:	42b2      	cmp	r2, r6
 8019b72:	dd2b      	ble.n	8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b74:	9a00      	ldr	r2, [sp, #0]
 8019b76:	fb06 5502 	mla	r5, r6, r2, r5
 8019b7a:	086a      	lsrs	r2, r5, #1
 8019b7c:	9e01      	ldr	r6, [sp, #4]
 8019b7e:	5cb2      	ldrb	r2, [r6, r2]
 8019b80:	07ee      	lsls	r6, r5, #31
 8019b82:	bf54      	ite	pl
 8019b84:	f002 020f 	andpl.w	r2, r2, #15
 8019b88:	1112      	asrmi	r2, r2, #4
 8019b8a:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019b8e:	b2d2      	uxtb	r2, r2
 8019b90:	b1e2      	cbz	r2, 8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019b92:	9d04      	ldr	r5, [sp, #16]
 8019b94:	436a      	muls	r2, r5
 8019b96:	1c55      	adds	r5, r2, #1
 8019b98:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019b9c:	4d6e      	ldr	r5, [pc, #440]	@ (8019d58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019b9e:	682d      	ldr	r5, [r5, #0]
 8019ba0:	1212      	asrs	r2, r2, #8
 8019ba2:	0a2e      	lsrs	r6, r5, #8
 8019ba4:	2aff      	cmp	r2, #255	@ 0xff
 8019ba6:	9605      	str	r6, [sp, #20]
 8019ba8:	d116      	bne.n	8019bd8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8019baa:	f06f 0201 	mvn.w	r2, #1
 8019bae:	fb02 fc07 	mul.w	ip, r2, r7
 8019bb2:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 8019bb6:	096a      	lsrs	r2, r5, #5
 8019bb8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019bbc:	f026 0607 	bic.w	r6, r6, #7
 8019bc0:	4316      	orrs	r6, r2
 8019bc2:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019bc6:	432e      	orrs	r6, r5
 8019bc8:	f824 600c 	strh.w	r6, [r4, ip]
 8019bcc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019bce:	4410      	add	r0, r2
 8019bd0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019bd2:	3f01      	subs	r7, #1
 8019bd4:	4411      	add	r1, r2
 8019bd6:	e77f      	b.n	8019ad8 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa4>
 8019bd8:	f06f 0601 	mvn.w	r6, #1
 8019bdc:	437e      	muls	r6, r7
 8019bde:	fa1f fa82 	uxth.w	sl, r2
 8019be2:	f834 8006 	ldrh.w	r8, [r4, r6]
 8019be6:	9602      	str	r6, [sp, #8]
 8019be8:	ea4f 2e28 	mov.w	lr, r8, asr #8
 8019bec:	f3c5 4c07 	ubfx	ip, r5, #16, #8
 8019bf0:	43d2      	mvns	r2, r2
 8019bf2:	b2d2      	uxtb	r2, r2
 8019bf4:	fb1c fc0a 	smulbb	ip, ip, sl
 8019bf8:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 8019bfc:	fb0e ce02 	mla	lr, lr, r2, ip
 8019c00:	b2ed      	uxtb	r5, r5
 8019c02:	ea4f 0ce8 	mov.w	ip, r8, asr #3
 8019c06:	ea4f 08c8 	mov.w	r8, r8, lsl #3
 8019c0a:	f89d 6014 	ldrb.w	r6, [sp, #20]
 8019c0e:	fa5f f888 	uxtb.w	r8, r8
 8019c12:	fb15 f50a 	smulbb	r5, r5, sl
 8019c16:	fb08 5502 	mla	r5, r8, r2, r5
 8019c1a:	fa1f fe8e 	uxth.w	lr, lr
 8019c1e:	fb16 f60a 	smulbb	r6, r6, sl
 8019c22:	b2ad      	uxth	r5, r5
 8019c24:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8019c28:	fb0c 6c02 	mla	ip, ip, r2, r6
 8019c2c:	f10e 0201 	add.w	r2, lr, #1
 8019c30:	1c6e      	adds	r6, r5, #1
 8019c32:	eb02 2e1e 	add.w	lr, r2, lr, lsr #8
 8019c36:	eb06 2615 	add.w	r6, r6, r5, lsr #8
 8019c3a:	fa1f fc8c 	uxth.w	ip, ip
 8019c3e:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 8019c42:	f40e 4e78 	and.w	lr, lr, #63488	@ 0xf800
 8019c46:	ea46 0e0e 	orr.w	lr, r6, lr
 8019c4a:	f10c 0601 	add.w	r6, ip, #1
 8019c4e:	eb06 261c 	add.w	r6, r6, ip, lsr #8
 8019c52:	0976      	lsrs	r6, r6, #5
 8019c54:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019c58:	9a02      	ldr	r2, [sp, #8]
 8019c5a:	ea4e 0e06 	orr.w	lr, lr, r6
 8019c5e:	f824 e002 	strh.w	lr, [r4, r2]
 8019c62:	e7b3      	b.n	8019bcc <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8019c64:	f04f 0800 	mov.w	r8, #0
 8019c68:	eba3 0208 	sub.w	r2, r3, r8
 8019c6c:	2a00      	cmp	r2, #0
 8019c6e:	f77f af36 	ble.w	8019ade <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xaa>
 8019c72:	9e00      	ldr	r6, [sp, #0]
 8019c74:	1402      	asrs	r2, r0, #16
 8019c76:	140d      	asrs	r5, r1, #16
 8019c78:	fb06 2505 	mla	r5, r6, r5, r2
 8019c7c:	086a      	lsrs	r2, r5, #1
 8019c7e:	9e01      	ldr	r6, [sp, #4]
 8019c80:	5cb2      	ldrb	r2, [r6, r2]
 8019c82:	07ed      	lsls	r5, r5, #31
 8019c84:	bf54      	ite	pl
 8019c86:	f002 020f 	andpl.w	r2, r2, #15
 8019c8a:	1112      	asrmi	r2, r2, #4
 8019c8c:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019c90:	b2d2      	uxtb	r2, r2
 8019c92:	b1c2      	cbz	r2, 8019cc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019c94:	9d04      	ldr	r5, [sp, #16]
 8019c96:	436a      	muls	r2, r5
 8019c98:	1c55      	adds	r5, r2, #1
 8019c9a:	eb05 2222 	add.w	r2, r5, r2, asr #8
 8019c9e:	4d2e      	ldr	r5, [pc, #184]	@ (8019d58 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x324>)
 8019ca0:	1212      	asrs	r2, r2, #8
 8019ca2:	682e      	ldr	r6, [r5, #0]
 8019ca4:	2aff      	cmp	r2, #255	@ 0xff
 8019ca6:	ea4f 2516 	mov.w	r5, r6, lsr #8
 8019caa:	d113      	bne.n	8019cd4 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a0>
 8019cac:	0972      	lsrs	r2, r6, #5
 8019cae:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 8019cb2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019cb6:	f025 0507 	bic.w	r5, r5, #7
 8019cba:	4315      	orrs	r5, r2
 8019cbc:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 8019cc0:	4335      	orrs	r5, r6
 8019cc2:	f824 5018 	strh.w	r5, [r4, r8, lsl #1]
 8019cc6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019cc8:	4410      	add	r0, r2
 8019cca:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019ccc:	f108 0801 	add.w	r8, r8, #1
 8019cd0:	4411      	add	r1, r2
 8019cd2:	e7c9      	b.n	8019c68 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 8019cd4:	f834 e018 	ldrh.w	lr, [r4, r8, lsl #1]
 8019cd8:	fa1f fa82 	uxth.w	sl, r2
 8019cdc:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 8019ce0:	f3c6 4707 	ubfx	r7, r6, #16, #8
 8019ce4:	43d2      	mvns	r2, r2
 8019ce6:	b2d2      	uxtb	r2, r2
 8019ce8:	fb17 f70a 	smulbb	r7, r7, sl
 8019cec:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8019cf0:	fb0c 7c02 	mla	ip, ip, r2, r7
 8019cf4:	b2f6      	uxtb	r6, r6
 8019cf6:	ea4f 07ee 	mov.w	r7, lr, asr #3
 8019cfa:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019cfe:	fa5f fe8e 	uxtb.w	lr, lr
 8019d02:	fb16 f60a 	smulbb	r6, r6, sl
 8019d06:	fb0e 6602 	mla	r6, lr, r2, r6
 8019d0a:	b2ed      	uxtb	r5, r5
 8019d0c:	fa1f fc8c 	uxth.w	ip, ip
 8019d10:	fb15 f50a 	smulbb	r5, r5, sl
 8019d14:	b2b6      	uxth	r6, r6
 8019d16:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8019d1a:	fb07 5702 	mla	r7, r7, r2, r5
 8019d1e:	f10c 0201 	add.w	r2, ip, #1
 8019d22:	1c75      	adds	r5, r6, #1
 8019d24:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 8019d28:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 8019d2c:	b2bf      	uxth	r7, r7
 8019d2e:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 8019d32:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8019d36:	ea45 0c0c 	orr.w	ip, r5, ip
 8019d3a:	1c7d      	adds	r5, r7, #1
 8019d3c:	eb05 2517 	add.w	r5, r5, r7, lsr #8
 8019d40:	096d      	lsrs	r5, r5, #5
 8019d42:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8019d46:	ea4c 0c05 	orr.w	ip, ip, r5
 8019d4a:	f824 c018 	strh.w	ip, [r4, r8, lsl #1]
 8019d4e:	e7ba      	b.n	8019cc6 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x292>
 8019d50:	b007      	add	sp, #28
 8019d52:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8019d56:	bf00      	nop
 8019d58:	20002f5c 	.word	0x20002f5c

08019d5c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8019d5c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8019d60:	b087      	sub	sp, #28
 8019d62:	f8df 830c 	ldr.w	r8, [pc, #780]	@ 801a070 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x314>
 8019d66:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8019d68:	9205      	str	r2, [sp, #20]
 8019d6a:	e9dd 2416 	ldrd	r2, r4, [sp, #88]	@ 0x58
 8019d6e:	9101      	str	r1, [sp, #4]
 8019d70:	6841      	ldr	r1, [r0, #4]
 8019d72:	f8dd b060 	ldr.w	fp, [sp, #96]	@ 0x60
 8019d76:	fb01 2404 	mla	r4, r1, r4, r2
 8019d7a:	6802      	ldr	r2, [r0, #0]
 8019d7c:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 8019d80:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019d84:	3201      	adds	r2, #1
 8019d86:	f022 0201 	bic.w	r2, r2, #1
 8019d8a:	9202      	str	r2, [sp, #8]
 8019d8c:	f8db 2000 	ldr.w	r2, [fp]
 8019d90:	9203      	str	r2, [sp, #12]
 8019d92:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 8019d96:	9a01      	ldr	r2, [sp, #4]
 8019d98:	2a00      	cmp	r2, #0
 8019d9a:	dc03      	bgt.n	8019da4 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8019d9c:	9a05      	ldr	r2, [sp, #20]
 8019d9e:	2a00      	cmp	r2, #0
 8019da0:	f340 8162 	ble.w	801a068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019da4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8019da6:	f9bb 7008 	ldrsh.w	r7, [fp, #8]
 8019daa:	f9bb 600c 	ldrsh.w	r6, [fp, #12]
 8019dae:	f502 4000 	add.w	r0, r2, #32768	@ 0x8000
 8019db2:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8019db4:	f502 4100 	add.w	r1, r2, #32768	@ 0x8000
 8019db8:	2b00      	cmp	r3, #0
 8019dba:	dd0e      	ble.n	8019dda <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7e>
 8019dbc:	1402      	asrs	r2, r0, #16
 8019dbe:	d405      	bmi.n	8019dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019dc0:	42ba      	cmp	r2, r7
 8019dc2:	da03      	bge.n	8019dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019dc4:	140a      	asrs	r2, r1, #16
 8019dc6:	d401      	bmi.n	8019dcc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8019dc8:	42b2      	cmp	r2, r6
 8019dca:	db07      	blt.n	8019ddc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8019dcc:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019dce:	4410      	add	r0, r2
 8019dd0:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019dd2:	3b01      	subs	r3, #1
 8019dd4:	4411      	add	r1, r2
 8019dd6:	3402      	adds	r4, #2
 8019dd8:	e7ee      	b.n	8019db8 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c>
 8019dda:	d017      	beq.n	8019e0c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xb0>
 8019ddc:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8019dde:	1e5a      	subs	r2, r3, #1
 8019de0:	fb05 0502 	mla	r5, r5, r2, r0
 8019de4:	142d      	asrs	r5, r5, #16
 8019de6:	d409      	bmi.n	8019dfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019de8:	42bd      	cmp	r5, r7
 8019dea:	da07      	bge.n	8019dfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019dec:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8019dee:	fb05 1202 	mla	r2, r5, r2, r1
 8019df2:	1412      	asrs	r2, r2, #16
 8019df4:	d402      	bmi.n	8019dfc <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa0>
 8019df6:	42b2      	cmp	r2, r6
 8019df8:	f2c0 80c3 	blt.w	8019f82 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x226>
 8019dfc:	2500      	movs	r5, #0
 8019dfe:	195a      	adds	r2, r3, r5
 8019e00:	2a00      	cmp	r2, #0
 8019e02:	dc3f      	bgt.n	8019e84 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x128>
 8019e04:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 8019e08:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 8019e0c:	9b01      	ldr	r3, [sp, #4]
 8019e0e:	2b00      	cmp	r3, #0
 8019e10:	f340 812a 	ble.w	801a068 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8019e14:	ee30 0a04 	vadd.f32	s0, s0, s8
 8019e18:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8019e1c:	eec6 7a80 	vdiv.f32	s15, s13, s0
 8019e20:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019e22:	ee31 1a05 	vadd.f32	s2, s2, s10
 8019e26:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8019e2a:	eeb0 6a62 	vmov.f32	s12, s5
 8019e2e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8019e32:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e36:	ee77 2a62 	vsub.f32	s5, s14, s5
 8019e3a:	ed8d 6a11 	vstr	s12, [sp, #68]	@ 0x44
 8019e3e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8019e42:	eeb0 6a43 	vmov.f32	s12, s6
 8019e46:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8019e4a:	ee12 2a90 	vmov	r2, s5
 8019e4e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8019e52:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e56:	ee13 2a10 	vmov	r2, s6
 8019e5a:	9313      	str	r3, [sp, #76]	@ 0x4c
 8019e5c:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019e5e:	fb92 f3f3 	sdiv	r3, r2, r3
 8019e62:	9314      	str	r3, [sp, #80]	@ 0x50
 8019e64:	9b01      	ldr	r3, [sp, #4]
 8019e66:	9a05      	ldr	r2, [sp, #20]
 8019e68:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 8019e6c:	3b01      	subs	r3, #1
 8019e6e:	9301      	str	r3, [sp, #4]
 8019e70:	ed8d 6a12 	vstr	s12, [sp, #72]	@ 0x48
 8019e74:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8019e76:	eeb0 3a67 	vmov.f32	s6, s15
 8019e7a:	bf08      	it	eq
 8019e7c:	4613      	moveq	r3, r2
 8019e7e:	eef0 2a47 	vmov.f32	s5, s14
 8019e82:	e788      	b.n	8019d96 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8019e84:	1406      	asrs	r6, r0, #16
 8019e86:	d42c      	bmi.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019e88:	f8db 2008 	ldr.w	r2, [fp, #8]
 8019e8c:	42b2      	cmp	r2, r6
 8019e8e:	dd28      	ble.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019e90:	140f      	asrs	r7, r1, #16
 8019e92:	d426      	bmi.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019e94:	f8db 200c 	ldr.w	r2, [fp, #12]
 8019e98:	42ba      	cmp	r2, r7
 8019e9a:	dd22      	ble.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019e9c:	9a02      	ldr	r2, [sp, #8]
 8019e9e:	fb07 6602 	mla	r6, r7, r2, r6
 8019ea2:	0872      	lsrs	r2, r6, #1
 8019ea4:	9f03      	ldr	r7, [sp, #12]
 8019ea6:	5cba      	ldrb	r2, [r7, r2]
 8019ea8:	07f6      	lsls	r6, r6, #31
 8019eaa:	bf54      	ite	pl
 8019eac:	f002 020f 	andpl.w	r2, r2, #15
 8019eb0:	1112      	asrmi	r2, r2, #4
 8019eb2:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019eb6:	b2d2      	uxtb	r2, r2
 8019eb8:	2aff      	cmp	r2, #255	@ 0xff
 8019eba:	d118      	bne.n	8019eee <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x192>
 8019ebc:	f8d8 2000 	ldr.w	r2, [r8]
 8019ec0:	f06f 0601 	mvn.w	r6, #1
 8019ec4:	fb06 f705 	mul.w	r7, r6, r5
 8019ec8:	f2a6 76fe 	subw	r6, r6, #2046	@ 0x7fe
 8019ecc:	ea06 2c12 	and.w	ip, r6, r2, lsr #8
 8019ed0:	0956      	lsrs	r6, r2, #5
 8019ed2:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 8019ed6:	ea4c 0606 	orr.w	r6, ip, r6
 8019eda:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8019ede:	4316      	orrs	r6, r2
 8019ee0:	53e6      	strh	r6, [r4, r7]
 8019ee2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019ee4:	4410      	add	r0, r2
 8019ee6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019ee8:	3d01      	subs	r5, #1
 8019eea:	4411      	add	r1, r2
 8019eec:	e787      	b.n	8019dfe <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa2>
 8019eee:	2a00      	cmp	r2, #0
 8019ef0:	d0f7      	beq.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019ef2:	f06f 0601 	mvn.w	r6, #1
 8019ef6:	436e      	muls	r6, r5
 8019ef8:	f8d8 c000 	ldr.w	ip, [r8]
 8019efc:	f834 e006 	ldrh.w	lr, [r4, r6]
 8019f00:	9604      	str	r6, [sp, #16]
 8019f02:	fa1f f982 	uxth.w	r9, r2
 8019f06:	ea4f 272e 	mov.w	r7, lr, asr #8
 8019f0a:	f3cc 4607 	ubfx	r6, ip, #16, #8
 8019f0e:	43d2      	mvns	r2, r2
 8019f10:	b2d2      	uxtb	r2, r2
 8019f12:	fb16 f609 	smulbb	r6, r6, r9
 8019f16:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 8019f1a:	fb07 6702 	mla	r7, r7, r2, r6
 8019f1e:	f3cc 2a07 	ubfx	sl, ip, #8, #8
 8019f22:	ea4f 06ee 	mov.w	r6, lr, asr #3
 8019f26:	fa5f fc8c 	uxtb.w	ip, ip
 8019f2a:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8019f2e:	fa5f fe8e 	uxtb.w	lr, lr
 8019f32:	fb1c fc09 	smulbb	ip, ip, r9
 8019f36:	fb0e cc02 	mla	ip, lr, r2, ip
 8019f3a:	b2bf      	uxth	r7, r7
 8019f3c:	fb1a fa09 	smulbb	sl, sl, r9
 8019f40:	fa1f fc8c 	uxth.w	ip, ip
 8019f44:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8019f48:	fb06 a602 	mla	r6, r6, r2, sl
 8019f4c:	1c7a      	adds	r2, r7, #1
 8019f4e:	f10c 0a01 	add.w	sl, ip, #1
 8019f52:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 8019f56:	eb0a 2a1c 	add.w	sl, sl, ip, lsr #8
 8019f5a:	b2b6      	uxth	r6, r6
 8019f5c:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 8019f60:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 8019f64:	ea4a 0707 	orr.w	r7, sl, r7
 8019f68:	f106 0a01 	add.w	sl, r6, #1
 8019f6c:	eb0a 2a16 	add.w	sl, sl, r6, lsr #8
 8019f70:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 8019f74:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 8019f78:	9a04      	ldr	r2, [sp, #16]
 8019f7a:	ea47 070a 	orr.w	r7, r7, sl
 8019f7e:	52a7      	strh	r7, [r4, r2]
 8019f80:	e7af      	b.n	8019ee2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8019f82:	f04f 0e00 	mov.w	lr, #0
 8019f86:	eba3 020e 	sub.w	r2, r3, lr
 8019f8a:	2a00      	cmp	r2, #0
 8019f8c:	f77f af3a 	ble.w	8019e04 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xa8>
 8019f90:	9e02      	ldr	r6, [sp, #8]
 8019f92:	1402      	asrs	r2, r0, #16
 8019f94:	140d      	asrs	r5, r1, #16
 8019f96:	fb06 2505 	mla	r5, r6, r5, r2
 8019f9a:	086a      	lsrs	r2, r5, #1
 8019f9c:	9e03      	ldr	r6, [sp, #12]
 8019f9e:	5cb2      	ldrb	r2, [r6, r2]
 8019fa0:	07ed      	lsls	r5, r5, #31
 8019fa2:	bf54      	ite	pl
 8019fa4:	f002 020f 	andpl.w	r2, r2, #15
 8019fa8:	1112      	asrmi	r2, r2, #4
 8019faa:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8019fae:	b2d2      	uxtb	r2, r2
 8019fb0:	2aff      	cmp	r2, #255	@ 0xff
 8019fb2:	d115      	bne.n	8019fe0 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x284>
 8019fb4:	f8d8 5000 	ldr.w	r5, [r8]
 8019fb8:	f6a2 02ff 	subw	r2, r2, #2303	@ 0x8ff
 8019fbc:	ea02 2615 	and.w	r6, r2, r5, lsr #8
 8019fc0:	096a      	lsrs	r2, r5, #5
 8019fc2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8019fc6:	4332      	orrs	r2, r6
 8019fc8:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8019fcc:	432a      	orrs	r2, r5
 8019fce:	f824 201e 	strh.w	r2, [r4, lr, lsl #1]
 8019fd2:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8019fd4:	4410      	add	r0, r2
 8019fd6:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8019fd8:	f10e 0e01 	add.w	lr, lr, #1
 8019fdc:	4411      	add	r1, r2
 8019fde:	e7d2      	b.n	8019f86 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8019fe0:	2a00      	cmp	r2, #0
 8019fe2:	d0f6      	beq.n	8019fd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8019fe4:	f8d8 7000 	ldr.w	r7, [r8]
 8019fe8:	f834 c01e 	ldrh.w	ip, [r4, lr, lsl #1]
 8019fec:	fa1f f982 	uxth.w	r9, r2
 8019ff0:	ea4f 262c 	mov.w	r6, ip, asr #8
 8019ff4:	f3c7 4507 	ubfx	r5, r7, #16, #8
 8019ff8:	43d2      	mvns	r2, r2
 8019ffa:	b2d2      	uxtb	r2, r2
 8019ffc:	fb15 f509 	smulbb	r5, r5, r9
 801a000:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801a004:	fb06 5602 	mla	r6, r6, r2, r5
 801a008:	f3c7 2a07 	ubfx	sl, r7, #8, #8
 801a00c:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801a010:	b2ff      	uxtb	r7, r7
 801a012:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801a016:	fa5f fc8c 	uxtb.w	ip, ip
 801a01a:	fb17 f709 	smulbb	r7, r7, r9
 801a01e:	fb0c 7702 	mla	r7, ip, r2, r7
 801a022:	b2b6      	uxth	r6, r6
 801a024:	fb1a fa09 	smulbb	sl, sl, r9
 801a028:	b2bf      	uxth	r7, r7
 801a02a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801a02e:	fb05 a502 	mla	r5, r5, r2, sl
 801a032:	1c72      	adds	r2, r6, #1
 801a034:	f107 0a01 	add.w	sl, r7, #1
 801a038:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 801a03c:	eb0a 2a17 	add.w	sl, sl, r7, lsr #8
 801a040:	b2ad      	uxth	r5, r5
 801a042:	f3ca 2ac4 	ubfx	sl, sl, #11, #5
 801a046:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801a04a:	ea4a 0606 	orr.w	r6, sl, r6
 801a04e:	f105 0a01 	add.w	sl, r5, #1
 801a052:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801a056:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801a05a:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801a05e:	ea46 060a 	orr.w	r6, r6, sl
 801a062:	f824 601e 	strh.w	r6, [r4, lr, lsl #1]
 801a066:	e7b4      	b.n	8019fd2 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 801a068:	b007      	add	sp, #28
 801a06a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a06e:	bf00      	nop
 801a070:	20002f5c 	.word	0x20002f5c

0801a074 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID1Ev>:
 801a074:	4770      	bx	lr

0801a076 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D1Ev>:
 801a076:	4770      	bx	lr

0801a078 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED1Ev>:
 801a078:	4770      	bx	lr

0801a07a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D1Ev>:
 801a07a:	4770      	bx	lr

0801a07c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD1Ev>:
 801a07c:	4770      	bx	lr

0801a07e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD1Ev>:
 801a07e:	4770      	bx	lr

0801a080 <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD1Ev>:
 801a080:	4770      	bx	lr

0801a082 <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD1Ev>:
 801a082:	4770      	bx	lr

0801a084 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a084:	4770      	bx	lr

0801a086 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a086:	4770      	bx	lr

0801a088 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a088:	4770      	bx	lr

0801a08a <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a08a:	4770      	bx	lr

0801a08c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a08c:	4770      	bx	lr

0801a08e <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a08e:	4770      	bx	lr

0801a090 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a090:	4770      	bx	lr

0801a092 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a092:	4770      	bx	lr

0801a094 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a094:	4770      	bx	lr

0801a096 <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a096:	4770      	bx	lr

0801a098 <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a098:	4770      	bx	lr

0801a09a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a09a:	4770      	bx	lr

0801a09c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD1Ev>:
 801a09c:	4770      	bx	lr

0801a09e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD1Ev>:
 801a09e:	4770      	bx	lr

0801a0a0 <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD1Ev>:
 801a0a0:	4770      	bx	lr

0801a0a2 <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD1Ev>:
 801a0a2:	4770      	bx	lr

0801a0a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a0a4:	4770      	bx	lr

0801a0a6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD1Ev>:
 801a0a6:	4770      	bx	lr

0801a0a8 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a0a8:	4770      	bx	lr

0801a0aa <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD1Ev>:
 801a0aa:	4770      	bx	lr

0801a0ac <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD1Ev>:
 801a0ac:	4770      	bx	lr

0801a0ae <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD1Ev>:
 801a0ae:	4770      	bx	lr

0801a0b0 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD1Ev>:
 801a0b0:	4770      	bx	lr

0801a0b2 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD1Ev>:
 801a0b2:	4770      	bx	lr

0801a0b4 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_t>:
 801a0b4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801a0b8:	b088      	sub	sp, #32
 801a0ba:	ac08      	add	r4, sp, #32
 801a0bc:	4606      	mov	r6, r0
 801a0be:	f824 3d0c 	strh.w	r3, [r4, #-12]!
 801a0c2:	4620      	mov	r0, r4
 801a0c4:	4688      	mov	r8, r1
 801a0c6:	4691      	mov	r9, r2
 801a0c8:	f7fd fc32 	bl	8017930 <_ZNK8touchgfx6Bitmap7getDataEv>
 801a0cc:	6833      	ldr	r3, [r6, #0]
 801a0ce:	4605      	mov	r5, r0
 801a0d0:	4620      	mov	r0, r4
 801a0d2:	699f      	ldr	r7, [r3, #24]
 801a0d4:	f7fd fb3a 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801a0d8:	4682      	mov	sl, r0
 801a0da:	4620      	mov	r0, r4
 801a0dc:	f7fd fb6a 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801a0e0:	9500      	str	r5, [sp, #0]
 801a0e2:	e9cd a001 	strd	sl, r0, [sp, #4]
 801a0e6:	464b      	mov	r3, r9
 801a0e8:	a806      	add	r0, sp, #24
 801a0ea:	4642      	mov	r2, r8
 801a0ec:	4631      	mov	r1, r6
 801a0ee:	47b8      	blx	r7
 801a0f0:	4628      	mov	r0, r5
 801a0f2:	b008      	add	sp, #32
 801a0f4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

0801a0f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE>:
 801a0f8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 801a0fc:	2300      	movs	r3, #0
 801a0fe:	9300      	str	r3, [sp, #0]
 801a100:	4b3d      	ldr	r3, [pc, #244]	@ (801a1f8 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x100>)
 801a102:	781b      	ldrb	r3, [r3, #0]
 801a104:	2b00      	cmp	r3, #0
 801a106:	d137      	bne.n	801a178 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x80>
 801a108:	4a3c      	ldr	r2, [pc, #240]	@ (801a1fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a10a:	f9b2 2000 	ldrsh.w	r2, [r2]
 801a10e:	f8ad 2004 	strh.w	r2, [sp, #4]
 801a112:	2b00      	cmp	r3, #0
 801a114:	d132      	bne.n	801a17c <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x84>
 801a116:	4b3a      	ldr	r3, [pc, #232]	@ (801a200 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a118:	f9b3 3000 	ldrsh.w	r3, [r3]
 801a11c:	6808      	ldr	r0, [r1, #0]
 801a11e:	6849      	ldr	r1, [r1, #4]
 801a120:	f8ad 3006 	strh.w	r3, [sp, #6]
 801a124:	ac02      	add	r4, sp, #8
 801a126:	ab02      	add	r3, sp, #8
 801a128:	c303      	stmia	r3!, {r0, r1}
 801a12a:	4669      	mov	r1, sp
 801a12c:	4620      	mov	r0, r4
 801a12e:	f7f9 ff21 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a132:	4668      	mov	r0, sp
 801a134:	f7f9 fef6 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a138:	f8bd 3008 	ldrh.w	r3, [sp, #8]
 801a13c:	f8bd 2000 	ldrh.w	r2, [sp]
 801a140:	4d30      	ldr	r5, [pc, #192]	@ (801a204 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x10c>)
 801a142:	4413      	add	r3, r2
 801a144:	f8ad 3008 	strh.w	r3, [sp, #8]
 801a148:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801a14c:	f8bd 300a 	ldrh.w	r3, [sp, #10]
 801a150:	6828      	ldr	r0, [r5, #0]
 801a152:	4413      	add	r3, r2
 801a154:	f8ad 300a 	strh.w	r3, [sp, #10]
 801a158:	6803      	ldr	r3, [r0, #0]
 801a15a:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a15c:	4798      	blx	r3
 801a15e:	f010 0f01 	tst.w	r0, #1
 801a162:	462f      	mov	r7, r5
 801a164:	d00c      	beq.n	801a180 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x88>
 801a166:	6828      	ldr	r0, [r5, #0]
 801a168:	6803      	ldr	r3, [r0, #0]
 801a16a:	e894 0006 	ldmia.w	r4, {r1, r2}
 801a16e:	6ddb      	ldr	r3, [r3, #92]	@ 0x5c
 801a170:	4798      	blx	r3
 801a172:	b004      	add	sp, #16
 801a174:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801a178:	4a21      	ldr	r2, [pc, #132]	@ (801a200 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x108>)
 801a17a:	e7c6      	b.n	801a10a <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x12>
 801a17c:	4b1f      	ldr	r3, [pc, #124]	@ (801a1fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a17e:	e7cb      	b.n	801a118 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x20>
 801a180:	6838      	ldr	r0, [r7, #0]
 801a182:	f9bd 800c 	ldrsh.w	r8, [sp, #12]
 801a186:	6803      	ldr	r3, [r0, #0]
 801a188:	f9bd 500e 	ldrsh.w	r5, [sp, #14]
 801a18c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801a18e:	4798      	blx	r3
 801a190:	f9bd 3008 	ldrsh.w	r3, [sp, #8]
 801a194:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801a198:	f8bd 6004 	ldrh.w	r6, [sp, #4]
 801a19c:	fb16 3602 	smlabb	r6, r6, r2, r3
 801a1a0:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801a1a4:	6838      	ldr	r0, [r7, #0]
 801a1a6:	6803      	ldr	r3, [r0, #0]
 801a1a8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a1aa:	4798      	blx	r3
 801a1ac:	4a13      	ldr	r2, [pc, #76]	@ (801a1fc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x104>)
 801a1ae:	f9bd 400a 	ldrsh.w	r4, [sp, #10]
 801a1b2:	8813      	ldrh	r3, [r2, #0]
 801a1b4:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801a1b8:	fb03 1404 	mla	r4, r3, r4, r1
 801a1bc:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a1c0:	435d      	muls	r5, r3
 801a1c2:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a1c6:	ea4f 0848 	mov.w	r8, r8, lsl #1
 801a1ca:	4691      	mov	r9, r2
 801a1cc:	6838      	ldr	r0, [r7, #0]
 801a1ce:	42ac      	cmp	r4, r5
 801a1d0:	6803      	ldr	r3, [r0, #0]
 801a1d2:	d20e      	bcs.n	801a1f2 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xfa>
 801a1d4:	f8d3 a034 	ldr.w	sl, [r3, #52]	@ 0x34
 801a1d8:	4632      	mov	r2, r6
 801a1da:	4643      	mov	r3, r8
 801a1dc:	4621      	mov	r1, r4
 801a1de:	47d0      	blx	sl
 801a1e0:	f8b9 3000 	ldrh.w	r3, [r9]
 801a1e4:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a1e8:	f9bd 3004 	ldrsh.w	r3, [sp, #4]
 801a1ec:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a1f0:	e7ec      	b.n	801a1cc <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0xd4>
 801a1f2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a1f4:	4798      	blx	r3
 801a1f6:	e7bc      	b.n	801a172 <_ZN8touchgfx8LCD16bpp29copyAreaFromTFTToClientBufferERKNS_4RectE+0x7a>
 801a1f8:	20002f4c 	.word	0x20002f4c
 801a1fc:	20002f4e 	.word	0x20002f4e
 801a200:	20002f50 	.word	0x20002f50
 801a204:	20002f54 	.word	0x20002f54

0801a208 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb>:
 801a208:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a20c:	b08b      	sub	sp, #44	@ 0x2c
 801a20e:	460f      	mov	r7, r1
 801a210:	f89d b050 	ldrb.w	fp, [sp, #80]	@ 0x50
 801a214:	f89d 4054 	ldrb.w	r4, [sp, #84]	@ 0x54
 801a218:	4616      	mov	r6, r2
 801a21a:	f1bb 0f00 	cmp.w	fp, #0
 801a21e:	d04a      	beq.n	801a2b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a220:	6810      	ldr	r0, [r2, #0]
 801a222:	6851      	ldr	r1, [r2, #4]
 801a224:	ad06      	add	r5, sp, #24
 801a226:	c503      	stmia	r5!, {r0, r1}
 801a228:	6818      	ldr	r0, [r3, #0]
 801a22a:	6859      	ldr	r1, [r3, #4]
 801a22c:	ad08      	add	r5, sp, #32
 801a22e:	c503      	stmia	r5!, {r0, r1}
 801a230:	a806      	add	r0, sp, #24
 801a232:	f7f9 fe77 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a236:	4631      	mov	r1, r6
 801a238:	a808      	add	r0, sp, #32
 801a23a:	f7f9 fe9b 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a23e:	f9bd 2020 	ldrsh.w	r2, [sp, #32]
 801a242:	f9bd 3022 	ldrsh.w	r3, [sp, #34]	@ 0x22
 801a246:	f8bd 601c 	ldrh.w	r6, [sp, #28]
 801a24a:	f9bd 8024 	ldrsh.w	r8, [sp, #36]	@ 0x24
 801a24e:	f9bd 5026 	ldrsh.w	r5, [sp, #38]	@ 0x26
 801a252:	fb16 2103 	smlabb	r1, r6, r3, r2
 801a256:	eb07 0641 	add.w	r6, r7, r1, lsl #1
 801a25a:	f8bd 1018 	ldrh.w	r1, [sp, #24]
 801a25e:	4f5f      	ldr	r7, [pc, #380]	@ (801a3dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a260:	440a      	add	r2, r1
 801a262:	f8ad 2020 	strh.w	r2, [sp, #32]
 801a266:	f8bd 201a 	ldrh.w	r2, [sp, #26]
 801a26a:	6838      	ldr	r0, [r7, #0]
 801a26c:	4413      	add	r3, r2
 801a26e:	f8ad 3022 	strh.w	r3, [sp, #34]	@ 0x22
 801a272:	6803      	ldr	r3, [r0, #0]
 801a274:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801a276:	4798      	blx	r3
 801a278:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a27c:	46b9      	mov	r9, r7
 801a27e:	d11d      	bne.n	801a2bc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xb4>
 801a280:	b9fc      	cbnz	r4, 801a2c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a282:	f010 0f01 	tst.w	r0, #1
 801a286:	d01c      	beq.n	801a2c2 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xba>
 801a288:	f8d9 0000 	ldr.w	r0, [r9]
 801a28c:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 801a290:	6801      	ldr	r1, [r0, #0]
 801a292:	f8cd b00c 	str.w	fp, [sp, #12]
 801a296:	2700      	movs	r7, #0
 801a298:	e9cd 4704 	strd	r4, r7, [sp, #16]
 801a29c:	f8bd 401c 	ldrh.w	r4, [sp, #28]
 801a2a0:	9402      	str	r4, [sp, #8]
 801a2a2:	b2ad      	uxth	r5, r5
 801a2a4:	fa1f f488 	uxth.w	r4, r8
 801a2a8:	9501      	str	r5, [sp, #4]
 801a2aa:	9400      	str	r4, [sp, #0]
 801a2ac:	6c4c      	ldr	r4, [r1, #68]	@ 0x44
 801a2ae:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 801a2b2:	4631      	mov	r1, r6
 801a2b4:	47a0      	blx	r4
 801a2b6:	b00b      	add	sp, #44	@ 0x2c
 801a2b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801a2bc:	f010 0f04 	tst.w	r0, #4
 801a2c0:	e7e1      	b.n	801a286 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x7e>
 801a2c2:	f8d9 0000 	ldr.w	r0, [r9]
 801a2c6:	6803      	ldr	r3, [r0, #0]
 801a2c8:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a2ca:	4798      	blx	r3
 801a2cc:	4b44      	ldr	r3, [pc, #272]	@ (801a3e0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d8>)
 801a2ce:	f9bd 4022 	ldrsh.w	r4, [sp, #34]	@ 0x22
 801a2d2:	881a      	ldrh	r2, [r3, #0]
 801a2d4:	f9bd 1020 	ldrsh.w	r1, [sp, #32]
 801a2d8:	f1bb 0fff 	cmp.w	fp, #255	@ 0xff
 801a2dc:	fb02 1404 	mla	r4, r2, r4, r1
 801a2e0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801a2e4:	469a      	mov	sl, r3
 801a2e6:	fb05 f502 	mul.w	r5, r5, r2
 801a2ea:	ea4f 0748 	mov.w	r7, r8, lsl #1
 801a2ee:	d059      	beq.n	801a3a4 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x19c>
 801a2f0:	f1cb 09ff 	rsb	r9, fp, #255	@ 0xff
 801a2f4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a2f8:	fa1f f28b 	uxth.w	r2, fp
 801a2fc:	fa1f f989 	uxth.w	r9, r9
 801a300:	469e      	mov	lr, r3
 801a302:	42ac      	cmp	r4, r5
 801a304:	d264      	bcs.n	801a3d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a306:	eb04 0a07 	add.w	sl, r4, r7
 801a30a:	4554      	cmp	r4, sl
 801a30c:	d23d      	bcs.n	801a38a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x182>
 801a30e:	8821      	ldrh	r1, [r4, #0]
 801a310:	f836 3b02 	ldrh.w	r3, [r6], #2
 801a314:	1208      	asrs	r0, r1, #8
 801a316:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801a31a:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801a31e:	fb10 f009 	smulbb	r0, r0, r9
 801a322:	ea4f 0be1 	mov.w	fp, r1, asr #3
 801a326:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801a32a:	00c9      	lsls	r1, r1, #3
 801a32c:	fb0c 0c02 	mla	ip, ip, r2, r0
 801a330:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801a334:	10d8      	asrs	r0, r3, #3
 801a336:	b2c9      	uxtb	r1, r1
 801a338:	00db      	lsls	r3, r3, #3
 801a33a:	fa1f fc8c 	uxth.w	ip, ip
 801a33e:	fb1b fb09 	smulbb	fp, fp, r9
 801a342:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 801a346:	b2db      	uxtb	r3, r3
 801a348:	fb11 f109 	smulbb	r1, r1, r9
 801a34c:	fb00 b002 	mla	r0, r0, r2, fp
 801a350:	fb03 1302 	mla	r3, r3, r2, r1
 801a354:	f10c 0b01 	add.w	fp, ip, #1
 801a358:	b29b      	uxth	r3, r3
 801a35a:	eb0b 2c1c 	add.w	ip, fp, ip, lsr #8
 801a35e:	b280      	uxth	r0, r0
 801a360:	f40c 4b78 	and.w	fp, ip, #63488	@ 0xf800
 801a364:	f103 0c01 	add.w	ip, r3, #1
 801a368:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801a36c:	1c43      	adds	r3, r0, #1
 801a36e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801a372:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801a376:	0940      	lsrs	r0, r0, #5
 801a378:	ea4c 0c0b 	orr.w	ip, ip, fp
 801a37c:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 801a380:	ea4c 0c00 	orr.w	ip, ip, r0
 801a384:	f824 cb02 	strh.w	ip, [r4], #2
 801a388:	e7bf      	b.n	801a30a <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x102>
 801a38a:	f8be 3000 	ldrh.w	r3, [lr]
 801a38e:	eba3 0308 	sub.w	r3, r3, r8
 801a392:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a396:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a39a:	eba3 0308 	sub.w	r3, r3, r8
 801a39e:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a3a2:	e7ae      	b.n	801a302 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xfa>
 801a3a4:	eb04 0545 	add.w	r5, r4, r5, lsl #1
 801a3a8:	f8d9 0000 	ldr.w	r0, [r9]
 801a3ac:	42ac      	cmp	r4, r5
 801a3ae:	6803      	ldr	r3, [r0, #0]
 801a3b0:	d20e      	bcs.n	801a3d0 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1c8>
 801a3b2:	f8d3 8034 	ldr.w	r8, [r3, #52]	@ 0x34
 801a3b6:	4632      	mov	r2, r6
 801a3b8:	463b      	mov	r3, r7
 801a3ba:	4621      	mov	r1, r4
 801a3bc:	47c0      	blx	r8
 801a3be:	f8ba 3000 	ldrh.w	r3, [sl]
 801a3c2:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801a3c6:	f9bd 301c 	ldrsh.w	r3, [sp, #28]
 801a3ca:	eb06 0643 	add.w	r6, r6, r3, lsl #1
 801a3ce:	e7eb      	b.n	801a3a8 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1a0>
 801a3d0:	4b02      	ldr	r3, [pc, #8]	@ (801a3dc <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0x1d4>)
 801a3d2:	6818      	ldr	r0, [r3, #0]
 801a3d4:	6803      	ldr	r3, [r0, #0]
 801a3d6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801a3d8:	4798      	blx	r3
 801a3da:	e76c      	b.n	801a2b6 <_ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb+0xae>
 801a3dc:	20002f54 	.word	0x20002f54
 801a3e0:	20002f4e 	.word	0x20002f4e

0801a3e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L4D0Ev>:
 801a3e4:	b510      	push	{r4, lr}
 801a3e6:	2104      	movs	r1, #4
 801a3e8:	4604      	mov	r4, r0
 801a3ea:	f00b fc82 	bl	8025cf2 <_ZdlPvj>
 801a3ee:	4620      	mov	r0, r4
 801a3f0:	bd10      	pop	{r4, pc}

0801a3f2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLED0Ev>:
 801a3f2:	b510      	push	{r4, lr}
 801a3f4:	2104      	movs	r1, #4
 801a3f6:	4604      	mov	r4, r0
 801a3f8:	f00b fc7b 	bl	8025cf2 <_ZdlPvj>
 801a3fc:	4620      	mov	r0, r4
 801a3fe:	bd10      	pop	{r4, pc}

0801a400 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW9D0Ev>:
 801a400:	b510      	push	{r4, lr}
 801a402:	f640 0144 	movw	r1, #2116	@ 0x844
 801a406:	4604      	mov	r4, r0
 801a408:	f00b fc73 	bl	8025cf2 <_ZdlPvj>
 801a40c:	4620      	mov	r0, r4
 801a40e:	bd10      	pop	{r4, pc}

0801a410 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOID0Ev>:
 801a410:	b510      	push	{r4, lr}
 801a412:	f44f 7182 	mov.w	r1, #260	@ 0x104
 801a416:	4604      	mov	r4, r0
 801a418:	f00b fc6b 	bl	8025cf2 <_ZdlPvj>
 801a41c:	4620      	mov	r0, r4
 801a41e:	bd10      	pop	{r4, pc}

0801a420 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a420:	b510      	push	{r4, lr}
 801a422:	2104      	movs	r1, #4
 801a424:	4604      	mov	r4, r0
 801a426:	f00b fc64 	bl	8025cf2 <_ZdlPvj>
 801a42a:	4620      	mov	r0, r4
 801a42c:	bd10      	pop	{r4, pc}

0801a42e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a42e:	b510      	push	{r4, lr}
 801a430:	2104      	movs	r1, #4
 801a432:	4604      	mov	r4, r0
 801a434:	f00b fc5d 	bl	8025cf2 <_ZdlPvj>
 801a438:	4620      	mov	r0, r4
 801a43a:	bd10      	pop	{r4, pc}

0801a43c <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a43c:	b510      	push	{r4, lr}
 801a43e:	2104      	movs	r1, #4
 801a440:	4604      	mov	r4, r0
 801a442:	f00b fc56 	bl	8025cf2 <_ZdlPvj>
 801a446:	4620      	mov	r0, r4
 801a448:	bd10      	pop	{r4, pc}

0801a44a <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a44a:	b510      	push	{r4, lr}
 801a44c:	2104      	movs	r1, #4
 801a44e:	4604      	mov	r4, r0
 801a450:	f00b fc4f 	bl	8025cf2 <_ZdlPvj>
 801a454:	4620      	mov	r0, r4
 801a456:	bd10      	pop	{r4, pc}

0801a458 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a458:	b510      	push	{r4, lr}
 801a45a:	2104      	movs	r1, #4
 801a45c:	4604      	mov	r4, r0
 801a45e:	f00b fc48 	bl	8025cf2 <_ZdlPvj>
 801a462:	4620      	mov	r0, r4
 801a464:	bd10      	pop	{r4, pc}

0801a466 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GAD0Ev>:
 801a466:	b510      	push	{r4, lr}
 801a468:	2104      	movs	r1, #4
 801a46a:	4604      	mov	r4, r0
 801a46c:	f00b fc41 	bl	8025cf2 <_ZdlPvj>
 801a470:	4620      	mov	r0, r4
 801a472:	bd10      	pop	{r4, pc}

0801a474 <_ZN8touchgfx8LCD16bpp51TextureMapper_L8_RGB888_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a474:	b510      	push	{r4, lr}
 801a476:	2104      	movs	r1, #4
 801a478:	4604      	mov	r4, r0
 801a47a:	f00b fc3a 	bl	8025cf2 <_ZdlPvj>
 801a47e:	4620      	mov	r0, r4
 801a480:	bd10      	pop	{r4, pc}

0801a482 <_ZN8touchgfx8LCD16bpp49TextureMapper_L8_RGB888_Opaque_NearestNeighbor_GAD0Ev>:
 801a482:	b510      	push	{r4, lr}
 801a484:	2104      	movs	r1, #4
 801a486:	4604      	mov	r4, r0
 801a488:	f00b fc33 	bl	8025cf2 <_ZdlPvj>
 801a48c:	4620      	mov	r0, r4
 801a48e:	bd10      	pop	{r4, pc}

0801a490 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a490:	b510      	push	{r4, lr}
 801a492:	2104      	movs	r1, #4
 801a494:	4604      	mov	r4, r0
 801a496:	f00b fc2c 	bl	8025cf2 <_ZdlPvj>
 801a49a:	4620      	mov	r0, r4
 801a49c:	bd10      	pop	{r4, pc}

0801a49e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a49e:	b510      	push	{r4, lr}
 801a4a0:	2104      	movs	r1, #4
 801a4a2:	4604      	mov	r4, r0
 801a4a4:	f00b fc25 	bl	8025cf2 <_ZdlPvj>
 801a4a8:	4620      	mov	r0, r4
 801a4aa:	bd10      	pop	{r4, pc}

0801a4ac <_ZN8touchgfx8LCD16bpp56TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a4ac:	b510      	push	{r4, lr}
 801a4ae:	2104      	movs	r1, #4
 801a4b0:	4604      	mov	r4, r0
 801a4b2:	f00b fc1e 	bl	8025cf2 <_ZdlPvj>
 801a4b6:	4620      	mov	r0, r4
 801a4b8:	bd10      	pop	{r4, pc}

0801a4ba <_ZN8touchgfx8LCD16bpp54TextureMapper_L8_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a4ba:	b510      	push	{r4, lr}
 801a4bc:	2104      	movs	r1, #4
 801a4be:	4604      	mov	r4, r0
 801a4c0:	f00b fc17 	bl	8025cf2 <_ZdlPvj>
 801a4c4:	4620      	mov	r0, r4
 801a4c6:	bd10      	pop	{r4, pc}

0801a4c8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGAD0Ev>:
 801a4c8:	b510      	push	{r4, lr}
 801a4ca:	2104      	movs	r1, #4
 801a4cc:	4604      	mov	r4, r0
 801a4ce:	f00b fc10 	bl	8025cf2 <_ZdlPvj>
 801a4d2:	4620      	mov	r0, r4
 801a4d4:	bd10      	pop	{r4, pc}

0801a4d6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GAD0Ev>:
 801a4d6:	b510      	push	{r4, lr}
 801a4d8:	2104      	movs	r1, #4
 801a4da:	4604      	mov	r4, r0
 801a4dc:	f00b fc09 	bl	8025cf2 <_ZdlPvj>
 801a4e0:	4620      	mov	r0, r4
 801a4e2:	bd10      	pop	{r4, pc}

0801a4e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a4e4:	b510      	push	{r4, lr}
 801a4e6:	2104      	movs	r1, #4
 801a4e8:	4604      	mov	r4, r0
 801a4ea:	f00b fc02 	bl	8025cf2 <_ZdlPvj>
 801a4ee:	4620      	mov	r0, r4
 801a4f0:	bd10      	pop	{r4, pc}

0801a4f2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a4f2:	b510      	push	{r4, lr}
 801a4f4:	2104      	movs	r1, #4
 801a4f6:	4604      	mov	r4, r0
 801a4f8:	f00b fbfb 	bl	8025cf2 <_ZdlPvj>
 801a4fc:	4620      	mov	r0, r4
 801a4fe:	bd10      	pop	{r4, pc}

0801a500 <_ZN8touchgfx8LCD16bpp48TextureMapper_RGB565_Opaque_NearestNeighbor_NoGAD0Ev>:
 801a500:	b510      	push	{r4, lr}
 801a502:	2104      	movs	r1, #4
 801a504:	4604      	mov	r4, r0
 801a506:	f00b fbf4 	bl	8025cf2 <_ZdlPvj>
 801a50a:	4620      	mov	r0, r4
 801a50c:	bd10      	pop	{r4, pc}

0801a50e <_ZN8touchgfx8LCD16bpp46TextureMapper_RGB565_Opaque_NearestNeighbor_GAD0Ev>:
 801a50e:	b510      	push	{r4, lr}
 801a510:	2104      	movs	r1, #4
 801a512:	4604      	mov	r4, r0
 801a514:	f00b fbed 	bl	8025cf2 <_ZdlPvj>
 801a518:	4620      	mov	r0, r4
 801a51a:	bd10      	pop	{r4, pc}

0801a51c <_ZN8touchgfx8LCD16bpp51TextureMapper_RGB565_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a51c:	b510      	push	{r4, lr}
 801a51e:	2104      	movs	r1, #4
 801a520:	4604      	mov	r4, r0
 801a522:	f00b fbe6 	bl	8025cf2 <_ZdlPvj>
 801a526:	4620      	mov	r0, r4
 801a528:	bd10      	pop	{r4, pc}

0801a52a <_ZN8touchgfx8LCD16bpp49TextureMapper_RGB565_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a52a:	b510      	push	{r4, lr}
 801a52c:	2104      	movs	r1, #4
 801a52e:	4604      	mov	r4, r0
 801a530:	f00b fbdf 	bl	8025cf2 <_ZdlPvj>
 801a534:	4620      	mov	r0, r4
 801a536:	bd10      	pop	{r4, pc}

0801a538 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGAD0Ev>:
 801a538:	b510      	push	{r4, lr}
 801a53a:	2104      	movs	r1, #4
 801a53c:	4604      	mov	r4, r0
 801a53e:	f00b fbd8 	bl	8025cf2 <_ZdlPvj>
 801a542:	4620      	mov	r0, r4
 801a544:	bd10      	pop	{r4, pc}

0801a546 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GAD0Ev>:
 801a546:	b510      	push	{r4, lr}
 801a548:	2104      	movs	r1, #4
 801a54a:	4604      	mov	r4, r0
 801a54c:	f00b fbd1 	bl	8025cf2 <_ZdlPvj>
 801a550:	4620      	mov	r0, r4
 801a552:	bd10      	pop	{r4, pc}

0801a554 <_ZN8touchgfx8LCD16bpp53TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_NoGAD0Ev>:
 801a554:	b510      	push	{r4, lr}
 801a556:	2104      	movs	r1, #4
 801a558:	4604      	mov	r4, r0
 801a55a:	f00b fbca 	bl	8025cf2 <_ZdlPvj>
 801a55e:	4620      	mov	r0, r4
 801a560:	bd10      	pop	{r4, pc}

0801a562 <_ZN8touchgfx8LCD16bpp51TextureMapper_ARGB8888_NonOpaque_NearestNeighbor_GAD0Ev>:
 801a562:	b510      	push	{r4, lr}
 801a564:	2104      	movs	r1, #4
 801a566:	4604      	mov	r4, r0
 801a568:	f00b fbc3 	bl	8025cf2 <_ZdlPvj>
 801a56c:	4620      	mov	r0, r4
 801a56e:	bd10      	pop	{r4, pc}

0801a570 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGAD0Ev>:
 801a570:	b510      	push	{r4, lr}
 801a572:	2104      	movs	r1, #4
 801a574:	4604      	mov	r4, r0
 801a576:	f00b fbbc 	bl	8025cf2 <_ZdlPvj>
 801a57a:	4620      	mov	r0, r4
 801a57c:	bd10      	pop	{r4, pc}

0801a57e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GAD0Ev>:
 801a57e:	b510      	push	{r4, lr}
 801a580:	2104      	movs	r1, #4
 801a582:	4604      	mov	r4, r0
 801a584:	f00b fbb5 	bl	8025cf2 <_ZdlPvj>
 801a588:	4620      	mov	r0, r4
 801a58a:	bd10      	pop	{r4, pc}

0801a58c <_ZN8touchgfx8LCD16bpp37TextureMapper_A4_NearestNeighbor_NoGAD0Ev>:
 801a58c:	b510      	push	{r4, lr}
 801a58e:	2104      	movs	r1, #4
 801a590:	4604      	mov	r4, r0
 801a592:	f00b fbae 	bl	8025cf2 <_ZdlPvj>
 801a596:	4620      	mov	r0, r4
 801a598:	bd10      	pop	{r4, pc}

0801a59a <_ZN8touchgfx8LCD16bpp35TextureMapper_A4_NearestNeighbor_GAD0Ev>:
 801a59a:	b510      	push	{r4, lr}
 801a59c:	2104      	movs	r1, #4
 801a59e:	4604      	mov	r4, r0
 801a5a0:	f00b fba7 	bl	8025cf2 <_ZdlPvj>
 801a5a4:	4620      	mov	r0, r4
 801a5a6:	bd10      	pop	{r4, pc}

0801a5a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h>:
 801a5a8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801a5ac:	b08f      	sub	sp, #60	@ 0x3c
 801a5ae:	4616      	mov	r6, r2
 801a5b0:	f89d 2060 	ldrb.w	r2, [sp, #96]	@ 0x60
 801a5b4:	9205      	str	r2, [sp, #20]
 801a5b6:	4682      	mov	sl, r0
 801a5b8:	460d      	mov	r5, r1
 801a5ba:	2a00      	cmp	r2, #0
 801a5bc:	f000 82b7 	beq.w	801ab2e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x586>
 801a5c0:	6830      	ldr	r0, [r6, #0]
 801a5c2:	6871      	ldr	r1, [r6, #4]
 801a5c4:	ac0a      	add	r4, sp, #40	@ 0x28
 801a5c6:	c403      	stmia	r4!, {r0, r1}
 801a5c8:	6818      	ldr	r0, [r3, #0]
 801a5ca:	6859      	ldr	r1, [r3, #4]
 801a5cc:	ac0c      	add	r4, sp, #48	@ 0x30
 801a5ce:	c403      	stmia	r4!, {r0, r1}
 801a5d0:	a80a      	add	r0, sp, #40	@ 0x28
 801a5d2:	f7f9 fca7 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801a5d6:	4631      	mov	r1, r6
 801a5d8:	a80c      	add	r0, sp, #48	@ 0x30
 801a5da:	f7f9 fccb 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801a5de:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801a5e2:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801a5e6:	bfd7      	itett	le
 801a5e8:	b293      	uxthle	r3, r2
 801a5ea:	2301      	movgt	r3, #1
 801a5ec:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801a5f0:	fb91 f3f3 	sdivle	r3, r1, r3
 801a5f4:	9300      	str	r3, [sp, #0]
 801a5f6:	f105 0308 	add.w	r3, r5, #8
 801a5fa:	9900      	ldr	r1, [sp, #0]
 801a5fc:	9306      	str	r3, [sp, #24]
 801a5fe:	f9bd 302e 	ldrsh.w	r3, [sp, #46]	@ 0x2e
 801a602:	440b      	add	r3, r1
 801a604:	3b01      	subs	r3, #1
 801a606:	fb93 f3f1 	sdiv	r3, r3, r1
 801a60a:	9906      	ldr	r1, [sp, #24]
 801a60c:	3b01      	subs	r3, #1
 801a60e:	b29b      	uxth	r3, r3
 801a610:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801a614:	9307      	str	r3, [sp, #28]
 801a616:	9900      	ldr	r1, [sp, #0]
 801a618:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801a61c:	fb93 f0f1 	sdiv	r0, r3, r1
 801a620:	b284      	uxth	r4, r0
 801a622:	9402      	str	r4, [sp, #8]
 801a624:	9d02      	ldr	r5, [sp, #8]
 801a626:	9c00      	ldr	r4, [sp, #0]
 801a628:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801a62c:	fb05 3414 	mls	r4, r5, r4, r3
 801a630:	fb14 f402 	smulbb	r4, r4, r2
 801a634:	440c      	add	r4, r1
 801a636:	b2a4      	uxth	r4, r4
 801a638:	2d00      	cmp	r5, #0
 801a63a:	d06c      	beq.n	801a716 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16e>
 801a63c:	1e6a      	subs	r2, r5, #1
 801a63e:	9806      	ldr	r0, [sp, #24]
 801a640:	f850 6022 	ldr.w	r6, [r0, r2, lsl #2]
 801a644:	9a07      	ldr	r2, [sp, #28]
 801a646:	ba36      	rev	r6, r6
 801a648:	4416      	add	r6, r2
 801a64a:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801a64e:	f9bd 5036 	ldrsh.w	r5, [sp, #54]	@ 0x36
 801a652:	f8df 9334 	ldr.w	r9, [pc, #820]	@ 801a988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>
 801a656:	4411      	add	r1, r2
 801a658:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801a65c:	f8ad 1030 	strh.w	r1, [sp, #48]	@ 0x30
 801a660:	4413      	add	r3, r2
 801a662:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801a666:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801a66a:	9301      	str	r3, [sp, #4]
 801a66c:	4bc4      	ldr	r3, [pc, #784]	@ (801a980 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3d8>)
 801a66e:	6818      	ldr	r0, [r3, #0]
 801a670:	6803      	ldr	r3, [r0, #0]
 801a672:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801a674:	4798      	blx	r3
 801a676:	4bc3      	ldr	r3, [pc, #780]	@ (801a984 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3dc>)
 801a678:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801a67c:	881b      	ldrh	r3, [r3, #0]
 801a67e:	f9bd 8032 	ldrsh.w	r8, [sp, #50]	@ 0x32
 801a682:	fb03 2808 	mla	r8, r3, r8, r2
 801a686:	eb00 0848 	add.w	r8, r0, r8, lsl #1
 801a68a:	436b      	muls	r3, r5
 801a68c:	eb08 0343 	add.w	r3, r8, r3, lsl #1
 801a690:	9309      	str	r3, [sp, #36]	@ 0x24
 801a692:	2500      	movs	r5, #0
 801a694:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 801a698:	fb94 f3f3 	sdiv	r3, r4, r3
 801a69c:	9304      	str	r3, [sp, #16]
 801a69e:	f10a 0304 	add.w	r3, sl, #4
 801a6a2:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801a6a6:	4629      	mov	r1, r5
 801a6a8:	4618      	mov	r0, r3
 801a6aa:	9308      	str	r3, [sp, #32]
 801a6ac:	f00b fdd7 	bl	802625e <memset>
 801a6b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801a6b2:	4543      	cmp	r3, r8
 801a6b4:	f240 8236 	bls.w	801ab24 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x57c>
 801a6b8:	2203      	movs	r2, #3
 801a6ba:	2107      	movs	r1, #7
 801a6bc:	200b      	movs	r0, #11
 801a6be:	2c00      	cmp	r4, #0
 801a6c0:	f000 8131 	beq.w	801a926 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x37e>
 801a6c4:	7833      	ldrb	r3, [r6, #0]
 801a6c6:	b2db      	uxtb	r3, r3
 801a6c8:	2bfe      	cmp	r3, #254	@ 0xfe
 801a6ca:	d126      	bne.n	801a71a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x172>
 801a6cc:	f896 e001 	ldrb.w	lr, [r6, #1]
 801a6d0:	f896 c002 	ldrb.w	ip, [r6, #2]
 801a6d4:	f896 b003 	ldrb.w	fp, [r6, #3]
 801a6d8:	fa5f fe8e 	uxtb.w	lr, lr
 801a6dc:	fa5f fc8c 	uxtb.w	ip, ip
 801a6e0:	f36e 0507 	bfi	r5, lr, #0, #8
 801a6e4:	f36c 250f 	bfi	r5, ip, #8, #8
 801a6e8:	fa5f fb8b 	uxtb.w	fp, fp
 801a6ec:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a6f0:	f36b 4517 	bfi	r5, fp, #16, #8
 801a6f4:	fb12 cc0b 	smlabb	ip, r2, fp, ip
 801a6f8:	0e2b      	lsrs	r3, r5, #24
 801a6fa:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a6fe:	fb10 c303 	smlabb	r3, r0, r3, ip
 801a702:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a706:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a70a:	3c01      	subs	r4, #1
 801a70c:	1d37      	adds	r7, r6, #4
 801a70e:	b2a4      	uxth	r4, r4
 801a710:	605d      	str	r5, [r3, #4]
 801a712:	463e      	mov	r6, r7
 801a714:	e7d3      	b.n	801a6be <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x116>
 801a716:	9e07      	ldr	r6, [sp, #28]
 801a718:	e797      	b.n	801a64a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0xa2>
 801a71a:	2bff      	cmp	r3, #255	@ 0xff
 801a71c:	d127      	bne.n	801a76e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1c6>
 801a71e:	f896 c001 	ldrb.w	ip, [r6, #1]
 801a722:	78b3      	ldrb	r3, [r6, #2]
 801a724:	f896 e003 	ldrb.w	lr, [r6, #3]
 801a728:	f896 b004 	ldrb.w	fp, [r6, #4]
 801a72c:	fa5f fc8c 	uxtb.w	ip, ip
 801a730:	b2db      	uxtb	r3, r3
 801a732:	f36c 0507 	bfi	r5, ip, #0, #8
 801a736:	f363 250f 	bfi	r5, r3, #8, #8
 801a73a:	fa5f fe8e 	uxtb.w	lr, lr
 801a73e:	eb03 0383 	add.w	r3, r3, r3, lsl #2
 801a742:	fb12 330e 	smlabb	r3, r2, lr, r3
 801a746:	fa5f fb8b 	uxtb.w	fp, fp
 801a74a:	f36e 4517 	bfi	r5, lr, #16, #8
 801a74e:	fb11 330c 	smlabb	r3, r1, ip, r3
 801a752:	f36b 651f 	bfi	r5, fp, #24, #8
 801a756:	fb10 3b0b 	smlabb	fp, r0, fp, r3
 801a75a:	f00b 0b3f 	and.w	fp, fp, #63	@ 0x3f
 801a75e:	eb0a 0b8b 	add.w	fp, sl, fp, lsl #2
 801a762:	3c01      	subs	r4, #1
 801a764:	1d77      	adds	r7, r6, #5
 801a766:	b2a4      	uxth	r4, r4
 801a768:	f8cb 5004 	str.w	r5, [fp, #4]
 801a76c:	e7d1      	b.n	801a712 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a76e:	ea5f 1ca3 	movs.w	ip, r3, asr #6
 801a772:	f106 0701 	add.w	r7, r6, #1
 801a776:	d107      	bne.n	801a788 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1e0>
 801a778:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a77c:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a780:	685d      	ldr	r5, [r3, #4]
 801a782:	3c01      	subs	r4, #1
 801a784:	b2a4      	uxth	r4, r4
 801a786:	e7c4      	b.n	801a712 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a788:	f1bc 0f01 	cmp.w	ip, #1
 801a78c:	d12c      	bne.n	801a7e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x240>
 801a78e:	f003 0e03 	and.w	lr, r3, #3
 801a792:	f1ae 0e02 	sub.w	lr, lr, #2
 801a796:	eb05 0ece 	add.w	lr, r5, lr, lsl #3
 801a79a:	fa5f fe8e 	uxtb.w	lr, lr
 801a79e:	f003 0c0c 	and.w	ip, r3, #12
 801a7a2:	f36e 0507 	bfi	r5, lr, #0, #8
 801a7a6:	f1ac 0c08 	sub.w	ip, ip, #8
 801a7aa:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801a7ae:	f00c 0cff 	and.w	ip, ip, #255	@ 0xff
 801a7b2:	f36c 250f 	bfi	r5, ip, #8, #8
 801a7b6:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a7ba:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a7be:	3b02      	subs	r3, #2
 801a7c0:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a7c4:	b2db      	uxtb	r3, r3
 801a7c6:	eb0c 0c8c 	add.w	ip, ip, ip, lsl #2
 801a7ca:	f363 4517 	bfi	r5, r3, #16, #8
 801a7ce:	fb12 cc03 	smlabb	ip, r2, r3, ip
 801a7d2:	0e2e      	lsrs	r6, r5, #24
 801a7d4:	fb11 cc0e 	smlabb	ip, r1, lr, ip
 801a7d8:	fb10 c606 	smlabb	r6, r0, r6, ip
 801a7dc:	f006 063f 	and.w	r6, r6, #63	@ 0x3f
 801a7e0:	eb0a 0686 	add.w	r6, sl, r6, lsl #2
 801a7e4:	6075      	str	r5, [r6, #4]
 801a7e6:	e7cc      	b.n	801a782 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x1da>
 801a7e8:	f1bc 0f02 	cmp.w	ip, #2
 801a7ec:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a7f0:	d12a      	bne.n	801a848 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2a0>
 801a7f2:	1cb7      	adds	r7, r6, #2
 801a7f4:	7876      	ldrb	r6, [r6, #1]
 801a7f6:	b2f6      	uxtb	r6, r6
 801a7f8:	f006 0c0f 	and.w	ip, r6, #15
 801a7fc:	3b20      	subs	r3, #32
 801a7fe:	f1ac 0c08 	sub.w	ip, ip, #8
 801a802:	449c      	add	ip, r3
 801a804:	eb05 0ccc 	add.w	ip, r5, ip, lsl #3
 801a808:	fa5f fc8c 	uxtb.w	ip, ip
 801a80c:	f36c 0507 	bfi	r5, ip, #0, #8
 801a810:	f3c5 2e07 	ubfx	lr, r5, #8, #8
 801a814:	eb0e 0e83 	add.w	lr, lr, r3, lsl #2
 801a818:	fa5f fe8e 	uxtb.w	lr, lr
 801a81c:	1136      	asrs	r6, r6, #4
 801a81e:	f36e 250f 	bfi	r5, lr, #8, #8
 801a822:	3e08      	subs	r6, #8
 801a824:	4433      	add	r3, r6
 801a826:	f3c5 4607 	ubfx	r6, r5, #16, #8
 801a82a:	eb06 03c3 	add.w	r3, r6, r3, lsl #3
 801a82e:	b2db      	uxtb	r3, r3
 801a830:	eb0e 0e8e 	add.w	lr, lr, lr, lsl #2
 801a834:	f363 4517 	bfi	r5, r3, #16, #8
 801a838:	fb12 ee03 	smlabb	lr, r2, r3, lr
 801a83c:	0e2e      	lsrs	r6, r5, #24
 801a83e:	fb11 ee0c 	smlabb	lr, r1, ip, lr
 801a842:	fb10 e606 	smlabb	r6, r0, r6, lr
 801a846:	e7c9      	b.n	801a7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x234>
 801a848:	1c5e      	adds	r6, r3, #1
 801a84a:	42a6      	cmp	r6, r4
 801a84c:	dd4e      	ble.n	801a8ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x344>
 801a84e:	1b36      	subs	r6, r6, r4
 801a850:	2e00      	cmp	r6, #0
 801a852:	dc4e      	bgt.n	801a8f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x34a>
 801a854:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a858:	2400      	movs	r4, #0
 801a85a:	f1bb 0f00 	cmp.w	fp, #0
 801a85e:	f340 8122 	ble.w	801aaa6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fe>
 801a862:	1c7b      	adds	r3, r7, #1
 801a864:	9303      	str	r3, [sp, #12]
 801a866:	783b      	ldrb	r3, [r7, #0]
 801a868:	b2db      	uxtb	r3, r3
 801a86a:	2bfe      	cmp	r3, #254	@ 0xfe
 801a86c:	d160      	bne.n	801a930 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x388>
 801a86e:	7879      	ldrb	r1, [r7, #1]
 801a870:	78ba      	ldrb	r2, [r7, #2]
 801a872:	78f8      	ldrb	r0, [r7, #3]
 801a874:	b2c9      	uxtb	r1, r1
 801a876:	f361 0507 	bfi	r5, r1, #0, #8
 801a87a:	b2d2      	uxtb	r2, r2
 801a87c:	1d3b      	adds	r3, r7, #4
 801a87e:	f362 250f 	bfi	r5, r2, #8, #8
 801a882:	b2c0      	uxtb	r0, r0
 801a884:	9303      	str	r3, [sp, #12]
 801a886:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a88a:	2303      	movs	r3, #3
 801a88c:	fb13 2200 	smlabb	r2, r3, r0, r2
 801a890:	f360 4517 	bfi	r5, r0, #16, #8
 801a894:	2307      	movs	r3, #7
 801a896:	fb13 2101 	smlabb	r1, r3, r1, r2
 801a89a:	0e2e      	lsrs	r6, r5, #24
 801a89c:	230b      	movs	r3, #11
 801a89e:	fb13 1306 	smlabb	r3, r3, r6, r1
 801a8a2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a8a6:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a8aa:	605d      	str	r5, [r3, #4]
 801a8ac:	2601      	movs	r6, #1
 801a8ae:	4637      	mov	r7, r6
 801a8b0:	0e2b      	lsrs	r3, r5, #24
 801a8b2:	ebab 0b07 	sub.w	fp, fp, r7
 801a8b6:	eba6 0607 	sub.w	r6, r6, r7
 801a8ba:	f040 80d3 	bne.w	801aa64 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4bc>
 801a8be:	b18c      	cbz	r4, 801a8e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x33c>
 801a8c0:	4648      	mov	r0, r9
 801a8c2:	00a1      	lsls	r1, r4, #2
 801a8c4:	f7f5 fa19 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801a8c8:	9b05      	ldr	r3, [sp, #20]
 801a8ca:	4622      	mov	r2, r4
 801a8cc:	4649      	mov	r1, r9
 801a8ce:	4640      	mov	r0, r8
 801a8d0:	f7f5 fac6 	bl	800fe60 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801a8d4:	4b2c      	ldr	r3, [pc, #176]	@ (801a988 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e0>)
 801a8d6:	4a2d      	ldr	r2, [pc, #180]	@ (801a98c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e4>)
 801a8d8:	4599      	cmp	r9, r3
 801a8da:	bf08      	it	eq
 801a8dc:	4613      	moveq	r3, r2
 801a8de:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801a8e2:	4699      	mov	r9, r3
 801a8e4:	eb08 0847 	add.w	r8, r8, r7, lsl #1
 801a8e8:	2400      	movs	r4, #0
 801a8ea:	e0da      	b.n	801aaa2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4fa>
 801a8ec:	1ba6      	subs	r6, r4, r6
 801a8ee:	b2b4      	uxth	r4, r6
 801a8f0:	e70f      	b.n	801a712 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x16a>
 801a8f2:	9b01      	ldr	r3, [sp, #4]
 801a8f4:	9a01      	ldr	r2, [sp, #4]
 801a8f6:	42b3      	cmp	r3, r6
 801a8f8:	bfa8      	it	ge
 801a8fa:	4633      	movge	r3, r6
 801a8fc:	0e2c      	lsrs	r4, r5, #24
 801a8fe:	eba2 0b03 	sub.w	fp, r2, r3
 801a902:	eba6 0603 	sub.w	r6, r6, r3
 801a906:	d00b      	beq.n	801a920 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x378>
 801a908:	f1a9 0104 	sub.w	r1, r9, #4
 801a90c:	461a      	mov	r2, r3
 801a90e:	2a00      	cmp	r2, #0
 801a910:	dc02      	bgt.n	801a918 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x370>
 801a912:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801a916:	e7a0      	b.n	801a85a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a918:	f841 5f04 	str.w	r5, [r1, #4]!
 801a91c:	3a01      	subs	r2, #1
 801a91e:	e7f6      	b.n	801a90e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x366>
 801a920:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801a924:	e799      	b.n	801a85a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a926:	4637      	mov	r7, r6
 801a928:	f8dd b004 	ldr.w	fp, [sp, #4]
 801a92c:	4626      	mov	r6, r4
 801a92e:	e794      	b.n	801a85a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801a930:	2bff      	cmp	r3, #255	@ 0xff
 801a932:	d11d      	bne.n	801a970 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3c8>
 801a934:	7878      	ldrb	r0, [r7, #1]
 801a936:	78ba      	ldrb	r2, [r7, #2]
 801a938:	78fe      	ldrb	r6, [r7, #3]
 801a93a:	1d7b      	adds	r3, r7, #5
 801a93c:	b2c0      	uxtb	r0, r0
 801a93e:	9303      	str	r3, [sp, #12]
 801a940:	793b      	ldrb	r3, [r7, #4]
 801a942:	f360 0507 	bfi	r5, r0, #0, #8
 801a946:	b2d2      	uxtb	r2, r2
 801a948:	b2d9      	uxtb	r1, r3
 801a94a:	f362 250f 	bfi	r5, r2, #8, #8
 801a94e:	b2f6      	uxtb	r6, r6
 801a950:	2303      	movs	r3, #3
 801a952:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a956:	fb13 2206 	smlabb	r2, r3, r6, r2
 801a95a:	2307      	movs	r3, #7
 801a95c:	fb13 2000 	smlabb	r0, r3, r0, r2
 801a960:	f366 4517 	bfi	r5, r6, #16, #8
 801a964:	230b      	movs	r3, #11
 801a966:	f361 651f 	bfi	r5, r1, #24, #8
 801a96a:	fb13 0301 	smlabb	r3, r3, r1, r0
 801a96e:	e798      	b.n	801a8a2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2fa>
 801a970:	119e      	asrs	r6, r3, #6
 801a972:	d10d      	bne.n	801a990 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x3e8>
 801a974:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a978:	eb0a 0383 	add.w	r3, sl, r3, lsl #2
 801a97c:	685d      	ldr	r5, [r3, #4]
 801a97e:	e795      	b.n	801a8ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801a980:	20002f54 	.word	0x20002f54
 801a984:	20002f4e 	.word	0x20002f4e
 801a988:	20000120 	.word	0x20000120
 801a98c:	20000220 	.word	0x20000220
 801a990:	2e01      	cmp	r6, #1
 801a992:	ea4f 6115 	mov.w	r1, r5, lsr #24
 801a996:	d12b      	bne.n	801a9f0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x448>
 801a998:	f003 0003 	and.w	r0, r3, #3
 801a99c:	3802      	subs	r0, #2
 801a99e:	eb05 00c0 	add.w	r0, r5, r0, lsl #3
 801a9a2:	b2c0      	uxtb	r0, r0
 801a9a4:	f003 020c 	and.w	r2, r3, #12
 801a9a8:	f360 0507 	bfi	r5, r0, #0, #8
 801a9ac:	3a08      	subs	r2, #8
 801a9ae:	eb02 2215 	add.w	r2, r2, r5, lsr #8
 801a9b2:	f002 02ff 	and.w	r2, r2, #255	@ 0xff
 801a9b6:	f362 250f 	bfi	r5, r2, #8, #8
 801a9ba:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801a9be:	1e9f      	subs	r7, r3, #2
 801a9c0:	f3c5 4307 	ubfx	r3, r5, #16, #8
 801a9c4:	eb03 03c7 	add.w	r3, r3, r7, lsl #3
 801a9c8:	b2db      	uxtb	r3, r3
 801a9ca:	2703      	movs	r7, #3
 801a9cc:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801a9d0:	fb17 2203 	smlabb	r2, r7, r3, r2
 801a9d4:	2707      	movs	r7, #7
 801a9d6:	f363 4517 	bfi	r5, r3, #16, #8
 801a9da:	fb17 2000 	smlabb	r0, r7, r0, r2
 801a9de:	230b      	movs	r3, #11
 801a9e0:	fb13 0101 	smlabb	r1, r3, r1, r0
 801a9e4:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801a9e8:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801a9ec:	604d      	str	r5, [r1, #4]
 801a9ee:	e75e      	b.n	801a8ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x306>
 801a9f0:	2e02      	cmp	r6, #2
 801a9f2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801a9f6:	d12f      	bne.n	801aa58 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4b0>
 801a9f8:	7878      	ldrb	r0, [r7, #1]
 801a9fa:	1cba      	adds	r2, r7, #2
 801a9fc:	b2c0      	uxtb	r0, r0
 801a9fe:	9203      	str	r2, [sp, #12]
 801aa00:	f000 020f 	and.w	r2, r0, #15
 801aa04:	3b20      	subs	r3, #32
 801aa06:	3a08      	subs	r2, #8
 801aa08:	441a      	add	r2, r3
 801aa0a:	eb05 02c2 	add.w	r2, r5, r2, lsl #3
 801aa0e:	b2d2      	uxtb	r2, r2
 801aa10:	f362 0507 	bfi	r5, r2, #0, #8
 801aa14:	f3c5 2607 	ubfx	r6, r5, #8, #8
 801aa18:	eb06 0683 	add.w	r6, r6, r3, lsl #2
 801aa1c:	b2f6      	uxtb	r6, r6
 801aa1e:	1100      	asrs	r0, r0, #4
 801aa20:	f366 250f 	bfi	r5, r6, #8, #8
 801aa24:	3808      	subs	r0, #8
 801aa26:	4403      	add	r3, r0
 801aa28:	f3c5 4007 	ubfx	r0, r5, #16, #8
 801aa2c:	eb00 03c3 	add.w	r3, r0, r3, lsl #3
 801aa30:	b2db      	uxtb	r3, r3
 801aa32:	2003      	movs	r0, #3
 801aa34:	eb06 0686 	add.w	r6, r6, r6, lsl #2
 801aa38:	fb10 6603 	smlabb	r6, r0, r3, r6
 801aa3c:	2007      	movs	r0, #7
 801aa3e:	f363 4517 	bfi	r5, r3, #16, #8
 801aa42:	fb10 6202 	smlabb	r2, r0, r2, r6
 801aa46:	230b      	movs	r3, #11
 801aa48:	fb13 2101 	smlabb	r1, r3, r1, r2
 801aa4c:	f001 013f 	and.w	r1, r1, #63	@ 0x3f
 801aa50:	eb0a 0181 	add.w	r1, sl, r1, lsl #2
 801aa54:	604d      	str	r5, [r1, #4]
 801aa56:	e729      	b.n	801a8ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x304>
 801aa58:	1c5e      	adds	r6, r3, #1
 801aa5a:	45b3      	cmp	fp, r6
 801aa5c:	465f      	mov	r7, fp
 801aa5e:	bfa8      	it	ge
 801aa60:	4637      	movge	r7, r6
 801aa62:	e725      	b.n	801a8b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x308>
 801aa64:	193b      	adds	r3, r7, r4
 801aa66:	2b40      	cmp	r3, #64	@ 0x40
 801aa68:	dd13      	ble.n	801aa92 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4ea>
 801aa6a:	4648      	mov	r0, r9
 801aa6c:	00a1      	lsls	r1, r4, #2
 801aa6e:	f7f5 f944 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801aa72:	4649      	mov	r1, r9
 801aa74:	9b05      	ldr	r3, [sp, #20]
 801aa76:	4622      	mov	r2, r4
 801aa78:	4640      	mov	r0, r8
 801aa7a:	f7f5 f9f1 	bl	800fe60 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801aa7e:	4b2d      	ldr	r3, [pc, #180]	@ (801ab34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>)
 801aa80:	4599      	cmp	r9, r3
 801aa82:	bf0c      	ite	eq
 801aa84:	f8df 90b8 	ldreq.w	r9, [pc, #184]	@ 801ab40 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x598>
 801aa88:	f8df 90a8 	ldrne.w	r9, [pc, #168]	@ 801ab34 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x58c>
 801aa8c:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801aa90:	2400      	movs	r4, #0
 801aa92:	eb09 0284 	add.w	r2, r9, r4, lsl #2
 801aa96:	463b      	mov	r3, r7
 801aa98:	3b01      	subs	r3, #1
 801aa9a:	f842 5b04 	str.w	r5, [r2], #4
 801aa9e:	d1fb      	bne.n	801aa98 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x4f0>
 801aaa0:	443c      	add	r4, r7
 801aaa2:	9f03      	ldr	r7, [sp, #12]
 801aaa4:	e6d9      	b.n	801a85a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x2b2>
 801aaa6:	b15c      	cbz	r4, 801aac0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x518>
 801aaa8:	00a1      	lsls	r1, r4, #2
 801aaaa:	4648      	mov	r0, r9
 801aaac:	f7f5 f925 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801aab0:	4640      	mov	r0, r8
 801aab2:	9b05      	ldr	r3, [sp, #20]
 801aab4:	4622      	mov	r2, r4
 801aab6:	4649      	mov	r1, r9
 801aab8:	f7f5 f9d2 	bl	800fe60 <_ZN8touchgfx5paint6rgb56516lineFromARGB8888EPtPKmjh>
 801aabc:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801aac0:	4b1d      	ldr	r3, [pc, #116]	@ (801ab38 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x590>)
 801aac2:	9a01      	ldr	r2, [sp, #4]
 801aac4:	881b      	ldrh	r3, [r3, #0]
 801aac6:	1a9b      	subs	r3, r3, r2
 801aac8:	eb08 0843 	add.w	r8, r8, r3, lsl #1
 801aacc:	9b04      	ldr	r3, [sp, #16]
 801aace:	3301      	adds	r3, #1
 801aad0:	9304      	str	r3, [sp, #16]
 801aad2:	9a04      	ldr	r2, [sp, #16]
 801aad4:	9b00      	ldr	r3, [sp, #0]
 801aad6:	4293      	cmp	r3, r2
 801aad8:	d11d      	bne.n	801ab16 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x56e>
 801aada:	9b02      	ldr	r3, [sp, #8]
 801aadc:	9a02      	ldr	r2, [sp, #8]
 801aade:	f8bd 4030 	ldrh.w	r4, [sp, #48]	@ 0x30
 801aae2:	f8bd 6028 	ldrh.w	r6, [sp, #40]	@ 0x28
 801aae6:	9808      	ldr	r0, [sp, #32]
 801aae8:	f103 0b01 	add.w	fp, r3, #1
 801aaec:	9b06      	ldr	r3, [sp, #24]
 801aaee:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801aaf2:	9b07      	ldr	r3, [sp, #28]
 801aaf4:	2500      	movs	r5, #0
 801aaf6:	ba3f      	rev	r7, r7
 801aaf8:	1ba4      	subs	r4, r4, r6
 801aafa:	f44f 7280 	mov.w	r2, #256	@ 0x100
 801aafe:	4629      	mov	r1, r5
 801ab00:	441f      	add	r7, r3
 801ab02:	b2a4      	uxth	r4, r4
 801ab04:	f00b fbab 	bl	802625e <memset>
 801ab08:	f8cd b008 	str.w	fp, [sp, #8]
 801ab0c:	9504      	str	r5, [sp, #16]
 801ab0e:	f7f5 f8ed 	bl	800fcec <_ZN8touchgfx5paint8tearDownEv>
 801ab12:	463e      	mov	r6, r7
 801ab14:	e5cc      	b.n	801a6b0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x108>
 801ab16:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801ab1a:	9b01      	ldr	r3, [sp, #4]
 801ab1c:	1ae4      	subs	r4, r4, r3
 801ab1e:	1ba4      	subs	r4, r4, r6
 801ab20:	b2a4      	uxth	r4, r4
 801ab22:	e7f4      	b.n	801ab0e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x566>
 801ab24:	4b05      	ldr	r3, [pc, #20]	@ (801ab3c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI16blitCopyARGB8888EPKhRKNS_4RectES6_h+0x594>)
 801ab26:	6818      	ldr	r0, [r3, #0]
 801ab28:	6803      	ldr	r3, [r0, #0]
 801ab2a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ab2c:	4798      	blx	r3
 801ab2e:	b00f      	add	sp, #60	@ 0x3c
 801ab30:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ab34:	20000120 	.word	0x20000120
 801ab38:	20002f4e 	.word	0x20002f4e
 801ab3c:	20002f54 	.word	0x20002f54
 801ab40:	20000220 	.word	0x20000220

0801ab44 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ab44:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ab48:	b08f      	sub	sp, #60	@ 0x3c
 801ab4a:	461c      	mov	r4, r3
 801ab4c:	9205      	str	r2, [sp, #20]
 801ab4e:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801ab52:	9100      	str	r1, [sp, #0]
 801ab54:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801ab56:	9201      	str	r2, [sp, #4]
 801ab58:	2a00      	cmp	r2, #0
 801ab5a:	f000 8115 	beq.w	801ad88 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x244>
 801ab5e:	6820      	ldr	r0, [r4, #0]
 801ab60:	6861      	ldr	r1, [r4, #4]
 801ab62:	aa0a      	add	r2, sp, #40	@ 0x28
 801ab64:	c203      	stmia	r2!, {r0, r1}
 801ab66:	6818      	ldr	r0, [r3, #0]
 801ab68:	6859      	ldr	r1, [r3, #4]
 801ab6a:	aa0c      	add	r2, sp, #48	@ 0x30
 801ab6c:	c203      	stmia	r2!, {r0, r1}
 801ab6e:	a80a      	add	r0, sp, #40	@ 0x28
 801ab70:	f7f9 f9d8 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ab74:	4621      	mov	r1, r4
 801ab76:	a80c      	add	r0, sp, #48	@ 0x30
 801ab78:	f7f9 f9fc 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ab7c:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801ab80:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801ab84:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801ab88:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801ab8c:	bfde      	ittt	le
 801ab8e:	b2b3      	uxthle	r3, r6
 801ab90:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801ab94:	fb92 f3f3 	sdivle	r3, r2, r3
 801ab98:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801ab9c:	bfc8      	it	gt
 801ab9e:	2301      	movgt	r3, #1
 801aba0:	fb92 f1f3 	sdiv	r1, r2, r3
 801aba4:	fa1f fc81 	uxth.w	ip, r1
 801aba8:	fb0c 2413 	mls	r4, ip, r3, r2
 801abac:	fb14 f406 	smulbb	r4, r4, r6
 801abb0:	441d      	add	r5, r3
 801abb2:	4404      	add	r4, r0
 801abb4:	4661      	mov	r1, ip
 801abb6:	3d01      	subs	r5, #1
 801abb8:	b2a4      	uxth	r4, r4
 801abba:	fb95 f5f3 	sdiv	r5, r5, r3
 801abbe:	b131      	cbz	r1, 801abce <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x8a>
 801abc0:	9b05      	ldr	r3, [sp, #20]
 801abc2:	9900      	ldr	r1, [sp, #0]
 801abc4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801abc8:	ba1b      	rev	r3, r3
 801abca:	4419      	add	r1, r3
 801abcc:	9100      	str	r1, [sp, #0]
 801abce:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801abd2:	f9bd 8034 	ldrsh.w	r8, [sp, #52]	@ 0x34
 801abd6:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801abda:	4418      	add	r0, r3
 801abdc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801abe0:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801abe4:	441a      	add	r2, r3
 801abe6:	4b6a      	ldr	r3, [pc, #424]	@ (801ad90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801abe8:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801abec:	6818      	ldr	r0, [r3, #0]
 801abee:	6803      	ldr	r3, [r0, #0]
 801abf0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801abf2:	4798      	blx	r3
 801abf4:	4967      	ldr	r1, [pc, #412]	@ (801ad94 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x250>)
 801abf6:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801abfa:	880b      	ldrh	r3, [r1, #0]
 801abfc:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801ac00:	9109      	str	r1, [sp, #36]	@ 0x24
 801ac02:	fb03 c202 	mla	r2, r3, r2, ip
 801ac06:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ac0a:	4373      	muls	r3, r6
 801ac0c:	b2ad      	uxth	r5, r5
 801ac0e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ac12:	00ad      	lsls	r5, r5, #2
 801ac14:	9306      	str	r3, [sp, #24]
 801ac16:	1d2b      	adds	r3, r5, #4
 801ac18:	9307      	str	r3, [sp, #28]
 801ac1a:	9b01      	ldr	r3, [sp, #4]
 801ac1c:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801ac20:	9103      	str	r1, [sp, #12]
 801ac22:	f1c3 02ff 	rsb	r2, r3, #255	@ 0xff
 801ac26:	2c00      	cmp	r4, #0
 801ac28:	bf0c      	ite	eq
 801ac2a:	46c6      	moveq	lr, r8
 801ac2c:	f04f 0e00 	movne.w	lr, #0
 801ac30:	2300      	movs	r3, #0
 801ac32:	b292      	uxth	r2, r2
 801ac34:	fa1f fe8e 	uxth.w	lr, lr
 801ac38:	9302      	str	r3, [sp, #8]
 801ac3a:	9204      	str	r2, [sp, #16]
 801ac3c:	9a06      	ldr	r2, [sp, #24]
 801ac3e:	4282      	cmp	r2, r0
 801ac40:	f240 809d 	bls.w	801ad7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x23a>
 801ac44:	b963      	cbnz	r3, 801ac60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ac46:	9b00      	ldr	r3, [sp, #0]
 801ac48:	781a      	ldrb	r2, [r3, #0]
 801ac4a:	0993      	lsrs	r3, r2, #6
 801ac4c:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801ac50:	9202      	str	r2, [sp, #8]
 801ac52:	1e5a      	subs	r2, r3, #1
 801ac54:	2a02      	cmp	r2, #2
 801ac56:	d815      	bhi.n	801ac84 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x140>
 801ac58:	9a00      	ldr	r2, [sp, #0]
 801ac5a:	3201      	adds	r2, #1
 801ac5c:	9200      	str	r2, [sp, #0]
 801ac5e:	b29b      	uxth	r3, r3
 801ac60:	b1b4      	cbz	r4, 801ac90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x14c>
 801ac62:	429c      	cmp	r4, r3
 801ac64:	bf95      	itete	ls
 801ac66:	1b1c      	subls	r4, r3, r4
 801ac68:	1ae4      	subhi	r4, r4, r3
 801ac6a:	fa1f fa84 	uxthls.w	sl, r4
 801ac6e:	b2a4      	uxthhi	r4, r4
 801ac70:	bf87      	ittee	hi
 801ac72:	4671      	movhi	r1, lr
 801ac74:	f04f 0a00 	movhi.w	sl, #0
 801ac78:	fa1f f188 	uxthls.w	r1, r8
 801ac7c:	2400      	movls	r4, #0
 801ac7e:	4653      	mov	r3, sl
 801ac80:	468e      	mov	lr, r1
 801ac82:	e7db      	b.n	801ac3c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xf8>
 801ac84:	9a00      	ldr	r2, [sp, #0]
 801ac86:	9b00      	ldr	r3, [sp, #0]
 801ac88:	3202      	adds	r2, #2
 801ac8a:	785b      	ldrb	r3, [r3, #1]
 801ac8c:	9200      	str	r2, [sp, #0]
 801ac8e:	e7e7      	b.n	801ac60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x11c>
 801ac90:	2202      	movs	r2, #2
 801ac92:	4615      	mov	r5, r2
 801ac94:	9907      	ldr	r1, [sp, #28]
 801ac96:	9a02      	ldr	r2, [sp, #8]
 801ac98:	fb15 1202 	smlabb	r2, r5, r2, r1
 801ac9c:	9905      	ldr	r1, [sp, #20]
 801ac9e:	4573      	cmp	r3, lr
 801aca0:	f831 c002 	ldrh.w	ip, [r1, r2]
 801aca4:	9a01      	ldr	r2, [sp, #4]
 801aca6:	bf2b      	itete	cs
 801aca8:	eba3 0a0e 	subcs.w	sl, r3, lr
 801acac:	ebae 0103 	subcc.w	r1, lr, r3
 801acb0:	46f1      	movcs	r9, lr
 801acb2:	4699      	movcc	r9, r3
 801acb4:	bf27      	ittee	cs
 801acb6:	fa1f fa8a 	uxthcs.w	sl, sl
 801acba:	4621      	movcs	r1, r4
 801acbc:	b289      	uxthcc	r1, r1
 801acbe:	46a2      	movcc	sl, r4
 801acc0:	2aff      	cmp	r2, #255	@ 0xff
 801acc2:	ea4f 0949 	mov.w	r9, r9, lsl #1
 801acc6:	d105      	bne.n	801acd4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801acc8:	4481      	add	r9, r0
 801acca:	4581      	cmp	r9, r0
 801accc:	d045      	beq.n	801ad5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801acce:	f820 cb02 	strh.w	ip, [r0], #2
 801acd2:	e7fa      	b.n	801acca <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 801acd4:	9d03      	ldr	r5, [sp, #12]
 801acd6:	ea4f 222c 	mov.w	r2, ip, asr #8
 801acda:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801acde:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801ace2:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801ace6:	436a      	muls	r2, r5
 801ace8:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801acec:	fa5f fc8c 	uxtb.w	ip, ip
 801acf0:	9208      	str	r2, [sp, #32]
 801acf2:	fb0b fb05 	mul.w	fp, fp, r5
 801acf6:	fb0c fc05 	mul.w	ip, ip, r5
 801acfa:	4481      	add	r9, r0
 801acfc:	4581      	cmp	r9, r0
 801acfe:	d02c      	beq.n	801ad5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x216>
 801ad00:	8802      	ldrh	r2, [r0, #0]
 801ad02:	9d04      	ldr	r5, [sp, #16]
 801ad04:	9f04      	ldr	r7, [sp, #16]
 801ad06:	1216      	asrs	r6, r2, #8
 801ad08:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ad0c:	fb16 f605 	smulbb	r6, r6, r5
 801ad10:	9d08      	ldr	r5, [sp, #32]
 801ad12:	442e      	add	r6, r5
 801ad14:	10d5      	asrs	r5, r2, #3
 801ad16:	00d2      	lsls	r2, r2, #3
 801ad18:	b2d2      	uxtb	r2, r2
 801ad1a:	fb12 f207 	smulbb	r2, r2, r7
 801ad1e:	b2b6      	uxth	r6, r6
 801ad20:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801ad24:	4462      	add	r2, ip
 801ad26:	fb15 f507 	smulbb	r5, r5, r7
 801ad2a:	b292      	uxth	r2, r2
 801ad2c:	1c77      	adds	r7, r6, #1
 801ad2e:	eb07 2616 	add.w	r6, r7, r6, lsr #8
 801ad32:	1c57      	adds	r7, r2, #1
 801ad34:	445d      	add	r5, fp
 801ad36:	eb07 2212 	add.w	r2, r7, r2, lsr #8
 801ad3a:	b2ad      	uxth	r5, r5
 801ad3c:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ad40:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ad44:	4316      	orrs	r6, r2
 801ad46:	1c6a      	adds	r2, r5, #1
 801ad48:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ad4c:	096d      	lsrs	r5, r5, #5
 801ad4e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ad52:	432e      	orrs	r6, r5
 801ad54:	f820 6b02 	strh.w	r6, [r0], #2
 801ad58:	e7d0      	b.n	801acfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1b8>
 801ad5a:	4573      	cmp	r3, lr
 801ad5c:	d38f      	bcc.n	801ac7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801ad5e:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801ad62:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ad64:	fa1f f188 	uxth.w	r1, r8
 801ad68:	1a64      	subs	r4, r4, r1
 801ad6a:	881b      	ldrh	r3, [r3, #0]
 801ad6c:	b2a4      	uxth	r4, r4
 801ad6e:	2c00      	cmp	r4, #0
 801ad70:	eba3 0308 	sub.w	r3, r3, r8
 801ad74:	bf18      	it	ne
 801ad76:	2100      	movne	r1, #0
 801ad78:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ad7c:	e77f      	b.n	801ac7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13a>
 801ad7e:	4b04      	ldr	r3, [pc, #16]	@ (801ad90 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>)
 801ad80:	6818      	ldr	r0, [r3, #0]
 801ad82:	6803      	ldr	r3, [r0, #0]
 801ad84:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ad86:	4798      	blx	r3
 801ad88:	b00f      	add	sp, #60	@ 0x3c
 801ad8a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ad8e:	bf00      	nop
 801ad90:	20002f54 	.word	0x20002f54
 801ad94:	20002f4e 	.word	0x20002f4e

0801ad98 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 801ad98:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ad9c:	b09f      	sub	sp, #124	@ 0x7c
 801ad9e:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801ada2:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801ada6:	9209      	str	r2, [sp, #36]	@ 0x24
 801ada8:	461d      	mov	r5, r3
 801adaa:	4604      	mov	r4, r0
 801adac:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801adae:	2a00      	cmp	r2, #0
 801adb0:	f000 81eb 	beq.w	801b18a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f2>
 801adb4:	6828      	ldr	r0, [r5, #0]
 801adb6:	6869      	ldr	r1, [r5, #4]
 801adb8:	aa1a      	add	r2, sp, #104	@ 0x68
 801adba:	c203      	stmia	r2!, {r0, r1}
 801adbc:	6818      	ldr	r0, [r3, #0]
 801adbe:	6859      	ldr	r1, [r3, #4]
 801adc0:	aa1c      	add	r2, sp, #112	@ 0x70
 801adc2:	c203      	stmia	r2!, {r0, r1}
 801adc4:	a81a      	add	r0, sp, #104	@ 0x68
 801adc6:	f7f9 f8ad 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801adca:	4629      	mov	r1, r5
 801adcc:	a81c      	add	r0, sp, #112	@ 0x70
 801adce:	f7f9 f8d1 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801add2:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801add6:	f9bd 806e 	ldrsh.w	r8, [sp, #110]	@ 0x6e
 801adda:	f9bd 6076 	ldrsh.w	r6, [sp, #118]	@ 0x76
 801adde:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801ade2:	bfd7      	itett	le
 801ade4:	b29a      	uxthle	r2, r3
 801ade6:	2201      	movgt	r2, #1
 801ade8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801adec:	fb91 f2f2 	sdivle	r2, r1, r2
 801adf0:	9202      	str	r2, [sp, #8]
 801adf2:	9802      	ldr	r0, [sp, #8]
 801adf4:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801adf8:	fb92 f0f0 	sdiv	r0, r2, r0
 801adfc:	b280      	uxth	r0, r0
 801adfe:	9010      	str	r0, [sp, #64]	@ 0x40
 801ae00:	9902      	ldr	r1, [sp, #8]
 801ae02:	9802      	ldr	r0, [sp, #8]
 801ae04:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801ae06:	4488      	add	r8, r1
 801ae08:	fb05 2510 	mls	r5, r5, r0, r2
 801ae0c:	fb15 f503 	smulbb	r5, r5, r3
 801ae10:	f108 38ff 	add.w	r8, r8, #4294967295
 801ae14:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801ae18:	fb98 f8f1 	sdiv	r8, r8, r1
 801ae1c:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801ae20:	440d      	add	r5, r1
 801ae22:	4419      	add	r1, r3
 801ae24:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801ae28:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801ae2c:	441a      	add	r2, r3
 801ae2e:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801ae32:	9304      	str	r3, [sp, #16]
 801ae34:	4b95      	ldr	r3, [pc, #596]	@ (801b08c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801ae36:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801ae3a:	6818      	ldr	r0, [r3, #0]
 801ae3c:	6803      	ldr	r3, [r0, #0]
 801ae3e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ae40:	4798      	blx	r3
 801ae42:	4b93      	ldr	r3, [pc, #588]	@ (801b090 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801ae44:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801ae48:	881a      	ldrh	r2, [r3, #0]
 801ae4a:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801ae4e:	9318      	str	r3, [sp, #96]	@ 0x60
 801ae50:	fb02 7101 	mla	r1, r2, r1, r7
 801ae54:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801ae58:	4356      	muls	r6, r2
 801ae5a:	eb00 0246 	add.w	r2, r0, r6, lsl #1
 801ae5e:	f108 0801 	add.w	r8, r8, #1
 801ae62:	920a      	str	r2, [sp, #40]	@ 0x28
 801ae64:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801ae66:	f8bd 3024 	ldrh.w	r3, [sp, #36]	@ 0x24
 801ae6a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ae6c:	fa1f f888 	uxth.w	r8, r8
 801ae70:	eb02 0888 	add.w	r8, r2, r8, lsl #2
 801ae74:	f108 0204 	add.w	r2, r8, #4
 801ae78:	9211      	str	r2, [sp, #68]	@ 0x44
 801ae7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801ae7c:	4b85      	ldr	r3, [pc, #532]	@ (801b094 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801ae7e:	f1c2 02ff 	rsb	r2, r2, #255	@ 0xff
 801ae82:	b2ad      	uxth	r5, r5
 801ae84:	9215      	str	r2, [sp, #84]	@ 0x54
 801ae86:	2d00      	cmp	r5, #0
 801ae88:	9a04      	ldr	r2, [sp, #16]
 801ae8a:	f04f 0100 	mov.w	r1, #0
 801ae8e:	bf18      	it	ne
 801ae90:	2200      	movne	r2, #0
 801ae92:	1b1b      	subs	r3, r3, r4
 801ae94:	b292      	uxth	r2, r2
 801ae96:	910d      	str	r1, [sp, #52]	@ 0x34
 801ae98:	9319      	str	r3, [sp, #100]	@ 0x64
 801ae9a:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801ae9c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ae9e:	fa11 f383 	uxtah	r3, r1, r3
 801aea2:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801aea4:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801aea8:	3304      	adds	r3, #4
 801aeaa:	9306      	str	r3, [sp, #24]
 801aeac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801aeae:	4283      	cmp	r3, r0
 801aeb0:	f240 8166 	bls.w	801b180 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3e8>
 801aeb4:	9902      	ldr	r1, [sp, #8]
 801aeb6:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801aeba:	fbb5 f3f3 	udiv	r3, r5, r3
 801aebe:	1acb      	subs	r3, r1, r3
 801aec0:	b29b      	uxth	r3, r3
 801aec2:	9316      	str	r3, [sp, #88]	@ 0x58
 801aec4:	9b06      	ldr	r3, [sp, #24]
 801aec6:	9e06      	ldr	r6, [sp, #24]
 801aec8:	7859      	ldrb	r1, [r3, #1]
 801aeca:	789b      	ldrb	r3, [r3, #2]
 801aecc:	7836      	ldrb	r6, [r6, #0]
 801aece:	9612      	str	r6, [sp, #72]	@ 0x48
 801aed0:	021b      	lsls	r3, r3, #8
 801aed2:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 801aed6:	9906      	ldr	r1, [sp, #24]
 801aed8:	78c9      	ldrb	r1, [r1, #3]
 801aeda:	430b      	orrs	r3, r1
 801aedc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 801aede:	3601      	adds	r6, #1
 801aee0:	4419      	add	r1, r3
 801aee2:	9605      	str	r6, [sp, #20]
 801aee4:	1c4e      	adds	r6, r1, #1
 801aee6:	9603      	str	r6, [sp, #12]
 801aee8:	7849      	ldrb	r1, [r1, #1]
 801aeea:	9e13      	ldr	r6, [sp, #76]	@ 0x4c
 801aeec:	0209      	lsls	r1, r1, #8
 801aeee:	5cf3      	ldrb	r3, [r6, r3]
 801aef0:	f401 71ff 	and.w	r1, r1, #510	@ 0x1fe
 801aef4:	4319      	orrs	r1, r3
 801aef6:	b28b      	uxth	r3, r1
 801aef8:	930c      	str	r3, [sp, #48]	@ 0x30
 801aefa:	2300      	movs	r3, #0
 801aefc:	f04f 0a01 	mov.w	sl, #1
 801af00:	9307      	str	r3, [sp, #28]
 801af02:	469c      	mov	ip, r3
 801af04:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801af08:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801af0c:	46d3      	mov	fp, sl
 801af0e:	4657      	mov	r7, sl
 801af10:	930e      	str	r3, [sp, #56]	@ 0x38
 801af12:	2d00      	cmp	r5, #0
 801af14:	d07e      	beq.n	801b014 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x27c>
 801af16:	42af      	cmp	r7, r5
 801af18:	d26e      	bcs.n	801aff8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x260>
 801af1a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801af1c:	9201      	str	r2, [sp, #4]
 801af1e:	1bed      	subs	r5, r5, r7
 801af20:	4283      	cmp	r3, r0
 801af22:	b2ad      	uxth	r5, r5
 801af24:	d802      	bhi.n	801af2c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x194>
 801af26:	e073      	b.n	801b010 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x278>
 801af28:	2b00      	cmp	r3, #0
 801af2a:	d15f      	bne.n	801afec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x254>
 801af2c:	9b03      	ldr	r3, [sp, #12]
 801af2e:	785b      	ldrb	r3, [r3, #1]
 801af30:	f1cb 0207 	rsb	r2, fp, #7
 801af34:	4093      	lsls	r3, r2
 801af36:	005b      	lsls	r3, r3, #1
 801af38:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801af3c:	9b03      	ldr	r3, [sp, #12]
 801af3e:	781b      	ldrb	r3, [r3, #0]
 801af40:	fa43 f30b 	asr.w	r3, r3, fp
 801af44:	b2db      	uxtb	r3, r3
 801af46:	4313      	orrs	r3, r2
 801af48:	f10b 0201 	add.w	r2, fp, #1
 801af4c:	fa5f fb82 	uxtb.w	fp, r2
 801af50:	9a03      	ldr	r2, [sp, #12]
 801af52:	f1bb 0f08 	cmp.w	fp, #8
 801af56:	bf15      	itete	ne
 801af58:	3201      	addne	r2, #1
 801af5a:	3202      	addeq	r2, #2
 801af5c:	9203      	strne	r2, [sp, #12]
 801af5e:	9203      	streq	r2, [sp, #12]
 801af60:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801af62:	b29f      	uxth	r7, r3
 801af64:	bf08      	it	eq
 801af66:	f04f 0b00 	moveq.w	fp, #0
 801af6a:	42ba      	cmp	r2, r7
 801af6c:	d309      	bcc.n	801af82 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1ea>
 801af6e:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801af72:	2301      	movs	r3, #1
 801af74:	9a05      	ldr	r2, [sp, #20]
 801af76:	f5b2 7f00 	cmp.w	r2, #512	@ 0x200
 801af7a:	d30e      	bcc.n	801af9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x202>
 801af7c:	469a      	mov	sl, r3
 801af7e:	2600      	movs	r6, #0
 801af80:	e035      	b.n	801afee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x256>
 801af82:	9b05      	ldr	r3, [sp, #20]
 801af84:	429f      	cmp	r7, r3
 801af86:	d318      	bcc.n	801afba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x222>
 801af88:	eb04 030a 	add.w	r3, r4, sl
 801af8c:	f894 2804 	ldrb.w	r2, [r4, #2052]	@ 0x804
 801af90:	f883 2804 	strb.w	r2, [r3, #2052]	@ 0x804
 801af94:	f10a 0301 	add.w	r3, sl, #1
 801af98:	b29b      	uxth	r3, r3
 801af9a:	9a05      	ldr	r2, [sp, #20]
 801af9c:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801afa0:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801afa2:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801afa6:	7116      	strb	r6, [r2, #4]
 801afa8:	f10a 0601 	add.w	r6, sl, #1
 801afac:	80d1      	strh	r1, [r2, #6]
 801afae:	7156      	strb	r6, [r2, #5]
 801afb0:	9a05      	ldr	r2, [sp, #20]
 801afb2:	3201      	adds	r2, #1
 801afb4:	b292      	uxth	r2, r2
 801afb6:	9205      	str	r2, [sp, #20]
 801afb8:	e7e0      	b.n	801af7c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e4>
 801afba:	eb04 0387 	add.w	r3, r4, r7, lsl #2
 801afbe:	463a      	mov	r2, r7
 801afc0:	795b      	ldrb	r3, [r3, #5]
 801afc2:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801afc6:	4426      	add	r6, r4
 801afc8:	9919      	ldr	r1, [sp, #100]	@ 0x64
 801afca:	eb01 0c06 	add.w	ip, r1, r6
 801afce:	f1bc 0f00 	cmp.w	ip, #0
 801afd2:	dd07      	ble.n	801afe4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x24c>
 801afd4:	eb04 0282 	add.w	r2, r4, r2, lsl #2
 801afd8:	f892 c004 	ldrb.w	ip, [r2, #4]
 801afdc:	f806 cd01 	strb.w	ip, [r6, #-1]!
 801afe0:	88d2      	ldrh	r2, [r2, #6]
 801afe2:	e7f1      	b.n	801afc8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x230>
 801afe4:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801afe8:	b29b      	uxth	r3, r3
 801afea:	e7c3      	b.n	801af74 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1dc>
 801afec:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801afee:	970c      	str	r7, [sp, #48]	@ 0x30
 801aff0:	9a01      	ldr	r2, [sp, #4]
 801aff2:	46b4      	mov	ip, r6
 801aff4:	461f      	mov	r7, r3
 801aff6:	e78c      	b.n	801af12 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x17a>
 801aff8:	1b7b      	subs	r3, r7, r5
 801affa:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801affe:	9201      	str	r2, [sp, #4]
 801b000:	eb0c 0605 	add.w	r6, ip, r5
 801b004:	b29b      	uxth	r3, r3
 801b006:	b2b6      	uxth	r6, r6
 801b008:	2500      	movs	r5, #0
 801b00a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801b00c:	4282      	cmp	r2, r0
 801b00e:	d88b      	bhi.n	801af28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x190>
 801b010:	9a01      	ldr	r2, [sp, #4]
 801b012:	e74b      	b.n	801aeac <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x114>
 801b014:	4297      	cmp	r7, r2
 801b016:	d332      	bcc.n	801b07e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2e6>
 801b018:	1abb      	subs	r3, r7, r2
 801b01a:	b29b      	uxth	r3, r3
 801b01c:	9208      	str	r2, [sp, #32]
 801b01e:	9501      	str	r5, [sp, #4]
 801b020:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801b022:	29ff      	cmp	r1, #255	@ 0xff
 801b024:	9908      	ldr	r1, [sp, #32]
 801b026:	eb0c 0601 	add.w	r6, ip, r1
 801b02a:	d135      	bne.n	801b098 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x300>
 801b02c:	f1a0 0e02 	sub.w	lr, r0, #2
 801b030:	b2b6      	uxth	r6, r6
 801b032:	45b4      	cmp	ip, r6
 801b034:	f040 808c 	bne.w	801b150 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3b8>
 801b038:	9908      	ldr	r1, [sp, #32]
 801b03a:	4297      	cmp	r7, r2
 801b03c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b040:	d3e2      	bcc.n	801b008 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x270>
 801b042:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801b044:	9904      	ldr	r1, [sp, #16]
 801b046:	8812      	ldrh	r2, [r2, #0]
 801b048:	1a52      	subs	r2, r2, r1
 801b04a:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801b04e:	9a07      	ldr	r2, [sp, #28]
 801b050:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801b052:	3201      	adds	r2, #1
 801b054:	428a      	cmp	r2, r1
 801b056:	9207      	str	r2, [sp, #28]
 801b058:	f040 8087 	bne.w	801b16a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3d2>
 801b05c:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801b060:	f8bd 7068 	ldrh.w	r7, [sp, #104]	@ 0x68
 801b064:	9b04      	ldr	r3, [sp, #16]
 801b066:	1bed      	subs	r5, r5, r7
 801b068:	b2ad      	uxth	r5, r5
 801b06a:	2d00      	cmp	r5, #0
 801b06c:	bf08      	it	eq
 801b06e:	461a      	moveq	r2, r3
 801b070:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b072:	bf18      	it	ne
 801b074:	2200      	movne	r2, #0
 801b076:	3301      	adds	r3, #1
 801b078:	930d      	str	r3, [sp, #52]	@ 0x34
 801b07a:	b292      	uxth	r2, r2
 801b07c:	e70d      	b.n	801ae9a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x102>
 801b07e:	1bd1      	subs	r1, r2, r7
 801b080:	b28b      	uxth	r3, r1
 801b082:	9301      	str	r3, [sp, #4]
 801b084:	9708      	str	r7, [sp, #32]
 801b086:	462b      	mov	r3, r5
 801b088:	e7ca      	b.n	801b020 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x288>
 801b08a:	bf00      	nop
 801b08c:	20002f54 	.word	0x20002f54
 801b090:	20002f4e 	.word	0x20002f4e
 801b094:	fffff7fb 	.word	0xfffff7fb
 801b098:	b2b6      	uxth	r6, r6
 801b09a:	900b      	str	r0, [sp, #44]	@ 0x2c
 801b09c:	45b4      	cmp	ip, r6
 801b09e:	d0cb      	beq.n	801b038 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x2a0>
 801b0a0:	f10c 0101 	add.w	r1, ip, #1
 801b0a4:	44a4      	add	ip, r4
 801b0a6:	9117      	str	r1, [sp, #92]	@ 0x5c
 801b0a8:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b0ac:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b0ae:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b0b2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b0b4:	f8b1 c000 	ldrh.w	ip, [r1]
 801b0b8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b0ba:	ea4f 2e2c 	mov.w	lr, ip, asr #8
 801b0be:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 801b0c2:	fb1e fe01 	smulbb	lr, lr, r1
 801b0c6:	ea4f 2825 	mov.w	r8, r5, asr #8
 801b0ca:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b0cc:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801b0d0:	fb08 e801 	mla	r8, r8, r1, lr
 801b0d4:	ea4f 09ec 	mov.w	r9, ip, asr #3
 801b0d8:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b0da:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801b0de:	fb19 f901 	smulbb	r9, r9, r1
 801b0e2:	ea4f 0ee5 	mov.w	lr, r5, asr #3
 801b0e6:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b0e8:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b0ec:	fb0e 9e01 	mla	lr, lr, r1, r9
 801b0f0:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801b0f4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801b0f6:	fa5f fc8c 	uxtb.w	ip, ip
 801b0fa:	fb1c fc01 	smulbb	ip, ip, r1
 801b0fe:	00ed      	lsls	r5, r5, #3
 801b100:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 801b102:	b2ed      	uxtb	r5, r5
 801b104:	fb05 c501 	mla	r5, r5, r1, ip
 801b108:	fa1f f888 	uxth.w	r8, r8
 801b10c:	fa1f fe8e 	uxth.w	lr, lr
 801b110:	b2ad      	uxth	r5, r5
 801b112:	f108 0c01 	add.w	ip, r8, #1
 801b116:	eb0c 2818 	add.w	r8, ip, r8, lsr #8
 801b11a:	f10e 0901 	add.w	r9, lr, #1
 801b11e:	f105 0c01 	add.w	ip, r5, #1
 801b122:	eb0c 2c15 	add.w	ip, ip, r5, lsr #8
 801b126:	eb09 291e 	add.w	r9, r9, lr, lsr #8
 801b12a:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801b12e:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801b132:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801b136:	ea4c 0808 	orr.w	r8, ip, r8
 801b13a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 801b13c:	f8bd c05c 	ldrh.w	ip, [sp, #92]	@ 0x5c
 801b140:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801b144:	ea48 0809 	orr.w	r8, r8, r9
 801b148:	f821 8b02 	strh.w	r8, [r1], #2
 801b14c:	910b      	str	r1, [sp, #44]	@ 0x2c
 801b14e:	e7a5      	b.n	801b09c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x304>
 801b150:	f10c 0801 	add.w	r8, ip, #1
 801b154:	44a4      	add	ip, r4
 801b156:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801b158:	f89c 5804 	ldrb.w	r5, [ip, #2052]	@ 0x804
 801b15c:	f831 5015 	ldrh.w	r5, [r1, r5, lsl #1]
 801b160:	f82e 5f02 	strh.w	r5, [lr, #2]!
 801b164:	fa1f fc88 	uxth.w	ip, r8
 801b168:	e763      	b.n	801b032 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x29a>
 801b16a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801b16e:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801b172:	1aad      	subs	r5, r5, r2
 801b174:	b2ad      	uxth	r5, r5
 801b176:	2d00      	cmp	r5, #0
 801b178:	bf18      	it	ne
 801b17a:	2200      	movne	r2, #0
 801b17c:	9201      	str	r2, [sp, #4]
 801b17e:	e744      	b.n	801b00a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x272>
 801b180:	4b03      	ldr	r3, [pc, #12]	@ (801b190 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x3f8>)
 801b182:	6818      	ldr	r0, [r3, #0]
 801b184:	6803      	ldr	r3, [r0, #0]
 801b186:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b188:	4798      	blx	r3
 801b18a:	b01f      	add	sp, #124	@ 0x7c
 801b18c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b190:	20002f54 	.word	0x20002f54

0801b194 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h>:
 801b194:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b198:	b093      	sub	sp, #76	@ 0x4c
 801b19a:	4616      	mov	r6, r2
 801b19c:	f89d 2070 	ldrb.w	r2, [sp, #112]	@ 0x70
 801b1a0:	9003      	str	r0, [sp, #12]
 801b1a2:	460d      	mov	r5, r1
 801b1a4:	9201      	str	r2, [sp, #4]
 801b1a6:	2a00      	cmp	r2, #0
 801b1a8:	f000 8304 	beq.w	801b7b4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x620>
 801b1ac:	6830      	ldr	r0, [r6, #0]
 801b1ae:	6871      	ldr	r1, [r6, #4]
 801b1b0:	ac0e      	add	r4, sp, #56	@ 0x38
 801b1b2:	c403      	stmia	r4!, {r0, r1}
 801b1b4:	6818      	ldr	r0, [r3, #0]
 801b1b6:	6859      	ldr	r1, [r3, #4]
 801b1b8:	ac10      	add	r4, sp, #64	@ 0x40
 801b1ba:	c403      	stmia	r4!, {r0, r1}
 801b1bc:	a80e      	add	r0, sp, #56	@ 0x38
 801b1be:	f7f8 feb1 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b1c2:	4631      	mov	r1, r6
 801b1c4:	a810      	add	r0, sp, #64	@ 0x40
 801b1c6:	f7f8 fed5 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b1ca:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801b1ce:	f5b2 6f80 	cmp.w	r2, #1024	@ 0x400
 801b1d2:	bfd7      	itett	le
 801b1d4:	b293      	uxthle	r3, r2
 801b1d6:	2301      	movgt	r3, #1
 801b1d8:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801b1dc:	fb91 f3f3 	sdivle	r3, r1, r3
 801b1e0:	9304      	str	r3, [sp, #16]
 801b1e2:	f105 0308 	add.w	r3, r5, #8
 801b1e6:	9904      	ldr	r1, [sp, #16]
 801b1e8:	9308      	str	r3, [sp, #32]
 801b1ea:	f9bd 303e 	ldrsh.w	r3, [sp, #62]	@ 0x3e
 801b1ee:	440b      	add	r3, r1
 801b1f0:	3b01      	subs	r3, #1
 801b1f2:	fb93 f3f1 	sdiv	r3, r3, r1
 801b1f6:	9908      	ldr	r1, [sp, #32]
 801b1f8:	3b01      	subs	r3, #1
 801b1fa:	b29b      	uxth	r3, r3
 801b1fc:	eb01 0383 	add.w	r3, r1, r3, lsl #2
 801b200:	9309      	str	r3, [sp, #36]	@ 0x24
 801b202:	9904      	ldr	r1, [sp, #16]
 801b204:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801b208:	fb93 f0f1 	sdiv	r0, r3, r1
 801b20c:	b284      	uxth	r4, r0
 801b20e:	9405      	str	r4, [sp, #20]
 801b210:	e9dd 4504 	ldrd	r4, r5, [sp, #16]
 801b214:	f8bd 1040 	ldrh.w	r1, [sp, #64]	@ 0x40
 801b218:	fb05 3914 	mls	r9, r5, r4, r3
 801b21c:	fb19 f902 	smulbb	r9, r9, r2
 801b220:	4489      	add	r9, r1
 801b222:	fa1f f989 	uxth.w	r9, r9
 801b226:	2d00      	cmp	r5, #0
 801b228:	d05d      	beq.n	801b2e6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x152>
 801b22a:	1e6a      	subs	r2, r5, #1
 801b22c:	9808      	ldr	r0, [sp, #32]
 801b22e:	f850 a022 	ldr.w	sl, [r0, r2, lsl #2]
 801b232:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801b234:	fa9a fa8a 	rev.w	sl, sl
 801b238:	4492      	add	sl, r2
 801b23a:	f8bd 2038 	ldrh.w	r2, [sp, #56]	@ 0x38
 801b23e:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801b242:	4411      	add	r1, r2
 801b244:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801b248:	f8ad 1040 	strh.w	r1, [sp, #64]	@ 0x40
 801b24c:	4413      	add	r3, r2
 801b24e:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801b252:	f9bd 3044 	ldrsh.w	r3, [sp, #68]	@ 0x44
 801b256:	9302      	str	r3, [sp, #8]
 801b258:	4bcb      	ldr	r3, [pc, #812]	@ (801b588 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f4>)
 801b25a:	6818      	ldr	r0, [r3, #0]
 801b25c:	6803      	ldr	r3, [r0, #0]
 801b25e:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b260:	4798      	blx	r3
 801b262:	4bca      	ldr	r3, [pc, #808]	@ (801b58c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3f8>)
 801b264:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801b268:	881b      	ldrh	r3, [r3, #0]
 801b26a:	f9bd 4042 	ldrsh.w	r4, [sp, #66]	@ 0x42
 801b26e:	fb03 2404 	mla	r4, r3, r4, r2
 801b272:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 801b276:	436b      	muls	r3, r5
 801b278:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b27c:	930d      	str	r3, [sp, #52]	@ 0x34
 801b27e:	f9bd 303c 	ldrsh.w	r3, [sp, #60]	@ 0x3c
 801b282:	fb99 f3f3 	sdiv	r3, r9, r3
 801b286:	9306      	str	r3, [sp, #24]
 801b288:	9b01      	ldr	r3, [sp, #4]
 801b28a:	43db      	mvns	r3, r3
 801b28c:	b2db      	uxtb	r3, r3
 801b28e:	930a      	str	r3, [sp, #40]	@ 0x28
 801b290:	9b03      	ldr	r3, [sp, #12]
 801b292:	3304      	adds	r3, #4
 801b294:	4618      	mov	r0, r3
 801b296:	2280      	movs	r2, #128	@ 0x80
 801b298:	2100      	movs	r1, #0
 801b29a:	930b      	str	r3, [sp, #44]	@ 0x2c
 801b29c:	f00a ffdf 	bl	802625e <memset>
 801b2a0:	4bbb      	ldr	r3, [pc, #748]	@ (801b590 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3fc>)
 801b2a2:	9300      	str	r3, [sp, #0]
 801b2a4:	2300      	movs	r3, #0
 801b2a6:	f04f 0600 	mov.w	r6, #0
 801b2aa:	9307      	str	r3, [sp, #28]
 801b2ac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801b2ae:	42a3      	cmp	r3, r4
 801b2b0:	f240 827b 	bls.w	801b7aa <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x616>
 801b2b4:	f04f 0e07 	mov.w	lr, #7
 801b2b8:	f1b9 0f00 	cmp.w	r9, #0
 801b2bc:	f000 8159 	beq.w	801b572 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3de>
 801b2c0:	f89a 5000 	ldrb.w	r5, [sl]
 801b2c4:	b2ed      	uxtb	r5, r5
 801b2c6:	11aa      	asrs	r2, r5, #6
 801b2c8:	f10a 0701 	add.w	r7, sl, #1
 801b2cc:	d10e      	bne.n	801b2ec <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x158>
 801b2ce:	9b03      	ldr	r3, [sp, #12]
 801b2d0:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b2d4:	eb03 0545 	add.w	r5, r3, r5, lsl #1
 801b2d8:	88ae      	ldrh	r6, [r5, #4]
 801b2da:	f109 39ff 	add.w	r9, r9, #4294967295
 801b2de:	fa1f f989 	uxth.w	r9, r9
 801b2e2:	46ba      	mov	sl, r7
 801b2e4:	e7e8      	b.n	801b2b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x124>
 801b2e6:	f8dd a024 	ldr.w	sl, [sp, #36]	@ 0x24
 801b2ea:	e7a6      	b.n	801b23a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0xa6>
 801b2ec:	2a01      	cmp	r2, #1
 801b2ee:	d129      	bne.n	801b344 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1b0>
 801b2f0:	f3c6 0304 	ubfx	r3, r6, #0, #5
 801b2f4:	f005 0203 	and.w	r2, r5, #3
 801b2f8:	3b02      	subs	r3, #2
 801b2fa:	4413      	add	r3, r2
 801b2fc:	f003 031f 	and.w	r3, r3, #31
 801b300:	f3c5 0281 	ubfx	r2, r5, #2, #2
 801b304:	f363 0604 	bfi	r6, r3, #0, #5
 801b308:	3a02      	subs	r2, #2
 801b30a:	eb02 1256 	add.w	r2, r2, r6, lsr #5
 801b30e:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b312:	f3c5 1501 	ubfx	r5, r5, #4, #2
 801b316:	f362 164a 	bfi	r6, r2, #5, #6
 801b31a:	3d02      	subs	r5, #2
 801b31c:	eb05 25d6 	add.w	r5, r5, r6, lsr #11
 801b320:	f005 051f 	and.w	r5, r5, #31
 801b324:	eb02 0282 	add.w	r2, r2, r2, lsl #2
 801b328:	2103      	movs	r1, #3
 801b32a:	fb11 2205 	smlabb	r2, r1, r5, r2
 801b32e:	fb1e 2303 	smlabb	r3, lr, r3, r2
 801b332:	9a03      	ldr	r2, [sp, #12]
 801b334:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b338:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b33c:	f365 26cf 	bfi	r6, r5, #11, #5
 801b340:	809e      	strh	r6, [r3, #4]
 801b342:	e7ca      	b.n	801b2da <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x146>
 801b344:	f005 053f 	and.w	r5, r5, #63	@ 0x3f
 801b348:	2a02      	cmp	r2, #2
 801b34a:	b2ab      	uxth	r3, r5
 801b34c:	d136      	bne.n	801b3bc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x228>
 801b34e:	2101      	movs	r1, #1
 801b350:	fb12 1205 	smlabb	r2, r2, r5, r1
 801b354:	4492      	add	sl, r2
 801b356:	463a      	mov	r2, r7
 801b358:	4552      	cmp	r2, sl
 801b35a:	d01c      	beq.n	801b396 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x202>
 801b35c:	4694      	mov	ip, r2
 801b35e:	f04f 0b03 	mov.w	fp, #3
 801b362:	f81c 1b02 	ldrb.w	r1, [ip], #2
 801b366:	7852      	ldrb	r2, [r2, #1]
 801b368:	ea41 2102 	orr.w	r1, r1, r2, lsl #8
 801b36c:	f3c1 1045 	ubfx	r0, r1, #5, #6
 801b370:	ea4f 28d1 	mov.w	r8, r1, lsr #11
 801b374:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b378:	f001 021f 	and.w	r2, r1, #31
 801b37c:	fb1b 0008 	smlabb	r0, fp, r8, r0
 801b380:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b384:	9a03      	ldr	r2, [sp, #12]
 801b386:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b38a:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b38e:	460e      	mov	r6, r1
 801b390:	8081      	strh	r1, [r0, #4]
 801b392:	4662      	mov	r2, ip
 801b394:	e7e0      	b.n	801b358 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x1c4>
 801b396:	4599      	cmp	r9, r3
 801b398:	d20b      	bcs.n	801b3b2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21e>
 801b39a:	eba5 0509 	sub.w	r5, r5, r9
 801b39e:	2d00      	cmp	r5, #0
 801b3a0:	eb07 0749 	add.w	r7, r7, r9, lsl #1
 801b3a4:	f300 8209 	bgt.w	801b7ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x626>
 801b3a8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b3ac:	2301      	movs	r3, #1
 801b3ae:	9307      	str	r3, [sp, #28]
 801b3b0:	e00c      	b.n	801b3cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b3b2:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 801b3b6:	eba9 0903 	sub.w	r9, r9, r3
 801b3ba:	e790      	b.n	801b2de <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x14a>
 801b3bc:	4599      	cmp	r9, r3
 801b3be:	d2fa      	bcs.n	801b3b6 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x222>
 801b3c0:	eba5 0509 	sub.w	r5, r5, r9
 801b3c4:	2d00      	cmp	r5, #0
 801b3c6:	dc1d      	bgt.n	801b404 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x270>
 801b3c8:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b3cc:	f04f 0b00 	mov.w	fp, #0
 801b3d0:	f1b8 0f00 	cmp.w	r8, #0
 801b3d4:	f340 81a1 	ble.w	801b71a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x586>
 801b3d8:	783b      	ldrb	r3, [r7, #0]
 801b3da:	b2db      	uxtb	r3, r3
 801b3dc:	119a      	asrs	r2, r3, #6
 801b3de:	f107 0a01 	add.w	sl, r7, #1
 801b3e2:	f040 80d7 	bne.w	801b594 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x400>
 801b3e6:	9a03      	ldr	r2, [sp, #12]
 801b3e8:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b3ec:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b3f0:	889e      	ldrh	r6, [r3, #4]
 801b3f2:	9b01      	ldr	r3, [sp, #4]
 801b3f4:	2bff      	cmp	r3, #255	@ 0xff
 801b3f6:	f040 81e9 	bne.w	801b7cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x638>
 801b3fa:	8026      	strh	r6, [r4, #0]
 801b3fc:	f108 38ff 	add.w	r8, r8, #4294967295
 801b400:	3402      	adds	r4, #2
 801b402:	e0be      	b.n	801b582 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b404:	9b02      	ldr	r3, [sp, #8]
 801b406:	9a02      	ldr	r2, [sp, #8]
 801b408:	42ab      	cmp	r3, r5
 801b40a:	bfa8      	it	ge
 801b40c:	462b      	movge	r3, r5
 801b40e:	eba2 0803 	sub.w	r8, r2, r3
 801b412:	9a07      	ldr	r2, [sp, #28]
 801b414:	1aed      	subs	r5, r5, r3
 801b416:	2a00      	cmp	r2, #0
 801b418:	d05a      	beq.n	801b4d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x33c>
 801b41a:	9a01      	ldr	r2, [sp, #4]
 801b41c:	2aff      	cmp	r2, #255	@ 0xff
 801b41e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b422:	d049      	beq.n	801b4b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b424:	f8bd e004 	ldrh.w	lr, [sp, #4]
 801b428:	f8bd 9028 	ldrh.w	r9, [sp, #40]	@ 0x28
 801b42c:	42a3      	cmp	r3, r4
 801b42e:	f240 80a5 	bls.w	801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b432:	46bc      	mov	ip, r7
 801b434:	8820      	ldrh	r0, [r4, #0]
 801b436:	f81c 2b02 	ldrb.w	r2, [ip], #2
 801b43a:	7879      	ldrb	r1, [r7, #1]
 801b43c:	ea42 2201 	orr.w	r2, r2, r1, lsl #8
 801b440:	b212      	sxth	r2, r2
 801b442:	b291      	uxth	r1, r2
 801b444:	ea4f 2a20 	mov.w	sl, r0, asr #8
 801b448:	120f      	asrs	r7, r1, #8
 801b44a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801b44e:	fb1a fa09 	smulbb	sl, sl, r9
 801b452:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801b456:	fb07 a70e 	mla	r7, r7, lr, sl
 801b45a:	ea4f 0ae0 	mov.w	sl, r0, asr #3
 801b45e:	00c0      	lsls	r0, r0, #3
 801b460:	10c9      	asrs	r1, r1, #3
 801b462:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801b466:	00d2      	lsls	r2, r2, #3
 801b468:	b2c0      	uxtb	r0, r0
 801b46a:	fb1a fa09 	smulbb	sl, sl, r9
 801b46e:	fb10 f009 	smulbb	r0, r0, r9
 801b472:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801b476:	b2d2      	uxtb	r2, r2
 801b478:	b2bf      	uxth	r7, r7
 801b47a:	fb01 a10e 	mla	r1, r1, lr, sl
 801b47e:	fb02 020e 	mla	r2, r2, lr, r0
 801b482:	b289      	uxth	r1, r1
 801b484:	b292      	uxth	r2, r2
 801b486:	1c78      	adds	r0, r7, #1
 801b488:	eb00 2717 	add.w	r7, r0, r7, lsr #8
 801b48c:	f101 0a01 	add.w	sl, r1, #1
 801b490:	1c50      	adds	r0, r2, #1
 801b492:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b496:	eb0a 2a11 	add.w	sl, sl, r1, lsr #8
 801b49a:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801b49e:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b4a2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801b4a6:	4307      	orrs	r7, r0
 801b4a8:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801b4ac:	ea47 070a 	orr.w	r7, r7, sl
 801b4b0:	f824 7b02 	strh.w	r7, [r4], #2
 801b4b4:	4667      	mov	r7, ip
 801b4b6:	e7b9      	b.n	801b42c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x298>
 801b4b8:	42a3      	cmp	r3, r4
 801b4ba:	d95f      	bls.n	801b57c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3e8>
 801b4bc:	463a      	mov	r2, r7
 801b4be:	f812 1b02 	ldrb.w	r1, [r2], #2
 801b4c2:	7878      	ldrb	r0, [r7, #1]
 801b4c4:	ea41 2100 	orr.w	r1, r1, r0, lsl #8
 801b4c8:	f824 1b02 	strh.w	r1, [r4], #2
 801b4cc:	4617      	mov	r7, r2
 801b4ce:	e7f3      	b.n	801b4b8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x324>
 801b4d0:	9901      	ldr	r1, [sp, #4]
 801b4d2:	29ff      	cmp	r1, #255	@ 0xff
 801b4d4:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801b4d8:	b2b2      	uxth	r2, r6
 801b4da:	d044      	beq.n	801b566 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b4dc:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801b4e0:	f8bd a028 	ldrh.w	sl, [sp, #40]	@ 0x28
 801b4e4:	ea4f 2922 	mov.w	r9, r2, asr #8
 801b4e8:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801b4ec:	f009 09f8 	and.w	r9, r9, #248	@ 0xf8
 801b4f0:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801b4f4:	4608      	mov	r0, r1
 801b4f6:	fb09 f901 	mul.w	r9, r9, r1
 801b4fa:	fb0e fe01 	mul.w	lr, lr, r1
 801b4fe:	00d1      	lsls	r1, r2, #3
 801b500:	b2c9      	uxtb	r1, r1
 801b502:	4341      	muls	r1, r0
 801b504:	429c      	cmp	r4, r3
 801b506:	f4bf af61 	bcs.w	801b3cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b50a:	8822      	ldrh	r2, [r4, #0]
 801b50c:	1210      	asrs	r0, r2, #8
 801b50e:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 801b512:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801b516:	00d2      	lsls	r2, r2, #3
 801b518:	fb00 900a 	mla	r0, r0, sl, r9
 801b51c:	b2d2      	uxtb	r2, r2
 801b51e:	b280      	uxth	r0, r0
 801b520:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 801b524:	fb02 120a 	mla	r2, r2, sl, r1
 801b528:	b292      	uxth	r2, r2
 801b52a:	f100 0b01 	add.w	fp, r0, #1
 801b52e:	fb0c ec0a 	mla	ip, ip, sl, lr
 801b532:	fa1f fc8c 	uxth.w	ip, ip
 801b536:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 801b53a:	1c50      	adds	r0, r2, #1
 801b53c:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 801b540:	f10c 0201 	add.w	r2, ip, #1
 801b544:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801b548:	f40b 4b78 	and.w	fp, fp, #63488	@ 0xf800
 801b54c:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 801b550:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801b554:	ea40 0b0b 	orr.w	fp, r0, fp
 801b558:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 801b55c:	ea4b 0b0c 	orr.w	fp, fp, ip
 801b560:	f824 bb02 	strh.w	fp, [r4], #2
 801b564:	e7ce      	b.n	801b504 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x370>
 801b566:	429c      	cmp	r4, r3
 801b568:	f4bf af30 	bcs.w	801b3cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b56c:	f824 2b02 	strh.w	r2, [r4], #2
 801b570:	e7f9      	b.n	801b566 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3d2>
 801b572:	f8dd 8008 	ldr.w	r8, [sp, #8]
 801b576:	4657      	mov	r7, sl
 801b578:	464d      	mov	r5, r9
 801b57a:	e727      	b.n	801b3cc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x238>
 801b57c:	2300      	movs	r3, #0
 801b57e:	e716      	b.n	801b3ae <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x21a>
 801b580:	44bb      	add	fp, r7
 801b582:	4657      	mov	r7, sl
 801b584:	e724      	b.n	801b3d0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x23c>
 801b586:	bf00      	nop
 801b588:	20002f54 	.word	0x20002f54
 801b58c:	20002f4e 	.word	0x20002f4e
 801b590:	20000120 	.word	0x20000120
 801b594:	2a01      	cmp	r2, #1
 801b596:	d12a      	bne.n	801b5ee <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x45a>
 801b598:	f3c6 0104 	ubfx	r1, r6, #0, #5
 801b59c:	f003 0203 	and.w	r2, r3, #3
 801b5a0:	3902      	subs	r1, #2
 801b5a2:	4411      	add	r1, r2
 801b5a4:	f001 011f 	and.w	r1, r1, #31
 801b5a8:	f3c3 0081 	ubfx	r0, r3, #2, #2
 801b5ac:	f361 0604 	bfi	r6, r1, #0, #5
 801b5b0:	3802      	subs	r0, #2
 801b5b2:	eb00 1056 	add.w	r0, r0, r6, lsr #5
 801b5b6:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b5ba:	f3c3 1301 	ubfx	r3, r3, #4, #2
 801b5be:	f360 164a 	bfi	r6, r0, #5, #6
 801b5c2:	3b02      	subs	r3, #2
 801b5c4:	eb03 22d6 	add.w	r2, r3, r6, lsr #11
 801b5c8:	f002 031f 	and.w	r3, r2, #31
 801b5cc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b5d0:	2203      	movs	r2, #3
 801b5d2:	f363 26cf 	bfi	r6, r3, #11, #5
 801b5d6:	fb12 0303 	smlabb	r3, r2, r3, r0
 801b5da:	2207      	movs	r2, #7
 801b5dc:	fb12 3301 	smlabb	r3, r2, r1, r3
 801b5e0:	9a03      	ldr	r2, [sp, #12]
 801b5e2:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 801b5e6:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801b5ea:	809e      	strh	r6, [r3, #4]
 801b5ec:	e701      	b.n	801b3f2 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x25e>
 801b5ee:	f003 053f 	and.w	r5, r3, #63	@ 0x3f
 801b5f2:	45a8      	cmp	r8, r5
 801b5f4:	4647      	mov	r7, r8
 801b5f6:	bfa8      	it	ge
 801b5f8:	462f      	movge	r7, r5
 801b5fa:	2a02      	cmp	r2, #2
 801b5fc:	d154      	bne.n	801b6a8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x514>
 801b5fe:	9b01      	ldr	r3, [sp, #4]
 801b600:	2bff      	cmp	r3, #255	@ 0xff
 801b602:	d01a      	beq.n	801b63a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b604:	eb0b 0307 	add.w	r3, fp, r7
 801b608:	2b40      	cmp	r3, #64	@ 0x40
 801b60a:	dd16      	ble.n	801b63a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4a6>
 801b60c:	ea4f 094b 	mov.w	r9, fp, lsl #1
 801b610:	4649      	mov	r1, r9
 801b612:	9800      	ldr	r0, [sp, #0]
 801b614:	f7f4 fb71 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801b618:	465a      	mov	r2, fp
 801b61a:	9b01      	ldr	r3, [sp, #4]
 801b61c:	9900      	ldr	r1, [sp, #0]
 801b61e:	4620      	mov	r0, r4
 801b620:	f7f4 fb76 	bl	800fd10 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b624:	9b00      	ldr	r3, [sp, #0]
 801b626:	461a      	mov	r2, r3
 801b628:	4b6c      	ldr	r3, [pc, #432]	@ (801b7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b62a:	429a      	cmp	r2, r3
 801b62c:	bf0c      	ite	eq
 801b62e:	4b6c      	ldreq	r3, [pc, #432]	@ (801b7e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b630:	4b6a      	ldrne	r3, [pc, #424]	@ (801b7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b632:	9300      	str	r3, [sp, #0]
 801b634:	444c      	add	r4, r9
 801b636:	f04f 0b00 	mov.w	fp, #0
 801b63a:	4652      	mov	r2, sl
 801b63c:	2100      	movs	r1, #0
 801b63e:	42a9      	cmp	r1, r5
 801b640:	da2c      	bge.n	801b69c <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x508>
 801b642:	4694      	mov	ip, r2
 801b644:	f04f 0903 	mov.w	r9, #3
 801b648:	f81c 3b02 	ldrb.w	r3, [ip], #2
 801b64c:	7852      	ldrb	r2, [r2, #1]
 801b64e:	ea43 2302 	orr.w	r3, r3, r2, lsl #8
 801b652:	f3c3 1045 	ubfx	r0, r3, #5, #6
 801b656:	ea4f 2ed3 	mov.w	lr, r3, lsr #11
 801b65a:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 801b65e:	f003 021f 	and.w	r2, r3, #31
 801b662:	fb19 000e 	smlabb	r0, r9, lr, r0
 801b666:	f04f 0e07 	mov.w	lr, #7
 801b66a:	fb1e 0002 	smlabb	r0, lr, r2, r0
 801b66e:	9a03      	ldr	r2, [sp, #12]
 801b670:	f000 003f 	and.w	r0, r0, #63	@ 0x3f
 801b674:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 801b678:	42b9      	cmp	r1, r7
 801b67a:	461e      	mov	r6, r3
 801b67c:	8083      	strh	r3, [r0, #4]
 801b67e:	da0a      	bge.n	801b696 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x502>
 801b680:	9a01      	ldr	r2, [sp, #4]
 801b682:	2aff      	cmp	r2, #255	@ 0xff
 801b684:	bf15      	itete	ne
 801b686:	9a00      	ldrne	r2, [sp, #0]
 801b688:	8023      	strheq	r3, [r4, #0]
 801b68a:	f822 301b 	strhne.w	r3, [r2, fp, lsl #1]
 801b68e:	3402      	addeq	r4, #2
 801b690:	bf18      	it	ne
 801b692:	f10b 0b01 	addne.w	fp, fp, #1
 801b696:	3101      	adds	r1, #1
 801b698:	4662      	mov	r2, ip
 801b69a:	e7d0      	b.n	801b63e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x4aa>
 801b69c:	eb0a 0a45 	add.w	sl, sl, r5, lsl #1
 801b6a0:	eba8 0807 	sub.w	r8, r8, r7
 801b6a4:	1bed      	subs	r5, r5, r7
 801b6a6:	e76c      	b.n	801b582 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b6a8:	9b01      	ldr	r3, [sp, #4]
 801b6aa:	2bff      	cmp	r3, #255	@ 0xff
 801b6ac:	eba8 0807 	sub.w	r8, r8, r7
 801b6b0:	eba5 0507 	sub.w	r5, r5, r7
 801b6b4:	fa1f f986 	uxth.w	r9, r6
 801b6b8:	d027      	beq.n	801b70a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x576>
 801b6ba:	eb0b 0307 	add.w	r3, fp, r7
 801b6be:	2b40      	cmp	r3, #64	@ 0x40
 801b6c0:	dd18      	ble.n	801b6f4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x560>
 801b6c2:	ea4f 034b 	mov.w	r3, fp, lsl #1
 801b6c6:	4619      	mov	r1, r3
 801b6c8:	9800      	ldr	r0, [sp, #0]
 801b6ca:	930c      	str	r3, [sp, #48]	@ 0x30
 801b6cc:	f7f4 fb15 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801b6d0:	465a      	mov	r2, fp
 801b6d2:	9b01      	ldr	r3, [sp, #4]
 801b6d4:	9900      	ldr	r1, [sp, #0]
 801b6d6:	4620      	mov	r0, r4
 801b6d8:	f7f4 fb1a 	bl	800fd10 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b6dc:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801b6de:	441c      	add	r4, r3
 801b6e0:	9b00      	ldr	r3, [sp, #0]
 801b6e2:	461a      	mov	r2, r3
 801b6e4:	4b3d      	ldr	r3, [pc, #244]	@ (801b7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b6e6:	429a      	cmp	r2, r3
 801b6e8:	bf0c      	ite	eq
 801b6ea:	4b3d      	ldreq	r3, [pc, #244]	@ (801b7e0 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x64c>)
 801b6ec:	4b3b      	ldrne	r3, [pc, #236]	@ (801b7dc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x648>)
 801b6ee:	9300      	str	r3, [sp, #0]
 801b6f0:	f04f 0b00 	mov.w	fp, #0
 801b6f4:	9b00      	ldr	r3, [sp, #0]
 801b6f6:	eb03 024b 	add.w	r2, r3, fp, lsl #1
 801b6fa:	463b      	mov	r3, r7
 801b6fc:	2b00      	cmp	r3, #0
 801b6fe:	f43f af3f 	beq.w	801b580 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ec>
 801b702:	f822 9b02 	strh.w	r9, [r2], #2
 801b706:	3b01      	subs	r3, #1
 801b708:	e7f8      	b.n	801b6fc <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x568>
 801b70a:	eb04 0747 	add.w	r7, r4, r7, lsl #1
 801b70e:	42a7      	cmp	r7, r4
 801b710:	f67f af37 	bls.w	801b582 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x3ee>
 801b714:	f824 9b02 	strh.w	r9, [r4], #2
 801b718:	e7f9      	b.n	801b70e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x57a>
 801b71a:	f1bb 0f00 	cmp.w	fp, #0
 801b71e:	d00c      	beq.n	801b73a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5a6>
 801b720:	ea4f 084b 	mov.w	r8, fp, lsl #1
 801b724:	4641      	mov	r1, r8
 801b726:	9800      	ldr	r0, [sp, #0]
 801b728:	f7f4 fae7 	bl	800fcfa <_ZN8touchgfx5paint9flushLineEPmi>
 801b72c:	4620      	mov	r0, r4
 801b72e:	9b01      	ldr	r3, [sp, #4]
 801b730:	9900      	ldr	r1, [sp, #0]
 801b732:	465a      	mov	r2, fp
 801b734:	f7f4 faec 	bl	800fd10 <_ZN8touchgfx5paint6rgb56514lineFromRGB565EPtPKtjh>
 801b738:	4444      	add	r4, r8
 801b73a:	4b2a      	ldr	r3, [pc, #168]	@ (801b7e4 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x650>)
 801b73c:	9a02      	ldr	r2, [sp, #8]
 801b73e:	881b      	ldrh	r3, [r3, #0]
 801b740:	1a9b      	subs	r3, r3, r2
 801b742:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 801b746:	9b06      	ldr	r3, [sp, #24]
 801b748:	3301      	adds	r3, #1
 801b74a:	9306      	str	r3, [sp, #24]
 801b74c:	9a06      	ldr	r2, [sp, #24]
 801b74e:	9b04      	ldr	r3, [sp, #16]
 801b750:	4293      	cmp	r3, r2
 801b752:	d120      	bne.n	801b796 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x602>
 801b754:	9b05      	ldr	r3, [sp, #20]
 801b756:	9a05      	ldr	r2, [sp, #20]
 801b758:	f8bd 9040 	ldrh.w	r9, [sp, #64]	@ 0x40
 801b75c:	f8bd 5038 	ldrh.w	r5, [sp, #56]	@ 0x38
 801b760:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801b762:	f103 0801 	add.w	r8, r3, #1
 801b766:	9b08      	ldr	r3, [sp, #32]
 801b768:	f853 7022 	ldr.w	r7, [r3, r2, lsl #2]
 801b76c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801b76e:	ba3f      	rev	r7, r7
 801b770:	2280      	movs	r2, #128	@ 0x80
 801b772:	2100      	movs	r1, #0
 801b774:	441f      	add	r7, r3
 801b776:	eba9 0905 	sub.w	r9, r9, r5
 801b77a:	f00a fd70 	bl	802625e <memset>
 801b77e:	2300      	movs	r3, #0
 801b780:	fa1f f989 	uxth.w	r9, r9
 801b784:	f04f 0600 	mov.w	r6, #0
 801b788:	f8cd 8014 	str.w	r8, [sp, #20]
 801b78c:	9306      	str	r3, [sp, #24]
 801b78e:	f7f4 faad 	bl	800fcec <_ZN8touchgfx5paint8tearDownEv>
 801b792:	46ba      	mov	sl, r7
 801b794:	e58a      	b.n	801b2ac <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x118>
 801b796:	f8bd 903c 	ldrh.w	r9, [sp, #60]	@ 0x3c
 801b79a:	9b02      	ldr	r3, [sp, #8]
 801b79c:	eba9 0903 	sub.w	r9, r9, r3
 801b7a0:	eba9 0505 	sub.w	r5, r9, r5
 801b7a4:	fa1f f985 	uxth.w	r9, r5
 801b7a8:	e7f1      	b.n	801b78e <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x5fa>
 801b7aa:	4b0f      	ldr	r3, [pc, #60]	@ (801b7e8 <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x654>)
 801b7ac:	6818      	ldr	r0, [r3, #0]
 801b7ae:	6803      	ldr	r3, [r0, #0]
 801b7b0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801b7b2:	4798      	blx	r3
 801b7b4:	b013      	add	sp, #76	@ 0x4c
 801b7b6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801b7ba:	9b02      	ldr	r3, [sp, #8]
 801b7bc:	9a02      	ldr	r2, [sp, #8]
 801b7be:	42ab      	cmp	r3, r5
 801b7c0:	bfa8      	it	ge
 801b7c2:	462b      	movge	r3, r5
 801b7c4:	eba2 0803 	sub.w	r8, r2, r3
 801b7c8:	1aed      	subs	r5, r5, r3
 801b7ca:	e626      	b.n	801b41a <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x286>
 801b7cc:	f108 38ff 	add.w	r8, r8, #4294967295
 801b7d0:	fa1f f986 	uxth.w	r9, r6
 801b7d4:	2500      	movs	r5, #0
 801b7d6:	2701      	movs	r7, #1
 801b7d8:	e76f      	b.n	801b6ba <_ZN8touchgfx8LCD16bpp19DecompressorRGB_QOI14blitCopyRGB565EPKhRKNS_4RectES6_h+0x526>
 801b7da:	bf00      	nop
 801b7dc:	20000120 	.word	0x20000120
 801b7e0:	20000220 	.word	0x20000220
 801b7e4:	20002f4e 	.word	0x20002f4e
 801b7e8:	20002f54 	.word	0x20002f54

0801b7ec <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801b7ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801b7f0:	b08f      	sub	sp, #60	@ 0x3c
 801b7f2:	461c      	mov	r4, r3
 801b7f4:	9203      	str	r2, [sp, #12]
 801b7f6:	f89d 2064 	ldrb.w	r2, [sp, #100]	@ 0x64
 801b7fa:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801b7fc:	9202      	str	r2, [sp, #8]
 801b7fe:	460f      	mov	r7, r1
 801b800:	2a00      	cmp	r2, #0
 801b802:	f000 8128 	beq.w	801ba56 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x26a>
 801b806:	6820      	ldr	r0, [r4, #0]
 801b808:	6861      	ldr	r1, [r4, #4]
 801b80a:	aa0a      	add	r2, sp, #40	@ 0x28
 801b80c:	c203      	stmia	r2!, {r0, r1}
 801b80e:	6818      	ldr	r0, [r3, #0]
 801b810:	6859      	ldr	r1, [r3, #4]
 801b812:	aa0c      	add	r2, sp, #48	@ 0x30
 801b814:	c203      	stmia	r2!, {r0, r1}
 801b816:	a80a      	add	r0, sp, #40	@ 0x28
 801b818:	f7f8 fb84 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801b81c:	4621      	mov	r1, r4
 801b81e:	a80c      	add	r0, sp, #48	@ 0x30
 801b820:	f7f8 fba8 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801b824:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801b828:	f9bd 502e 	ldrsh.w	r5, [sp, #46]	@ 0x2e
 801b82c:	f8bd 0030 	ldrh.w	r0, [sp, #48]	@ 0x30
 801b830:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801b834:	bfde      	ittt	le
 801b836:	b2b3      	uxthle	r3, r6
 801b838:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801b83c:	fb92 f3f3 	sdivle	r3, r2, r3
 801b840:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801b844:	bfc8      	it	gt
 801b846:	2301      	movgt	r3, #1
 801b848:	fb92 f1f3 	sdiv	r1, r2, r3
 801b84c:	fa1f fc81 	uxth.w	ip, r1
 801b850:	fb0c 2413 	mls	r4, ip, r3, r2
 801b854:	fb14 f406 	smulbb	r4, r4, r6
 801b858:	441d      	add	r5, r3
 801b85a:	4404      	add	r4, r0
 801b85c:	4661      	mov	r1, ip
 801b85e:	3d01      	subs	r5, #1
 801b860:	b2a4      	uxth	r4, r4
 801b862:	fb95 f5f3 	sdiv	r5, r5, r3
 801b866:	b121      	cbz	r1, 801b872 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x86>
 801b868:	9b03      	ldr	r3, [sp, #12]
 801b86a:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801b86e:	ba1b      	rev	r3, r3
 801b870:	441f      	add	r7, r3
 801b872:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801b876:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801b87a:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801b87e:	4418      	add	r0, r3
 801b880:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801b884:	f8ad 0030 	strh.w	r0, [sp, #48]	@ 0x30
 801b888:	441a      	add	r2, r3
 801b88a:	4b74      	ldr	r3, [pc, #464]	@ (801ba5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801b88c:	f8ad 2032 	strh.w	r2, [sp, #50]	@ 0x32
 801b890:	6818      	ldr	r0, [r3, #0]
 801b892:	6803      	ldr	r3, [r0, #0]
 801b894:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801b896:	4798      	blx	r3
 801b898:	4a71      	ldr	r2, [pc, #452]	@ (801ba60 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x274>)
 801b89a:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 801b89e:	8813      	ldrh	r3, [r2, #0]
 801b8a0:	f9bd c030 	ldrsh.w	ip, [sp, #48]	@ 0x30
 801b8a4:	9209      	str	r2, [sp, #36]	@ 0x24
 801b8a6:	fb03 c101 	mla	r1, r3, r1, ip
 801b8aa:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801b8ae:	4373      	muls	r3, r6
 801b8b0:	b2ad      	uxth	r5, r5
 801b8b2:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801b8b6:	00ad      	lsls	r5, r5, #2
 801b8b8:	2c00      	cmp	r4, #0
 801b8ba:	9304      	str	r3, [sp, #16]
 801b8bc:	f105 0304 	add.w	r3, r5, #4
 801b8c0:	9305      	str	r3, [sp, #20]
 801b8c2:	bf0c      	ite	eq
 801b8c4:	46c8      	moveq	r8, r9
 801b8c6:	f04f 0800 	movne.w	r8, #0
 801b8ca:	2300      	movs	r3, #0
 801b8cc:	fa1f f888 	uxth.w	r8, r8
 801b8d0:	9301      	str	r3, [sp, #4]
 801b8d2:	9a04      	ldr	r2, [sp, #16]
 801b8d4:	4282      	cmp	r2, r0
 801b8d6:	f240 80b9 	bls.w	801ba4c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x260>
 801b8da:	b95b      	cbnz	r3, 801b8f4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x108>
 801b8dc:	783a      	ldrb	r2, [r7, #0]
 801b8de:	0993      	lsrs	r3, r2, #6
 801b8e0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801b8e4:	9201      	str	r2, [sp, #4]
 801b8e6:	1e5a      	subs	r2, r3, #1
 801b8e8:	2a02      	cmp	r2, #2
 801b8ea:	bf8d      	iteet	hi
 801b8ec:	787b      	ldrbhi	r3, [r7, #1]
 801b8ee:	3701      	addls	r7, #1
 801b8f0:	b29b      	uxthls	r3, r3
 801b8f2:	3702      	addhi	r7, #2
 801b8f4:	b184      	cbz	r4, 801b918 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x12c>
 801b8f6:	429c      	cmp	r4, r3
 801b8f8:	bf95      	itete	ls
 801b8fa:	1b1c      	subls	r4, r3, r4
 801b8fc:	1ae4      	subhi	r4, r4, r3
 801b8fe:	fa1f fa84 	uxthls.w	sl, r4
 801b902:	b2a4      	uxthhi	r4, r4
 801b904:	bf87      	ittee	hi
 801b906:	46c4      	movhi	ip, r8
 801b908:	f04f 0a00 	movhi.w	sl, #0
 801b90c:	fa1f fc89 	uxthls.w	ip, r9
 801b910:	2400      	movls	r4, #0
 801b912:	4653      	mov	r3, sl
 801b914:	46e0      	mov	r8, ip
 801b916:	e7dc      	b.n	801b8d2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xe6>
 801b918:	2204      	movs	r2, #4
 801b91a:	4615      	mov	r5, r2
 801b91c:	9905      	ldr	r1, [sp, #20]
 801b91e:	9a01      	ldr	r2, [sp, #4]
 801b920:	fb15 1202 	smlabb	r2, r5, r2, r1
 801b924:	9903      	ldr	r1, [sp, #12]
 801b926:	588a      	ldr	r2, [r1, r2]
 801b928:	4543      	cmp	r3, r8
 801b92a:	bf27      	ittee	cs
 801b92c:	eba3 0a08 	subcs.w	sl, r3, r8
 801b930:	46c6      	movcs	lr, r8
 801b932:	eba8 0c03 	subcc.w	ip, r8, r3
 801b936:	469e      	movcc	lr, r3
 801b938:	ea4f 6112 	mov.w	r1, r2, lsr #24
 801b93c:	bf27      	ittee	cs
 801b93e:	fa1f fa8a 	uxthcs.w	sl, sl
 801b942:	46a4      	movcs	ip, r4
 801b944:	fa1f fc8c 	uxthcc.w	ip, ip
 801b948:	46a2      	movcc	sl, r4
 801b94a:	ea4f 0e4e 	mov.w	lr, lr, lsl #1
 801b94e:	2900      	cmp	r1, #0
 801b950:	d066      	beq.n	801ba20 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x234>
 801b952:	29ff      	cmp	r1, #255	@ 0xff
 801b954:	ea4f 2612 	mov.w	r6, r2, lsr #8
 801b958:	d114      	bne.n	801b984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b95a:	9d02      	ldr	r5, [sp, #8]
 801b95c:	2dff      	cmp	r5, #255	@ 0xff
 801b95e:	d111      	bne.n	801b984 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x198>
 801b960:	0951      	lsrs	r1, r2, #5
 801b962:	f426 66ff 	bic.w	r6, r6, #2040	@ 0x7f8
 801b966:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801b96a:	f026 0607 	bic.w	r6, r6, #7
 801b96e:	430e      	orrs	r6, r1
 801b970:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801b974:	4316      	orrs	r6, r2
 801b976:	b2b6      	uxth	r6, r6
 801b978:	4486      	add	lr, r0
 801b97a:	4586      	cmp	lr, r0
 801b97c:	d051      	beq.n	801ba22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b97e:	f820 6b02 	strh.w	r6, [r0], #2
 801b982:	e7fa      	b.n	801b97a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x18e>
 801b984:	9d02      	ldr	r5, [sp, #8]
 801b986:	4369      	muls	r1, r5
 801b988:	1c4d      	adds	r5, r1, #1
 801b98a:	eb05 2521 	add.w	r5, r5, r1, asr #8
 801b98e:	122d      	asrs	r5, r5, #8
 801b990:	ea6f 0b05 	mvn.w	fp, r5
 801b994:	f3c2 4107 	ubfx	r1, r2, #16, #8
 801b998:	b2ad      	uxth	r5, r5
 801b99a:	b2f6      	uxtb	r6, r6
 801b99c:	b2d2      	uxtb	r2, r2
 801b99e:	fb11 f105 	smulbb	r1, r1, r5
 801b9a2:	fb16 f605 	smulbb	r6, r6, r5
 801b9a6:	fb12 f205 	smulbb	r2, r2, r5
 801b9aa:	b289      	uxth	r1, r1
 801b9ac:	b2b6      	uxth	r6, r6
 801b9ae:	b292      	uxth	r2, r2
 801b9b0:	9106      	str	r1, [sp, #24]
 801b9b2:	9607      	str	r6, [sp, #28]
 801b9b4:	9208      	str	r2, [sp, #32]
 801b9b6:	4486      	add	lr, r0
 801b9b8:	fa5f fb8b 	uxtb.w	fp, fp
 801b9bc:	4586      	cmp	lr, r0
 801b9be:	d030      	beq.n	801ba22 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801b9c0:	8802      	ldrh	r2, [r0, #0]
 801b9c2:	9906      	ldr	r1, [sp, #24]
 801b9c4:	1216      	asrs	r6, r2, #8
 801b9c6:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801b9ca:	10d5      	asrs	r5, r2, #3
 801b9cc:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801b9d0:	fb06 160b 	mla	r6, r6, fp, r1
 801b9d4:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801b9d8:	9907      	ldr	r1, [sp, #28]
 801b9da:	00d2      	lsls	r2, r2, #3
 801b9dc:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801b9e0:	fb05 150b 	mla	r5, r5, fp, r1
 801b9e4:	b2d2      	uxtb	r2, r2
 801b9e6:	9908      	ldr	r1, [sp, #32]
 801b9e8:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801b9ec:	b2b6      	uxth	r6, r6
 801b9ee:	fb02 120b 	mla	r2, r2, fp, r1
 801b9f2:	b292      	uxth	r2, r2
 801b9f4:	1c71      	adds	r1, r6, #1
 801b9f6:	eb01 2616 	add.w	r6, r1, r6, lsr #8
 801b9fa:	1c51      	adds	r1, r2, #1
 801b9fc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801ba00:	b2ad      	uxth	r5, r5
 801ba02:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ba06:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801ba0a:	4316      	orrs	r6, r2
 801ba0c:	1c6a      	adds	r2, r5, #1
 801ba0e:	eb02 2515 	add.w	r5, r2, r5, lsr #8
 801ba12:	096d      	lsrs	r5, r5, #5
 801ba14:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801ba18:	432e      	orrs	r6, r5
 801ba1a:	f820 6b02 	strh.w	r6, [r0], #2
 801ba1e:	e7cd      	b.n	801b9bc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d0>
 801ba20:	4470      	add	r0, lr
 801ba22:	4543      	cmp	r3, r8
 801ba24:	f4ff af75 	bcc.w	801b912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ba28:	f8bd 402c 	ldrh.w	r4, [sp, #44]	@ 0x2c
 801ba2c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801ba2e:	fa1f fc89 	uxth.w	ip, r9
 801ba32:	eba4 040c 	sub.w	r4, r4, ip
 801ba36:	881b      	ldrh	r3, [r3, #0]
 801ba38:	b2a4      	uxth	r4, r4
 801ba3a:	2c00      	cmp	r4, #0
 801ba3c:	eba3 0309 	sub.w	r3, r3, r9
 801ba40:	bf18      	it	ne
 801ba42:	f04f 0c00 	movne.w	ip, #0
 801ba46:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801ba4a:	e762      	b.n	801b912 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x126>
 801ba4c:	4b03      	ldr	r3, [pc, #12]	@ (801ba5c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE16blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x270>)
 801ba4e:	6818      	ldr	r0, [r3, #0]
 801ba50:	6803      	ldr	r3, [r0, #0]
 801ba52:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ba54:	4798      	blx	r3
 801ba56:	b00f      	add	sp, #60	@ 0x3c
 801ba58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ba5c:	20002f54 	.word	0x20002f54
 801ba60:	20002f4e 	.word	0x20002f4e

0801ba64 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801ba64:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ba68:	b093      	sub	sp, #76	@ 0x4c
 801ba6a:	461c      	mov	r4, r3
 801ba6c:	9205      	str	r2, [sp, #20]
 801ba6e:	f89d 2074 	ldrb.w	r2, [sp, #116]	@ 0x74
 801ba72:	9101      	str	r1, [sp, #4]
 801ba74:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801ba76:	9202      	str	r2, [sp, #8]
 801ba78:	2a00      	cmp	r2, #0
 801ba7a:	f000 812c 	beq.w	801bcd6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801ba7e:	6820      	ldr	r0, [r4, #0]
 801ba80:	6861      	ldr	r1, [r4, #4]
 801ba82:	aa0e      	add	r2, sp, #56	@ 0x38
 801ba84:	c203      	stmia	r2!, {r0, r1}
 801ba86:	6818      	ldr	r0, [r3, #0]
 801ba88:	6859      	ldr	r1, [r3, #4]
 801ba8a:	aa10      	add	r2, sp, #64	@ 0x40
 801ba8c:	c203      	stmia	r2!, {r0, r1}
 801ba8e:	a80e      	add	r0, sp, #56	@ 0x38
 801ba90:	f7f8 fa48 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ba94:	4621      	mov	r1, r4
 801ba96:	a810      	add	r0, sp, #64	@ 0x40
 801ba98:	f7f8 fa6c 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ba9c:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801baa0:	f9bd 503e 	ldrsh.w	r5, [sp, #62]	@ 0x3e
 801baa4:	f8bd 0040 	ldrh.w	r0, [sp, #64]	@ 0x40
 801baa8:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 801baac:	bfde      	ittt	le
 801baae:	b2b3      	uxthle	r3, r6
 801bab0:	f44f 6280 	movle.w	r2, #1024	@ 0x400
 801bab4:	fb92 f3f3 	sdivle	r3, r2, r3
 801bab8:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801babc:	bfc8      	it	gt
 801babe:	2301      	movgt	r3, #1
 801bac0:	fb92 f1f3 	sdiv	r1, r2, r3
 801bac4:	fa1f fc81 	uxth.w	ip, r1
 801bac8:	fb0c 2413 	mls	r4, ip, r3, r2
 801bacc:	fb14 f406 	smulbb	r4, r4, r6
 801bad0:	441d      	add	r5, r3
 801bad2:	4404      	add	r4, r0
 801bad4:	4661      	mov	r1, ip
 801bad6:	3d01      	subs	r5, #1
 801bad8:	b2a4      	uxth	r4, r4
 801bada:	fb95 f5f3 	sdiv	r5, r5, r3
 801bade:	b131      	cbz	r1, 801baee <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x8a>
 801bae0:	9b05      	ldr	r3, [sp, #20]
 801bae2:	9901      	ldr	r1, [sp, #4]
 801bae4:	f853 302c 	ldr.w	r3, [r3, ip, lsl #2]
 801bae8:	ba1b      	rev	r3, r3
 801baea:	4419      	add	r1, r3
 801baec:	9101      	str	r1, [sp, #4]
 801baee:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801baf2:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801baf6:	f9bd 6046 	ldrsh.w	r6, [sp, #70]	@ 0x46
 801bafa:	4418      	add	r0, r3
 801bafc:	f8bd 303a 	ldrh.w	r3, [sp, #58]	@ 0x3a
 801bb00:	f8ad 0040 	strh.w	r0, [sp, #64]	@ 0x40
 801bb04:	441a      	add	r2, r3
 801bb06:	4b75      	ldr	r3, [pc, #468]	@ (801bcdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bb08:	f8ad 2042 	strh.w	r2, [sp, #66]	@ 0x42
 801bb0c:	6818      	ldr	r0, [r3, #0]
 801bb0e:	6803      	ldr	r3, [r0, #0]
 801bb10:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bb12:	4798      	blx	r3
 801bb14:	4972      	ldr	r1, [pc, #456]	@ (801bce0 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x27c>)
 801bb16:	f9bd c040 	ldrsh.w	ip, [sp, #64]	@ 0x40
 801bb1a:	880b      	ldrh	r3, [r1, #0]
 801bb1c:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801bb20:	910d      	str	r1, [sp, #52]	@ 0x34
 801bb22:	fb03 c202 	mla	r2, r3, r2, ip
 801bb26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801bb2a:	4373      	muls	r3, r6
 801bb2c:	b2ad      	uxth	r5, r5
 801bb2e:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801bb32:	00ad      	lsls	r5, r5, #2
 801bb34:	9308      	str	r3, [sp, #32]
 801bb36:	1d2b      	adds	r3, r5, #4
 801bb38:	9309      	str	r3, [sp, #36]	@ 0x24
 801bb3a:	9b02      	ldr	r3, [sp, #8]
 801bb3c:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801bb40:	9106      	str	r1, [sp, #24]
 801bb42:	43da      	mvns	r2, r3
 801bb44:	2c00      	cmp	r4, #0
 801bb46:	bf0c      	ite	eq
 801bb48:	46dc      	moveq	ip, fp
 801bb4a:	f04f 0c00 	movne.w	ip, #0
 801bb4e:	2300      	movs	r3, #0
 801bb50:	b2d2      	uxtb	r2, r2
 801bb52:	fa1f fc8c 	uxth.w	ip, ip
 801bb56:	9303      	str	r3, [sp, #12]
 801bb58:	9207      	str	r2, [sp, #28]
 801bb5a:	9a08      	ldr	r2, [sp, #32]
 801bb5c:	4282      	cmp	r2, r0
 801bb5e:	f240 80b5 	bls.w	801bccc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801bb62:	b963      	cbnz	r3, 801bb7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bb64:	9b01      	ldr	r3, [sp, #4]
 801bb66:	781a      	ldrb	r2, [r3, #0]
 801bb68:	0993      	lsrs	r3, r2, #6
 801bb6a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 801bb6e:	9203      	str	r2, [sp, #12]
 801bb70:	1e5a      	subs	r2, r3, #1
 801bb72:	2a02      	cmp	r2, #2
 801bb74:	d815      	bhi.n	801bba2 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x13e>
 801bb76:	9a01      	ldr	r2, [sp, #4]
 801bb78:	3201      	adds	r2, #1
 801bb7a:	9201      	str	r2, [sp, #4]
 801bb7c:	b29b      	uxth	r3, r3
 801bb7e:	b1b4      	cbz	r4, 801bbae <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x14a>
 801bb80:	429c      	cmp	r4, r3
 801bb82:	bf95      	itete	ls
 801bb84:	1b1c      	subls	r4, r3, r4
 801bb86:	1ae4      	subhi	r4, r4, r3
 801bb88:	fa1f f884 	uxthls.w	r8, r4
 801bb8c:	b2a4      	uxthhi	r4, r4
 801bb8e:	bf87      	ittee	hi
 801bb90:	4666      	movhi	r6, ip
 801bb92:	f04f 0800 	movhi.w	r8, #0
 801bb96:	fa1f f68b 	uxthls.w	r6, fp
 801bb9a:	2400      	movls	r4, #0
 801bb9c:	4643      	mov	r3, r8
 801bb9e:	46b4      	mov	ip, r6
 801bba0:	e7db      	b.n	801bb5a <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf6>
 801bba2:	9a01      	ldr	r2, [sp, #4]
 801bba4:	9b01      	ldr	r3, [sp, #4]
 801bba6:	3202      	adds	r2, #2
 801bba8:	785b      	ldrb	r3, [r3, #1]
 801bbaa:	9201      	str	r2, [sp, #4]
 801bbac:	e7e7      	b.n	801bb7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x11a>
 801bbae:	2203      	movs	r2, #3
 801bbb0:	4615      	mov	r5, r2
 801bbb2:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801bbb4:	9a03      	ldr	r2, [sp, #12]
 801bbb6:	fb15 1202 	smlabb	r2, r5, r2, r1
 801bbba:	9905      	ldr	r1, [sp, #20]
 801bbbc:	4563      	cmp	r3, ip
 801bbbe:	eb01 0502 	add.w	r5, r1, r2
 801bbc2:	9902      	ldr	r1, [sp, #8]
 801bbc4:	bf29      	itett	cs
 801bbc6:	eba3 080c 	subcs.w	r8, r3, ip
 801bbca:	ebac 0603 	subcc.w	r6, ip, r3
 801bbce:	fa1f f888 	uxthcs.w	r8, r8
 801bbd2:	46e1      	movcs	r9, ip
 801bbd4:	bf2f      	iteee	cs
 801bbd6:	4626      	movcs	r6, r4
 801bbd8:	b2b6      	uxthcc	r6, r6
 801bbda:	4699      	movcc	r9, r3
 801bbdc:	46a0      	movcc	r8, r4
 801bbde:	29ff      	cmp	r1, #255	@ 0xff
 801bbe0:	d04a      	beq.n	801bc78 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x214>
 801bbe2:	9f06      	ldr	r7, [sp, #24]
 801bbe4:	78a9      	ldrb	r1, [r5, #2]
 801bbe6:	9004      	str	r0, [sp, #16]
 801bbe8:	4379      	muls	r1, r7
 801bbea:	910a      	str	r1, [sp, #40]	@ 0x28
 801bbec:	7869      	ldrb	r1, [r5, #1]
 801bbee:	4379      	muls	r1, r7
 801bbf0:	910b      	str	r1, [sp, #44]	@ 0x2c
 801bbf2:	9905      	ldr	r1, [sp, #20]
 801bbf4:	5c8a      	ldrb	r2, [r1, r2]
 801bbf6:	437a      	muls	r2, r7
 801bbf8:	920c      	str	r2, [sp, #48]	@ 0x30
 801bbfa:	46ca      	mov	sl, r9
 801bbfc:	f1ba 0f00 	cmp.w	sl, #0
 801bc00:	d03d      	beq.n	801bc7e <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21a>
 801bc02:	9a04      	ldr	r2, [sp, #16]
 801bc04:	9f07      	ldr	r7, [sp, #28]
 801bc06:	8812      	ldrh	r2, [r2, #0]
 801bc08:	1215      	asrs	r5, r2, #8
 801bc0a:	46be      	mov	lr, r7
 801bc0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801bc10:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 801bc12:	10d1      	asrs	r1, r2, #3
 801bc14:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801bc18:	fb05 750e 	mla	r5, r5, lr, r7
 801bc1c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801bc20:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 801bc22:	00d2      	lsls	r2, r2, #3
 801bc24:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801bc28:	fb01 710e 	mla	r1, r1, lr, r7
 801bc2c:	b2d2      	uxtb	r2, r2
 801bc2e:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 801bc30:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801bc34:	b2ad      	uxth	r5, r5
 801bc36:	fb02 720e 	mla	r2, r2, lr, r7
 801bc3a:	b292      	uxth	r2, r2
 801bc3c:	f105 0e01 	add.w	lr, r5, #1
 801bc40:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801bc44:	f102 0e01 	add.w	lr, r2, #1
 801bc48:	eb0e 2212 	add.w	r2, lr, r2, lsr #8
 801bc4c:	b289      	uxth	r1, r1
 801bc4e:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801bc52:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801bc56:	4315      	orrs	r5, r2
 801bc58:	1c4a      	adds	r2, r1, #1
 801bc5a:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801bc5e:	0949      	lsrs	r1, r1, #5
 801bc60:	9a04      	ldr	r2, [sp, #16]
 801bc62:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801bc66:	430d      	orrs	r5, r1
 801bc68:	f822 5b02 	strh.w	r5, [r2], #2
 801bc6c:	f10a 3aff 	add.w	sl, sl, #4294967295
 801bc70:	9204      	str	r2, [sp, #16]
 801bc72:	fa1f fa8a 	uxth.w	sl, sl
 801bc76:	e7c1      	b.n	801bbfc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x198>
 801bc78:	4649      	mov	r1, r9
 801bc7a:	4686      	mov	lr, r0
 801bc7c:	b999      	cbnz	r1, 801bca6 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801bc7e:	4563      	cmp	r3, ip
 801bc80:	eb00 0049 	add.w	r0, r0, r9, lsl #1
 801bc84:	d38a      	bcc.n	801bb9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bc86:	f8bd 403c 	ldrh.w	r4, [sp, #60]	@ 0x3c
 801bc8a:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bc8c:	fa1f f68b 	uxth.w	r6, fp
 801bc90:	1ba4      	subs	r4, r4, r6
 801bc92:	881b      	ldrh	r3, [r3, #0]
 801bc94:	b2a4      	uxth	r4, r4
 801bc96:	2c00      	cmp	r4, #0
 801bc98:	eba3 030b 	sub.w	r3, r3, fp
 801bc9c:	bf18      	it	ne
 801bc9e:	2600      	movne	r6, #0
 801bca0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801bca4:	e77a      	b.n	801bb9c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x138>
 801bca6:	78aa      	ldrb	r2, [r5, #2]
 801bca8:	4f0e      	ldr	r7, [pc, #56]	@ (801bce4 <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x280>)
 801bcaa:	ea07 2a02 	and.w	sl, r7, r2, lsl #8
 801bcae:	786a      	ldrb	r2, [r5, #1]
 801bcb0:	00d2      	lsls	r2, r2, #3
 801bcb2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bcb6:	ea4a 0202 	orr.w	r2, sl, r2
 801bcba:	f895 a000 	ldrb.w	sl, [r5]
 801bcbe:	3901      	subs	r1, #1
 801bcc0:	ea42 02da 	orr.w	r2, r2, sl, lsr #3
 801bcc4:	f82e 2b02 	strh.w	r2, [lr], #2
 801bcc8:	b289      	uxth	r1, r1
 801bcca:	e7d7      	b.n	801bc7c <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x218>
 801bccc:	4b03      	ldr	r3, [pc, #12]	@ (801bcdc <_ZN8touchgfx8LCD16bpp18DecompressorL8_RLE14blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>)
 801bcce:	6818      	ldr	r0, [r3, #0]
 801bcd0:	6803      	ldr	r3, [r0, #0]
 801bcd2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801bcd4:	4798      	blx	r3
 801bcd6:	b013      	add	sp, #76	@ 0x4c
 801bcd8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801bcdc:	20002f54 	.word	0x20002f54
 801bce0:	20002f4e 	.word	0x20002f4e
 801bce4:	fffff800 	.word	0xfffff800

0801bce8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 801bce8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801bcec:	b09d      	sub	sp, #116	@ 0x74
 801bcee:	e9cd 1211 	strd	r1, r2, [sp, #68]	@ 0x44
 801bcf2:	f89d 209c 	ldrb.w	r2, [sp, #156]	@ 0x9c
 801bcf6:	920e      	str	r2, [sp, #56]	@ 0x38
 801bcf8:	461c      	mov	r4, r3
 801bcfa:	4683      	mov	fp, r0
 801bcfc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801bcfe:	2a00      	cmp	r2, #0
 801bd00:	f000 81e0 	beq.w	801c0c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3dc>
 801bd04:	6820      	ldr	r0, [r4, #0]
 801bd06:	6861      	ldr	r1, [r4, #4]
 801bd08:	aa18      	add	r2, sp, #96	@ 0x60
 801bd0a:	c203      	stmia	r2!, {r0, r1}
 801bd0c:	6818      	ldr	r0, [r3, #0]
 801bd0e:	6859      	ldr	r1, [r3, #4]
 801bd10:	aa1a      	add	r2, sp, #104	@ 0x68
 801bd12:	c203      	stmia	r2!, {r0, r1}
 801bd14:	a818      	add	r0, sp, #96	@ 0x60
 801bd16:	f7f8 f905 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801bd1a:	4621      	mov	r1, r4
 801bd1c:	a81a      	add	r0, sp, #104	@ 0x68
 801bd1e:	f7f8 f929 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801bd22:	f9bd 3064 	ldrsh.w	r3, [sp, #100]	@ 0x64
 801bd26:	f9bd 4066 	ldrsh.w	r4, [sp, #102]	@ 0x66
 801bd2a:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801bd2e:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801bd32:	bfd7      	itett	le
 801bd34:	b29a      	uxthle	r2, r3
 801bd36:	2201      	movgt	r2, #1
 801bd38:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801bd3c:	fb91 f2f2 	sdivle	r2, r1, r2
 801bd40:	9202      	str	r2, [sp, #8]
 801bd42:	9802      	ldr	r0, [sp, #8]
 801bd44:	f9bd 206a 	ldrsh.w	r2, [sp, #106]	@ 0x6a
 801bd48:	fb92 f0f0 	sdiv	r0, r2, r0
 801bd4c:	b280      	uxth	r0, r0
 801bd4e:	900f      	str	r0, [sp, #60]	@ 0x3c
 801bd50:	9902      	ldr	r1, [sp, #8]
 801bd52:	9802      	ldr	r0, [sp, #8]
 801bd54:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 801bd56:	440c      	add	r4, r1
 801bd58:	fb05 2510 	mls	r5, r5, r0, r2
 801bd5c:	fb15 f503 	smulbb	r5, r5, r3
 801bd60:	3c01      	subs	r4, #1
 801bd62:	f8bd 3060 	ldrh.w	r3, [sp, #96]	@ 0x60
 801bd66:	fb94 f4f1 	sdiv	r4, r4, r1
 801bd6a:	f8bd 1068 	ldrh.w	r1, [sp, #104]	@ 0x68
 801bd6e:	440d      	add	r5, r1
 801bd70:	4419      	add	r1, r3
 801bd72:	f8bd 3062 	ldrh.w	r3, [sp, #98]	@ 0x62
 801bd76:	f8ad 1068 	strh.w	r1, [sp, #104]	@ 0x68
 801bd7a:	441a      	add	r2, r3
 801bd7c:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801bd80:	9306      	str	r3, [sp, #24]
 801bd82:	4bb3      	ldr	r3, [pc, #716]	@ (801c050 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x368>)
 801bd84:	f8ad 206a 	strh.w	r2, [sp, #106]	@ 0x6a
 801bd88:	6818      	ldr	r0, [r3, #0]
 801bd8a:	6803      	ldr	r3, [r0, #0]
 801bd8c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801bd8e:	4798      	blx	r3
 801bd90:	4bb0      	ldr	r3, [pc, #704]	@ (801c054 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x36c>)
 801bd92:	f9bd 106a 	ldrsh.w	r1, [sp, #106]	@ 0x6a
 801bd96:	881a      	ldrh	r2, [r3, #0]
 801bd98:	f9bd 7068 	ldrsh.w	r7, [sp, #104]	@ 0x68
 801bd9c:	9316      	str	r3, [sp, #88]	@ 0x58
 801bd9e:	fb02 7101 	mla	r1, r2, r1, r7
 801bda2:	3401      	adds	r4, #1
 801bda4:	eb00 0841 	add.w	r8, r0, r1, lsl #1
 801bda8:	b2a4      	uxth	r4, r4
 801bdaa:	4356      	muls	r6, r2
 801bdac:	eb08 0246 	add.w	r2, r8, r6, lsl #1
 801bdb0:	00a4      	lsls	r4, r4, #2
 801bdb2:	920a      	str	r2, [sp, #40]	@ 0x28
 801bdb4:	1d22      	adds	r2, r4, #4
 801bdb6:	b2ad      	uxth	r5, r5
 801bdb8:	9213      	str	r2, [sp, #76]	@ 0x4c
 801bdba:	4ba7      	ldr	r3, [pc, #668]	@ (801c058 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x370>)
 801bdbc:	9a06      	ldr	r2, [sp, #24]
 801bdbe:	2d00      	cmp	r5, #0
 801bdc0:	bf0c      	ite	eq
 801bdc2:	4611      	moveq	r1, r2
 801bdc4:	2100      	movne	r1, #0
 801bdc6:	2200      	movs	r2, #0
 801bdc8:	eba3 030b 	sub.w	r3, r3, fp
 801bdcc:	b289      	uxth	r1, r1
 801bdce:	920d      	str	r2, [sp, #52]	@ 0x34
 801bdd0:	9317      	str	r3, [sp, #92]	@ 0x5c
 801bdd2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801bdd4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801bdd6:	fa12 f383 	uxtah	r3, r2, r3
 801bdda:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801bddc:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801bde0:	3304      	adds	r3, #4
 801bde2:	9308      	str	r3, [sp, #32]
 801bde4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801bde6:	4543      	cmp	r3, r8
 801bde8:	f240 8167 	bls.w	801c0ba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3d2>
 801bdec:	9a02      	ldr	r2, [sp, #8]
 801bdee:	f8bd 3064 	ldrh.w	r3, [sp, #100]	@ 0x64
 801bdf2:	fbb5 f3f3 	udiv	r3, r5, r3
 801bdf6:	1ad3      	subs	r3, r2, r3
 801bdf8:	b29b      	uxth	r3, r3
 801bdfa:	9314      	str	r3, [sp, #80]	@ 0x50
 801bdfc:	9b08      	ldr	r3, [sp, #32]
 801bdfe:	9808      	ldr	r0, [sp, #32]
 801be00:	785a      	ldrb	r2, [r3, #1]
 801be02:	789b      	ldrb	r3, [r3, #2]
 801be04:	7800      	ldrb	r0, [r0, #0]
 801be06:	9010      	str	r0, [sp, #64]	@ 0x40
 801be08:	021b      	lsls	r3, r3, #8
 801be0a:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801be0e:	9a08      	ldr	r2, [sp, #32]
 801be10:	78d2      	ldrb	r2, [r2, #3]
 801be12:	4313      	orrs	r3, r2
 801be14:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 801be16:	3001      	adds	r0, #1
 801be18:	441a      	add	r2, r3
 801be1a:	9007      	str	r0, [sp, #28]
 801be1c:	1c50      	adds	r0, r2, #1
 801be1e:	9005      	str	r0, [sp, #20]
 801be20:	7852      	ldrb	r2, [r2, #1]
 801be22:	9811      	ldr	r0, [sp, #68]	@ 0x44
 801be24:	0212      	lsls	r2, r2, #8
 801be26:	5cc3      	ldrb	r3, [r0, r3]
 801be28:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801be2c:	431a      	orrs	r2, r3
 801be2e:	b293      	uxth	r3, r2
 801be30:	930b      	str	r3, [sp, #44]	@ 0x2c
 801be32:	2300      	movs	r3, #0
 801be34:	9309      	str	r3, [sp, #36]	@ 0x24
 801be36:	2301      	movs	r3, #1
 801be38:	9301      	str	r3, [sp, #4]
 801be3a:	9304      	str	r3, [sp, #16]
 801be3c:	2300      	movs	r3, #0
 801be3e:	f88b 2804 	strb.w	r2, [fp, #2052]	@ 0x804
 801be42:	9303      	str	r3, [sp, #12]
 801be44:	f04f 0e01 	mov.w	lr, #1
 801be48:	2d00      	cmp	r5, #0
 801be4a:	d07c      	beq.n	801bf46 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25e>
 801be4c:	45ae      	cmp	lr, r5
 801be4e:	d26b      	bcs.n	801bf28 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x240>
 801be50:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801be52:	eba5 050e 	sub.w	r5, r5, lr
 801be56:	4543      	cmp	r3, r8
 801be58:	b2ad      	uxth	r5, r5
 801be5a:	460c      	mov	r4, r1
 801be5c:	d802      	bhi.n	801be64 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x17c>
 801be5e:	e070      	b.n	801bf42 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x25a>
 801be60:	2b00      	cmp	r3, #0
 801be62:	d15c      	bne.n	801bf1e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x236>
 801be64:	9b05      	ldr	r3, [sp, #20]
 801be66:	9a04      	ldr	r2, [sp, #16]
 801be68:	785b      	ldrb	r3, [r3, #1]
 801be6a:	9904      	ldr	r1, [sp, #16]
 801be6c:	f1c2 0207 	rsb	r2, r2, #7
 801be70:	4093      	lsls	r3, r2
 801be72:	005b      	lsls	r3, r3, #1
 801be74:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801be78:	9b05      	ldr	r3, [sp, #20]
 801be7a:	781b      	ldrb	r3, [r3, #0]
 801be7c:	410b      	asrs	r3, r1
 801be7e:	3101      	adds	r1, #1
 801be80:	b2c9      	uxtb	r1, r1
 801be82:	2908      	cmp	r1, #8
 801be84:	9104      	str	r1, [sp, #16]
 801be86:	9905      	ldr	r1, [sp, #20]
 801be88:	bf0a      	itet	eq
 801be8a:	3102      	addeq	r1, #2
 801be8c:	3101      	addne	r1, #1
 801be8e:	9105      	streq	r1, [sp, #20]
 801be90:	b2db      	uxtb	r3, r3
 801be92:	bf0a      	itet	eq
 801be94:	2100      	moveq	r1, #0
 801be96:	9105      	strne	r1, [sp, #20]
 801be98:	9104      	streq	r1, [sp, #16]
 801be9a:	4313      	orrs	r3, r2
 801be9c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 801be9e:	b29a      	uxth	r2, r3
 801bea0:	4291      	cmp	r1, r2
 801bea2:	d30a      	bcc.n	801beba <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1d2>
 801bea4:	f88b 3804 	strb.w	r3, [fp, #2052]	@ 0x804
 801bea8:	2301      	movs	r3, #1
 801beaa:	9907      	ldr	r1, [sp, #28]
 801beac:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801beb0:	d30f      	bcc.n	801bed2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ea>
 801beb2:	2100      	movs	r1, #0
 801beb4:	9301      	str	r3, [sp, #4]
 801beb6:	9103      	str	r1, [sp, #12]
 801beb8:	e032      	b.n	801bf20 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x238>
 801beba:	9b07      	ldr	r3, [sp, #28]
 801bebc:	429a      	cmp	r2, r3
 801bebe:	d318      	bcc.n	801bef2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x20a>
 801bec0:	9b01      	ldr	r3, [sp, #4]
 801bec2:	f89b 1804 	ldrb.w	r1, [fp, #2052]	@ 0x804
 801bec6:	445b      	add	r3, fp
 801bec8:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801becc:	9b01      	ldr	r3, [sp, #4]
 801bece:	3301      	adds	r3, #1
 801bed0:	b29b      	uxth	r3, r3
 801bed2:	9907      	ldr	r1, [sp, #28]
 801bed4:	f89b 0804 	ldrb.w	r0, [fp, #2052]	@ 0x804
 801bed8:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bedc:	7108      	strb	r0, [r1, #4]
 801bede:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801bee0:	80c8      	strh	r0, [r1, #6]
 801bee2:	9801      	ldr	r0, [sp, #4]
 801bee4:	3001      	adds	r0, #1
 801bee6:	7148      	strb	r0, [r1, #5]
 801bee8:	9907      	ldr	r1, [sp, #28]
 801beea:	3101      	adds	r1, #1
 801beec:	b289      	uxth	r1, r1
 801beee:	9107      	str	r1, [sp, #28]
 801bef0:	e7df      	b.n	801beb2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1ca>
 801bef2:	eb0b 0382 	add.w	r3, fp, r2, lsl #2
 801bef6:	4611      	mov	r1, r2
 801bef8:	795b      	ldrb	r3, [r3, #5]
 801befa:	f603 0004 	addw	r0, r3, #2052	@ 0x804
 801befe:	4458      	add	r0, fp
 801bf00:	9e17      	ldr	r6, [sp, #92]	@ 0x5c
 801bf02:	4406      	add	r6, r0
 801bf04:	2e00      	cmp	r6, #0
 801bf06:	dd06      	ble.n	801bf16 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x22e>
 801bf08:	eb0b 0181 	add.w	r1, fp, r1, lsl #2
 801bf0c:	790e      	ldrb	r6, [r1, #4]
 801bf0e:	f800 6d01 	strb.w	r6, [r0, #-1]!
 801bf12:	88c9      	ldrh	r1, [r1, #6]
 801bf14:	e7f4      	b.n	801bf00 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x218>
 801bf16:	f88b 1804 	strb.w	r1, [fp, #2052]	@ 0x804
 801bf1a:	b29b      	uxth	r3, r3
 801bf1c:	e7c5      	b.n	801beaa <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x1c2>
 801bf1e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801bf20:	920b      	str	r2, [sp, #44]	@ 0x2c
 801bf22:	4621      	mov	r1, r4
 801bf24:	469e      	mov	lr, r3
 801bf26:	e78f      	b.n	801be48 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x160>
 801bf28:	9a03      	ldr	r2, [sp, #12]
 801bf2a:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801bf2e:	442a      	add	r2, r5
 801bf30:	ebae 0305 	sub.w	r3, lr, r5
 801bf34:	b292      	uxth	r2, r2
 801bf36:	b29b      	uxth	r3, r3
 801bf38:	9203      	str	r2, [sp, #12]
 801bf3a:	2500      	movs	r5, #0
 801bf3c:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801bf3e:	4542      	cmp	r2, r8
 801bf40:	d88e      	bhi.n	801be60 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x178>
 801bf42:	4621      	mov	r1, r4
 801bf44:	e74e      	b.n	801bde4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xfc>
 801bf46:	458e      	cmp	lr, r1
 801bf48:	bf29      	itett	cs
 801bf4a:	ebae 0301 	subcs.w	r3, lr, r1
 801bf4e:	eba1 040e 	subcc.w	r4, r1, lr
 801bf52:	b29b      	uxthcs	r3, r3
 801bf54:	910c      	strcs	r1, [sp, #48]	@ 0x30
 801bf56:	bf2f      	iteee	cs
 801bf58:	462c      	movcs	r4, r5
 801bf5a:	b2a4      	uxthcc	r4, r4
 801bf5c:	f8cd e030 	strcc.w	lr, [sp, #48]	@ 0x30
 801bf60:	462b      	movcc	r3, r5
 801bf62:	f04f 0900 	mov.w	r9, #0
 801bf66:	9a03      	ldr	r2, [sp, #12]
 801bf68:	980c      	ldr	r0, [sp, #48]	@ 0x30
 801bf6a:	444a      	add	r2, r9
 801bf6c:	4548      	cmp	r0, r9
 801bf6e:	b292      	uxth	r2, r2
 801bf70:	d074      	beq.n	801c05c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x374>
 801bf72:	445a      	add	r2, fp
 801bf74:	2004      	movs	r0, #4
 801bf76:	4605      	mov	r5, r0
 801bf78:	f892 2804 	ldrb.w	r2, [r2, #2052]	@ 0x804
 801bf7c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801bf7e:	fb15 0202 	smlabb	r2, r5, r2, r0
 801bf82:	9812      	ldr	r0, [sp, #72]	@ 0x48
 801bf84:	5880      	ldr	r0, [r0, r2]
 801bf86:	ea5f 6a10 	movs.w	sl, r0, lsr #24
 801bf8a:	d014      	beq.n	801bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801bf8c:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801bf90:	ea4f 2510 	mov.w	r5, r0, lsr #8
 801bf94:	d112      	bne.n	801bfbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bf96:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bf98:	2aff      	cmp	r2, #255	@ 0xff
 801bf9a:	d10f      	bne.n	801bfbc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2d4>
 801bf9c:	0942      	lsrs	r2, r0, #5
 801bf9e:	f425 65ff 	bic.w	r5, r5, #2040	@ 0x7f8
 801bfa2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801bfa6:	f025 0507 	bic.w	r5, r5, #7
 801bfaa:	4315      	orrs	r5, r2
 801bfac:	f3c0 00c4 	ubfx	r0, r0, #3, #5
 801bfb0:	4305      	orrs	r5, r0
 801bfb2:	f828 5019 	strh.w	r5, [r8, r9, lsl #1]
 801bfb6:	f109 0901 	add.w	r9, r9, #1
 801bfba:	e7d4      	b.n	801bf66 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x27e>
 801bfbc:	f838 c019 	ldrh.w	ip, [r8, r9, lsl #1]
 801bfc0:	ea4f 06ec 	mov.w	r6, ip, asr #3
 801bfc4:	f006 02fc 	and.w	r2, r6, #252	@ 0xfc
 801bfc8:	9215      	str	r2, [sp, #84]	@ 0x54
 801bfca:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801bfcc:	fb02 fa0a 	mul.w	sl, r2, sl
 801bfd0:	f10a 0201 	add.w	r2, sl, #1
 801bfd4:	eb02 222a 	add.w	r2, r2, sl, asr #8
 801bfd8:	ea4f 272c 	mov.w	r7, ip, asr #8
 801bfdc:	1212      	asrs	r2, r2, #8
 801bfde:	fa1f fa82 	uxth.w	sl, r2
 801bfe2:	f3c0 4607 	ubfx	r6, r0, #16, #8
 801bfe6:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801bfea:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801bfee:	43d2      	mvns	r2, r2
 801bff0:	b2d2      	uxtb	r2, r2
 801bff2:	fb16 f60a 	smulbb	r6, r6, sl
 801bff6:	fa5f fc8c 	uxtb.w	ip, ip
 801bffa:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801bffe:	b2c0      	uxtb	r0, r0
 801c000:	fb07 6702 	mla	r7, r7, r2, r6
 801c004:	ea4c 1c5c 	orr.w	ip, ip, ip, lsr #5
 801c008:	9e15      	ldr	r6, [sp, #84]	@ 0x54
 801c00a:	fb10 f00a 	smulbb	r0, r0, sl
 801c00e:	fb0c 0002 	mla	r0, ip, r2, r0
 801c012:	b2ed      	uxtb	r5, r5
 801c014:	b2bf      	uxth	r7, r7
 801c016:	fb15 f50a 	smulbb	r5, r5, sl
 801c01a:	b280      	uxth	r0, r0
 801c01c:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c020:	fb06 5602 	mla	r6, r6, r2, r5
 801c024:	1c7a      	adds	r2, r7, #1
 801c026:	1c45      	adds	r5, r0, #1
 801c028:	eb02 2717 	add.w	r7, r2, r7, lsr #8
 801c02c:	eb05 2510 	add.w	r5, r5, r0, lsr #8
 801c030:	b2b6      	uxth	r6, r6
 801c032:	f3c5 25c4 	ubfx	r5, r5, #11, #5
 801c036:	f407 4778 	and.w	r7, r7, #63488	@ 0xf800
 801c03a:	432f      	orrs	r7, r5
 801c03c:	1c75      	adds	r5, r6, #1
 801c03e:	eb05 2516 	add.w	r5, r5, r6, lsr #8
 801c042:	096d      	lsrs	r5, r5, #5
 801c044:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801c048:	432f      	orrs	r7, r5
 801c04a:	f828 7019 	strh.w	r7, [r8, r9, lsl #1]
 801c04e:	e7b2      	b.n	801bfb6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x2ce>
 801c050:	20002f54 	.word	0x20002f54
 801c054:	20002f4e 	.word	0x20002f4e
 801c058:	fffff7fb 	.word	0xfffff7fb
 801c05c:	9203      	str	r2, [sp, #12]
 801c05e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c060:	458e      	cmp	lr, r1
 801c062:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c066:	f4ff af68 	bcc.w	801bf3a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x252>
 801c06a:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 801c06c:	9906      	ldr	r1, [sp, #24]
 801c06e:	8812      	ldrh	r2, [r2, #0]
 801c070:	1a52      	subs	r2, r2, r1
 801c072:	eb08 0842 	add.w	r8, r8, r2, lsl #1
 801c076:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c078:	9914      	ldr	r1, [sp, #80]	@ 0x50
 801c07a:	3201      	adds	r2, #1
 801c07c:	428a      	cmp	r2, r1
 801c07e:	9209      	str	r2, [sp, #36]	@ 0x24
 801c080:	d111      	bne.n	801c0a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3be>
 801c082:	f8bd 5068 	ldrh.w	r5, [sp, #104]	@ 0x68
 801c086:	f8bd 9060 	ldrh.w	r9, [sp, #96]	@ 0x60
 801c08a:	9b06      	ldr	r3, [sp, #24]
 801c08c:	eba5 0509 	sub.w	r5, r5, r9
 801c090:	b2ad      	uxth	r5, r5
 801c092:	2d00      	cmp	r5, #0
 801c094:	bf08      	it	eq
 801c096:	4619      	moveq	r1, r3
 801c098:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c09a:	bf18      	it	ne
 801c09c:	2100      	movne	r1, #0
 801c09e:	3301      	adds	r3, #1
 801c0a0:	930d      	str	r3, [sp, #52]	@ 0x34
 801c0a2:	b289      	uxth	r1, r1
 801c0a4:	e695      	b.n	801bdd2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xea>
 801c0a6:	f8bd 4018 	ldrh.w	r4, [sp, #24]
 801c0aa:	f8bd 5064 	ldrh.w	r5, [sp, #100]	@ 0x64
 801c0ae:	1b2d      	subs	r5, r5, r4
 801c0b0:	b2ad      	uxth	r5, r5
 801c0b2:	2d00      	cmp	r5, #0
 801c0b4:	bf18      	it	ne
 801c0b6:	2400      	movne	r4, #0
 801c0b8:	e740      	b.n	801bf3c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x254>
 801c0ba:	4b04      	ldr	r3, [pc, #16]	@ (801c0cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW916blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x3e4>)
 801c0bc:	6818      	ldr	r0, [r3, #0]
 801c0be:	6803      	ldr	r3, [r0, #0]
 801c0c0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c0c2:	4798      	blx	r3
 801c0c4:	b01d      	add	sp, #116	@ 0x74
 801c0c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c0ca:	bf00      	nop
 801c0cc:	20002f54 	.word	0x20002f54

0801c0d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 801c0d0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c0d4:	b09f      	sub	sp, #124	@ 0x7c
 801c0d6:	e9cd 1213 	strd	r1, r2, [sp, #76]	@ 0x4c
 801c0da:	f89d 20a4 	ldrb.w	r2, [sp, #164]	@ 0xa4
 801c0de:	920a      	str	r2, [sp, #40]	@ 0x28
 801c0e0:	461d      	mov	r5, r3
 801c0e2:	4604      	mov	r4, r0
 801c0e4:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801c0e6:	2a00      	cmp	r2, #0
 801c0e8:	f000 81fa 	beq.w	801c4e0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x410>
 801c0ec:	6828      	ldr	r0, [r5, #0]
 801c0ee:	6869      	ldr	r1, [r5, #4]
 801c0f0:	aa1a      	add	r2, sp, #104	@ 0x68
 801c0f2:	c203      	stmia	r2!, {r0, r1}
 801c0f4:	6818      	ldr	r0, [r3, #0]
 801c0f6:	6859      	ldr	r1, [r3, #4]
 801c0f8:	aa1c      	add	r2, sp, #112	@ 0x70
 801c0fa:	c203      	stmia	r2!, {r0, r1}
 801c0fc:	a81a      	add	r0, sp, #104	@ 0x68
 801c0fe:	f7f7 ff11 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c102:	4629      	mov	r1, r5
 801c104:	a81c      	add	r0, sp, #112	@ 0x70
 801c106:	f7f7 ff35 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c10a:	f9bd 306c 	ldrsh.w	r3, [sp, #108]	@ 0x6c
 801c10e:	f9bd 606e 	ldrsh.w	r6, [sp, #110]	@ 0x6e
 801c112:	f9bd 7076 	ldrsh.w	r7, [sp, #118]	@ 0x76
 801c116:	f5b3 6f80 	cmp.w	r3, #1024	@ 0x400
 801c11a:	bfd7      	itett	le
 801c11c:	b29a      	uxthle	r2, r3
 801c11e:	2201      	movgt	r2, #1
 801c120:	f44f 6180 	movle.w	r1, #1024	@ 0x400
 801c124:	fb91 f2f2 	sdivle	r2, r1, r2
 801c128:	9201      	str	r2, [sp, #4]
 801c12a:	9801      	ldr	r0, [sp, #4]
 801c12c:	f9bd 2072 	ldrsh.w	r2, [sp, #114]	@ 0x72
 801c130:	fb92 f0f0 	sdiv	r0, r2, r0
 801c134:	b280      	uxth	r0, r0
 801c136:	9010      	str	r0, [sp, #64]	@ 0x40
 801c138:	9901      	ldr	r1, [sp, #4]
 801c13a:	9801      	ldr	r0, [sp, #4]
 801c13c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 801c13e:	440e      	add	r6, r1
 801c140:	fb05 2510 	mls	r5, r5, r0, r2
 801c144:	fb15 f503 	smulbb	r5, r5, r3
 801c148:	3e01      	subs	r6, #1
 801c14a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 801c14e:	fb96 f6f1 	sdiv	r6, r6, r1
 801c152:	f8bd 1070 	ldrh.w	r1, [sp, #112]	@ 0x70
 801c156:	440d      	add	r5, r1
 801c158:	4419      	add	r1, r3
 801c15a:	f8bd 306a 	ldrh.w	r3, [sp, #106]	@ 0x6a
 801c15e:	f8ad 1070 	strh.w	r1, [sp, #112]	@ 0x70
 801c162:	441a      	add	r2, r3
 801c164:	f9bd 3074 	ldrsh.w	r3, [sp, #116]	@ 0x74
 801c168:	9304      	str	r3, [sp, #16]
 801c16a:	4b96      	ldr	r3, [pc, #600]	@ (801c3c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f4>)
 801c16c:	f8ad 2072 	strh.w	r2, [sp, #114]	@ 0x72
 801c170:	6818      	ldr	r0, [r3, #0]
 801c172:	6803      	ldr	r3, [r0, #0]
 801c174:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c176:	4798      	blx	r3
 801c178:	4b93      	ldr	r3, [pc, #588]	@ (801c3c8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2f8>)
 801c17a:	f9bd 1072 	ldrsh.w	r1, [sp, #114]	@ 0x72
 801c17e:	881a      	ldrh	r2, [r3, #0]
 801c180:	f9bd c070 	ldrsh.w	ip, [sp, #112]	@ 0x70
 801c184:	9318      	str	r3, [sp, #96]	@ 0x60
 801c186:	fb02 c101 	mla	r1, r2, r1, ip
 801c18a:	eb00 0b41 	add.w	fp, r0, r1, lsl #1
 801c18e:	4357      	muls	r7, r2
 801c190:	eb0b 0247 	add.w	r2, fp, r7, lsl #1
 801c194:	3601      	adds	r6, #1
 801c196:	920b      	str	r2, [sp, #44]	@ 0x2c
 801c198:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c19a:	4b8c      	ldr	r3, [pc, #560]	@ (801c3cc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2fc>)
 801c19c:	b2b6      	uxth	r6, r6
 801c19e:	eb02 0686 	add.w	r6, r2, r6, lsl #2
 801c1a2:	1d32      	adds	r2, r6, #4
 801c1a4:	9206      	str	r2, [sp, #24]
 801c1a6:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801c1a8:	43d2      	mvns	r2, r2
 801c1aa:	b2d2      	uxtb	r2, r2
 801c1ac:	b2ad      	uxth	r5, r5
 801c1ae:	9215      	str	r2, [sp, #84]	@ 0x54
 801c1b0:	9a04      	ldr	r2, [sp, #16]
 801c1b2:	2d00      	cmp	r5, #0
 801c1b4:	bf0c      	ite	eq
 801c1b6:	4611      	moveq	r1, r2
 801c1b8:	2100      	movne	r1, #0
 801c1ba:	2200      	movs	r2, #0
 801c1bc:	1b1b      	subs	r3, r3, r4
 801c1be:	b289      	uxth	r1, r1
 801c1c0:	920d      	str	r2, [sp, #52]	@ 0x34
 801c1c2:	9319      	str	r3, [sp, #100]	@ 0x64
 801c1c4:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 801c1c6:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c1c8:	fa12 f383 	uxtah	r3, r2, r3
 801c1cc:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 801c1ce:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 801c1d2:	3304      	adds	r3, #4
 801c1d4:	9307      	str	r3, [sp, #28]
 801c1d6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c1d8:	455b      	cmp	r3, fp
 801c1da:	f240 817c 	bls.w	801c4d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x406>
 801c1de:	9a01      	ldr	r2, [sp, #4]
 801c1e0:	f8bd 306c 	ldrh.w	r3, [sp, #108]	@ 0x6c
 801c1e4:	fbb5 f3f3 	udiv	r3, r5, r3
 801c1e8:	1ad3      	subs	r3, r2, r3
 801c1ea:	b29b      	uxth	r3, r3
 801c1ec:	9316      	str	r3, [sp, #88]	@ 0x58
 801c1ee:	9b07      	ldr	r3, [sp, #28]
 801c1f0:	9807      	ldr	r0, [sp, #28]
 801c1f2:	785a      	ldrb	r2, [r3, #1]
 801c1f4:	789b      	ldrb	r3, [r3, #2]
 801c1f6:	7800      	ldrb	r0, [r0, #0]
 801c1f8:	9011      	str	r0, [sp, #68]	@ 0x44
 801c1fa:	021b      	lsls	r3, r3, #8
 801c1fc:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 801c200:	9a07      	ldr	r2, [sp, #28]
 801c202:	78d2      	ldrb	r2, [r2, #3]
 801c204:	4313      	orrs	r3, r2
 801c206:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 801c208:	3001      	adds	r0, #1
 801c20a:	441a      	add	r2, r3
 801c20c:	9005      	str	r0, [sp, #20]
 801c20e:	1c50      	adds	r0, r2, #1
 801c210:	9003      	str	r0, [sp, #12]
 801c212:	7852      	ldrb	r2, [r2, #1]
 801c214:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801c216:	0212      	lsls	r2, r2, #8
 801c218:	5cc3      	ldrb	r3, [r0, r3]
 801c21a:	f402 72ff 	and.w	r2, r2, #510	@ 0x1fe
 801c21e:	431a      	orrs	r2, r3
 801c220:	b293      	uxth	r3, r2
 801c222:	930c      	str	r3, [sp, #48]	@ 0x30
 801c224:	2300      	movs	r3, #0
 801c226:	f884 2804 	strb.w	r2, [r4, #2052]	@ 0x804
 801c22a:	9308      	str	r3, [sp, #32]
 801c22c:	461a      	mov	r2, r3
 801c22e:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 801c232:	930e      	str	r3, [sp, #56]	@ 0x38
 801c234:	f04f 0801 	mov.w	r8, #1
 801c238:	f8bd 3054 	ldrh.w	r3, [sp, #84]	@ 0x54
 801c23c:	f8cd 8008 	str.w	r8, [sp, #8]
 801c240:	46c4      	mov	ip, r8
 801c242:	930f      	str	r3, [sp, #60]	@ 0x3c
 801c244:	2d00      	cmp	r5, #0
 801c246:	d07c      	beq.n	801c342 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x272>
 801c248:	45ac      	cmp	ip, r5
 801c24a:	d26c      	bcs.n	801c326 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x256>
 801c24c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801c24e:	eba5 050c 	sub.w	r5, r5, ip
 801c252:	455b      	cmp	r3, fp
 801c254:	b2ad      	uxth	r5, r5
 801c256:	4608      	mov	r0, r1
 801c258:	d802      	bhi.n	801c260 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 801c25a:	e070      	b.n	801c33e <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x26e>
 801c25c:	2b00      	cmp	r3, #0
 801c25e:	d15c      	bne.n	801c31a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 801c260:	9b03      	ldr	r3, [sp, #12]
 801c262:	9a02      	ldr	r2, [sp, #8]
 801c264:	785b      	ldrb	r3, [r3, #1]
 801c266:	9902      	ldr	r1, [sp, #8]
 801c268:	f1c2 0207 	rsb	r2, r2, #7
 801c26c:	4093      	lsls	r3, r2
 801c26e:	005b      	lsls	r3, r3, #1
 801c270:	f403 72ff 	and.w	r2, r3, #510	@ 0x1fe
 801c274:	9b03      	ldr	r3, [sp, #12]
 801c276:	781b      	ldrb	r3, [r3, #0]
 801c278:	410b      	asrs	r3, r1
 801c27a:	3101      	adds	r1, #1
 801c27c:	b2c9      	uxtb	r1, r1
 801c27e:	2908      	cmp	r1, #8
 801c280:	9102      	str	r1, [sp, #8]
 801c282:	9903      	ldr	r1, [sp, #12]
 801c284:	bf0a      	itet	eq
 801c286:	3102      	addeq	r1, #2
 801c288:	3101      	addne	r1, #1
 801c28a:	9103      	streq	r1, [sp, #12]
 801c28c:	b2db      	uxtb	r3, r3
 801c28e:	bf0a      	itet	eq
 801c290:	2100      	moveq	r1, #0
 801c292:	9103      	strne	r1, [sp, #12]
 801c294:	9102      	streq	r1, [sp, #8]
 801c296:	4313      	orrs	r3, r2
 801c298:	9911      	ldr	r1, [sp, #68]	@ 0x44
 801c29a:	b29a      	uxth	r2, r3
 801c29c:	4291      	cmp	r1, r2
 801c29e:	d30a      	bcc.n	801c2b6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1e6>
 801c2a0:	f884 3804 	strb.w	r3, [r4, #2052]	@ 0x804
 801c2a4:	2301      	movs	r3, #1
 801c2a6:	9905      	ldr	r1, [sp, #20]
 801c2a8:	f5b1 7f00 	cmp.w	r1, #512	@ 0x200
 801c2ac:	d30f      	bcc.n	801c2ce <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1fe>
 801c2ae:	2100      	movs	r1, #0
 801c2b0:	4698      	mov	r8, r3
 801c2b2:	9100      	str	r1, [sp, #0]
 801c2b4:	e032      	b.n	801c31c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24c>
 801c2b6:	9b05      	ldr	r3, [sp, #20]
 801c2b8:	429a      	cmp	r2, r3
 801c2ba:	d318      	bcc.n	801c2ee <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x21e>
 801c2bc:	eb04 0308 	add.w	r3, r4, r8
 801c2c0:	f894 1804 	ldrb.w	r1, [r4, #2052]	@ 0x804
 801c2c4:	f883 1804 	strb.w	r1, [r3, #2052]	@ 0x804
 801c2c8:	f108 0301 	add.w	r3, r8, #1
 801c2cc:	b29b      	uxth	r3, r3
 801c2ce:	9905      	ldr	r1, [sp, #20]
 801c2d0:	f894 6804 	ldrb.w	r6, [r4, #2052]	@ 0x804
 801c2d4:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c2d8:	710e      	strb	r6, [r1, #4]
 801c2da:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801c2dc:	80ce      	strh	r6, [r1, #6]
 801c2de:	f108 0601 	add.w	r6, r8, #1
 801c2e2:	714e      	strb	r6, [r1, #5]
 801c2e4:	9905      	ldr	r1, [sp, #20]
 801c2e6:	3101      	adds	r1, #1
 801c2e8:	b289      	uxth	r1, r1
 801c2ea:	9105      	str	r1, [sp, #20]
 801c2ec:	e7df      	b.n	801c2ae <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1de>
 801c2ee:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 801c2f2:	4611      	mov	r1, r2
 801c2f4:	795b      	ldrb	r3, [r3, #5]
 801c2f6:	f603 0604 	addw	r6, r3, #2052	@ 0x804
 801c2fa:	4426      	add	r6, r4
 801c2fc:	9f19      	ldr	r7, [sp, #100]	@ 0x64
 801c2fe:	4437      	add	r7, r6
 801c300:	2f00      	cmp	r7, #0
 801c302:	dd06      	ble.n	801c312 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x242>
 801c304:	eb04 0181 	add.w	r1, r4, r1, lsl #2
 801c308:	790f      	ldrb	r7, [r1, #4]
 801c30a:	f806 7d01 	strb.w	r7, [r6, #-1]!
 801c30e:	88c9      	ldrh	r1, [r1, #6]
 801c310:	e7f4      	b.n	801c2fc <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x22c>
 801c312:	f884 1804 	strb.w	r1, [r4, #2052]	@ 0x804
 801c316:	b29b      	uxth	r3, r3
 801c318:	e7c5      	b.n	801c2a6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d6>
 801c31a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801c31c:	920c      	str	r2, [sp, #48]	@ 0x30
 801c31e:	4601      	mov	r1, r0
 801c320:	9a00      	ldr	r2, [sp, #0]
 801c322:	469c      	mov	ip, r3
 801c324:	e78e      	b.n	801c244 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x174>
 801c326:	1957      	adds	r7, r2, r5
 801c328:	ebac 0305 	sub.w	r3, ip, r5
 801c32c:	b2ba      	uxth	r2, r7
 801c32e:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c332:	9200      	str	r2, [sp, #0]
 801c334:	b29b      	uxth	r3, r3
 801c336:	2500      	movs	r5, #0
 801c338:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801c33a:	455a      	cmp	r2, fp
 801c33c:	d88e      	bhi.n	801c25c <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x18c>
 801c33e:	4601      	mov	r1, r0
 801c340:	e749      	b.n	801c1d6 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x106>
 801c342:	458c      	cmp	ip, r1
 801c344:	bf2c      	ite	cs
 801c346:	4628      	movcs	r0, r5
 801c348:	462b      	movcc	r3, r5
 801c34a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 801c34c:	bf27      	ittee	cs
 801c34e:	9109      	strcs	r1, [sp, #36]	@ 0x24
 801c350:	ebac 0301 	subcs.w	r3, ip, r1
 801c354:	eba1 000c 	subcc.w	r0, r1, ip
 801c358:	f8cd c024 	strcc.w	ip, [sp, #36]	@ 0x24
 801c35c:	bf2c      	ite	cs
 801c35e:	b29b      	uxthcs	r3, r3
 801c360:	b280      	uxthcc	r0, r0
 801c362:	2dff      	cmp	r5, #255	@ 0xff
 801c364:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 801c366:	eb02 0705 	add.w	r7, r2, r5
 801c36a:	b2bd      	uxth	r5, r7
 801c36c:	9500      	str	r5, [sp, #0]
 801c36e:	d12f      	bne.n	801c3d0 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x300>
 801c370:	465e      	mov	r6, fp
 801c372:	9d00      	ldr	r5, [sp, #0]
 801c374:	42aa      	cmp	r2, r5
 801c376:	f040 8084 	bne.w	801c482 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3b2>
 801c37a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801c37c:	458c      	cmp	ip, r1
 801c37e:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c382:	d3d8      	bcc.n	801c336 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x266>
 801c384:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 801c386:	9904      	ldr	r1, [sp, #16]
 801c388:	8812      	ldrh	r2, [r2, #0]
 801c38a:	1a52      	subs	r2, r2, r1
 801c38c:	eb0b 0b42 	add.w	fp, fp, r2, lsl #1
 801c390:	9a08      	ldr	r2, [sp, #32]
 801c392:	9916      	ldr	r1, [sp, #88]	@ 0x58
 801c394:	3201      	adds	r2, #1
 801c396:	428a      	cmp	r2, r1
 801c398:	9208      	str	r2, [sp, #32]
 801c39a:	f040 8092 	bne.w	801c4c2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x3f2>
 801c39e:	f8bd 5070 	ldrh.w	r5, [sp, #112]	@ 0x70
 801c3a2:	f8bd c068 	ldrh.w	ip, [sp, #104]	@ 0x68
 801c3a6:	9b04      	ldr	r3, [sp, #16]
 801c3a8:	eba5 050c 	sub.w	r5, r5, ip
 801c3ac:	b2ad      	uxth	r5, r5
 801c3ae:	2d00      	cmp	r5, #0
 801c3b0:	bf08      	it	eq
 801c3b2:	4619      	moveq	r1, r3
 801c3b4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801c3b6:	bf18      	it	ne
 801c3b8:	2100      	movne	r1, #0
 801c3ba:	3301      	adds	r3, #1
 801c3bc:	930d      	str	r3, [sp, #52]	@ 0x34
 801c3be:	b289      	uxth	r1, r1
 801c3c0:	e700      	b.n	801c1c4 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 801c3c2:	bf00      	nop
 801c3c4:	20002f54 	.word	0x20002f54
 801c3c8:	20002f4e 	.word	0x20002f4e
 801c3cc:	fffff7fb 	.word	0xfffff7fb
 801c3d0:	46d9      	mov	r9, fp
 801c3d2:	9d00      	ldr	r5, [sp, #0]
 801c3d4:	42aa      	cmp	r2, r5
 801c3d6:	d0d0      	beq.n	801c37a <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2aa>
 801c3d8:	1c55      	adds	r5, r2, #1
 801c3da:	4422      	add	r2, r4
 801c3dc:	9517      	str	r5, [sp, #92]	@ 0x5c
 801c3de:	f892 e804 	ldrb.w	lr, [r2, #2052]	@ 0x804
 801c3e2:	9a06      	ldr	r2, [sp, #24]
 801c3e4:	eb0e 0e4e 	add.w	lr, lr, lr, lsl #1
 801c3e8:	4472      	add	r2, lr
 801c3ea:	9212      	str	r2, [sp, #72]	@ 0x48
 801c3ec:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c3ee:	f8b9 2000 	ldrh.w	r2, [r9]
 801c3f2:	f897 a002 	ldrb.w	sl, [r7, #2]
 801c3f6:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c3f8:	1216      	asrs	r6, r2, #8
 801c3fa:	fb1a fa07 	smulbb	sl, sl, r7
 801c3fe:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801c402:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c404:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801c408:	fb06 a607 	mla	r6, r6, r7, sl
 801c40c:	9f12      	ldr	r7, [sp, #72]	@ 0x48
 801c40e:	f897 a001 	ldrb.w	sl, [r7, #1]
 801c412:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c414:	10d5      	asrs	r5, r2, #3
 801c416:	fb1a fa07 	smulbb	sl, sl, r7
 801c41a:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801c41e:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c420:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801c424:	fb05 a507 	mla	r5, r5, r7, sl
 801c428:	9f06      	ldr	r7, [sp, #24]
 801c42a:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801c42e:	9f0e      	ldr	r7, [sp, #56]	@ 0x38
 801c430:	00d2      	lsls	r2, r2, #3
 801c432:	fb1e fe07 	smulbb	lr, lr, r7
 801c436:	b2d2      	uxtb	r2, r2
 801c438:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801c43a:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c43e:	b2b6      	uxth	r6, r6
 801c440:	fb02 e207 	mla	r2, r2, r7, lr
 801c444:	b292      	uxth	r2, r2
 801c446:	b2ad      	uxth	r5, r5
 801c448:	f106 0a01 	add.w	sl, r6, #1
 801c44c:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801c450:	f102 0e01 	add.w	lr, r2, #1
 801c454:	f105 0a01 	add.w	sl, r5, #1
 801c458:	eb0e 2e12 	add.w	lr, lr, r2, lsr #8
 801c45c:	eb0a 2a15 	add.w	sl, sl, r5, lsr #8
 801c460:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801c464:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801c468:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801c46c:	ea4e 0606 	orr.w	r6, lr, r6
 801c470:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801c474:	ea46 060a 	orr.w	r6, r6, sl
 801c478:	f829 6b02 	strh.w	r6, [r9], #2
 801c47c:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801c480:	e7a7      	b.n	801c3d2 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x302>
 801c482:	f102 0e01 	add.w	lr, r2, #1
 801c486:	4422      	add	r2, r4
 801c488:	9f06      	ldr	r7, [sp, #24]
 801c48a:	f892 5804 	ldrb.w	r5, [r2, #2052]	@ 0x804
 801c48e:	9a06      	ldr	r2, [sp, #24]
 801c490:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801c494:	eb02 0a05 	add.w	sl, r2, r5
 801c498:	4a13      	ldr	r2, [pc, #76]	@ (801c4e8 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x418>)
 801c49a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 801c49e:	ea02 2909 	and.w	r9, r2, r9, lsl #8
 801c4a2:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801c4a6:	00d2      	lsls	r2, r2, #3
 801c4a8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801c4ac:	ea49 0202 	orr.w	r2, r9, r2
 801c4b0:	f817 9005 	ldrb.w	r9, [r7, r5]
 801c4b4:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 801c4b8:	f826 2b02 	strh.w	r2, [r6], #2
 801c4bc:	fa1f f28e 	uxth.w	r2, lr
 801c4c0:	e757      	b.n	801c372 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a2>
 801c4c2:	f8bd 0010 	ldrh.w	r0, [sp, #16]
 801c4c6:	f8bd 506c 	ldrh.w	r5, [sp, #108]	@ 0x6c
 801c4ca:	1a2d      	subs	r5, r5, r0
 801c4cc:	b2ad      	uxth	r5, r5
 801c4ce:	2d00      	cmp	r5, #0
 801c4d0:	bf18      	it	ne
 801c4d2:	2000      	movne	r0, #0
 801c4d4:	e730      	b.n	801c338 <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x268>
 801c4d6:	4b05      	ldr	r3, [pc, #20]	@ (801c4ec <_ZN8touchgfx8LCD16bpp19DecompressorL8_LZW914blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x41c>)
 801c4d8:	6818      	ldr	r0, [r3, #0]
 801c4da:	6803      	ldr	r3, [r0, #0]
 801c4dc:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c4de:	4798      	blx	r3
 801c4e0:	b01f      	add	sp, #124	@ 0x7c
 801c4e2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c4e6:	bf00      	nop
 801c4e8:	fffff800 	.word	0xfffff800
 801c4ec:	20002f54 	.word	0x20002f54

0801c4f0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss>:
 801c4f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c4f4:	b091      	sub	sp, #68	@ 0x44
 801c4f6:	469b      	mov	fp, r3
 801c4f8:	f10d 0828 	add.w	r8, sp, #40	@ 0x28
 801c4fc:	4616      	mov	r6, r2
 801c4fe:	f9bd 906c 	ldrsh.w	r9, [sp, #108]	@ 0x6c
 801c502:	f9b3 2000 	ldrsh.w	r2, [r3]
 801c506:	f9bd 7070 	ldrsh.w	r7, [sp, #112]	@ 0x70
 801c50a:	f9b3 3002 	ldrsh.w	r3, [r3, #2]
 801c50e:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c512:	4604      	mov	r4, r0
 801c514:	460d      	mov	r5, r1
 801c516:	4640      	mov	r0, r8
 801c518:	4659      	mov	r1, fp
 801c51a:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c51e:	f8ad 902c 	strh.w	r9, [sp, #44]	@ 0x2c
 801c522:	f8ad 702e 	strh.w	r7, [sp, #46]	@ 0x2e
 801c526:	f7f4 fb39 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 801c52a:	4631      	mov	r1, r6
 801c52c:	4640      	mov	r0, r8
 801c52e:	f7f4 fb35 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 801c532:	4b74      	ldr	r3, [pc, #464]	@ (801c704 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x214>)
 801c534:	8818      	ldrh	r0, [r3, #0]
 801c536:	4b74      	ldr	r3, [pc, #464]	@ (801c708 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x218>)
 801c538:	8819      	ldrh	r1, [r3, #0]
 801c53a:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c53e:	2b00      	cmp	r3, #0
 801c540:	b202      	sxth	r2, r0
 801c542:	b20e      	sxth	r6, r1
 801c544:	da07      	bge.n	801c556 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x66>
 801c546:	f8bd c02c 	ldrh.w	ip, [sp, #44]	@ 0x2c
 801c54a:	4463      	add	r3, ip
 801c54c:	f8ad 302c 	strh.w	r3, [sp, #44]	@ 0x2c
 801c550:	2300      	movs	r3, #0
 801c552:	f8ad 3028 	strh.w	r3, [sp, #40]	@ 0x28
 801c556:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 801c55a:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801c55e:	1ad2      	subs	r2, r2, r3
 801c560:	4594      	cmp	ip, r2
 801c562:	bfc4      	itt	gt
 801c564:	1ac2      	subgt	r2, r0, r3
 801c566:	f8ad 202c 	strhgt.w	r2, [sp, #44]	@ 0x2c
 801c56a:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c56e:	2a00      	cmp	r2, #0
 801c570:	da07      	bge.n	801c582 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x92>
 801c572:	f8bd c02e 	ldrh.w	ip, [sp, #46]	@ 0x2e
 801c576:	4462      	add	r2, ip
 801c578:	f8ad 202e 	strh.w	r2, [sp, #46]	@ 0x2e
 801c57c:	2200      	movs	r2, #0
 801c57e:	f8ad 202a 	strh.w	r2, [sp, #42]	@ 0x2a
 801c582:	f9bd a02a 	ldrsh.w	sl, [sp, #42]	@ 0x2a
 801c586:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c58a:	eba6 060a 	sub.w	r6, r6, sl
 801c58e:	42b2      	cmp	r2, r6
 801c590:	bfc4      	itt	gt
 801c592:	eba1 020a 	subgt.w	r2, r1, sl
 801c596:	f8ad 202e 	strhgt.w	r2, [sp, #46]	@ 0x2e
 801c59a:	4a5c      	ldr	r2, [pc, #368]	@ (801c70c <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x21c>)
 801c59c:	7812      	ldrb	r2, [r2, #0]
 801c59e:	b9a2      	cbnz	r2, 801c5ca <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xda>
 801c5a0:	f9bd 602c 	ldrsh.w	r6, [sp, #44]	@ 0x2c
 801c5a4:	4286      	cmp	r6, r0
 801c5a6:	4640      	mov	r0, r8
 801c5a8:	9303      	str	r3, [sp, #12]
 801c5aa:	bf14      	ite	ne
 801c5ac:	2600      	movne	r6, #0
 801c5ae:	2601      	moveq	r6, #1
 801c5b0:	f7f4 fb37 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c5b4:	9b03      	ldr	r3, [sp, #12]
 801c5b6:	b160      	cbz	r0, 801c5d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xe2>
 801c5b8:	2300      	movs	r3, #0
 801c5ba:	8023      	strh	r3, [r4, #0]
 801c5bc:	8063      	strh	r3, [r4, #2]
 801c5be:	80a3      	strh	r3, [r4, #4]
 801c5c0:	4620      	mov	r0, r4
 801c5c2:	80e3      	strh	r3, [r4, #6]
 801c5c4:	b011      	add	sp, #68	@ 0x44
 801c5c6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801c5ca:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c5ce:	428e      	cmp	r6, r1
 801c5d0:	e7e9      	b.n	801c5a6 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xb6>
 801c5d2:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 801c5d6:	9205      	str	r2, [sp, #20]
 801c5d8:	f9bd 202e 	ldrsh.w	r2, [sp, #46]	@ 0x2e
 801c5dc:	9206      	str	r2, [sp, #24]
 801c5de:	f8bb 2000 	ldrh.w	r2, [fp]
 801c5e2:	900e      	str	r0, [sp, #56]	@ 0x38
 801c5e4:	1a9b      	subs	r3, r3, r2
 801c5e6:	b21b      	sxth	r3, r3
 801c5e8:	9303      	str	r3, [sp, #12]
 801c5ea:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 801c5ee:	f8ad 903c 	strh.w	r9, [sp, #60]	@ 0x3c
 801c5f2:	ebaa 0a03 	sub.w	sl, sl, r3
 801c5f6:	fa0f f38a 	sxth.w	r3, sl
 801c5fa:	9304      	str	r3, [sp, #16]
 801c5fc:	9b03      	ldr	r3, [sp, #12]
 801c5fe:	f8ad 3030 	strh.w	r3, [sp, #48]	@ 0x30
 801c602:	9b04      	ldr	r3, [sp, #16]
 801c604:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801c608:	9b05      	ldr	r3, [sp, #20]
 801c60a:	f8ad 3034 	strh.w	r3, [sp, #52]	@ 0x34
 801c60e:	a90e      	add	r1, sp, #56	@ 0x38
 801c610:	9b06      	ldr	r3, [sp, #24]
 801c612:	f8ad 3036 	strh.w	r3, [sp, #54]	@ 0x36
 801c616:	a80c      	add	r0, sp, #48	@ 0x30
 801c618:	f8ad 703e 	strh.w	r7, [sp, #62]	@ 0x3e
 801c61c:	f7f7 fcaa 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c620:	4640      	mov	r0, r8
 801c622:	f7f7 fc7f 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c626:	a80e      	add	r0, sp, #56	@ 0x38
 801c628:	f7f7 fc7c 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c62c:	4b38      	ldr	r3, [pc, #224]	@ (801c710 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x220>)
 801c62e:	f9bd a03c 	ldrsh.w	sl, [sp, #60]	@ 0x3c
 801c632:	881b      	ldrh	r3, [r3, #0]
 801c634:	9307      	str	r3, [sp, #28]
 801c636:	682b      	ldr	r3, [r5, #0]
 801c638:	f8df b0d8 	ldr.w	fp, [pc, #216]	@ 801c714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c63c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c63e:	4628      	mov	r0, r5
 801c640:	4798      	blx	r3
 801c642:	f8bd 5032 	ldrh.w	r5, [sp, #50]	@ 0x32
 801c646:	f9bd 3030 	ldrsh.w	r3, [sp, #48]	@ 0x30
 801c64a:	4681      	mov	r9, r0
 801c64c:	fb1a 3305 	smlabb	r3, sl, r5, r3
 801c650:	f8db 0000 	ldr.w	r0, [fp]
 801c654:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 801c656:	eb05 0543 	add.w	r5, r5, r3, lsl #1
 801c65a:	6803      	ldr	r3, [r0, #0]
 801c65c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 801c65e:	4798      	blx	r3
 801c660:	4607      	mov	r7, r0
 801c662:	f8db 0000 	ldr.w	r0, [fp]
 801c666:	f9bd 1028 	ldrsh.w	r1, [sp, #40]	@ 0x28
 801c66a:	6803      	ldr	r3, [r0, #0]
 801c66c:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801c670:	9109      	str	r1, [sp, #36]	@ 0x24
 801c672:	9208      	str	r2, [sp, #32]
 801c674:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c676:	4798      	blx	r3
 801c678:	f010 0f01 	tst.w	r0, #1
 801c67c:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801c680:	d012      	beq.n	801c6a8 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1b8>
 801c682:	f8db 0000 	ldr.w	r0, [fp]
 801c686:	f9bd 2034 	ldrsh.w	r2, [sp, #52]	@ 0x34
 801c68a:	6803      	ldr	r3, [r0, #0]
 801c68c:	9200      	str	r2, [sp, #0]
 801c68e:	6ede      	ldr	r6, [r3, #108]	@ 0x6c
 801c690:	e898 0006 	ldmia.w	r8, {r1, r2}
 801c694:	462b      	mov	r3, r5
 801c696:	47b0      	blx	r6
 801c698:	9b03      	ldr	r3, [sp, #12]
 801c69a:	8023      	strh	r3, [r4, #0]
 801c69c:	9b04      	ldr	r3, [sp, #16]
 801c69e:	8063      	strh	r3, [r4, #2]
 801c6a0:	9b05      	ldr	r3, [sp, #20]
 801c6a2:	80a3      	strh	r3, [r4, #4]
 801c6a4:	9b06      	ldr	r3, [sp, #24]
 801c6a6:	e78b      	b.n	801c5c0 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0xd0>
 801c6a8:	fb09 f202 	mul.w	r2, r9, r2
 801c6ac:	eb02 0141 	add.w	r1, r2, r1, lsl #1
 801c6b0:	440f      	add	r7, r1
 801c6b2:	f9bd 3036 	ldrsh.w	r3, [sp, #54]	@ 0x36
 801c6b6:	b166      	cbz	r6, 801c6d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6b8:	9a07      	ldr	r2, [sp, #28]
 801c6ba:	4592      	cmp	sl, r2
 801c6bc:	d109      	bne.n	801c6d2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1e2>
 801c6be:	f8db 0000 	ldr.w	r0, [fp]
 801c6c2:	6802      	ldr	r2, [r0, #0]
 801c6c4:	fb09 f303 	mul.w	r3, r9, r3
 801c6c8:	6b56      	ldr	r6, [r2, #52]	@ 0x34
 801c6ca:	4629      	mov	r1, r5
 801c6cc:	463a      	mov	r2, r7
 801c6ce:	47b0      	blx	r6
 801c6d0:	e7e2      	b.n	801c698 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6d2:	fb0a f303 	mul.w	r3, sl, r3
 801c6d6:	f8df b03c 	ldr.w	fp, [pc, #60]	@ 801c714 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x224>
 801c6da:	eb05 0843 	add.w	r8, r5, r3, lsl #1
 801c6de:	ea4f 064a 	mov.w	r6, sl, lsl #1
 801c6e2:	4545      	cmp	r5, r8
 801c6e4:	d2d8      	bcs.n	801c698 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1a8>
 801c6e6:	f8db 0000 	ldr.w	r0, [fp]
 801c6ea:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801c6ee:	6802      	ldr	r2, [r0, #0]
 801c6f0:	4629      	mov	r1, r5
 801c6f2:	f8d2 a034 	ldr.w	sl, [r2, #52]	@ 0x34
 801c6f6:	005b      	lsls	r3, r3, #1
 801c6f8:	463a      	mov	r2, r7
 801c6fa:	47d0      	blx	sl
 801c6fc:	444f      	add	r7, r9
 801c6fe:	4435      	add	r5, r6
 801c700:	e7ef      	b.n	801c6e2 <_ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectES3_Phss+0x1f2>
 801c702:	bf00      	nop
 801c704:	20002f48 	.word	0x20002f48
 801c708:	20002f4a 	.word	0x20002f4a
 801c70c:	20002f4c 	.word	0x20002f4c
 801c710:	20002f4e 	.word	0x20002f4e
 801c714:	20002f54 	.word	0x20002f54

0801c718 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh>:
 801c718:	b5f0      	push	{r4, r5, r6, r7, lr}
 801c71a:	4606      	mov	r6, r0
 801c71c:	b087      	sub	sp, #28
 801c71e:	460c      	mov	r4, r1
 801c720:	4617      	mov	r7, r2
 801c722:	461d      	mov	r5, r3
 801c724:	b333      	cbz	r3, 801c774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c726:	4608      	mov	r0, r1
 801c728:	f7f4 fa7b 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c72c:	bb10      	cbnz	r0, 801c774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c72e:	6820      	ldr	r0, [r4, #0]
 801c730:	6861      	ldr	r1, [r4, #4]
 801c732:	4c1c      	ldr	r4, [pc, #112]	@ (801c7a4 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x8c>)
 801c734:	ab04      	add	r3, sp, #16
 801c736:	c303      	stmia	r3!, {r0, r1}
 801c738:	a804      	add	r0, sp, #16
 801c73a:	f7f7 fbf3 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c73e:	6820      	ldr	r0, [r4, #0]
 801c740:	6803      	ldr	r3, [r0, #0]
 801c742:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c744:	4798      	blx	r3
 801c746:	2dff      	cmp	r5, #255	@ 0xff
 801c748:	d016      	beq.n	801c778 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x60>
 801c74a:	f010 0f08 	tst.w	r0, #8
 801c74e:	6820      	ldr	r0, [r4, #0]
 801c750:	d015      	beq.n	801c77e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x66>
 801c752:	2400      	movs	r4, #0
 801c754:	6801      	ldr	r1, [r0, #0]
 801c756:	f8bd 3012 	ldrh.w	r3, [sp, #18]
 801c75a:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801c75e:	e9cd 5402 	strd	r5, r4, [sp, #8]
 801c762:	f8bd 4016 	ldrh.w	r4, [sp, #22]
 801c766:	9401      	str	r4, [sp, #4]
 801c768:	f8bd 4014 	ldrh.w	r4, [sp, #20]
 801c76c:	9400      	str	r4, [sp, #0]
 801c76e:	6e0c      	ldr	r4, [r1, #96]	@ 0x60
 801c770:	4639      	mov	r1, r7
 801c772:	47a0      	blx	r4
 801c774:	b007      	add	sp, #28
 801c776:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801c778:	f010 0f02 	tst.w	r0, #2
 801c77c:	e7e7      	b.n	801c74e <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x36>
 801c77e:	6803      	ldr	r3, [r0, #0]
 801c780:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801c782:	4798      	blx	r3
 801c784:	4b08      	ldr	r3, [pc, #32]	@ (801c7a8 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x90>)
 801c786:	881a      	ldrh	r2, [r3, #0]
 801c788:	6833      	ldr	r3, [r6, #0]
 801c78a:	e9cd 7500 	strd	r7, r5, [sp]
 801c78e:	4601      	mov	r1, r0
 801c790:	6a5d      	ldr	r5, [r3, #36]	@ 0x24
 801c792:	4630      	mov	r0, r6
 801c794:	ab04      	add	r3, sp, #16
 801c796:	47a8      	blx	r5
 801c798:	6820      	ldr	r0, [r4, #0]
 801c79a:	6803      	ldr	r3, [r0, #0]
 801c79c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801c79e:	4798      	blx	r3
 801c7a0:	e7e8      	b.n	801c774 <_ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh+0x5c>
 801c7a2:	bf00      	nop
 801c7a4:	20002f54 	.word	0x20002f54
 801c7a8:	20002f4e 	.word	0x20002f4e

0801c7ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh>:
 801c7ac:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801c7b0:	f89d 7024 	ldrb.w	r7, [sp, #36]	@ 0x24
 801c7b4:	9e08      	ldr	r6, [sp, #32]
 801c7b6:	4688      	mov	r8, r1
 801c7b8:	4614      	mov	r4, r2
 801c7ba:	461d      	mov	r5, r3
 801c7bc:	2f00      	cmp	r7, #0
 801c7be:	f000 80a9 	beq.w	801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7c2:	4618      	mov	r0, r3
 801c7c4:	f7f4 fa2d 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801c7c8:	2800      	cmp	r0, #0
 801c7ca:	f040 80a3 	bne.w	801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c7ce:	f9b5 1000 	ldrsh.w	r1, [r5]
 801c7d2:	f9b5 3002 	ldrsh.w	r3, [r5, #2]
 801c7d6:	f9b5 0004 	ldrsh.w	r0, [r5, #4]
 801c7da:	f9b5 5006 	ldrsh.w	r5, [r5, #6]
 801c7de:	fb04 1303 	mla	r3, r4, r3, r1
 801c7e2:	eb08 0143 	add.w	r1, r8, r3, lsl #1
 801c7e6:	4365      	muls	r5, r4
 801c7e8:	2fff      	cmp	r7, #255	@ 0xff
 801c7ea:	eba4 0200 	sub.w	r2, r4, r0
 801c7ee:	eb01 0545 	add.w	r5, r1, r5, lsl #1
 801c7f2:	ea4f 2816 	mov.w	r8, r6, lsr #8
 801c7f6:	d04a      	beq.n	801c88e <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xe2>
 801c7f8:	b2bc      	uxth	r4, r7
 801c7fa:	f1c7 0cff 	rsb	ip, r7, #255	@ 0xff
 801c7fe:	f3c6 4e07 	ubfx	lr, r6, #16, #8
 801c802:	fa5f f788 	uxtb.w	r7, r8
 801c806:	b2f3      	uxtb	r3, r6
 801c808:	0040      	lsls	r0, r0, #1
 801c80a:	fb0e fe04 	mul.w	lr, lr, r4
 801c80e:	4367      	muls	r7, r4
 801c810:	4363      	muls	r3, r4
 801c812:	ea4f 0842 	mov.w	r8, r2, lsl #1
 801c816:	fa1f fc8c 	uxth.w	ip, ip
 801c81a:	42a9      	cmp	r1, r5
 801c81c:	d27a      	bcs.n	801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c81e:	eb01 0900 	add.w	r9, r1, r0
 801c822:	4549      	cmp	r1, r9
 801c824:	d231      	bcs.n	801c88a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0xde>
 801c826:	880a      	ldrh	r2, [r1, #0]
 801c828:	1214      	asrs	r4, r2, #8
 801c82a:	10d6      	asrs	r6, r2, #3
 801c82c:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 801c830:	00d2      	lsls	r2, r2, #3
 801c832:	b2d2      	uxtb	r2, r2
 801c834:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801c838:	fb14 f40c 	smulbb	r4, r4, ip
 801c83c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801c840:	4474      	add	r4, lr
 801c842:	fb12 f20c 	smulbb	r2, r2, ip
 801c846:	b2a4      	uxth	r4, r4
 801c848:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801c84c:	441a      	add	r2, r3
 801c84e:	b292      	uxth	r2, r2
 801c850:	f104 0a01 	add.w	sl, r4, #1
 801c854:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 801c858:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801c85c:	fb16 f60c 	smulbb	r6, r6, ip
 801c860:	f102 0a01 	add.w	sl, r2, #1
 801c864:	443e      	add	r6, r7
 801c866:	eb0a 2212 	add.w	r2, sl, r2, lsr #8
 801c86a:	b2b6      	uxth	r6, r6
 801c86c:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 801c870:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801c874:	4322      	orrs	r2, r4
 801c876:	1c74      	adds	r4, r6, #1
 801c878:	eb04 2616 	add.w	r6, r4, r6, lsr #8
 801c87c:	0976      	lsrs	r6, r6, #5
 801c87e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801c882:	4332      	orrs	r2, r6
 801c884:	f821 2b02 	strh.w	r2, [r1], #2
 801c888:	e7cb      	b.n	801c822 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x76>
 801c88a:	4441      	add	r1, r8
 801c88c:	e7c5      	b.n	801c81a <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x6e>
 801c88e:	4f22      	ldr	r7, [pc, #136]	@ (801c918 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x16c>)
 801c890:	0973      	lsrs	r3, r6, #5
 801c892:	ea08 0707 	and.w	r7, r8, r7
 801c896:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801c89a:	433b      	orrs	r3, r7
 801c89c:	f3c6 06c4 	ubfx	r6, r6, #3, #5
 801c8a0:	4333      	orrs	r3, r6
 801c8a2:	07e7      	lsls	r7, r4, #31
 801c8a4:	b29b      	uxth	r3, r3
 801c8a6:	d50b      	bpl.n	801c8c0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x114>
 801c8a8:	0040      	lsls	r0, r0, #1
 801c8aa:	0052      	lsls	r2, r2, #1
 801c8ac:	42a9      	cmp	r1, r5
 801c8ae:	d231      	bcs.n	801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8b0:	180c      	adds	r4, r1, r0
 801c8b2:	42a1      	cmp	r1, r4
 801c8b4:	d202      	bcs.n	801c8bc <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x110>
 801c8b6:	f821 3b02 	strh.w	r3, [r1], #2
 801c8ba:	e7fa      	b.n	801c8b2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x106>
 801c8bc:	4411      	add	r1, r2
 801c8be:	e7f5      	b.n	801c8ac <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x100>
 801c8c0:	078e      	lsls	r6, r1, #30
 801c8c2:	d008      	beq.n	801c8d6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x12a>
 801c8c4:	0066      	lsls	r6, r4, #1
 801c8c6:	460a      	mov	r2, r1
 801c8c8:	42aa      	cmp	r2, r5
 801c8ca:	d202      	bcs.n	801c8d2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x126>
 801c8cc:	8013      	strh	r3, [r2, #0]
 801c8ce:	4432      	add	r2, r6
 801c8d0:	e7fa      	b.n	801c8c8 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x11c>
 801c8d2:	3102      	adds	r1, #2
 801c8d4:	3801      	subs	r0, #1
 801c8d6:	07c2      	lsls	r2, r0, #31
 801c8d8:	d50b      	bpl.n	801c8f2 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x146>
 801c8da:	f100 4200 	add.w	r2, r0, #2147483648	@ 0x80000000
 801c8de:	3a01      	subs	r2, #1
 801c8e0:	eb01 0242 	add.w	r2, r1, r2, lsl #1
 801c8e4:	0066      	lsls	r6, r4, #1
 801c8e6:	42aa      	cmp	r2, r5
 801c8e8:	d202      	bcs.n	801c8f0 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x144>
 801c8ea:	8013      	strh	r3, [r2, #0]
 801c8ec:	4432      	add	r2, r6
 801c8ee:	e7fa      	b.n	801c8e6 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x13a>
 801c8f0:	3801      	subs	r0, #1
 801c8f2:	b178      	cbz	r0, 801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c8f4:	1040      	asrs	r0, r0, #1
 801c8f6:	ea43 4303 	orr.w	r3, r3, r3, lsl #16
 801c8fa:	0080      	lsls	r0, r0, #2
 801c8fc:	0064      	lsls	r4, r4, #1
 801c8fe:	42a9      	cmp	r1, r5
 801c900:	d208      	bcs.n	801c914 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x168>
 801c902:	180e      	adds	r6, r1, r0
 801c904:	460a      	mov	r2, r1
 801c906:	42b2      	cmp	r2, r6
 801c908:	d202      	bcs.n	801c910 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x164>
 801c90a:	f842 3b04 	str.w	r3, [r2], #4
 801c90e:	e7fa      	b.n	801c906 <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x15a>
 801c910:	4421      	add	r1, r4
 801c912:	e7f4      	b.n	801c8fe <_ZN8touchgfx8LCD16bpp10fillBufferEPhtRKNS_4RectENS_9colortypeEh+0x152>
 801c914:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801c918:	00fff800 	.word	0x00fff800

0801c91c <_ZN8touchgfx8LCD16bppC1Ev>:
 801c91c:	2200      	movs	r2, #0
 801c91e:	4912      	ldr	r1, [pc, #72]	@ (801c968 <_ZN8touchgfx8LCD16bppC1Ev+0x4c>)
 801c920:	6001      	str	r1, [r0, #0]
 801c922:	e9c0 2201 	strd	r2, r2, [r0, #4]
 801c926:	e9c0 2203 	strd	r2, r2, [r0, #12]
 801c92a:	e9c0 2205 	strd	r2, r2, [r0, #20]
 801c92e:	e9c0 2207 	strd	r2, r2, [r0, #28]
 801c932:	e9c0 2209 	strd	r2, r2, [r0, #36]	@ 0x24
 801c936:	e9c0 220b 	strd	r2, r2, [r0, #44]	@ 0x2c
 801c93a:	e9c0 220d 	strd	r2, r2, [r0, #52]	@ 0x34
 801c93e:	e9c0 220f 	strd	r2, r2, [r0, #60]	@ 0x3c
 801c942:	e9c0 2211 	strd	r2, r2, [r0, #68]	@ 0x44
 801c946:	e9c0 2213 	strd	r2, r2, [r0, #76]	@ 0x4c
 801c94a:	e9c0 2215 	strd	r2, r2, [r0, #84]	@ 0x54
 801c94e:	e9c0 2217 	strd	r2, r2, [r0, #92]	@ 0x5c
 801c952:	e9c0 2219 	strd	r2, r2, [r0, #100]	@ 0x64
 801c956:	e9c0 221b 	strd	r2, r2, [r0, #108]	@ 0x6c
 801c95a:	e9c0 221d 	strd	r2, r2, [r0, #116]	@ 0x74
 801c95e:	e9c0 221f 	strd	r2, r2, [r0, #124]	@ 0x7c
 801c962:	e9c0 2221 	strd	r2, r2, [r0, #132]	@ 0x84
 801c966:	4770      	bx	lr
 801c968:	08029acc 	.word	0x08029acc

0801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>:
 801c96c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801c970:	460d      	mov	r5, r1
 801c972:	b08d      	sub	sp, #52	@ 0x34
 801c974:	4604      	mov	r4, r0
 801c976:	6808      	ldr	r0, [r1, #0]
 801c978:	6849      	ldr	r1, [r1, #4]
 801c97a:	4699      	mov	r9, r3
 801c97c:	ab08      	add	r3, sp, #32
 801c97e:	c303      	stmia	r3!, {r0, r1}
 801c980:	6810      	ldr	r0, [r2, #0]
 801c982:	6851      	ldr	r1, [r2, #4]
 801c984:	ab0a      	add	r3, sp, #40	@ 0x28
 801c986:	c303      	stmia	r3!, {r0, r1}
 801c988:	a808      	add	r0, sp, #32
 801c98a:	f7f7 facb 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801c98e:	4629      	mov	r1, r5
 801c990:	a80a      	add	r0, sp, #40	@ 0x28
 801c992:	f7f7 faef 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801c996:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 801c99a:	f9bd 302a 	ldrsh.w	r3, [sp, #42]	@ 0x2a
 801c99e:	f8bd 1024 	ldrh.w	r1, [sp, #36]	@ 0x24
 801c9a2:	4d63      	ldr	r5, [pc, #396]	@ (801cb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801c9a4:	f9bd 802c 	ldrsh.w	r8, [sp, #44]	@ 0x2c
 801c9a8:	6828      	ldr	r0, [r5, #0]
 801c9aa:	f9bd 602e 	ldrsh.w	r6, [sp, #46]	@ 0x2e
 801c9ae:	fb11 2103 	smlabb	r1, r1, r3, r2
 801c9b2:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801c9b6:	f8bd 1020 	ldrh.w	r1, [sp, #32]
 801c9ba:	440a      	add	r2, r1
 801c9bc:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 801c9c0:	f8bd 2022 	ldrh.w	r2, [sp, #34]	@ 0x22
 801c9c4:	4413      	add	r3, r2
 801c9c6:	f8ad 302a 	strh.w	r3, [sp, #42]	@ 0x2a
 801c9ca:	6803      	ldr	r3, [r0, #0]
 801c9cc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801c9ce:	4798      	blx	r3
 801c9d0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801c9d4:	d119      	bne.n	801ca0a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x9e>
 801c9d6:	f010 0f20 	tst.w	r0, #32
 801c9da:	6828      	ldr	r0, [r5, #0]
 801c9dc:	d018      	beq.n	801ca10 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xa4>
 801c9de:	2500      	movs	r5, #0
 801c9e0:	6801      	ldr	r1, [r0, #0]
 801c9e2:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 801c9e6:	f8bd 2028 	ldrh.w	r2, [sp, #40]	@ 0x28
 801c9ea:	e9cd 9503 	strd	r9, r5, [sp, #12]
 801c9ee:	f8bd 5024 	ldrh.w	r5, [sp, #36]	@ 0x24
 801c9f2:	9502      	str	r5, [sp, #8]
 801c9f4:	b2b6      	uxth	r6, r6
 801c9f6:	fa1f f588 	uxth.w	r5, r8
 801c9fa:	9601      	str	r6, [sp, #4]
 801c9fc:	9500      	str	r5, [sp, #0]
 801c9fe:	6d0d      	ldr	r5, [r1, #80]	@ 0x50
 801ca00:	4621      	mov	r1, r4
 801ca02:	47a8      	blx	r5
 801ca04:	b00d      	add	sp, #52	@ 0x34
 801ca06:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ca0a:	f010 0f40 	tst.w	r0, #64	@ 0x40
 801ca0e:	e7e4      	b.n	801c9da <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x6e>
 801ca10:	6803      	ldr	r3, [r0, #0]
 801ca12:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ca14:	4798      	blx	r3
 801ca16:	4947      	ldr	r1, [pc, #284]	@ (801cb34 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c8>)
 801ca18:	f9bd 202a 	ldrsh.w	r2, [sp, #42]	@ 0x2a
 801ca1c:	880b      	ldrh	r3, [r1, #0]
 801ca1e:	f9bd 5028 	ldrsh.w	r5, [sp, #40]	@ 0x28
 801ca22:	fb03 5202 	mla	r2, r3, r2, r5
 801ca26:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ca2a:	4373      	muls	r3, r6
 801ca2c:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801ca30:	9307      	str	r3, [sp, #28]
 801ca32:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801ca36:	9306      	str	r3, [sp, #24]
 801ca38:	468a      	mov	sl, r1
 801ca3a:	9b07      	ldr	r3, [sp, #28]
 801ca3c:	4298      	cmp	r0, r3
 801ca3e:	d270      	bcs.n	801cb22 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1b6>
 801ca40:	9b06      	ldr	r3, [sp, #24]
 801ca42:	4621      	mov	r1, r4
 801ca44:	eb00 0b03 	add.w	fp, r0, r3
 801ca48:	4558      	cmp	r0, fp
 801ca4a:	d25d      	bcs.n	801cb08 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x19c>
 801ca4c:	f851 4b04 	ldr.w	r4, [r1], #4
 801ca50:	0e23      	lsrs	r3, r4, #24
 801ca52:	d014      	beq.n	801ca7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801ca54:	2bff      	cmp	r3, #255	@ 0xff
 801ca56:	ea4f 2c14 	mov.w	ip, r4, lsr #8
 801ca5a:	d112      	bne.n	801ca82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca5c:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 801ca60:	d10f      	bne.n	801ca82 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x116>
 801ca62:	0963      	lsrs	r3, r4, #5
 801ca64:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 801ca68:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ca6c:	f02c 0c07 	bic.w	ip, ip, #7
 801ca70:	ea43 0c0c 	orr.w	ip, r3, ip
 801ca74:	f3c4 04c4 	ubfx	r4, r4, #3, #5
 801ca78:	ea4c 0404 	orr.w	r4, ip, r4
 801ca7c:	8004      	strh	r4, [r0, #0]
 801ca7e:	3002      	adds	r0, #2
 801ca80:	e7e2      	b.n	801ca48 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xdc>
 801ca82:	fb09 f303 	mul.w	r3, r9, r3
 801ca86:	8807      	ldrh	r7, [r0, #0]
 801ca88:	1c5a      	adds	r2, r3, #1
 801ca8a:	eb02 2223 	add.w	r2, r2, r3, asr #8
 801ca8e:	1212      	asrs	r2, r2, #8
 801ca90:	123e      	asrs	r6, r7, #8
 801ca92:	b293      	uxth	r3, r2
 801ca94:	f3c4 4e07 	ubfx	lr, r4, #16, #8
 801ca98:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801ca9c:	43d2      	mvns	r2, r2
 801ca9e:	b2d2      	uxtb	r2, r2
 801caa0:	10fd      	asrs	r5, r7, #3
 801caa2:	fb1e fe03 	smulbb	lr, lr, r3
 801caa6:	00ff      	lsls	r7, r7, #3
 801caa8:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801caac:	fb06 e602 	mla	r6, r6, r2, lr
 801cab0:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801cab4:	b2ff      	uxtb	r7, r7
 801cab6:	fa5f fc8c 	uxtb.w	ip, ip
 801caba:	b2e4      	uxtb	r4, r4
 801cabc:	b2b6      	uxth	r6, r6
 801cabe:	fb1c fc03 	smulbb	ip, ip, r3
 801cac2:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cac6:	ea47 1757 	orr.w	r7, r7, r7, lsr #5
 801caca:	fb14 f403 	smulbb	r4, r4, r3
 801cace:	fb05 c502 	mla	r5, r5, r2, ip
 801cad2:	f106 0e01 	add.w	lr, r6, #1
 801cad6:	fb07 4702 	mla	r7, r7, r2, r4
 801cada:	b2ad      	uxth	r5, r5
 801cadc:	b2bf      	uxth	r7, r7
 801cade:	eb0e 2616 	add.w	r6, lr, r6, lsr #8
 801cae2:	f406 4e78 	and.w	lr, r6, #63488	@ 0xf800
 801cae6:	f105 0c01 	add.w	ip, r5, #1
 801caea:	1c7e      	adds	r6, r7, #1
 801caec:	eb06 2617 	add.w	r6, r6, r7, lsr #8
 801caf0:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801caf4:	f3c6 26c4 	ubfx	r6, r6, #11, #5
 801caf8:	096d      	lsrs	r5, r5, #5
 801cafa:	ea46 060e 	orr.w	r6, r6, lr
 801cafe:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cb02:	432e      	orrs	r6, r5
 801cb04:	8006      	strh	r6, [r0, #0]
 801cb06:	e7ba      	b.n	801ca7e <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x112>
 801cb08:	f8ba 3000 	ldrh.w	r3, [sl]
 801cb0c:	f9bd 4024 	ldrsh.w	r4, [sp, #36]	@ 0x24
 801cb10:	eba3 0308 	sub.w	r3, r3, r8
 801cb14:	eba4 0408 	sub.w	r4, r4, r8
 801cb18:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801cb1c:	eb01 0484 	add.w	r4, r1, r4, lsl #2
 801cb20:	e78b      	b.n	801ca3a <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0xce>
 801cb22:	4b03      	ldr	r3, [pc, #12]	@ (801cb30 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x1c4>)
 801cb24:	6818      	ldr	r0, [r3, #0]
 801cb26:	6803      	ldr	r3, [r0, #0]
 801cb28:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cb2a:	4798      	blx	r3
 801cb2c:	e76a      	b.n	801ca04 <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h+0x98>
 801cb2e:	bf00      	nop
 801cb30:	20002f54 	.word	0x20002f54
 801cb34:	20002f4e 	.word	0x20002f4e

0801cb38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>:
 801cb38:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801cb3c:	460c      	mov	r4, r1
 801cb3e:	b085      	sub	sp, #20
 801cb40:	6810      	ldr	r0, [r2, #0]
 801cb42:	6851      	ldr	r1, [r2, #4]
 801cb44:	466d      	mov	r5, sp
 801cb46:	c503      	stmia	r5!, {r0, r1}
 801cb48:	6818      	ldr	r0, [r3, #0]
 801cb4a:	6859      	ldr	r1, [r3, #4]
 801cb4c:	4616      	mov	r6, r2
 801cb4e:	c503      	stmia	r5!, {r0, r1}
 801cb50:	4668      	mov	r0, sp
 801cb52:	f7f7 f9e7 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cb56:	4631      	mov	r1, r6
 801cb58:	a802      	add	r0, sp, #8
 801cb5a:	f7f7 fa0b 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cb5e:	f9bd 2008 	ldrsh.w	r2, [sp, #8]
 801cb62:	f9bd 300a 	ldrsh.w	r3, [sp, #10]
 801cb66:	f8bd 1004 	ldrh.w	r1, [sp, #4]
 801cb6a:	4d28      	ldr	r5, [pc, #160]	@ (801cc0c <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd4>)
 801cb6c:	4e28      	ldr	r6, [pc, #160]	@ (801cc10 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xd8>)
 801cb6e:	6828      	ldr	r0, [r5, #0]
 801cb70:	f9bd 700c 	ldrsh.w	r7, [sp, #12]
 801cb74:	f9bd 800e 	ldrsh.w	r8, [sp, #14]
 801cb78:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cb7c:	eb04 0481 	add.w	r4, r4, r1, lsl #2
 801cb80:	f8bd 1000 	ldrh.w	r1, [sp]
 801cb84:	440a      	add	r2, r1
 801cb86:	f8ad 2008 	strh.w	r2, [sp, #8]
 801cb8a:	f8bd 2002 	ldrh.w	r2, [sp, #2]
 801cb8e:	4413      	add	r3, r2
 801cb90:	f8ad 300a 	strh.w	r3, [sp, #10]
 801cb94:	6803      	ldr	r3, [r0, #0]
 801cb96:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cb98:	4798      	blx	r3
 801cb9a:	8833      	ldrh	r3, [r6, #0]
 801cb9c:	f9bd 200a 	ldrsh.w	r2, [sp, #10]
 801cba0:	f9bd 1008 	ldrsh.w	r1, [sp, #8]
 801cba4:	f8df e06c 	ldr.w	lr, [pc, #108]	@ 801cc14 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xdc>
 801cba8:	fb03 1202 	mla	r2, r3, r2, r1
 801cbac:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbb0:	fb08 f303 	mul.w	r3, r8, r3
 801cbb4:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801cbb8:	ea4f 0c47 	mov.w	ip, r7, lsl #1
 801cbbc:	4298      	cmp	r0, r3
 801cbbe:	d21d      	bcs.n	801cbfc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xc4>
 801cbc0:	eb00 080c 	add.w	r8, r0, ip
 801cbc4:	4540      	cmp	r0, r8
 801cbc6:	d20f      	bcs.n	801cbe8 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0xb0>
 801cbc8:	f854 1b04 	ldr.w	r1, [r4], #4
 801cbcc:	ea4f 1951 	mov.w	r9, r1, lsr #5
 801cbd0:	ea0e 2211 	and.w	r2, lr, r1, lsr #8
 801cbd4:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801cbd8:	ea42 0209 	orr.w	r2, r2, r9
 801cbdc:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 801cbe0:	430a      	orrs	r2, r1
 801cbe2:	f820 2b02 	strh.w	r2, [r0], #2
 801cbe6:	e7ed      	b.n	801cbc4 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x8c>
 801cbe8:	8832      	ldrh	r2, [r6, #0]
 801cbea:	1bd2      	subs	r2, r2, r7
 801cbec:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cbf0:	f9bd 2004 	ldrsh.w	r2, [sp, #4]
 801cbf4:	1bd2      	subs	r2, r2, r7
 801cbf6:	eb04 0482 	add.w	r4, r4, r2, lsl #2
 801cbfa:	e7df      	b.n	801cbbc <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_+0x84>
 801cbfc:	6828      	ldr	r0, [r5, #0]
 801cbfe:	6803      	ldr	r3, [r0, #0]
 801cc00:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cc02:	4798      	blx	r3
 801cc04:	b005      	add	sp, #20
 801cc06:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801cc0a:	bf00      	nop
 801cc0c:	20002f54 	.word	0x20002f54
 801cc10:	20002f4e 	.word	0x20002f4e
 801cc14:	fffff800 	.word	0xfffff800

0801cc18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>:
 801cc18:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801cc1c:	460e      	mov	r6, r1
 801cc1e:	b08e      	sub	sp, #56	@ 0x38
 801cc20:	4604      	mov	r4, r0
 801cc22:	6808      	ldr	r0, [r1, #0]
 801cc24:	6849      	ldr	r1, [r1, #4]
 801cc26:	f8df 81d8 	ldr.w	r8, [pc, #472]	@ 801ce00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>
 801cc2a:	f8df 91d8 	ldr.w	r9, [pc, #472]	@ 801ce04 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1ec>
 801cc2e:	461d      	mov	r5, r3
 801cc30:	ab0a      	add	r3, sp, #40	@ 0x28
 801cc32:	c303      	stmia	r3!, {r0, r1}
 801cc34:	6810      	ldr	r0, [r2, #0]
 801cc36:	6851      	ldr	r1, [r2, #4]
 801cc38:	ab0c      	add	r3, sp, #48	@ 0x30
 801cc3a:	c303      	stmia	r3!, {r0, r1}
 801cc3c:	a80a      	add	r0, sp, #40	@ 0x28
 801cc3e:	f7f7 f971 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801cc42:	4631      	mov	r1, r6
 801cc44:	a80c      	add	r0, sp, #48	@ 0x30
 801cc46:	f7f7 f995 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801cc4a:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 801cc4e:	f9bd 3032 	ldrsh.w	r3, [sp, #50]	@ 0x32
 801cc52:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801cc56:	f8d8 0000 	ldr.w	r0, [r8]
 801cc5a:	f9bd 7034 	ldrsh.w	r7, [sp, #52]	@ 0x34
 801cc5e:	f9bd 6036 	ldrsh.w	r6, [sp, #54]	@ 0x36
 801cc62:	fb11 2103 	smlabb	r1, r1, r3, r2
 801cc66:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 801cc6a:	440c      	add	r4, r1
 801cc6c:	f8bd 1028 	ldrh.w	r1, [sp, #40]	@ 0x28
 801cc70:	440a      	add	r2, r1
 801cc72:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 801cc76:	f8bd 202a 	ldrh.w	r2, [sp, #42]	@ 0x2a
 801cc7a:	4413      	add	r3, r2
 801cc7c:	f8ad 3032 	strh.w	r3, [sp, #50]	@ 0x32
 801cc80:	6803      	ldr	r3, [r0, #0]
 801cc82:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801cc84:	4798      	blx	r3
 801cc86:	2dff      	cmp	r5, #255	@ 0xff
 801cc88:	d124      	bne.n	801ccd4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xbc>
 801cc8a:	f010 0f01 	tst.w	r0, #1
 801cc8e:	f8d8 0000 	ldr.w	r0, [r8]
 801cc92:	d022      	beq.n	801ccda <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xc2>
 801cc94:	2100      	movs	r1, #0
 801cc96:	f8d0 c000 	ldr.w	ip, [r0]
 801cc9a:	f8bd 3032 	ldrh.w	r3, [sp, #50]	@ 0x32
 801cc9e:	f8bd 2030 	ldrh.w	r2, [sp, #48]	@ 0x30
 801cca2:	e9cd 1107 	strd	r1, r1, [sp, #28]
 801cca6:	f04f 0e01 	mov.w	lr, #1
 801ccaa:	f8cd e018 	str.w	lr, [sp, #24]
 801ccae:	f8b9 e000 	ldrh.w	lr, [r9]
 801ccb2:	9503      	str	r5, [sp, #12]
 801ccb4:	e9cd 1e04 	strd	r1, lr, [sp, #16]
 801ccb8:	b2b6      	uxth	r6, r6
 801ccba:	f8bd 102c 	ldrh.w	r1, [sp, #44]	@ 0x2c
 801ccbe:	9102      	str	r1, [sp, #8]
 801ccc0:	b2bf      	uxth	r7, r7
 801ccc2:	9601      	str	r6, [sp, #4]
 801ccc4:	9700      	str	r7, [sp, #0]
 801ccc6:	f8dc 5040 	ldr.w	r5, [ip, #64]	@ 0x40
 801ccca:	4621      	mov	r1, r4
 801cccc:	47a8      	blx	r5
 801ccce:	b00e      	add	sp, #56	@ 0x38
 801ccd0:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ccd4:	f010 0f04 	tst.w	r0, #4
 801ccd8:	e7d9      	b.n	801cc8e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x76>
 801ccda:	6803      	ldr	r3, [r0, #0]
 801ccdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801ccde:	4798      	blx	r3
 801cce0:	f8b9 3000 	ldrh.w	r3, [r9]
 801cce4:	f9bd 2032 	ldrsh.w	r2, [sp, #50]	@ 0x32
 801cce8:	f9bd 1030 	ldrsh.w	r1, [sp, #48]	@ 0x30
 801ccec:	f9bd c02c 	ldrsh.w	ip, [sp, #44]	@ 0x2c
 801ccf0:	fb03 1202 	mla	r2, r3, r2, r1
 801ccf4:	ebac 0c07 	sub.w	ip, ip, r7
 801ccf8:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801ccfc:	435e      	muls	r6, r3
 801ccfe:	ea4f 0e47 	mov.w	lr, r7, lsl #1
 801cd02:	2dff      	cmp	r5, #255	@ 0xff
 801cd04:	eba3 0707 	sub.w	r7, r3, r7
 801cd08:	eb00 0646 	add.w	r6, r0, r6, lsl #1
 801cd0c:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801cd10:	ea4f 0747 	mov.w	r7, r7, lsl #1
 801cd14:	d049      	beq.n	801cdaa <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x192>
 801cd16:	43eb      	mvns	r3, r5
 801cd18:	fa1f f985 	uxth.w	r9, r5
 801cd1c:	b2db      	uxtb	r3, r3
 801cd1e:	42b0      	cmp	r0, r6
 801cd20:	d266      	bcs.n	801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cd22:	eb00 0a0e 	add.w	sl, r0, lr
 801cd26:	4550      	cmp	r0, sl
 801cd28:	4621      	mov	r1, r4
 801cd2a:	f104 0403 	add.w	r4, r4, #3
 801cd2e:	d25b      	bcs.n	801cde8 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d0>
 801cd30:	8802      	ldrh	r2, [r0, #0]
 801cd32:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cd36:	ea4f 2822 	mov.w	r8, r2, asr #8
 801cd3a:	f008 08f8 	and.w	r8, r8, #248	@ 0xf8
 801cd3e:	fb11 f109 	smulbb	r1, r1, r9
 801cd42:	ea48 1858 	orr.w	r8, r8, r8, lsr #5
 801cd46:	10d5      	asrs	r5, r2, #3
 801cd48:	fb08 1803 	mla	r8, r8, r3, r1
 801cd4c:	f814 1c02 	ldrb.w	r1, [r4, #-2]
 801cd50:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801cd54:	fb11 f109 	smulbb	r1, r1, r9
 801cd58:	ea45 1595 	orr.w	r5, r5, r5, lsr #6
 801cd5c:	fb05 1503 	mla	r5, r5, r3, r1
 801cd60:	00d2      	lsls	r2, r2, #3
 801cd62:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cd66:	b2d2      	uxtb	r2, r2
 801cd68:	fb11 f109 	smulbb	r1, r1, r9
 801cd6c:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 801cd70:	fa1f f888 	uxth.w	r8, r8
 801cd74:	fb02 1203 	mla	r2, r2, r3, r1
 801cd78:	b292      	uxth	r2, r2
 801cd7a:	f108 0101 	add.w	r1, r8, #1
 801cd7e:	b2ad      	uxth	r5, r5
 801cd80:	eb01 2818 	add.w	r8, r1, r8, lsr #8
 801cd84:	1c51      	adds	r1, r2, #1
 801cd86:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 801cd8a:	1c69      	adds	r1, r5, #1
 801cd8c:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 801cd90:	f408 4878 	and.w	r8, r8, #63488	@ 0xf800
 801cd94:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801cd98:	096d      	lsrs	r5, r5, #5
 801cd9a:	ea42 0208 	orr.w	r2, r2, r8
 801cd9e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801cda2:	432a      	orrs	r2, r5
 801cda4:	f820 2b02 	strh.w	r2, [r0], #2
 801cda8:	e7bd      	b.n	801cd26 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x10e>
 801cdaa:	4a14      	ldr	r2, [pc, #80]	@ (801cdfc <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e4>)
 801cdac:	42b0      	cmp	r0, r6
 801cdae:	d21f      	bcs.n	801cdf0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1d8>
 801cdb0:	eb00 050e 	add.w	r5, r0, lr
 801cdb4:	42a8      	cmp	r0, r5
 801cdb6:	4621      	mov	r1, r4
 801cdb8:	f104 0403 	add.w	r4, r4, #3
 801cdbc:	d210      	bcs.n	801cde0 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1c8>
 801cdbe:	f814 3c02 	ldrb.w	r3, [r4, #-2]
 801cdc2:	f814 1c01 	ldrb.w	r1, [r4, #-1]
 801cdc6:	00db      	lsls	r3, r3, #3
 801cdc8:	ea02 2101 	and.w	r1, r2, r1, lsl #8
 801cdcc:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cdd0:	430b      	orrs	r3, r1
 801cdd2:	f814 1c03 	ldrb.w	r1, [r4, #-3]
 801cdd6:	ea43 03d1 	orr.w	r3, r3, r1, lsr #3
 801cdda:	f820 3b02 	strh.w	r3, [r0], #2
 801cdde:	e7e9      	b.n	801cdb4 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x19c>
 801cde0:	4438      	add	r0, r7
 801cde2:	eb01 040c 	add.w	r4, r1, ip
 801cde6:	e7e1      	b.n	801cdac <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x194>
 801cde8:	4438      	add	r0, r7
 801cdea:	eb01 040c 	add.w	r4, r1, ip
 801cdee:	e796      	b.n	801cd1e <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x106>
 801cdf0:	4b03      	ldr	r3, [pc, #12]	@ (801ce00 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0x1e8>)
 801cdf2:	6818      	ldr	r0, [r3, #0]
 801cdf4:	6803      	ldr	r3, [r0, #0]
 801cdf6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801cdf8:	4798      	blx	r3
 801cdfa:	e768      	b.n	801ccce <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h+0xb6>
 801cdfc:	fffff800 	.word	0xfffff800
 801ce00:	20002f54 	.word	0x20002f54
 801ce04:	20002f4e 	.word	0x20002f4e

0801ce08 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb>:
 801ce08:	b4f0      	push	{r4, r5, r6, r7}
 801ce0a:	4616      	mov	r6, r2
 801ce0c:	2e01      	cmp	r6, #1
 801ce0e:	461c      	mov	r4, r3
 801ce10:	460d      	mov	r5, r1
 801ce12:	9a04      	ldr	r2, [sp, #16]
 801ce14:	f89d 3014 	ldrb.w	r3, [sp, #20]
 801ce18:	f89d 7018 	ldrb.w	r7, [sp, #24]
 801ce1c:	d012      	beq.n	801ce44 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x3c>
 801ce1e:	d303      	bcc.n	801ce28 <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x20>
 801ce20:	2e02      	cmp	r6, #2
 801ce22:	d00a      	beq.n	801ce3a <_ZN8touchgfx8LCD16bpp8blitCopyEPKhNS_6Bitmap12BitmapFormatERKNS_4RectES7_hb+0x32>
 801ce24:	bcf0      	pop	{r4, r5, r6, r7}
 801ce26:	4770      	bx	lr
 801ce28:	6805      	ldr	r5, [r0, #0]
 801ce2a:	e9cd 3704 	strd	r3, r7, [sp, #16]
 801ce2e:	68ed      	ldr	r5, [r5, #12]
 801ce30:	4613      	mov	r3, r2
 801ce32:	46ac      	mov	ip, r5
 801ce34:	4622      	mov	r2, r4
 801ce36:	bcf0      	pop	{r4, r5, r6, r7}
 801ce38:	4760      	bx	ip
 801ce3a:	4621      	mov	r1, r4
 801ce3c:	4628      	mov	r0, r5
 801ce3e:	bcf0      	pop	{r4, r5, r6, r7}
 801ce40:	f7ff bd94 	b.w	801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801ce44:	4621      	mov	r1, r4
 801ce46:	4628      	mov	r0, r5
 801ce48:	bcf0      	pop	{r4, r5, r6, r7}
 801ce4a:	f7ff bee5 	b.w	801cc18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
	...

0801ce50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>:
 801ce50:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ce54:	4681      	mov	r9, r0
 801ce56:	b093      	sub	sp, #76	@ 0x4c
 801ce58:	6810      	ldr	r0, [r2, #0]
 801ce5a:	f89d a070 	ldrb.w	sl, [sp, #112]	@ 0x70
 801ce5e:	4f6d      	ldr	r7, [pc, #436]	@ (801d014 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c4>)
 801ce60:	4688      	mov	r8, r1
 801ce62:	6851      	ldr	r1, [r2, #4]
 801ce64:	ac0e      	add	r4, sp, #56	@ 0x38
 801ce66:	c403      	stmia	r4!, {r0, r1}
 801ce68:	6818      	ldr	r0, [r3, #0]
 801ce6a:	6859      	ldr	r1, [r3, #4]
 801ce6c:	ac10      	add	r4, sp, #64	@ 0x40
 801ce6e:	4616      	mov	r6, r2
 801ce70:	c403      	stmia	r4!, {r0, r1}
 801ce72:	a80e      	add	r0, sp, #56	@ 0x38
 801ce74:	f7f7 f856 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801ce78:	4631      	mov	r1, r6
 801ce7a:	a810      	add	r0, sp, #64	@ 0x40
 801ce7c:	f7f7 f87a 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801ce80:	f9bd 2040 	ldrsh.w	r2, [sp, #64]	@ 0x40
 801ce84:	f9bd 3042 	ldrsh.w	r3, [sp, #66]	@ 0x42
 801ce88:	f8bd 103c 	ldrh.w	r1, [sp, #60]	@ 0x3c
 801ce8c:	4e62      	ldr	r6, [pc, #392]	@ (801d018 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801ce8e:	f9bd 4044 	ldrsh.w	r4, [sp, #68]	@ 0x44
 801ce92:	6830      	ldr	r0, [r6, #0]
 801ce94:	f9bd 5046 	ldrsh.w	r5, [sp, #70]	@ 0x46
 801ce98:	fb11 2103 	smlabb	r1, r1, r3, r2
 801ce9c:	4489      	add	r9, r1
 801ce9e:	f8bd 1038 	ldrh.w	r1, [sp, #56]	@ 0x38
 801cea2:	440a      	add	r2, r1
 801cea4:	f8ad 2040 	strh.w	r2, [sp, #64]	@ 0x40
 801cea8:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801ceac:	4413      	add	r3, r2
 801ceae:	f8ad 3042 	strh.w	r3, [sp, #66]	@ 0x42
 801ceb2:	6803      	ldr	r3, [r0, #0]
 801ceb4:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ceb6:	4798      	blx	r3
 801ceb8:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801cebc:	6830      	ldr	r0, [r6, #0]
 801cebe:	d01d      	beq.n	801cefc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xac>
 801cec0:	2200      	movs	r2, #0
 801cec2:	6801      	ldr	r1, [r0, #0]
 801cec4:	f8bd 3040 	ldrh.w	r3, [sp, #64]	@ 0x40
 801cec8:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801cecc:	220b      	movs	r2, #11
 801cece:	9207      	str	r2, [sp, #28]
 801ced0:	883a      	ldrh	r2, [r7, #0]
 801ced2:	9206      	str	r2, [sp, #24]
 801ced4:	2201      	movs	r2, #1
 801ced6:	e9cd a204 	strd	sl, r2, [sp, #16]
 801ceda:	f8bd 203c 	ldrh.w	r2, [sp, #60]	@ 0x3c
 801cede:	9203      	str	r2, [sp, #12]
 801cee0:	b2a4      	uxth	r4, r4
 801cee2:	f8bd 2042 	ldrh.w	r2, [sp, #66]	@ 0x42
 801cee6:	9200      	str	r2, [sp, #0]
 801cee8:	b2ad      	uxth	r5, r5
 801ceea:	9502      	str	r5, [sp, #8]
 801ceec:	9401      	str	r4, [sp, #4]
 801ceee:	6bcc      	ldr	r4, [r1, #60]	@ 0x3c
 801cef0:	4642      	mov	r2, r8
 801cef2:	4649      	mov	r1, r9
 801cef4:	47a0      	blx	r4
 801cef6:	b013      	add	sp, #76	@ 0x4c
 801cef8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801cefc:	6803      	ldr	r3, [r0, #0]
 801cefe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801cf00:	4798      	blx	r3
 801cf02:	883b      	ldrh	r3, [r7, #0]
 801cf04:	f9bd 2042 	ldrsh.w	r2, [sp, #66]	@ 0x42
 801cf08:	f9bd 1040 	ldrsh.w	r1, [sp, #64]	@ 0x40
 801cf0c:	fb03 1202 	mla	r2, r3, r2, r1
 801cf10:	435d      	muls	r5, r3
 801cf12:	eb00 0042 	add.w	r0, r0, r2, lsl #1
 801cf16:	eb00 0245 	add.w	r2, r0, r5, lsl #1
 801cf1a:	920c      	str	r2, [sp, #48]	@ 0x30
 801cf1c:	f9bd 203c 	ldrsh.w	r2, [sp, #60]	@ 0x3c
 801cf20:	1b12      	subs	r2, r2, r4
 801cf22:	920d      	str	r2, [sp, #52]	@ 0x34
 801cf24:	0062      	lsls	r2, r4, #1
 801cf26:	1b1c      	subs	r4, r3, r4
 801cf28:	0063      	lsls	r3, r4, #1
 801cf2a:	920a      	str	r2, [sp, #40]	@ 0x28
 801cf2c:	930b      	str	r3, [sp, #44]	@ 0x2c
 801cf2e:	f04f 0e04 	mov.w	lr, #4
 801cf32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801cf34:	4298      	cmp	r0, r3
 801cf36:	d266      	bcs.n	801d006 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1b6>
 801cf38:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801cf3a:	eb00 0b03 	add.w	fp, r0, r3
 801cf3e:	4558      	cmp	r0, fp
 801cf40:	d25c      	bcs.n	801cffc <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1ac>
 801cf42:	f819 3b01 	ldrb.w	r3, [r9], #1
 801cf46:	fb1e e303 	smlabb	r3, lr, r3, lr
 801cf4a:	f858 2003 	ldr.w	r2, [r8, r3]
 801cf4e:	0e11      	lsrs	r1, r2, #24
 801cf50:	d012      	beq.n	801cf78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cf52:	29ff      	cmp	r1, #255	@ 0xff
 801cf54:	ea4f 2712 	mov.w	r7, r2, lsr #8
 801cf58:	d110      	bne.n	801cf7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf5a:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801cf5e:	d10d      	bne.n	801cf7c <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x12c>
 801cf60:	0953      	lsrs	r3, r2, #5
 801cf62:	f427 67ff 	bic.w	r7, r7, #2040	@ 0x7f8
 801cf66:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801cf6a:	f027 0707 	bic.w	r7, r7, #7
 801cf6e:	431f      	orrs	r7, r3
 801cf70:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801cf74:	433a      	orrs	r2, r7
 801cf76:	8002      	strh	r2, [r0, #0]
 801cf78:	3002      	adds	r0, #2
 801cf7a:	e7e0      	b.n	801cf3e <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xee>
 801cf7c:	fb0a f101 	mul.w	r1, sl, r1
 801cf80:	8806      	ldrh	r6, [r0, #0]
 801cf82:	1c4b      	adds	r3, r1, #1
 801cf84:	eb03 2321 	add.w	r3, r3, r1, asr #8
 801cf88:	1235      	asrs	r5, r6, #8
 801cf8a:	10f4      	asrs	r4, r6, #3
 801cf8c:	121b      	asrs	r3, r3, #8
 801cf8e:	00f6      	lsls	r6, r6, #3
 801cf90:	b299      	uxth	r1, r3
 801cf92:	f3c2 4c07 	ubfx	ip, r2, #16, #8
 801cf96:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801cf9a:	b2f6      	uxtb	r6, r6
 801cf9c:	43db      	mvns	r3, r3
 801cf9e:	b2d2      	uxtb	r2, r2
 801cfa0:	b2db      	uxtb	r3, r3
 801cfa2:	fb1c fc01 	smulbb	ip, ip, r1
 801cfa6:	ea45 1555 	orr.w	r5, r5, r5, lsr #5
 801cfaa:	ea46 1656 	orr.w	r6, r6, r6, lsr #5
 801cfae:	fb12 f201 	smulbb	r2, r2, r1
 801cfb2:	fb05 c503 	mla	r5, r5, r3, ip
 801cfb6:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 801cfba:	b2ff      	uxtb	r7, r7
 801cfbc:	fb06 2203 	mla	r2, r6, r3, r2
 801cfc0:	b2ad      	uxth	r5, r5
 801cfc2:	fb17 f701 	smulbb	r7, r7, r1
 801cfc6:	b292      	uxth	r2, r2
 801cfc8:	ea44 1494 	orr.w	r4, r4, r4, lsr #6
 801cfcc:	fb04 7403 	mla	r4, r4, r3, r7
 801cfd0:	f105 0c01 	add.w	ip, r5, #1
 801cfd4:	1c57      	adds	r7, r2, #1
 801cfd6:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801cfda:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 801cfde:	b2a4      	uxth	r4, r4
 801cfe0:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801cfe4:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801cfe8:	433d      	orrs	r5, r7
 801cfea:	1c67      	adds	r7, r4, #1
 801cfec:	eb07 2414 	add.w	r4, r7, r4, lsr #8
 801cff0:	0964      	lsrs	r4, r4, #5
 801cff2:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801cff6:	4325      	orrs	r5, r4
 801cff8:	8005      	strh	r5, [r0, #0]
 801cffa:	e7bd      	b.n	801cf78 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x128>
 801cffc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801cffe:	4418      	add	r0, r3
 801d000:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801d002:	4499      	add	r9, r3
 801d004:	e795      	b.n	801cf32 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xe2>
 801d006:	4b04      	ldr	r3, [pc, #16]	@ (801d018 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0x1c8>)
 801d008:	6818      	ldr	r0, [r3, #0]
 801d00a:	6803      	ldr	r3, [r0, #0]
 801d00c:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d00e:	4798      	blx	r3
 801d010:	e771      	b.n	801cef6 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h+0xa6>
 801d012:	bf00      	nop
 801d014:	20002f4e 	.word	0x20002f4e
 801d018:	20002f54 	.word	0x20002f54

0801d01c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>:
 801d01c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d020:	b087      	sub	sp, #28
 801d022:	4680      	mov	r8, r0
 801d024:	f89d 6040 	ldrb.w	r6, [sp, #64]	@ 0x40
 801d028:	460d      	mov	r5, r1
 801d02a:	4614      	mov	r4, r2
 801d02c:	2e00      	cmp	r6, #0
 801d02e:	f000 80b9 	beq.w	801d1a4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x188>
 801d032:	6810      	ldr	r0, [r2, #0]
 801d034:	6851      	ldr	r1, [r2, #4]
 801d036:	af02      	add	r7, sp, #8
 801d038:	c703      	stmia	r7!, {r0, r1}
 801d03a:	6818      	ldr	r0, [r3, #0]
 801d03c:	6859      	ldr	r1, [r3, #4]
 801d03e:	af04      	add	r7, sp, #16
 801d040:	c703      	stmia	r7!, {r0, r1}
 801d042:	a802      	add	r0, sp, #8
 801d044:	f7f6 ff6e 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d048:	4621      	mov	r1, r4
 801d04a:	a804      	add	r0, sp, #16
 801d04c:	f7f6 ff92 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d050:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d054:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d058:	f8bd 400c 	ldrh.w	r4, [sp, #12]
 801d05c:	f9bd 7016 	ldrsh.w	r7, [sp, #22]
 801d060:	fb14 2103 	smlabb	r1, r4, r3, r2
 801d064:	eb08 0401 	add.w	r4, r8, r1
 801d068:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d06c:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d070:	440a      	add	r2, r1
 801d072:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d076:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d07a:	4413      	add	r3, r2
 801d07c:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d080:	4b4a      	ldr	r3, [pc, #296]	@ (801d1ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d082:	6818      	ldr	r0, [r3, #0]
 801d084:	6803      	ldr	r3, [r0, #0]
 801d086:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d088:	4798      	blx	r3
 801d08a:	4b49      	ldr	r3, [pc, #292]	@ (801d1b0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x194>)
 801d08c:	f9bd 1012 	ldrsh.w	r1, [sp, #18]
 801d090:	881a      	ldrh	r2, [r3, #0]
 801d092:	f9bd c010 	ldrsh.w	ip, [sp, #16]
 801d096:	2eff      	cmp	r6, #255	@ 0xff
 801d098:	fb02 c101 	mla	r1, r2, r1, ip
 801d09c:	eb00 0041 	add.w	r0, r0, r1, lsl #1
 801d0a0:	fb02 f207 	mul.w	r2, r2, r7
 801d0a4:	f105 0104 	add.w	r1, r5, #4
 801d0a8:	ea4f 0a48 	mov.w	sl, r8, lsl #1
 801d0ac:	461d      	mov	r5, r3
 801d0ae:	d05a      	beq.n	801d166 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14a>
 801d0b0:	f1c6 0eff 	rsb	lr, r6, #255	@ 0xff
 801d0b4:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d0b8:	b2b6      	uxth	r6, r6
 801d0ba:	fa1f fe8e 	uxth.w	lr, lr
 801d0be:	9301      	str	r3, [sp, #4]
 801d0c0:	4282      	cmp	r2, r0
 801d0c2:	d96a      	bls.n	801d19a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d0c4:	eb00 0b0a 	add.w	fp, r0, sl
 801d0c8:	4583      	cmp	fp, r0
 801d0ca:	d940      	bls.n	801d14e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x132>
 801d0cc:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d0d0:	8805      	ldrh	r5, [r0, #0]
 801d0d2:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d0d6:	122f      	asrs	r7, r5, #8
 801d0d8:	ea4f 2c23 	mov.w	ip, r3, asr #8
 801d0dc:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d0e0:	fb17 f70e 	smulbb	r7, r7, lr
 801d0e4:	ea4f 09e5 	mov.w	r9, r5, asr #3
 801d0e8:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d0ec:	00ed      	lsls	r5, r5, #3
 801d0ee:	fb0c 7c06 	mla	ip, ip, r6, r7
 801d0f2:	f009 09fc 	and.w	r9, r9, #252	@ 0xfc
 801d0f6:	10df      	asrs	r7, r3, #3
 801d0f8:	b2ed      	uxtb	r5, r5
 801d0fa:	00db      	lsls	r3, r3, #3
 801d0fc:	fa1f fc8c 	uxth.w	ip, ip
 801d100:	fb19 f90e 	smulbb	r9, r9, lr
 801d104:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801d108:	b2db      	uxtb	r3, r3
 801d10a:	fb15 f50e 	smulbb	r5, r5, lr
 801d10e:	fb07 9706 	mla	r7, r7, r6, r9
 801d112:	fb03 5306 	mla	r3, r3, r6, r5
 801d116:	f10c 0901 	add.w	r9, ip, #1
 801d11a:	b29b      	uxth	r3, r3
 801d11c:	eb09 2c1c 	add.w	ip, r9, ip, lsr #8
 801d120:	f40c 4978 	and.w	r9, ip, #63488	@ 0xf800
 801d124:	f103 0c01 	add.w	ip, r3, #1
 801d128:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d12c:	b2bf      	uxth	r7, r7
 801d12e:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d132:	ea4c 0c09 	orr.w	ip, ip, r9
 801d136:	f107 0901 	add.w	r9, r7, #1
 801d13a:	eb09 2717 	add.w	r7, r9, r7, lsr #8
 801d13e:	097f      	lsrs	r7, r7, #5
 801d140:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 801d144:	ea4c 0c07 	orr.w	ip, ip, r7
 801d148:	f820 cb02 	strh.w	ip, [r0], #2
 801d14c:	e7bc      	b.n	801d0c8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xac>
 801d14e:	9b01      	ldr	r3, [sp, #4]
 801d150:	881b      	ldrh	r3, [r3, #0]
 801d152:	eba3 0308 	sub.w	r3, r3, r8
 801d156:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d15a:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d15e:	eba3 0308 	sub.w	r3, r3, r8
 801d162:	441c      	add	r4, r3
 801d164:	e7ac      	b.n	801d0c0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0xa4>
 801d166:	eb00 0242 	add.w	r2, r0, r2, lsl #1
 801d16a:	4282      	cmp	r2, r0
 801d16c:	d915      	bls.n	801d19a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x17e>
 801d16e:	eb00 060a 	add.w	r6, r0, sl
 801d172:	4286      	cmp	r6, r0
 801d174:	d906      	bls.n	801d184 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x168>
 801d176:	f814 3b01 	ldrb.w	r3, [r4], #1
 801d17a:	f831 3013 	ldrh.w	r3, [r1, r3, lsl #1]
 801d17e:	f820 3b02 	strh.w	r3, [r0], #2
 801d182:	e7f6      	b.n	801d172 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x156>
 801d184:	882b      	ldrh	r3, [r5, #0]
 801d186:	eba3 0308 	sub.w	r3, r3, r8
 801d18a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d18e:	f9bd 300c 	ldrsh.w	r3, [sp, #12]
 801d192:	eba3 0308 	sub.w	r3, r3, r8
 801d196:	441c      	add	r4, r3
 801d198:	e7e7      	b.n	801d16a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x14e>
 801d19a:	4b04      	ldr	r3, [pc, #16]	@ (801d1ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h+0x190>)
 801d19c:	6818      	ldr	r0, [r3, #0]
 801d19e:	6803      	ldr	r3, [r0, #0]
 801d1a0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d1a2:	4798      	blx	r3
 801d1a4:	b007      	add	sp, #28
 801d1a6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d1aa:	bf00      	nop
 801d1ac:	20002f54 	.word	0x20002f54
 801d1b0:	20002f4e 	.word	0x20002f4e

0801d1b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>:
 801d1b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d1b8:	b091      	sub	sp, #68	@ 0x44
 801d1ba:	4680      	mov	r8, r0
 801d1bc:	f89d 5068 	ldrb.w	r5, [sp, #104]	@ 0x68
 801d1c0:	460f      	mov	r7, r1
 801d1c2:	4614      	mov	r4, r2
 801d1c4:	2d00      	cmp	r5, #0
 801d1c6:	d051      	beq.n	801d26c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d1c8:	6810      	ldr	r0, [r2, #0]
 801d1ca:	6851      	ldr	r1, [r2, #4]
 801d1cc:	f8df 9200 	ldr.w	r9, [pc, #512]	@ 801d3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>
 801d1d0:	ae0c      	add	r6, sp, #48	@ 0x30
 801d1d2:	c603      	stmia	r6!, {r0, r1}
 801d1d4:	6818      	ldr	r0, [r3, #0]
 801d1d6:	6859      	ldr	r1, [r3, #4]
 801d1d8:	ae0e      	add	r6, sp, #56	@ 0x38
 801d1da:	c603      	stmia	r6!, {r0, r1}
 801d1dc:	a80c      	add	r0, sp, #48	@ 0x30
 801d1de:	f7f6 fea1 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d1e2:	4621      	mov	r1, r4
 801d1e4:	a80e      	add	r0, sp, #56	@ 0x38
 801d1e6:	f7f6 fec5 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d1ea:	f9bd 2038 	ldrsh.w	r2, [sp, #56]	@ 0x38
 801d1ee:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d1f2:	f8bd 1034 	ldrh.w	r1, [sp, #52]	@ 0x34
 801d1f6:	f8d9 0000 	ldr.w	r0, [r9]
 801d1fa:	f9bd 603c 	ldrsh.w	r6, [sp, #60]	@ 0x3c
 801d1fe:	f9bd a03e 	ldrsh.w	sl, [sp, #62]	@ 0x3e
 801d202:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d206:	eb08 0401 	add.w	r4, r8, r1
 801d20a:	f8bd 1030 	ldrh.w	r1, [sp, #48]	@ 0x30
 801d20e:	f8df 81c4 	ldr.w	r8, [pc, #452]	@ 801d3d4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x220>
 801d212:	440a      	add	r2, r1
 801d214:	f8ad 2038 	strh.w	r2, [sp, #56]	@ 0x38
 801d218:	f8bd 2032 	ldrh.w	r2, [sp, #50]	@ 0x32
 801d21c:	4413      	add	r3, r2
 801d21e:	f8ad 303a 	strh.w	r3, [sp, #58]	@ 0x3a
 801d222:	6803      	ldr	r3, [r0, #0]
 801d224:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d226:	4798      	blx	r3
 801d228:	f010 0f80 	tst.w	r0, #128	@ 0x80
 801d22c:	f8d9 0000 	ldr.w	r0, [r9]
 801d230:	d01f      	beq.n	801d272 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xbe>
 801d232:	2200      	movs	r2, #0
 801d234:	6801      	ldr	r1, [r0, #0]
 801d236:	f8bd 3038 	ldrh.w	r3, [sp, #56]	@ 0x38
 801d23a:	e9cd 2208 	strd	r2, r2, [sp, #32]
 801d23e:	220b      	movs	r2, #11
 801d240:	9207      	str	r2, [sp, #28]
 801d242:	f8b8 2000 	ldrh.w	r2, [r8]
 801d246:	9206      	str	r2, [sp, #24]
 801d248:	2201      	movs	r2, #1
 801d24a:	e9cd 5204 	strd	r5, r2, [sp, #16]
 801d24e:	f8bd 2034 	ldrh.w	r2, [sp, #52]	@ 0x34
 801d252:	9203      	str	r2, [sp, #12]
 801d254:	fa1f f28a 	uxth.w	r2, sl
 801d258:	9202      	str	r2, [sp, #8]
 801d25a:	b2b6      	uxth	r6, r6
 801d25c:	f8bd 203a 	ldrh.w	r2, [sp, #58]	@ 0x3a
 801d260:	9200      	str	r2, [sp, #0]
 801d262:	9601      	str	r6, [sp, #4]
 801d264:	6bcd      	ldr	r5, [r1, #60]	@ 0x3c
 801d266:	463a      	mov	r2, r7
 801d268:	4621      	mov	r1, r4
 801d26a:	47a8      	blx	r5
 801d26c:	b011      	add	sp, #68	@ 0x44
 801d26e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d272:	6803      	ldr	r3, [r0, #0]
 801d274:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d276:	4798      	blx	r3
 801d278:	f8b8 2000 	ldrh.w	r2, [r8]
 801d27c:	f9bd 303a 	ldrsh.w	r3, [sp, #58]	@ 0x3a
 801d280:	f9bd 1038 	ldrsh.w	r1, [sp, #56]	@ 0x38
 801d284:	2dff      	cmp	r5, #255	@ 0xff
 801d286:	fb02 1303 	mla	r3, r2, r3, r1
 801d28a:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d28e:	ea4f 0946 	mov.w	r9, r6, lsl #1
 801d292:	fb0a fa02 	mul.w	sl, sl, r2
 801d296:	d062      	beq.n	801d35e <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1aa>
 801d298:	ea6f 0c05 	mvn.w	ip, r5
 801d29c:	eb00 034a 	add.w	r3, r0, sl, lsl #1
 801d2a0:	930a      	str	r3, [sp, #40]	@ 0x28
 801d2a2:	b2ad      	uxth	r5, r5
 801d2a4:	fa5f fc8c 	uxtb.w	ip, ip
 801d2a8:	f8cd 802c 	str.w	r8, [sp, #44]	@ 0x2c
 801d2ac:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801d2ae:	4298      	cmp	r0, r3
 801d2b0:	f080 8085 	bcs.w	801d3be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d2b4:	eb00 0b09 	add.w	fp, r0, r9
 801d2b8:	4558      	cmp	r0, fp
 801d2ba:	d246      	bcs.n	801d34a <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x196>
 801d2bc:	f814 eb01 	ldrb.w	lr, [r4], #1
 801d2c0:	2303      	movs	r3, #3
 801d2c2:	2204      	movs	r2, #4
 801d2c4:	fb13 2e0e 	smlabb	lr, r3, lr, r2
 801d2c8:	eb07 0a0e 	add.w	sl, r7, lr
 801d2cc:	8803      	ldrh	r3, [r0, #0]
 801d2ce:	f89a 8002 	ldrb.w	r8, [sl, #2]
 801d2d2:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d2d6:	1219      	asrs	r1, r3, #8
 801d2d8:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801d2dc:	fb18 f805 	smulbb	r8, r8, r5
 801d2e0:	ea41 1151 	orr.w	r1, r1, r1, lsr #5
 801d2e4:	10da      	asrs	r2, r3, #3
 801d2e6:	fb01 810c 	mla	r1, r1, ip, r8
 801d2ea:	00db      	lsls	r3, r3, #3
 801d2ec:	f89a 8001 	ldrb.w	r8, [sl, #1]
 801d2f0:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801d2f4:	b2db      	uxtb	r3, r3
 801d2f6:	fb18 f805 	smulbb	r8, r8, r5
 801d2fa:	fb1e fe05 	smulbb	lr, lr, r5
 801d2fe:	ea42 1292 	orr.w	r2, r2, r2, lsr #6
 801d302:	ea43 1353 	orr.w	r3, r3, r3, lsr #5
 801d306:	b289      	uxth	r1, r1
 801d308:	fb02 820c 	mla	r2, r2, ip, r8
 801d30c:	fb03 e30c 	mla	r3, r3, ip, lr
 801d310:	b292      	uxth	r2, r2
 801d312:	b29b      	uxth	r3, r3
 801d314:	f101 0801 	add.w	r8, r1, #1
 801d318:	eb08 2111 	add.w	r1, r8, r1, lsr #8
 801d31c:	f103 0e01 	add.w	lr, r3, #1
 801d320:	f102 0801 	add.w	r8, r2, #1
 801d324:	eb0e 2e13 	add.w	lr, lr, r3, lsr #8
 801d328:	eb08 2812 	add.w	r8, r8, r2, lsr #8
 801d32c:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 801d330:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801d334:	ea4f 1858 	mov.w	r8, r8, lsr #5
 801d338:	ea4e 0101 	orr.w	r1, lr, r1
 801d33c:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 801d340:	ea41 0108 	orr.w	r1, r1, r8
 801d344:	f820 1b02 	strh.w	r1, [r0], #2
 801d348:	e7b6      	b.n	801d2b8 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x104>
 801d34a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801d34c:	881b      	ldrh	r3, [r3, #0]
 801d34e:	1b9b      	subs	r3, r3, r6
 801d350:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d354:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d358:	1b9b      	subs	r3, r3, r6
 801d35a:	441c      	add	r4, r3
 801d35c:	e7a6      	b.n	801d2ac <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xf8>
 801d35e:	491b      	ldr	r1, [pc, #108]	@ (801d3cc <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x218>)
 801d360:	eb00 0a4a 	add.w	sl, r0, sl, lsl #1
 801d364:	2203      	movs	r2, #3
 801d366:	2504      	movs	r5, #4
 801d368:	4550      	cmp	r0, sl
 801d36a:	d228      	bcs.n	801d3be <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x20a>
 801d36c:	eb00 0c09 	add.w	ip, r0, r9
 801d370:	4560      	cmp	r0, ip
 801d372:	4623      	mov	r3, r4
 801d374:	d219      	bcs.n	801d3aa <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1f6>
 801d376:	f893 e000 	ldrb.w	lr, [r3]
 801d37a:	fb12 5e0e 	smlabb	lr, r2, lr, r5
 801d37e:	eb07 0b0e 	add.w	fp, r7, lr
 801d382:	f817 e00e 	ldrb.w	lr, [r7, lr]
 801d386:	f89b 3002 	ldrb.w	r3, [fp, #2]
 801d38a:	f89b b001 	ldrb.w	fp, [fp, #1]
 801d38e:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 801d392:	ea01 2303 	and.w	r3, r1, r3, lsl #8
 801d396:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 801d39a:	ea43 030b 	orr.w	r3, r3, fp
 801d39e:	ea43 03de 	orr.w	r3, r3, lr, lsr #3
 801d3a2:	3401      	adds	r4, #1
 801d3a4:	f820 3b02 	strh.w	r3, [r0], #2
 801d3a8:	e7e2      	b.n	801d370 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1bc>
 801d3aa:	f8b8 3000 	ldrh.w	r3, [r8]
 801d3ae:	1b9b      	subs	r3, r3, r6
 801d3b0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d3b4:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 801d3b8:	1b9b      	subs	r3, r3, r6
 801d3ba:	441c      	add	r4, r3
 801d3bc:	e7d4      	b.n	801d368 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x1b4>
 801d3be:	4b04      	ldr	r3, [pc, #16]	@ (801d3d0 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0x21c>)
 801d3c0:	6818      	ldr	r0, [r3, #0]
 801d3c2:	6803      	ldr	r3, [r0, #0]
 801d3c4:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d3c6:	4798      	blx	r3
 801d3c8:	e750      	b.n	801d26c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3ca:	bf00      	nop
 801d3cc:	fffff800 	.word	0xfffff800
 801d3d0:	20002f54 	.word	0x20002f54
 801d3d4:	20002f4e 	.word	0x20002f4e

0801d3d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>:
 801d3d8:	b4f0      	push	{r4, r5, r6, r7}
 801d3da:	460c      	mov	r4, r1
 801d3dc:	4611      	mov	r1, r2
 801d3de:	f89d 5014 	ldrb.w	r5, [sp, #20]
 801d3e2:	780f      	ldrb	r7, [r1, #0]
 801d3e4:	784e      	ldrb	r6, [r1, #1]
 801d3e6:	2f01      	cmp	r7, #1
 801d3e8:	461a      	mov	r2, r3
 801d3ea:	9b04      	ldr	r3, [sp, #16]
 801d3ec:	d038      	beq.n	801d460 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x88>
 801d3ee:	d31f      	bcc.n	801d430 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x58>
 801d3f0:	2f02      	cmp	r7, #2
 801d3f2:	d14d      	bne.n	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3f4:	2e03      	cmp	r6, #3
 801d3f6:	d84b      	bhi.n	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d3f8:	e8df f006 	tbb	[pc, r6]
 801d3fc:	17140702 	.word	0x17140702
 801d400:	9504      	str	r5, [sp, #16]
 801d402:	4620      	mov	r0, r4
 801d404:	bcf0      	pop	{r4, r5, r6, r7}
 801d406:	f7ff be09 	b.w	801d01c <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB565EPKhS2_RKNS_4RectES5_h>
 801d40a:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d40c:	2800      	cmp	r0, #0
 801d40e:	d03f      	beq.n	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d410:	6806      	ldr	r6, [r0, #0]
 801d412:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d416:	68b5      	ldr	r5, [r6, #8]
 801d418:	4613      	mov	r3, r2
 801d41a:	46ac      	mov	ip, r5
 801d41c:	460a      	mov	r2, r1
 801d41e:	4621      	mov	r1, r4
 801d420:	bcf0      	pop	{r4, r5, r6, r7}
 801d422:	4760      	bx	ip
 801d424:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d428:	e7f0      	b.n	801d40c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d42a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d42e:	e7ed      	b.n	801d40c <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x34>
 801d430:	2e03      	cmp	r6, #3
 801d432:	d82d      	bhi.n	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d434:	e8df f006 	tbb	[pc, r6]
 801d438:	110e0702 	.word	0x110e0702
 801d43c:	9504      	str	r5, [sp, #16]
 801d43e:	4620      	mov	r0, r4
 801d440:	bcf0      	pop	{r4, r5, r6, r7}
 801d442:	f7ff bd05 	b.w	801ce50 <_ZN8touchgfx8LCD16bpp19blitCopyL8_ARGB8888EPKhS2_RKNS_4RectES5_h>
 801d446:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d448:	b310      	cbz	r0, 801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d44a:	6806      	ldr	r6, [r0, #0]
 801d44c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d450:	68f5      	ldr	r5, [r6, #12]
 801d452:	e7e1      	b.n	801d418 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d454:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d458:	e7f6      	b.n	801d448 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d45a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d45e:	e7f3      	b.n	801d448 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x70>
 801d460:	2e03      	cmp	r6, #3
 801d462:	d815      	bhi.n	801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d464:	e8df f006 	tbb	[pc, r6]
 801d468:	110e0702 	.word	0x110e0702
 801d46c:	9504      	str	r5, [sp, #16]
 801d46e:	4620      	mov	r0, r4
 801d470:	bcf0      	pop	{r4, r5, r6, r7}
 801d472:	f7ff be9f 	b.w	801d1b4 <_ZN8touchgfx8LCD16bpp17blitCopyL8_RGB888EPKhS2_RKNS_4RectES5_h>
 801d476:	6fc0      	ldr	r0, [r0, #124]	@ 0x7c
 801d478:	b150      	cbz	r0, 801d490 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xb8>
 801d47a:	6806      	ldr	r6, [r0, #0]
 801d47c:	e9cd 3504 	strd	r3, r5, [sp, #16]
 801d480:	6935      	ldr	r5, [r6, #16]
 801d482:	e7c9      	b.n	801d418 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0x40>
 801d484:	f8d0 0080 	ldr.w	r0, [r0, #128]	@ 0x80
 801d488:	e7f6      	b.n	801d478 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d48a:	f8d0 0084 	ldr.w	r0, [r0, #132]	@ 0x84
 801d48e:	e7f3      	b.n	801d478 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h+0xa0>
 801d490:	bcf0      	pop	{r4, r5, r6, r7}
 801d492:	4770      	bx	lr

0801d494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>:
 801d494:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d498:	4604      	mov	r4, r0
 801d49a:	b087      	sub	sp, #28
 801d49c:	6810      	ldr	r0, [r2, #0]
 801d49e:	f89d a040 	ldrb.w	sl, [sp, #64]	@ 0x40
 801d4a2:	f8df 9238 	ldr.w	r9, [pc, #568]	@ 801d6dc <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x248>
 801d4a6:	460e      	mov	r6, r1
 801d4a8:	6851      	ldr	r1, [r2, #4]
 801d4aa:	ad02      	add	r5, sp, #8
 801d4ac:	c503      	stmia	r5!, {r0, r1}
 801d4ae:	6818      	ldr	r0, [r3, #0]
 801d4b0:	6859      	ldr	r1, [r3, #4]
 801d4b2:	ad04      	add	r5, sp, #16
 801d4b4:	4617      	mov	r7, r2
 801d4b6:	c503      	stmia	r5!, {r0, r1}
 801d4b8:	a802      	add	r0, sp, #8
 801d4ba:	f7f6 fd33 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 801d4be:	4639      	mov	r1, r7
 801d4c0:	a804      	add	r0, sp, #16
 801d4c2:	f7f6 fd57 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 801d4c6:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d4ca:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d4ce:	f8bd 100c 	ldrh.w	r1, [sp, #12]
 801d4d2:	f9bd 8014 	ldrsh.w	r8, [sp, #20]
 801d4d6:	f9bd 5016 	ldrsh.w	r5, [sp, #22]
 801d4da:	fb11 2103 	smlabb	r1, r1, r3, r2
 801d4de:	eb04 0441 	add.w	r4, r4, r1, lsl #1
 801d4e2:	440e      	add	r6, r1
 801d4e4:	f8bd 1008 	ldrh.w	r1, [sp, #8]
 801d4e8:	440a      	add	r2, r1
 801d4ea:	f8ad 2010 	strh.w	r2, [sp, #16]
 801d4ee:	f8bd 200a 	ldrh.w	r2, [sp, #10]
 801d4f2:	4413      	add	r3, r2
 801d4f4:	f8ad 3012 	strh.w	r3, [sp, #18]
 801d4f8:	4b77      	ldr	r3, [pc, #476]	@ (801d6d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d4fa:	6818      	ldr	r0, [r3, #0]
 801d4fc:	6803      	ldr	r3, [r0, #0]
 801d4fe:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801d500:	4798      	blx	r3
 801d502:	f8b9 b000 	ldrh.w	fp, [r9]
 801d506:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d50a:	f9bd 2010 	ldrsh.w	r2, [sp, #16]
 801d50e:	fb0b 2303 	mla	r3, fp, r3, r2
 801d512:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d516:	f1ba 0fff 	cmp.w	sl, #255	@ 0xff
 801d51a:	ea4f 0348 	mov.w	r3, r8, lsl #1
 801d51e:	fb05 f50b 	mul.w	r5, r5, fp
 801d522:	9300      	str	r3, [sp, #0]
 801d524:	d069      	beq.n	801d5fa <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x166>
 801d526:	eb00 0b45 	add.w	fp, r0, r5, lsl #1
 801d52a:	4558      	cmp	r0, fp
 801d52c:	f080 80cc 	bcs.w	801d6c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d530:	9b00      	ldr	r3, [sp, #0]
 801d532:	18c3      	adds	r3, r0, r3
 801d534:	9301      	str	r3, [sp, #4]
 801d536:	4631      	mov	r1, r6
 801d538:	9b01      	ldr	r3, [sp, #4]
 801d53a:	4298      	cmp	r0, r3
 801d53c:	d24f      	bcs.n	801d5de <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x14a>
 801d53e:	f811 2b01 	ldrb.w	r2, [r1], #1
 801d542:	2a00      	cmp	r2, #0
 801d544:	d048      	beq.n	801d5d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d546:	fb0a f202 	mul.w	r2, sl, r2
 801d54a:	1c53      	adds	r3, r2, #1
 801d54c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801d550:	121b      	asrs	r3, r3, #8
 801d552:	d041      	beq.n	801d5d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x144>
 801d554:	8802      	ldrh	r2, [r0, #0]
 801d556:	f8b4 c000 	ldrh.w	ip, [r4]
 801d55a:	b29e      	uxth	r6, r3
 801d55c:	1215      	asrs	r5, r2, #8
 801d55e:	43db      	mvns	r3, r3
 801d560:	b2db      	uxtb	r3, r3
 801d562:	ea4f 272c 	mov.w	r7, ip, asr #8
 801d566:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801d56a:	fb15 f503 	smulbb	r5, r5, r3
 801d56e:	ea4f 0ee2 	mov.w	lr, r2, asr #3
 801d572:	f007 07f8 	and.w	r7, r7, #248	@ 0xf8
 801d576:	00d2      	lsls	r2, r2, #3
 801d578:	fb07 5706 	mla	r7, r7, r6, r5
 801d57c:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801d580:	ea4f 05ec 	mov.w	r5, ip, asr #3
 801d584:	b2d2      	uxtb	r2, r2
 801d586:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801d58a:	b2bf      	uxth	r7, r7
 801d58c:	fb1e fe03 	smulbb	lr, lr, r3
 801d590:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 801d594:	fa5f fc8c 	uxtb.w	ip, ip
 801d598:	fb12 f203 	smulbb	r2, r2, r3
 801d59c:	fb05 e506 	mla	r5, r5, r6, lr
 801d5a0:	fb0c 2c06 	mla	ip, ip, r6, r2
 801d5a4:	f107 0e01 	add.w	lr, r7, #1
 801d5a8:	fa1f fc8c 	uxth.w	ip, ip
 801d5ac:	eb0e 2717 	add.w	r7, lr, r7, lsr #8
 801d5b0:	f407 4e78 	and.w	lr, r7, #63488	@ 0xf800
 801d5b4:	f10c 0701 	add.w	r7, ip, #1
 801d5b8:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 801d5bc:	b2ad      	uxth	r5, r5
 801d5be:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801d5c2:	ea47 070e 	orr.w	r7, r7, lr
 801d5c6:	f105 0e01 	add.w	lr, r5, #1
 801d5ca:	eb0e 2515 	add.w	r5, lr, r5, lsr #8
 801d5ce:	096d      	lsrs	r5, r5, #5
 801d5d0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801d5d4:	432f      	orrs	r7, r5
 801d5d6:	8007      	strh	r7, [r0, #0]
 801d5d8:	3002      	adds	r0, #2
 801d5da:	3402      	adds	r4, #2
 801d5dc:	e7ac      	b.n	801d538 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0xa4>
 801d5de:	f8b9 3000 	ldrh.w	r3, [r9]
 801d5e2:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d5e6:	eba3 0308 	sub.w	r3, r3, r8
 801d5ea:	eba6 0608 	sub.w	r6, r6, r8
 801d5ee:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d5f2:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d5f6:	440e      	add	r6, r1
 801d5f8:	e797      	b.n	801d52a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x96>
 801d5fa:	eb00 0545 	add.w	r5, r0, r5, lsl #1
 801d5fe:	42a8      	cmp	r0, r5
 801d600:	d262      	bcs.n	801d6c8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x234>
 801d602:	9b00      	ldr	r3, [sp, #0]
 801d604:	4631      	mov	r1, r6
 801d606:	eb00 0b03 	add.w	fp, r0, r3
 801d60a:	4558      	cmp	r0, fp
 801d60c:	d24e      	bcs.n	801d6ac <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x218>
 801d60e:	f811 3b01 	ldrb.w	r3, [r1], #1
 801d612:	b12b      	cbz	r3, 801d620 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d614:	2bff      	cmp	r3, #255	@ 0xff
 801d616:	f8b4 e000 	ldrh.w	lr, [r4]
 801d61a:	d104      	bne.n	801d626 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x192>
 801d61c:	f8a0 e000 	strh.w	lr, [r0]
 801d620:	3002      	adds	r0, #2
 801d622:	3402      	adds	r4, #2
 801d624:	e7f1      	b.n	801d60a <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x176>
 801d626:	8802      	ldrh	r2, [r0, #0]
 801d628:	b29f      	uxth	r7, r3
 801d62a:	1216      	asrs	r6, r2, #8
 801d62c:	43db      	mvns	r3, r3
 801d62e:	b2db      	uxtb	r3, r3
 801d630:	ea4f 2c2e 	mov.w	ip, lr, asr #8
 801d634:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 801d638:	fb16 f603 	smulbb	r6, r6, r3
 801d63c:	ea4f 0ae2 	mov.w	sl, r2, asr #3
 801d640:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801d644:	00d2      	lsls	r2, r2, #3
 801d646:	fb0c 6c07 	mla	ip, ip, r7, r6
 801d64a:	b2d2      	uxtb	r2, r2
 801d64c:	ea4f 06ee 	mov.w	r6, lr, asr #3
 801d650:	f00a 0afc 	and.w	sl, sl, #252	@ 0xfc
 801d654:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801d658:	fb1a fa03 	smulbb	sl, sl, r3
 801d65c:	fa1f fc8c 	uxth.w	ip, ip
 801d660:	fb12 f303 	smulbb	r3, r2, r3
 801d664:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 801d668:	fa5f fe8e 	uxtb.w	lr, lr
 801d66c:	fb06 a607 	mla	r6, r6, r7, sl
 801d670:	f10c 0201 	add.w	r2, ip, #1
 801d674:	fb0e 3307 	mla	r3, lr, r7, r3
 801d678:	b2b6      	uxth	r6, r6
 801d67a:	b29b      	uxth	r3, r3
 801d67c:	eb02 2c1c 	add.w	ip, r2, ip, lsr #8
 801d680:	f40c 4278 	and.w	r2, ip, #63488	@ 0xf800
 801d684:	f106 0a01 	add.w	sl, r6, #1
 801d688:	f103 0c01 	add.w	ip, r3, #1
 801d68c:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 801d690:	eb0a 2616 	add.w	r6, sl, r6, lsr #8
 801d694:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801d698:	0976      	lsrs	r6, r6, #5
 801d69a:	ea4c 0c02 	orr.w	ip, ip, r2
 801d69e:	f406 66fc 	and.w	r6, r6, #2016	@ 0x7e0
 801d6a2:	ea4c 0c06 	orr.w	ip, ip, r6
 801d6a6:	f8a0 c000 	strh.w	ip, [r0]
 801d6aa:	e7b9      	b.n	801d620 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x18c>
 801d6ac:	f8b9 3000 	ldrh.w	r3, [r9]
 801d6b0:	f9bd 600c 	ldrsh.w	r6, [sp, #12]
 801d6b4:	eba3 0308 	sub.w	r3, r3, r8
 801d6b8:	eba6 0608 	sub.w	r6, r6, r8
 801d6bc:	eb04 0446 	add.w	r4, r4, r6, lsl #1
 801d6c0:	eb00 0043 	add.w	r0, r0, r3, lsl #1
 801d6c4:	440e      	add	r6, r1
 801d6c6:	e79a      	b.n	801d5fe <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x16a>
 801d6c8:	4b03      	ldr	r3, [pc, #12]	@ (801d6d8 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h+0x244>)
 801d6ca:	6818      	ldr	r0, [r3, #0]
 801d6cc:	6803      	ldr	r3, [r0, #0]
 801d6ce:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801d6d0:	4798      	blx	r3
 801d6d2:	b007      	add	sp, #28
 801d6d4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d6d8:	20002f54 	.word	0x20002f54
 801d6dc:	20002f4e 	.word	0x20002f4e

0801d6e0 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb>:
 801d6e0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801d6e4:	b089      	sub	sp, #36	@ 0x24
 801d6e6:	4607      	mov	r7, r0
 801d6e8:	f89d 604c 	ldrb.w	r6, [sp, #76]	@ 0x4c
 801d6ec:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801d6ee:	4688      	mov	r8, r1
 801d6f0:	4692      	mov	sl, r2
 801d6f2:	4699      	mov	r9, r3
 801d6f4:	2e00      	cmp	r6, #0
 801d6f6:	d048      	beq.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d6f8:	4608      	mov	r0, r1
 801d6fa:	f7fa f827 	bl	801774c <_ZNK8touchgfx6Bitmap8getWidthEv>
 801d6fe:	4605      	mov	r5, r0
 801d700:	4640      	mov	r0, r8
 801d702:	f7fa f857 	bl	80177b4 <_ZNK8touchgfx6Bitmap9getHeightEv>
 801d706:	f8ad 000e 	strh.w	r0, [sp, #14]
 801d70a:	4640      	mov	r0, r8
 801d70c:	f8ad a008 	strh.w	sl, [sp, #8]
 801d710:	f8ad 500c 	strh.w	r5, [sp, #12]
 801d714:	f8ad 900a 	strh.w	r9, [sp, #10]
 801d718:	f7fa f90a 	bl	8017930 <_ZNK8touchgfx6Bitmap7getDataEv>
 801d71c:	4605      	mov	r5, r0
 801d71e:	4640      	mov	r0, r8
 801d720:	f7fa f936 	bl	8017990 <_ZNK8touchgfx6Bitmap12getExtraDataEv>
 801d724:	4682      	mov	sl, r0
 801d726:	4640      	mov	r0, r8
 801d728:	f7fa f986 	bl	8017a38 <_ZNK8touchgfx6Bitmap9getFormatEv>
 801d72c:	2810      	cmp	r0, #16
 801d72e:	d82c      	bhi.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d730:	e8df f010 	tbh	[pc, r0, lsl #1]
 801d734:	00ba00ca 	.word	0x00ba00ca
 801d738:	002b0011 	.word	0x002b0011
 801d73c:	002b002b 	.word	0x002b002b
 801d740:	002b002b 	.word	0x002b002b
 801d744:	002b002b 	.word	0x002b002b
 801d748:	00c1002b 	.word	0x00c1002b
 801d74c:	002b002b 	.word	0x002b002b
 801d750:	002b0180 	.word	0x002b0180
 801d754:	0173      	.short	0x0173
 801d756:	4bbc      	ldr	r3, [pc, #752]	@ (801da48 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x368>)
 801d758:	6818      	ldr	r0, [r3, #0]
 801d75a:	6803      	ldr	r3, [r0, #0]
 801d75c:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801d75e:	4798      	blx	r3
 801d760:	2eff      	cmp	r6, #255	@ 0xff
 801d762:	d101      	bne.n	801d768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d764:	0683      	lsls	r3, r0, #26
 801d766:	d506      	bpl.n	801d776 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x96>
 801d768:	4633      	mov	r3, r6
 801d76a:	4622      	mov	r2, r4
 801d76c:	a902      	add	r1, sp, #8
 801d76e:	4628      	mov	r0, r5
 801d770:	f7ff f8fc 	bl	801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d774:	e009      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d776:	4640      	mov	r0, r8
 801d778:	f7fa f8a2 	bl	80178c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d77c:	b940      	cbnz	r0, 801d790 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xb0>
 801d77e:	4623      	mov	r3, r4
 801d780:	aa02      	add	r2, sp, #8
 801d782:	4629      	mov	r1, r5
 801d784:	4638      	mov	r0, r7
 801d786:	f7ff f9d7 	bl	801cb38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d78a:	b009      	add	sp, #36	@ 0x24
 801d78c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801d790:	f10d 0918 	add.w	r9, sp, #24
 801d794:	4641      	mov	r1, r8
 801d796:	4648      	mov	r0, r9
 801d798:	f7fa f840 	bl	801781c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d79c:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d7a0:	f10d 0810 	add.w	r8, sp, #16
 801d7a4:	e888 0003 	stmia.w	r8, {r0, r1}
 801d7a8:	4640      	mov	r0, r8
 801d7aa:	4621      	mov	r1, r4
 801d7ac:	f7f3 f9f6 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 801d7b0:	4640      	mov	r0, r8
 801d7b2:	f7f3 fa36 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d7b6:	2800      	cmp	r0, #0
 801d7b8:	d1d6      	bne.n	801d768 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x88>
 801d7ba:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d7be:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d7c2:	4293      	cmp	r3, r2
 801d7c4:	dd12      	ble.n	801d7ec <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x10c>
 801d7c6:	1a9b      	subs	r3, r3, r2
 801d7c8:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d7cc:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d7d0:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d7d4:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d7d8:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d7dc:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d7e0:	464a      	mov	r2, r9
 801d7e2:	4633      	mov	r3, r6
 801d7e4:	a902      	add	r1, sp, #8
 801d7e6:	4628      	mov	r0, r5
 801d7e8:	f7ff f8c0 	bl	801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d7ec:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d7f0:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d7f4:	4293      	cmp	r3, r2
 801d7f6:	dd12      	ble.n	801d81e <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x13e>
 801d7f8:	1a9b      	subs	r3, r3, r2
 801d7fa:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d7fe:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d802:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d806:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d80a:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d80e:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d812:	23ff      	movs	r3, #255	@ 0xff
 801d814:	464a      	mov	r2, r9
 801d816:	a902      	add	r1, sp, #8
 801d818:	4628      	mov	r0, r5
 801d81a:	f7ff f8a7 	bl	801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d81e:	4643      	mov	r3, r8
 801d820:	aa02      	add	r2, sp, #8
 801d822:	4629      	mov	r1, r5
 801d824:	4638      	mov	r0, r7
 801d826:	f7ff f987 	bl	801cb38 <_ZNK8touchgfx8LCD16bpp21blitCopyARGB8888SolidEPKmRKNS_4RectES5_>
 801d82a:	88a2      	ldrh	r2, [r4, #4]
 801d82c:	8823      	ldrh	r3, [r4, #0]
 801d82e:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d832:	4413      	add	r3, r2
 801d834:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d838:	440a      	add	r2, r1
 801d83a:	b29b      	uxth	r3, r3
 801d83c:	b292      	uxth	r2, r2
 801d83e:	b211      	sxth	r1, r2
 801d840:	b218      	sxth	r0, r3
 801d842:	4288      	cmp	r0, r1
 801d844:	dd12      	ble.n	801d86c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x18c>
 801d846:	1a9b      	subs	r3, r3, r2
 801d848:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d84c:	f9bd 6012 	ldrsh.w	r6, [sp, #18]
 801d850:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d854:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d858:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d85c:	23ff      	movs	r3, #255	@ 0xff
 801d85e:	464a      	mov	r2, r9
 801d860:	a902      	add	r1, sp, #8
 801d862:	4628      	mov	r0, r5
 801d864:	f8ad 601a 	strh.w	r6, [sp, #26]
 801d868:	f7ff f880 	bl	801c96c <_ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKmRKNS_4RectES5_h>
 801d86c:	88e2      	ldrh	r2, [r4, #6]
 801d86e:	8863      	ldrh	r3, [r4, #2]
 801d870:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d874:	4413      	add	r3, r2
 801d876:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d87a:	440a      	add	r2, r1
 801d87c:	b29b      	uxth	r3, r3
 801d87e:	b292      	uxth	r2, r2
 801d880:	b211      	sxth	r1, r2
 801d882:	b218      	sxth	r0, r3
 801d884:	4288      	cmp	r0, r1
 801d886:	dd80      	ble.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d888:	1a9b      	subs	r3, r3, r2
 801d88a:	f9b4 6000 	ldrsh.w	r6, [r4]
 801d88e:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801d892:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d896:	f8ad 6018 	strh.w	r6, [sp, #24]
 801d89a:	f8ad 101a 	strh.w	r1, [sp, #26]
 801d89e:	f8ad 001c 	strh.w	r0, [sp, #28]
 801d8a2:	23ff      	movs	r3, #255	@ 0xff
 801d8a4:	464a      	mov	r2, r9
 801d8a6:	e761      	b.n	801d76c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x8c>
 801d8a8:	4633      	mov	r3, r6
 801d8aa:	4622      	mov	r2, r4
 801d8ac:	a902      	add	r1, sp, #8
 801d8ae:	4628      	mov	r0, r5
 801d8b0:	f7ff f9b2 	bl	801cc18 <_ZN8touchgfx8LCD16bpp14blitCopyRGB888EPKhRKNS_4RectES5_h>
 801d8b4:	e769      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d8b6:	e9cd 4600 	strd	r4, r6, [sp]
 801d8ba:	ab02      	add	r3, sp, #8
 801d8bc:	4652      	mov	r2, sl
 801d8be:	4629      	mov	r1, r5
 801d8c0:	4638      	mov	r0, r7
 801d8c2:	f7ff fd89 	bl	801d3d8 <_ZN8touchgfx8LCD16bpp10blitCopyL8EPKhS2_RKNS_4RectES5_h>
 801d8c6:	e760      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d8c8:	4640      	mov	r0, r8
 801d8ca:	f7f9 fff9 	bl	80178c0 <_ZNK8touchgfx6Bitmap20hasTransparentPixelsEv>
 801d8ce:	b948      	cbnz	r0, 801d8e4 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x204>
 801d8d0:	683b      	ldr	r3, [r7, #0]
 801d8d2:	e9cd 6000 	strd	r6, r0, [sp]
 801d8d6:	aa02      	add	r2, sp, #8
 801d8d8:	68de      	ldr	r6, [r3, #12]
 801d8da:	4629      	mov	r1, r5
 801d8dc:	4623      	mov	r3, r4
 801d8de:	4638      	mov	r0, r7
 801d8e0:	47b0      	blx	r6
 801d8e2:	e752      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d8e4:	f10d 0918 	add.w	r9, sp, #24
 801d8e8:	4641      	mov	r1, r8
 801d8ea:	4648      	mov	r0, r9
 801d8ec:	f7f9 ff96 	bl	801781c <_ZNK8touchgfx6Bitmap12getSolidRectEv>
 801d8f0:	e899 0003 	ldmia.w	r9, {r0, r1}
 801d8f4:	f10d 0810 	add.w	r8, sp, #16
 801d8f8:	e888 0003 	stmia.w	r8, {r0, r1}
 801d8fc:	4640      	mov	r0, r8
 801d8fe:	4621      	mov	r1, r4
 801d900:	f7f3 f94c 	bl	8010b9c <_ZN8touchgfx4RectaNERKS0_>
 801d904:	4640      	mov	r0, r8
 801d906:	f7f3 f98c 	bl	8010c22 <_ZNK8touchgfx4Rect7isEmptyEv>
 801d90a:	b138      	cbz	r0, 801d91c <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x23c>
 801d90c:	9600      	str	r6, [sp, #0]
 801d90e:	4623      	mov	r3, r4
 801d910:	aa02      	add	r2, sp, #8
 801d912:	4651      	mov	r1, sl
 801d914:	4628      	mov	r0, r5
 801d916:	f7ff fdbd 	bl	801d494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d91a:	e736      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d91c:	683b      	ldr	r3, [r7, #0]
 801d91e:	e9cd 6000 	strd	r6, r0, [sp]
 801d922:	aa02      	add	r2, sp, #8
 801d924:	f8d3 b00c 	ldr.w	fp, [r3, #12]
 801d928:	4629      	mov	r1, r5
 801d92a:	4643      	mov	r3, r8
 801d92c:	4638      	mov	r0, r7
 801d92e:	47d8      	blx	fp
 801d930:	f9bd 3012 	ldrsh.w	r3, [sp, #18]
 801d934:	f9b4 2002 	ldrsh.w	r2, [r4, #2]
 801d938:	4293      	cmp	r3, r2
 801d93a:	dd13      	ble.n	801d964 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x284>
 801d93c:	f9b4 0000 	ldrsh.w	r0, [r4]
 801d940:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 801d944:	f8ad 0018 	strh.w	r0, [sp, #24]
 801d948:	1a9b      	subs	r3, r3, r2
 801d94a:	f8ad 201a 	strh.w	r2, [sp, #26]
 801d94e:	f8ad 101c 	strh.w	r1, [sp, #28]
 801d952:	f8ad 301e 	strh.w	r3, [sp, #30]
 801d956:	9600      	str	r6, [sp, #0]
 801d958:	464b      	mov	r3, r9
 801d95a:	aa02      	add	r2, sp, #8
 801d95c:	4651      	mov	r1, sl
 801d95e:	4628      	mov	r0, r5
 801d960:	f7ff fd98 	bl	801d494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d964:	f9bd 3010 	ldrsh.w	r3, [sp, #16]
 801d968:	f9b4 2000 	ldrsh.w	r2, [r4]
 801d96c:	4293      	cmp	r3, r2
 801d96e:	dd13      	ble.n	801d998 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2b8>
 801d970:	1a9b      	subs	r3, r3, r2
 801d972:	f9bd 0012 	ldrsh.w	r0, [sp, #18]
 801d976:	f9bd 1016 	ldrsh.w	r1, [sp, #22]
 801d97a:	f8ad 2018 	strh.w	r2, [sp, #24]
 801d97e:	f8ad 001a 	strh.w	r0, [sp, #26]
 801d982:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d986:	f8ad 101e 	strh.w	r1, [sp, #30]
 801d98a:	9600      	str	r6, [sp, #0]
 801d98c:	464b      	mov	r3, r9
 801d98e:	aa02      	add	r2, sp, #8
 801d990:	4651      	mov	r1, sl
 801d992:	4628      	mov	r0, r5
 801d994:	f7ff fd7e 	bl	801d494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d998:	88a2      	ldrh	r2, [r4, #4]
 801d99a:	8823      	ldrh	r3, [r4, #0]
 801d99c:	f8bd 1014 	ldrh.w	r1, [sp, #20]
 801d9a0:	4413      	add	r3, r2
 801d9a2:	f8bd 2010 	ldrh.w	r2, [sp, #16]
 801d9a6:	440a      	add	r2, r1
 801d9a8:	b29b      	uxth	r3, r3
 801d9aa:	b292      	uxth	r2, r2
 801d9ac:	b211      	sxth	r1, r2
 801d9ae:	b218      	sxth	r0, r3
 801d9b0:	4288      	cmp	r0, r1
 801d9b2:	dd13      	ble.n	801d9dc <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x2fc>
 801d9b4:	1a9b      	subs	r3, r3, r2
 801d9b6:	f9bd 0016 	ldrsh.w	r0, [sp, #22]
 801d9ba:	f9bd 7012 	ldrsh.w	r7, [sp, #18]
 801d9be:	f8ad 1018 	strh.w	r1, [sp, #24]
 801d9c2:	f8ad 301c 	strh.w	r3, [sp, #28]
 801d9c6:	f8ad 001e 	strh.w	r0, [sp, #30]
 801d9ca:	9600      	str	r6, [sp, #0]
 801d9cc:	464b      	mov	r3, r9
 801d9ce:	aa02      	add	r2, sp, #8
 801d9d0:	4651      	mov	r1, sl
 801d9d2:	4628      	mov	r0, r5
 801d9d4:	f8ad 701a 	strh.w	r7, [sp, #26]
 801d9d8:	f7ff fd5c 	bl	801d494 <_ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h>
 801d9dc:	88e2      	ldrh	r2, [r4, #6]
 801d9de:	8863      	ldrh	r3, [r4, #2]
 801d9e0:	f8bd 1016 	ldrh.w	r1, [sp, #22]
 801d9e4:	4413      	add	r3, r2
 801d9e6:	f8bd 2012 	ldrh.w	r2, [sp, #18]
 801d9ea:	440a      	add	r2, r1
 801d9ec:	b29b      	uxth	r3, r3
 801d9ee:	b292      	uxth	r2, r2
 801d9f0:	b211      	sxth	r1, r2
 801d9f2:	b218      	sxth	r0, r3
 801d9f4:	4288      	cmp	r0, r1
 801d9f6:	f77f aec8 	ble.w	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801d9fa:	f9b4 7000 	ldrsh.w	r7, [r4]
 801d9fe:	f9b4 0004 	ldrsh.w	r0, [r4, #4]
 801da02:	f8ad 7018 	strh.w	r7, [sp, #24]
 801da06:	1a9b      	subs	r3, r3, r2
 801da08:	f8ad 301e 	strh.w	r3, [sp, #30]
 801da0c:	f8ad 101a 	strh.w	r1, [sp, #26]
 801da10:	f8ad 001c 	strh.w	r0, [sp, #28]
 801da14:	9600      	str	r6, [sp, #0]
 801da16:	464b      	mov	r3, r9
 801da18:	e77a      	b.n	801d910 <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x230>
 801da1a:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801da1e:	2800      	cmp	r0, #0
 801da20:	f43f aeb3 	beq.w	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801da24:	6803      	ldr	r3, [r0, #0]
 801da26:	9600      	str	r6, [sp, #0]
 801da28:	68de      	ldr	r6, [r3, #12]
 801da2a:	4623      	mov	r3, r4
 801da2c:	aa02      	add	r2, sp, #8
 801da2e:	4629      	mov	r1, r5
 801da30:	47b0      	blx	r6
 801da32:	e6aa      	b.n	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801da34:	f8d7 0088 	ldr.w	r0, [r7, #136]	@ 0x88
 801da38:	2800      	cmp	r0, #0
 801da3a:	f43f aea6 	beq.w	801d78a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0xaa>
 801da3e:	6803      	ldr	r3, [r0, #0]
 801da40:	9600      	str	r6, [sp, #0]
 801da42:	689e      	ldr	r6, [r3, #8]
 801da44:	e7f1      	b.n	801da2a <_ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb+0x34a>
 801da46:	bf00      	nop
 801da48:	20002f54 	.word	0x20002f54

0801da4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>:
 801da4c:	b180      	cbz	r0, 801da70 <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x24>
 801da4e:	2903      	cmp	r1, #3
 801da50:	d81c      	bhi.n	801da8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da52:	e8df f001 	tbb	[pc, r1]
 801da56:	1d02      	.short	0x1d02
 801da58:	1f08      	.short	0x1f08
 801da5a:	4b10      	ldr	r3, [pc, #64]	@ (801da9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da5c:	8818      	ldrh	r0, [r3, #0]
 801da5e:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da62:	4240      	negs	r0, r0
 801da64:	4770      	bx	lr
 801da66:	4b0d      	ldr	r3, [pc, #52]	@ (801da9c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x50>)
 801da68:	8818      	ldrh	r0, [r3, #0]
 801da6a:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801da6e:	4770      	bx	lr
 801da70:	2903      	cmp	r1, #3
 801da72:	d80b      	bhi.n	801da8c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x40>
 801da74:	a301      	add	r3, pc, #4	@ (adr r3, 801da7c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE+0x30>)
 801da76:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801da7a:	bf00      	nop
 801da7c:	0801da91 	.word	0x0801da91
 801da80:	0801da67 	.word	0x0801da67
 801da84:	0801da95 	.word	0x0801da95
 801da88:	0801da5b 	.word	0x0801da5b
 801da8c:	2000      	movs	r0, #0
 801da8e:	4770      	bx	lr
 801da90:	2001      	movs	r0, #1
 801da92:	4770      	bx	lr
 801da94:	f04f 30ff 	mov.w	r0, #4294967295
 801da98:	4770      	bx	lr
 801da9a:	bf00      	nop
 801da9c:	20002f4e 	.word	0x20002f4e

0801daa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>:
 801daa0:	b180      	cbz	r0, 801dac4 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x24>
 801daa2:	2903      	cmp	r1, #3
 801daa4:	d81c      	bhi.n	801dae0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801daa6:	e8df f001 	tbb	[pc, r1]
 801daaa:	021d      	.short	0x021d
 801daac:	071f      	.short	0x071f
 801daae:	4b10      	ldr	r3, [pc, #64]	@ (801daf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801dab0:	8818      	ldrh	r0, [r3, #0]
 801dab2:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dab6:	4770      	bx	lr
 801dab8:	4b0d      	ldr	r3, [pc, #52]	@ (801daf0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x50>)
 801daba:	8818      	ldrh	r0, [r3, #0]
 801dabc:	f3c0 000e 	ubfx	r0, r0, #0, #15
 801dac0:	4240      	negs	r0, r0
 801dac2:	4770      	bx	lr
 801dac4:	2903      	cmp	r1, #3
 801dac6:	d80b      	bhi.n	801dae0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x40>
 801dac8:	a301      	add	r3, pc, #4	@ (adr r3, 801dad0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE+0x30>)
 801daca:	f853 f021 	ldr.w	pc, [r3, r1, lsl #2]
 801dace:	bf00      	nop
 801dad0:	0801daaf 	.word	0x0801daaf
 801dad4:	0801dae9 	.word	0x0801dae9
 801dad8:	0801dab9 	.word	0x0801dab9
 801dadc:	0801dae5 	.word	0x0801dae5
 801dae0:	2000      	movs	r0, #0
 801dae2:	4770      	bx	lr
 801dae4:	2001      	movs	r0, #1
 801dae6:	4770      	bx	lr
 801dae8:	f04f 30ff 	mov.w	r0, #4294967295
 801daec:	4770      	bx	lr
 801daee:	bf00      	nop
 801daf0:	20002f4e 	.word	0x20002f4e

0801daf4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE>:
 801daf4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801daf8:	b099      	sub	sp, #100	@ 0x64
 801dafa:	910b      	str	r1, [sp, #44]	@ 0x2c
 801dafc:	a914      	add	r1, sp, #80	@ 0x50
 801dafe:	e881 000c 	stmia.w	r1, {r2, r3}
 801db02:	e9dd 2126 	ldrd	r2, r1, [sp, #152]	@ 0x98
 801db06:	f9bd 308c 	ldrsh.w	r3, [sp, #140]	@ 0x8c
 801db0a:	f891 900d 	ldrb.w	r9, [r1, #13]
 801db0e:	9309      	str	r3, [sp, #36]	@ 0x24
 801db10:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 801db14:	9310      	str	r3, [sp, #64]	@ 0x40
 801db16:	ea4f 1749 	mov.w	r7, r9, lsl #5
 801db1a:	f89d 30b0 	ldrb.w	r3, [sp, #176]	@ 0xb0
 801db1e:	930c      	str	r3, [sp, #48]	@ 0x30
 801db20:	f407 7380 	and.w	r3, r7, #256	@ 0x100
 801db24:	798f      	ldrb	r7, [r1, #6]
 801db26:	f9bd 4088 	ldrsh.w	r4, [sp, #136]	@ 0x88
 801db2a:	f8bd 5090 	ldrh.w	r5, [sp, #144]	@ 0x90
 801db2e:	f8bd 6094 	ldrh.w	r6, [sp, #148]	@ 0x94
 801db32:	f89d 80ac 	ldrb.w	r8, [sp, #172]	@ 0xac
 801db36:	f89d a0b4 	ldrb.w	sl, [sp, #180]	@ 0xb4
 801db3a:	431f      	orrs	r7, r3
 801db3c:	f000 8195 	beq.w	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db40:	ea4f 1909 	mov.w	r9, r9, lsl #4
 801db44:	f409 7380 	and.w	r3, r9, #256	@ 0x100
 801db48:	f891 9007 	ldrb.w	r9, [r1, #7]
 801db4c:	ea59 0903 	orrs.w	r9, r9, r3
 801db50:	f000 818b 	beq.w	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801db54:	f991 3009 	ldrsb.w	r3, [r1, #9]
 801db58:	b29b      	uxth	r3, r3
 801db5a:	2d00      	cmp	r5, #0
 801db5c:	f000 812e 	beq.w	801ddbc <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2c8>
 801db60:	1aed      	subs	r5, r5, r3
 801db62:	b2ad      	uxth	r5, r5
 801db64:	042b      	lsls	r3, r5, #16
 801db66:	d502      	bpl.n	801db6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801db68:	1b64      	subs	r4, r4, r5
 801db6a:	b224      	sxth	r4, r4
 801db6c:	2500      	movs	r5, #0
 801db6e:	f9b2 1000 	ldrsh.w	r1, [r2]
 801db72:	f8cd 9028 	str.w	r9, [sp, #40]	@ 0x28
 801db76:	428c      	cmp	r4, r1
 801db78:	b28b      	uxth	r3, r1
 801db7a:	bfbf      	itttt	lt
 801db7c:	18ed      	addlt	r5, r5, r3
 801db7e:	1b2c      	sublt	r4, r5, r4
 801db80:	b2a5      	uxthlt	r5, r4
 801db82:	460c      	movlt	r4, r1
 801db84:	8891      	ldrh	r1, [r2, #4]
 801db86:	440b      	add	r3, r1
 801db88:	b21b      	sxth	r3, r3
 801db8a:	930f      	str	r3, [sp, #60]	@ 0x3c
 801db8c:	88d3      	ldrh	r3, [r2, #6]
 801db8e:	8852      	ldrh	r2, [r2, #2]
 801db90:	4413      	add	r3, r2
 801db92:	b21b      	sxth	r3, r3
 801db94:	930d      	str	r3, [sp, #52]	@ 0x34
 801db96:	4bbe      	ldr	r3, [pc, #760]	@ (801de90 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x39c>)
 801db98:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801db9a:	f893 b000 	ldrb.w	fp, [r3]
 801db9e:	f10b 3cff 	add.w	ip, fp, #4294967295
 801dba2:	f1dc 0300 	rsbs	r3, ip, #0
 801dba6:	eb43 030c 	adc.w	r3, r3, ip
 801dbaa:	930e      	str	r3, [sp, #56]	@ 0x38
 801dbac:	4621      	mov	r1, r4
 801dbae:	4653      	mov	r3, sl
 801dbb0:	a814      	add	r0, sp, #80	@ 0x50
 801dbb2:	f7f6 f82c 	bl	8013c0e <_ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE>
 801dbb6:	4621      	mov	r1, r4
 801dbb8:	f8ad 005c 	strh.w	r0, [sp, #92]	@ 0x5c
 801dbbc:	4653      	mov	r3, sl
 801dbbe:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 801dbc0:	a814      	add	r0, sp, #80	@ 0x50
 801dbc2:	f7f6 f841 	bl	8013c48 <_ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE>
 801dbc6:	a918      	add	r1, sp, #96	@ 0x60
 801dbc8:	f821 0d02 	strh.w	r0, [r1, #-2]!
 801dbcc:	a817      	add	r0, sp, #92	@ 0x5c
 801dbce:	f7f6 f967 	bl	8013ea0 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_>
 801dbd2:	f1ba 0f00 	cmp.w	sl, #0
 801dbd6:	f040 80f4 	bne.w	801ddc2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2ce>
 801dbda:	f1bb 0f01 	cmp.w	fp, #1
 801dbde:	f040 80f8 	bne.w	801ddd2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2de>
 801dbe2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801dbe4:	2b00      	cmp	r3, #0
 801dbe6:	f040 8145 	bne.w	801de74 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x380>
 801dbea:	b2ba      	uxth	r2, r7
 801dbec:	b905      	cbnz	r5, 801dbf0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xfc>
 801dbee:	b16e      	cbz	r6, 801dc0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x118>
 801dbf0:	fb06 5302 	mla	r3, r6, r2, r5
 801dbf4:	9828      	ldr	r0, [sp, #160]	@ 0xa0
 801dbf6:	fb08 f303 	mul.w	r3, r8, r3
 801dbfa:	4631      	mov	r1, r6
 801dbfc:	f003 0607 	and.w	r6, r3, #7
 801dc00:	eb00 03d3 	add.w	r3, r0, r3, lsr #3
 801dc04:	9328      	str	r3, [sp, #160]	@ 0xa0
 801dc06:	eba9 0301 	sub.w	r3, r9, r1
 801dc0a:	930a      	str	r3, [sp, #40]	@ 0x28
 801dc0c:	4651      	mov	r1, sl
 801dc0e:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801dc10:	f7ff ff1c 	bl	801da4c <_ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE>
 801dc14:	4681      	mov	r9, r0
 801dc16:	980e      	ldr	r0, [sp, #56]	@ 0x38
 801dc18:	f7ff ff42 	bl	801daa0 <_ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE>
 801dc1c:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801dc1e:	9909      	ldr	r1, [sp, #36]	@ 0x24
 801dc20:	eba3 0a01 	sub.w	sl, r3, r1
 801dc24:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dc26:	459a      	cmp	sl, r3
 801dc28:	bfa8      	it	ge
 801dc2a:	469a      	movge	sl, r3
 801dc2c:	f1ba 0f00 	cmp.w	sl, #0
 801dc30:	4683      	mov	fp, r0
 801dc32:	f340 811a 	ble.w	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc36:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dc38:	1b64      	subs	r4, r4, r5
 801dc3a:	1b1c      	subs	r4, r3, r4
 801dc3c:	42bc      	cmp	r4, r7
 801dc3e:	bfd4      	ite	le
 801dc40:	ebc5 0504 	rsble	r5, r5, r4
 801dc44:	ebc5 0507 	rsbgt	r5, r5, r7
 801dc48:	2d00      	cmp	r5, #0
 801dc4a:	f340 810e 	ble.w	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801dc4e:	1b52      	subs	r2, r2, r5
 801dc50:	fb08 f302 	mul.w	r3, r8, r2
 801dc54:	930f      	str	r3, [sp, #60]	@ 0x3c
 801dc56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dc58:	2b00      	cmp	r3, #0
 801dc5a:	f040 8116 	bne.w	801de8a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x396>
 801dc5e:	4b8d      	ldr	r3, [pc, #564]	@ (801de94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>)
 801dc60:	6818      	ldr	r0, [r3, #0]
 801dc62:	6803      	ldr	r3, [r0, #0]
 801dc64:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 801dc66:	4798      	blx	r3
 801dc68:	2301      	movs	r3, #1
 801dc6a:	fa03 f308 	lsl.w	r3, r3, r8
 801dc6e:	4a8a      	ldr	r2, [pc, #552]	@ (801de98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a4>)
 801dc70:	3b01      	subs	r3, #1
 801dc72:	b2db      	uxtb	r3, r3
 801dc74:	8811      	ldrh	r1, [r2, #0]
 801dc76:	930e      	str	r3, [sp, #56]	@ 0x38
 801dc78:	f9bd 205c 	ldrsh.w	r2, [sp, #92]	@ 0x5c
 801dc7c:	f9bd 305e 	ldrsh.w	r3, [sp, #94]	@ 0x5e
 801dc80:	fb01 2303 	mla	r3, r1, r3, r2
 801dc84:	eb00 0343 	add.w	r3, r0, r3, lsl #1
 801dc88:	930a      	str	r3, [sp, #40]	@ 0x28
 801dc8a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801dc8c:	f3c3 4307 	ubfx	r3, r3, #16, #8
 801dc90:	9313      	str	r3, [sp, #76]	@ 0x4c
 801dc92:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801dc94:	0a19      	lsrs	r1, r3, #8
 801dc96:	b2cb      	uxtb	r3, r1
 801dc98:	9312      	str	r3, [sp, #72]	@ 0x48
 801dc9a:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801dc9c:	b2db      	uxtb	r3, r3
 801dc9e:	9311      	str	r3, [sp, #68]	@ 0x44
 801dca0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801dca2:	095a      	lsrs	r2, r3, #5
 801dca4:	4b7d      	ldr	r3, [pc, #500]	@ (801de9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a8>)
 801dca6:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801dcaa:	400b      	ands	r3, r1
 801dcac:	4313      	orrs	r3, r2
 801dcae:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801dcb0:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 801dcb4:	4313      	orrs	r3, r2
 801dcb6:	b29b      	uxth	r3, r3
 801dcb8:	9310      	str	r3, [sp, #64]	@ 0x40
 801dcba:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801dcbc:	781a      	ldrb	r2, [r3, #0]
 801dcbe:	ea4f 0349 	mov.w	r3, r9, lsl #1
 801dcc2:	4132      	asrs	r2, r6
 801dcc4:	fb05 b919 	mls	r9, r5, r9, fp
 801dcc8:	fb03 fb05 	mul.w	fp, r3, r5
 801dccc:	b2d2      	uxtb	r2, r2
 801dcce:	930d      	str	r3, [sp, #52]	@ 0x34
 801dcd0:	eb0b 0b49 	add.w	fp, fp, r9, lsl #1
 801dcd4:	f11a 3aff 	adds.w	sl, sl, #4294967295
 801dcd8:	f0c0 80f5 	bcc.w	801dec6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3d2>
 801dcdc:	f8dd c028 	ldr.w	ip, [sp, #40]	@ 0x28
 801dce0:	46ae      	mov	lr, r5
 801dce2:	f11e 3eff 	adds.w	lr, lr, #4294967295
 801dce6:	f0c0 80dd 	bcc.w	801dea4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3b0>
 801dcea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801dcec:	4013      	ands	r3, r2
 801dcee:	d055      	beq.n	801dd9c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a8>
 801dcf0:	20ff      	movs	r0, #255	@ 0xff
 801dcf2:	990e      	ldr	r1, [sp, #56]	@ 0x38
 801dcf4:	fb90 f1f1 	sdiv	r1, r0, r1
 801dcf8:	434b      	muls	r3, r1
 801dcfa:	2bfe      	cmp	r3, #254	@ 0xfe
 801dcfc:	dd03      	ble.n	801dd06 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x212>
 801dcfe:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dd00:	4281      	cmp	r1, r0
 801dd02:	f000 80cd 	beq.w	801dea0 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ac>
 801dd06:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801dd08:	f8bc 4000 	ldrh.w	r4, [ip]
 801dd0c:	fb11 f303 	smulbb	r3, r1, r3
 801dd10:	b29b      	uxth	r3, r3
 801dd12:	1c59      	adds	r1, r3, #1
 801dd14:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 801dd18:	f3c3 2307 	ubfx	r3, r3, #8, #8
 801dd1c:	b29f      	uxth	r7, r3
 801dd1e:	43db      	mvns	r3, r3
 801dd20:	b2db      	uxtb	r3, r3
 801dd22:	9309      	str	r3, [sp, #36]	@ 0x24
 801dd24:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801dd26:	1220      	asrs	r0, r4, #8
 801dd28:	fb13 f907 	smulbb	r9, r3, r7
 801dd2c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801dd30:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd32:	ea40 1050 	orr.w	r0, r0, r0, lsr #5
 801dd36:	fb00 9003 	mla	r0, r0, r3, r9
 801dd3a:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801dd3c:	10e1      	asrs	r1, r4, #3
 801dd3e:	fb13 f907 	smulbb	r9, r3, r7
 801dd42:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801dd46:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd48:	ea41 1191 	orr.w	r1, r1, r1, lsr #6
 801dd4c:	fb01 9103 	mla	r1, r1, r3, r9
 801dd50:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801dd52:	00e4      	lsls	r4, r4, #3
 801dd54:	fb13 f707 	smulbb	r7, r3, r7
 801dd58:	b2e4      	uxtb	r4, r4
 801dd5a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801dd5c:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 801dd60:	fb04 7403 	mla	r4, r4, r3, r7
 801dd64:	b280      	uxth	r0, r0
 801dd66:	b2a4      	uxth	r4, r4
 801dd68:	1c43      	adds	r3, r0, #1
 801dd6a:	f104 0901 	add.w	r9, r4, #1
 801dd6e:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 801dd72:	eb09 2914 	add.w	r9, r9, r4, lsr #8
 801dd76:	b289      	uxth	r1, r1
 801dd78:	f3c9 29c4 	ubfx	r9, r9, #11, #5
 801dd7c:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801dd80:	ea49 0000 	orr.w	r0, r9, r0
 801dd84:	f101 0901 	add.w	r9, r1, #1
 801dd88:	eb09 2911 	add.w	r9, r9, r1, lsr #8
 801dd8c:	ea4f 1959 	mov.w	r9, r9, lsr #5
 801dd90:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 801dd94:	ea40 0009 	orr.w	r0, r0, r9
 801dd98:	f8ac 0000 	strh.w	r0, [ip]
 801dd9c:	4446      	add	r6, r8
 801dd9e:	b2b6      	uxth	r6, r6
 801dda0:	2e07      	cmp	r6, #7
 801dda2:	bf81      	itttt	hi
 801dda4:	9b28      	ldrhi	r3, [sp, #160]	@ 0xa0
 801dda6:	785a      	ldrbhi	r2, [r3, #1]
 801dda8:	3301      	addhi	r3, #1
 801ddaa:	9328      	strhi	r3, [sp, #160]	@ 0xa0
 801ddac:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801ddae:	bf9a      	itte	ls
 801ddb0:	fa42 f208 	asrls.w	r2, r2, r8
 801ddb4:	b2d2      	uxtbls	r2, r2
 801ddb6:	2600      	movhi	r6, #0
 801ddb8:	449c      	add	ip, r3
 801ddba:	e792      	b.n	801dce2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1ee>
 801ddbc:	441c      	add	r4, r3
 801ddbe:	b224      	sxth	r4, r4
 801ddc0:	e6d5      	b.n	801db6e <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x7a>
 801ddc2:	f1ba 0f01 	cmp.w	sl, #1
 801ddc6:	f47f af0c 	bne.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddca:	f1bb 0f01 	cmp.w	fp, #1
 801ddce:	f47f af08 	bne.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801ddd2:	f8df b0c0 	ldr.w	fp, [pc, #192]	@ 801de94 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3a0>
 801ddd6:	f8db 0000 	ldr.w	r0, [fp]
 801ddda:	6803      	ldr	r3, [r0, #0]
 801dddc:	6b9b      	ldr	r3, [r3, #56]	@ 0x38
 801ddde:	4798      	blx	r3
 801dde0:	f410 7380 	ands.w	r3, r0, #256	@ 0x100
 801dde4:	465a      	mov	r2, fp
 801dde6:	d006      	beq.n	801ddf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801dde8:	f1b8 0f04 	cmp.w	r8, #4
 801ddec:	d140      	bne.n	801de70 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x37c>
 801ddee:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ddf0:	3300      	adds	r3, #0
 801ddf2:	bf18      	it	ne
 801ddf4:	2301      	movne	r3, #1
 801ddf6:	0580      	lsls	r0, r0, #22
 801ddf8:	d56e      	bpl.n	801ded8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801ddfa:	f1b8 0f08 	cmp.w	r8, #8
 801ddfe:	d16b      	bne.n	801ded8 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3e4>
 801de00:	2b00      	cmp	r3, #0
 801de02:	bf0c      	ite	eq
 801de04:	f44f 7100 	moveq.w	r1, #512	@ 0x200
 801de08:	f44f 7180 	movne.w	r1, #256	@ 0x100
 801de0c:	2d00      	cmp	r5, #0
 801de0e:	f47f aee8 	bne.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de12:	2e00      	cmp	r6, #0
 801de14:	f47f aee5 	bne.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de18:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 801de1a:	19e3      	adds	r3, r4, r7
 801de1c:	4283      	cmp	r3, r0
 801de1e:	f73f aee0 	bgt.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de22:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801de24:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801de26:	444b      	add	r3, r9
 801de28:	4283      	cmp	r3, r0
 801de2a:	f73f aeda 	bgt.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801de2e:	6810      	ldr	r0, [r2, #0]
 801de30:	f8bd 305e 	ldrh.w	r3, [sp, #94]	@ 0x5e
 801de34:	6804      	ldr	r4, [r0, #0]
 801de36:	f8bd 205c 	ldrh.w	r2, [sp, #92]	@ 0x5c
 801de3a:	b2bf      	uxth	r7, r7
 801de3c:	f1b8 0f08 	cmp.w	r8, #8
 801de40:	f04f 0500 	mov.w	r5, #0
 801de44:	bf18      	it	ne
 801de46:	3701      	addne	r7, #1
 801de48:	e9cd 1505 	strd	r1, r5, [sp, #20]
 801de4c:	990c      	ldr	r1, [sp, #48]	@ 0x30
 801de4e:	9104      	str	r1, [sp, #16]
 801de50:	bf18      	it	ne
 801de52:	f027 0701 	bicne.w	r7, r7, #1
 801de56:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 801de58:	bf18      	it	ne
 801de5a:	b2bf      	uxthne	r7, r7
 801de5c:	e9cd 7102 	strd	r7, r1, [sp, #8]
 801de60:	e9cd 7900 	strd	r7, r9, [sp]
 801de64:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 801de66:	6d64      	ldr	r4, [r4, #84]	@ 0x54
 801de68:	47a0      	blx	r4
 801de6a:	b019      	add	sp, #100	@ 0x64
 801de6c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801de70:	2300      	movs	r3, #0
 801de72:	e7c0      	b.n	801ddf6 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x302>
 801de74:	2208      	movs	r2, #8
 801de76:	fb92 f3f8 	sdiv	r3, r2, r8
 801de7a:	1e5a      	subs	r2, r3, #1
 801de7c:	443a      	add	r2, r7
 801de7e:	fb92 f2f3 	sdiv	r2, r2, r3
 801de82:	fb12 f203 	smulbb	r2, r2, r3
 801de86:	b292      	uxth	r2, r2
 801de88:	e6b0      	b.n	801dbec <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xf8>
 801de8a:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 801de8c:	e6ec      	b.n	801dc68 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x174>
 801de8e:	bf00      	nop
 801de90:	20002f4c 	.word	0x20002f4c
 801de94:	20002f54 	.word	0x20002f54
 801de98:	20002f4e 	.word	0x20002f4e
 801de9c:	00fff800 	.word	0x00fff800
 801dea0:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801dea2:	e779      	b.n	801dd98 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x2a4>
 801dea4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801dea6:	b153      	cbz	r3, 801debe <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3ca>
 801dea8:	441e      	add	r6, r3
 801deaa:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 801deac:	b2b6      	uxth	r6, r6
 801deae:	eb03 03d6 	add.w	r3, r3, r6, lsr #3
 801deb2:	f006 0607 	and.w	r6, r6, #7
 801deb6:	781a      	ldrb	r2, [r3, #0]
 801deb8:	9328      	str	r3, [sp, #160]	@ 0xa0
 801deba:	4132      	asrs	r2, r6
 801debc:	b2d2      	uxtb	r2, r2
 801debe:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801dec0:	445b      	add	r3, fp
 801dec2:	930a      	str	r3, [sp, #40]	@ 0x28
 801dec4:	e706      	b.n	801dcd4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x1e0>
 801dec6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801dec8:	2b00      	cmp	r3, #0
 801deca:	d1ce      	bne.n	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801decc:	4b05      	ldr	r3, [pc, #20]	@ (801dee4 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x3f0>)
 801dece:	6818      	ldr	r0, [r3, #0]
 801ded0:	6803      	ldr	r3, [r0, #0]
 801ded2:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 801ded4:	4798      	blx	r3
 801ded6:	e7c8      	b.n	801de6a <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x376>
 801ded8:	2b00      	cmp	r3, #0
 801deda:	f43f ae82 	beq.w	801dbe2 <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0xee>
 801dede:	f44f 7180 	mov.w	r1, #256	@ 0x100
 801dee2:	e793      	b.n	801de0c <_ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhhNS_9colortypeEhhNS_12TextRotationE+0x318>
 801dee4:	20002f54 	.word	0x20002f54

0801dee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>:
 801dee8:	b538      	push	{r3, r4, r5, lr}
 801deea:	4c15      	ldr	r4, [pc, #84]	@ (801df40 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x58>)
 801deec:	7823      	ldrb	r3, [r4, #0]
 801deee:	f3bf 8f5b 	dmb	ish
 801def2:	07da      	lsls	r2, r3, #31
 801def4:	4605      	mov	r5, r0
 801def6:	d40b      	bmi.n	801df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801def8:	4620      	mov	r0, r4
 801defa:	f007 fefc 	bl	8025cf6 <__cxa_guard_acquire>
 801defe:	b138      	cbz	r0, 801df10 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x28>
 801df00:	4620      	mov	r0, r4
 801df02:	f007 ff04 	bl	8025d0e <__cxa_guard_release>
 801df06:	4a0f      	ldr	r2, [pc, #60]	@ (801df44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df08:	490f      	ldr	r1, [pc, #60]	@ (801df48 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x60>)
 801df0a:	4810      	ldr	r0, [pc, #64]	@ (801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df0c:	f007 feec 	bl	8025ce8 <__aeabi_atexit>
 801df10:	4c0f      	ldr	r4, [pc, #60]	@ (801df50 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x68>)
 801df12:	7823      	ldrb	r3, [r4, #0]
 801df14:	f3bf 8f5b 	dmb	ish
 801df18:	07db      	lsls	r3, r3, #31
 801df1a:	d40b      	bmi.n	801df34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df1c:	4620      	mov	r0, r4
 801df1e:	f007 feea 	bl	8025cf6 <__cxa_guard_acquire>
 801df22:	b138      	cbz	r0, 801df34 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x4c>
 801df24:	4620      	mov	r0, r4
 801df26:	f007 fef2 	bl	8025d0e <__cxa_guard_release>
 801df2a:	4a06      	ldr	r2, [pc, #24]	@ (801df44 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x5c>)
 801df2c:	4909      	ldr	r1, [pc, #36]	@ (801df54 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x6c>)
 801df2e:	480a      	ldr	r0, [pc, #40]	@ (801df58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df30:	f007 feda 	bl	8025ce8 <__aeabi_atexit>
 801df34:	4b05      	ldr	r3, [pc, #20]	@ (801df4c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x64>)
 801df36:	616b      	str	r3, [r5, #20]
 801df38:	4b07      	ldr	r3, [pc, #28]	@ (801df58 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv+0x70>)
 801df3a:	61ab      	str	r3, [r5, #24]
 801df3c:	bd38      	pop	{r3, r4, r5, pc}
 801df3e:	bf00      	nop
 801df40:	20003030 	.word	0x20003030
 801df44:	20000000 	.word	0x20000000
 801df48:	0801a0af 	.word	0x0801a0af
 801df4c:	20000078 	.word	0x20000078
 801df50:	20003034 	.word	0x20003034
 801df54:	0801a0ad 	.word	0x0801a0ad
 801df58:	2000007c 	.word	0x2000007c

0801df5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>:
 801df5c:	b538      	push	{r3, r4, r5, lr}
 801df5e:	4c15      	ldr	r4, [pc, #84]	@ (801dfb4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x58>)
 801df60:	7823      	ldrb	r3, [r4, #0]
 801df62:	f3bf 8f5b 	dmb	ish
 801df66:	07da      	lsls	r2, r3, #31
 801df68:	4605      	mov	r5, r0
 801df6a:	d40b      	bmi.n	801df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df6c:	4620      	mov	r0, r4
 801df6e:	f007 fec2 	bl	8025cf6 <__cxa_guard_acquire>
 801df72:	b138      	cbz	r0, 801df84 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x28>
 801df74:	4620      	mov	r0, r4
 801df76:	f007 feca 	bl	8025d0e <__cxa_guard_release>
 801df7a:	4a0f      	ldr	r2, [pc, #60]	@ (801dfb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801df7c:	490f      	ldr	r1, [pc, #60]	@ (801dfbc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x60>)
 801df7e:	4810      	ldr	r0, [pc, #64]	@ (801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801df80:	f007 feb2 	bl	8025ce8 <__aeabi_atexit>
 801df84:	4c0f      	ldr	r4, [pc, #60]	@ (801dfc4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x68>)
 801df86:	7823      	ldrb	r3, [r4, #0]
 801df88:	f3bf 8f5b 	dmb	ish
 801df8c:	07db      	lsls	r3, r3, #31
 801df8e:	d40b      	bmi.n	801dfa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801df90:	4620      	mov	r0, r4
 801df92:	f007 feb0 	bl	8025cf6 <__cxa_guard_acquire>
 801df96:	b138      	cbz	r0, 801dfa8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x4c>
 801df98:	4620      	mov	r0, r4
 801df9a:	f007 feb8 	bl	8025d0e <__cxa_guard_release>
 801df9e:	4a06      	ldr	r2, [pc, #24]	@ (801dfb8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x5c>)
 801dfa0:	4909      	ldr	r1, [pc, #36]	@ (801dfc8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x6c>)
 801dfa2:	480a      	ldr	r0, [pc, #40]	@ (801dfcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dfa4:	f007 fea0 	bl	8025ce8 <__aeabi_atexit>
 801dfa8:	4b05      	ldr	r3, [pc, #20]	@ (801dfc0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x64>)
 801dfaa:	60eb      	str	r3, [r5, #12]
 801dfac:	4b07      	ldr	r3, [pc, #28]	@ (801dfcc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv+0x70>)
 801dfae:	612b      	str	r3, [r5, #16]
 801dfb0:	bd38      	pop	{r3, r4, r5, pc}
 801dfb2:	bf00      	nop
 801dfb4:	20003008 	.word	0x20003008
 801dfb8:	20000000 	.word	0x20000000
 801dfbc:	0801a0b3 	.word	0x0801a0b3
 801dfc0:	20000050 	.word	0x20000050
 801dfc4:	2000300c 	.word	0x2000300c
 801dfc8:	0801a0b1 	.word	0x0801a0b1
 801dfcc:	20000054 	.word	0x20000054

0801dfd0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>:
 801dfd0:	b510      	push	{r4, lr}
 801dfd2:	4604      	mov	r4, r0
 801dfd4:	f7ff ff88 	bl	801dee8 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB565_BilinearInterpolationEv>
 801dfd8:	4620      	mov	r0, r4
 801dfda:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801dfde:	f7ff bfbd 	b.w	801df5c <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB565_NearestNeighborEv>
	...

0801dfe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>:
 801dfe4:	b538      	push	{r3, r4, r5, lr}
 801dfe6:	4c15      	ldr	r4, [pc, #84]	@ (801e03c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x58>)
 801dfe8:	7823      	ldrb	r3, [r4, #0]
 801dfea:	f3bf 8f5b 	dmb	ish
 801dfee:	07da      	lsls	r2, r3, #31
 801dff0:	4605      	mov	r5, r0
 801dff2:	d40b      	bmi.n	801e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dff4:	4620      	mov	r0, r4
 801dff6:	f007 fe7e 	bl	8025cf6 <__cxa_guard_acquire>
 801dffa:	b138      	cbz	r0, 801e00c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x28>
 801dffc:	4620      	mov	r0, r4
 801dffe:	f007 fe86 	bl	8025d0e <__cxa_guard_release>
 801e002:	4a0f      	ldr	r2, [pc, #60]	@ (801e040 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e004:	490f      	ldr	r1, [pc, #60]	@ (801e044 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x60>)
 801e006:	4810      	ldr	r0, [pc, #64]	@ (801e048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e008:	f007 fe6e 	bl	8025ce8 <__aeabi_atexit>
 801e00c:	4c0f      	ldr	r4, [pc, #60]	@ (801e04c <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x68>)
 801e00e:	7823      	ldrb	r3, [r4, #0]
 801e010:	f3bf 8f5b 	dmb	ish
 801e014:	07db      	lsls	r3, r3, #31
 801e016:	d40b      	bmi.n	801e030 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e018:	4620      	mov	r0, r4
 801e01a:	f007 fe6c 	bl	8025cf6 <__cxa_guard_acquire>
 801e01e:	b138      	cbz	r0, 801e030 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x4c>
 801e020:	4620      	mov	r0, r4
 801e022:	f007 fe74 	bl	8025d0e <__cxa_guard_release>
 801e026:	4a06      	ldr	r2, [pc, #24]	@ (801e040 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x5c>)
 801e028:	4909      	ldr	r1, [pc, #36]	@ (801e050 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x6c>)
 801e02a:	480a      	ldr	r0, [pc, #40]	@ (801e054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e02c:	f007 fe5c 	bl	8025ce8 <__aeabi_atexit>
 801e030:	4b05      	ldr	r3, [pc, #20]	@ (801e048 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x64>)
 801e032:	626b      	str	r3, [r5, #36]	@ 0x24
 801e034:	4b07      	ldr	r3, [pc, #28]	@ (801e054 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv+0x70>)
 801e036:	62ab      	str	r3, [r5, #40]	@ 0x28
 801e038:	bd38      	pop	{r3, r4, r5, pc}
 801e03a:	bf00      	nop
 801e03c:	20003038 	.word	0x20003038
 801e040:	20000000 	.word	0x20000000
 801e044:	0801a0a7 	.word	0x0801a0a7
 801e048:	20000080 	.word	0x20000080
 801e04c:	2000303c 	.word	0x2000303c
 801e050:	0801a0a5 	.word	0x0801a0a5
 801e054:	20000084 	.word	0x20000084

0801e058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>:
 801e058:	b538      	push	{r3, r4, r5, lr}
 801e05a:	4c15      	ldr	r4, [pc, #84]	@ (801e0b0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x58>)
 801e05c:	7823      	ldrb	r3, [r4, #0]
 801e05e:	f3bf 8f5b 	dmb	ish
 801e062:	07da      	lsls	r2, r3, #31
 801e064:	4605      	mov	r5, r0
 801e066:	d40b      	bmi.n	801e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e068:	4620      	mov	r0, r4
 801e06a:	f007 fe44 	bl	8025cf6 <__cxa_guard_acquire>
 801e06e:	b138      	cbz	r0, 801e080 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x28>
 801e070:	4620      	mov	r0, r4
 801e072:	f007 fe4c 	bl	8025d0e <__cxa_guard_release>
 801e076:	4a0f      	ldr	r2, [pc, #60]	@ (801e0b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e078:	490f      	ldr	r1, [pc, #60]	@ (801e0b8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x60>)
 801e07a:	4810      	ldr	r0, [pc, #64]	@ (801e0bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e07c:	f007 fe34 	bl	8025ce8 <__aeabi_atexit>
 801e080:	4c0f      	ldr	r4, [pc, #60]	@ (801e0c0 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x68>)
 801e082:	7823      	ldrb	r3, [r4, #0]
 801e084:	f3bf 8f5b 	dmb	ish
 801e088:	07db      	lsls	r3, r3, #31
 801e08a:	d40b      	bmi.n	801e0a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e08c:	4620      	mov	r0, r4
 801e08e:	f007 fe32 	bl	8025cf6 <__cxa_guard_acquire>
 801e092:	b138      	cbz	r0, 801e0a4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x4c>
 801e094:	4620      	mov	r0, r4
 801e096:	f007 fe3a 	bl	8025d0e <__cxa_guard_release>
 801e09a:	4a06      	ldr	r2, [pc, #24]	@ (801e0b4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x5c>)
 801e09c:	4909      	ldr	r1, [pc, #36]	@ (801e0c4 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x6c>)
 801e09e:	480a      	ldr	r0, [pc, #40]	@ (801e0c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e0a0:	f007 fe22 	bl	8025ce8 <__aeabi_atexit>
 801e0a4:	4b05      	ldr	r3, [pc, #20]	@ (801e0bc <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x64>)
 801e0a6:	61eb      	str	r3, [r5, #28]
 801e0a8:	4b07      	ldr	r3, [pc, #28]	@ (801e0c8 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv+0x70>)
 801e0aa:	622b      	str	r3, [r5, #32]
 801e0ac:	bd38      	pop	{r3, r4, r5, pc}
 801e0ae:	bf00      	nop
 801e0b0:	20003010 	.word	0x20003010
 801e0b4:	20000000 	.word	0x20000000
 801e0b8:	0801a0ab 	.word	0x0801a0ab
 801e0bc:	20000058 	.word	0x20000058
 801e0c0:	20003014 	.word	0x20003014
 801e0c4:	0801a0a9 	.word	0x0801a0a9
 801e0c8:	2000005c 	.word	0x2000005c

0801e0cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>:
 801e0cc:	b510      	push	{r4, lr}
 801e0ce:	4604      	mov	r4, r0
 801e0d0:	f7ff ff88 	bl	801dfe4 <_ZN8touchgfx8LCD16bpp50enableTextureMapperL8_RGB888_BilinearInterpolationEv>
 801e0d4:	4620      	mov	r0, r4
 801e0d6:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e0da:	f7ff bfbd 	b.w	801e058 <_ZN8touchgfx8LCD16bpp44enableTextureMapperL8_RGB888_NearestNeighborEv>
	...

0801e0e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>:
 801e0e0:	b538      	push	{r3, r4, r5, lr}
 801e0e2:	4c15      	ldr	r4, [pc, #84]	@ (801e138 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x58>)
 801e0e4:	7823      	ldrb	r3, [r4, #0]
 801e0e6:	f3bf 8f5b 	dmb	ish
 801e0ea:	07da      	lsls	r2, r3, #31
 801e0ec:	4605      	mov	r5, r0
 801e0ee:	d40b      	bmi.n	801e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e0f0:	4620      	mov	r0, r4
 801e0f2:	f007 fe00 	bl	8025cf6 <__cxa_guard_acquire>
 801e0f6:	b138      	cbz	r0, 801e108 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x28>
 801e0f8:	4620      	mov	r0, r4
 801e0fa:	f007 fe08 	bl	8025d0e <__cxa_guard_release>
 801e0fe:	4a0f      	ldr	r2, [pc, #60]	@ (801e13c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e100:	490f      	ldr	r1, [pc, #60]	@ (801e140 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x60>)
 801e102:	4810      	ldr	r0, [pc, #64]	@ (801e144 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e104:	f007 fdf0 	bl	8025ce8 <__aeabi_atexit>
 801e108:	4c0f      	ldr	r4, [pc, #60]	@ (801e148 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x68>)
 801e10a:	7823      	ldrb	r3, [r4, #0]
 801e10c:	f3bf 8f5b 	dmb	ish
 801e110:	07db      	lsls	r3, r3, #31
 801e112:	d40b      	bmi.n	801e12c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e114:	4620      	mov	r0, r4
 801e116:	f007 fdee 	bl	8025cf6 <__cxa_guard_acquire>
 801e11a:	b138      	cbz	r0, 801e12c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x4c>
 801e11c:	4620      	mov	r0, r4
 801e11e:	f007 fdf6 	bl	8025d0e <__cxa_guard_release>
 801e122:	4a06      	ldr	r2, [pc, #24]	@ (801e13c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x5c>)
 801e124:	4909      	ldr	r1, [pc, #36]	@ (801e14c <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x6c>)
 801e126:	480a      	ldr	r0, [pc, #40]	@ (801e150 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e128:	f007 fdde 	bl	8025ce8 <__aeabi_atexit>
 801e12c:	4b05      	ldr	r3, [pc, #20]	@ (801e144 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x64>)
 801e12e:	636b      	str	r3, [r5, #52]	@ 0x34
 801e130:	4b07      	ldr	r3, [pc, #28]	@ (801e150 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv+0x70>)
 801e132:	63ab      	str	r3, [r5, #56]	@ 0x38
 801e134:	bd38      	pop	{r3, r4, r5, pc}
 801e136:	bf00      	nop
 801e138:	20003048 	.word	0x20003048
 801e13c:	20000000 	.word	0x20000000
 801e140:	0801a09f 	.word	0x0801a09f
 801e144:	20000090 	.word	0x20000090
 801e148:	2000304c 	.word	0x2000304c
 801e14c:	0801a09d 	.word	0x0801a09d
 801e150:	20000094 	.word	0x20000094

0801e154 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>:
 801e154:	b538      	push	{r3, r4, r5, lr}
 801e156:	4c15      	ldr	r4, [pc, #84]	@ (801e1ac <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x58>)
 801e158:	7823      	ldrb	r3, [r4, #0]
 801e15a:	f3bf 8f5b 	dmb	ish
 801e15e:	07da      	lsls	r2, r3, #31
 801e160:	4605      	mov	r5, r0
 801e162:	d40b      	bmi.n	801e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e164:	4620      	mov	r0, r4
 801e166:	f007 fdc6 	bl	8025cf6 <__cxa_guard_acquire>
 801e16a:	b138      	cbz	r0, 801e17c <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x28>
 801e16c:	4620      	mov	r0, r4
 801e16e:	f007 fdce 	bl	8025d0e <__cxa_guard_release>
 801e172:	4a0f      	ldr	r2, [pc, #60]	@ (801e1b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e174:	490f      	ldr	r1, [pc, #60]	@ (801e1b4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x60>)
 801e176:	4810      	ldr	r0, [pc, #64]	@ (801e1b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e178:	f007 fdb6 	bl	8025ce8 <__aeabi_atexit>
 801e17c:	4c0f      	ldr	r4, [pc, #60]	@ (801e1bc <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x68>)
 801e17e:	7823      	ldrb	r3, [r4, #0]
 801e180:	f3bf 8f5b 	dmb	ish
 801e184:	07db      	lsls	r3, r3, #31
 801e186:	d40b      	bmi.n	801e1a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e188:	4620      	mov	r0, r4
 801e18a:	f007 fdb4 	bl	8025cf6 <__cxa_guard_acquire>
 801e18e:	b138      	cbz	r0, 801e1a0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x4c>
 801e190:	4620      	mov	r0, r4
 801e192:	f007 fdbc 	bl	8025d0e <__cxa_guard_release>
 801e196:	4a06      	ldr	r2, [pc, #24]	@ (801e1b0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x5c>)
 801e198:	4909      	ldr	r1, [pc, #36]	@ (801e1c0 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x6c>)
 801e19a:	480a      	ldr	r0, [pc, #40]	@ (801e1c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e19c:	f007 fda4 	bl	8025ce8 <__aeabi_atexit>
 801e1a0:	4b05      	ldr	r3, [pc, #20]	@ (801e1b8 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x64>)
 801e1a2:	62eb      	str	r3, [r5, #44]	@ 0x2c
 801e1a4:	4b07      	ldr	r3, [pc, #28]	@ (801e1c4 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv+0x70>)
 801e1a6:	632b      	str	r3, [r5, #48]	@ 0x30
 801e1a8:	bd38      	pop	{r3, r4, r5, pc}
 801e1aa:	bf00      	nop
 801e1ac:	20003018 	.word	0x20003018
 801e1b0:	20000000 	.word	0x20000000
 801e1b4:	0801a0a3 	.word	0x0801a0a3
 801e1b8:	20000060 	.word	0x20000060
 801e1bc:	2000301c 	.word	0x2000301c
 801e1c0:	0801a0a1 	.word	0x0801a0a1
 801e1c4:	20000064 	.word	0x20000064

0801e1c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>:
 801e1c8:	b510      	push	{r4, lr}
 801e1ca:	4604      	mov	r4, r0
 801e1cc:	f7ff ff88 	bl	801e0e0 <_ZN8touchgfx8LCD16bpp52enableTextureMapperL8_ARGB8888_BilinearInterpolationEv>
 801e1d0:	4620      	mov	r0, r4
 801e1d2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e1d6:	f7ff bfbd 	b.w	801e154 <_ZN8touchgfx8LCD16bpp46enableTextureMapperL8_ARGB8888_NearestNeighborEv>
	...

0801e1dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>:
 801e1dc:	b538      	push	{r3, r4, r5, lr}
 801e1de:	4c15      	ldr	r4, [pc, #84]	@ (801e234 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x58>)
 801e1e0:	7823      	ldrb	r3, [r4, #0]
 801e1e2:	f3bf 8f5b 	dmb	ish
 801e1e6:	07da      	lsls	r2, r3, #31
 801e1e8:	4605      	mov	r5, r0
 801e1ea:	d40b      	bmi.n	801e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e1ec:	4620      	mov	r0, r4
 801e1ee:	f007 fd82 	bl	8025cf6 <__cxa_guard_acquire>
 801e1f2:	b138      	cbz	r0, 801e204 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x28>
 801e1f4:	4620      	mov	r0, r4
 801e1f6:	f007 fd8a 	bl	8025d0e <__cxa_guard_release>
 801e1fa:	4a0f      	ldr	r2, [pc, #60]	@ (801e238 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e1fc:	490f      	ldr	r1, [pc, #60]	@ (801e23c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x60>)
 801e1fe:	4810      	ldr	r0, [pc, #64]	@ (801e240 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e200:	f007 fd72 	bl	8025ce8 <__aeabi_atexit>
 801e204:	4c0f      	ldr	r4, [pc, #60]	@ (801e244 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x68>)
 801e206:	7823      	ldrb	r3, [r4, #0]
 801e208:	f3bf 8f5b 	dmb	ish
 801e20c:	07db      	lsls	r3, r3, #31
 801e20e:	d40b      	bmi.n	801e228 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e210:	4620      	mov	r0, r4
 801e212:	f007 fd70 	bl	8025cf6 <__cxa_guard_acquire>
 801e216:	b138      	cbz	r0, 801e228 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x4c>
 801e218:	4620      	mov	r0, r4
 801e21a:	f007 fd78 	bl	8025d0e <__cxa_guard_release>
 801e21e:	4a06      	ldr	r2, [pc, #24]	@ (801e238 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x5c>)
 801e220:	4909      	ldr	r1, [pc, #36]	@ (801e248 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x6c>)
 801e222:	480a      	ldr	r0, [pc, #40]	@ (801e24c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e224:	f007 fd60 	bl	8025ce8 <__aeabi_atexit>
 801e228:	4b05      	ldr	r3, [pc, #20]	@ (801e240 <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x64>)
 801e22a:	656b      	str	r3, [r5, #84]	@ 0x54
 801e22c:	4b07      	ldr	r3, [pc, #28]	@ (801e24c <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv+0x70>)
 801e22e:	65ab      	str	r3, [r5, #88]	@ 0x58
 801e230:	bd38      	pop	{r3, r4, r5, pc}
 801e232:	bf00      	nop
 801e234:	20003050 	.word	0x20003050
 801e238:	20000000 	.word	0x20000000
 801e23c:	0801a08f 	.word	0x0801a08f
 801e240:	20000098 	.word	0x20000098
 801e244:	20003054 	.word	0x20003054
 801e248:	0801a08d 	.word	0x0801a08d
 801e24c:	2000009c 	.word	0x2000009c

0801e250 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>:
 801e250:	b538      	push	{r3, r4, r5, lr}
 801e252:	4c15      	ldr	r4, [pc, #84]	@ (801e2a8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x58>)
 801e254:	7823      	ldrb	r3, [r4, #0]
 801e256:	f3bf 8f5b 	dmb	ish
 801e25a:	07da      	lsls	r2, r3, #31
 801e25c:	4605      	mov	r5, r0
 801e25e:	d40b      	bmi.n	801e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e260:	4620      	mov	r0, r4
 801e262:	f007 fd48 	bl	8025cf6 <__cxa_guard_acquire>
 801e266:	b138      	cbz	r0, 801e278 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x28>
 801e268:	4620      	mov	r0, r4
 801e26a:	f007 fd50 	bl	8025d0e <__cxa_guard_release>
 801e26e:	4a0f      	ldr	r2, [pc, #60]	@ (801e2ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e270:	490f      	ldr	r1, [pc, #60]	@ (801e2b0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x60>)
 801e272:	4810      	ldr	r0, [pc, #64]	@ (801e2b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e274:	f007 fd38 	bl	8025ce8 <__aeabi_atexit>
 801e278:	4c0f      	ldr	r4, [pc, #60]	@ (801e2b8 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x68>)
 801e27a:	7823      	ldrb	r3, [r4, #0]
 801e27c:	f3bf 8f5b 	dmb	ish
 801e280:	07db      	lsls	r3, r3, #31
 801e282:	d40b      	bmi.n	801e29c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e284:	4620      	mov	r0, r4
 801e286:	f007 fd36 	bl	8025cf6 <__cxa_guard_acquire>
 801e28a:	b138      	cbz	r0, 801e29c <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x4c>
 801e28c:	4620      	mov	r0, r4
 801e28e:	f007 fd3e 	bl	8025d0e <__cxa_guard_release>
 801e292:	4a06      	ldr	r2, [pc, #24]	@ (801e2ac <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x5c>)
 801e294:	4909      	ldr	r1, [pc, #36]	@ (801e2bc <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x6c>)
 801e296:	480a      	ldr	r0, [pc, #40]	@ (801e2c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e298:	f007 fd26 	bl	8025ce8 <__aeabi_atexit>
 801e29c:	4b05      	ldr	r3, [pc, #20]	@ (801e2b4 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x64>)
 801e29e:	64eb      	str	r3, [r5, #76]	@ 0x4c
 801e2a0:	4b07      	ldr	r3, [pc, #28]	@ (801e2c0 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv+0x70>)
 801e2a2:	652b      	str	r3, [r5, #80]	@ 0x50
 801e2a4:	bd38      	pop	{r3, r4, r5, pc}
 801e2a6:	bf00      	nop
 801e2a8:	20003058 	.word	0x20003058
 801e2ac:	20000000 	.word	0x20000000
 801e2b0:	0801a093 	.word	0x0801a093
 801e2b4:	200000a0 	.word	0x200000a0
 801e2b8:	2000305c 	.word	0x2000305c
 801e2bc:	0801a091 	.word	0x0801a091
 801e2c0:	200000a4 	.word	0x200000a4

0801e2c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>:
 801e2c4:	b538      	push	{r3, r4, r5, lr}
 801e2c6:	4c15      	ldr	r4, [pc, #84]	@ (801e31c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x58>)
 801e2c8:	7823      	ldrb	r3, [r4, #0]
 801e2ca:	f3bf 8f5b 	dmb	ish
 801e2ce:	07da      	lsls	r2, r3, #31
 801e2d0:	4605      	mov	r5, r0
 801e2d2:	d40b      	bmi.n	801e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e2d4:	4620      	mov	r0, r4
 801e2d6:	f007 fd0e 	bl	8025cf6 <__cxa_guard_acquire>
 801e2da:	b138      	cbz	r0, 801e2ec <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x28>
 801e2dc:	4620      	mov	r0, r4
 801e2de:	f007 fd16 	bl	8025d0e <__cxa_guard_release>
 801e2e2:	4a0f      	ldr	r2, [pc, #60]	@ (801e320 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e2e4:	490f      	ldr	r1, [pc, #60]	@ (801e324 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x60>)
 801e2e6:	4810      	ldr	r0, [pc, #64]	@ (801e328 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e2e8:	f007 fcfe 	bl	8025ce8 <__aeabi_atexit>
 801e2ec:	4c0f      	ldr	r4, [pc, #60]	@ (801e32c <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x68>)
 801e2ee:	7823      	ldrb	r3, [r4, #0]
 801e2f0:	f3bf 8f5b 	dmb	ish
 801e2f4:	07db      	lsls	r3, r3, #31
 801e2f6:	d40b      	bmi.n	801e310 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e2f8:	4620      	mov	r0, r4
 801e2fa:	f007 fcfc 	bl	8025cf6 <__cxa_guard_acquire>
 801e2fe:	b138      	cbz	r0, 801e310 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x4c>
 801e300:	4620      	mov	r0, r4
 801e302:	f007 fd04 	bl	8025d0e <__cxa_guard_release>
 801e306:	4a06      	ldr	r2, [pc, #24]	@ (801e320 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x5c>)
 801e308:	4909      	ldr	r1, [pc, #36]	@ (801e330 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x6c>)
 801e30a:	480a      	ldr	r0, [pc, #40]	@ (801e334 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e30c:	f007 fcec 	bl	8025ce8 <__aeabi_atexit>
 801e310:	4b05      	ldr	r3, [pc, #20]	@ (801e328 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x64>)
 801e312:	646b      	str	r3, [r5, #68]	@ 0x44
 801e314:	4b07      	ldr	r3, [pc, #28]	@ (801e334 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv+0x70>)
 801e316:	64ab      	str	r3, [r5, #72]	@ 0x48
 801e318:	bd38      	pop	{r3, r4, r5, pc}
 801e31a:	bf00      	nop
 801e31c:	20003020 	.word	0x20003020
 801e320:	20000000 	.word	0x20000000
 801e324:	0801a097 	.word	0x0801a097
 801e328:	20000068 	.word	0x20000068
 801e32c:	20003024 	.word	0x20003024
 801e330:	0801a095 	.word	0x0801a095
 801e334:	2000006c 	.word	0x2000006c

0801e338 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>:
 801e338:	b538      	push	{r3, r4, r5, lr}
 801e33a:	4c15      	ldr	r4, [pc, #84]	@ (801e390 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x58>)
 801e33c:	7823      	ldrb	r3, [r4, #0]
 801e33e:	f3bf 8f5b 	dmb	ish
 801e342:	07da      	lsls	r2, r3, #31
 801e344:	4605      	mov	r5, r0
 801e346:	d40b      	bmi.n	801e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e348:	4620      	mov	r0, r4
 801e34a:	f007 fcd4 	bl	8025cf6 <__cxa_guard_acquire>
 801e34e:	b138      	cbz	r0, 801e360 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x28>
 801e350:	4620      	mov	r0, r4
 801e352:	f007 fcdc 	bl	8025d0e <__cxa_guard_release>
 801e356:	4a0f      	ldr	r2, [pc, #60]	@ (801e394 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e358:	490f      	ldr	r1, [pc, #60]	@ (801e398 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x60>)
 801e35a:	4810      	ldr	r0, [pc, #64]	@ (801e39c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e35c:	f007 fcc4 	bl	8025ce8 <__aeabi_atexit>
 801e360:	4c0f      	ldr	r4, [pc, #60]	@ (801e3a0 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x68>)
 801e362:	7823      	ldrb	r3, [r4, #0]
 801e364:	f3bf 8f5b 	dmb	ish
 801e368:	07db      	lsls	r3, r3, #31
 801e36a:	d40b      	bmi.n	801e384 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e36c:	4620      	mov	r0, r4
 801e36e:	f007 fcc2 	bl	8025cf6 <__cxa_guard_acquire>
 801e372:	b138      	cbz	r0, 801e384 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x4c>
 801e374:	4620      	mov	r0, r4
 801e376:	f007 fcca 	bl	8025d0e <__cxa_guard_release>
 801e37a:	4a06      	ldr	r2, [pc, #24]	@ (801e394 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x5c>)
 801e37c:	4909      	ldr	r1, [pc, #36]	@ (801e3a4 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x6c>)
 801e37e:	480a      	ldr	r0, [pc, #40]	@ (801e3a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e380:	f007 fcb2 	bl	8025ce8 <__aeabi_atexit>
 801e384:	4b05      	ldr	r3, [pc, #20]	@ (801e39c <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x64>)
 801e386:	63eb      	str	r3, [r5, #60]	@ 0x3c
 801e388:	4b07      	ldr	r3, [pc, #28]	@ (801e3a8 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv+0x70>)
 801e38a:	642b      	str	r3, [r5, #64]	@ 0x40
 801e38c:	bd38      	pop	{r3, r4, r5, pc}
 801e38e:	bf00      	nop
 801e390:	20003040 	.word	0x20003040
 801e394:	20000000 	.word	0x20000000
 801e398:	0801a09b 	.word	0x0801a09b
 801e39c:	20000088 	.word	0x20000088
 801e3a0:	20003044 	.word	0x20003044
 801e3a4:	0801a099 	.word	0x0801a099
 801e3a8:	2000008c 	.word	0x2000008c

0801e3ac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>:
 801e3ac:	b510      	push	{r4, lr}
 801e3ae:	4604      	mov	r4, r0
 801e3b0:	f7ff ff14 	bl	801e1dc <_ZN8touchgfx8LCD16bpp54enableTextureMapperRGB565_Opaque_BilinearInterpolationEv>
 801e3b4:	4620      	mov	r0, r4
 801e3b6:	f7ff ff85 	bl	801e2c4 <_ZN8touchgfx8LCD16bpp48enableTextureMapperRGB565_Opaque_NearestNeighborEv>
 801e3ba:	4620      	mov	r0, r4
 801e3bc:	f7ff ff48 	bl	801e250 <_ZN8touchgfx8LCD16bpp57enableTextureMapperRGB565_NonOpaque_BilinearInterpolationEv>
 801e3c0:	4620      	mov	r0, r4
 801e3c2:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e3c6:	f7ff bfb7 	b.w	801e338 <_ZN8touchgfx8LCD16bpp51enableTextureMapperRGB565_NonOpaque_NearestNeighborEv>
	...

0801e3cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>:
 801e3cc:	b538      	push	{r3, r4, r5, lr}
 801e3ce:	4c15      	ldr	r4, [pc, #84]	@ (801e424 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x58>)
 801e3d0:	7823      	ldrb	r3, [r4, #0]
 801e3d2:	f3bf 8f5b 	dmb	ish
 801e3d6:	07da      	lsls	r2, r3, #31
 801e3d8:	4605      	mov	r5, r0
 801e3da:	d40b      	bmi.n	801e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e3dc:	4620      	mov	r0, r4
 801e3de:	f007 fc8a 	bl	8025cf6 <__cxa_guard_acquire>
 801e3e2:	b138      	cbz	r0, 801e3f4 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x28>
 801e3e4:	4620      	mov	r0, r4
 801e3e6:	f007 fc92 	bl	8025d0e <__cxa_guard_release>
 801e3ea:	4a0f      	ldr	r2, [pc, #60]	@ (801e428 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e3ec:	490f      	ldr	r1, [pc, #60]	@ (801e42c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x60>)
 801e3ee:	4810      	ldr	r0, [pc, #64]	@ (801e430 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e3f0:	f007 fc7a 	bl	8025ce8 <__aeabi_atexit>
 801e3f4:	4c0f      	ldr	r4, [pc, #60]	@ (801e434 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x68>)
 801e3f6:	7823      	ldrb	r3, [r4, #0]
 801e3f8:	f3bf 8f5b 	dmb	ish
 801e3fc:	07db      	lsls	r3, r3, #31
 801e3fe:	d40b      	bmi.n	801e418 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e400:	4620      	mov	r0, r4
 801e402:	f007 fc78 	bl	8025cf6 <__cxa_guard_acquire>
 801e406:	b138      	cbz	r0, 801e418 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x4c>
 801e408:	4620      	mov	r0, r4
 801e40a:	f007 fc80 	bl	8025d0e <__cxa_guard_release>
 801e40e:	4a06      	ldr	r2, [pc, #24]	@ (801e428 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x5c>)
 801e410:	4909      	ldr	r1, [pc, #36]	@ (801e438 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x6c>)
 801e412:	480a      	ldr	r0, [pc, #40]	@ (801e43c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e414:	f007 fc68 	bl	8025ce8 <__aeabi_atexit>
 801e418:	4b05      	ldr	r3, [pc, #20]	@ (801e430 <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x64>)
 801e41a:	666b      	str	r3, [r5, #100]	@ 0x64
 801e41c:	4b07      	ldr	r3, [pc, #28]	@ (801e43c <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv+0x70>)
 801e41e:	66ab      	str	r3, [r5, #104]	@ 0x68
 801e420:	bd38      	pop	{r3, r4, r5, pc}
 801e422:	bf00      	nop
 801e424:	20003028 	.word	0x20003028
 801e428:	20000000 	.word	0x20000000
 801e42c:	0801a087 	.word	0x0801a087
 801e430:	20000070 	.word	0x20000070
 801e434:	2000302c 	.word	0x2000302c
 801e438:	0801a085 	.word	0x0801a085
 801e43c:	20000074 	.word	0x20000074

0801e440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>:
 801e440:	b538      	push	{r3, r4, r5, lr}
 801e442:	4c15      	ldr	r4, [pc, #84]	@ (801e498 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x58>)
 801e444:	7823      	ldrb	r3, [r4, #0]
 801e446:	f3bf 8f5b 	dmb	ish
 801e44a:	07da      	lsls	r2, r3, #31
 801e44c:	4605      	mov	r5, r0
 801e44e:	d40b      	bmi.n	801e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e450:	4620      	mov	r0, r4
 801e452:	f007 fc50 	bl	8025cf6 <__cxa_guard_acquire>
 801e456:	b138      	cbz	r0, 801e468 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x28>
 801e458:	4620      	mov	r0, r4
 801e45a:	f007 fc58 	bl	8025d0e <__cxa_guard_release>
 801e45e:	4a0f      	ldr	r2, [pc, #60]	@ (801e49c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e460:	490f      	ldr	r1, [pc, #60]	@ (801e4a0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x60>)
 801e462:	4810      	ldr	r0, [pc, #64]	@ (801e4a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e464:	f007 fc40 	bl	8025ce8 <__aeabi_atexit>
 801e468:	4c0f      	ldr	r4, [pc, #60]	@ (801e4a8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x68>)
 801e46a:	7823      	ldrb	r3, [r4, #0]
 801e46c:	f3bf 8f5b 	dmb	ish
 801e470:	07db      	lsls	r3, r3, #31
 801e472:	d40b      	bmi.n	801e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e474:	4620      	mov	r0, r4
 801e476:	f007 fc3e 	bl	8025cf6 <__cxa_guard_acquire>
 801e47a:	b138      	cbz	r0, 801e48c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x4c>
 801e47c:	4620      	mov	r0, r4
 801e47e:	f007 fc46 	bl	8025d0e <__cxa_guard_release>
 801e482:	4a06      	ldr	r2, [pc, #24]	@ (801e49c <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x5c>)
 801e484:	4909      	ldr	r1, [pc, #36]	@ (801e4ac <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x6c>)
 801e486:	480a      	ldr	r0, [pc, #40]	@ (801e4b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e488:	f007 fc2e 	bl	8025ce8 <__aeabi_atexit>
 801e48c:	4b05      	ldr	r3, [pc, #20]	@ (801e4a4 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x64>)
 801e48e:	65eb      	str	r3, [r5, #92]	@ 0x5c
 801e490:	4b07      	ldr	r3, [pc, #28]	@ (801e4b0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv+0x70>)
 801e492:	662b      	str	r3, [r5, #96]	@ 0x60
 801e494:	bd38      	pop	{r3, r4, r5, pc}
 801e496:	bf00      	nop
 801e498:	20003000 	.word	0x20003000
 801e49c:	20000000 	.word	0x20000000
 801e4a0:	0801a08b 	.word	0x0801a08b
 801e4a4:	20000048 	.word	0x20000048
 801e4a8:	20003004 	.word	0x20003004
 801e4ac:	0801a089 	.word	0x0801a089
 801e4b0:	2000004c 	.word	0x2000004c

0801e4b4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>:
 801e4b4:	b510      	push	{r4, lr}
 801e4b6:	4604      	mov	r4, r0
 801e4b8:	f7ff ff88 	bl	801e3cc <_ZN8touchgfx8LCD16bpp49enableTextureMapperARGB8888_BilinearInterpolationEv>
 801e4bc:	4620      	mov	r0, r4
 801e4be:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e4c2:	f7ff bfbd 	b.w	801e440 <_ZN8touchgfx8LCD16bpp43enableTextureMapperARGB8888_NearestNeighborEv>
	...

0801e4c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>:
 801e4c8:	b538      	push	{r3, r4, r5, lr}
 801e4ca:	4c15      	ldr	r4, [pc, #84]	@ (801e520 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x58>)
 801e4cc:	7823      	ldrb	r3, [r4, #0]
 801e4ce:	f3bf 8f5b 	dmb	ish
 801e4d2:	07da      	lsls	r2, r3, #31
 801e4d4:	4605      	mov	r5, r0
 801e4d6:	d40b      	bmi.n	801e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e4d8:	4620      	mov	r0, r4
 801e4da:	f007 fc0c 	bl	8025cf6 <__cxa_guard_acquire>
 801e4de:	b138      	cbz	r0, 801e4f0 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x28>
 801e4e0:	4620      	mov	r0, r4
 801e4e2:	f007 fc14 	bl	8025d0e <__cxa_guard_release>
 801e4e6:	4a0f      	ldr	r2, [pc, #60]	@ (801e524 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e4e8:	490f      	ldr	r1, [pc, #60]	@ (801e528 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x60>)
 801e4ea:	4810      	ldr	r0, [pc, #64]	@ (801e52c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e4ec:	f007 fbfc 	bl	8025ce8 <__aeabi_atexit>
 801e4f0:	4c0f      	ldr	r4, [pc, #60]	@ (801e530 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x68>)
 801e4f2:	7823      	ldrb	r3, [r4, #0]
 801e4f4:	f3bf 8f5b 	dmb	ish
 801e4f8:	07db      	lsls	r3, r3, #31
 801e4fa:	d40b      	bmi.n	801e514 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e4fc:	4620      	mov	r0, r4
 801e4fe:	f007 fbfa 	bl	8025cf6 <__cxa_guard_acquire>
 801e502:	b138      	cbz	r0, 801e514 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x4c>
 801e504:	4620      	mov	r0, r4
 801e506:	f007 fc02 	bl	8025d0e <__cxa_guard_release>
 801e50a:	4a06      	ldr	r2, [pc, #24]	@ (801e524 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x5c>)
 801e50c:	4909      	ldr	r1, [pc, #36]	@ (801e534 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x6c>)
 801e50e:	480a      	ldr	r0, [pc, #40]	@ (801e538 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e510:	f007 fbea 	bl	8025ce8 <__aeabi_atexit>
 801e514:	4b05      	ldr	r3, [pc, #20]	@ (801e52c <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x64>)
 801e516:	676b      	str	r3, [r5, #116]	@ 0x74
 801e518:	4b07      	ldr	r3, [pc, #28]	@ (801e538 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv+0x70>)
 801e51a:	67ab      	str	r3, [r5, #120]	@ 0x78
 801e51c:	bd38      	pop	{r3, r4, r5, pc}
 801e51e:	bf00      	nop
 801e520:	20002ff8 	.word	0x20002ff8
 801e524:	20000000 	.word	0x20000000
 801e528:	0801a07f 	.word	0x0801a07f
 801e52c:	20000040 	.word	0x20000040
 801e530:	20002ffc 	.word	0x20002ffc
 801e534:	0801a07d 	.word	0x0801a07d
 801e538:	20000044 	.word	0x20000044

0801e53c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>:
 801e53c:	b538      	push	{r3, r4, r5, lr}
 801e53e:	4c15      	ldr	r4, [pc, #84]	@ (801e594 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x58>)
 801e540:	7823      	ldrb	r3, [r4, #0]
 801e542:	f3bf 8f5b 	dmb	ish
 801e546:	07da      	lsls	r2, r3, #31
 801e548:	4605      	mov	r5, r0
 801e54a:	d40b      	bmi.n	801e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e54c:	4620      	mov	r0, r4
 801e54e:	f007 fbd2 	bl	8025cf6 <__cxa_guard_acquire>
 801e552:	b138      	cbz	r0, 801e564 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x28>
 801e554:	4620      	mov	r0, r4
 801e556:	f007 fbda 	bl	8025d0e <__cxa_guard_release>
 801e55a:	4a0f      	ldr	r2, [pc, #60]	@ (801e598 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e55c:	490f      	ldr	r1, [pc, #60]	@ (801e59c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x60>)
 801e55e:	4810      	ldr	r0, [pc, #64]	@ (801e5a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e560:	f007 fbc2 	bl	8025ce8 <__aeabi_atexit>
 801e564:	4c0f      	ldr	r4, [pc, #60]	@ (801e5a4 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x68>)
 801e566:	7823      	ldrb	r3, [r4, #0]
 801e568:	f3bf 8f5b 	dmb	ish
 801e56c:	07db      	lsls	r3, r3, #31
 801e56e:	d40b      	bmi.n	801e588 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e570:	4620      	mov	r0, r4
 801e572:	f007 fbc0 	bl	8025cf6 <__cxa_guard_acquire>
 801e576:	b138      	cbz	r0, 801e588 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x4c>
 801e578:	4620      	mov	r0, r4
 801e57a:	f007 fbc8 	bl	8025d0e <__cxa_guard_release>
 801e57e:	4a06      	ldr	r2, [pc, #24]	@ (801e598 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x5c>)
 801e580:	4909      	ldr	r1, [pc, #36]	@ (801e5a8 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x6c>)
 801e582:	480a      	ldr	r0, [pc, #40]	@ (801e5ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e584:	f007 fbb0 	bl	8025ce8 <__aeabi_atexit>
 801e588:	4b05      	ldr	r3, [pc, #20]	@ (801e5a0 <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x64>)
 801e58a:	66eb      	str	r3, [r5, #108]	@ 0x6c
 801e58c:	4b07      	ldr	r3, [pc, #28]	@ (801e5ac <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv+0x70>)
 801e58e:	672b      	str	r3, [r5, #112]	@ 0x70
 801e590:	bd38      	pop	{r3, r4, r5, pc}
 801e592:	bf00      	nop
 801e594:	20002ff0 	.word	0x20002ff0
 801e598:	20000000 	.word	0x20000000
 801e59c:	0801a083 	.word	0x0801a083
 801e5a0:	20000038 	.word	0x20000038
 801e5a4:	20002ff4 	.word	0x20002ff4
 801e5a8:	0801a081 	.word	0x0801a081
 801e5ac:	2000003c 	.word	0x2000003c

0801e5b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>:
 801e5b0:	b510      	push	{r4, lr}
 801e5b2:	4604      	mov	r4, r0
 801e5b4:	f7ff ff88 	bl	801e4c8 <_ZN8touchgfx8LCD16bpp43enableTextureMapperA4_BilinearInterpolationEv>
 801e5b8:	4620      	mov	r0, r4
 801e5ba:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5be:	f7ff bfbd 	b.w	801e53c <_ZN8touchgfx8LCD16bpp37enableTextureMapperA4_NearestNeighborEv>

0801e5c2 <_ZN8touchgfx8LCD16bpp22enableTextureMapperAllEv>:
 801e5c2:	b510      	push	{r4, lr}
 801e5c4:	4604      	mov	r4, r0
 801e5c6:	f7ff fff3 	bl	801e5b0 <_ZN8touchgfx8LCD16bpp21enableTextureMapperA4Ev>
 801e5ca:	4620      	mov	r0, r4
 801e5cc:	f7ff ff72 	bl	801e4b4 <_ZN8touchgfx8LCD16bpp27enableTextureMapperARGB8888Ev>
 801e5d0:	4620      	mov	r0, r4
 801e5d2:	f7ff fdf9 	bl	801e1c8 <_ZN8touchgfx8LCD16bpp30enableTextureMapperL8_ARGB8888Ev>
 801e5d6:	4620      	mov	r0, r4
 801e5d8:	f7ff fcfa 	bl	801dfd0 <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB565Ev>
 801e5dc:	4620      	mov	r0, r4
 801e5de:	f7ff fd75 	bl	801e0cc <_ZN8touchgfx8LCD16bpp28enableTextureMapperL8_RGB888Ev>
 801e5e2:	4620      	mov	r0, r4
 801e5e4:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e5e8:	f7ff bee0 	b.w	801e3ac <_ZN8touchgfx8LCD16bpp25enableTextureMapperRGB565Ev>

0801e5ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>:
 801e5ec:	b538      	push	{r3, r4, r5, lr}
 801e5ee:	4c0b      	ldr	r4, [pc, #44]	@ (801e61c <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x30>)
 801e5f0:	7823      	ldrb	r3, [r4, #0]
 801e5f2:	f3bf 8f5b 	dmb	ish
 801e5f6:	07db      	lsls	r3, r3, #31
 801e5f8:	4605      	mov	r5, r0
 801e5fa:	d40b      	bmi.n	801e614 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e5fc:	4620      	mov	r0, r4
 801e5fe:	f007 fb7a 	bl	8025cf6 <__cxa_guard_acquire>
 801e602:	b138      	cbz	r0, 801e614 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x28>
 801e604:	4620      	mov	r0, r4
 801e606:	f007 fb82 	bl	8025d0e <__cxa_guard_release>
 801e60a:	4a05      	ldr	r2, [pc, #20]	@ (801e620 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x34>)
 801e60c:	4905      	ldr	r1, [pc, #20]	@ (801e624 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x38>)
 801e60e:	4806      	ldr	r0, [pc, #24]	@ (801e628 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e610:	f007 fb6a 	bl	8025ce8 <__aeabi_atexit>
 801e614:	4b04      	ldr	r3, [pc, #16]	@ (801e628 <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev+0x3c>)
 801e616:	67eb      	str	r3, [r5, #124]	@ 0x7c
 801e618:	bd38      	pop	{r3, r4, r5, pc}
 801e61a:	bf00      	nop
 801e61c:	20002fe4 	.word	0x20002fe4
 801e620:	20000000 	.word	0x20000000
 801e624:	0801a07b 	.word	0x0801a07b
 801e628:	20000030 	.word	0x20000030

0801e62c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>:
 801e62c:	b538      	push	{r3, r4, r5, lr}
 801e62e:	4c0b      	ldr	r4, [pc, #44]	@ (801e65c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x30>)
 801e630:	7823      	ldrb	r3, [r4, #0]
 801e632:	f3bf 8f5b 	dmb	ish
 801e636:	07db      	lsls	r3, r3, #31
 801e638:	4605      	mov	r5, r0
 801e63a:	d40b      	bmi.n	801e654 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e63c:	4620      	mov	r0, r4
 801e63e:	f007 fb5a 	bl	8025cf6 <__cxa_guard_acquire>
 801e642:	b138      	cbz	r0, 801e654 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x28>
 801e644:	4620      	mov	r0, r4
 801e646:	f007 fb62 	bl	8025d0e <__cxa_guard_release>
 801e64a:	4a05      	ldr	r2, [pc, #20]	@ (801e660 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x34>)
 801e64c:	4905      	ldr	r1, [pc, #20]	@ (801e664 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x38>)
 801e64e:	4806      	ldr	r0, [pc, #24]	@ (801e668 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e650:	f007 fb4a 	bl	8025ce8 <__aeabi_atexit>
 801e654:	4b04      	ldr	r3, [pc, #16]	@ (801e668 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv+0x3c>)
 801e656:	f8c5 3080 	str.w	r3, [r5, #128]	@ 0x80
 801e65a:	bd38      	pop	{r3, r4, r5, pc}
 801e65c:	20002fe8 	.word	0x20002fe8
 801e660:	20000000 	.word	0x20000000
 801e664:	0801a079 	.word	0x0801a079
 801e668:	20000034 	.word	0x20000034

0801e66c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>:
 801e66c:	b570      	push	{r4, r5, r6, lr}
 801e66e:	4d0d      	ldr	r5, [pc, #52]	@ (801e6a4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x38>)
 801e670:	4c0d      	ldr	r4, [pc, #52]	@ (801e6a8 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x3c>)
 801e672:	782b      	ldrb	r3, [r5, #0]
 801e674:	f3bf 8f5b 	dmb	ish
 801e678:	f013 0f01 	tst.w	r3, #1
 801e67c:	4606      	mov	r6, r0
 801e67e:	d10d      	bne.n	801e69c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e680:	4628      	mov	r0, r5
 801e682:	f007 fb38 	bl	8025cf6 <__cxa_guard_acquire>
 801e686:	b148      	cbz	r0, 801e69c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x30>
 801e688:	4b08      	ldr	r3, [pc, #32]	@ (801e6ac <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x40>)
 801e68a:	6023      	str	r3, [r4, #0]
 801e68c:	4628      	mov	r0, r5
 801e68e:	f007 fb3e 	bl	8025d0e <__cxa_guard_release>
 801e692:	4a07      	ldr	r2, [pc, #28]	@ (801e6b0 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x44>)
 801e694:	4907      	ldr	r1, [pc, #28]	@ (801e6b4 <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev+0x48>)
 801e696:	4620      	mov	r0, r4
 801e698:	f007 fb26 	bl	8025ce8 <__aeabi_atexit>
 801e69c:	f8c6 4084 	str.w	r4, [r6, #132]	@ 0x84
 801e6a0:	bd70      	pop	{r4, r5, r6, pc}
 801e6a2:	bf00      	nop
 801e6a4:	20002fec 	.word	0x20002fec
 801e6a8:	20003164 	.word	0x20003164
 801e6ac:	08029868 	.word	0x08029868
 801e6b0:	20000000 	.word	0x20000000
 801e6b4:	0801a077 	.word	0x0801a077

0801e6b8 <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_AllEv>:
 801e6b8:	b510      	push	{r4, lr}
 801e6ba:	4604      	mov	r4, r0
 801e6bc:	f7ff ff96 	bl	801e5ec <_ZN8touchgfx8LCD16bpp23enableDecompressorL8_L4Ev>
 801e6c0:	4620      	mov	r0, r4
 801e6c2:	f7ff ffb3 	bl	801e62c <_ZN8touchgfx8LCD16bpp24enableDecompressorL8_RLEEv>
 801e6c6:	4620      	mov	r0, r4
 801e6c8:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 801e6cc:	f7ff bfce 	b.w	801e66c <_ZN8touchgfx8LCD16bpp25enableDecompressorL8_LZW9Ev>

0801e6d0 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv>:
 801e6d0:	b570      	push	{r4, r5, r6, lr}
 801e6d2:	4d0d      	ldr	r5, [pc, #52]	@ (801e708 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x38>)
 801e6d4:	4c0d      	ldr	r4, [pc, #52]	@ (801e70c <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x3c>)
 801e6d6:	782b      	ldrb	r3, [r5, #0]
 801e6d8:	f3bf 8f5b 	dmb	ish
 801e6dc:	f013 0f01 	tst.w	r3, #1
 801e6e0:	4606      	mov	r6, r0
 801e6e2:	d10d      	bne.n	801e700 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e6e4:	4628      	mov	r0, r5
 801e6e6:	f007 fb06 	bl	8025cf6 <__cxa_guard_acquire>
 801e6ea:	b148      	cbz	r0, 801e700 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x30>
 801e6ec:	4b08      	ldr	r3, [pc, #32]	@ (801e710 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x40>)
 801e6ee:	6023      	str	r3, [r4, #0]
 801e6f0:	4628      	mov	r0, r5
 801e6f2:	f007 fb0c 	bl	8025d0e <__cxa_guard_release>
 801e6f6:	4a07      	ldr	r2, [pc, #28]	@ (801e714 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x44>)
 801e6f8:	4907      	ldr	r1, [pc, #28]	@ (801e718 <_ZN8touchgfx8LCD16bpp21enableDecompressorRGBEv+0x48>)
 801e6fa:	4620      	mov	r0, r4
 801e6fc:	f007 faf4 	bl	8025ce8 <__aeabi_atexit>
 801e700:	f8c6 4088 	str.w	r4, [r6, #136]	@ 0x88
 801e704:	bd70      	pop	{r4, r5, r6, pc}
 801e706:	bf00      	nop
 801e708:	20002fe0 	.word	0x20002fe0
 801e70c:	20003060 	.word	0x20003060
 801e710:	08029884 	.word	0x08029884
 801e714:	20000000 	.word	0x20000000
 801e718:	0801a075 	.word	0x0801a075

0801e71c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>:
 801e71c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e720:	e9dd 450b 	ldrd	r4, r5, [sp, #44]	@ 0x2c
 801e724:	f9bd e024 	ldrsh.w	lr, [sp, #36]	@ 0x24
 801e728:	f9bd b028 	ldrsh.w	fp, [sp, #40]	@ 0x28
 801e72c:	f89d 9034 	ldrb.w	r9, [sp, #52]	@ 0x34
 801e730:	f89d 7038 	ldrb.w	r7, [sp, #56]	@ 0x38
 801e734:	f89d 603c 	ldrb.w	r6, [sp, #60]	@ 0x3c
 801e738:	8808      	ldrh	r0, [r1, #0]
 801e73a:	fb05 4c0e 	mla	ip, r5, lr, r4
 801e73e:	2d00      	cmp	r5, #0
 801e740:	eb02 0a0c 	add.w	sl, r2, ip
 801e744:	f2c0 80b0 	blt.w	801e8a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e748:	45ab      	cmp	fp, r5
 801e74a:	f340 80ad 	ble.w	801e8a8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x18c>
 801e74e:	2c00      	cmp	r4, #0
 801e750:	f2c0 80a8 	blt.w	801e8a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e754:	45a6      	cmp	lr, r4
 801e756:	f340 80a5 	ble.w	801e8a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x188>
 801e75a:	f812 200c 	ldrb.w	r2, [r2, ip]
 801e75e:	f833 8012 	ldrh.w	r8, [r3, r2, lsl #1]
 801e762:	1c62      	adds	r2, r4, #1
 801e764:	f100 80a3 	bmi.w	801e8ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e768:	4596      	cmp	lr, r2
 801e76a:	f340 80a0 	ble.w	801e8ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e76e:	f1b9 0f00 	cmp.w	r9, #0
 801e772:	f000 809c 	beq.w	801e8ae <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x192>
 801e776:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801e77a:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801e77e:	3501      	adds	r5, #1
 801e780:	f100 8099 	bmi.w	801e8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e784:	45ab      	cmp	fp, r5
 801e786:	f340 8096 	ble.w	801e8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e78a:	2f00      	cmp	r7, #0
 801e78c:	f000 8093 	beq.w	801e8b6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x19a>
 801e790:	2c00      	cmp	r4, #0
 801e792:	f2c0 808e 	blt.w	801e8b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e796:	45a6      	cmp	lr, r4
 801e798:	f340 808b 	ble.w	801e8b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x196>
 801e79c:	f81a 200e 	ldrb.w	r2, [sl, lr]
 801e7a0:	f833 5012 	ldrh.w	r5, [r3, r2, lsl #1]
 801e7a4:	3401      	adds	r4, #1
 801e7a6:	f100 8089 	bmi.w	801e8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7aa:	45a6      	cmp	lr, r4
 801e7ac:	f340 8086 	ble.w	801e8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7b0:	f1b9 0f00 	cmp.w	r9, #0
 801e7b4:	f000 8082 	beq.w	801e8bc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x1a0>
 801e7b8:	44d6      	add	lr, sl
 801e7ba:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801e7be:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 801e7c2:	ea4f 4408 	mov.w	r4, r8, lsl #16
 801e7c6:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e7ca:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 801e7ce:	fb19 fe07 	smulbb	lr, r9, r7
 801e7d2:	ea44 0808 	orr.w	r8, r4, r8
 801e7d6:	ea4f 440c 	mov.w	r4, ip, lsl #16
 801e7da:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 801e7de:	f1c7 0210 	rsb	r2, r7, #16
 801e7e2:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 801e7e6:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801e7ea:	ea44 0c0c 	orr.w	ip, r4, ip
 801e7ee:	eba2 0209 	sub.w	r2, r2, r9
 801e7f2:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 801e7f6:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 801e7fa:	fb04 f40c 	mul.w	r4, r4, ip
 801e7fe:	fb02 4808 	mla	r8, r2, r8, r4
 801e802:	041a      	lsls	r2, r3, #16
 801e804:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e808:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e80c:	4313      	orrs	r3, r2
 801e80e:	042a      	lsls	r2, r5, #16
 801e810:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 801e814:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801e818:	fb0e 8303 	mla	r3, lr, r3, r8
 801e81c:	432a      	orrs	r2, r5
 801e81e:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 801e822:	fb07 3202 	mla	r2, r7, r2, r3
 801e826:	0d53      	lsrs	r3, r2, #21
 801e828:	0952      	lsrs	r2, r2, #5
 801e82a:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801e82e:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801e832:	431a      	orrs	r2, r3
 801e834:	b293      	uxth	r3, r2
 801e836:	b2b4      	uxth	r4, r6
 801e838:	1202      	asrs	r2, r0, #8
 801e83a:	43f6      	mvns	r6, r6
 801e83c:	b2f6      	uxtb	r6, r6
 801e83e:	121d      	asrs	r5, r3, #8
 801e840:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 801e844:	fb12 f206 	smulbb	r2, r2, r6
 801e848:	10c7      	asrs	r7, r0, #3
 801e84a:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 801e84e:	00c0      	lsls	r0, r0, #3
 801e850:	fb05 2504 	mla	r5, r5, r4, r2
 801e854:	b2c0      	uxtb	r0, r0
 801e856:	10da      	asrs	r2, r3, #3
 801e858:	00db      	lsls	r3, r3, #3
 801e85a:	b2db      	uxtb	r3, r3
 801e85c:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801e860:	fb10 f006 	smulbb	r0, r0, r6
 801e864:	b2ad      	uxth	r5, r5
 801e866:	fb03 0004 	mla	r0, r3, r4, r0
 801e86a:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 801e86e:	fb17 f706 	smulbb	r7, r7, r6
 801e872:	b280      	uxth	r0, r0
 801e874:	1c6b      	adds	r3, r5, #1
 801e876:	fb02 7204 	mla	r2, r2, r4, r7
 801e87a:	b292      	uxth	r2, r2
 801e87c:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 801e880:	1c43      	adds	r3, r0, #1
 801e882:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 801e886:	1c50      	adds	r0, r2, #1
 801e888:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 801e88c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 801e890:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801e894:	0952      	lsrs	r2, r2, #5
 801e896:	432b      	orrs	r3, r5
 801e898:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 801e89c:	4313      	orrs	r3, r2
 801e89e:	800b      	strh	r3, [r1, #0]
 801e8a0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801e8a4:	4680      	mov	r8, r0
 801e8a6:	e75c      	b.n	801e762 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x46>
 801e8a8:	4684      	mov	ip, r0
 801e8aa:	4680      	mov	r8, r0
 801e8ac:	e767      	b.n	801e77e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e8ae:	4684      	mov	ip, r0
 801e8b0:	e765      	b.n	801e77e <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x62>
 801e8b2:	4605      	mov	r5, r0
 801e8b4:	e776      	b.n	801e7a4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0x88>
 801e8b6:	4603      	mov	r3, r0
 801e8b8:	4605      	mov	r5, r0
 801e8ba:	e782      	b.n	801e7c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>
 801e8bc:	4603      	mov	r3, r0
 801e8be:	e780      	b.n	801e7c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh+0xa6>

0801e8c0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801e8c0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e8c4:	b099      	sub	sp, #100	@ 0x64
 801e8c6:	e9dd a523 	ldrd	sl, r5, [sp, #140]	@ 0x8c
 801e8ca:	9215      	str	r2, [sp, #84]	@ 0x54
 801e8cc:	9309      	str	r3, [sp, #36]	@ 0x24
 801e8ce:	9a27      	ldr	r2, [sp, #156]	@ 0x9c
 801e8d0:	f89d 30ac 	ldrb.w	r3, [sp, #172]	@ 0xac
 801e8d4:	930d      	str	r3, [sp, #52]	@ 0x34
 801e8d6:	910c      	str	r1, [sp, #48]	@ 0x30
 801e8d8:	e9dd 1328 	ldrd	r1, r3, [sp, #160]	@ 0xa0
 801e8dc:	9016      	str	r0, [sp, #88]	@ 0x58
 801e8de:	6850      	ldr	r0, [r2, #4]
 801e8e0:	6812      	ldr	r2, [r2, #0]
 801e8e2:	fb00 1303 	mla	r3, r0, r3, r1
 801e8e6:	eb02 0843 	add.w	r8, r2, r3, lsl #1
 801e8ea:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e8ec:	681b      	ldr	r3, [r3, #0]
 801e8ee:	930b      	str	r3, [sp, #44]	@ 0x2c
 801e8f0:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e8f2:	685e      	ldr	r6, [r3, #4]
 801e8f4:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801e8f6:	43db      	mvns	r3, r3
 801e8f8:	b2db      	uxtb	r3, r3
 801e8fa:	3604      	adds	r6, #4
 801e8fc:	930a      	str	r3, [sp, #40]	@ 0x28
 801e8fe:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801e900:	2b00      	cmp	r3, #0
 801e902:	dc03      	bgt.n	801e90c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 801e904:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 801e906:	2b00      	cmp	r3, #0
 801e908:	f340 8225 	ble.w	801ed56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801e90c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e90e:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801e912:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801e916:	1e48      	subs	r0, r1, #1
 801e918:	1e57      	subs	r7, r2, #1
 801e91a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801e91c:	2b00      	cmp	r3, #0
 801e91e:	f340 80e3 	ble.w	801eae8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x228>
 801e922:	ea5f 4c2a 	movs.w	ip, sl, asr #16
 801e926:	ea4f 4325 	mov.w	r3, r5, asr #16
 801e92a:	d406      	bmi.n	801e93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e92c:	4584      	cmp	ip, r0
 801e92e:	da04      	bge.n	801e93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e930:	2b00      	cmp	r3, #0
 801e932:	db02      	blt.n	801e93a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801e934:	42bb      	cmp	r3, r7
 801e936:	f2c0 80d8 	blt.w	801eaea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 801e93a:	f11c 0c01 	adds.w	ip, ip, #1
 801e93e:	f100 80c9 	bmi.w	801ead4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e942:	4561      	cmp	r1, ip
 801e944:	f2c0 80c6 	blt.w	801ead4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e948:	3301      	adds	r3, #1
 801e94a:	f100 80c3 	bmi.w	801ead4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e94e:	429a      	cmp	r2, r3
 801e950:	f2c0 80c0 	blt.w	801ead4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 801e954:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 801e958:	4647      	mov	r7, r8
 801e95a:	f1bb 0f00 	cmp.w	fp, #0
 801e95e:	f340 80e3 	ble.w	801eb28 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x268>
 801e962:	9a2a      	ldr	r2, [sp, #168]	@ 0xa8
 801e964:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801e966:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801e96a:	689b      	ldr	r3, [r3, #8]
 801e96c:	ea5f 422a 	movs.w	r2, sl, asr #16
 801e970:	ea4f 4c25 	mov.w	ip, r5, asr #16
 801e974:	f3ca 3003 	ubfx	r0, sl, #12, #4
 801e978:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801e97c:	f100 8121 	bmi.w	801ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e980:	f103 39ff 	add.w	r9, r3, #4294967295
 801e984:	454a      	cmp	r2, r9
 801e986:	f280 811c 	bge.w	801ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e98a:	f1bc 0f00 	cmp.w	ip, #0
 801e98e:	f2c0 8118 	blt.w	801ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e992:	f10e 39ff 	add.w	r9, lr, #4294967295
 801e996:	45cc      	cmp	ip, r9
 801e998:	f280 8113 	bge.w	801ebc2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x302>
 801e99c:	b21b      	sxth	r3, r3
 801e99e:	fb0c 2203 	mla	r2, ip, r3, r2
 801e9a2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801e9a4:	eb04 0902 	add.w	r9, r4, r2
 801e9a8:	5ca2      	ldrb	r2, [r4, r2]
 801e9aa:	f836 e012 	ldrh.w	lr, [r6, r2, lsl #1]
 801e9ae:	2800      	cmp	r0, #0
 801e9b0:	f000 80fe 	beq.w	801ebb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 801e9b4:	f899 2001 	ldrb.w	r2, [r9, #1]
 801e9b8:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 801e9bc:	9211      	str	r2, [sp, #68]	@ 0x44
 801e9be:	b151      	cbz	r1, 801e9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801e9c0:	eb09 0203 	add.w	r2, r9, r3
 801e9c4:	f819 3003 	ldrb.w	r3, [r9, r3]
 801e9c8:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9cc:	930f      	str	r3, [sp, #60]	@ 0x3c
 801e9ce:	7853      	ldrb	r3, [r2, #1]
 801e9d0:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801e9d4:	9312      	str	r3, [sp, #72]	@ 0x48
 801e9d6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801e9d8:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 801e9da:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801e9de:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801e9e2:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801e9e6:	ea4c 0c03 	orr.w	ip, ip, r3
 801e9ea:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801e9ec:	041b      	lsls	r3, r3, #16
 801e9ee:	fb10 f201 	smulbb	r2, r0, r1
 801e9f2:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 801e9f6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801e9fa:	10d2      	asrs	r2, r2, #3
 801e9fc:	4323      	orrs	r3, r4
 801e9fe:	ebc2 0940 	rsb	r9, r2, r0, lsl #1
 801ea02:	4353      	muls	r3, r2
 801ea04:	fb09 330c 	mla	r3, r9, ip, r3
 801ea08:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801ea0c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ea10:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801ea14:	ea4c 0e0e 	orr.w	lr, ip, lr
 801ea18:	f1c1 0c10 	rsb	ip, r1, #16
 801ea1c:	ebac 0c00 	sub.w	ip, ip, r0
 801ea20:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ea24:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801ea28:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801ea2a:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ea2c:	0418      	lsls	r0, r3, #16
 801ea2e:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801ea32:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ea36:	4318      	orrs	r0, r3
 801ea38:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801ea3c:	fb02 c200 	mla	r2, r2, r0, ip
 801ea40:	0d53      	lsrs	r3, r2, #21
 801ea42:	0952      	lsrs	r2, r2, #5
 801ea44:	8838      	ldrh	r0, [r7, #0]
 801ea46:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ea4a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ea4e:	431a      	orrs	r2, r3
 801ea50:	b292      	uxth	r2, r2
 801ea52:	1201      	asrs	r1, r0, #8
 801ea54:	f8bd 3034 	ldrh.w	r3, [sp, #52]	@ 0x34
 801ea58:	ea4f 2c22 	mov.w	ip, r2, asr #8
 801ea5c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ea60:	fb11 f104 	smulbb	r1, r1, r4
 801ea64:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 801ea68:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 801ea6c:	00c0      	lsls	r0, r0, #3
 801ea6e:	fb0c 1c03 	mla	ip, ip, r3, r1
 801ea72:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 801ea76:	10d1      	asrs	r1, r2, #3
 801ea78:	b2c0      	uxtb	r0, r0
 801ea7a:	00d2      	lsls	r2, r2, #3
 801ea7c:	b2d2      	uxtb	r2, r2
 801ea7e:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ea82:	fb1e fe04 	smulbb	lr, lr, r4
 801ea86:	fb10 f004 	smulbb	r0, r0, r4
 801ea8a:	fa1f fc8c 	uxth.w	ip, ip
 801ea8e:	fb01 e103 	mla	r1, r1, r3, lr
 801ea92:	fb02 0303 	mla	r3, r2, r3, r0
 801ea96:	b29a      	uxth	r2, r3
 801ea98:	f10c 0301 	add.w	r3, ip, #1
 801ea9c:	b289      	uxth	r1, r1
 801ea9e:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801eaa2:	1c53      	adds	r3, r2, #1
 801eaa4:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 801eaa8:	1c4a      	adds	r2, r1, #1
 801eaaa:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 801eaae:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 801eab2:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 801eab6:	0949      	lsrs	r1, r1, #5
 801eab8:	ea43 030c 	orr.w	r3, r3, ip
 801eabc:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801eac0:	430b      	orrs	r3, r1
 801eac2:	803b      	strh	r3, [r7, #0]
 801eac4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801eac6:	449a      	add	sl, r3
 801eac8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eaca:	3702      	adds	r7, #2
 801eacc:	441d      	add	r5, r3
 801eace:	f10b 3bff 	add.w	fp, fp, #4294967295
 801ead2:	e742      	b.n	801e95a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801ead4:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ead6:	449a      	add	sl, r3
 801ead8:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801eada:	441d      	add	r5, r3
 801eadc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eade:	3b01      	subs	r3, #1
 801eae0:	9309      	str	r3, [sp, #36]	@ 0x24
 801eae2:	f108 0802 	add.w	r8, r8, #2
 801eae6:	e718      	b.n	801e91a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a>
 801eae8:	d023      	beq.n	801eb32 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x272>
 801eaea:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eaec:	9825      	ldr	r0, [sp, #148]	@ 0x94
 801eaee:	3b01      	subs	r3, #1
 801eaf0:	fb00 a003 	mla	r0, r0, r3, sl
 801eaf4:	1400      	asrs	r0, r0, #16
 801eaf6:	f53f af2d 	bmi.w	801e954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eafa:	3901      	subs	r1, #1
 801eafc:	4288      	cmp	r0, r1
 801eafe:	f6bf af29 	bge.w	801e954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb02:	9926      	ldr	r1, [sp, #152]	@ 0x98
 801eb04:	fb01 5303 	mla	r3, r1, r3, r5
 801eb08:	141b      	asrs	r3, r3, #16
 801eb0a:	f53f af23 	bmi.w	801e954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb0e:	3a01      	subs	r2, #1
 801eb10:	4293      	cmp	r3, r2
 801eb12:	f6bf af1f 	bge.w	801e954 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 801eb16:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 801eb1a:	f8bd 9034 	ldrh.w	r9, [sp, #52]	@ 0x34
 801eb1e:	f8cd 8038 	str.w	r8, [sp, #56]	@ 0x38
 801eb22:	f1be 0f00 	cmp.w	lr, #0
 801eb26:	dc6c      	bgt.n	801ec02 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x342>
 801eb28:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801eb2a:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 801eb2e:	eb08 0844 	add.w	r8, r8, r4, lsl #1
 801eb32:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801eb34:	2b00      	cmp	r3, #0
 801eb36:	f340 810e 	ble.w	801ed56 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x496>
 801eb3a:	ee30 0a04 	vadd.f32	s0, s0, s8
 801eb3e:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801eb42:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801eb46:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801eb48:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801eb4c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801eb50:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801eb54:	eef0 6a62 	vmov.f32	s13, s5
 801eb58:	ee61 7a27 	vmul.f32	s15, s2, s15
 801eb5c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb60:	ee77 2a62 	vsub.f32	s5, s14, s5
 801eb64:	ee16 aa90 	vmov	sl, s13
 801eb68:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801eb6c:	eef0 6a43 	vmov.f32	s13, s6
 801eb70:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801eb74:	ee12 2a90 	vmov	r2, s5
 801eb78:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801eb7c:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb80:	ee13 2a10 	vmov	r2, s6
 801eb84:	9325      	str	r3, [sp, #148]	@ 0x94
 801eb86:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801eb88:	fb92 f3f3 	sdiv	r3, r2, r3
 801eb8c:	9326      	str	r3, [sp, #152]	@ 0x98
 801eb8e:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801eb90:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 801eb92:	3b01      	subs	r3, #1
 801eb94:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801eb98:	930c      	str	r3, [sp, #48]	@ 0x30
 801eb9a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 801eb9c:	bf08      	it	eq
 801eb9e:	4613      	moveq	r3, r2
 801eba0:	ee16 5a90 	vmov	r5, s13
 801eba4:	9309      	str	r3, [sp, #36]	@ 0x24
 801eba6:	eeb0 3a67 	vmov.f32	s6, s15
 801ebaa:	eef0 2a47 	vmov.f32	s5, s14
 801ebae:	e6a6      	b.n	801e8fe <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 801ebb0:	2900      	cmp	r1, #0
 801ebb2:	f43f af10 	beq.w	801e9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ebb6:	f819 3003 	ldrb.w	r3, [r9, r3]
 801ebba:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ebbe:	930f      	str	r3, [sp, #60]	@ 0x3c
 801ebc0:	e709      	b.n	801e9d6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801ebc2:	f112 0901 	adds.w	r9, r2, #1
 801ebc6:	f53f af7d 	bmi.w	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebca:	454b      	cmp	r3, r9
 801ebcc:	f6ff af7a 	blt.w	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebd0:	f11c 0901 	adds.w	r9, ip, #1
 801ebd4:	f53f af76 	bmi.w	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebd8:	45ce      	cmp	lr, r9
 801ebda:	f6ff af73 	blt.w	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ebde:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 801ebe0:	9202      	str	r2, [sp, #8]
 801ebe2:	b21b      	sxth	r3, r3
 801ebe4:	fa0f f28e 	sxth.w	r2, lr
 801ebe8:	e9cd 1405 	strd	r1, r4, [sp, #20]
 801ebec:	e9cd c003 	strd	ip, r0, [sp, #12]
 801ebf0:	9201      	str	r2, [sp, #4]
 801ebf2:	9300      	str	r3, [sp, #0]
 801ebf4:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ebf6:	9816      	ldr	r0, [sp, #88]	@ 0x58
 801ebf8:	4633      	mov	r3, r6
 801ebfa:	4639      	mov	r1, r7
 801ebfc:	f7ff fd8e 	bl	801e71c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKtssiihhh>
 801ec00:	e760      	b.n	801eac4 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x204>
 801ec02:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 801ec04:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 801ec06:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801ec0a:	ea4f 422a 	mov.w	r2, sl, asr #16
 801ec0e:	1429      	asrs	r1, r5, #16
 801ec10:	fb03 2101 	mla	r1, r3, r1, r2
 801ec14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 801ec16:	440a      	add	r2, r1
 801ec18:	5c61      	ldrb	r1, [r4, r1]
 801ec1a:	f3ca 3c03 	ubfx	ip, sl, #12, #4
 801ec1e:	f3c5 3003 	ubfx	r0, r5, #12, #4
 801ec22:	f836 1011 	ldrh.w	r1, [r6, r1, lsl #1]
 801ec26:	f1bc 0f00 	cmp.w	ip, #0
 801ec2a:	f000 808c 	beq.w	801ed46 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x486>
 801ec2e:	7857      	ldrb	r7, [r2, #1]
 801ec30:	f836 4017 	ldrh.w	r4, [r6, r7, lsl #1]
 801ec34:	9413      	str	r4, [sp, #76]	@ 0x4c
 801ec36:	b140      	cbz	r0, 801ec4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ec38:	18d7      	adds	r7, r2, r3
 801ec3a:	5cd3      	ldrb	r3, [r2, r3]
 801ec3c:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec40:	9310      	str	r3, [sp, #64]	@ 0x40
 801ec42:	787b      	ldrb	r3, [r7, #1]
 801ec44:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ec48:	9314      	str	r3, [sp, #80]	@ 0x50
 801ec4a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 801ec4c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 801ec4e:	fb1c f200 	smulbb	r2, ip, r0
 801ec52:	041f      	lsls	r7, r3, #16
 801ec54:	10d2      	asrs	r2, r2, #3
 801ec56:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ec5a:	f007 67fc 	and.w	r7, r7, #132120576	@ 0x7e00000
 801ec5e:	431f      	orrs	r7, r3
 801ec60:	ebc2 034c 	rsb	r3, r2, ip, lsl #1
 801ec64:	9317      	str	r3, [sp, #92]	@ 0x5c
 801ec66:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 801ec68:	041b      	lsls	r3, r3, #16
 801ec6a:	f424 6bfc 	bic.w	fp, r4, #2016	@ 0x7e0
 801ec6e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ec72:	ea43 030b 	orr.w	r3, r3, fp
 801ec76:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 801ec78:	4353      	muls	r3, r2
 801ec7a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801ec7e:	fb04 3707 	mla	r7, r4, r7, r3
 801ec82:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801ec86:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801ec8a:	ea43 0b01 	orr.w	fp, r3, r1
 801ec8e:	f1c0 0110 	rsb	r1, r0, #16
 801ec92:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801ec94:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 801ec96:	eba1 0c0c 	sub.w	ip, r1, ip
 801ec9a:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801ec9e:	fb0c 770b 	mla	r7, ip, fp, r7
 801eca2:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801eca6:	f423 6bfc 	bic.w	fp, r3, #2016	@ 0x7e0
 801ecaa:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ecae:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801ecb2:	ea4c 0c0b 	orr.w	ip, ip, fp
 801ecb6:	fb02 770c 	mla	r7, r2, ip, r7
 801ecba:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 801ecbc:	0d79      	lsrs	r1, r7, #21
 801ecbe:	097f      	lsrs	r7, r7, #5
 801ecc0:	8812      	ldrh	r2, [r2, #0]
 801ecc2:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ecc6:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ecca:	430f      	orrs	r7, r1
 801eccc:	b2bb      	uxth	r3, r7
 801ecce:	1211      	asrs	r1, r2, #8
 801ecd0:	1218      	asrs	r0, r3, #8
 801ecd2:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 801ecd6:	fb11 f104 	smulbb	r1, r1, r4
 801ecda:	10d7      	asrs	r7, r2, #3
 801ecdc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 801ece0:	00d2      	lsls	r2, r2, #3
 801ece2:	fb00 1009 	mla	r0, r0, r9, r1
 801ece6:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801ecea:	10d9      	asrs	r1, r3, #3
 801ecec:	b2d2      	uxtb	r2, r2
 801ecee:	00db      	lsls	r3, r3, #3
 801ecf0:	fb17 f704 	smulbb	r7, r7, r4
 801ecf4:	fb12 f204 	smulbb	r2, r2, r4
 801ecf8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 801ecfc:	b2db      	uxtb	r3, r3
 801ecfe:	b280      	uxth	r0, r0
 801ed00:	fb01 7109 	mla	r1, r1, r9, r7
 801ed04:	fb03 2309 	mla	r3, r3, r9, r2
 801ed08:	b29b      	uxth	r3, r3
 801ed0a:	b289      	uxth	r1, r1
 801ed0c:	1c42      	adds	r2, r0, #1
 801ed0e:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 801ed12:	1c4f      	adds	r7, r1, #1
 801ed14:	1c5a      	adds	r2, r3, #1
 801ed16:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 801ed1a:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 801ed1e:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 801ed22:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801ed26:	0949      	lsrs	r1, r1, #5
 801ed28:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801ed2a:	4310      	orrs	r0, r2
 801ed2c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 801ed30:	4308      	orrs	r0, r1
 801ed32:	f823 0b02 	strh.w	r0, [r3], #2
 801ed36:	930e      	str	r3, [sp, #56]	@ 0x38
 801ed38:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 801ed3a:	449a      	add	sl, r3
 801ed3c:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801ed3e:	f10e 3eff 	add.w	lr, lr, #4294967295
 801ed42:	441d      	add	r5, r3
 801ed44:	e6ed      	b.n	801eb22 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x262>
 801ed46:	2800      	cmp	r0, #0
 801ed48:	f43f af7f 	beq.w	801ec4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed4c:	5cd3      	ldrb	r3, [r2, r3]
 801ed4e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 801ed52:	9310      	str	r3, [sp, #64]	@ 0x40
 801ed54:	e779      	b.n	801ec4a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 801ed56:	b019      	add	sp, #100	@ 0x64
 801ed58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801ed5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 801ed5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ed60:	e9dd 480a 	ldrd	r4, r8, [sp, #40]	@ 0x28
 801ed64:	f9bd e020 	ldrsh.w	lr, [sp, #32]
 801ed68:	f9bd a024 	ldrsh.w	sl, [sp, #36]	@ 0x24
 801ed6c:	f89d 5030 	ldrb.w	r5, [sp, #48]	@ 0x30
 801ed70:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 801ed74:	8808      	ldrh	r0, [r1, #0]
 801ed76:	fb08 470e 	mla	r7, r8, lr, r4
 801ed7a:	f1b8 0f00 	cmp.w	r8, #0
 801ed7e:	eb02 0907 	add.w	r9, r2, r7
 801ed82:	db67      	blt.n	801ee54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed84:	45c2      	cmp	sl, r8
 801ed86:	dd65      	ble.n	801ee54 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf8>
 801ed88:	2c00      	cmp	r4, #0
 801ed8a:	db61      	blt.n	801ee50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed8c:	45a6      	cmp	lr, r4
 801ed8e:	dd5f      	ble.n	801ee50 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xf4>
 801ed90:	5dd2      	ldrb	r2, [r2, r7]
 801ed92:	f833 c012 	ldrh.w	ip, [r3, r2, lsl #1]
 801ed96:	1c62      	adds	r2, r4, #1
 801ed98:	d45f      	bmi.n	801ee5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed9a:	4596      	cmp	lr, r2
 801ed9c:	dd5d      	ble.n	801ee5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801ed9e:	2d00      	cmp	r5, #0
 801eda0:	d05b      	beq.n	801ee5a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xfe>
 801eda2:	f899 2001 	ldrb.w	r2, [r9, #1]
 801eda6:	f833 7012 	ldrh.w	r7, [r3, r2, lsl #1]
 801edaa:	f118 0801 	adds.w	r8, r8, #1
 801edae:	d458      	bmi.n	801ee62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801edb0:	45c2      	cmp	sl, r8
 801edb2:	dd56      	ble.n	801ee62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801edb4:	2e00      	cmp	r6, #0
 801edb6:	d054      	beq.n	801ee62 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x106>
 801edb8:	2c00      	cmp	r4, #0
 801edba:	db50      	blt.n	801ee5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801edbc:	45a6      	cmp	lr, r4
 801edbe:	dd4e      	ble.n	801ee5e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x102>
 801edc0:	f819 200e 	ldrb.w	r2, [r9, lr]
 801edc4:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 801edc8:	3401      	adds	r4, #1
 801edca:	d407      	bmi.n	801eddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edcc:	45a6      	cmp	lr, r4
 801edce:	dd05      	ble.n	801eddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edd0:	b125      	cbz	r5, 801eddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>
 801edd2:	44ce      	add	lr, r9
 801edd4:	f89e 0001 	ldrb.w	r0, [lr, #1]
 801edd8:	f833 0010 	ldrh.w	r0, [r3, r0, lsl #1]
 801eddc:	ea4f 430c 	mov.w	r3, ip, lsl #16
 801ede0:	fb15 f406 	smulbb	r4, r5, r6
 801ede4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ede8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 801edec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801edf0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 801edf4:	ea43 0c0c 	orr.w	ip, r3, ip
 801edf8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 801edfc:	f1c6 0310 	rsb	r3, r6, #16
 801ee00:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 801ee04:	1b5b      	subs	r3, r3, r5
 801ee06:	ea4e 0707 	orr.w	r7, lr, r7
 801ee0a:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 801ee0e:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 801ee12:	437d      	muls	r5, r7
 801ee14:	fb03 5c0c 	mla	ip, r3, ip, r5
 801ee18:	0403      	lsls	r3, r0, #16
 801ee1a:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ee1e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ee22:	4318      	orrs	r0, r3
 801ee24:	0413      	lsls	r3, r2, #16
 801ee26:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ee2a:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801ee2e:	4313      	orrs	r3, r2
 801ee30:	fb04 c000 	mla	r0, r4, r0, ip
 801ee34:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 801ee38:	fb06 0003 	mla	r0, r6, r3, r0
 801ee3c:	0d43      	lsrs	r3, r0, #21
 801ee3e:	0940      	lsrs	r0, r0, #5
 801ee40:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801ee44:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 801ee48:	4318      	orrs	r0, r3
 801ee4a:	8008      	strh	r0, [r1, #0]
 801ee4c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801ee50:	4684      	mov	ip, r0
 801ee52:	e7a0      	b.n	801ed96 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x3a>
 801ee54:	4607      	mov	r7, r0
 801ee56:	4684      	mov	ip, r0
 801ee58:	e7a7      	b.n	801edaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee5a:	4607      	mov	r7, r0
 801ee5c:	e7a5      	b.n	801edaa <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x4e>
 801ee5e:	4602      	mov	r2, r0
 801ee60:	e7b2      	b.n	801edc8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x6c>
 801ee62:	4602      	mov	r2, r0
 801ee64:	e7ba      	b.n	801eddc <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x80>

0801ee66 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801ee66:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801ee6a:	b093      	sub	sp, #76	@ 0x4c
 801ee6c:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 801ee70:	920f      	str	r2, [sp, #60]	@ 0x3c
 801ee72:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801ee74:	9108      	str	r1, [sp, #32]
 801ee76:	9306      	str	r3, [sp, #24]
 801ee78:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 801ee7c:	9010      	str	r0, [sp, #64]	@ 0x40
 801ee7e:	6850      	ldr	r0, [r2, #4]
 801ee80:	6812      	ldr	r2, [r2, #0]
 801ee82:	fb00 1303 	mla	r3, r0, r3, r1
 801ee86:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 801ee8a:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ee8c:	681b      	ldr	r3, [r3, #0]
 801ee8e:	9307      	str	r3, [sp, #28]
 801ee90:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ee92:	685f      	ldr	r7, [r3, #4]
 801ee94:	eef7 6a00 	vmov.f32	s13, #112	@ 0x3f800000  1.0
 801ee98:	3704      	adds	r7, #4
 801ee9a:	9b08      	ldr	r3, [sp, #32]
 801ee9c:	2b00      	cmp	r3, #0
 801ee9e:	dc03      	bgt.n	801eea8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 801eea0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801eea2:	2b00      	cmp	r3, #0
 801eea4:	f340 81b2 	ble.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801eea8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801eeaa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801eeae:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801eeb2:	1e48      	subs	r0, r1, #1
 801eeb4:	f102 3cff 	add.w	ip, r2, #4294967295
 801eeb8:	9b06      	ldr	r3, [sp, #24]
 801eeba:	2b00      	cmp	r3, #0
 801eebc:	f340 80a9 	ble.w	801f012 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ac>
 801eec0:	ea5f 4e24 	movs.w	lr, r4, asr #16
 801eec4:	ea4f 4326 	mov.w	r3, r6, asr #16
 801eec8:	d406      	bmi.n	801eed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eeca:	4586      	cmp	lr, r0
 801eecc:	da04      	bge.n	801eed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eece:	2b00      	cmp	r3, #0
 801eed0:	db02      	blt.n	801eed8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72>
 801eed2:	4563      	cmp	r3, ip
 801eed4:	f2c0 809e 	blt.w	801f014 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801eed8:	f11e 0e01 	adds.w	lr, lr, #1
 801eedc:	f100 808f 	bmi.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eee0:	4571      	cmp	r1, lr
 801eee2:	f2c0 808c 	blt.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eee6:	3301      	adds	r3, #1
 801eee8:	f100 8089 	bmi.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eeec:	429a      	cmp	r2, r3
 801eeee:	f2c0 8086 	blt.w	801effe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801eef2:	f8dd b018 	ldr.w	fp, [sp, #24]
 801eef6:	46c8      	mov	r8, r9
 801eef8:	f1bb 0f00 	cmp.w	fp, #0
 801eefc:	f340 80a6 	ble.w	801f04c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e6>
 801ef00:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 801ef02:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801ef04:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 801ef08:	689b      	ldr	r3, [r3, #8]
 801ef0a:	1422      	asrs	r2, r4, #16
 801ef0c:	ea4f 4c26 	mov.w	ip, r6, asr #16
 801ef10:	f3c4 3003 	ubfx	r0, r4, #12, #4
 801ef14:	f3c6 3103 	ubfx	r1, r6, #12, #4
 801ef18:	f100 80e3 	bmi.w	801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef1c:	f103 3aff 	add.w	sl, r3, #4294967295
 801ef20:	4552      	cmp	r2, sl
 801ef22:	f280 80de 	bge.w	801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef26:	f1bc 0f00 	cmp.w	ip, #0
 801ef2a:	f2c0 80da 	blt.w	801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef2e:	f10e 3aff 	add.w	sl, lr, #4294967295
 801ef32:	45d4      	cmp	ip, sl
 801ef34:	f280 80d5 	bge.w	801f0e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x27c>
 801ef38:	b21b      	sxth	r3, r3
 801ef3a:	fb0c 2203 	mla	r2, ip, r3, r2
 801ef3e:	9d07      	ldr	r5, [sp, #28]
 801ef40:	eb05 0a02 	add.w	sl, r5, r2
 801ef44:	5caa      	ldrb	r2, [r5, r2]
 801ef46:	f837 e012 	ldrh.w	lr, [r7, r2, lsl #1]
 801ef4a:	2800      	cmp	r0, #0
 801ef4c:	f000 80c0 	beq.w	801f0d0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26a>
 801ef50:	f89a 2001 	ldrb.w	r2, [sl, #1]
 801ef54:	f837 2012 	ldrh.w	r2, [r7, r2, lsl #1]
 801ef58:	920b      	str	r2, [sp, #44]	@ 0x2c
 801ef5a:	b151      	cbz	r1, 801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801ef5c:	eb0a 0203 	add.w	r2, sl, r3
 801ef60:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801ef64:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef68:	9309      	str	r3, [sp, #36]	@ 0x24
 801ef6a:	7853      	ldrb	r3, [r2, #1]
 801ef6c:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801ef70:	930c      	str	r3, [sp, #48]	@ 0x30
 801ef72:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801ef74:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 801ef76:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801ef7a:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801ef7e:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801ef82:	ea4c 0c03 	orr.w	ip, ip, r3
 801ef86:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801ef88:	041b      	lsls	r3, r3, #16
 801ef8a:	fb10 f201 	smulbb	r2, r0, r1
 801ef8e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801ef92:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 801ef96:	10d2      	asrs	r2, r2, #3
 801ef98:	432b      	orrs	r3, r5
 801ef9a:	ebc2 0a40 	rsb	sl, r2, r0, lsl #1
 801ef9e:	4353      	muls	r3, r2
 801efa0:	fb0a 330c 	mla	r3, sl, ip, r3
 801efa4:	ea4f 4c0e 	mov.w	ip, lr, lsl #16
 801efa8:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801efac:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 801efb0:	ea4c 0e0e 	orr.w	lr, ip, lr
 801efb4:	f1c1 0c10 	rsb	ip, r1, #16
 801efb8:	ebac 0c00 	sub.w	ip, ip, r0
 801efbc:	eb02 0c4c 	add.w	ip, r2, ip, lsl #1
 801efc0:	fb0c 3c0e 	mla	ip, ip, lr, r3
 801efc4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801efc6:	0418      	lsls	r0, r3, #16
 801efc8:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 801efcc:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801efd0:	4318      	orrs	r0, r3
 801efd2:	ebc2 0241 	rsb	r2, r2, r1, lsl #1
 801efd6:	fb02 c200 	mla	r2, r2, r0, ip
 801efda:	0d53      	lsrs	r3, r2, #21
 801efdc:	0952      	lsrs	r2, r2, #5
 801efde:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801efe2:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 801efe6:	431a      	orrs	r2, r3
 801efe8:	f8a8 2000 	strh.w	r2, [r8]
 801efec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801efee:	441c      	add	r4, r3
 801eff0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801eff2:	f108 0802 	add.w	r8, r8, #2
 801eff6:	441e      	add	r6, r3
 801eff8:	f10b 3bff 	add.w	fp, fp, #4294967295
 801effc:	e77c      	b.n	801eef8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801effe:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f000:	441c      	add	r4, r3
 801f002:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f004:	441e      	add	r6, r3
 801f006:	9b06      	ldr	r3, [sp, #24]
 801f008:	3b01      	subs	r3, #1
 801f00a:	9306      	str	r3, [sp, #24]
 801f00c:	f109 0902 	add.w	r9, r9, #2
 801f010:	e752      	b.n	801eeb8 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 801f012:	d020      	beq.n	801f056 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1f0>
 801f014:	9b06      	ldr	r3, [sp, #24]
 801f016:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f018:	3b01      	subs	r3, #1
 801f01a:	fb00 4003 	mla	r0, r0, r3, r4
 801f01e:	1400      	asrs	r0, r0, #16
 801f020:	f53f af67 	bmi.w	801eef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f024:	3901      	subs	r1, #1
 801f026:	4288      	cmp	r0, r1
 801f028:	f6bf af63 	bge.w	801eef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f02c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 801f02e:	fb01 6303 	mla	r3, r1, r3, r6
 801f032:	141b      	asrs	r3, r3, #16
 801f034:	f53f af5d 	bmi.w	801eef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f038:	3a01      	subs	r2, #1
 801f03a:	4293      	cmp	r3, r2
 801f03c:	f6bf af59 	bge.w	801eef2 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8c>
 801f040:	f8dd 8018 	ldr.w	r8, [sp, #24]
 801f044:	46ca      	mov	sl, r9
 801f046:	f1b8 0f00 	cmp.w	r8, #0
 801f04a:	dc67      	bgt.n	801f11c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b6>
 801f04c:	9b06      	ldr	r3, [sp, #24]
 801f04e:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 801f052:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 801f056:	9b08      	ldr	r3, [sp, #32]
 801f058:	2b00      	cmp	r3, #0
 801f05a:	f340 80d7 	ble.w	801f20c <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 801f05e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f062:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f066:	eec6 7a80 	vdiv.f32	s15, s13, s0
 801f06a:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f06c:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f070:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f074:	eeb0 6a62 	vmov.f32	s12, s5
 801f078:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f07c:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f080:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f084:	ee16 4a10 	vmov	r4, s12
 801f088:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f08c:	eeb0 6a43 	vmov.f32	s12, s6
 801f090:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f094:	ee12 2a90 	vmov	r2, s5
 801f098:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f09c:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0a0:	ee13 2a10 	vmov	r2, s6
 801f0a4:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f0a6:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f0a8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f0ac:	9320      	str	r3, [sp, #128]	@ 0x80
 801f0ae:	9b08      	ldr	r3, [sp, #32]
 801f0b0:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 801f0b2:	3b01      	subs	r3, #1
 801f0b4:	eebe 6ac8 	vcvt.s32.f32	s12, s12, #16
 801f0b8:	9308      	str	r3, [sp, #32]
 801f0ba:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801f0bc:	bf08      	it	eq
 801f0be:	4613      	moveq	r3, r2
 801f0c0:	ee16 6a10 	vmov	r6, s12
 801f0c4:	9306      	str	r3, [sp, #24]
 801f0c6:	eeb0 3a67 	vmov.f32	s6, s15
 801f0ca:	eef0 2a47 	vmov.f32	s5, s14
 801f0ce:	e6e4      	b.n	801ee9a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 801f0d0:	2900      	cmp	r1, #0
 801f0d2:	f43f af4e 	beq.w	801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0d6:	f81a 3003 	ldrb.w	r3, [sl, r3]
 801f0da:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f0de:	9309      	str	r3, [sp, #36]	@ 0x24
 801f0e0:	e747      	b.n	801ef72 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x10c>
 801f0e2:	f112 0a01 	adds.w	sl, r2, #1
 801f0e6:	d481      	bmi.n	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0e8:	4553      	cmp	r3, sl
 801f0ea:	f6ff af7f 	blt.w	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0ee:	f11c 0a01 	adds.w	sl, ip, #1
 801f0f2:	f53f af7b 	bmi.w	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0f6:	45d6      	cmp	lr, sl
 801f0f8:	f6ff af78 	blt.w	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f0fc:	e9cd 2c02 	strd	r2, ip, [sp, #8]
 801f100:	b21b      	sxth	r3, r3
 801f102:	fa0f f28e 	sxth.w	r2, lr
 801f106:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801f10a:	9201      	str	r2, [sp, #4]
 801f10c:	9300      	str	r3, [sp, #0]
 801f10e:	9a07      	ldr	r2, [sp, #28]
 801f110:	9810      	ldr	r0, [sp, #64]	@ 0x40
 801f112:	463b      	mov	r3, r7
 801f114:	4641      	mov	r1, r8
 801f116:	f7ff fe21 	bl	801ed5c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 801f11a:	e767      	b.n	801efec <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 801f11c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 801f11e:	9d07      	ldr	r5, [sp, #28]
 801f120:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 801f124:	1422      	asrs	r2, r4, #16
 801f126:	1431      	asrs	r1, r6, #16
 801f128:	fb03 2101 	mla	r1, r3, r1, r2
 801f12c:	9a07      	ldr	r2, [sp, #28]
 801f12e:	440a      	add	r2, r1
 801f130:	5c69      	ldrb	r1, [r5, r1]
 801f132:	f3c4 3e03 	ubfx	lr, r4, #12, #4
 801f136:	f3c6 3003 	ubfx	r0, r6, #12, #4
 801f13a:	f837 1011 	ldrh.w	r1, [r7, r1, lsl #1]
 801f13e:	f1be 0f00 	cmp.w	lr, #0
 801f142:	d05c      	beq.n	801f1fe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 801f144:	f892 c001 	ldrb.w	ip, [r2, #1]
 801f148:	f837 501c 	ldrh.w	r5, [r7, ip, lsl #1]
 801f14c:	950d      	str	r5, [sp, #52]	@ 0x34
 801f14e:	b150      	cbz	r0, 801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f150:	eb02 0c03 	add.w	ip, r2, r3
 801f154:	5cd3      	ldrb	r3, [r2, r3]
 801f156:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f15a:	930a      	str	r3, [sp, #40]	@ 0x28
 801f15c:	f89c 3001 	ldrb.w	r3, [ip, #1]
 801f160:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f164:	930e      	str	r3, [sp, #56]	@ 0x38
 801f166:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 801f168:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 801f16a:	fb1e f200 	smulbb	r2, lr, r0
 801f16e:	ea4f 4c03 	mov.w	ip, r3, lsl #16
 801f172:	10d2      	asrs	r2, r2, #3
 801f174:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 801f178:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 801f17c:	ea4c 0c03 	orr.w	ip, ip, r3
 801f180:	ebc2 034e 	rsb	r3, r2, lr, lsl #1
 801f184:	9311      	str	r3, [sp, #68]	@ 0x44
 801f186:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f188:	041b      	lsls	r3, r3, #16
 801f18a:	f425 6bfc 	bic.w	fp, r5, #2016	@ 0x7e0
 801f18e:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 801f192:	ea43 030b 	orr.w	r3, r3, fp
 801f196:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 801f198:	4353      	muls	r3, r2
 801f19a:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 801f19e:	fb05 3c0c 	mla	ip, r5, ip, r3
 801f1a2:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 801f1a6:	f00b 63fc 	and.w	r3, fp, #132120576	@ 0x7e00000
 801f1aa:	ea43 0b01 	orr.w	fp, r3, r1
 801f1ae:	f1c0 0110 	rsb	r1, r0, #16
 801f1b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f1b4:	eba1 0e0e 	sub.w	lr, r1, lr
 801f1b8:	eb02 0e4e 	add.w	lr, r2, lr, lsl #1
 801f1bc:	fb0e cc0b 	mla	ip, lr, fp, ip
 801f1c0:	ea4f 4b03 	mov.w	fp, r3, lsl #16
 801f1c4:	f423 6efc 	bic.w	lr, r3, #2016	@ 0x7e0
 801f1c8:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 801f1cc:	ea4b 0e0e 	orr.w	lr, fp, lr
 801f1d0:	ebc2 0240 	rsb	r2, r2, r0, lsl #1
 801f1d4:	fb02 cc0e 	mla	ip, r2, lr, ip
 801f1d8:	ea4f 535c 	mov.w	r3, ip, lsr #21
 801f1dc:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 801f1e0:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801f1e4:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 801f1e8:	ea43 0c0c 	orr.w	ip, r3, ip
 801f1ec:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f1ee:	f82a cb02 	strh.w	ip, [sl], #2
 801f1f2:	441c      	add	r4, r3
 801f1f4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f1f6:	f108 38ff 	add.w	r8, r8, #4294967295
 801f1fa:	441e      	add	r6, r3
 801f1fc:	e723      	b.n	801f046 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e0>
 801f1fe:	2800      	cmp	r0, #0
 801f200:	d0b1      	beq.n	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f202:	5cd3      	ldrb	r3, [r2, r3]
 801f204:	f837 3013 	ldrh.w	r3, [r7, r3, lsl #1]
 801f208:	930a      	str	r3, [sp, #40]	@ 0x28
 801f20a:	e7ac      	b.n	801f166 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x300>
 801f20c:	b013      	add	sp, #76	@ 0x4c
 801f20e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>:
 801f212:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f216:	880d      	ldrh	r5, [r1, #0]
 801f218:	b087      	sub	sp, #28
 801f21a:	10ef      	asrs	r7, r5, #3
 801f21c:	ea4f 2a25 	mov.w	sl, r5, asr #8
 801f220:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 801f224:	00ed      	lsls	r5, r5, #3
 801f226:	9701      	str	r7, [sp, #4]
 801f228:	b2ed      	uxtb	r5, r5
 801f22a:	9502      	str	r5, [sp, #8]
 801f22c:	9d01      	ldr	r5, [sp, #4]
 801f22e:	9103      	str	r1, [sp, #12]
 801f230:	e9dd 0612 	ldrd	r0, r6, [sp, #72]	@ 0x48
 801f234:	f9bd 9040 	ldrsh.w	r9, [sp, #64]	@ 0x40
 801f238:	9902      	ldr	r1, [sp, #8]
 801f23a:	f9bd b044 	ldrsh.w	fp, [sp, #68]	@ 0x44
 801f23e:	f89d 4050 	ldrb.w	r4, [sp, #80]	@ 0x50
 801f242:	f89d e054 	ldrb.w	lr, [sp, #84]	@ 0x54
 801f246:	f89d 8058 	ldrb.w	r8, [sp, #88]	@ 0x58
 801f24a:	f00a 0af8 	and.w	sl, sl, #248	@ 0xf8
 801f24e:	022d      	lsls	r5, r5, #8
 801f250:	ea45 450a 	orr.w	r5, r5, sl, lsl #16
 801f254:	fb06 0709 	mla	r7, r6, r9, r0
 801f258:	430d      	orrs	r5, r1
 801f25a:	2e00      	cmp	r6, #0
 801f25c:	eb02 0c07 	add.w	ip, r2, r7
 801f260:	9505      	str	r5, [sp, #20]
 801f262:	f2c0 80b6 	blt.w	801f3d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f266:	45b3      	cmp	fp, r6
 801f268:	f340 80b3 	ble.w	801f3d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c0>
 801f26c:	2800      	cmp	r0, #0
 801f26e:	f2c0 80ae 	blt.w	801f3ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f272:	4581      	cmp	r9, r0
 801f274:	f340 80ab 	ble.w	801f3ce <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1bc>
 801f278:	5dd7      	ldrb	r7, [r2, r7]
 801f27a:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f27e:	441f      	add	r7, r3
 801f280:	1c42      	adds	r2, r0, #1
 801f282:	f100 80a9 	bmi.w	801f3d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f286:	4591      	cmp	r9, r2
 801f288:	f340 80a6 	ble.w	801f3d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f28c:	2c00      	cmp	r4, #0
 801f28e:	f000 80a3 	beq.w	801f3d8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1c6>
 801f292:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f296:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f29a:	441d      	add	r5, r3
 801f29c:	3601      	adds	r6, #1
 801f29e:	f100 809f 	bmi.w	801f3e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2a2:	45b3      	cmp	fp, r6
 801f2a4:	f340 809c 	ble.w	801f3e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2a8:	f1be 0f00 	cmp.w	lr, #0
 801f2ac:	f000 8098 	beq.w	801f3e0 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ce>
 801f2b0:	2800      	cmp	r0, #0
 801f2b2:	f2c0 8093 	blt.w	801f3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f2b6:	4581      	cmp	r9, r0
 801f2b8:	f340 8090 	ble.w	801f3dc <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1ca>
 801f2bc:	f81c 6009 	ldrb.w	r6, [ip, r9]
 801f2c0:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801f2c4:	441e      	add	r6, r3
 801f2c6:	3001      	adds	r0, #1
 801f2c8:	f100 808d 	bmi.w	801f3e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2cc:	4581      	cmp	r9, r0
 801f2ce:	f340 808a 	ble.w	801f3e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2d2:	2c00      	cmp	r4, #0
 801f2d4:	f000 8087 	beq.w	801f3e6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x1d4>
 801f2d8:	44e1      	add	r9, ip
 801f2da:	f899 2001 	ldrb.w	r2, [r9, #1]
 801f2de:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f2e2:	4413      	add	r3, r2
 801f2e4:	b2a4      	uxth	r4, r4
 801f2e6:	fa1f fe8e 	uxth.w	lr, lr
 801f2ea:	fb04 fb0e 	mul.w	fp, r4, lr
 801f2ee:	0124      	lsls	r4, r4, #4
 801f2f0:	ebcb 1e0e 	rsb	lr, fp, lr, lsl #4
 801f2f4:	f5c4 7980 	rsb	r9, r4, #256	@ 0x100
 801f2f8:	eba4 040b 	sub.w	r4, r4, fp
 801f2fc:	fa1f f08e 	uxth.w	r0, lr
 801f300:	b2a2      	uxth	r2, r4
 801f302:	78ac      	ldrb	r4, [r5, #2]
 801f304:	f897 c002 	ldrb.w	ip, [r7, #2]
 801f308:	9901      	ldr	r1, [sp, #4]
 801f30a:	eba9 0900 	sub.w	r9, r9, r0
 801f30e:	fa1f f989 	uxth.w	r9, r9
 801f312:	4354      	muls	r4, r2
 801f314:	fb09 440c 	mla	r4, r9, ip, r4
 801f318:	f896 c002 	ldrb.w	ip, [r6, #2]
 801f31c:	fb00 440c 	mla	r4, r0, ip, r4
 801f320:	f893 c002 	ldrb.w	ip, [r3, #2]
 801f324:	fa1f fe88 	uxth.w	lr, r8
 801f328:	ea6f 0808 	mvn.w	r8, r8
 801f32c:	fa5f f888 	uxtb.w	r8, r8
 801f330:	fb0b 4c0c 	mla	ip, fp, ip, r4
 801f334:	fb1a fa08 	smulbb	sl, sl, r8
 801f338:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f33c:	fb0c ac0e 	mla	ip, ip, lr, sl
 801f340:	f895 a001 	ldrb.w	sl, [r5, #1]
 801f344:	787c      	ldrb	r4, [r7, #1]
 801f346:	782d      	ldrb	r5, [r5, #0]
 801f348:	783f      	ldrb	r7, [r7, #0]
 801f34a:	fb02 fa0a 	mul.w	sl, r2, sl
 801f34e:	fb09 aa04 	mla	sl, r9, r4, sl
 801f352:	7874      	ldrb	r4, [r6, #1]
 801f354:	436a      	muls	r2, r5
 801f356:	7835      	ldrb	r5, [r6, #0]
 801f358:	fb00 aa04 	mla	sl, r0, r4, sl
 801f35c:	fb09 2207 	mla	r2, r9, r7, r2
 801f360:	785c      	ldrb	r4, [r3, #1]
 801f362:	781b      	ldrb	r3, [r3, #0]
 801f364:	fb00 2005 	mla	r0, r0, r5, r2
 801f368:	fb0b a404 	mla	r4, fp, r4, sl
 801f36c:	fb0b 0b03 	mla	fp, fp, r3, r0
 801f370:	9b02      	ldr	r3, [sp, #8]
 801f372:	fb11 fa08 	smulbb	sl, r1, r8
 801f376:	fa1f fc8c 	uxth.w	ip, ip
 801f37a:	fb13 f808 	smulbb	r8, r3, r8
 801f37e:	f3cb 2b07 	ubfx	fp, fp, #8, #8
 801f382:	f3c4 2407 	ubfx	r4, r4, #8, #8
 801f386:	fb04 a40e 	mla	r4, r4, lr, sl
 801f38a:	f10c 0301 	add.w	r3, ip, #1
 801f38e:	fb0b 8e0e 	mla	lr, fp, lr, r8
 801f392:	fa1f fe8e 	uxth.w	lr, lr
 801f396:	b2a4      	uxth	r4, r4
 801f398:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 801f39c:	f40c 4378 	and.w	r3, ip, #63488	@ 0xf800
 801f3a0:	f104 0a01 	add.w	sl, r4, #1
 801f3a4:	f10e 0c01 	add.w	ip, lr, #1
 801f3a8:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 801f3ac:	eb0a 2414 	add.w	r4, sl, r4, lsr #8
 801f3b0:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 801f3b4:	0964      	lsrs	r4, r4, #5
 801f3b6:	ea4c 0c03 	orr.w	ip, ip, r3
 801f3ba:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 801f3be:	9b03      	ldr	r3, [sp, #12]
 801f3c0:	ea4c 0c04 	orr.w	ip, ip, r4
 801f3c4:	f8a3 c000 	strh.w	ip, [r3]
 801f3c8:	b007      	add	sp, #28
 801f3ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f3ce:	af05      	add	r7, sp, #20
 801f3d0:	e756      	b.n	801f280 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x6e>
 801f3d2:	ad05      	add	r5, sp, #20
 801f3d4:	462f      	mov	r7, r5
 801f3d6:	e761      	b.n	801f29c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f3d8:	ad05      	add	r5, sp, #20
 801f3da:	e75f      	b.n	801f29c <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0x8a>
 801f3dc:	ae05      	add	r6, sp, #20
 801f3de:	e772      	b.n	801f2c6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xb4>
 801f3e0:	ab05      	add	r3, sp, #20
 801f3e2:	461e      	mov	r6, r3
 801f3e4:	e77e      	b.n	801f2e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>
 801f3e6:	ab05      	add	r3, sp, #20
 801f3e8:	e77c      	b.n	801f2e4 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh+0xd2>

0801f3ea <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801f3ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f3ee:	b095      	sub	sp, #84	@ 0x54
 801f3f0:	9212      	str	r2, [sp, #72]	@ 0x48
 801f3f2:	9309      	str	r3, [sp, #36]	@ 0x24
 801f3f4:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 801f3f6:	f89d 309c 	ldrb.w	r3, [sp, #156]	@ 0x9c
 801f3fa:	930f      	str	r3, [sp, #60]	@ 0x3c
 801f3fc:	910e      	str	r1, [sp, #56]	@ 0x38
 801f3fe:	e9dd 1324 	ldrd	r1, r3, [sp, #144]	@ 0x90
 801f402:	9013      	str	r0, [sp, #76]	@ 0x4c
 801f404:	6850      	ldr	r0, [r2, #4]
 801f406:	6812      	ldr	r2, [r2, #0]
 801f408:	fb00 1303 	mla	r3, r0, r3, r1
 801f40c:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f410:	930a      	str	r3, [sp, #40]	@ 0x28
 801f412:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f414:	681b      	ldr	r3, [r3, #0]
 801f416:	930d      	str	r3, [sp, #52]	@ 0x34
 801f418:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f41a:	685c      	ldr	r4, [r3, #4]
 801f41c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 801f41e:	43db      	mvns	r3, r3
 801f420:	b2db      	uxtb	r3, r3
 801f422:	3404      	adds	r4, #4
 801f424:	930b      	str	r3, [sp, #44]	@ 0x2c
 801f426:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f428:	2b00      	cmp	r3, #0
 801f42a:	dc03      	bgt.n	801f434 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 801f42c:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 801f42e:	2b00      	cmp	r3, #0
 801f430:	f340 8255 	ble.w	801f8de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f434:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 801f436:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801f43a:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801f43e:	1e48      	subs	r0, r1, #1
 801f440:	1e55      	subs	r5, r2, #1
 801f442:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f444:	2b00      	cmp	r3, #0
 801f446:	f340 80f9 	ble.w	801f63c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x252>
 801f44a:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 801f44c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f44e:	1436      	asrs	r6, r6, #16
 801f450:	ea4f 4323 	mov.w	r3, r3, asr #16
 801f454:	d406      	bmi.n	801f464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f456:	4286      	cmp	r6, r0
 801f458:	da04      	bge.n	801f464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f45a:	2b00      	cmp	r3, #0
 801f45c:	db02      	blt.n	801f464 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 801f45e:	42ab      	cmp	r3, r5
 801f460:	f2c0 80ed 	blt.w	801f63e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x254>
 801f464:	3601      	adds	r6, #1
 801f466:	f100 80da 	bmi.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f46a:	42b1      	cmp	r1, r6
 801f46c:	f2c0 80d7 	blt.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f470:	3301      	adds	r3, #1
 801f472:	f100 80d4 	bmi.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f476:	429a      	cmp	r2, r3
 801f478:	f2c0 80d1 	blt.w	801f61e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 801f47c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f47e:	9311      	str	r3, [sp, #68]	@ 0x44
 801f480:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f482:	930c      	str	r3, [sp, #48]	@ 0x30
 801f484:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f486:	2b00      	cmp	r3, #0
 801f488:	f340 80fa 	ble.w	801f680 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x296>
 801f48c:	9826      	ldr	r0, [sp, #152]	@ 0x98
 801f48e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f490:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f492:	68c6      	ldr	r6, [r0, #12]
 801f494:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 801f496:	141d      	asrs	r5, r3, #16
 801f498:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f49c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f49e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f4a0:	1400      	asrs	r0, r0, #16
 801f4a2:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f4a6:	6892      	ldr	r2, [r2, #8]
 801f4a8:	f100 813e 	bmi.w	801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4ac:	1e57      	subs	r7, r2, #1
 801f4ae:	42b8      	cmp	r0, r7
 801f4b0:	f280 813a 	bge.w	801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4b4:	2d00      	cmp	r5, #0
 801f4b6:	f2c0 8137 	blt.w	801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4ba:	1e77      	subs	r7, r6, #1
 801f4bc:	42bd      	cmp	r5, r7
 801f4be:	f280 8133 	bge.w	801f728 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33e>
 801f4c2:	b212      	sxth	r2, r2
 801f4c4:	fb05 0002 	mla	r0, r5, r2, r0
 801f4c8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f4ca:	f815 a000 	ldrb.w	sl, [r5, r0]
 801f4ce:	eb0a 0a4a 	add.w	sl, sl, sl, lsl #1
 801f4d2:	182e      	adds	r6, r5, r0
 801f4d4:	eb04 050a 	add.w	r5, r4, sl
 801f4d8:	2b00      	cmp	r3, #0
 801f4da:	f000 8117 	beq.w	801f70c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x322>
 801f4de:	f896 c001 	ldrb.w	ip, [r6, #1]
 801f4e2:	eb0c 0c4c 	add.w	ip, ip, ip, lsl #1
 801f4e6:	44a4      	add	ip, r4
 801f4e8:	2900      	cmp	r1, #0
 801f4ea:	f000 8117 	beq.w	801f71c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x332>
 801f4ee:	18b0      	adds	r0, r6, r2
 801f4f0:	5cb2      	ldrb	r2, [r6, r2]
 801f4f2:	7840      	ldrb	r0, [r0, #1]
 801f4f4:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f4f8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f4fc:	4422      	add	r2, r4
 801f4fe:	4420      	add	r0, r4
 801f500:	b29b      	uxth	r3, r3
 801f502:	b289      	uxth	r1, r1
 801f504:	fb03 f901 	mul.w	r9, r3, r1
 801f508:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801f50c:	011b      	lsls	r3, r3, #4
 801f50e:	b289      	uxth	r1, r1
 801f510:	f89c 7002 	ldrb.w	r7, [ip, #2]
 801f514:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f518:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f51a:	f814 a00a 	ldrb.w	sl, [r4, sl]
 801f51e:	f8b6 e000 	ldrh.w	lr, [r6]
 801f522:	f8bd 603c 	ldrh.w	r6, [sp, #60]	@ 0x3c
 801f526:	f5c3 7880 	rsb	r8, r3, #256	@ 0x100
 801f52a:	eba3 0309 	sub.w	r3, r3, r9
 801f52e:	b29b      	uxth	r3, r3
 801f530:	eba8 0801 	sub.w	r8, r8, r1
 801f534:	fa1f f888 	uxth.w	r8, r8
 801f538:	435f      	muls	r7, r3
 801f53a:	fb08 770b 	mla	r7, r8, fp, r7
 801f53e:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f542:	9310      	str	r3, [sp, #64]	@ 0x40
 801f544:	fb01 770b 	mla	r7, r1, fp, r7
 801f548:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f54c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f54e:	fb09 770b 	mla	r7, r9, fp, r7
 801f552:	ea4f 2b2e 	mov.w	fp, lr, asr #8
 801f556:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f55a:	fb1b fb03 	smulbb	fp, fp, r3
 801f55e:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f562:	fb07 b706 	mla	r7, r7, r6, fp
 801f566:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f568:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f56c:	f89c 5001 	ldrb.w	r5, [ip, #1]
 801f570:	f89c c000 	ldrb.w	ip, [ip]
 801f574:	435d      	muls	r5, r3
 801f576:	fb08 550b 	mla	r5, r8, fp, r5
 801f57a:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f57e:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f580:	fb01 550b 	mla	r5, r1, fp, r5
 801f584:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f588:	fb09 550b 	mla	r5, r9, fp, r5
 801f58c:	ea4f 0bee 	mov.w	fp, lr, asr #3
 801f590:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f594:	fb1b fb03 	smulbb	fp, fp, r3
 801f598:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f59a:	fb03 f30c 	mul.w	r3, r3, ip
 801f59e:	f892 c000 	ldrb.w	ip, [r2]
 801f5a2:	fb08 330a 	mla	r3, r8, sl, r3
 801f5a6:	fb01 330c 	mla	r3, r1, ip, r3
 801f5aa:	f890 c000 	ldrb.w	ip, [r0]
 801f5ae:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 801f5b2:	fb09 3c0c 	mla	ip, r9, ip, r3
 801f5b6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f5b8:	fa5f fe8e 	uxtb.w	lr, lr
 801f5bc:	b2bf      	uxth	r7, r7
 801f5be:	fb1e fe03 	smulbb	lr, lr, r3
 801f5c2:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f5c6:	f3cc 2c07 	ubfx	ip, ip, #8, #8
 801f5ca:	fb05 b506 	mla	r5, r5, r6, fp
 801f5ce:	1c7b      	adds	r3, r7, #1
 801f5d0:	fb0c e606 	mla	r6, ip, r6, lr
 801f5d4:	b2ad      	uxth	r5, r5
 801f5d6:	b2b6      	uxth	r6, r6
 801f5d8:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 801f5dc:	f407 4378 	and.w	r3, r7, #63488	@ 0xf800
 801f5e0:	f105 0b01 	add.w	fp, r5, #1
 801f5e4:	1c77      	adds	r7, r6, #1
 801f5e6:	eb07 2716 	add.w	r7, r7, r6, lsr #8
 801f5ea:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f5ee:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801f5f2:	096d      	lsrs	r5, r5, #5
 801f5f4:	431f      	orrs	r7, r3
 801f5f6:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f5fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f5fc:	433d      	orrs	r5, r7
 801f5fe:	801d      	strh	r5, [r3, #0]
 801f600:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f602:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f604:	3302      	adds	r3, #2
 801f606:	930c      	str	r3, [sp, #48]	@ 0x30
 801f608:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f60a:	4413      	add	r3, r2
 801f60c:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f60e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f610:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f612:	4413      	add	r3, r2
 801f614:	9320      	str	r3, [sp, #128]	@ 0x80
 801f616:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f618:	3b01      	subs	r3, #1
 801f61a:	9311      	str	r3, [sp, #68]	@ 0x44
 801f61c:	e732      	b.n	801f484 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 801f61e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f620:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 801f622:	4433      	add	r3, r6
 801f624:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f626:	9e22      	ldr	r6, [sp, #136]	@ 0x88
 801f628:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f62a:	4433      	add	r3, r6
 801f62c:	9320      	str	r3, [sp, #128]	@ 0x80
 801f62e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f630:	3b01      	subs	r3, #1
 801f632:	9309      	str	r3, [sp, #36]	@ 0x24
 801f634:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f636:	3302      	adds	r3, #2
 801f638:	930a      	str	r3, [sp, #40]	@ 0x28
 801f63a:	e702      	b.n	801f442 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 801f63c:	d027      	beq.n	801f68e <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a4>
 801f63e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f640:	9821      	ldr	r0, [sp, #132]	@ 0x84
 801f642:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f644:	3b01      	subs	r3, #1
 801f646:	fb00 5003 	mla	r0, r0, r3, r5
 801f64a:	1400      	asrs	r0, r0, #16
 801f64c:	f53f af16 	bmi.w	801f47c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f650:	3901      	subs	r1, #1
 801f652:	4288      	cmp	r0, r1
 801f654:	f6bf af12 	bge.w	801f47c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f658:	9922      	ldr	r1, [sp, #136]	@ 0x88
 801f65a:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f65c:	fb01 0303 	mla	r3, r1, r3, r0
 801f660:	141b      	asrs	r3, r3, #16
 801f662:	f53f af0b 	bmi.w	801f47c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f666:	3a01      	subs	r2, #1
 801f668:	4293      	cmp	r3, r2
 801f66a:	f6bf af07 	bge.w	801f47c <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 801f66e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f670:	9311      	str	r3, [sp, #68]	@ 0x44
 801f672:	f8bd a03c 	ldrh.w	sl, [sp, #60]	@ 0x3c
 801f676:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801f678:	930c      	str	r3, [sp, #48]	@ 0x30
 801f67a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f67c:	2b00      	cmp	r3, #0
 801f67e:	dc70      	bgt.n	801f762 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 801f680:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801f682:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 801f684:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801f688:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801f68c:	930a      	str	r3, [sp, #40]	@ 0x28
 801f68e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f690:	2b00      	cmp	r3, #0
 801f692:	f340 8124 	ble.w	801f8de <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f4>
 801f696:	ee30 0a04 	vadd.f32	s0, s0, s8
 801f69a:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801f69e:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801f6a2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f6a4:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801f6a8:	ee31 1a05 	vadd.f32	s2, s2, s10
 801f6ac:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801f6b0:	eef0 6a62 	vmov.f32	s13, s5
 801f6b4:	ee61 7a27 	vmul.f32	s15, s2, s15
 801f6b8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6bc:	ee77 2a62 	vsub.f32	s5, s14, s5
 801f6c0:	edcd 6a1f 	vstr	s13, [sp, #124]	@ 0x7c
 801f6c4:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801f6c8:	eef0 6a43 	vmov.f32	s13, s6
 801f6cc:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801f6d0:	ee12 2a90 	vmov	r2, s5
 801f6d4:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801f6d8:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6dc:	ee13 2a10 	vmov	r2, s6
 801f6e0:	9321      	str	r3, [sp, #132]	@ 0x84
 801f6e2:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f6e4:	fb92 f3f3 	sdiv	r3, r2, r3
 801f6e8:	9322      	str	r3, [sp, #136]	@ 0x88
 801f6ea:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 801f6ec:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 801f6ee:	3b01      	subs	r3, #1
 801f6f0:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801f6f4:	930e      	str	r3, [sp, #56]	@ 0x38
 801f6f6:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 801f6f8:	edcd 6a20 	vstr	s13, [sp, #128]	@ 0x80
 801f6fc:	bf08      	it	eq
 801f6fe:	4613      	moveq	r3, r2
 801f700:	9309      	str	r3, [sp, #36]	@ 0x24
 801f702:	eeb0 3a67 	vmov.f32	s6, s15
 801f706:	eef0 2a47 	vmov.f32	s5, s14
 801f70a:	e68c      	b.n	801f426 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 801f70c:	b149      	cbz	r1, 801f722 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x338>
 801f70e:	5cb2      	ldrb	r2, [r6, r2]
 801f710:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f714:	4422      	add	r2, r4
 801f716:	4628      	mov	r0, r5
 801f718:	46ac      	mov	ip, r5
 801f71a:	e6f1      	b.n	801f500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f71c:	4628      	mov	r0, r5
 801f71e:	462a      	mov	r2, r5
 801f720:	e6ee      	b.n	801f500 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x116>
 801f722:	4628      	mov	r0, r5
 801f724:	462a      	mov	r2, r5
 801f726:	e7f7      	b.n	801f718 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32e>
 801f728:	1c47      	adds	r7, r0, #1
 801f72a:	f53f af69 	bmi.w	801f600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f72e:	42ba      	cmp	r2, r7
 801f730:	f6ff af66 	blt.w	801f600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f734:	1c6f      	adds	r7, r5, #1
 801f736:	f53f af63 	bmi.w	801f600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f73a:	42be      	cmp	r6, r7
 801f73c:	f6ff af60 	blt.w	801f600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f740:	9f0f      	ldr	r7, [sp, #60]	@ 0x3c
 801f742:	9002      	str	r0, [sp, #8]
 801f744:	b236      	sxth	r6, r6
 801f746:	b212      	sxth	r2, r2
 801f748:	e9cd 1705 	strd	r1, r7, [sp, #20]
 801f74c:	e9cd 5303 	strd	r5, r3, [sp, #12]
 801f750:	9200      	str	r2, [sp, #0]
 801f752:	9601      	str	r6, [sp, #4]
 801f754:	4623      	mov	r3, r4
 801f756:	e9dd 120c 	ldrd	r1, r2, [sp, #48]	@ 0x30
 801f75a:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 801f75c:	f7ff fd59 	bl	801f212 <_ZNK8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhS4_ssiihhh>
 801f760:	e74e      	b.n	801f600 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x216>
 801f762:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801f764:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801f766:	9d1f      	ldr	r5, [sp, #124]	@ 0x7c
 801f768:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f76a:	f3c2 3103 	ubfx	r1, r2, #12, #4
 801f76e:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 801f770:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801f774:	142d      	asrs	r5, r5, #16
 801f776:	1400      	asrs	r0, r0, #16
 801f778:	fb02 5000 	mla	r0, r2, r0, r5
 801f77c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 801f77e:	f815 9000 	ldrb.w	r9, [r5, r0]
 801f782:	f3c3 3303 	ubfx	r3, r3, #12, #4
 801f786:	eb09 0949 	add.w	r9, r9, r9, lsl #1
 801f78a:	182e      	adds	r6, r5, r0
 801f78c:	eb04 0509 	add.w	r5, r4, r9
 801f790:	2b00      	cmp	r3, #0
 801f792:	f000 8096 	beq.w	801f8c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 801f796:	7877      	ldrb	r7, [r6, #1]
 801f798:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f79c:	4427      	add	r7, r4
 801f79e:	2900      	cmp	r1, #0
 801f7a0:	f000 8097 	beq.w	801f8d2 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e8>
 801f7a4:	18b0      	adds	r0, r6, r2
 801f7a6:	5cb2      	ldrb	r2, [r6, r2]
 801f7a8:	7840      	ldrb	r0, [r0, #1]
 801f7aa:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f7ae:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801f7b2:	4422      	add	r2, r4
 801f7b4:	4420      	add	r0, r4
 801f7b6:	b29b      	uxth	r3, r3
 801f7b8:	b289      	uxth	r1, r1
 801f7ba:	fb03 f801 	mul.w	r8, r3, r1
 801f7be:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 801f7c0:	f895 b002 	ldrb.w	fp, [r5, #2]
 801f7c4:	f8b6 c000 	ldrh.w	ip, [r6]
 801f7c8:	78be      	ldrb	r6, [r7, #2]
 801f7ca:	f814 9009 	ldrb.w	r9, [r4, r9]
 801f7ce:	011b      	lsls	r3, r3, #4
 801f7d0:	ebc8 1101 	rsb	r1, r8, r1, lsl #4
 801f7d4:	b289      	uxth	r1, r1
 801f7d6:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801f7da:	eba3 0308 	sub.w	r3, r3, r8
 801f7de:	b29b      	uxth	r3, r3
 801f7e0:	ebae 0e01 	sub.w	lr, lr, r1
 801f7e4:	fa1f fe8e 	uxth.w	lr, lr
 801f7e8:	435e      	muls	r6, r3
 801f7ea:	fb0e 660b 	mla	r6, lr, fp, r6
 801f7ee:	f892 b002 	ldrb.w	fp, [r2, #2]
 801f7f2:	9310      	str	r3, [sp, #64]	@ 0x40
 801f7f4:	fb01 660b 	mla	r6, r1, fp, r6
 801f7f8:	f890 b002 	ldrb.w	fp, [r0, #2]
 801f7fc:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f7fe:	fb08 660b 	mla	r6, r8, fp, r6
 801f802:	ea4f 2b2c 	mov.w	fp, ip, asr #8
 801f806:	f00b 0bf8 	and.w	fp, fp, #248	@ 0xf8
 801f80a:	fb1b fb03 	smulbb	fp, fp, r3
 801f80e:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801f812:	fb06 b60a 	mla	r6, r6, sl, fp
 801f816:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f818:	f895 b001 	ldrb.w	fp, [r5, #1]
 801f81c:	787d      	ldrb	r5, [r7, #1]
 801f81e:	783f      	ldrb	r7, [r7, #0]
 801f820:	435d      	muls	r5, r3
 801f822:	fb0e 550b 	mla	r5, lr, fp, r5
 801f826:	f892 b001 	ldrb.w	fp, [r2, #1]
 801f82a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f82c:	fb01 550b 	mla	r5, r1, fp, r5
 801f830:	f890 b001 	ldrb.w	fp, [r0, #1]
 801f834:	fb08 550b 	mla	r5, r8, fp, r5
 801f838:	ea4f 0bec 	mov.w	fp, ip, asr #3
 801f83c:	f00b 0bfc 	and.w	fp, fp, #252	@ 0xfc
 801f840:	fb1b fb03 	smulbb	fp, fp, r3
 801f844:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 801f846:	437b      	muls	r3, r7
 801f848:	7817      	ldrb	r7, [r2, #0]
 801f84a:	fb0e 3309 	mla	r3, lr, r9, r3
 801f84e:	fb01 3307 	mla	r3, r1, r7, r3
 801f852:	7807      	ldrb	r7, [r0, #0]
 801f854:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 801f858:	fb08 3707 	mla	r7, r8, r7, r3
 801f85c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801f85e:	fa5f fc8c 	uxtb.w	ip, ip
 801f862:	fb1c fc03 	smulbb	ip, ip, r3
 801f866:	f3c5 2507 	ubfx	r5, r5, #8, #8
 801f86a:	f3c7 2707 	ubfx	r7, r7, #8, #8
 801f86e:	fb05 b50a 	mla	r5, r5, sl, fp
 801f872:	fb07 c70a 	mla	r7, r7, sl, ip
 801f876:	b2b6      	uxth	r6, r6
 801f878:	b2ad      	uxth	r5, r5
 801f87a:	b2bf      	uxth	r7, r7
 801f87c:	1c73      	adds	r3, r6, #1
 801f87e:	1c7a      	adds	r2, r7, #1
 801f880:	f105 0b01 	add.w	fp, r5, #1
 801f884:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 801f888:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 801f88c:	eb0b 2515 	add.w	r5, fp, r5, lsr #8
 801f890:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 801f894:	f406 4678 	and.w	r6, r6, #63488	@ 0xf800
 801f898:	096d      	lsrs	r5, r5, #5
 801f89a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801f89c:	4316      	orrs	r6, r2
 801f89e:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 801f8a2:	432e      	orrs	r6, r5
 801f8a4:	f823 6b02 	strh.w	r6, [r3], #2
 801f8a8:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 801f8aa:	930c      	str	r3, [sp, #48]	@ 0x30
 801f8ac:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 801f8ae:	4413      	add	r3, r2
 801f8b0:	931f      	str	r3, [sp, #124]	@ 0x7c
 801f8b2:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 801f8b4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801f8b6:	4413      	add	r3, r2
 801f8b8:	9320      	str	r3, [sp, #128]	@ 0x80
 801f8ba:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 801f8bc:	3b01      	subs	r3, #1
 801f8be:	9311      	str	r3, [sp, #68]	@ 0x44
 801f8c0:	e6db      	b.n	801f67a <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x290>
 801f8c2:	b149      	cbz	r1, 801f8d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 801f8c4:	5cb2      	ldrb	r2, [r6, r2]
 801f8c6:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f8ca:	4422      	add	r2, r4
 801f8cc:	4628      	mov	r0, r5
 801f8ce:	462f      	mov	r7, r5
 801f8d0:	e771      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8d2:	4628      	mov	r0, r5
 801f8d4:	462a      	mov	r2, r5
 801f8d6:	e76e      	b.n	801f7b6 <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3cc>
 801f8d8:	4628      	mov	r0, r5
 801f8da:	462a      	mov	r2, r5
 801f8dc:	e7f7      	b.n	801f8ce <_ZN8touchgfx8LCD16bpp55TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 801f8de:	b015      	add	sp, #84	@ 0x54
 801f8e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801f8e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>:
 801f8e4:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f8e8:	880f      	ldrh	r7, [r1, #0]
 801f8ea:	f9bd e030 	ldrsh.w	lr, [sp, #48]	@ 0x30
 801f8ee:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 801f8f2:	f89d 0040 	ldrb.w	r0, [sp, #64]	@ 0x40
 801f8f6:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 801f8fa:	023c      	lsls	r4, r7, #8
 801f8fc:	e9dd c50e 	ldrd	ip, r5, [sp, #56]	@ 0x38
 801f900:	f404 0b78 	and.w	fp, r4, #16252928	@ 0xf80000
 801f904:	017c      	lsls	r4, r7, #5
 801f906:	f404 447c 	and.w	r4, r4, #64512	@ 0xfc00
 801f90a:	00ff      	lsls	r7, r7, #3
 801f90c:	ea4b 0404 	orr.w	r4, fp, r4
 801f910:	b2ff      	uxtb	r7, r7
 801f912:	fb05 ca0e 	mla	sl, r5, lr, ip
 801f916:	4327      	orrs	r7, r4
 801f918:	2d00      	cmp	r5, #0
 801f91a:	eb02 080a 	add.w	r8, r2, sl
 801f91e:	9701      	str	r7, [sp, #4]
 801f920:	db7e      	blt.n	801fa20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f922:	45a9      	cmp	r9, r5
 801f924:	dd7c      	ble.n	801fa20 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x13c>
 801f926:	f1bc 0f00 	cmp.w	ip, #0
 801f92a:	db77      	blt.n	801fa1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f92c:	45e6      	cmp	lr, ip
 801f92e:	dd75      	ble.n	801fa1c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x138>
 801f930:	f812 700a 	ldrb.w	r7, [r2, sl]
 801f934:	eb07 0747 	add.w	r7, r7, r7, lsl #1
 801f938:	441f      	add	r7, r3
 801f93a:	f11c 0201 	adds.w	r2, ip, #1
 801f93e:	d472      	bmi.n	801fa26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f940:	4596      	cmp	lr, r2
 801f942:	dd70      	ble.n	801fa26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f944:	2800      	cmp	r0, #0
 801f946:	d06e      	beq.n	801fa26 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x142>
 801f948:	f898 4001 	ldrb.w	r4, [r8, #1]
 801f94c:	eb04 0444 	add.w	r4, r4, r4, lsl #1
 801f950:	441c      	add	r4, r3
 801f952:	3501      	adds	r5, #1
 801f954:	d46b      	bmi.n	801fa2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f956:	45a9      	cmp	r9, r5
 801f958:	dd69      	ble.n	801fa2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f95a:	2e00      	cmp	r6, #0
 801f95c:	d067      	beq.n	801fa2e <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x14a>
 801f95e:	f1bc 0f00 	cmp.w	ip, #0
 801f962:	db62      	blt.n	801fa2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f964:	45e6      	cmp	lr, ip
 801f966:	dd60      	ble.n	801fa2a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x146>
 801f968:	f818 500e 	ldrb.w	r5, [r8, lr]
 801f96c:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801f970:	441d      	add	r5, r3
 801f972:	f11c 0201 	adds.w	r2, ip, #1
 801f976:	d45d      	bmi.n	801fa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f978:	4596      	cmp	lr, r2
 801f97a:	dd5b      	ble.n	801fa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f97c:	2800      	cmp	r0, #0
 801f97e:	d059      	beq.n	801fa34 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x150>
 801f980:	44c6      	add	lr, r8
 801f982:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801f986:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801f98a:	4413      	add	r3, r2
 801f98c:	b280      	uxth	r0, r0
 801f98e:	b2b2      	uxth	r2, r6
 801f990:	fb00 f602 	mul.w	r6, r0, r2
 801f994:	0100      	lsls	r0, r0, #4
 801f996:	ebc6 1202 	rsb	r2, r6, r2, lsl #4
 801f99a:	f5c0 7880 	rsb	r8, r0, #256	@ 0x100
 801f99e:	1b80      	subs	r0, r0, r6
 801f9a0:	fa1f fc82 	uxth.w	ip, r2
 801f9a4:	b282      	uxth	r2, r0
 801f9a6:	78a0      	ldrb	r0, [r4, #2]
 801f9a8:	f897 e002 	ldrb.w	lr, [r7, #2]
 801f9ac:	f897 9000 	ldrb.w	r9, [r7]
 801f9b0:	787f      	ldrb	r7, [r7, #1]
 801f9b2:	eba8 080c 	sub.w	r8, r8, ip
 801f9b6:	fa1f f888 	uxth.w	r8, r8
 801f9ba:	4350      	muls	r0, r2
 801f9bc:	fb08 0e0e 	mla	lr, r8, lr, r0
 801f9c0:	78a8      	ldrb	r0, [r5, #2]
 801f9c2:	fb0c e000 	mla	r0, ip, r0, lr
 801f9c6:	f893 e002 	ldrb.w	lr, [r3, #2]
 801f9ca:	fb06 0e0e 	mla	lr, r6, lr, r0
 801f9ce:	f40e 4078 	and.w	r0, lr, #63488	@ 0xf800
 801f9d2:	f894 e000 	ldrb.w	lr, [r4]
 801f9d6:	fb02 fe0e 	mul.w	lr, r2, lr
 801f9da:	fb08 e909 	mla	r9, r8, r9, lr
 801f9de:	f895 e000 	ldrb.w	lr, [r5]
 801f9e2:	fb0c 990e 	mla	r9, ip, lr, r9
 801f9e6:	f893 e000 	ldrb.w	lr, [r3]
 801f9ea:	785b      	ldrb	r3, [r3, #1]
 801f9ec:	fb06 9e0e 	mla	lr, r6, lr, r9
 801f9f0:	f3ce 2ec4 	ubfx	lr, lr, #11, #5
 801f9f4:	ea4e 0e00 	orr.w	lr, lr, r0
 801f9f8:	7860      	ldrb	r0, [r4, #1]
 801f9fa:	4350      	muls	r0, r2
 801f9fc:	786a      	ldrb	r2, [r5, #1]
 801f9fe:	fb08 0007 	mla	r0, r8, r7, r0
 801fa02:	fb0c 0202 	mla	r2, ip, r2, r0
 801fa06:	fb06 2303 	mla	r3, r6, r3, r2
 801fa0a:	095b      	lsrs	r3, r3, #5
 801fa0c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 801fa10:	ea4e 0303 	orr.w	r3, lr, r3
 801fa14:	800b      	strh	r3, [r1, #0]
 801fa16:	b003      	add	sp, #12
 801fa18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fa1c:	af01      	add	r7, sp, #4
 801fa1e:	e78c      	b.n	801f93a <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x56>
 801fa20:	ac01      	add	r4, sp, #4
 801fa22:	4627      	mov	r7, r4
 801fa24:	e795      	b.n	801f952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa26:	ac01      	add	r4, sp, #4
 801fa28:	e793      	b.n	801f952 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x6e>
 801fa2a:	ad01      	add	r5, sp, #4
 801fa2c:	e7a1      	b.n	801f972 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0x8e>
 801fa2e:	ab01      	add	r3, sp, #4
 801fa30:	461d      	mov	r5, r3
 801fa32:	e7ab      	b.n	801f98c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>
 801fa34:	ab01      	add	r3, sp, #4
 801fa36:	e7a9      	b.n	801f98c <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh+0xa8>

0801fa38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 801fa38:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa3c:	b08f      	sub	sp, #60	@ 0x3c
 801fa3e:	e9dd b519 	ldrd	fp, r5, [sp, #100]	@ 0x64
 801fa42:	920c      	str	r2, [sp, #48]	@ 0x30
 801fa44:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 801fa46:	910a      	str	r1, [sp, #40]	@ 0x28
 801fa48:	9306      	str	r3, [sp, #24]
 801fa4a:	e9dd 131e 	ldrd	r1, r3, [sp, #120]	@ 0x78
 801fa4e:	900d      	str	r0, [sp, #52]	@ 0x34
 801fa50:	6850      	ldr	r0, [r2, #4]
 801fa52:	6812      	ldr	r2, [r2, #0]
 801fa54:	fb00 1303 	mla	r3, r0, r3, r1
 801fa58:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fa5c:	9307      	str	r3, [sp, #28]
 801fa5e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa60:	681b      	ldr	r3, [r3, #0]
 801fa62:	9308      	str	r3, [sp, #32]
 801fa64:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa66:	685c      	ldr	r4, [r3, #4]
 801fa68:	3404      	adds	r4, #4
 801fa6a:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fa6c:	2b00      	cmp	r3, #0
 801fa6e:	dc03      	bgt.n	801fa78 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x40>
 801fa70:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 801fa72:	2b00      	cmp	r3, #0
 801fa74:	f340 81d6 	ble.w	801fe24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fa78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 801fa7a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 801fa7e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 801fa82:	1e48      	subs	r0, r1, #1
 801fa84:	1e56      	subs	r6, r2, #1
 801fa86:	9b06      	ldr	r3, [sp, #24]
 801fa88:	2b00      	cmp	r3, #0
 801fa8a:	f340 80b7 	ble.w	801fbfc <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c4>
 801fa8e:	ea5f 472b 	movs.w	r7, fp, asr #16
 801fa92:	ea4f 4325 	mov.w	r3, r5, asr #16
 801fa96:	d406      	bmi.n	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa98:	4287      	cmp	r7, r0
 801fa9a:	da04      	bge.n	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801fa9c:	2b00      	cmp	r3, #0
 801fa9e:	db02      	blt.n	801faa6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 801faa0:	42b3      	cmp	r3, r6
 801faa2:	f2c0 80ac 	blt.w	801fbfe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 801faa6:	3701      	adds	r7, #1
 801faa8:	f100 809d 	bmi.w	801fbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801faac:	42b9      	cmp	r1, r7
 801faae:	f2c0 809a 	blt.w	801fbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fab2:	3301      	adds	r3, #1
 801fab4:	f100 8097 	bmi.w	801fbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fab8:	429a      	cmp	r2, r3
 801faba:	f2c0 8094 	blt.w	801fbe6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ae>
 801fabe:	9b06      	ldr	r3, [sp, #24]
 801fac0:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fac2:	9b07      	ldr	r3, [sp, #28]
 801fac4:	9309      	str	r3, [sp, #36]	@ 0x24
 801fac6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fac8:	2b00      	cmp	r3, #0
 801faca:	f340 80b5 	ble.w	801fc38 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 801face:	9820      	ldr	r0, [sp, #128]	@ 0x80
 801fad0:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fad2:	68c7      	ldr	r7, [r0, #12]
 801fad4:	6892      	ldr	r2, [r2, #8]
 801fad6:	ea5f 402b 	movs.w	r0, fp, asr #16
 801fada:	ea4f 4625 	mov.w	r6, r5, asr #16
 801fade:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fae2:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fae6:	f100 80fb 	bmi.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801faea:	f102 3cff 	add.w	ip, r2, #4294967295
 801faee:	4560      	cmp	r0, ip
 801faf0:	f280 80f6 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801faf4:	2e00      	cmp	r6, #0
 801faf6:	f2c0 80f3 	blt.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fafa:	f107 3cff 	add.w	ip, r7, #4294967295
 801fafe:	4566      	cmp	r6, ip
 801fb00:	f280 80ee 	bge.w	801fce0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a8>
 801fb04:	b212      	sxth	r2, r2
 801fb06:	fb06 0002 	mla	r0, r6, r2, r0
 801fb0a:	9e08      	ldr	r6, [sp, #32]
 801fb0c:	1837      	adds	r7, r6, r0
 801fb0e:	5c30      	ldrb	r0, [r6, r0]
 801fb10:	eb00 0840 	add.w	r8, r0, r0, lsl #1
 801fb14:	eb04 0c08 	add.w	ip, r4, r8
 801fb18:	2b00      	cmp	r3, #0
 801fb1a:	f000 80d3 	beq.w	801fcc4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 801fb1e:	787e      	ldrb	r6, [r7, #1]
 801fb20:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fb24:	4426      	add	r6, r4
 801fb26:	2900      	cmp	r1, #0
 801fb28:	f000 80d4 	beq.w	801fcd4 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x29c>
 801fb2c:	18b8      	adds	r0, r7, r2
 801fb2e:	5cba      	ldrb	r2, [r7, r2]
 801fb30:	7840      	ldrb	r0, [r0, #1]
 801fb32:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fb36:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fb3a:	4422      	add	r2, r4
 801fb3c:	4420      	add	r0, r4
 801fb3e:	b29b      	uxth	r3, r3
 801fb40:	b289      	uxth	r1, r1
 801fb42:	fb03 f901 	mul.w	r9, r3, r1
 801fb46:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fb4a:	011b      	lsls	r3, r3, #4
 801fb4c:	b289      	uxth	r1, r1
 801fb4e:	78b7      	ldrb	r7, [r6, #2]
 801fb50:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fb54:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fb58:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801fb5c:	eba3 0309 	sub.w	r3, r3, r9
 801fb60:	b29b      	uxth	r3, r3
 801fb62:	ebae 0e01 	sub.w	lr, lr, r1
 801fb66:	fa1f fe8e 	uxth.w	lr, lr
 801fb6a:	435f      	muls	r7, r3
 801fb6c:	fb0e 770a 	mla	r7, lr, sl, r7
 801fb70:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fb74:	fb01 770a 	mla	r7, r1, sl, r7
 801fb78:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fb7c:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fb80:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fb84:	f896 8000 	ldrb.w	r8, [r6]
 801fb88:	7876      	ldrb	r6, [r6, #1]
 801fb8a:	fb03 f808 	mul.w	r8, r3, r8
 801fb8e:	fb0e 8807 	mla	r8, lr, r7, r8
 801fb92:	7817      	ldrb	r7, [r2, #0]
 801fb94:	fb01 8807 	mla	r8, r1, r7, r8
 801fb98:	7807      	ldrb	r7, [r0, #0]
 801fb9a:	fb09 8707 	mla	r7, r9, r7, r8
 801fb9e:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801fba2:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fba6:	ea47 070a 	orr.w	r7, r7, sl
 801fbaa:	4373      	muls	r3, r6
 801fbac:	f892 a001 	ldrb.w	sl, [r2, #1]
 801fbb0:	fb0e 330c 	mla	r3, lr, ip, r3
 801fbb4:	fb01 310a 	mla	r1, r1, sl, r3
 801fbb8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fbbc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbbe:	fb09 1a0a 	mla	sl, r9, sl, r1
 801fbc2:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fbc6:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fbca:	ea47 070a 	orr.w	r7, r7, sl
 801fbce:	801f      	strh	r7, [r3, #0]
 801fbd0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fbd2:	3302      	adds	r3, #2
 801fbd4:	9309      	str	r3, [sp, #36]	@ 0x24
 801fbd6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fbd8:	449b      	add	fp, r3
 801fbda:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fbdc:	441d      	add	r5, r3
 801fbde:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fbe0:	3b01      	subs	r3, #1
 801fbe2:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fbe4:	e76f      	b.n	801fac6 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 801fbe6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fbe8:	449b      	add	fp, r3
 801fbea:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fbec:	441d      	add	r5, r3
 801fbee:	9b06      	ldr	r3, [sp, #24]
 801fbf0:	3b01      	subs	r3, #1
 801fbf2:	9306      	str	r3, [sp, #24]
 801fbf4:	9b07      	ldr	r3, [sp, #28]
 801fbf6:	3302      	adds	r3, #2
 801fbf8:	9307      	str	r3, [sp, #28]
 801fbfa:	e744      	b.n	801fa86 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e>
 801fbfc:	d023      	beq.n	801fc46 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 801fbfe:	9b06      	ldr	r3, [sp, #24]
 801fc00:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 801fc02:	3b01      	subs	r3, #1
 801fc04:	fb00 b003 	mla	r0, r0, r3, fp
 801fc08:	1400      	asrs	r0, r0, #16
 801fc0a:	f53f af58 	bmi.w	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc0e:	3901      	subs	r1, #1
 801fc10:	4288      	cmp	r0, r1
 801fc12:	f6bf af54 	bge.w	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc16:	991c      	ldr	r1, [sp, #112]	@ 0x70
 801fc18:	fb01 5303 	mla	r3, r1, r3, r5
 801fc1c:	141b      	asrs	r3, r3, #16
 801fc1e:	f53f af4e 	bmi.w	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc22:	3a01      	subs	r2, #1
 801fc24:	4293      	cmp	r3, r2
 801fc26:	f6bf af4a 	bge.w	801fabe <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x86>
 801fc2a:	9b06      	ldr	r3, [sp, #24]
 801fc2c:	9309      	str	r3, [sp, #36]	@ 0x24
 801fc2e:	9b07      	ldr	r3, [sp, #28]
 801fc30:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fc32:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fc34:	2b00      	cmp	r3, #0
 801fc36:	dc70      	bgt.n	801fd1a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e2>
 801fc38:	9b06      	ldr	r3, [sp, #24]
 801fc3a:	9a07      	ldr	r2, [sp, #28]
 801fc3c:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 801fc40:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 801fc44:	9307      	str	r3, [sp, #28]
 801fc46:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fc48:	2b00      	cmp	r3, #0
 801fc4a:	f340 80eb 	ble.w	801fe24 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ec>
 801fc4e:	ee30 0a04 	vadd.f32	s0, s0, s8
 801fc52:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 801fc56:	eec7 7a00 	vdiv.f32	s15, s14, s0
 801fc5a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fc5c:	ee70 0aa4 	vadd.f32	s1, s1, s9
 801fc60:	ee31 1a05 	vadd.f32	s2, s2, s10
 801fc64:	ee20 7aa7 	vmul.f32	s14, s1, s15
 801fc68:	eef0 6a62 	vmov.f32	s13, s5
 801fc6c:	ee61 7a27 	vmul.f32	s15, s2, s15
 801fc70:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fc74:	ee77 2a62 	vsub.f32	s5, s14, s5
 801fc78:	ee16 ba90 	vmov	fp, s13
 801fc7c:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 801fc80:	eef0 6a43 	vmov.f32	s13, s6
 801fc84:	ee37 3ac3 	vsub.f32	s6, s15, s6
 801fc88:	ee12 2a90 	vmov	r2, s5
 801fc8c:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 801fc90:	fb92 f3f3 	sdiv	r3, r2, r3
 801fc94:	ee13 2a10 	vmov	r2, s6
 801fc98:	931b      	str	r3, [sp, #108]	@ 0x6c
 801fc9a:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fc9c:	fb92 f3f3 	sdiv	r3, r2, r3
 801fca0:	931c      	str	r3, [sp, #112]	@ 0x70
 801fca2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 801fca4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 801fca6:	3b01      	subs	r3, #1
 801fca8:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 801fcac:	930a      	str	r3, [sp, #40]	@ 0x28
 801fcae:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 801fcb0:	bf08      	it	eq
 801fcb2:	4613      	moveq	r3, r2
 801fcb4:	ee16 5a90 	vmov	r5, s13
 801fcb8:	9306      	str	r3, [sp, #24]
 801fcba:	eeb0 3a67 	vmov.f32	s6, s15
 801fcbe:	eef0 2a47 	vmov.f32	s5, s14
 801fcc2:	e6d2      	b.n	801fa6a <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32>
 801fcc4:	b149      	cbz	r1, 801fcda <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a2>
 801fcc6:	5cba      	ldrb	r2, [r7, r2]
 801fcc8:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fccc:	4422      	add	r2, r4
 801fcce:	4660      	mov	r0, ip
 801fcd0:	4666      	mov	r6, ip
 801fcd2:	e734      	b.n	801fb3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcd4:	4660      	mov	r0, ip
 801fcd6:	4662      	mov	r2, ip
 801fcd8:	e731      	b.n	801fb3e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x106>
 801fcda:	4660      	mov	r0, ip
 801fcdc:	4662      	mov	r2, ip
 801fcde:	e7f7      	b.n	801fcd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x298>
 801fce0:	f110 0c01 	adds.w	ip, r0, #1
 801fce4:	f53f af74 	bmi.w	801fbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fce8:	4562      	cmp	r2, ip
 801fcea:	f6ff af71 	blt.w	801fbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcee:	f116 0c01 	adds.w	ip, r6, #1
 801fcf2:	f53f af6d 	bmi.w	801fbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcf6:	4567      	cmp	r7, ip
 801fcf8:	f6ff af6a 	blt.w	801fbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fcfc:	b23f      	sxth	r7, r7
 801fcfe:	b212      	sxth	r2, r2
 801fd00:	e9cd 3104 	strd	r3, r1, [sp, #16]
 801fd04:	e9cd 0602 	strd	r0, r6, [sp, #8]
 801fd08:	9200      	str	r2, [sp, #0]
 801fd0a:	9701      	str	r7, [sp, #4]
 801fd0c:	4623      	mov	r3, r4
 801fd0e:	e9dd 2108 	ldrd	r2, r1, [sp, #32]
 801fd12:	980d      	ldr	r0, [sp, #52]	@ 0x34
 801fd14:	f7ff fde6 	bl	801f8e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhS4_ssiihh>
 801fd18:	e75a      	b.n	801fbd0 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 801fd1a:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 801fd1c:	f9b2 2008 	ldrsh.w	r2, [r2, #8]
 801fd20:	ea4f 462b 	mov.w	r6, fp, asr #16
 801fd24:	1428      	asrs	r0, r5, #16
 801fd26:	fb02 6000 	mla	r0, r2, r0, r6
 801fd2a:	9e08      	ldr	r6, [sp, #32]
 801fd2c:	f816 8000 	ldrb.w	r8, [r6, r0]
 801fd30:	f3cb 3303 	ubfx	r3, fp, #12, #4
 801fd34:	eb08 0848 	add.w	r8, r8, r8, lsl #1
 801fd38:	f3c5 3103 	ubfx	r1, r5, #12, #4
 801fd3c:	1837      	adds	r7, r6, r0
 801fd3e:	eb04 0c08 	add.w	ip, r4, r8
 801fd42:	2b00      	cmp	r3, #0
 801fd44:	d060      	beq.n	801fe08 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d0>
 801fd46:	787e      	ldrb	r6, [r7, #1]
 801fd48:	eb06 0646 	add.w	r6, r6, r6, lsl #1
 801fd4c:	4426      	add	r6, r4
 801fd4e:	2900      	cmp	r1, #0
 801fd50:	d062      	beq.n	801fe18 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e0>
 801fd52:	18b8      	adds	r0, r7, r2
 801fd54:	5cba      	ldrb	r2, [r7, r2]
 801fd56:	7840      	ldrb	r0, [r0, #1]
 801fd58:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fd5c:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 801fd60:	4422      	add	r2, r4
 801fd62:	4420      	add	r0, r4
 801fd64:	b29b      	uxth	r3, r3
 801fd66:	b289      	uxth	r1, r1
 801fd68:	fb03 f901 	mul.w	r9, r3, r1
 801fd6c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 801fd70:	011b      	lsls	r3, r3, #4
 801fd72:	b289      	uxth	r1, r1
 801fd74:	78b7      	ldrb	r7, [r6, #2]
 801fd76:	f89c a002 	ldrb.w	sl, [ip, #2]
 801fd7a:	f89c c001 	ldrb.w	ip, [ip, #1]
 801fd7e:	f5c3 7e80 	rsb	lr, r3, #256	@ 0x100
 801fd82:	eba3 0309 	sub.w	r3, r3, r9
 801fd86:	b29b      	uxth	r3, r3
 801fd88:	ebae 0e01 	sub.w	lr, lr, r1
 801fd8c:	fa1f fe8e 	uxth.w	lr, lr
 801fd90:	435f      	muls	r7, r3
 801fd92:	fb0e 770a 	mla	r7, lr, sl, r7
 801fd96:	f892 a002 	ldrb.w	sl, [r2, #2]
 801fd9a:	fb01 770a 	mla	r7, r1, sl, r7
 801fd9e:	f890 a002 	ldrb.w	sl, [r0, #2]
 801fda2:	fb09 7a0a 	mla	sl, r9, sl, r7
 801fda6:	f814 7008 	ldrb.w	r7, [r4, r8]
 801fdaa:	f896 8000 	ldrb.w	r8, [r6]
 801fdae:	7876      	ldrb	r6, [r6, #1]
 801fdb0:	fb03 f808 	mul.w	r8, r3, r8
 801fdb4:	fb0e 8807 	mla	r8, lr, r7, r8
 801fdb8:	7817      	ldrb	r7, [r2, #0]
 801fdba:	fb01 8807 	mla	r8, r1, r7, r8
 801fdbe:	7807      	ldrb	r7, [r0, #0]
 801fdc0:	fb09 8707 	mla	r7, r9, r7, r8
 801fdc4:	f40a 4a78 	and.w	sl, sl, #63488	@ 0xf800
 801fdc8:	4373      	muls	r3, r6
 801fdca:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 801fdce:	7856      	ldrb	r6, [r2, #1]
 801fdd0:	ea47 070a 	orr.w	r7, r7, sl
 801fdd4:	fb0e 330c 	mla	r3, lr, ip, r3
 801fdd8:	f890 a001 	ldrb.w	sl, [r0, #1]
 801fddc:	fb01 3306 	mla	r3, r1, r6, r3
 801fde0:	fb09 3a0a 	mla	sl, r9, sl, r3
 801fde4:	ea4f 1a5a 	mov.w	sl, sl, lsr #5
 801fde8:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 801fdea:	f40a 6afc 	and.w	sl, sl, #2016	@ 0x7e0
 801fdee:	ea47 070a 	orr.w	r7, r7, sl
 801fdf2:	f823 7b02 	strh.w	r7, [r3], #2
 801fdf6:	930b      	str	r3, [sp, #44]	@ 0x2c
 801fdf8:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 801fdfa:	449b      	add	fp, r3
 801fdfc:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 801fdfe:	441d      	add	r5, r3
 801fe00:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 801fe02:	3b01      	subs	r3, #1
 801fe04:	9309      	str	r3, [sp, #36]	@ 0x24
 801fe06:	e714      	b.n	801fc32 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fa>
 801fe08:	b149      	cbz	r1, 801fe1e <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 801fe0a:	5cba      	ldrb	r2, [r7, r2]
 801fe0c:	eb02 0242 	add.w	r2, r2, r2, lsl #1
 801fe10:	4422      	add	r2, r4
 801fe12:	4660      	mov	r0, ip
 801fe14:	4666      	mov	r6, ip
 801fe16:	e7a5      	b.n	801fd64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fe18:	4660      	mov	r0, ip
 801fe1a:	4662      	mov	r2, ip
 801fe1c:	e7a2      	b.n	801fd64 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x32c>
 801fe1e:	4660      	mov	r0, ip
 801fe20:	4662      	mov	r2, ip
 801fe22:	e7f7      	b.n	801fe14 <_ZN8touchgfx8LCD16bpp57TextureMapper_L8_RGB888_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3dc>
 801fe24:	b00f      	add	sp, #60	@ 0x3c
 801fe26:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0801fe2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>:
 801fe2a:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fe2e:	b085      	sub	sp, #20
 801fe30:	e9dd 7410 	ldrd	r7, r4, [sp, #64]	@ 0x40
 801fe34:	f9bd c038 	ldrsh.w	ip, [sp, #56]	@ 0x38
 801fe38:	9102      	str	r1, [sp, #8]
 801fe3a:	2c00      	cmp	r4, #0
 801fe3c:	fb04 710c 	mla	r1, r4, ip, r7
 801fe40:	f9bd 803c 	ldrsh.w	r8, [sp, #60]	@ 0x3c
 801fe44:	f89d 6048 	ldrb.w	r6, [sp, #72]	@ 0x48
 801fe48:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 801fe4c:	eb02 0e01 	add.w	lr, r2, r1
 801fe50:	f2c0 8122 	blt.w	8020098 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe54:	45a0      	cmp	r8, r4
 801fe56:	f340 811f 	ble.w	8020098 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26e>
 801fe5a:	2f00      	cmp	r7, #0
 801fe5c:	f2c0 811a 	blt.w	8020094 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe60:	45bc      	cmp	ip, r7
 801fe62:	f340 8117 	ble.w	8020094 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x26a>
 801fe66:	5c52      	ldrb	r2, [r2, r1]
 801fe68:	f853 5022 	ldr.w	r5, [r3, r2, lsl #2]
 801fe6c:	1c7a      	adds	r2, r7, #1
 801fe6e:	f100 8116 	bmi.w	802009e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe72:	4594      	cmp	ip, r2
 801fe74:	f340 8113 	ble.w	802009e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x274>
 801fe78:	2e00      	cmp	r6, #0
 801fe7a:	f000 8112 	beq.w	80200a2 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x278>
 801fe7e:	f89e 2001 	ldrb.w	r2, [lr, #1]
 801fe82:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 801fe86:	3401      	adds	r4, #1
 801fe88:	f100 810f 	bmi.w	80200aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe8c:	45a0      	cmp	r8, r4
 801fe8e:	f340 810c 	ble.w	80200aa <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x280>
 801fe92:	2800      	cmp	r0, #0
 801fe94:	f000 810c 	beq.w	80200b0 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x286>
 801fe98:	2f00      	cmp	r7, #0
 801fe9a:	f2c0 8104 	blt.w	80200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fe9e:	45bc      	cmp	ip, r7
 801fea0:	f340 8101 	ble.w	80200a6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x27c>
 801fea4:	f81e 200c 	ldrb.w	r2, [lr, ip]
 801fea8:	f853 4022 	ldr.w	r4, [r3, r2, lsl #2]
 801feac:	3701      	adds	r7, #1
 801feae:	f100 8102 	bmi.w	80200b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801feb2:	45bc      	cmp	ip, r7
 801feb4:	f340 80ff 	ble.w	80200b6 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x28c>
 801feb8:	2e00      	cmp	r6, #0
 801feba:	f000 80fe 	beq.w	80200ba <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x290>
 801febe:	44f4      	add	ip, lr
 801fec0:	f89c 2001 	ldrb.w	r2, [ip, #1]
 801fec4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 801fec8:	b2b6      	uxth	r6, r6
 801feca:	b280      	uxth	r0, r0
 801fecc:	fb00 fe06 	mul.w	lr, r0, r6
 801fed0:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 801fed4:	0136      	lsls	r6, r6, #4
 801fed6:	eba6 070e 	sub.w	r7, r6, lr
 801feda:	b280      	uxth	r0, r0
 801fedc:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 801fee0:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 801fee4:	b2bf      	uxth	r7, r7
 801fee6:	1a1b      	subs	r3, r3, r0
 801fee8:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 801feec:	b29b      	uxth	r3, r3
 801feee:	fb0a f607 	mul.w	r6, sl, r7
 801fef2:	ea4f 6914 	mov.w	r9, r4, lsr #24
 801fef6:	fb0b 6603 	mla	r6, fp, r3, r6
 801fefa:	ea4f 6812 	mov.w	r8, r2, lsr #24
 801fefe:	fb00 6609 	mla	r6, r0, r9, r6
 801ff02:	fb0e 6608 	mla	r6, lr, r8, r6
 801ff06:	f3c6 2607 	ubfx	r6, r6, #8, #8
 801ff0a:	9600      	str	r6, [sp, #0]
 801ff0c:	2e00      	cmp	r6, #0
 801ff0e:	f000 80be 	beq.w	802008e <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x264>
 801ff12:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 801ff16:	fb0b fc0c 	mul.w	ip, fp, ip
 801ff1a:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 801ff1e:	fb0b f505 	mul.w	r5, fp, r5
 801ff22:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 801ff26:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 801ff2a:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ff2e:	44dc      	add	ip, fp
 801ff30:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 801ff34:	9501      	str	r5, [sp, #4]
 801ff36:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 801ff3a:	9503      	str	r5, [sp, #12]
 801ff3c:	9d01      	ldr	r5, [sp, #4]
 801ff3e:	9e02      	ldr	r6, [sp, #8]
 801ff40:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 801ff44:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 801ff48:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 801ff4c:	fb0a fc0c 	mul.w	ip, sl, ip
 801ff50:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 801ff54:	ea4f 251c 	mov.w	r5, ip, lsr #8
 801ff58:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ff5c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ff60:	4465      	add	r5, ip
 801ff62:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 801ff66:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 801ff6a:	fb09 fc0c 	mul.w	ip, r9, ip
 801ff6e:	fb09 f904 	mul.w	r9, r9, r4
 801ff72:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 801ff76:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 801ff7a:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 801ff7e:	fb08 f404 	mul.w	r4, r8, r4
 801ff82:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 801ff86:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 801ff8a:	fb08 f802 	mul.w	r8, r8, r2
 801ff8e:	fb0a fa01 	mul.w	sl, sl, r1
 801ff92:	0a22      	lsrs	r2, r4, #8
 801ff94:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 801ff98:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 801ff9c:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 801ffa0:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 801ffa4:	4414      	add	r4, r2
 801ffa6:	ea4f 211c 	mov.w	r1, ip, lsr #8
 801ffaa:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 801ffae:	0a2d      	lsrs	r5, r5, #8
 801ffb0:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 801ffb4:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 801ffb8:	9a03      	ldr	r2, [sp, #12]
 801ffba:	8836      	ldrh	r6, [r6, #0]
 801ffbc:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ffc0:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 801ffc4:	437d      	muls	r5, r7
 801ffc6:	4461      	add	r1, ip
 801ffc8:	0a24      	lsrs	r4, r4, #8
 801ffca:	fb02 5503 	mla	r5, r2, r3, r5
 801ffce:	0a09      	lsrs	r1, r1, #8
 801ffd0:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 801ffd4:	fb04 540e 	mla	r4, r4, lr, r5
 801ffd8:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 801ffdc:	fb01 4100 	mla	r1, r1, r0, r4
 801ffe0:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 801ffe4:	0a09      	lsrs	r1, r1, #8
 801ffe6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 801ffea:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 801ffee:	fb07 f70a 	mul.w	r7, r7, sl
 801fff2:	ea4f 2818 	mov.w	r8, r8, lsr #8
 801fff6:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 801fffa:	fb03 7101 	mla	r1, r3, r1, r7
 801fffe:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020002:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8020006:	fb0e 1e08 	mla	lr, lr, r8, r1
 802000a:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 802000e:	fb00 e101 	mla	r1, r0, r1, lr
 8020012:	f89d 0050 	ldrb.w	r0, [sp, #80]	@ 0x50
 8020016:	9a00      	ldr	r2, [sp, #0]
 8020018:	b287      	uxth	r7, r0
 802001a:	437a      	muls	r2, r7
 802001c:	0a09      	lsrs	r1, r1, #8
 802001e:	1c53      	adds	r3, r2, #1
 8020020:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020024:	4321      	orrs	r1, r4
 8020026:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802002a:	1235      	asrs	r5, r6, #8
 802002c:	0c0a      	lsrs	r2, r1, #16
 802002e:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 8020032:	b2db      	uxtb	r3, r3
 8020034:	fb12 f207 	smulbb	r2, r2, r7
 8020038:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 802003c:	fb05 2503 	mla	r5, r5, r3, r2
 8020040:	f3c1 2407 	ubfx	r4, r1, #8, #8
 8020044:	10f2      	asrs	r2, r6, #3
 8020046:	b2c8      	uxtb	r0, r1
 8020048:	00f6      	lsls	r6, r6, #3
 802004a:	fb14 f407 	smulbb	r4, r4, r7
 802004e:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8020052:	b2f6      	uxtb	r6, r6
 8020054:	fb10 f007 	smulbb	r0, r0, r7
 8020058:	fb02 4203 	mla	r2, r2, r3, r4
 802005c:	b2ad      	uxth	r5, r5
 802005e:	fb06 0303 	mla	r3, r6, r3, r0
 8020062:	b299      	uxth	r1, r3
 8020064:	b294      	uxth	r4, r2
 8020066:	1c6b      	adds	r3, r5, #1
 8020068:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802006c:	1c62      	adds	r2, r4, #1
 802006e:	1c4b      	adds	r3, r1, #1
 8020070:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8020074:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 8020078:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802007c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020080:	0952      	lsrs	r2, r2, #5
 8020082:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020086:	432b      	orrs	r3, r5
 8020088:	4313      	orrs	r3, r2
 802008a:	9a02      	ldr	r2, [sp, #8]
 802008c:	8013      	strh	r3, [r2, #0]
 802008e:	b005      	add	sp, #20
 8020090:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020094:	2500      	movs	r5, #0
 8020096:	e6e9      	b.n	801fe6c <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x42>
 8020098:	2100      	movs	r1, #0
 802009a:	460d      	mov	r5, r1
 802009c:	e6f3      	b.n	801fe86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 802009e:	2100      	movs	r1, #0
 80200a0:	e6f1      	b.n	801fe86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80200a2:	4631      	mov	r1, r6
 80200a4:	e6ef      	b.n	801fe86 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x5c>
 80200a6:	2400      	movs	r4, #0
 80200a8:	e700      	b.n	801feac <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x82>
 80200aa:	2200      	movs	r2, #0
 80200ac:	4614      	mov	r4, r2
 80200ae:	e70b      	b.n	801fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200b0:	4602      	mov	r2, r0
 80200b2:	4604      	mov	r4, r0
 80200b4:	e708      	b.n	801fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200b6:	2200      	movs	r2, #0
 80200b8:	e706      	b.n	801fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>
 80200ba:	4632      	mov	r2, r6
 80200bc:	e704      	b.n	801fec8 <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh+0x9e>

080200be <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80200be:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80200c2:	b09f      	sub	sp, #124	@ 0x7c
 80200c4:	921b      	str	r2, [sp, #108]	@ 0x6c
 80200c6:	9309      	str	r3, [sp, #36]	@ 0x24
 80200c8:	9a2d      	ldr	r2, [sp, #180]	@ 0xb4
 80200ca:	f89d 30c4 	ldrb.w	r3, [sp, #196]	@ 0xc4
 80200ce:	931c      	str	r3, [sp, #112]	@ 0x70
 80200d0:	9119      	str	r1, [sp, #100]	@ 0x64
 80200d2:	e9dd 132e 	ldrd	r1, r3, [sp, #184]	@ 0xb8
 80200d6:	901d      	str	r0, [sp, #116]	@ 0x74
 80200d8:	6850      	ldr	r0, [r2, #4]
 80200da:	6812      	ldr	r2, [r2, #0]
 80200dc:	9d2a      	ldr	r5, [sp, #168]	@ 0xa8
 80200de:	fb00 1303 	mla	r3, r0, r3, r1
 80200e2:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80200e6:	930c      	str	r3, [sp, #48]	@ 0x30
 80200e8:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80200ea:	681b      	ldr	r3, [r3, #0]
 80200ec:	9312      	str	r3, [sp, #72]	@ 0x48
 80200ee:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 80200f0:	685e      	ldr	r6, [r3, #4]
 80200f2:	f8bd 3070 	ldrh.w	r3, [sp, #112]	@ 0x70
 80200f6:	930d      	str	r3, [sp, #52]	@ 0x34
 80200f8:	3604      	adds	r6, #4
 80200fa:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80200fc:	2b00      	cmp	r3, #0
 80200fe:	dc03      	bgt.n	8020108 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 8020100:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8020102:	2b00      	cmp	r3, #0
 8020104:	f340 8388 	ble.w	8020818 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 8020108:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 802010a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802010e:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020112:	1e48      	subs	r0, r1, #1
 8020114:	1e57      	subs	r7, r2, #1
 8020116:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020118:	2b00      	cmp	r3, #0
 802011a:	f340 8195 	ble.w	8020448 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38a>
 802011e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020120:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020124:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020128:	d406      	bmi.n	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802012a:	4584      	cmp	ip, r0
 802012c:	da04      	bge.n	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 802012e:	2b00      	cmp	r3, #0
 8020130:	db02      	blt.n	8020138 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a>
 8020132:	42bb      	cmp	r3, r7
 8020134:	f2c0 8189 	blt.w	802044a <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38c>
 8020138:	f11c 0c01 	adds.w	ip, ip, #1
 802013c:	f100 8177 	bmi.w	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020140:	4561      	cmp	r1, ip
 8020142:	f2c0 8174 	blt.w	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020146:	3301      	adds	r3, #1
 8020148:	f100 8171 	bmi.w	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 802014c:	429a      	cmp	r2, r3
 802014e:	f2c0 816e 	blt.w	802042e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8020152:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020154:	9f0c      	ldr	r7, [sp, #48]	@ 0x30
 8020156:	931a      	str	r3, [sp, #104]	@ 0x68
 8020158:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 802015a:	2b00      	cmp	r3, #0
 802015c:	f340 8193 	ble.w	8020486 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c8>
 8020160:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8020162:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020166:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020168:	e9d3 0e02 	ldrd	r0, lr, [r3, #8]
 802016c:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802016e:	141b      	asrs	r3, r3, #16
 8020170:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020174:	f3c5 3103 	ubfx	r1, r5, #12, #4
 8020178:	f100 81d6 	bmi.w	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802017c:	f100 38ff 	add.w	r8, r0, #4294967295
 8020180:	4543      	cmp	r3, r8
 8020182:	f280 81d1 	bge.w	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020186:	f1bc 0f00 	cmp.w	ip, #0
 802018a:	f2c0 81cd 	blt.w	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 802018e:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020192:	45c4      	cmp	ip, r8
 8020194:	f280 81c8 	bge.w	8020528 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46a>
 8020198:	b200      	sxth	r0, r0
 802019a:	fb0c 3300 	mla	r3, ip, r0, r3
 802019e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80201a0:	eb04 0803 	add.w	r8, r4, r3
 80201a4:	5ce3      	ldrb	r3, [r4, r3]
 80201a6:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 80201aa:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 80201ae:	2a00      	cmp	r2, #0
 80201b0:	f000 81af 	beq.w	8020512 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 80201b4:	f898 c001 	ldrb.w	ip, [r8, #1]
 80201b8:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 80201bc:	940e      	str	r4, [sp, #56]	@ 0x38
 80201be:	0e24      	lsrs	r4, r4, #24
 80201c0:	9415      	str	r4, [sp, #84]	@ 0x54
 80201c2:	b179      	cbz	r1, 80201e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 80201c4:	eb08 0c00 	add.w	ip, r8, r0
 80201c8:	f818 0000 	ldrb.w	r0, [r8, r0]
 80201cc:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80201d0:	900a      	str	r0, [sp, #40]	@ 0x28
 80201d2:	0e00      	lsrs	r0, r0, #24
 80201d4:	9013      	str	r0, [sp, #76]	@ 0x4c
 80201d6:	f89c 0001 	ldrb.w	r0, [ip, #1]
 80201da:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 80201de:	900f      	str	r0, [sp, #60]	@ 0x3c
 80201e0:	0e00      	lsrs	r0, r0, #24
 80201e2:	9016      	str	r0, [sp, #88]	@ 0x58
 80201e4:	b292      	uxth	r2, r2
 80201e6:	b289      	uxth	r1, r1
 80201e8:	fb02 f901 	mul.w	r9, r2, r1
 80201ec:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 80201f0:	0112      	lsls	r2, r2, #4
 80201f2:	eba2 0809 	sub.w	r8, r2, r9
 80201f6:	b289      	uxth	r1, r1
 80201f8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80201fc:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80201fe:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020200:	fa1f f888 	uxth.w	r8, r8
 8020204:	1a52      	subs	r2, r2, r1
 8020206:	b292      	uxth	r2, r2
 8020208:	fb08 f000 	mul.w	r0, r8, r0
 802020c:	fb02 000e 	mla	r0, r2, lr, r0
 8020210:	fb01 0004 	mla	r0, r1, r4, r0
 8020214:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020216:	fb09 0004 	mla	r0, r9, r4, r0
 802021a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802021e:	2800      	cmp	r0, #0
 8020220:	f000 80fa 	beq.w	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020224:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020228:	d01b      	beq.n	8020262 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802022a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802022e:	fb0e fa0a 	mul.w	sl, lr, sl
 8020232:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020236:	fb0e fe03 	mul.w	lr, lr, r3
 802023a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802023e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020242:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020246:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802024a:	4453      	add	r3, sl
 802024c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020250:	0a1b      	lsrs	r3, r3, #8
 8020252:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020256:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802025a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802025e:	ea43 030c 	orr.w	r3, r3, ip
 8020262:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020264:	2cff      	cmp	r4, #255	@ 0xff
 8020266:	d021      	beq.n	80202ac <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8020268:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802026a:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 802026e:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020270:	fb04 fb0b 	mul.w	fp, r4, fp
 8020274:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020276:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802027a:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 802027c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020280:	fb04 fa0a 	mul.w	sl, r4, sl
 8020284:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020288:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 802028c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020290:	44de      	add	lr, fp
 8020292:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020296:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802029a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802029e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80202a2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80202a6:	ea4e 040a 	orr.w	r4, lr, sl
 80202aa:	940e      	str	r4, [sp, #56]	@ 0x38
 80202ac:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80202ae:	2cff      	cmp	r4, #255	@ 0xff
 80202b0:	d021      	beq.n	80202f6 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x238>
 80202b2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80202b4:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 80202b8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80202ba:	fb04 fb0b 	mul.w	fp, r4, fp
 80202be:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80202c0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80202c4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80202c6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80202ca:	fb04 fa0a 	mul.w	sl, r4, sl
 80202ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80202d2:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80202d6:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80202da:	44de      	add	lr, fp
 80202dc:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80202e0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80202e4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80202e8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80202ec:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80202f0:	ea4e 040a 	orr.w	r4, lr, sl
 80202f4:	940a      	str	r4, [sp, #40]	@ 0x28
 80202f6:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 80202f8:	2cff      	cmp	r4, #255	@ 0xff
 80202fa:	d021      	beq.n	8020340 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 80202fc:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 80202fe:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020302:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020304:	fb04 fb0b 	mul.w	fp, r4, fp
 8020308:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802030a:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802030e:	9c16      	ldr	r4, [sp, #88]	@ 0x58
 8020310:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020314:	fb04 fa0a 	mul.w	sl, r4, sl
 8020318:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802031c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020320:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020324:	44de      	add	lr, fp
 8020326:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802032a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802032e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020332:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020336:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802033a:	ea4e 040a 	orr.w	r4, lr, sl
 802033e:	940f      	str	r4, [sp, #60]	@ 0x3c
 8020340:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020342:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020346:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8020348:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 802034c:	fb08 fc0c 	mul.w	ip, r8, ip
 8020350:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020354:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020358:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 802035a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802035e:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020362:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8020364:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020368:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 802036c:	fb08 f80e 	mul.w	r8, r8, lr
 8020370:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020374:	fb02 8303 	mla	r3, r2, r3, r8
 8020378:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802037a:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802037c:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020380:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020382:	fb01 330a 	mla	r3, r1, sl, r3
 8020386:	f402 417f 	and.w	r1, r2, #65280	@ 0xff00
 802038a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 802038c:	fb09 3901 	mla	r9, r9, r1, r3
 8020390:	4342      	muls	r2, r0
 8020392:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020396:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802039a:	883b      	ldrh	r3, [r7, #0]
 802039c:	1c50      	adds	r0, r2, #1
 802039e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80203a2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80203a6:	ea4c 0c09 	orr.w	ip, ip, r9
 80203aa:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80203ae:	1219      	asrs	r1, r3, #8
 80203b0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80203b4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80203b8:	b2c0      	uxtb	r0, r0
 80203ba:	fb12 f204 	smulbb	r2, r2, r4
 80203be:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80203c2:	fb01 2100 	mla	r1, r1, r0, r2
 80203c6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80203ca:	10da      	asrs	r2, r3, #3
 80203cc:	fa5f fc8c 	uxtb.w	ip, ip
 80203d0:	00db      	lsls	r3, r3, #3
 80203d2:	fb1c fc04 	smulbb	ip, ip, r4
 80203d6:	b2db      	uxtb	r3, r3
 80203d8:	b289      	uxth	r1, r1
 80203da:	fb03 c300 	mla	r3, r3, r0, ip
 80203de:	fa1f fc83 	uxth.w	ip, r3
 80203e2:	1c4b      	adds	r3, r1, #1
 80203e4:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80203e8:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80203ec:	fb1e fe04 	smulbb	lr, lr, r4
 80203f0:	f10c 0301 	add.w	r3, ip, #1
 80203f4:	fb02 e200 	mla	r2, r2, r0, lr
 80203f8:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 80203fc:	b292      	uxth	r2, r2
 80203fe:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8020402:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8020406:	430b      	orrs	r3, r1
 8020408:	1c51      	adds	r1, r2, #1
 802040a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802040e:	0952      	lsrs	r2, r2, #5
 8020410:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8020414:	4313      	orrs	r3, r2
 8020416:	803b      	strh	r3, [r7, #0]
 8020418:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 802041a:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 802041c:	441a      	add	r2, r3
 802041e:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020420:	9229      	str	r2, [sp, #164]	@ 0xa4
 8020422:	441d      	add	r5, r3
 8020424:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 8020426:	3b01      	subs	r3, #1
 8020428:	3702      	adds	r7, #2
 802042a:	931a      	str	r3, [sp, #104]	@ 0x68
 802042c:	e694      	b.n	8020158 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802042e:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 8020430:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020432:	441c      	add	r4, r3
 8020434:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020436:	9429      	str	r4, [sp, #164]	@ 0xa4
 8020438:	441d      	add	r5, r3
 802043a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802043c:	3b01      	subs	r3, #1
 802043e:	9309      	str	r3, [sp, #36]	@ 0x24
 8020440:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8020442:	3302      	adds	r3, #2
 8020444:	930c      	str	r3, [sp, #48]	@ 0x30
 8020446:	e666      	b.n	8020116 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8020448:	d024      	beq.n	8020494 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3d6>
 802044a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802044c:	982b      	ldr	r0, [sp, #172]	@ 0xac
 802044e:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 8020450:	3b01      	subs	r3, #1
 8020452:	fb00 4003 	mla	r0, r0, r3, r4
 8020456:	1400      	asrs	r0, r0, #16
 8020458:	f53f ae7b 	bmi.w	8020152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802045c:	3901      	subs	r1, #1
 802045e:	4288      	cmp	r0, r1
 8020460:	f6bf ae77 	bge.w	8020152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020464:	992c      	ldr	r1, [sp, #176]	@ 0xb0
 8020466:	fb01 5303 	mla	r3, r1, r3, r5
 802046a:	141b      	asrs	r3, r3, #16
 802046c:	f53f ae71 	bmi.w	8020152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020470:	3a01      	subs	r2, #1
 8020472:	4293      	cmp	r3, r2
 8020474:	f6bf ae6d 	bge.w	8020152 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 8020478:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 802047c:	f8dd 9030 	ldr.w	r9, [sp, #48]	@ 0x30
 8020480:	f1bb 0f00 	cmp.w	fp, #0
 8020484:	dc70      	bgt.n	8020568 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4aa>
 8020486:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8020488:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 802048c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 802048e:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020492:	930c      	str	r3, [sp, #48]	@ 0x30
 8020494:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8020496:	2b00      	cmp	r3, #0
 8020498:	f340 81be 	ble.w	8020818 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x75a>
 802049c:	ee30 0a04 	vadd.f32	s0, s0, s8
 80204a0:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80204a4:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80204a8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80204aa:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80204ae:	ee31 1a05 	vadd.f32	s2, s2, s10
 80204b2:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80204b6:	eef0 6a62 	vmov.f32	s13, s5
 80204ba:	ee61 7a27 	vmul.f32	s15, s2, s15
 80204be:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204c2:	ee77 2a62 	vsub.f32	s5, s14, s5
 80204c6:	edcd 6a29 	vstr	s13, [sp, #164]	@ 0xa4
 80204ca:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80204ce:	eef0 6a43 	vmov.f32	s13, s6
 80204d2:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80204d6:	ee12 2a90 	vmov	r2, s5
 80204da:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 80204de:	fb92 f3f3 	sdiv	r3, r2, r3
 80204e2:	ee13 2a10 	vmov	r2, s6
 80204e6:	932b      	str	r3, [sp, #172]	@ 0xac
 80204e8:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80204ea:	fb92 f3f3 	sdiv	r3, r2, r3
 80204ee:	932c      	str	r3, [sp, #176]	@ 0xb0
 80204f0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80204f2:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 80204f4:	3b01      	subs	r3, #1
 80204f6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80204fa:	9319      	str	r3, [sp, #100]	@ 0x64
 80204fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80204fe:	bf08      	it	eq
 8020500:	4613      	moveq	r3, r2
 8020502:	ee16 5a90 	vmov	r5, s13
 8020506:	9309      	str	r3, [sp, #36]	@ 0x24
 8020508:	eeb0 3a67 	vmov.f32	s6, s15
 802050c:	eef0 2a47 	vmov.f32	s5, s14
 8020510:	e5f3      	b.n	80200fa <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8020512:	2900      	cmp	r1, #0
 8020514:	f43f ae66 	beq.w	80201e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020518:	f818 0000 	ldrb.w	r0, [r8, r0]
 802051c:	f856 0020 	ldr.w	r0, [r6, r0, lsl #2]
 8020520:	900a      	str	r0, [sp, #40]	@ 0x28
 8020522:	0e00      	lsrs	r0, r0, #24
 8020524:	9013      	str	r0, [sp, #76]	@ 0x4c
 8020526:	e65d      	b.n	80201e4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x126>
 8020528:	f113 0801 	adds.w	r8, r3, #1
 802052c:	f53f af74 	bmi.w	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020530:	4540      	cmp	r0, r8
 8020532:	f6ff af71 	blt.w	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020536:	f11c 0801 	adds.w	r8, ip, #1
 802053a:	f53f af6d 	bmi.w	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 802053e:	45c6      	cmp	lr, r8
 8020540:	f6ff af6a 	blt.w	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020544:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 8020546:	9302      	str	r3, [sp, #8]
 8020548:	b200      	sxth	r0, r0
 802054a:	fa0f f38e 	sxth.w	r3, lr
 802054e:	e9cd 1405 	strd	r1, r4, [sp, #20]
 8020552:	e9cd c203 	strd	ip, r2, [sp, #12]
 8020556:	9301      	str	r3, [sp, #4]
 8020558:	9000      	str	r0, [sp, #0]
 802055a:	4633      	mov	r3, r6
 802055c:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 802055e:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8020560:	4639      	mov	r1, r7
 8020562:	f7ff fc62 	bl	801fe2a <_ZNK8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKhPKmssiihhh>
 8020566:	e757      	b.n	8020418 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020568:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802056a:	9c29      	ldr	r4, [sp, #164]	@ 0xa4
 802056c:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020570:	9b30      	ldr	r3, [sp, #192]	@ 0xc0
 8020572:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020576:	1427      	asrs	r7, r4, #16
 8020578:	142b      	asrs	r3, r5, #16
 802057a:	fb01 7303 	mla	r3, r1, r3, r7
 802057e:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020580:	18e7      	adds	r7, r4, r3
 8020582:	5ce3      	ldrb	r3, [r4, r3]
 8020584:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020588:	f3c5 3003 	ubfx	r0, r5, #12, #4
 802058c:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020590:	2a00      	cmp	r2, #0
 8020592:	f000 8137 	beq.w	8020804 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8020596:	f897 e001 	ldrb.w	lr, [r7, #1]
 802059a:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 802059e:	9410      	str	r4, [sp, #64]	@ 0x40
 80205a0:	0e24      	lsrs	r4, r4, #24
 80205a2:	9417      	str	r4, [sp, #92]	@ 0x5c
 80205a4:	b170      	cbz	r0, 80205c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 80205a6:	eb07 0e01 	add.w	lr, r7, r1
 80205aa:	5c79      	ldrb	r1, [r7, r1]
 80205ac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80205b0:	910b      	str	r1, [sp, #44]	@ 0x2c
 80205b2:	0e09      	lsrs	r1, r1, #24
 80205b4:	9114      	str	r1, [sp, #80]	@ 0x50
 80205b6:	f89e 1001 	ldrb.w	r1, [lr, #1]
 80205ba:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80205be:	9111      	str	r1, [sp, #68]	@ 0x44
 80205c0:	0e09      	lsrs	r1, r1, #24
 80205c2:	9118      	str	r1, [sp, #96]	@ 0x60
 80205c4:	b292      	uxth	r2, r2
 80205c6:	b280      	uxth	r0, r0
 80205c8:	fb02 f800 	mul.w	r8, r2, r0
 80205cc:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80205d0:	0112      	lsls	r2, r2, #4
 80205d2:	eba2 0e08 	sub.w	lr, r2, r8
 80205d6:	b280      	uxth	r0, r0
 80205d8:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80205dc:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 80205de:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 80205e0:	fa1f fe8e 	uxth.w	lr, lr
 80205e4:	1a12      	subs	r2, r2, r0
 80205e6:	b292      	uxth	r2, r2
 80205e8:	fb0e f101 	mul.w	r1, lr, r1
 80205ec:	fb02 110c 	mla	r1, r2, ip, r1
 80205f0:	fb00 1104 	mla	r1, r0, r4, r1
 80205f4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80205f6:	fb08 1104 	mla	r1, r8, r4, r1
 80205fa:	f3c1 2107 	ubfx	r1, r1, #8, #8
 80205fe:	2900      	cmp	r1, #0
 8020600:	f000 80f5 	beq.w	80207ee <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 8020604:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020608:	d019      	beq.n	802063e <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x580>
 802060a:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 802060e:	fb0c fa0a 	mul.w	sl, ip, sl
 8020612:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020616:	fb0c fc03 	mul.w	ip, ip, r3
 802061a:	ea4f 231a 	mov.w	r3, sl, lsr #8
 802061e:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020622:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020626:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 802062a:	4453      	add	r3, sl
 802062c:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020630:	0a1b      	lsrs	r3, r3, #8
 8020632:	0a3f      	lsrs	r7, r7, #8
 8020634:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020638:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802063c:	433b      	orrs	r3, r7
 802063e:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020640:	2cff      	cmp	r4, #255	@ 0xff
 8020642:	d020      	beq.n	8020686 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c8>
 8020644:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020646:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802064a:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 802064c:	4367      	muls	r7, r4
 802064e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020650:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020654:	9c17      	ldr	r4, [sp, #92]	@ 0x5c
 8020656:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802065a:	fb04 fa0a 	mul.w	sl, r4, sl
 802065e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8020662:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020666:	44bc      	add	ip, r7
 8020668:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802066c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020670:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020674:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020678:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802067c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020680:	ea4c 040a 	orr.w	r4, ip, sl
 8020684:	9410      	str	r4, [sp, #64]	@ 0x40
 8020686:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020688:	2cff      	cmp	r4, #255	@ 0xff
 802068a:	d020      	beq.n	80206ce <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x610>
 802068c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802068e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8020692:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8020694:	4367      	muls	r7, r4
 8020696:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020698:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802069c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802069e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80206a2:	fb04 fa0a 	mul.w	sl, r4, sl
 80206a6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80206aa:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80206ae:	44bc      	add	ip, r7
 80206b0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80206b4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80206b8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80206bc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80206c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80206c4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80206c8:	ea4c 040a 	orr.w	r4, ip, sl
 80206cc:	940b      	str	r4, [sp, #44]	@ 0x2c
 80206ce:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80206d0:	2cff      	cmp	r4, #255	@ 0xff
 80206d2:	d020      	beq.n	8020716 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x658>
 80206d4:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80206d6:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80206da:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80206dc:	4367      	muls	r7, r4
 80206de:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 80206e0:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80206e4:	9c18      	ldr	r4, [sp, #96]	@ 0x60
 80206e6:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80206ea:	fb04 fa0a 	mul.w	sl, r4, sl
 80206ee:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80206f2:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80206f6:	44bc      	add	ip, r7
 80206f8:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80206fc:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8020700:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020704:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020708:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802070c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020710:	ea4c 040a 	orr.w	r4, ip, sl
 8020714:	9411      	str	r4, [sp, #68]	@ 0x44
 8020716:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020718:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802071c:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 802071e:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8020722:	fb0e f707 	mul.w	r7, lr, r7
 8020726:	fb02 770c 	mla	r7, r2, ip, r7
 802072a:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 802072e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020730:	fb00 770c 	mla	r7, r0, ip, r7
 8020734:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020738:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 802073a:	fb08 770c 	mla	r7, r8, ip, r7
 802073e:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 8020742:	fb0e fe0c 	mul.w	lr, lr, ip
 8020746:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802074a:	fb02 e303 	mla	r3, r2, r3, lr
 802074e:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8020750:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8020752:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020756:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8020758:	fb00 330a 	mla	r3, r0, sl, r3
 802075c:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8020760:	fb08 3c0c 	mla	ip, r8, ip, r3
 8020764:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8020766:	f8b9 0000 	ldrh.w	r0, [r9]
 802076a:	434b      	muls	r3, r1
 802076c:	0a3f      	lsrs	r7, r7, #8
 802076e:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020772:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020776:	1c59      	adds	r1, r3, #1
 8020778:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 802077c:	ea47 070c 	orr.w	r7, r7, ip
 8020780:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8020784:	1202      	asrs	r2, r0, #8
 8020786:	0c3b      	lsrs	r3, r7, #16
 8020788:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 802078c:	b2c9      	uxtb	r1, r1
 802078e:	fb13 f304 	smulbb	r3, r3, r4
 8020792:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020796:	fb02 3201 	mla	r2, r2, r1, r3
 802079a:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 802079e:	10c3      	asrs	r3, r0, #3
 80207a0:	b2ff      	uxtb	r7, r7
 80207a2:	00c0      	lsls	r0, r0, #3
 80207a4:	b292      	uxth	r2, r2
 80207a6:	fb1c fc04 	smulbb	ip, ip, r4
 80207aa:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80207ae:	b2c0      	uxtb	r0, r0
 80207b0:	fb17 f704 	smulbb	r7, r7, r4
 80207b4:	fb03 c301 	mla	r3, r3, r1, ip
 80207b8:	fb00 7001 	mla	r0, r0, r1, r7
 80207bc:	f102 0c01 	add.w	ip, r2, #1
 80207c0:	b280      	uxth	r0, r0
 80207c2:	eb0c 2212 	add.w	r2, ip, r2, lsr #8
 80207c6:	f402 4c78 	and.w	ip, r2, #63488	@ 0xf800
 80207ca:	1c42      	adds	r2, r0, #1
 80207cc:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80207d0:	b29b      	uxth	r3, r3
 80207d2:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 80207d6:	ea42 020c 	orr.w	r2, r2, ip
 80207da:	f103 0c01 	add.w	ip, r3, #1
 80207de:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 80207e2:	095b      	lsrs	r3, r3, #5
 80207e4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 80207e8:	431a      	orrs	r2, r3
 80207ea:	f8a9 2000 	strh.w	r2, [r9]
 80207ee:	9b2b      	ldr	r3, [sp, #172]	@ 0xac
 80207f0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 80207f2:	441a      	add	r2, r3
 80207f4:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 80207f6:	9229      	str	r2, [sp, #164]	@ 0xa4
 80207f8:	f109 0902 	add.w	r9, r9, #2
 80207fc:	441d      	add	r5, r3
 80207fe:	f10b 3bff 	add.w	fp, fp, #4294967295
 8020802:	e63d      	b.n	8020480 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8020804:	2800      	cmp	r0, #0
 8020806:	f43f aedd 	beq.w	80205c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 802080a:	5c79      	ldrb	r1, [r7, r1]
 802080c:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020810:	910b      	str	r1, [sp, #44]	@ 0x2c
 8020812:	0e09      	lsrs	r1, r1, #24
 8020814:	9114      	str	r1, [sp, #80]	@ 0x50
 8020816:	e6d5      	b.n	80205c4 <_ZN8touchgfx8LCD16bpp60TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x506>
 8020818:	b01f      	add	sp, #124	@ 0x7c
 802081a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

0802081e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>:
 802081e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020822:	b089      	sub	sp, #36	@ 0x24
 8020824:	9101      	str	r1, [sp, #4]
 8020826:	9801      	ldr	r0, [sp, #4]
 8020828:	f9bd c048 	ldrsh.w	ip, [sp, #72]	@ 0x48
 802082c:	8800      	ldrh	r0, [r0, #0]
 802082e:	f9bd 804c 	ldrsh.w	r8, [sp, #76]	@ 0x4c
 8020832:	f89d 5058 	ldrb.w	r5, [sp, #88]	@ 0x58
 8020836:	f89d 405c 	ldrb.w	r4, [sp, #92]	@ 0x5c
 802083a:	1206      	asrs	r6, r0, #8
 802083c:	e9dd 1714 	ldrd	r1, r7, [sp, #80]	@ 0x50
 8020840:	f006 06f8 	and.w	r6, r6, #248	@ 0xf8
 8020844:	9602      	str	r6, [sp, #8]
 8020846:	10c6      	asrs	r6, r0, #3
 8020848:	00c0      	lsls	r0, r0, #3
 802084a:	b2c0      	uxtb	r0, r0
 802084c:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 8020850:	9004      	str	r0, [sp, #16]
 8020852:	2f00      	cmp	r7, #0
 8020854:	fb07 100c 	mla	r0, r7, ip, r1
 8020858:	9603      	str	r6, [sp, #12]
 802085a:	eb02 0e00 	add.w	lr, r2, r0
 802085e:	f2c0 810a 	blt.w	8020a76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020862:	45b8      	cmp	r8, r7
 8020864:	f340 8107 	ble.w	8020a76 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x258>
 8020868:	2900      	cmp	r1, #0
 802086a:	f2c0 8102 	blt.w	8020a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 802086e:	458c      	cmp	ip, r1
 8020870:	f340 80ff 	ble.w	8020a72 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x254>
 8020874:	5c12      	ldrb	r2, [r2, r0]
 8020876:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 802087a:	1c4a      	adds	r2, r1, #1
 802087c:	f100 80fe 	bmi.w	8020a7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020880:	4594      	cmp	ip, r2
 8020882:	f340 80fb 	ble.w	8020a7c <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x25e>
 8020886:	2d00      	cmp	r5, #0
 8020888:	f000 80fa 	beq.w	8020a80 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x262>
 802088c:	f89e 2001 	ldrb.w	r2, [lr, #1]
 8020890:	f853 6022 	ldr.w	r6, [r3, r2, lsl #2]
 8020894:	3701      	adds	r7, #1
 8020896:	f100 80f7 	bmi.w	8020a88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 802089a:	45b8      	cmp	r8, r7
 802089c:	f340 80f4 	ble.w	8020a88 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x26a>
 80208a0:	2c00      	cmp	r4, #0
 80208a2:	f000 80f4 	beq.w	8020a8e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x270>
 80208a6:	2900      	cmp	r1, #0
 80208a8:	eb0e 020c 	add.w	r2, lr, ip
 80208ac:	f2c0 80ea 	blt.w	8020a84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80208b0:	458c      	cmp	ip, r1
 80208b2:	f340 80e7 	ble.w	8020a84 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x266>
 80208b6:	f81e 700c 	ldrb.w	r7, [lr, ip]
 80208ba:	f853 7027 	ldr.w	r7, [r3, r7, lsl #2]
 80208be:	3101      	adds	r1, #1
 80208c0:	f100 80e8 	bmi.w	8020a94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208c4:	458c      	cmp	ip, r1
 80208c6:	f340 80e5 	ble.w	8020a94 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x276>
 80208ca:	2d00      	cmp	r5, #0
 80208cc:	f000 80e4 	beq.w	8020a98 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x27a>
 80208d0:	7852      	ldrb	r2, [r2, #1]
 80208d2:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80208d6:	0e0b      	lsrs	r3, r1, #24
 80208d8:	ea4f 6a10 	mov.w	sl, r0, lsr #24
 80208dc:	9300      	str	r3, [sp, #0]
 80208de:	b2a4      	uxth	r4, r4
 80208e0:	b2ab      	uxth	r3, r5
 80208e2:	f000 15ff 	and.w	r5, r0, #16711935	@ 0xff00ff
 80208e6:	fb03 f904 	mul.w	r9, r3, r4
 80208ea:	fb0a f505 	mul.w	r5, sl, r5
 80208ee:	011b      	lsls	r3, r3, #4
 80208f0:	eba3 0e09 	sub.w	lr, r3, r9
 80208f4:	f5c3 7280 	rsb	r2, r3, #256	@ 0x100
 80208f8:	f400 437f 	and.w	r3, r0, #65280	@ 0xff00
 80208fc:	0a28      	lsrs	r0, r5, #8
 80208fe:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 8020902:	f105 1501 	add.w	r5, r5, #65537	@ 0x10001
 8020906:	4405      	add	r5, r0
 8020908:	0a2d      	lsrs	r5, r5, #8
 802090a:	fb0a f303 	mul.w	r3, sl, r3
 802090e:	f005 10ff 	and.w	r0, r5, #16711935	@ 0xff00ff
 8020912:	9005      	str	r0, [sp, #20]
 8020914:	f503 7080 	add.w	r0, r3, #256	@ 0x100
 8020918:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802091c:	0a1b      	lsrs	r3, r3, #8
 802091e:	ea4f 6b16 	mov.w	fp, r6, lsr #24
 8020922:	9306      	str	r3, [sp, #24]
 8020924:	f006 13ff 	and.w	r3, r6, #16711935	@ 0xff00ff
 8020928:	fb0b f303 	mul.w	r3, fp, r3
 802092c:	0a1d      	lsrs	r5, r3, #8
 802092e:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 8020932:	ea4f 6817 	mov.w	r8, r7, lsr #24
 8020936:	fb0b f606 	mul.w	r6, fp, r6
 802093a:	f103 1301 	add.w	r3, r3, #65537	@ 0x10001
 802093e:	f007 1cff 	and.w	ip, r7, #16711935	@ 0xff00ff
 8020942:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020946:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 802094a:	fb08 f707 	mul.w	r7, r8, r7
 802094e:	441d      	add	r5, r3
 8020950:	f506 7380 	add.w	r3, r6, #256	@ 0x100
 8020954:	eb03 2616 	add.w	r6, r3, r6, lsr #8
 8020958:	f507 7380 	add.w	r3, r7, #256	@ 0x100
 802095c:	eb03 2317 	add.w	r3, r3, r7, lsr #8
 8020960:	fb08 fc0c 	mul.w	ip, r8, ip
 8020964:	0a1b      	lsrs	r3, r3, #8
 8020966:	9307      	str	r3, [sp, #28]
 8020968:	ea4f 201c 	mov.w	r0, ip, lsr #8
 802096c:	0e0b      	lsrs	r3, r1, #24
 802096e:	f001 17ff 	and.w	r7, r1, #16711935	@ 0xff00ff
 8020972:	435f      	muls	r7, r3
 8020974:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8020978:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 802097c:	ebc9 1404 	rsb	r4, r9, r4, lsl #4
 8020980:	4460      	add	r0, ip
 8020982:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8020986:	b2a4      	uxth	r4, r4
 8020988:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802098c:	0a2d      	lsrs	r5, r5, #8
 802098e:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8020992:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020996:	fa1f fe8e 	uxth.w	lr, lr
 802099a:	4359      	muls	r1, r3
 802099c:	1b12      	subs	r2, r2, r4
 802099e:	9b05      	ldr	r3, [sp, #20]
 80209a0:	44bc      	add	ip, r7
 80209a2:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80209a6:	b292      	uxth	r2, r2
 80209a8:	fb05 f50e 	mul.w	r5, r5, lr
 80209ac:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80209b0:	fb03 5502 	mla	r5, r3, r2, r5
 80209b4:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80209b8:	9b06      	ldr	r3, [sp, #24]
 80209ba:	f501 7780 	add.w	r7, r1, #256	@ 0x100
 80209be:	0a36      	lsrs	r6, r6, #8
 80209c0:	0a00      	lsrs	r0, r0, #8
 80209c2:	fb0c 5509 	mla	r5, ip, r9, r5
 80209c6:	f000 10ff 	and.w	r0, r0, #16711935	@ 0xff00ff
 80209ca:	eb07 2111 	add.w	r1, r7, r1, lsr #8
 80209ce:	f406 467f 	and.w	r6, r6, #65280	@ 0xff00
 80209d2:	fb00 5504 	mla	r5, r0, r4, r5
 80209d6:	fb0e f606 	mul.w	r6, lr, r6
 80209da:	f403 407f 	and.w	r0, r3, #65280	@ 0xff00
 80209de:	0a09      	lsrs	r1, r1, #8
 80209e0:	9b07      	ldr	r3, [sp, #28]
 80209e2:	fb02 6000 	mla	r0, r2, r0, r6
 80209e6:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80209ea:	fb09 0001 	mla	r0, r9, r1, r0
 80209ee:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80209f2:	fb0e fe0b 	mul.w	lr, lr, fp
 80209f6:	fb04 0003 	mla	r0, r4, r3, r0
 80209fa:	fb02 e20a 	mla	r2, r2, sl, lr
 80209fe:	9b00      	ldr	r3, [sp, #0]
 8020a00:	fb04 2408 	mla	r4, r4, r8, r2
 8020a04:	fb09 4903 	mla	r9, r9, r3, r4
 8020a08:	ea6f 2929 	mvn.w	r9, r9, asr #8
 8020a0c:	9b02      	ldr	r3, [sp, #8]
 8020a0e:	9a04      	ldr	r2, [sp, #16]
 8020a10:	fa5f f989 	uxtb.w	r9, r9
 8020a14:	fb03 f109 	mul.w	r1, r3, r9
 8020a18:	9b03      	ldr	r3, [sp, #12]
 8020a1a:	0a2d      	lsrs	r5, r5, #8
 8020a1c:	0a00      	lsrs	r0, r0, #8
 8020a1e:	fb03 f309 	mul.w	r3, r3, r9
 8020a22:	f400 407f 	and.w	r0, r0, #65280	@ 0xff00
 8020a26:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8020a2a:	4305      	orrs	r5, r0
 8020a2c:	fb02 f909 	mul.w	r9, r2, r9
 8020a30:	1c58      	adds	r0, r3, #1
 8020a32:	1c4a      	adds	r2, r1, #1
 8020a34:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8020a38:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020a3c:	0a2b      	lsrs	r3, r5, #8
 8020a3e:	0c2a      	lsrs	r2, r5, #16
 8020a40:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020a44:	eb02 2211 	add.w	r2, r2, r1, lsr #8
 8020a48:	00db      	lsls	r3, r3, #3
 8020a4a:	0212      	lsls	r2, r2, #8
 8020a4c:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8020a50:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020a54:	4313      	orrs	r3, r2
 8020a56:	f109 0201 	add.w	r2, r9, #1
 8020a5a:	eb02 2919 	add.w	r9, r2, r9, lsr #8
 8020a5e:	eb05 2519 	add.w	r5, r5, r9, lsr #8
 8020a62:	f3c5 05c4 	ubfx	r5, r5, #3, #5
 8020a66:	431d      	orrs	r5, r3
 8020a68:	9b01      	ldr	r3, [sp, #4]
 8020a6a:	801d      	strh	r5, [r3, #0]
 8020a6c:	b009      	add	sp, #36	@ 0x24
 8020a6e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8020a72:	2000      	movs	r0, #0
 8020a74:	e701      	b.n	802087a <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x5c>
 8020a76:	2600      	movs	r6, #0
 8020a78:	4630      	mov	r0, r6
 8020a7a:	e70b      	b.n	8020894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a7c:	2600      	movs	r6, #0
 8020a7e:	e709      	b.n	8020894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a80:	462e      	mov	r6, r5
 8020a82:	e707      	b.n	8020894 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0x76>
 8020a84:	2700      	movs	r7, #0
 8020a86:	e71a      	b.n	80208be <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xa0>
 8020a88:	2100      	movs	r1, #0
 8020a8a:	460f      	mov	r7, r1
 8020a8c:	e723      	b.n	80208d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a8e:	4621      	mov	r1, r4
 8020a90:	4627      	mov	r7, r4
 8020a92:	e720      	b.n	80208d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a94:	2100      	movs	r1, #0
 8020a96:	e71e      	b.n	80208d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>
 8020a98:	4629      	mov	r1, r5
 8020a9a:	e71c      	b.n	80208d6 <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh+0xb8>

08020a9c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8020a9c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8020aa0:	b09b      	sub	sp, #108	@ 0x6c
 8020aa2:	9218      	str	r2, [sp, #96]	@ 0x60
 8020aa4:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8020aa6:	9116      	str	r1, [sp, #88]	@ 0x58
 8020aa8:	9307      	str	r3, [sp, #28]
 8020aaa:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8020aae:	9019      	str	r0, [sp, #100]	@ 0x64
 8020ab0:	6850      	ldr	r0, [r2, #4]
 8020ab2:	6812      	ldr	r2, [r2, #0]
 8020ab4:	9d26      	ldr	r5, [sp, #152]	@ 0x98
 8020ab6:	fb00 1303 	mla	r3, r0, r3, r1
 8020aba:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8020abe:	930a      	str	r3, [sp, #40]	@ 0x28
 8020ac0:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020ac2:	681b      	ldr	r3, [r3, #0]
 8020ac4:	930f      	str	r3, [sp, #60]	@ 0x3c
 8020ac6:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020ac8:	685e      	ldr	r6, [r3, #4]
 8020aca:	3604      	adds	r6, #4
 8020acc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020ace:	2b00      	cmp	r3, #0
 8020ad0:	dc03      	bgt.n	8020ada <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e>
 8020ad2:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8020ad4:	2b00      	cmp	r3, #0
 8020ad6:	f340 8373 	ble.w	80211c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020ada:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020adc:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020ae0:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8020ae4:	1e48      	subs	r0, r1, #1
 8020ae6:	1e57      	subs	r7, r2, #1
 8020ae8:	9b07      	ldr	r3, [sp, #28]
 8020aea:	2b00      	cmp	r3, #0
 8020aec:	f340 8190 	ble.w	8020e10 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x374>
 8020af0:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020af2:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8020af6:	ea4f 4325 	mov.w	r3, r5, asr #16
 8020afa:	d406      	bmi.n	8020b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020afc:	4584      	cmp	ip, r0
 8020afe:	da04      	bge.n	8020b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b00:	2b00      	cmp	r3, #0
 8020b02:	db02      	blt.n	8020b0a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e>
 8020b04:	42bb      	cmp	r3, r7
 8020b06:	f2c0 8184 	blt.w	8020e12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x376>
 8020b0a:	f11c 0c01 	adds.w	ip, ip, #1
 8020b0e:	f100 8172 	bmi.w	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b12:	4561      	cmp	r1, ip
 8020b14:	f2c0 816f 	blt.w	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b18:	3301      	adds	r3, #1
 8020b1a:	f100 816c 	bmi.w	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b1e:	429a      	cmp	r2, r3
 8020b20:	f2c0 8169 	blt.w	8020df6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8020b24:	9b07      	ldr	r3, [sp, #28]
 8020b26:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8020b28:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020b2a:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020b2c:	2b00      	cmp	r3, #0
 8020b2e:	f340 818e 	ble.w	8020e4e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b2>
 8020b32:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020b34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020b38:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020b3a:	e9d3 1e02 	ldrd	r1, lr, [r3, #8]
 8020b3e:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020b40:	141b      	asrs	r3, r3, #16
 8020b42:	ea4f 4c25 	mov.w	ip, r5, asr #16
 8020b46:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020b4a:	f100 81d1 	bmi.w	8020ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b4e:	f101 38ff 	add.w	r8, r1, #4294967295
 8020b52:	4543      	cmp	r3, r8
 8020b54:	f280 81cc 	bge.w	8020ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b58:	f1bc 0f00 	cmp.w	ip, #0
 8020b5c:	f2c0 81c8 	blt.w	8020ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b60:	f10e 38ff 	add.w	r8, lr, #4294967295
 8020b64:	45c4      	cmp	ip, r8
 8020b66:	f280 81c3 	bge.w	8020ef0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x454>
 8020b6a:	b209      	sxth	r1, r1
 8020b6c:	fb0c 3301 	mla	r3, ip, r1, r3
 8020b70:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020b72:	eb04 0803 	add.w	r8, r4, r3
 8020b76:	5ce3      	ldrb	r3, [r4, r3]
 8020b78:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020b7c:	ea4f 6e13 	mov.w	lr, r3, lsr #24
 8020b80:	2a00      	cmp	r2, #0
 8020b82:	f000 81aa 	beq.w	8020eda <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x43e>
 8020b86:	f898 c001 	ldrb.w	ip, [r8, #1]
 8020b8a:	f856 402c 	ldr.w	r4, [r6, ip, lsl #2]
 8020b8e:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020b90:	0e24      	lsrs	r4, r4, #24
 8020b92:	9412      	str	r4, [sp, #72]	@ 0x48
 8020b94:	b178      	cbz	r0, 8020bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020b96:	eb08 0c01 	add.w	ip, r8, r1
 8020b9a:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020b9e:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ba2:	9108      	str	r1, [sp, #32]
 8020ba4:	0e09      	lsrs	r1, r1, #24
 8020ba6:	9110      	str	r1, [sp, #64]	@ 0x40
 8020ba8:	f89c 1001 	ldrb.w	r1, [ip, #1]
 8020bac:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020bb0:	910c      	str	r1, [sp, #48]	@ 0x30
 8020bb2:	0e09      	lsrs	r1, r1, #24
 8020bb4:	9113      	str	r1, [sp, #76]	@ 0x4c
 8020bb6:	b292      	uxth	r2, r2
 8020bb8:	b280      	uxth	r0, r0
 8020bba:	fb02 f900 	mul.w	r9, r2, r0
 8020bbe:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8020bc2:	0112      	lsls	r2, r2, #4
 8020bc4:	eba2 0809 	sub.w	r8, r2, r9
 8020bc8:	b280      	uxth	r0, r0
 8020bca:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 8020bce:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8020bd0:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020bd2:	fa1f f888 	uxth.w	r8, r8
 8020bd6:	1a12      	subs	r2, r2, r0
 8020bd8:	b292      	uxth	r2, r2
 8020bda:	fb08 f101 	mul.w	r1, r8, r1
 8020bde:	fb02 110e 	mla	r1, r2, lr, r1
 8020be2:	fb00 1104 	mla	r1, r0, r4, r1
 8020be6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020be8:	fb09 1104 	mla	r1, r9, r4, r1
 8020bec:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8020bf0:	2900      	cmp	r1, #0
 8020bf2:	f000 80f5 	beq.w	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020bf6:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8020bfa:	d01b      	beq.n	8020c34 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x198>
 8020bfc:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020c00:	fb0e fa0a 	mul.w	sl, lr, sl
 8020c04:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020c08:	fb0e fe03 	mul.w	lr, lr, r3
 8020c0c:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020c10:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020c14:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020c18:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8020c1c:	4453      	add	r3, sl
 8020c1e:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8020c22:	0a1b      	lsrs	r3, r3, #8
 8020c24:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020c28:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020c2c:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8020c30:	ea43 030c 	orr.w	r3, r3, ip
 8020c34:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020c36:	2cff      	cmp	r4, #255	@ 0xff
 8020c38:	d021      	beq.n	8020c7e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e2>
 8020c3a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020c3c:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020c40:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020c42:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c46:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020c48:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020c4c:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 8020c4e:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c52:	fb04 fa0a 	mul.w	sl, r4, sl
 8020c56:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020c5a:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020c5e:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020c62:	44de      	add	lr, fp
 8020c64:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020c68:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020c6c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020c70:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020c74:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020c78:	ea4e 040a 	orr.w	r4, lr, sl
 8020c7c:	940b      	str	r4, [sp, #44]	@ 0x2c
 8020c7e:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020c80:	2cff      	cmp	r4, #255	@ 0xff
 8020c82:	d021      	beq.n	8020cc8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22c>
 8020c84:	9c08      	ldr	r4, [sp, #32]
 8020c86:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020c8a:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020c8c:	fb04 fb0b 	mul.w	fp, r4, fp
 8020c90:	9c08      	ldr	r4, [sp, #32]
 8020c92:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020c96:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8020c98:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020c9c:	fb04 fa0a 	mul.w	sl, r4, sl
 8020ca0:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020ca4:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020ca8:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020cac:	44de      	add	lr, fp
 8020cae:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020cb2:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020cb6:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020cba:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020cbe:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020cc2:	ea4e 040a 	orr.w	r4, lr, sl
 8020cc6:	9408      	str	r4, [sp, #32]
 8020cc8:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020cca:	2cff      	cmp	r4, #255	@ 0xff
 8020ccc:	d021      	beq.n	8020d12 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 8020cce:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020cd0:	f004 1bff 	and.w	fp, r4, #16711935	@ 0xff00ff
 8020cd4:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020cd6:	fb04 fb0b 	mul.w	fp, r4, fp
 8020cda:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020cdc:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8020ce0:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8020ce2:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8020ce6:	fb04 fa0a 	mul.w	sl, r4, sl
 8020cea:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020cee:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8020cf2:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8020cf6:	44de      	add	lr, fp
 8020cf8:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8020cfc:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8020d00:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8020d04:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8020d08:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8020d0c:	ea4e 040a 	orr.w	r4, lr, sl
 8020d10:	940c      	str	r4, [sp, #48]	@ 0x30
 8020d12:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020d14:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8020d18:	9c08      	ldr	r4, [sp, #32]
 8020d1a:	f003 1eff 	and.w	lr, r3, #16711935	@ 0xff00ff
 8020d1e:	fb08 fc0c 	mul.w	ip, r8, ip
 8020d22:	fb02 cc0e 	mla	ip, r2, lr, ip
 8020d26:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020d2a:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8020d2c:	fb00 cc0e 	mla	ip, r0, lr, ip
 8020d30:	f004 1eff 	and.w	lr, r4, #16711935	@ 0xff00ff
 8020d34:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8020d36:	fb09 cc0e 	mla	ip, r9, lr, ip
 8020d3a:	f404 4e7f 	and.w	lr, r4, #65280	@ 0xff00
 8020d3e:	fb08 f80e 	mul.w	r8, r8, lr
 8020d42:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020d46:	fb02 8303 	mla	r3, r2, r3, r8
 8020d4a:	9a08      	ldr	r2, [sp, #32]
 8020d4c:	f8b7 8000 	ldrh.w	r8, [r7]
 8020d50:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8020d54:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8020d56:	fb00 330a 	mla	r3, r0, sl, r3
 8020d5a:	f402 407f 	and.w	r0, r2, #65280	@ 0xff00
 8020d5e:	fb09 3900 	mla	r9, r9, r0, r3
 8020d62:	43c9      	mvns	r1, r1
 8020d64:	ea4f 2228 	mov.w	r2, r8, asr #8
 8020d68:	fa5f fe81 	uxtb.w	lr, r1
 8020d6c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8020d70:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8020d74:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8020d78:	fb02 f20e 	mul.w	r2, r2, lr
 8020d7c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8020d80:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 8020d84:	ea4c 0c09 	orr.w	ip, ip, r9
 8020d88:	1c53      	adds	r3, r2, #1
 8020d8a:	eb03 2212 	add.w	r2, r3, r2, lsr #8
 8020d8e:	ea4f 00e8 	mov.w	r0, r8, asr #3
 8020d92:	ea4f 431c 	mov.w	r3, ip, lsr #16
 8020d96:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8020d9a:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8020d9e:	4a63      	ldr	r2, [pc, #396]	@ (8020f2c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>)
 8020da0:	fb00 f00e 	mul.w	r0, r0, lr
 8020da4:	b2db      	uxtb	r3, r3
 8020da6:	ea02 2203 	and.w	r2, r2, r3, lsl #8
 8020daa:	1c43      	adds	r3, r0, #1
 8020dac:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8020db0:	ea4f 231c 	mov.w	r3, ip, lsr #8
 8020db4:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 8020db8:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 8020dbc:	b2c9      	uxtb	r1, r1
 8020dbe:	00db      	lsls	r3, r3, #3
 8020dc0:	fb01 f10e 	mul.w	r1, r1, lr
 8020dc4:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8020dc8:	4313      	orrs	r3, r2
 8020dca:	1c4a      	adds	r2, r1, #1
 8020dcc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8020dd0:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8020dd4:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8020dd8:	ea4c 0c03 	orr.w	ip, ip, r3
 8020ddc:	f8a7 c000 	strh.w	ip, [r7]
 8020de0:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020de2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 8020de4:	441a      	add	r2, r3
 8020de6:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020de8:	9225      	str	r2, [sp, #148]	@ 0x94
 8020dea:	441d      	add	r5, r3
 8020dec:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8020dee:	3b01      	subs	r3, #1
 8020df0:	3702      	adds	r7, #2
 8020df2:	9317      	str	r3, [sp, #92]	@ 0x5c
 8020df4:	e699      	b.n	8020b2a <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8020df6:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8020df8:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020dfa:	441c      	add	r4, r3
 8020dfc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8020dfe:	9425      	str	r4, [sp, #148]	@ 0x94
 8020e00:	441d      	add	r5, r3
 8020e02:	9b07      	ldr	r3, [sp, #28]
 8020e04:	3b01      	subs	r3, #1
 8020e06:	9307      	str	r3, [sp, #28]
 8020e08:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020e0a:	3302      	adds	r3, #2
 8020e0c:	930a      	str	r3, [sp, #40]	@ 0x28
 8020e0e:	e66b      	b.n	8020ae8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4c>
 8020e10:	d024      	beq.n	8020e5c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c0>
 8020e12:	9b07      	ldr	r3, [sp, #28]
 8020e14:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 8020e16:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020e18:	3b01      	subs	r3, #1
 8020e1a:	fb00 4003 	mla	r0, r0, r3, r4
 8020e1e:	1400      	asrs	r0, r0, #16
 8020e20:	f53f ae80 	bmi.w	8020b24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e24:	3901      	subs	r1, #1
 8020e26:	4288      	cmp	r0, r1
 8020e28:	f6bf ae7c 	bge.w	8020b24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e2c:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 8020e2e:	fb01 5303 	mla	r3, r1, r3, r5
 8020e32:	141b      	asrs	r3, r3, #16
 8020e34:	f53f ae76 	bmi.w	8020b24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e38:	3a01      	subs	r2, #1
 8020e3a:	4293      	cmp	r3, r2
 8020e3c:	f6bf ae72 	bge.w	8020b24 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 8020e40:	f8dd b01c 	ldr.w	fp, [sp, #28]
 8020e44:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 8020e48:	f1bb 0f00 	cmp.w	fp, #0
 8020e4c:	dc70      	bgt.n	8020f30 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x494>
 8020e4e:	9b07      	ldr	r3, [sp, #28]
 8020e50:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8020e54:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8020e56:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8020e5a:	930a      	str	r3, [sp, #40]	@ 0x28
 8020e5c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020e5e:	2b00      	cmp	r3, #0
 8020e60:	f340 81ae 	ble.w	80211c0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x724>
 8020e64:	ee30 0a04 	vadd.f32	s0, s0, s8
 8020e68:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8020e6c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8020e70:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020e72:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8020e76:	ee31 1a05 	vadd.f32	s2, s2, s10
 8020e7a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8020e7e:	eef0 6a62 	vmov.f32	s13, s5
 8020e82:	ee61 7a27 	vmul.f32	s15, s2, s15
 8020e86:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020e8a:	ee77 2a62 	vsub.f32	s5, s14, s5
 8020e8e:	edcd 6a25 	vstr	s13, [sp, #148]	@ 0x94
 8020e92:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8020e96:	eef0 6a43 	vmov.f32	s13, s6
 8020e9a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8020e9e:	ee12 2a90 	vmov	r2, s5
 8020ea2:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8020ea6:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eaa:	ee13 2a10 	vmov	r2, s6
 8020eae:	9327      	str	r3, [sp, #156]	@ 0x9c
 8020eb0:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020eb2:	fb92 f3f3 	sdiv	r3, r2, r3
 8020eb6:	9328      	str	r3, [sp, #160]	@ 0xa0
 8020eb8:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8020eba:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8020ebc:	3b01      	subs	r3, #1
 8020ebe:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8020ec2:	9316      	str	r3, [sp, #88]	@ 0x58
 8020ec4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8020ec6:	bf08      	it	eq
 8020ec8:	4613      	moveq	r3, r2
 8020eca:	ee16 5a90 	vmov	r5, s13
 8020ece:	9307      	str	r3, [sp, #28]
 8020ed0:	eeb0 3a67 	vmov.f32	s6, s15
 8020ed4:	eef0 2a47 	vmov.f32	s5, s14
 8020ed8:	e5f8      	b.n	8020acc <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30>
 8020eda:	2800      	cmp	r0, #0
 8020edc:	f43f ae6b 	beq.w	8020bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ee0:	f818 1001 	ldrb.w	r1, [r8, r1]
 8020ee4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020ee8:	9108      	str	r1, [sp, #32]
 8020eea:	0e09      	lsrs	r1, r1, #24
 8020eec:	9110      	str	r1, [sp, #64]	@ 0x40
 8020eee:	e662      	b.n	8020bb6 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11a>
 8020ef0:	f113 0801 	adds.w	r8, r3, #1
 8020ef4:	f53f af74 	bmi.w	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020ef8:	4541      	cmp	r1, r8
 8020efa:	f6ff af71 	blt.w	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020efe:	f11c 0801 	adds.w	r8, ip, #1
 8020f02:	f53f af6d 	bmi.w	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f06:	45c6      	cmp	lr, r8
 8020f08:	f6ff af6a 	blt.w	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f0c:	e9cd 3c02 	strd	r3, ip, [sp, #8]
 8020f10:	b209      	sxth	r1, r1
 8020f12:	fa0f f38e 	sxth.w	r3, lr
 8020f16:	e9cd 2004 	strd	r2, r0, [sp, #16]
 8020f1a:	9301      	str	r3, [sp, #4]
 8020f1c:	9100      	str	r1, [sp, #0]
 8020f1e:	4633      	mov	r3, r6
 8020f20:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8020f22:	9819      	ldr	r0, [sp, #100]	@ 0x64
 8020f24:	4639      	mov	r1, r7
 8020f26:	f7ff fc7a 	bl	802081e <_ZNK8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKmssiihh>
 8020f2a:	e759      	b.n	8020de0 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x344>
 8020f2c:	fffff800 	.word	0xfffff800
 8020f30:	9b25      	ldr	r3, [sp, #148]	@ 0x94
 8020f32:	9c25      	ldr	r4, [sp, #148]	@ 0x94
 8020f34:	f3c3 3203 	ubfx	r2, r3, #12, #4
 8020f38:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8020f3a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8020f3e:	1427      	asrs	r7, r4, #16
 8020f40:	142b      	asrs	r3, r5, #16
 8020f42:	fb01 7303 	mla	r3, r1, r3, r7
 8020f46:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8020f48:	18e7      	adds	r7, r4, r3
 8020f4a:	5ce3      	ldrb	r3, [r4, r3]
 8020f4c:	f856 3023 	ldr.w	r3, [r6, r3, lsl #2]
 8020f50:	f3c5 3003 	ubfx	r0, r5, #12, #4
 8020f54:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8020f58:	2a00      	cmp	r2, #0
 8020f5a:	f000 8127 	beq.w	80211ac <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8020f5e:	f897 e001 	ldrb.w	lr, [r7, #1]
 8020f62:	f856 402e 	ldr.w	r4, [r6, lr, lsl #2]
 8020f66:	940d      	str	r4, [sp, #52]	@ 0x34
 8020f68:	0e24      	lsrs	r4, r4, #24
 8020f6a:	9414      	str	r4, [sp, #80]	@ 0x50
 8020f6c:	b170      	cbz	r0, 8020f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 8020f6e:	eb07 0e01 	add.w	lr, r7, r1
 8020f72:	5c79      	ldrb	r1, [r7, r1]
 8020f74:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f78:	9109      	str	r1, [sp, #36]	@ 0x24
 8020f7a:	0e09      	lsrs	r1, r1, #24
 8020f7c:	9111      	str	r1, [sp, #68]	@ 0x44
 8020f7e:	f89e 1001 	ldrb.w	r1, [lr, #1]
 8020f82:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 8020f86:	910e      	str	r1, [sp, #56]	@ 0x38
 8020f88:	0e09      	lsrs	r1, r1, #24
 8020f8a:	9115      	str	r1, [sp, #84]	@ 0x54
 8020f8c:	b292      	uxth	r2, r2
 8020f8e:	b280      	uxth	r0, r0
 8020f90:	fb02 f800 	mul.w	r8, r2, r0
 8020f94:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 8020f98:	0112      	lsls	r2, r2, #4
 8020f9a:	eba2 0e08 	sub.w	lr, r2, r8
 8020f9e:	b280      	uxth	r0, r0
 8020fa0:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8020fa4:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8020fa6:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8020fa8:	fa1f fe8e 	uxth.w	lr, lr
 8020fac:	1a09      	subs	r1, r1, r0
 8020fae:	b289      	uxth	r1, r1
 8020fb0:	fb0e f202 	mul.w	r2, lr, r2
 8020fb4:	fb01 220c 	mla	r2, r1, ip, r2
 8020fb8:	fb00 2204 	mla	r2, r0, r4, r2
 8020fbc:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8020fbe:	fb08 2204 	mla	r2, r8, r4, r2
 8020fc2:	f3c2 2207 	ubfx	r2, r2, #8, #8
 8020fc6:	2a00      	cmp	r2, #0
 8020fc8:	f000 80e5 	beq.w	8021196 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6fa>
 8020fcc:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 8020fd0:	d019      	beq.n	8021006 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56a>
 8020fd2:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8020fd6:	fb0c fa0a 	mul.w	sl, ip, sl
 8020fda:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8020fde:	fb0c fc03 	mul.w	ip, ip, r3
 8020fe2:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8020fe6:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8020fea:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8020fee:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8020ff2:	4453      	add	r3, sl
 8020ff4:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8020ff8:	0a1b      	lsrs	r3, r3, #8
 8020ffa:	0a3f      	lsrs	r7, r7, #8
 8020ffc:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8021000:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8021004:	433b      	orrs	r3, r7
 8021006:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021008:	2cff      	cmp	r4, #255	@ 0xff
 802100a:	d020      	beq.n	802104e <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5b2>
 802100c:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 802100e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 8021012:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 8021014:	4367      	muls	r7, r4
 8021016:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021018:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 802101c:	9c14      	ldr	r4, [sp, #80]	@ 0x50
 802101e:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8021022:	fb04 fa0a 	mul.w	sl, r4, sl
 8021026:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 802102a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802102e:	44bc      	add	ip, r7
 8021030:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8021034:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021038:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802103c:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021040:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021044:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021048:	ea4c 040a 	orr.w	r4, ip, sl
 802104c:	940d      	str	r4, [sp, #52]	@ 0x34
 802104e:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021050:	2cff      	cmp	r4, #255	@ 0xff
 8021052:	d020      	beq.n	8021096 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fa>
 8021054:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021056:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 802105a:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 802105c:	4367      	muls	r7, r4
 802105e:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 8021060:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 8021064:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8021066:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802106a:	fb04 fa0a 	mul.w	sl, r4, sl
 802106e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8021072:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8021076:	44bc      	add	ip, r7
 8021078:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 802107c:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8021080:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021084:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8021088:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802108c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8021090:	ea4c 040a 	orr.w	r4, ip, sl
 8021094:	9409      	str	r4, [sp, #36]	@ 0x24
 8021096:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 8021098:	2cff      	cmp	r4, #255	@ 0xff
 802109a:	d020      	beq.n	80210de <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x642>
 802109c:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802109e:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80210a2:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80210a4:	4367      	muls	r7, r4
 80210a6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80210a8:	f404 4a7f 	and.w	sl, r4, #65280	@ 0xff00
 80210ac:	9c15      	ldr	r4, [sp, #84]	@ 0x54
 80210ae:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80210b2:	fb04 fa0a 	mul.w	sl, r4, sl
 80210b6:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80210ba:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80210be:	44bc      	add	ip, r7
 80210c0:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80210c4:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80210c8:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80210cc:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80210d0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80210d4:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80210d8:	ea4c 040a 	orr.w	r4, ip, sl
 80210dc:	940e      	str	r4, [sp, #56]	@ 0x38
 80210de:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80210e0:	f004 17ff 	and.w	r7, r4, #16711935	@ 0xff00ff
 80210e4:	9c09      	ldr	r4, [sp, #36]	@ 0x24
 80210e6:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80210ea:	fb0e f707 	mul.w	r7, lr, r7
 80210ee:	fb01 770c 	mla	r7, r1, ip, r7
 80210f2:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80210f6:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 80210f8:	fb00 770c 	mla	r7, r0, ip, r7
 80210fc:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8021100:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021102:	fb08 770c 	mla	r7, r8, ip, r7
 8021106:	f404 4c7f 	and.w	ip, r4, #65280	@ 0xff00
 802110a:	fb0e fe0c 	mul.w	lr, lr, ip
 802110e:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8021112:	fb01 e303 	mla	r3, r1, r3, lr
 8021116:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8021118:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802111c:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802111e:	fb00 330a 	mla	r3, r0, sl, r3
 8021122:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8021126:	fb08 3c0c 	mla	ip, r8, ip, r3
 802112a:	f8b9 3000 	ldrh.w	r3, [r9]
 802112e:	43d2      	mvns	r2, r2
 8021130:	1218      	asrs	r0, r3, #8
 8021132:	b2d2      	uxtb	r2, r2
 8021134:	10d9      	asrs	r1, r3, #3
 8021136:	0a3f      	lsrs	r7, r7, #8
 8021138:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802113c:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021140:	00db      	lsls	r3, r3, #3
 8021142:	4350      	muls	r0, r2
 8021144:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8021148:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802114c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021150:	b2db      	uxtb	r3, r3
 8021152:	ea47 070c 	orr.w	r7, r7, ip
 8021156:	4351      	muls	r1, r2
 8021158:	4353      	muls	r3, r2
 802115a:	1c42      	adds	r2, r0, #1
 802115c:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021160:	0c3a      	lsrs	r2, r7, #16
 8021162:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8021166:	4a18      	ldr	r2, [pc, #96]	@ (80211c8 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x72c>)
 8021168:	b2c0      	uxtb	r0, r0
 802116a:	ea02 2000 	and.w	r0, r2, r0, lsl #8
 802116e:	1c4a      	adds	r2, r1, #1
 8021170:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021174:	0a3a      	lsrs	r2, r7, #8
 8021176:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 802117a:	00c9      	lsls	r1, r1, #3
 802117c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021180:	4301      	orrs	r1, r0
 8021182:	1c58      	adds	r0, r3, #1
 8021184:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8021188:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 802118c:	f3c7 00c4 	ubfx	r0, r7, #3, #5
 8021190:	4308      	orrs	r0, r1
 8021192:	f8a9 0000 	strh.w	r0, [r9]
 8021196:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 8021198:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 802119a:	441a      	add	r2, r3
 802119c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802119e:	9225      	str	r2, [sp, #148]	@ 0x94
 80211a0:	f109 0902 	add.w	r9, r9, #2
 80211a4:	441d      	add	r5, r3
 80211a6:	f10b 3bff 	add.w	fp, fp, #4294967295
 80211aa:	e64d      	b.n	8020e48 <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ac>
 80211ac:	2800      	cmp	r0, #0
 80211ae:	f43f aeed 	beq.w	8020f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211b2:	5c79      	ldrb	r1, [r7, r1]
 80211b4:	f856 1021 	ldr.w	r1, [r6, r1, lsl #2]
 80211b8:	9109      	str	r1, [sp, #36]	@ 0x24
 80211ba:	0e09      	lsrs	r1, r1, #24
 80211bc:	9111      	str	r1, [sp, #68]	@ 0x44
 80211be:	e6e5      	b.n	8020f8c <_ZN8touchgfx8LCD16bpp62TextureMapper_L8_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4f0>
 80211c0:	b01b      	add	sp, #108	@ 0x6c
 80211c2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80211c6:	bf00      	nop
 80211c8:	fffff800 	.word	0xfffff800

080211cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>:
 80211cc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80211d0:	b085      	sub	sp, #20
 80211d2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 80211d6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 80211da:	9103      	str	r1, [sp, #12]
 80211dc:	fb00 7406 	mla	r4, r0, r6, r7
 80211e0:	eb02 0544 	add.w	r5, r2, r4, lsl #1
 80211e4:	2800      	cmp	r0, #0
 80211e6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 80211ea:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 80211ee:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 80211f2:	9501      	str	r5, [sp, #4]
 80211f4:	eb03 0904 	add.w	r9, r3, r4
 80211f8:	f2c0 8150 	blt.w	802149c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 80211fc:	4583      	cmp	fp, r0
 80211fe:	f340 814d 	ble.w	802149c <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2d0>
 8021202:	2f00      	cmp	r7, #0
 8021204:	f2c0 8146 	blt.w	8021494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 8021208:	42be      	cmp	r6, r7
 802120a:	f340 8143 	ble.w	8021494 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2c8>
 802120e:	f813 c004 	ldrb.w	ip, [r3, r4]
 8021212:	f832 3014 	ldrh.w	r3, [r2, r4, lsl #1]
 8021216:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802121a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 802121e:	4355      	muls	r5, r2
 8021220:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021224:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021228:	fb0c f203 	mul.w	r2, ip, r3
 802122c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021230:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021234:	441d      	add	r5, r3
 8021236:	f102 0320 	add.w	r3, r2, #32
 802123a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802123e:	0a1b      	lsrs	r3, r3, #8
 8021240:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021244:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021248:	431c      	orrs	r4, r3
 802124a:	1c7b      	adds	r3, r7, #1
 802124c:	f100 812b 	bmi.w	80214a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021250:	429e      	cmp	r6, r3
 8021252:	f340 8128 	ble.w	80214a6 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2da>
 8021256:	2900      	cmp	r1, #0
 8021258:	f000 8128 	beq.w	80214ac <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e0>
 802125c:	9a01      	ldr	r2, [sp, #4]
 802125e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021262:	8855      	ldrh	r5, [r2, #2]
 8021264:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021268:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 802126c:	fb08 f802 	mul.w	r8, r8, r2
 8021270:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021274:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021278:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 802127c:	435d      	muls	r5, r3
 802127e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021282:	44d0      	add	r8, sl
 8021284:	f105 0a20 	add.w	sl, r5, #32
 8021288:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 802128c:	0a2d      	lsrs	r5, r5, #8
 802128e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021292:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021296:	432a      	orrs	r2, r5
 8021298:	3001      	adds	r0, #1
 802129a:	f100 810d 	bmi.w	80214b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 802129e:	4583      	cmp	fp, r0
 80212a0:	f340 810a 	ble.w	80214b8 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2ec>
 80212a4:	f1be 0f00 	cmp.w	lr, #0
 80212a8:	f000 810b 	beq.w	80214c2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2f6>
 80212ac:	2f00      	cmp	r7, #0
 80212ae:	f2c0 8100 	blt.w	80214b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80212b2:	42be      	cmp	r6, r7
 80212b4:	f340 80fd 	ble.w	80214b2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x2e6>
 80212b8:	9801      	ldr	r0, [sp, #4]
 80212ba:	f819 5006 	ldrb.w	r5, [r9, r6]
 80212be:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 80212c2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 80212c6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 80212ca:	fb0a fa00 	mul.w	sl, sl, r0
 80212ce:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 80212d2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 80212d6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 80212da:	fb05 f808 	mul.w	r8, r5, r8
 80212de:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 80212e2:	4482      	add	sl, r0
 80212e4:	f108 0020 	add.w	r0, r8, #32
 80212e8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 80212ec:	0a00      	lsrs	r0, r0, #8
 80212ee:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 80212f2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80212f6:	ea4b 0b00 	orr.w	fp, fp, r0
 80212fa:	3701      	adds	r7, #1
 80212fc:	f100 80e6 	bmi.w	80214cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021300:	42be      	cmp	r6, r7
 8021302:	f340 80e3 	ble.w	80214cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x300>
 8021306:	2900      	cmp	r1, #0
 8021308:	f000 80e3 	beq.w	80214d2 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x306>
 802130c:	3601      	adds	r6, #1
 802130e:	9801      	ldr	r0, [sp, #4]
 8021310:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021314:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021318:	ea4f 09e7 	mov.w	r9, r7, asr #3
 802131c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021320:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021324:	fb09 f906 	mul.w	r9, r9, r6
 8021328:	fb07 f800 	mul.w	r8, r7, r0
 802132c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021330:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021334:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021338:	44d1      	add	r9, sl
 802133a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 802133e:	f108 0020 	add.w	r0, r8, #32
 8021342:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021346:	0a00      	lsrs	r0, r0, #8
 8021348:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802134c:	4330      	orrs	r0, r6
 802134e:	b28e      	uxth	r6, r1
 8021350:	fa1f f98e 	uxth.w	r9, lr
 8021354:	fb06 f809 	mul.w	r8, r6, r9
 8021358:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 802135c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021360:	0136      	lsls	r6, r6, #4
 8021362:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021366:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 802136a:	9601      	str	r6, [sp, #4]
 802136c:	ea4a 0404 	orr.w	r4, sl, r4
 8021370:	fa1f f689 	uxth.w	r6, r9
 8021374:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021378:	fb11 f90e 	smulbb	r9, r1, lr
 802137c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021380:	9602      	str	r6, [sp, #8]
 8021382:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021386:	4626      	mov	r6, r4
 8021388:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802138c:	f1ce 0410 	rsb	r4, lr, #16
 8021390:	1a64      	subs	r4, r4, r1
 8021392:	ea4a 0202 	orr.w	r2, sl, r2
 8021396:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 802139a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802139e:	434a      	muls	r2, r1
 80213a0:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 80213a4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80213a8:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80213ac:	fb04 2406 	mla	r4, r4, r6, r2
 80213b0:	ea4a 0000 	orr.w	r0, sl, r0
 80213b4:	fb09 4200 	mla	r2, r9, r0, r4
 80213b8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 80213bc:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80213c0:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 80213c4:	ea44 0b0b 	orr.w	fp, r4, fp
 80213c8:	9c01      	ldr	r4, [sp, #4]
 80213ca:	9e02      	ldr	r6, [sp, #8]
 80213cc:	9903      	ldr	r1, [sp, #12]
 80213ce:	f5c4 7480 	rsb	r4, r4, #256	@ 0x100
 80213d2:	1ba4      	subs	r4, r4, r6
 80213d4:	9e01      	ldr	r6, [sp, #4]
 80213d6:	8808      	ldrh	r0, [r1, #0]
 80213d8:	f89d 1050 	ldrb.w	r1, [sp, #80]	@ 0x50
 80213dc:	eba6 0608 	sub.w	r6, r6, r8
 80213e0:	b2b6      	uxth	r6, r6
 80213e2:	b2a4      	uxth	r4, r4
 80213e4:	4373      	muls	r3, r6
 80213e6:	fb0c 3304 	mla	r3, ip, r4, r3
 80213ea:	9c02      	ldr	r4, [sp, #8]
 80213ec:	fb04 3505 	mla	r5, r4, r5, r3
 80213f0:	fb08 5707 	mla	r7, r8, r7, r5
 80213f4:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 80213f8:	b289      	uxth	r1, r1
 80213fa:	fb0e 2e0b 	mla	lr, lr, fp, r2
 80213fe:	f3c7 2707 	ubfx	r7, r7, #8, #8
 8021402:	434f      	muls	r7, r1
 8021404:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021408:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 802140c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021410:	1c7b      	adds	r3, r7, #1
 8021412:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021416:	ea42 0e0e 	orr.w	lr, r2, lr
 802141a:	eb03 2717 	add.w	r7, r3, r7, lsr #8
 802141e:	fa1f f28e 	uxth.w	r2, lr
 8021422:	1203      	asrs	r3, r0, #8
 8021424:	ea6f 2717 	mvn.w	r7, r7, lsr #8
 8021428:	b2ff      	uxtb	r7, r7
 802142a:	1215      	asrs	r5, r2, #8
 802142c:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021430:	fb13 f307 	smulbb	r3, r3, r7
 8021434:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021438:	fb05 3501 	mla	r5, r5, r1, r3
 802143c:	10c3      	asrs	r3, r0, #3
 802143e:	10d4      	asrs	r4, r2, #3
 8021440:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8021444:	fb13 f307 	smulbb	r3, r3, r7
 8021448:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 802144c:	fb04 3401 	mla	r4, r4, r1, r3
 8021450:	00c3      	lsls	r3, r0, #3
 8021452:	00d2      	lsls	r2, r2, #3
 8021454:	b2db      	uxtb	r3, r3
 8021456:	fb13 f307 	smulbb	r3, r3, r7
 802145a:	b2d2      	uxtb	r2, r2
 802145c:	fb02 3101 	mla	r1, r2, r1, r3
 8021460:	b2ad      	uxth	r5, r5
 8021462:	b289      	uxth	r1, r1
 8021464:	b2a4      	uxth	r4, r4
 8021466:	1c6b      	adds	r3, r5, #1
 8021468:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 802146c:	1c62      	adds	r2, r4, #1
 802146e:	1c4b      	adds	r3, r1, #1
 8021470:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021474:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8021478:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 802147c:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021480:	0964      	lsrs	r4, r4, #5
 8021482:	432b      	orrs	r3, r5
 8021484:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8021488:	9a03      	ldr	r2, [sp, #12]
 802148a:	4323      	orrs	r3, r4
 802148c:	8013      	strh	r3, [r2, #0]
 802148e:	b005      	add	sp, #20
 8021490:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021494:	f04f 0c00 	mov.w	ip, #0
 8021498:	4664      	mov	r4, ip
 802149a:	e6d6      	b.n	802124a <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x7e>
 802149c:	2300      	movs	r3, #0
 802149e:	469c      	mov	ip, r3
 80214a0:	461a      	mov	r2, r3
 80214a2:	461c      	mov	r4, r3
 80214a4:	e6f8      	b.n	8021298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214a6:	2300      	movs	r3, #0
 80214a8:	461a      	mov	r2, r3
 80214aa:	e6f5      	b.n	8021298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214ac:	460b      	mov	r3, r1
 80214ae:	460a      	mov	r2, r1
 80214b0:	e6f2      	b.n	8021298 <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0xcc>
 80214b2:	2500      	movs	r5, #0
 80214b4:	46ab      	mov	fp, r5
 80214b6:	e720      	b.n	80212fa <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x12e>
 80214b8:	2700      	movs	r7, #0
 80214ba:	463d      	mov	r5, r7
 80214bc:	4638      	mov	r0, r7
 80214be:	46bb      	mov	fp, r7
 80214c0:	e745      	b.n	802134e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214c2:	4677      	mov	r7, lr
 80214c4:	4675      	mov	r5, lr
 80214c6:	4670      	mov	r0, lr
 80214c8:	46f3      	mov	fp, lr
 80214ca:	e740      	b.n	802134e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214cc:	2700      	movs	r7, #0
 80214ce:	4638      	mov	r0, r7
 80214d0:	e73d      	b.n	802134e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>
 80214d2:	460f      	mov	r7, r1
 80214d4:	4608      	mov	r0, r1
 80214d6:	e73a      	b.n	802134e <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh+0x182>

080214d8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80214d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80214dc:	b097      	sub	sp, #92	@ 0x5c
 80214de:	9214      	str	r2, [sp, #80]	@ 0x50
 80214e0:	9308      	str	r3, [sp, #32]
 80214e2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80214e4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80214e8:	9312      	str	r3, [sp, #72]	@ 0x48
 80214ea:	9111      	str	r1, [sp, #68]	@ 0x44
 80214ec:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80214f0:	9015      	str	r0, [sp, #84]	@ 0x54
 80214f2:	6850      	ldr	r0, [r2, #4]
 80214f4:	6812      	ldr	r2, [r2, #0]
 80214f6:	fb00 1303 	mla	r3, r0, r3, r1
 80214fa:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 80214fe:	9309      	str	r3, [sp, #36]	@ 0x24
 8021500:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021502:	681b      	ldr	r3, [r3, #0]
 8021504:	930b      	str	r3, [sp, #44]	@ 0x2c
 8021506:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021508:	685b      	ldr	r3, [r3, #4]
 802150a:	930c      	str	r3, [sp, #48]	@ 0x30
 802150c:	f8bd 3048 	ldrh.w	r3, [sp, #72]	@ 0x48
 8021510:	930a      	str	r3, [sp, #40]	@ 0x28
 8021512:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8021514:	2b00      	cmp	r3, #0
 8021516:	dc03      	bgt.n	8021520 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8021518:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 802151a:	2b00      	cmp	r3, #0
 802151c:	f340 83cb 	ble.w	8021cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 8021520:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8021522:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021526:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802152a:	1e48      	subs	r0, r1, #1
 802152c:	1e55      	subs	r5, r2, #1
 802152e:	9b08      	ldr	r3, [sp, #32]
 8021530:	2b00      	cmp	r3, #0
 8021532:	f340 81a3 	ble.w	802187c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a4>
 8021536:	9e21      	ldr	r6, [sp, #132]	@ 0x84
 8021538:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802153a:	1436      	asrs	r6, r6, #16
 802153c:	ea4f 4323 	mov.w	r3, r3, asr #16
 8021540:	d406      	bmi.n	8021550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021542:	4286      	cmp	r6, r0
 8021544:	da04      	bge.n	8021550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8021546:	2b00      	cmp	r3, #0
 8021548:	db02      	blt.n	8021550 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802154a:	42ab      	cmp	r3, r5
 802154c:	f2c0 8197 	blt.w	802187e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a6>
 8021550:	3601      	adds	r6, #1
 8021552:	f100 8184 	bmi.w	802185e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021556:	42b1      	cmp	r1, r6
 8021558:	f2c0 8181 	blt.w	802185e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 802155c:	3301      	adds	r3, #1
 802155e:	f100 817e 	bmi.w	802185e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021562:	429a      	cmp	r2, r3
 8021564:	f2c0 817b 	blt.w	802185e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x386>
 8021568:	9b08      	ldr	r3, [sp, #32]
 802156a:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 802156c:	9313      	str	r3, [sp, #76]	@ 0x4c
 802156e:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8021572:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021574:	2b00      	cmp	r3, #0
 8021576:	f340 81a4 	ble.w	80218c2 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 802157a:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 802157c:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 802157e:	1418      	asrs	r0, r3, #16
 8021580:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021582:	f3c3 3103 	ubfx	r1, r3, #12, #4
 8021586:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8021588:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 802158c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802158e:	142d      	asrs	r5, r5, #16
 8021590:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 8021594:	f100 81f8 	bmi.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8021598:	f102 3eff 	add.w	lr, r2, #4294967295
 802159c:	4575      	cmp	r5, lr
 802159e:	f280 81f3 	bge.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215a2:	2800      	cmp	r0, #0
 80215a4:	f2c0 81f0 	blt.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215a8:	f103 3eff 	add.w	lr, r3, #4294967295
 80215ac:	4570      	cmp	r0, lr
 80215ae:	f280 81eb 	bge.w	8021988 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 80215b2:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80215b4:	b212      	sxth	r2, r2
 80215b6:	fb00 5002 	mla	r0, r0, r2, r5
 80215ba:	fa1f fe81 	uxth.w	lr, r1
 80215be:	eb03 0a00 	add.w	sl, r3, r0
 80215c2:	ea4f 150e 	mov.w	r5, lr, lsl #4
 80215c6:	f813 9000 	ldrb.w	r9, [r3, r0]
 80215ca:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80215ce:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 80215d2:	b29b      	uxth	r3, r3
 80215d4:	f1bc 0f00 	cmp.w	ip, #0
 80215d8:	f000 81b9 	beq.w	802194e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x476>
 80215dc:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80215e0:	940d      	str	r4, [sp, #52]	@ 0x34
 80215e2:	eb0a 0b02 	add.w	fp, sl, r2
 80215e6:	fa1f fa8c 	uxth.w	sl, ip
 80215ea:	fb0a fe0e 	mul.w	lr, sl, lr
 80215ee:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80215f2:	fa1f fa8a 	uxth.w	sl, sl
 80215f6:	eba5 050e 	sub.w	r5, r5, lr
 80215fa:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80215fe:	940e      	str	r4, [sp, #56]	@ 0x38
 8021600:	eba3 030a 	sub.w	r3, r3, sl
 8021604:	b2ad      	uxth	r5, r5
 8021606:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 8021608:	b29b      	uxth	r3, r3
 802160a:	fb08 f505 	mul.w	r5, r8, r5
 802160e:	fb09 5303 	mla	r3, r9, r3, r5
 8021612:	fb0a 3304 	mla	r3, sl, r4, r3
 8021616:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 8021618:	fb0e 3304 	mla	r3, lr, r4, r3
 802161c:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021620:	2b00      	cmp	r3, #0
 8021622:	f000 810f 	beq.w	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021626:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021628:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 802162c:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 8021630:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 8021634:	f000 8190 	beq.w	8021958 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x480>
 8021638:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802163c:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021640:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021644:	fb09 f000 	mul.w	r0, r9, r0
 8021648:	fb0a fe0e 	mul.w	lr, sl, lr
 802164c:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8021650:	f100 0b20 	add.w	fp, r0, #32
 8021654:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021658:	44ce      	add	lr, r9
 802165a:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 802165e:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021662:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 8021666:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 802166a:	ea4e 0909 	orr.w	r9, lr, r9
 802166e:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021672:	8868      	ldrh	r0, [r5, #2]
 8021674:	d019      	beq.n	80216aa <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d2>
 8021676:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 802167a:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 802167e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021682:	fb08 f800 	mul.w	r8, r8, r0
 8021686:	fb0a fe0e 	mul.w	lr, sl, lr
 802168a:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 802168e:	f108 0b20 	add.w	fp, r8, #32
 8021692:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8021696:	4486      	add	lr, r0
 8021698:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 802169c:	0a00      	lsrs	r0, r0, #8
 802169e:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 80216a2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80216a6:	ea4e 0000 	orr.w	r0, lr, r0
 80216aa:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 80216ae:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 80216b2:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 80216b6:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80216ba:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 80216be:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 80216c2:	ea4e 0909 	orr.w	r9, lr, r9
 80216c6:	ea4a 0000 	orr.w	r0, sl, r0
 80216ca:	f1bc 0f00 	cmp.w	ip, #0
 80216ce:	f000 8145 	beq.w	802195c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>
 80216d2:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 80216d6:	3a01      	subs	r2, #1
 80216d8:	0052      	lsls	r2, r2, #1
 80216da:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80216dc:	3202      	adds	r2, #2
 80216de:	2cff      	cmp	r4, #255	@ 0xff
 80216e0:	eb05 0e02 	add.w	lr, r5, r2
 80216e4:	5aaa      	ldrh	r2, [r5, r2]
 80216e6:	d018      	beq.n	802171a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x242>
 80216e8:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80216ec:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80216f0:	fb04 fa02 	mul.w	sl, r4, r2
 80216f4:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80216f8:	fb08 f805 	mul.w	r8, r8, r5
 80216fc:	f10a 0520 	add.w	r5, sl, #32
 8021700:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 8021704:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 8021708:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 802170c:	4442      	add	r2, r8
 802170e:	0a2d      	lsrs	r5, r5, #8
 8021710:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 8021714:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021718:	432a      	orrs	r2, r5
 802171a:	9c0e      	ldr	r4, [sp, #56]	@ 0x38
 802171c:	f8be 5002 	ldrh.w	r5, [lr, #2]
 8021720:	2cff      	cmp	r4, #255	@ 0xff
 8021722:	d01a      	beq.n	802175a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x282>
 8021724:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 8021728:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 802172c:	fb04 fa05 	mul.w	sl, r4, r5
 8021730:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021734:	fb08 f80e 	mul.w	r8, r8, lr
 8021738:	f10a 0e20 	add.w	lr, sl, #32
 802173c:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8021740:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 8021744:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021748:	4445      	add	r5, r8
 802174a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802174e:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 8021752:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 8021756:	ea45 050e 	orr.w	r5, r5, lr
 802175a:	fb1c fe01 	smulbb	lr, ip, r1
 802175e:	ea4f 0eee 	mov.w	lr, lr, asr #3
 8021762:	f1cc 0810 	rsb	r8, ip, #16
 8021766:	eba8 0801 	sub.w	r8, r8, r1
 802176a:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 802176e:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 8021772:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 8021776:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 802177a:	4341      	muls	r1, r0
 802177c:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021780:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021784:	ea4a 0202 	orr.w	r2, sl, r2
 8021788:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 802178c:	fb09 1108 	mla	r1, r9, r8, r1
 8021790:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021794:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8021798:	fb0c 1102 	mla	r1, ip, r2, r1
 802179c:	ea4b 0505 	orr.w	r5, fp, r5
 80217a0:	fb0e 1e05 	mla	lr, lr, r5, r1
 80217a4:	ea4f 525e 	mov.w	r2, lr, lsr #21
 80217a8:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 80217ac:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80217b0:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80217b4:	ea42 0e0e 	orr.w	lr, r2, lr
 80217b8:	fa1f f28e 	uxth.w	r2, lr
 80217bc:	2bff      	cmp	r3, #255	@ 0xff
 80217be:	d103      	bne.n	80217c8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f0>
 80217c0:	9912      	ldr	r1, [sp, #72]	@ 0x48
 80217c2:	29ff      	cmp	r1, #255	@ 0xff
 80217c4:	f000 80de 	beq.w	8021984 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>
 80217c8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80217ca:	8838      	ldrh	r0, [r7, #0]
 80217cc:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80217ce:	434b      	muls	r3, r1
 80217d0:	f103 0c01 	add.w	ip, r3, #1
 80217d4:	eb0c 2323 	add.w	r3, ip, r3, asr #8
 80217d8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 80217dc:	fa5f fc83 	uxtb.w	ip, r3
 80217e0:	1203      	asrs	r3, r0, #8
 80217e2:	1215      	asrs	r5, r2, #8
 80217e4:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80217e8:	fb13 f30c 	smulbb	r3, r3, ip
 80217ec:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 80217f0:	fb05 3501 	mla	r5, r5, r1, r3
 80217f4:	10c3      	asrs	r3, r0, #3
 80217f6:	10d1      	asrs	r1, r2, #3
 80217f8:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 80217fc:	fb13 f30c 	smulbb	r3, r3, ip
 8021800:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8021804:	fb01 3104 	mla	r1, r1, r4, r3
 8021808:	00c3      	lsls	r3, r0, #3
 802180a:	00d2      	lsls	r2, r2, #3
 802180c:	b2db      	uxtb	r3, r3
 802180e:	b2d2      	uxtb	r2, r2
 8021810:	fb13 f30c 	smulbb	r3, r3, ip
 8021814:	b2ad      	uxth	r5, r5
 8021816:	fb02 3304 	mla	r3, r2, r4, r3
 802181a:	b29a      	uxth	r2, r3
 802181c:	1c6b      	adds	r3, r5, #1
 802181e:	b289      	uxth	r1, r1
 8021820:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021824:	1c53      	adds	r3, r2, #1
 8021826:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802182a:	1c4a      	adds	r2, r1, #1
 802182c:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8021830:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021834:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8021838:	0949      	lsrs	r1, r1, #5
 802183a:	432b      	orrs	r3, r5
 802183c:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021840:	430b      	orrs	r3, r1
 8021842:	803b      	strh	r3, [r7, #0]
 8021844:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021846:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021848:	4413      	add	r3, r2
 802184a:	9321      	str	r3, [sp, #132]	@ 0x84
 802184c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 802184e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021850:	441a      	add	r2, r3
 8021852:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021854:	9222      	str	r2, [sp, #136]	@ 0x88
 8021856:	3b01      	subs	r3, #1
 8021858:	3702      	adds	r7, #2
 802185a:	9313      	str	r3, [sp, #76]	@ 0x4c
 802185c:	e689      	b.n	8021572 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9a>
 802185e:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021860:	9e23      	ldr	r6, [sp, #140]	@ 0x8c
 8021862:	9c22      	ldr	r4, [sp, #136]	@ 0x88
 8021864:	4433      	add	r3, r6
 8021866:	9321      	str	r3, [sp, #132]	@ 0x84
 8021868:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802186a:	441c      	add	r4, r3
 802186c:	9b08      	ldr	r3, [sp, #32]
 802186e:	9422      	str	r4, [sp, #136]	@ 0x88
 8021870:	3b01      	subs	r3, #1
 8021872:	9308      	str	r3, [sp, #32]
 8021874:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8021876:	3302      	adds	r3, #2
 8021878:	9309      	str	r3, [sp, #36]	@ 0x24
 802187a:	e658      	b.n	802152e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56>
 802187c:	d028      	beq.n	80218d0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802187e:	9b08      	ldr	r3, [sp, #32]
 8021880:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 8021882:	9d21      	ldr	r5, [sp, #132]	@ 0x84
 8021884:	3b01      	subs	r3, #1
 8021886:	fb00 5003 	mla	r0, r0, r3, r5
 802188a:	1400      	asrs	r0, r0, #16
 802188c:	f53f ae6c 	bmi.w	8021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021890:	3901      	subs	r1, #1
 8021892:	4288      	cmp	r0, r1
 8021894:	f6bf ae68 	bge.w	8021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8021898:	9924      	ldr	r1, [sp, #144]	@ 0x90
 802189a:	9822      	ldr	r0, [sp, #136]	@ 0x88
 802189c:	fb01 0303 	mla	r3, r1, r3, r0
 80218a0:	141b      	asrs	r3, r3, #16
 80218a2:	f53f ae61 	bmi.w	8021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218a6:	3a01      	subs	r2, #1
 80218a8:	4293      	cmp	r3, r2
 80218aa:	f6bf ae5d 	bge.w	8021568 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 80218ae:	9b08      	ldr	r3, [sp, #32]
 80218b0:	f8dd e024 	ldr.w	lr, [sp, #36]	@ 0x24
 80218b4:	9313      	str	r3, [sp, #76]	@ 0x4c
 80218b6:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 80218ba:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80218bc:	2b00      	cmp	r3, #0
 80218be:	f300 8082 	bgt.w	80219c6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ee>
 80218c2:	9b08      	ldr	r3, [sp, #32]
 80218c4:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 80218c8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80218ca:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 80218ce:	9309      	str	r3, [sp, #36]	@ 0x24
 80218d0:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80218d2:	2b00      	cmp	r3, #0
 80218d4:	f340 81ef 	ble.w	8021cb6 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7de>
 80218d8:	ee30 0a04 	vadd.f32	s0, s0, s8
 80218dc:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80218e0:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80218e4:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80218e6:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80218ea:	ee31 1a05 	vadd.f32	s2, s2, s10
 80218ee:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80218f2:	eef0 6a62 	vmov.f32	s13, s5
 80218f6:	ee61 7a27 	vmul.f32	s15, s2, s15
 80218fa:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80218fe:	ee77 2a62 	vsub.f32	s5, s14, s5
 8021902:	edcd 6a21 	vstr	s13, [sp, #132]	@ 0x84
 8021906:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 802190a:	eef0 6a43 	vmov.f32	s13, s6
 802190e:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8021912:	ee12 2a90 	vmov	r2, s5
 8021916:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 802191a:	fb92 f3f3 	sdiv	r3, r2, r3
 802191e:	ee13 2a10 	vmov	r2, s6
 8021922:	9323      	str	r3, [sp, #140]	@ 0x8c
 8021924:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8021926:	fb92 f3f3 	sdiv	r3, r2, r3
 802192a:	9324      	str	r3, [sp, #144]	@ 0x90
 802192c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 802192e:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8021930:	3b01      	subs	r3, #1
 8021932:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8021936:	9311      	str	r3, [sp, #68]	@ 0x44
 8021938:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802193a:	edcd 6a22 	vstr	s13, [sp, #136]	@ 0x88
 802193e:	bf08      	it	eq
 8021940:	4613      	moveq	r3, r2
 8021942:	9308      	str	r3, [sp, #32]
 8021944:	eeb0 3a67 	vmov.f32	s6, s15
 8021948:	eef0 2a47 	vmov.f32	s5, s14
 802194c:	e5e1      	b.n	8021512 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 802194e:	fb08 f505 	mul.w	r5, r8, r5
 8021952:	fb09 5303 	mla	r3, r9, r3, r5
 8021956:	e661      	b.n	802161c <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x144>
 8021958:	4681      	mov	r9, r0
 802195a:	e688      	b.n	802166e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x196>
 802195c:	f1c1 0210 	rsb	r2, r1, #16
 8021960:	4341      	muls	r1, r0
 8021962:	fb09 1902 	mla	r9, r9, r2, r1
 8021966:	ea4f 0949 	mov.w	r9, r9, lsl #1
 802196a:	ea4f 5259 	mov.w	r2, r9, lsr #21
 802196e:	ea4f 1959 	mov.w	r9, r9, lsr #5
 8021972:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021976:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 802197a:	ea42 0909 	orr.w	r9, r2, r9
 802197e:	fa1f f289 	uxth.w	r2, r9
 8021982:	e71b      	b.n	80217bc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e4>
 8021984:	803a      	strh	r2, [r7, #0]
 8021986:	e75d      	b.n	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021988:	f115 0e01 	adds.w	lr, r5, #1
 802198c:	f53f af5a 	bmi.w	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021990:	4572      	cmp	r2, lr
 8021992:	f6ff af57 	blt.w	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 8021996:	f110 0e01 	adds.w	lr, r0, #1
 802199a:	f53f af53 	bmi.w	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 802199e:	4573      	cmp	r3, lr
 80219a0:	f6ff af50 	blt.w	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219a4:	9c12      	ldr	r4, [sp, #72]	@ 0x48
 80219a6:	9502      	str	r5, [sp, #8]
 80219a8:	b21b      	sxth	r3, r3
 80219aa:	b212      	sxth	r2, r2
 80219ac:	e9cd 0103 	strd	r0, r1, [sp, #12]
 80219b0:	9301      	str	r3, [sp, #4]
 80219b2:	9200      	str	r2, [sp, #0]
 80219b4:	e9cd c405 	strd	ip, r4, [sp, #20]
 80219b8:	e9dd 230b 	ldrd	r2, r3, [sp, #44]	@ 0x2c
 80219bc:	4639      	mov	r1, r7
 80219be:	9815      	ldr	r0, [sp, #84]	@ 0x54
 80219c0:	f7ff fc04 	bl	80211cc <_ZNK8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtPKhssiihhh>
 80219c4:	e73e      	b.n	8021844 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80219c6:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80219c8:	f3c3 3203 	ubfx	r2, r3, #12, #4
 80219cc:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80219ce:	f3c3 3503 	ubfx	r5, r3, #12, #4
 80219d2:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80219d4:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 80219d8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80219da:	141f      	asrs	r7, r3, #16
 80219dc:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80219de:	141b      	asrs	r3, r3, #16
 80219e0:	fb01 3707 	mla	r7, r1, r7, r3
 80219e4:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80219e6:	fa1f fc82 	uxth.w	ip, r2
 80219ea:	eb03 0a07 	add.w	sl, r3, r7
 80219ee:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80219f2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80219f6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80219fa:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80219fe:	b29b      	uxth	r3, r3
 8021a00:	2d00      	cmp	r5, #0
 8021a02:	f000 813d 	beq.w	8021c80 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a8>
 8021a06:	f81a 4001 	ldrb.w	r4, [sl, r1]
 8021a0a:	940f      	str	r4, [sp, #60]	@ 0x3c
 8021a0c:	eb0a 0b01 	add.w	fp, sl, r1
 8021a10:	fa1f fa85 	uxth.w	sl, r5
 8021a14:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a18:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 8021a1c:	fa1f fa8a 	uxth.w	sl, sl
 8021a20:	eba0 000c 	sub.w	r0, r0, ip
 8021a24:	eba3 030a 	sub.w	r3, r3, sl
 8021a28:	b280      	uxth	r0, r0
 8021a2a:	fb08 f000 	mul.w	r0, r8, r0
 8021a2e:	b29b      	uxth	r3, r3
 8021a30:	fb09 0303 	mla	r3, r9, r3, r0
 8021a34:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8021a36:	f89b 4001 	ldrb.w	r4, [fp, #1]
 8021a3a:	9410      	str	r4, [sp, #64]	@ 0x40
 8021a3c:	fb0a 3300 	mla	r3, sl, r0, r3
 8021a40:	fb0c 3304 	mla	r3, ip, r4, r3
 8021a44:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8021a48:	2b00      	cmp	r3, #0
 8021a4a:	f000 810b 	beq.w	8021c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021a4e:	980b      	ldr	r0, [sp, #44]	@ 0x2c
 8021a50:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8021a52:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8021a56:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 8021a5a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 8021a5e:	f000 8114 	beq.w	8021c8a <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b2>
 8021a62:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021a66:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8021a6a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021a6e:	fb09 f707 	mul.w	r7, r9, r7
 8021a72:	fb0a fc0c 	mul.w	ip, sl, ip
 8021a76:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 8021a7a:	f107 0b20 	add.w	fp, r7, #32
 8021a7e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021a82:	44cc      	add	ip, r9
 8021a84:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8021a88:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8021a8c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021a90:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8021a94:	ea4c 0909 	orr.w	r9, ip, r9
 8021a98:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 8021a9c:	8847      	ldrh	r7, [r0, #2]
 8021a9e:	d019      	beq.n	8021ad4 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5fc>
 8021aa0:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8021aa4:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8021aa8:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021aac:	fb08 f807 	mul.w	r8, r8, r7
 8021ab0:	fb0a fc0c 	mul.w	ip, sl, ip
 8021ab4:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8021ab8:	f108 0b20 	add.w	fp, r8, #32
 8021abc:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8021ac0:	44bc      	add	ip, r7
 8021ac2:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8021ac6:	0a3f      	lsrs	r7, r7, #8
 8021ac8:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8021acc:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021ad0:	ea4c 0707 	orr.w	r7, ip, r7
 8021ad4:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8021ad8:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 8021adc:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8021ae0:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8021ae4:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021ae8:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8021aec:	ea4c 0909 	orr.w	r9, ip, r9
 8021af0:	ea4a 0707 	orr.w	r7, sl, r7
 8021af4:	2d00      	cmp	r5, #0
 8021af6:	f000 80ca 	beq.w	8021c8e <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7b6>
 8021afa:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8021afe:	3901      	subs	r1, #1
 8021b00:	0049      	lsls	r1, r1, #1
 8021b02:	3102      	adds	r1, #2
 8021b04:	eb00 0c01 	add.w	ip, r0, r1
 8021b08:	5a41      	ldrh	r1, [r0, r1]
 8021b0a:	980f      	ldr	r0, [sp, #60]	@ 0x3c
 8021b0c:	28ff      	cmp	r0, #255	@ 0xff
 8021b0e:	d019      	beq.n	8021b44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66c>
 8021b10:	9c0f      	ldr	r4, [sp, #60]	@ 0x3c
 8021b12:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 8021b16:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021b1a:	fb04 fa01 	mul.w	sl, r4, r1
 8021b1e:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b22:	fb08 f800 	mul.w	r8, r8, r0
 8021b26:	f10a 0020 	add.w	r0, sl, #32
 8021b2a:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 8021b2e:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 8021b32:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021b36:	4441      	add	r1, r8
 8021b38:	0a00      	lsrs	r0, r0, #8
 8021b3a:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 8021b3e:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b42:	4301      	orrs	r1, r0
 8021b44:	9c10      	ldr	r4, [sp, #64]	@ 0x40
 8021b46:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 8021b4a:	2cff      	cmp	r4, #255	@ 0xff
 8021b4c:	d01a      	beq.n	8021b84 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ac>
 8021b4e:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8021b52:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021b56:	fb04 fa00 	mul.w	sl, r4, r0
 8021b5a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 8021b5e:	fb08 f80c 	mul.w	r8, r8, ip
 8021b62:	f10a 0c20 	add.w	ip, sl, #32
 8021b66:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 8021b6a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 8021b6e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021b72:	4440      	add	r0, r8
 8021b74:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8021b78:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 8021b7c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8021b80:	ea40 000c 	orr.w	r0, r0, ip
 8021b84:	fb15 fc02 	smulbb	ip, r5, r2
 8021b88:	ea4f 0cec 	mov.w	ip, ip, asr #3
 8021b8c:	f1c5 0810 	rsb	r8, r5, #16
 8021b90:	eba8 0802 	sub.w	r8, r8, r2
 8021b94:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8021b98:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 8021b9c:	437a      	muls	r2, r7
 8021b9e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8021ba2:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8021ba6:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021baa:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8021bae:	fb09 2208 	mla	r2, r9, r8, r2
 8021bb2:	ea4a 0101 	orr.w	r1, sl, r1
 8021bb6:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 8021bba:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8021bbe:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021bc2:	fb05 2201 	mla	r2, r5, r1, r2
 8021bc6:	ea4b 0000 	orr.w	r0, fp, r0
 8021bca:	fb0c 2200 	mla	r2, ip, r0, r2
 8021bce:	0d57      	lsrs	r7, r2, #21
 8021bd0:	0952      	lsrs	r2, r2, #5
 8021bd2:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021bd6:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021bda:	433a      	orrs	r2, r7
 8021bdc:	2bff      	cmp	r3, #255	@ 0xff
 8021bde:	b292      	uxth	r2, r2
 8021be0:	d102      	bne.n	8021be8 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8021be2:	9912      	ldr	r1, [sp, #72]	@ 0x48
 8021be4:	29ff      	cmp	r1, #255	@ 0xff
 8021be6:	d063      	beq.n	8021cb0 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7d8>
 8021be8:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8021bea:	f8be 1000 	ldrh.w	r1, [lr]
 8021bee:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 8021bf0:	4343      	muls	r3, r0
 8021bf2:	1c58      	adds	r0, r3, #1
 8021bf4:	eb00 2323 	add.w	r3, r0, r3, asr #8
 8021bf8:	ea6f 2323 	mvn.w	r3, r3, asr #8
 8021bfc:	1208      	asrs	r0, r1, #8
 8021bfe:	b2db      	uxtb	r3, r3
 8021c00:	1215      	asrs	r5, r2, #8
 8021c02:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8021c06:	fb10 f003 	smulbb	r0, r0, r3
 8021c0a:	10cf      	asrs	r7, r1, #3
 8021c0c:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8021c10:	00c9      	lsls	r1, r1, #3
 8021c12:	fb05 0504 	mla	r5, r5, r4, r0
 8021c16:	b2c9      	uxtb	r1, r1
 8021c18:	10d0      	asrs	r0, r2, #3
 8021c1a:	00d2      	lsls	r2, r2, #3
 8021c1c:	fb11 f103 	smulbb	r1, r1, r3
 8021c20:	b2d2      	uxtb	r2, r2
 8021c22:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 8021c26:	fb02 1204 	mla	r2, r2, r4, r1
 8021c2a:	fb17 f703 	smulbb	r7, r7, r3
 8021c2e:	b2ad      	uxth	r5, r5
 8021c30:	b292      	uxth	r2, r2
 8021c32:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021c36:	fb00 7004 	mla	r0, r0, r4, r7
 8021c3a:	1c6b      	adds	r3, r5, #1
 8021c3c:	1c57      	adds	r7, r2, #1
 8021c3e:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 8021c42:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 8021c46:	b280      	uxth	r0, r0
 8021c48:	f3c7 27c4 	ubfx	r7, r7, #11, #5
 8021c4c:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 8021c50:	433d      	orrs	r5, r7
 8021c52:	1c47      	adds	r7, r0, #1
 8021c54:	eb07 2710 	add.w	r7, r7, r0, lsr #8
 8021c58:	097f      	lsrs	r7, r7, #5
 8021c5a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8021c5e:	433d      	orrs	r5, r7
 8021c60:	f8ae 5000 	strh.w	r5, [lr]
 8021c64:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 8021c66:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 8021c68:	4413      	add	r3, r2
 8021c6a:	9321      	str	r3, [sp, #132]	@ 0x84
 8021c6c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8021c6e:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021c70:	441a      	add	r2, r3
 8021c72:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8021c74:	9222      	str	r2, [sp, #136]	@ 0x88
 8021c76:	3b01      	subs	r3, #1
 8021c78:	f10e 0e02 	add.w	lr, lr, #2
 8021c7c:	9313      	str	r3, [sp, #76]	@ 0x4c
 8021c7e:	e61c      	b.n	80218ba <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e2>
 8021c80:	fb08 f000 	mul.w	r0, r8, r0
 8021c84:	fb09 0303 	mla	r3, r9, r3, r0
 8021c88:	e6dc      	b.n	8021a44 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x56c>
 8021c8a:	46b9      	mov	r9, r7
 8021c8c:	e704      	b.n	8021a98 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5c0>
 8021c8e:	f1c2 0110 	rsb	r1, r2, #16
 8021c92:	437a      	muls	r2, r7
 8021c94:	fb09 2901 	mla	r9, r9, r1, r2
 8021c98:	ea4f 0949 	mov.w	r9, r9, lsl #1
 8021c9c:	ea4f 5059 	mov.w	r0, r9, lsr #21
 8021ca0:	ea4f 1259 	mov.w	r2, r9, lsr #5
 8021ca4:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021ca8:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021cac:	4302      	orrs	r2, r0
 8021cae:	e795      	b.n	8021bdc <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x704>
 8021cb0:	f8ae 2000 	strh.w	r2, [lr]
 8021cb4:	e7d6      	b.n	8021c64 <_ZN8touchgfx8LCD16bpp55TextureMapper_RGB565_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78c>
 8021cb6:	b017      	add	sp, #92	@ 0x5c
 8021cb8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>:
 8021cbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021cc0:	b085      	sub	sp, #20
 8021cc2:	e9dd 7010 	ldrd	r7, r0, [sp, #64]	@ 0x40
 8021cc6:	f9bd 6038 	ldrsh.w	r6, [sp, #56]	@ 0x38
 8021cca:	9103      	str	r1, [sp, #12]
 8021ccc:	fb00 7406 	mla	r4, r0, r6, r7
 8021cd0:	eb03 0544 	add.w	r5, r3, r4, lsl #1
 8021cd4:	2800      	cmp	r0, #0
 8021cd6:	f9bd b03c 	ldrsh.w	fp, [sp, #60]	@ 0x3c
 8021cda:	f89d 1048 	ldrb.w	r1, [sp, #72]	@ 0x48
 8021cde:	f89d e04c 	ldrb.w	lr, [sp, #76]	@ 0x4c
 8021ce2:	9501      	str	r5, [sp, #4]
 8021ce4:	eb02 0904 	add.w	r9, r2, r4
 8021ce8:	f2c0 8141 	blt.w	8021f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021cec:	4583      	cmp	fp, r0
 8021cee:	f340 813e 	ble.w	8021f6e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2b2>
 8021cf2:	2f00      	cmp	r7, #0
 8021cf4:	f2c0 8137 	blt.w	8021f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021cf8:	42be      	cmp	r6, r7
 8021cfa:	f340 8134 	ble.w	8021f66 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2aa>
 8021cfe:	f812 c004 	ldrb.w	ip, [r2, r4]
 8021d02:	f833 3014 	ldrh.w	r3, [r3, r4, lsl #1]
 8021d06:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8021d0a:	f423 65fc 	bic.w	r5, r3, #2016	@ 0x7e0
 8021d0e:	4355      	muls	r5, r2
 8021d10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021d14:	f64f 041f 	movw	r4, #63519	@ 0xf81f
 8021d18:	fb0c f203 	mul.w	r2, ip, r3
 8021d1c:	ea04 1355 	and.w	r3, r4, r5, lsr #5
 8021d20:	f605 0501 	addw	r5, r5, #2049	@ 0x801
 8021d24:	441d      	add	r5, r3
 8021d26:	f102 0320 	add.w	r3, r2, #32
 8021d2a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8021d2e:	0a1b      	lsrs	r3, r3, #8
 8021d30:	ea04 1455 	and.w	r4, r4, r5, lsr #5
 8021d34:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8021d38:	431c      	orrs	r4, r3
 8021d3a:	1c7b      	adds	r3, r7, #1
 8021d3c:	f100 811c 	bmi.w	8021f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d40:	429e      	cmp	r6, r3
 8021d42:	f340 8119 	ble.w	8021f78 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2bc>
 8021d46:	2900      	cmp	r1, #0
 8021d48:	f000 8119 	beq.w	8021f7e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c2>
 8021d4c:	9a01      	ldr	r2, [sp, #4]
 8021d4e:	f899 3001 	ldrb.w	r3, [r9, #1]
 8021d52:	8855      	ldrh	r5, [r2, #2]
 8021d54:	ea4f 08e3 	mov.w	r8, r3, asr #3
 8021d58:	f425 62fc 	bic.w	r2, r5, #2016	@ 0x7e0
 8021d5c:	fb08 f802 	mul.w	r8, r8, r2
 8021d60:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021d64:	f64f 021f 	movw	r2, #63519	@ 0xf81f
 8021d68:	ea02 1a58 	and.w	sl, r2, r8, lsr #5
 8021d6c:	435d      	muls	r5, r3
 8021d6e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8021d72:	44d0      	add	r8, sl
 8021d74:	f105 0a20 	add.w	sl, r5, #32
 8021d78:	eb0a 2515 	add.w	r5, sl, r5, lsr #8
 8021d7c:	0a2d      	lsrs	r5, r5, #8
 8021d7e:	ea02 1258 	and.w	r2, r2, r8, lsr #5
 8021d82:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8021d86:	432a      	orrs	r2, r5
 8021d88:	3001      	adds	r0, #1
 8021d8a:	f100 80fe 	bmi.w	8021f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d8e:	4583      	cmp	fp, r0
 8021d90:	f340 80fb 	ble.w	8021f8a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2ce>
 8021d94:	f1be 0f00 	cmp.w	lr, #0
 8021d98:	f000 80fc 	beq.w	8021f94 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2d8>
 8021d9c:	2f00      	cmp	r7, #0
 8021d9e:	f2c0 80f1 	blt.w	8021f84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021da2:	42be      	cmp	r6, r7
 8021da4:	f340 80ee 	ble.w	8021f84 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2c8>
 8021da8:	9801      	ldr	r0, [sp, #4]
 8021daa:	f819 5006 	ldrb.w	r5, [r9, r6]
 8021dae:	f830 8016 	ldrh.w	r8, [r0, r6, lsl #1]
 8021db2:	ea4f 0ae5 	mov.w	sl, r5, asr #3
 8021db6:	f428 60fc 	bic.w	r0, r8, #2016	@ 0x7e0
 8021dba:	fb0a fa00 	mul.w	sl, sl, r0
 8021dbe:	f64f 0b1f 	movw	fp, #63519	@ 0xf81f
 8021dc2:	f408 68fc 	and.w	r8, r8, #2016	@ 0x7e0
 8021dc6:	ea0b 105a 	and.w	r0, fp, sl, lsr #5
 8021dca:	fb05 f808 	mul.w	r8, r5, r8
 8021dce:	f60a 0a01 	addw	sl, sl, #2049	@ 0x801
 8021dd2:	4482      	add	sl, r0
 8021dd4:	f108 0020 	add.w	r0, r8, #32
 8021dd8:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021ddc:	0a00      	lsrs	r0, r0, #8
 8021dde:	ea0b 1b5a 	and.w	fp, fp, sl, lsr #5
 8021de2:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021de6:	ea4b 0b00 	orr.w	fp, fp, r0
 8021dea:	3701      	adds	r7, #1
 8021dec:	f100 80d7 	bmi.w	8021f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021df0:	42be      	cmp	r6, r7
 8021df2:	f340 80d4 	ble.w	8021f9e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e2>
 8021df6:	2900      	cmp	r1, #0
 8021df8:	f000 80d4 	beq.w	8021fa4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x2e8>
 8021dfc:	3601      	adds	r6, #1
 8021dfe:	9801      	ldr	r0, [sp, #4]
 8021e00:	f819 7006 	ldrb.w	r7, [r9, r6]
 8021e04:	f830 0016 	ldrh.w	r0, [r0, r6, lsl #1]
 8021e08:	ea4f 09e7 	mov.w	r9, r7, asr #3
 8021e0c:	f420 66fc 	bic.w	r6, r0, #2016	@ 0x7e0
 8021e10:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e14:	fb09 f906 	mul.w	r9, r9, r6
 8021e18:	fb07 f800 	mul.w	r8, r7, r0
 8021e1c:	f64f 001f 	movw	r0, #63519	@ 0xf81f
 8021e20:	ea00 1a59 	and.w	sl, r0, r9, lsr #5
 8021e24:	f609 0901 	addw	r9, r9, #2049	@ 0x801
 8021e28:	44d1      	add	r9, sl
 8021e2a:	ea00 1659 	and.w	r6, r0, r9, lsr #5
 8021e2e:	f108 0020 	add.w	r0, r8, #32
 8021e32:	eb00 2018 	add.w	r0, r0, r8, lsr #8
 8021e36:	0a00      	lsrs	r0, r0, #8
 8021e38:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8021e3c:	4330      	orrs	r0, r6
 8021e3e:	b28e      	uxth	r6, r1
 8021e40:	fa1f f98e 	uxth.w	r9, lr
 8021e44:	fb06 f809 	mul.w	r8, r6, r9
 8021e48:	ea4f 4a04 	mov.w	sl, r4, lsl #16
 8021e4c:	ebc8 1909 	rsb	r9, r8, r9, lsl #4
 8021e50:	0136      	lsls	r6, r6, #4
 8021e52:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021e56:	f424 64fc 	bic.w	r4, r4, #2016	@ 0x7e0
 8021e5a:	9601      	str	r6, [sp, #4]
 8021e5c:	ea4a 0404 	orr.w	r4, sl, r4
 8021e60:	fa1f f689 	uxth.w	r6, r9
 8021e64:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8021e68:	fb11 f90e 	smulbb	r9, r1, lr
 8021e6c:	f3c9 09c7 	ubfx	r9, r9, #3, #8
 8021e70:	9602      	str	r6, [sp, #8]
 8021e72:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021e76:	4626      	mov	r6, r4
 8021e78:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8021e7c:	f1ce 0410 	rsb	r4, lr, #16
 8021e80:	1a64      	subs	r4, r4, r1
 8021e82:	ea4a 0202 	orr.w	r2, sl, r2
 8021e86:	ebc9 0141 	rsb	r1, r9, r1, lsl #1
 8021e8a:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 8021e8e:	434a      	muls	r2, r1
 8021e90:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8021e94:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8021e98:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8021e9c:	fb04 2406 	mla	r4, r4, r6, r2
 8021ea0:	ea4a 0000 	orr.w	r0, sl, r0
 8021ea4:	fb09 4200 	mla	r2, r9, r0, r4
 8021ea8:	ea4f 440b 	mov.w	r4, fp, lsl #16
 8021eac:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8021eb0:	9801      	ldr	r0, [sp, #4]
 8021eb2:	9903      	ldr	r1, [sp, #12]
 8021eb4:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8021eb8:	ea44 0b0b 	orr.w	fp, r4, fp
 8021ebc:	9c02      	ldr	r4, [sp, #8]
 8021ebe:	8809      	ldrh	r1, [r1, #0]
 8021ec0:	f5c0 7080 	rsb	r0, r0, #256	@ 0x100
 8021ec4:	1b00      	subs	r0, r0, r4
 8021ec6:	9c01      	ldr	r4, [sp, #4]
 8021ec8:	eba4 0608 	sub.w	r6, r4, r8
 8021ecc:	b2b6      	uxth	r6, r6
 8021ece:	b280      	uxth	r0, r0
 8021ed0:	4373      	muls	r3, r6
 8021ed2:	fb0c 3300 	mla	r3, ip, r0, r3
 8021ed6:	9802      	ldr	r0, [sp, #8]
 8021ed8:	ebc9 0e4e 	rsb	lr, r9, lr, lsl #1
 8021edc:	fb00 3505 	mla	r5, r0, r5, r3
 8021ee0:	fb0e 2e0b 	mla	lr, lr, fp, r2
 8021ee4:	fb08 5707 	mla	r7, r8, r7, r5
 8021ee8:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8021eec:	120b      	asrs	r3, r1, #8
 8021eee:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8021ef2:	ea6f 2727 	mvn.w	r7, r7, asr #8
 8021ef6:	b2ff      	uxtb	r7, r7
 8021ef8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8021efc:	10c8      	asrs	r0, r1, #3
 8021efe:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 8021f02:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8021f06:	00c9      	lsls	r1, r1, #3
 8021f08:	437b      	muls	r3, r7
 8021f0a:	ea42 0e0e 	orr.w	lr, r2, lr
 8021f0e:	b2c9      	uxtb	r1, r1
 8021f10:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8021f14:	fa1f f28e 	uxth.w	r2, lr
 8021f18:	4378      	muls	r0, r7
 8021f1a:	434f      	muls	r7, r1
 8021f1c:	1c59      	adds	r1, r3, #1
 8021f1e:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 8021f22:	1213      	asrs	r3, r2, #8
 8021f24:	f023 0307 	bic.w	r3, r3, #7
 8021f28:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 8021f2c:	1c41      	adds	r1, r0, #1
 8021f2e:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 8021f32:	10d1      	asrs	r1, r2, #3
 8021f34:	f021 0103 	bic.w	r1, r1, #3
 8021f38:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 8021f3c:	021b      	lsls	r3, r3, #8
 8021f3e:	00c9      	lsls	r1, r1, #3
 8021f40:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8021f44:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8021f48:	430b      	orrs	r3, r1
 8021f4a:	1c79      	adds	r1, r7, #1
 8021f4c:	eb01 2717 	add.w	r7, r1, r7, lsr #8
 8021f50:	00d2      	lsls	r2, r2, #3
 8021f52:	eb02 2217 	add.w	r2, r2, r7, lsr #8
 8021f56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8021f5a:	431a      	orrs	r2, r3
 8021f5c:	9b03      	ldr	r3, [sp, #12]
 8021f5e:	801a      	strh	r2, [r3, #0]
 8021f60:	b005      	add	sp, #20
 8021f62:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8021f66:	f04f 0c00 	mov.w	ip, #0
 8021f6a:	4664      	mov	r4, ip
 8021f6c:	e6e5      	b.n	8021d3a <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x7e>
 8021f6e:	2300      	movs	r3, #0
 8021f70:	469c      	mov	ip, r3
 8021f72:	461a      	mov	r2, r3
 8021f74:	461c      	mov	r4, r3
 8021f76:	e707      	b.n	8021d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f78:	2300      	movs	r3, #0
 8021f7a:	461a      	mov	r2, r3
 8021f7c:	e704      	b.n	8021d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f7e:	460b      	mov	r3, r1
 8021f80:	460a      	mov	r2, r1
 8021f82:	e701      	b.n	8021d88 <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0xcc>
 8021f84:	2500      	movs	r5, #0
 8021f86:	46ab      	mov	fp, r5
 8021f88:	e72f      	b.n	8021dea <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x12e>
 8021f8a:	2700      	movs	r7, #0
 8021f8c:	463d      	mov	r5, r7
 8021f8e:	4638      	mov	r0, r7
 8021f90:	46bb      	mov	fp, r7
 8021f92:	e754      	b.n	8021e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f94:	4677      	mov	r7, lr
 8021f96:	4675      	mov	r5, lr
 8021f98:	4670      	mov	r0, lr
 8021f9a:	46f3      	mov	fp, lr
 8021f9c:	e74f      	b.n	8021e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021f9e:	2700      	movs	r7, #0
 8021fa0:	4638      	mov	r0, r7
 8021fa2:	e74c      	b.n	8021e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
 8021fa4:	460f      	mov	r7, r1
 8021fa6:	4608      	mov	r0, r1
 8021fa8:	e749      	b.n	8021e3e <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh+0x182>
	...

08021fac <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8021fac:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8021fb0:	b093      	sub	sp, #76	@ 0x4c
 8021fb2:	9210      	str	r2, [sp, #64]	@ 0x40
 8021fb4:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8021fb6:	910e      	str	r1, [sp, #56]	@ 0x38
 8021fb8:	9306      	str	r3, [sp, #24]
 8021fba:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8021fbe:	9011      	str	r0, [sp, #68]	@ 0x44
 8021fc0:	6850      	ldr	r0, [r2, #4]
 8021fc2:	6812      	ldr	r2, [r2, #0]
 8021fc4:	fb00 1303 	mla	r3, r0, r3, r1
 8021fc8:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8021fcc:	9307      	str	r3, [sp, #28]
 8021fce:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021fd0:	681b      	ldr	r3, [r3, #0]
 8021fd2:	9308      	str	r3, [sp, #32]
 8021fd4:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021fd6:	685b      	ldr	r3, [r3, #4]
 8021fd8:	9309      	str	r3, [sp, #36]	@ 0x24
 8021fda:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8021fdc:	2b00      	cmp	r3, #0
 8021fde:	dc03      	bgt.n	8021fe8 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c>
 8021fe0:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8021fe2:	2b00      	cmp	r3, #0
 8021fe4:	f340 83b4 	ble.w	8022750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8021fe8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8021fea:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8021fee:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8021ff2:	1e48      	subs	r0, r1, #1
 8021ff4:	1e55      	subs	r5, r2, #1
 8021ff6:	9b06      	ldr	r3, [sp, #24]
 8021ff8:	2b00      	cmp	r3, #0
 8021ffa:	f340 8163 	ble.w	80222c4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x318>
 8021ffe:	9e1d      	ldr	r6, [sp, #116]	@ 0x74
 8022000:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022002:	1436      	asrs	r6, r6, #16
 8022004:	ea4f 4323 	mov.w	r3, r3, asr #16
 8022008:	d406      	bmi.n	8022018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802200a:	4286      	cmp	r6, r0
 802200c:	da04      	bge.n	8022018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 802200e:	2b00      	cmp	r3, #0
 8022010:	db02      	blt.n	8022018 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c>
 8022012:	42ab      	cmp	r3, r5
 8022014:	f2c0 8157 	blt.w	80222c6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31a>
 8022018:	3601      	adds	r6, #1
 802201a:	f100 8144 	bmi.w	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802201e:	42b1      	cmp	r1, r6
 8022020:	f2c0 8141 	blt.w	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022024:	3301      	adds	r3, #1
 8022026:	f100 813e 	bmi.w	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 802202a:	429a      	cmp	r2, r3
 802202c:	f2c0 813b 	blt.w	80222a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2fa>
 8022030:	9b06      	ldr	r3, [sp, #24]
 8022032:	9f07      	ldr	r7, [sp, #28]
 8022034:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022036:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 802203a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802203c:	2b00      	cmp	r3, #0
 802203e:	f340 8164 	ble.w	802230a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35e>
 8022042:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022044:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8022046:	1418      	asrs	r0, r3, #16
 8022048:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802204a:	f3c3 3103 	ubfx	r1, r3, #12, #4
 802204e:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 8022050:	f3c3 3c03 	ubfx	ip, r3, #12, #4
 8022054:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022056:	142d      	asrs	r5, r5, #16
 8022058:	e9d3 2302 	ldrd	r2, r3, [r3, #8]
 802205c:	f100 81ee 	bmi.w	802243c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022060:	f102 3eff 	add.w	lr, r2, #4294967295
 8022064:	4575      	cmp	r5, lr
 8022066:	f280 81e9 	bge.w	802243c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802206a:	2800      	cmp	r0, #0
 802206c:	f2c0 81e6 	blt.w	802243c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 8022070:	f103 3eff 	add.w	lr, r3, #4294967295
 8022074:	4570      	cmp	r0, lr
 8022076:	f280 81e1 	bge.w	802243c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x490>
 802207a:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802207c:	b212      	sxth	r2, r2
 802207e:	fb00 5002 	mla	r0, r0, r2, r5
 8022082:	fa1f fe81 	uxth.w	lr, r1
 8022086:	eb03 0a00 	add.w	sl, r3, r0
 802208a:	ea4f 150e 	mov.w	r5, lr, lsl #4
 802208e:	f813 9000 	ldrb.w	r9, [r3, r0]
 8022092:	f89a 8001 	ldrb.w	r8, [sl, #1]
 8022096:	f5c5 7380 	rsb	r3, r5, #256	@ 0x100
 802209a:	b29b      	uxth	r3, r3
 802209c:	f1bc 0f00 	cmp.w	ip, #0
 80220a0:	f000 8179 	beq.w	8022396 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ea>
 80220a4:	f81a 4002 	ldrb.w	r4, [sl, r2]
 80220a8:	940a      	str	r4, [sp, #40]	@ 0x28
 80220aa:	eb0a 0b02 	add.w	fp, sl, r2
 80220ae:	fa1f fa8c 	uxth.w	sl, ip
 80220b2:	fb0a fe0e 	mul.w	lr, sl, lr
 80220b6:	ebce 1a0a 	rsb	sl, lr, sl, lsl #4
 80220ba:	fa1f fa8a 	uxth.w	sl, sl
 80220be:	eba5 050e 	sub.w	r5, r5, lr
 80220c2:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80220c6:	940b      	str	r4, [sp, #44]	@ 0x2c
 80220c8:	eba3 030a 	sub.w	r3, r3, sl
 80220cc:	b2ad      	uxth	r5, r5
 80220ce:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80220d0:	b29b      	uxth	r3, r3
 80220d2:	fb08 f505 	mul.w	r5, r8, r5
 80220d6:	fb09 5303 	mla	r3, r9, r3, r5
 80220da:	fb0a 3304 	mla	r3, sl, r4, r3
 80220de:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80220e0:	fb0e 3304 	mla	r3, lr, r4, r3
 80220e4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80220e8:	2b00      	cmp	r3, #0
 80220ea:	f000 80cf 	beq.w	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 80220ee:	9c08      	ldr	r4, [sp, #32]
 80220f0:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 80220f4:	eb04 0540 	add.w	r5, r4, r0, lsl #1
 80220f8:	f834 0010 	ldrh.w	r0, [r4, r0, lsl #1]
 80220fc:	f000 8150 	beq.w	80223a0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f4>
 8022100:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022104:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 8022108:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802210c:	fb09 f000 	mul.w	r0, r9, r0
 8022110:	fb0a fe0e 	mul.w	lr, sl, lr
 8022114:	ea06 195e 	and.w	r9, r6, lr, lsr #5
 8022118:	f100 0b20 	add.w	fp, r0, #32
 802211c:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 8022120:	44ce      	add	lr, r9
 8022122:	eb0b 2910 	add.w	r9, fp, r0, lsr #8
 8022126:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802212a:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802212e:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022132:	ea4e 0909 	orr.w	r9, lr, r9
 8022136:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802213a:	8868      	ldrh	r0, [r5, #2]
 802213c:	d019      	beq.n	8022172 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c6>
 802213e:	f420 6efc 	bic.w	lr, r0, #2016	@ 0x7e0
 8022142:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022146:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802214a:	fb08 f800 	mul.w	r8, r8, r0
 802214e:	fb0a fe0e 	mul.w	lr, sl, lr
 8022152:	ea06 105e 	and.w	r0, r6, lr, lsr #5
 8022156:	f108 0b20 	add.w	fp, r8, #32
 802215a:	f60e 0e01 	addw	lr, lr, #2049	@ 0x801
 802215e:	4486      	add	lr, r0
 8022160:	eb0b 2018 	add.w	r0, fp, r8, lsr #8
 8022164:	0a00      	lsrs	r0, r0, #8
 8022166:	ea06 1e5e 	and.w	lr, r6, lr, lsr #5
 802216a:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802216e:	ea4e 0000 	orr.w	r0, lr, r0
 8022172:	ea4f 4e09 	mov.w	lr, r9, lsl #16
 8022176:	ea4f 4a00 	mov.w	sl, r0, lsl #16
 802217a:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 802217e:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022182:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022186:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802218a:	ea4e 0909 	orr.w	r9, lr, r9
 802218e:	ea4a 0000 	orr.w	r0, sl, r0
 8022192:	f1bc 0f00 	cmp.w	ip, #0
 8022196:	f000 8105 	beq.w	80223a4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802219a:	f102 4200 	add.w	r2, r2, #2147483648	@ 0x80000000
 802219e:	3a01      	subs	r2, #1
 80221a0:	0052      	lsls	r2, r2, #1
 80221a2:	9c0a      	ldr	r4, [sp, #40]	@ 0x28
 80221a4:	3202      	adds	r2, #2
 80221a6:	2cff      	cmp	r4, #255	@ 0xff
 80221a8:	eb05 0e02 	add.w	lr, r5, r2
 80221ac:	5aaa      	ldrh	r2, [r5, r2]
 80221ae:	d018      	beq.n	80221e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x236>
 80221b0:	f422 65fc 	bic.w	r5, r2, #2016	@ 0x7e0
 80221b4:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80221b8:	fb04 fa02 	mul.w	sl, r4, r2
 80221bc:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221c0:	fb08 f805 	mul.w	r8, r8, r5
 80221c4:	f10a 0520 	add.w	r5, sl, #32
 80221c8:	ea06 1258 	and.w	r2, r6, r8, lsr #5
 80221cc:	eb05 251a 	add.w	r5, r5, sl, lsr #8
 80221d0:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80221d4:	4442      	add	r2, r8
 80221d6:	0a2d      	lsrs	r5, r5, #8
 80221d8:	ea06 1252 	and.w	r2, r6, r2, lsr #5
 80221dc:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80221e0:	432a      	orrs	r2, r5
 80221e2:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80221e4:	f8be 5002 	ldrh.w	r5, [lr, #2]
 80221e8:	2cff      	cmp	r4, #255	@ 0xff
 80221ea:	d01a      	beq.n	8022222 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x276>
 80221ec:	f425 6efc 	bic.w	lr, r5, #2016	@ 0x7e0
 80221f0:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 80221f4:	fb04 fa05 	mul.w	sl, r4, r5
 80221f8:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80221fc:	fb08 f80e 	mul.w	r8, r8, lr
 8022200:	f10a 0e20 	add.w	lr, sl, #32
 8022204:	ea06 1558 	and.w	r5, r6, r8, lsr #5
 8022208:	eb0e 2e1a 	add.w	lr, lr, sl, lsr #8
 802220c:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022210:	4445      	add	r5, r8
 8022212:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8022216:	ea06 1555 	and.w	r5, r6, r5, lsr #5
 802221a:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 802221e:	ea45 050e 	orr.w	r5, r5, lr
 8022222:	fb1c fe01 	smulbb	lr, ip, r1
 8022226:	ea4f 0eee 	mov.w	lr, lr, asr #3
 802222a:	f1cc 0810 	rsb	r8, ip, #16
 802222e:	eba8 0801 	sub.w	r8, r8, r1
 8022232:	ea4f 4a02 	mov.w	sl, r2, lsl #16
 8022236:	ebce 0141 	rsb	r1, lr, r1, lsl #1
 802223a:	eb0e 0848 	add.w	r8, lr, r8, lsl #1
 802223e:	ea4f 4b05 	mov.w	fp, r5, lsl #16
 8022242:	4341      	muls	r1, r0
 8022244:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022248:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802224c:	ea4a 0202 	orr.w	r2, sl, r2
 8022250:	ebce 0c4c 	rsb	ip, lr, ip, lsl #1
 8022254:	fb09 1108 	mla	r1, r9, r8, r1
 8022258:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802225c:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022260:	fb0c 1102 	mla	r1, ip, r2, r1
 8022264:	ea4b 0505 	orr.w	r5, fp, r5
 8022268:	fb0e 1e05 	mla	lr, lr, r5, r1
 802226c:	ea4f 525e 	mov.w	r2, lr, lsr #21
 8022270:	ea4f 1e5e 	mov.w	lr, lr, lsr #5
 8022274:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022278:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 802227c:	ea42 0e0e 	orr.w	lr, r2, lr
 8022280:	fa1f f28e 	uxth.w	r2, lr
 8022284:	2bff      	cmp	r3, #255	@ 0xff
 8022286:	f040 80a1 	bne.w	80223cc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x420>
 802228a:	803a      	strh	r2, [r7, #0]
 802228c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802228e:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 8022290:	4413      	add	r3, r2
 8022292:	931d      	str	r3, [sp, #116]	@ 0x74
 8022294:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8022296:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022298:	441a      	add	r2, r3
 802229a:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 802229c:	921e      	str	r2, [sp, #120]	@ 0x78
 802229e:	3b01      	subs	r3, #1
 80222a0:	3702      	adds	r7, #2
 80222a2:	930f      	str	r3, [sp, #60]	@ 0x3c
 80222a4:	e6c9      	b.n	802203a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 80222a6:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80222a8:	9e1f      	ldr	r6, [sp, #124]	@ 0x7c
 80222aa:	9c1e      	ldr	r4, [sp, #120]	@ 0x78
 80222ac:	4433      	add	r3, r6
 80222ae:	931d      	str	r3, [sp, #116]	@ 0x74
 80222b0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80222b2:	441c      	add	r4, r3
 80222b4:	9b06      	ldr	r3, [sp, #24]
 80222b6:	941e      	str	r4, [sp, #120]	@ 0x78
 80222b8:	3b01      	subs	r3, #1
 80222ba:	9306      	str	r3, [sp, #24]
 80222bc:	9b07      	ldr	r3, [sp, #28]
 80222be:	3302      	adds	r3, #2
 80222c0:	9307      	str	r3, [sp, #28]
 80222c2:	e698      	b.n	8021ff6 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4a>
 80222c4:	d028      	beq.n	8022318 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x36c>
 80222c6:	9b06      	ldr	r3, [sp, #24]
 80222c8:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 80222ca:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 80222cc:	3b01      	subs	r3, #1
 80222ce:	fb00 5003 	mla	r0, r0, r3, r5
 80222d2:	1400      	asrs	r0, r0, #16
 80222d4:	f53f aeac 	bmi.w	8022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222d8:	3901      	subs	r1, #1
 80222da:	4288      	cmp	r0, r1
 80222dc:	f6bf aea8 	bge.w	8022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222e0:	9920      	ldr	r1, [sp, #128]	@ 0x80
 80222e2:	981e      	ldr	r0, [sp, #120]	@ 0x78
 80222e4:	fb01 0303 	mla	r3, r1, r3, r0
 80222e8:	141b      	asrs	r3, r3, #16
 80222ea:	f53f aea1 	bmi.w	8022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222ee:	3a01      	subs	r2, #1
 80222f0:	4293      	cmp	r3, r2
 80222f2:	f6bf ae9d 	bge.w	8022030 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x84>
 80222f6:	9b06      	ldr	r3, [sp, #24]
 80222f8:	f8dd e01c 	ldr.w	lr, [sp, #28]
 80222fc:	930f      	str	r3, [sp, #60]	@ 0x3c
 80222fe:	f64f 061f 	movw	r6, #63519	@ 0xf81f
 8022302:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8022304:	2b00      	cmp	r3, #0
 8022306:	f300 80b6 	bgt.w	8022476 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ca>
 802230a:	9b06      	ldr	r3, [sp, #24]
 802230c:	ea23 74e3 	bic.w	r4, r3, r3, asr #31
 8022310:	9b07      	ldr	r3, [sp, #28]
 8022312:	eb03 0344 	add.w	r3, r3, r4, lsl #1
 8022316:	9307      	str	r3, [sp, #28]
 8022318:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802231a:	2b00      	cmp	r3, #0
 802231c:	f340 8218 	ble.w	8022750 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7a4>
 8022320:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022324:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022328:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802232c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802232e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022332:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022336:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802233a:	eef0 6a62 	vmov.f32	s13, s5
 802233e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022342:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022346:	ee77 2a62 	vsub.f32	s5, s14, s5
 802234a:	edcd 6a1d 	vstr	s13, [sp, #116]	@ 0x74
 802234e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022352:	eef0 6a43 	vmov.f32	s13, s6
 8022356:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802235a:	ee12 2a90 	vmov	r2, s5
 802235e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022362:	fb92 f3f3 	sdiv	r3, r2, r3
 8022366:	ee13 2a10 	vmov	r2, s6
 802236a:	931f      	str	r3, [sp, #124]	@ 0x7c
 802236c:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 802236e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022372:	9320      	str	r3, [sp, #128]	@ 0x80
 8022374:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8022376:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022378:	3b01      	subs	r3, #1
 802237a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802237e:	930e      	str	r3, [sp, #56]	@ 0x38
 8022380:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022382:	edcd 6a1e 	vstr	s13, [sp, #120]	@ 0x78
 8022386:	bf08      	it	eq
 8022388:	4613      	moveq	r3, r2
 802238a:	9306      	str	r3, [sp, #24]
 802238c:	eeb0 3a67 	vmov.f32	s6, s15
 8022390:	eef0 2a47 	vmov.f32	s5, s14
 8022394:	e621      	b.n	8021fda <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e>
 8022396:	fb08 f505 	mul.w	r5, r8, r5
 802239a:	fb09 5303 	mla	r3, r9, r3, r5
 802239e:	e6a1      	b.n	80220e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x138>
 80223a0:	4681      	mov	r9, r0
 80223a2:	e6c8      	b.n	8022136 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18a>
 80223a4:	f1c1 0210 	rsb	r2, r1, #16
 80223a8:	4341      	muls	r1, r0
 80223aa:	fb09 1902 	mla	r9, r9, r2, r1
 80223ae:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80223b2:	ea4f 5259 	mov.w	r2, r9, lsr #21
 80223b6:	ea4f 1959 	mov.w	r9, r9, lsr #5
 80223ba:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80223be:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 80223c2:	ea42 0909 	orr.w	r9, r2, r9
 80223c6:	fa1f f289 	uxth.w	r2, r9
 80223ca:	e75b      	b.n	8022284 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80223cc:	f8b7 c000 	ldrh.w	ip, [r7]
 80223d0:	43db      	mvns	r3, r3
 80223d2:	ea4f 202c 	mov.w	r0, ip, asr #8
 80223d6:	fa5f fe83 	uxtb.w	lr, r3
 80223da:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80223de:	fb00 f00e 	mul.w	r0, r0, lr
 80223e2:	1c41      	adds	r1, r0, #1
 80223e4:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80223e8:	1211      	asrs	r1, r2, #8
 80223ea:	ea4f 05ec 	mov.w	r5, ip, asr #3
 80223ee:	f021 0107 	bic.w	r1, r1, #7
 80223f2:	eb01 2110 	add.w	r1, r1, r0, lsr #8
 80223f6:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80223fa:	48d7      	ldr	r0, [pc, #860]	@ (8022758 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80223fc:	fb05 f50e 	mul.w	r5, r5, lr
 8022400:	b2c9      	uxtb	r1, r1
 8022402:	ea00 2001 	and.w	r0, r0, r1, lsl #8
 8022406:	1c69      	adds	r1, r5, #1
 8022408:	eb01 2515 	add.w	r5, r1, r5, lsr #8
 802240c:	10d1      	asrs	r1, r2, #3
 802240e:	f021 0103 	bic.w	r1, r1, #3
 8022412:	ea4f 03cc 	mov.w	r3, ip, lsl #3
 8022416:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 802241a:	b2db      	uxtb	r3, r3
 802241c:	00c9      	lsls	r1, r1, #3
 802241e:	fb03 f30e 	mul.w	r3, r3, lr
 8022422:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022426:	4301      	orrs	r1, r0
 8022428:	1c58      	adds	r0, r3, #1
 802242a:	eb00 2313 	add.w	r3, r0, r3, lsr #8
 802242e:	00d2      	lsls	r2, r2, #3
 8022430:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022434:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8022438:	430a      	orrs	r2, r1
 802243a:	e726      	b.n	802228a <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2de>
 802243c:	f115 0e01 	adds.w	lr, r5, #1
 8022440:	f53f af24 	bmi.w	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022444:	4572      	cmp	r2, lr
 8022446:	f6ff af21 	blt.w	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 802244a:	f110 0e01 	adds.w	lr, r0, #1
 802244e:	f53f af1d 	bmi.w	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022452:	4573      	cmp	r3, lr
 8022454:	f6ff af1a 	blt.w	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022458:	b21b      	sxth	r3, r3
 802245a:	b212      	sxth	r2, r2
 802245c:	e9cd 1c04 	strd	r1, ip, [sp, #16]
 8022460:	e9cd 5002 	strd	r5, r0, [sp, #8]
 8022464:	9301      	str	r3, [sp, #4]
 8022466:	9200      	str	r2, [sp, #0]
 8022468:	4639      	mov	r1, r7
 802246a:	e9dd 3208 	ldrd	r3, r2, [sp, #32]
 802246e:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022470:	f7ff fc24 	bl	8021cbc <_ZNK8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKhPKtssiihh>
 8022474:	e70a      	b.n	802228c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e0>
 8022476:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022478:	f3c3 3203 	ubfx	r2, r3, #12, #4
 802247c:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802247e:	f3c3 3503 	ubfx	r5, r3, #12, #4
 8022482:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022484:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022488:	9b1e      	ldr	r3, [sp, #120]	@ 0x78
 802248a:	141f      	asrs	r7, r3, #16
 802248c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 802248e:	141b      	asrs	r3, r3, #16
 8022490:	fb01 3707 	mla	r7, r1, r7, r3
 8022494:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022496:	fa1f fc82 	uxth.w	ip, r2
 802249a:	eb03 0a07 	add.w	sl, r3, r7
 802249e:	ea4f 100c 	mov.w	r0, ip, lsl #4
 80224a2:	f813 9007 	ldrb.w	r9, [r3, r7]
 80224a6:	f89a 8001 	ldrb.w	r8, [sl, #1]
 80224aa:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 80224ae:	b29b      	uxth	r3, r3
 80224b0:	2d00      	cmp	r5, #0
 80224b2:	f000 80fe 	beq.w	80226b2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x706>
 80224b6:	f81a 4001 	ldrb.w	r4, [sl, r1]
 80224ba:	940c      	str	r4, [sp, #48]	@ 0x30
 80224bc:	eb0a 0b01 	add.w	fp, sl, r1
 80224c0:	fa1f fa85 	uxth.w	sl, r5
 80224c4:	fb0a fc0c 	mul.w	ip, sl, ip
 80224c8:	ebcc 1a0a 	rsb	sl, ip, sl, lsl #4
 80224cc:	fa1f fa8a 	uxth.w	sl, sl
 80224d0:	eba0 000c 	sub.w	r0, r0, ip
 80224d4:	eba3 030a 	sub.w	r3, r3, sl
 80224d8:	b280      	uxth	r0, r0
 80224da:	fb08 f000 	mul.w	r0, r8, r0
 80224de:	b29b      	uxth	r3, r3
 80224e0:	fb09 0303 	mla	r3, r9, r3, r0
 80224e4:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80224e6:	f89b 4001 	ldrb.w	r4, [fp, #1]
 80224ea:	940d      	str	r4, [sp, #52]	@ 0x34
 80224ec:	fb0a 3300 	mla	r3, sl, r0, r3
 80224f0:	fb0c 3304 	mla	r3, ip, r4, r3
 80224f4:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80224f8:	2b00      	cmp	r3, #0
 80224fa:	f000 80cc 	beq.w	8022696 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 80224fe:	9808      	ldr	r0, [sp, #32]
 8022500:	9c08      	ldr	r4, [sp, #32]
 8022502:	f1b9 0fff 	cmp.w	r9, #255	@ 0xff
 8022506:	eb00 0047 	add.w	r0, r0, r7, lsl #1
 802250a:	f834 7017 	ldrh.w	r7, [r4, r7, lsl #1]
 802250e:	f000 80d5 	beq.w	80226bc <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x710>
 8022512:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022516:	ea4f 0ae9 	mov.w	sl, r9, asr #3
 802251a:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802251e:	fb09 f707 	mul.w	r7, r9, r7
 8022522:	fb0a fc0c 	mul.w	ip, sl, ip
 8022526:	ea06 195c 	and.w	r9, r6, ip, lsr #5
 802252a:	f107 0b20 	add.w	fp, r7, #32
 802252e:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022532:	44cc      	add	ip, r9
 8022534:	eb0b 2917 	add.w	r9, fp, r7, lsr #8
 8022538:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802253c:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 8022540:	f409 69fc 	and.w	r9, r9, #2016	@ 0x7e0
 8022544:	ea4c 0909 	orr.w	r9, ip, r9
 8022548:	f1b8 0fff 	cmp.w	r8, #255	@ 0xff
 802254c:	8847      	ldrh	r7, [r0, #2]
 802254e:	d019      	beq.n	8022584 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5d8>
 8022550:	f427 6cfc 	bic.w	ip, r7, #2016	@ 0x7e0
 8022554:	ea4f 0ae8 	mov.w	sl, r8, asr #3
 8022558:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 802255c:	fb08 f807 	mul.w	r8, r8, r7
 8022560:	fb0a fc0c 	mul.w	ip, sl, ip
 8022564:	ea06 175c 	and.w	r7, r6, ip, lsr #5
 8022568:	f108 0b20 	add.w	fp, r8, #32
 802256c:	f60c 0c01 	addw	ip, ip, #2049	@ 0x801
 8022570:	44bc      	add	ip, r7
 8022572:	eb0b 2718 	add.w	r7, fp, r8, lsr #8
 8022576:	0a3f      	lsrs	r7, r7, #8
 8022578:	ea06 1c5c 	and.w	ip, r6, ip, lsr #5
 802257c:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022580:	ea4c 0707 	orr.w	r7, ip, r7
 8022584:	ea4f 4c09 	mov.w	ip, r9, lsl #16
 8022588:	ea4f 4a07 	mov.w	sl, r7, lsl #16
 802258c:	f00c 6cfc 	and.w	ip, ip, #132120576	@ 0x7e00000
 8022590:	f429 69fc 	bic.w	r9, r9, #2016	@ 0x7e0
 8022594:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022598:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 802259c:	ea4c 0909 	orr.w	r9, ip, r9
 80225a0:	ea4a 0707 	orr.w	r7, sl, r7
 80225a4:	2d00      	cmp	r5, #0
 80225a6:	f000 808b 	beq.w	80226c0 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x714>
 80225aa:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 80225ae:	3901      	subs	r1, #1
 80225b0:	0049      	lsls	r1, r1, #1
 80225b2:	3102      	adds	r1, #2
 80225b4:	eb00 0c01 	add.w	ip, r0, r1
 80225b8:	5a41      	ldrh	r1, [r0, r1]
 80225ba:	980c      	ldr	r0, [sp, #48]	@ 0x30
 80225bc:	28ff      	cmp	r0, #255	@ 0xff
 80225be:	d019      	beq.n	80225f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x648>
 80225c0:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 80225c2:	f421 60fc 	bic.w	r0, r1, #2016	@ 0x7e0
 80225c6:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80225ca:	fb04 fa01 	mul.w	sl, r4, r1
 80225ce:	ea4f 08e4 	mov.w	r8, r4, asr #3
 80225d2:	fb08 f800 	mul.w	r8, r8, r0
 80225d6:	f10a 0020 	add.w	r0, sl, #32
 80225da:	ea06 1158 	and.w	r1, r6, r8, lsr #5
 80225de:	eb00 201a 	add.w	r0, r0, sl, lsr #8
 80225e2:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 80225e6:	4441      	add	r1, r8
 80225e8:	0a00      	lsrs	r0, r0, #8
 80225ea:	ea06 1151 	and.w	r1, r6, r1, lsr #5
 80225ee:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80225f2:	4301      	orrs	r1, r0
 80225f4:	9c0d      	ldr	r4, [sp, #52]	@ 0x34
 80225f6:	f8bc 0002 	ldrh.w	r0, [ip, #2]
 80225fa:	2cff      	cmp	r4, #255	@ 0xff
 80225fc:	d01a      	beq.n	8022634 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x688>
 80225fe:	f420 6cfc 	bic.w	ip, r0, #2016	@ 0x7e0
 8022602:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8022606:	fb04 fa00 	mul.w	sl, r4, r0
 802260a:	ea4f 08e4 	mov.w	r8, r4, asr #3
 802260e:	fb08 f80c 	mul.w	r8, r8, ip
 8022612:	f10a 0c20 	add.w	ip, sl, #32
 8022616:	ea06 1058 	and.w	r0, r6, r8, lsr #5
 802261a:	eb0c 2c1a 	add.w	ip, ip, sl, lsr #8
 802261e:	f608 0801 	addw	r8, r8, #2049	@ 0x801
 8022622:	4440      	add	r0, r8
 8022624:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8022628:	ea06 1050 	and.w	r0, r6, r0, lsr #5
 802262c:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022630:	ea40 000c 	orr.w	r0, r0, ip
 8022634:	fb15 fc02 	smulbb	ip, r5, r2
 8022638:	ea4f 0cec 	mov.w	ip, ip, asr #3
 802263c:	f1c5 0810 	rsb	r8, r5, #16
 8022640:	eba8 0802 	sub.w	r8, r8, r2
 8022644:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 8022648:	ebcc 0242 	rsb	r2, ip, r2, lsl #1
 802264c:	437a      	muls	r2, r7
 802264e:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022652:	eb0c 0848 	add.w	r8, ip, r8, lsl #1
 8022656:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 802265a:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802265e:	fb09 2208 	mla	r2, r9, r8, r2
 8022662:	ea4a 0101 	orr.w	r1, sl, r1
 8022666:	ebcc 0545 	rsb	r5, ip, r5, lsl #1
 802266a:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 802266e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022672:	fb05 2201 	mla	r2, r5, r1, r2
 8022676:	ea4b 0000 	orr.w	r0, fp, r0
 802267a:	fb0c 2200 	mla	r2, ip, r0, r2
 802267e:	0d57      	lsrs	r7, r2, #21
 8022680:	0952      	lsrs	r2, r2, #5
 8022682:	f407 67fc 	and.w	r7, r7, #2016	@ 0x7e0
 8022686:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802268a:	433a      	orrs	r2, r7
 802268c:	2bff      	cmp	r3, #255	@ 0xff
 802268e:	b292      	uxth	r2, r2
 8022690:	d127      	bne.n	80226e2 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x736>
 8022692:	f8ae 2000 	strh.w	r2, [lr]
 8022696:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022698:	9a1f      	ldr	r2, [sp, #124]	@ 0x7c
 802269a:	4413      	add	r3, r2
 802269c:	931d      	str	r3, [sp, #116]	@ 0x74
 802269e:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 80226a0:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80226a2:	441a      	add	r2, r3
 80226a4:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80226a6:	921e      	str	r2, [sp, #120]	@ 0x78
 80226a8:	3b01      	subs	r3, #1
 80226aa:	f10e 0e02 	add.w	lr, lr, #2
 80226ae:	930f      	str	r3, [sp, #60]	@ 0x3c
 80226b0:	e627      	b.n	8022302 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 80226b2:	fb08 f000 	mul.w	r0, r8, r0
 80226b6:	fb09 0303 	mla	r3, r9, r3, r0
 80226ba:	e71b      	b.n	80224f4 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x548>
 80226bc:	46b9      	mov	r9, r7
 80226be:	e743      	b.n	8022548 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x59c>
 80226c0:	f1c2 0110 	rsb	r1, r2, #16
 80226c4:	437a      	muls	r2, r7
 80226c6:	fb09 2901 	mla	r9, r9, r1, r2
 80226ca:	ea4f 0949 	mov.w	r9, r9, lsl #1
 80226ce:	ea4f 5059 	mov.w	r0, r9, lsr #21
 80226d2:	ea4f 1259 	mov.w	r2, r9, lsr #5
 80226d6:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80226da:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 80226de:	4302      	orrs	r2, r0
 80226e0:	e7d4      	b.n	802268c <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6e0>
 80226e2:	f8be 7000 	ldrh.w	r7, [lr]
 80226e6:	4c1c      	ldr	r4, [pc, #112]	@ (8022758 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7ac>)
 80226e8:	43db      	mvns	r3, r3
 80226ea:	1238      	asrs	r0, r7, #8
 80226ec:	fa5f fc83 	uxtb.w	ip, r3
 80226f0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80226f4:	10fd      	asrs	r5, r7, #3
 80226f6:	fb00 f00c 	mul.w	r0, r0, ip
 80226fa:	f005 05fc 	and.w	r5, r5, #252	@ 0xfc
 80226fe:	fb05 f10c 	mul.w	r1, r5, ip
 8022702:	1c45      	adds	r5, r0, #1
 8022704:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022708:	1215      	asrs	r5, r2, #8
 802270a:	f025 0507 	bic.w	r5, r5, #7
 802270e:	eb05 2010 	add.w	r0, r5, r0, lsr #8
 8022712:	1c4d      	adds	r5, r1, #1
 8022714:	eb05 2511 	add.w	r5, r5, r1, lsr #8
 8022718:	10d1      	asrs	r1, r2, #3
 802271a:	f021 0103 	bic.w	r1, r1, #3
 802271e:	00fb      	lsls	r3, r7, #3
 8022720:	eb01 2115 	add.w	r1, r1, r5, lsr #8
 8022724:	b2db      	uxtb	r3, r3
 8022726:	b2c0      	uxtb	r0, r0
 8022728:	00c9      	lsls	r1, r1, #3
 802272a:	fb03 f30c 	mul.w	r3, r3, ip
 802272e:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022732:	ea04 2000 	and.w	r0, r4, r0, lsl #8
 8022736:	4308      	orrs	r0, r1
 8022738:	1c59      	adds	r1, r3, #1
 802273a:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 802273e:	00d2      	lsls	r2, r2, #3
 8022740:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8022744:	f3c3 03c4 	ubfx	r3, r3, #3, #5
 8022748:	4318      	orrs	r0, r3
 802274a:	f8ae 0000 	strh.w	r0, [lr]
 802274e:	e7a2      	b.n	8022696 <_ZN8touchgfx8LCD16bpp57TextureMapper_RGB565_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6ea>
 8022750:	b013      	add	sp, #76	@ 0x4c
 8022752:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8022756:	bf00      	nop
 8022758:	fffff800 	.word	0xfffff800

0802275c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>:
 802275c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8022760:	e9dd 4509 	ldrd	r4, r5, [sp, #36]	@ 0x24
 8022764:	fb05 4c03 	mla	ip, r5, r3, r4
 8022768:	2d00      	cmp	r5, #0
 802276a:	f9bd a020 	ldrsh.w	sl, [sp, #32]
 802276e:	f89d 902c 	ldrb.w	r9, [sp, #44]	@ 0x2c
 8022772:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8022776:	f89d 6034 	ldrb.w	r6, [sp, #52]	@ 0x34
 802277a:	8808      	ldrh	r0, [r1, #0]
 802277c:	eb02 0e4c 	add.w	lr, r2, ip, lsl #1
 8022780:	f2c0 80a7 	blt.w	80228d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 8022784:	45aa      	cmp	sl, r5
 8022786:	f340 80a4 	ble.w	80228d2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x176>
 802278a:	2c00      	cmp	r4, #0
 802278c:	f2c0 809f 	blt.w	80228ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022790:	42a3      	cmp	r3, r4
 8022792:	f340 809c 	ble.w	80228ce <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x172>
 8022796:	f832 801c 	ldrh.w	r8, [r2, ip, lsl #1]
 802279a:	1c62      	adds	r2, r4, #1
 802279c:	f100 809c 	bmi.w	80228d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227a0:	4293      	cmp	r3, r2
 80227a2:	f340 8099 	ble.w	80228d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227a6:	f1b9 0f00 	cmp.w	r9, #0
 80227aa:	f000 8095 	beq.w	80228d8 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x17c>
 80227ae:	f8be c002 	ldrh.w	ip, [lr, #2]
 80227b2:	3501      	adds	r5, #1
 80227b4:	f100 8094 	bmi.w	80228e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227b8:	45aa      	cmp	sl, r5
 80227ba:	f340 8091 	ble.w	80228e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227be:	2f00      	cmp	r7, #0
 80227c0:	f000 808e 	beq.w	80228e0 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x184>
 80227c4:	2c00      	cmp	r4, #0
 80227c6:	f2c0 8089 	blt.w	80228dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227ca:	42a3      	cmp	r3, r4
 80227cc:	f340 8086 	ble.w	80228dc <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x180>
 80227d0:	f83e 5013 	ldrh.w	r5, [lr, r3, lsl #1]
 80227d4:	3401      	adds	r4, #1
 80227d6:	f100 8086 	bmi.w	80228e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227da:	42a3      	cmp	r3, r4
 80227dc:	f340 8083 	ble.w	80228e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227e0:	f1b9 0f00 	cmp.w	r9, #0
 80227e4:	d07f      	beq.n	80228e6 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x18a>
 80227e6:	3301      	adds	r3, #1
 80227e8:	f83e 3013 	ldrh.w	r3, [lr, r3, lsl #1]
 80227ec:	ea4f 4408 	mov.w	r4, r8, lsl #16
 80227f0:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 80227f4:	f428 68fc 	bic.w	r8, r8, #2016	@ 0x7e0
 80227f8:	fb19 fe07 	smulbb	lr, r9, r7
 80227fc:	ea44 0808 	orr.w	r8, r4, r8
 8022800:	ea4f 440c 	mov.w	r4, ip, lsl #16
 8022804:	f3ce 0ec7 	ubfx	lr, lr, #3, #8
 8022808:	f1c7 0210 	rsb	r2, r7, #16
 802280c:	f004 64fc 	and.w	r4, r4, #132120576	@ 0x7e00000
 8022810:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022814:	ea44 0c0c 	orr.w	ip, r4, ip
 8022818:	eba2 0209 	sub.w	r2, r2, r9
 802281c:	ebce 0449 	rsb	r4, lr, r9, lsl #1
 8022820:	eb0e 0242 	add.w	r2, lr, r2, lsl #1
 8022824:	fb04 f40c 	mul.w	r4, r4, ip
 8022828:	fb02 4808 	mla	r8, r2, r8, r4
 802282c:	041a      	lsls	r2, r3, #16
 802282e:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022832:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022836:	4313      	orrs	r3, r2
 8022838:	042a      	lsls	r2, r5, #16
 802283a:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802283e:	f425 65fc 	bic.w	r5, r5, #2016	@ 0x7e0
 8022842:	fb0e 8303 	mla	r3, lr, r3, r8
 8022846:	432a      	orrs	r2, r5
 8022848:	ebce 0747 	rsb	r7, lr, r7, lsl #1
 802284c:	fb07 3202 	mla	r2, r7, r2, r3
 8022850:	0d53      	lsrs	r3, r2, #21
 8022852:	0952      	lsrs	r2, r2, #5
 8022854:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022858:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 802285c:	431a      	orrs	r2, r3
 802285e:	b293      	uxth	r3, r2
 8022860:	b2b4      	uxth	r4, r6
 8022862:	1202      	asrs	r2, r0, #8
 8022864:	43f6      	mvns	r6, r6
 8022866:	b2f6      	uxtb	r6, r6
 8022868:	121d      	asrs	r5, r3, #8
 802286a:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 802286e:	fb12 f206 	smulbb	r2, r2, r6
 8022872:	10c7      	asrs	r7, r0, #3
 8022874:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8022878:	00c0      	lsls	r0, r0, #3
 802287a:	fb05 2504 	mla	r5, r5, r4, r2
 802287e:	b2c0      	uxtb	r0, r0
 8022880:	10da      	asrs	r2, r3, #3
 8022882:	00db      	lsls	r3, r3, #3
 8022884:	b2db      	uxtb	r3, r3
 8022886:	f007 07fc 	and.w	r7, r7, #252	@ 0xfc
 802288a:	fb10 f006 	smulbb	r0, r0, r6
 802288e:	b2ad      	uxth	r5, r5
 8022890:	fb03 0004 	mla	r0, r3, r4, r0
 8022894:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8022898:	fb17 f706 	smulbb	r7, r7, r6
 802289c:	b280      	uxth	r0, r0
 802289e:	1c6b      	adds	r3, r5, #1
 80228a0:	fb02 7204 	mla	r2, r2, r4, r7
 80228a4:	b292      	uxth	r2, r2
 80228a6:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80228aa:	1c43      	adds	r3, r0, #1
 80228ac:	eb03 2310 	add.w	r3, r3, r0, lsr #8
 80228b0:	1c50      	adds	r0, r2, #1
 80228b2:	eb00 2212 	add.w	r2, r0, r2, lsr #8
 80228b6:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80228ba:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80228be:	0952      	lsrs	r2, r2, #5
 80228c0:	432b      	orrs	r3, r5
 80228c2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80228c6:	4313      	orrs	r3, r2
 80228c8:	800b      	strh	r3, [r1, #0]
 80228ca:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 80228ce:	4680      	mov	r8, r0
 80228d0:	e763      	b.n	802279a <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x3e>
 80228d2:	4684      	mov	ip, r0
 80228d4:	4680      	mov	r8, r0
 80228d6:	e76c      	b.n	80227b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80228d8:	4684      	mov	ip, r0
 80228da:	e76a      	b.n	80227b2 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x56>
 80228dc:	4605      	mov	r5, r0
 80228de:	e779      	b.n	80227d4 <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x78>
 80228e0:	4603      	mov	r3, r0
 80228e2:	4605      	mov	r5, r0
 80228e4:	e782      	b.n	80227ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>
 80228e6:	4603      	mov	r3, r0
 80228e8:	e780      	b.n	80227ec <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh+0x90>

080228ea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80228ea:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80228ee:	b093      	sub	sp, #76	@ 0x4c
 80228f0:	461d      	mov	r5, r3
 80228f2:	9210      	str	r2, [sp, #64]	@ 0x40
 80228f4:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80228f6:	f89d 2094 	ldrb.w	r2, [sp, #148]	@ 0x94
 80228fa:	920b      	str	r2, [sp, #44]	@ 0x2c
 80228fc:	e9dd 2722 	ldrd	r2, r7, [sp, #136]	@ 0x88
 8022900:	910a      	str	r1, [sp, #40]	@ 0x28
 8022902:	6859      	ldr	r1, [r3, #4]
 8022904:	681b      	ldr	r3, [r3, #0]
 8022906:	9011      	str	r0, [sp, #68]	@ 0x44
 8022908:	fb01 2707 	mla	r7, r1, r7, r2
 802290c:	eb03 0347 	add.w	r3, r3, r7, lsl #1
 8022910:	9307      	str	r3, [sp, #28]
 8022912:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022914:	681b      	ldr	r3, [r3, #0]
 8022916:	9309      	str	r3, [sp, #36]	@ 0x24
 8022918:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 802291a:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 802291e:	43db      	mvns	r3, r3
 8022920:	b2db      	uxtb	r3, r3
 8022922:	9308      	str	r3, [sp, #32]
 8022924:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022926:	2b00      	cmp	r3, #0
 8022928:	dc03      	bgt.n	8022932 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 802292a:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 802292c:	2b00      	cmp	r3, #0
 802292e:	f340 8203 	ble.w	8022d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022932:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022934:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022938:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 802293c:	1e48      	subs	r0, r1, #1
 802293e:	f102 3cff 	add.w	ip, r2, #4294967295
 8022942:	2d00      	cmp	r5, #0
 8022944:	f340 80da 	ble.w	8022afc <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x212>
 8022948:	ea5f 4e24 	movs.w	lr, r4, asr #16
 802294c:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022950:	d406      	bmi.n	8022960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022952:	4586      	cmp	lr, r0
 8022954:	da04      	bge.n	8022960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 8022956:	2b00      	cmp	r3, #0
 8022958:	db02      	blt.n	8022960 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x76>
 802295a:	4563      	cmp	r3, ip
 802295c:	f2c0 80cf 	blt.w	8022afe <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x214>
 8022960:	f11e 0e01 	adds.w	lr, lr, #1
 8022964:	f100 80c1 	bmi.w	8022aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022968:	4571      	cmp	r1, lr
 802296a:	f2c0 80be 	blt.w	8022aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802296e:	3301      	adds	r3, #1
 8022970:	f100 80bb 	bmi.w	8022aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 8022974:	429a      	cmp	r2, r3
 8022976:	f2c0 80b8 	blt.w	8022aea <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x200>
 802297a:	f8dd 801c 	ldr.w	r8, [sp, #28]
 802297e:	46a9      	mov	r9, r5
 8022980:	f1b9 0f00 	cmp.w	r9, #0
 8022984:	f340 80d8 	ble.w	8022b38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x24e>
 8022988:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802298a:	1421      	asrs	r1, r4, #16
 802298c:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022990:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022994:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022998:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 802299c:	f100 8111 	bmi.w	8022bc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229a0:	f10e 3aff 	add.w	sl, lr, #4294967295
 80229a4:	4551      	cmp	r1, sl
 80229a6:	f280 810c 	bge.w	8022bc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229aa:	2800      	cmp	r0, #0
 80229ac:	f2c0 8109 	blt.w	8022bc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229b0:	f103 3aff 	add.w	sl, r3, #4294967295
 80229b4:	4550      	cmp	r0, sl
 80229b6:	f280 8104 	bge.w	8022bc2 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d8>
 80229ba:	fa0f f38e 	sxth.w	r3, lr
 80229be:	fb00 1103 	mla	r1, r0, r3, r1
 80229c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80229c4:	eb00 0a41 	add.w	sl, r0, r1, lsl #1
 80229c8:	f830 e011 	ldrh.w	lr, [r0, r1, lsl #1]
 80229cc:	f8ba 1002 	ldrh.w	r1, [sl, #2]
 80229d0:	f1bc 0f00 	cmp.w	ip, #0
 80229d4:	d007      	beq.n	80229e6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xfc>
 80229d6:	005b      	lsls	r3, r3, #1
 80229d8:	eb0a 0003 	add.w	r0, sl, r3
 80229dc:	f83a 3003 	ldrh.w	r3, [sl, r3]
 80229e0:	930c      	str	r3, [sp, #48]	@ 0x30
 80229e2:	8843      	ldrh	r3, [r0, #2]
 80229e4:	930d      	str	r3, [sp, #52]	@ 0x34
 80229e6:	ea4f 400e 	mov.w	r0, lr, lsl #16
 80229ea:	fb12 f30c 	smulbb	r3, r2, ip
 80229ee:	f42e 6efc 	bic.w	lr, lr, #2016	@ 0x7e0
 80229f2:	ea4f 4a01 	mov.w	sl, r1, lsl #16
 80229f6:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80229fa:	10db      	asrs	r3, r3, #3
 80229fc:	ea40 000e 	orr.w	r0, r0, lr
 8022a00:	f00a 6afc 	and.w	sl, sl, #132120576	@ 0x7e00000
 8022a04:	f1cc 0e10 	rsb	lr, ip, #16
 8022a08:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022a0c:	ebae 0e02 	sub.w	lr, lr, r2
 8022a10:	ea4a 0101 	orr.w	r1, sl, r1
 8022a14:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022a18:	4351      	muls	r1, r2
 8022a1a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8022a1c:	9f08      	ldr	r7, [sp, #32]
 8022a1e:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022a22:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022a26:	0410      	lsls	r0, r2, #16
 8022a28:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022a2c:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022a30:	4310      	orrs	r0, r2
 8022a32:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8022a34:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8022a36:	0412      	lsls	r2, r2, #16
 8022a38:	fb03 e000 	mla	r0, r3, r0, lr
 8022a3c:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022a40:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022a44:	ea42 020e 	orr.w	r2, r2, lr
 8022a48:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022a4c:	fb03 0302 	mla	r3, r3, r2, r0
 8022a50:	0d5a      	lsrs	r2, r3, #21
 8022a52:	095b      	lsrs	r3, r3, #5
 8022a54:	f8b8 0000 	ldrh.w	r0, [r8]
 8022a58:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022a5c:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022a60:	4313      	orrs	r3, r2
 8022a62:	b29b      	uxth	r3, r3
 8022a64:	1201      	asrs	r1, r0, #8
 8022a66:	f8bd 202c 	ldrh.w	r2, [sp, #44]	@ 0x2c
 8022a6a:	ea4f 2c23 	mov.w	ip, r3, asr #8
 8022a6e:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022a72:	fb11 f107 	smulbb	r1, r1, r7
 8022a76:	ea4f 0ee0 	mov.w	lr, r0, asr #3
 8022a7a:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8022a7e:	00c0      	lsls	r0, r0, #3
 8022a80:	fb0c 1c02 	mla	ip, ip, r2, r1
 8022a84:	b2c0      	uxtb	r0, r0
 8022a86:	10d9      	asrs	r1, r3, #3
 8022a88:	00db      	lsls	r3, r3, #3
 8022a8a:	f00e 0efc 	and.w	lr, lr, #252	@ 0xfc
 8022a8e:	b2db      	uxtb	r3, r3
 8022a90:	fb10 f007 	smulbb	r0, r0, r7
 8022a94:	fa1f fc8c 	uxth.w	ip, ip
 8022a98:	fb03 0302 	mla	r3, r3, r2, r0
 8022a9c:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022aa0:	fb1e fe07 	smulbb	lr, lr, r7
 8022aa4:	fb01 e102 	mla	r1, r1, r2, lr
 8022aa8:	b29a      	uxth	r2, r3
 8022aaa:	f10c 0301 	add.w	r3, ip, #1
 8022aae:	b289      	uxth	r1, r1
 8022ab0:	eb03 2c1c 	add.w	ip, r3, ip, lsr #8
 8022ab4:	1c53      	adds	r3, r2, #1
 8022ab6:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8022aba:	1c4a      	adds	r2, r1, #1
 8022abc:	eb02 2111 	add.w	r1, r2, r1, lsr #8
 8022ac0:	f40c 4c78 	and.w	ip, ip, #63488	@ 0xf800
 8022ac4:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8022ac8:	0949      	lsrs	r1, r1, #5
 8022aca:	ea43 030c 	orr.w	r3, r3, ip
 8022ace:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8022ad2:	430b      	orrs	r3, r1
 8022ad4:	f8a8 3000 	strh.w	r3, [r8]
 8022ad8:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022ada:	441c      	add	r4, r3
 8022adc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ade:	f108 0802 	add.w	r8, r8, #2
 8022ae2:	441e      	add	r6, r3
 8022ae4:	f109 39ff 	add.w	r9, r9, #4294967295
 8022ae8:	e74a      	b.n	8022980 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x96>
 8022aea:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022aec:	441c      	add	r4, r3
 8022aee:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022af0:	441e      	add	r6, r3
 8022af2:	9b07      	ldr	r3, [sp, #28]
 8022af4:	3302      	adds	r3, #2
 8022af6:	3d01      	subs	r5, #1
 8022af8:	9307      	str	r3, [sp, #28]
 8022afa:	e722      	b.n	8022942 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 8022afc:	d022      	beq.n	8022b44 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x25a>
 8022afe:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8022b00:	1e6b      	subs	r3, r5, #1
 8022b02:	fb00 4003 	mla	r0, r0, r3, r4
 8022b06:	1400      	asrs	r0, r0, #16
 8022b08:	f53f af37 	bmi.w	802297a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b0c:	3901      	subs	r1, #1
 8022b0e:	4288      	cmp	r0, r1
 8022b10:	f6bf af33 	bge.w	802297a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b14:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8022b16:	fb01 6303 	mla	r3, r1, r3, r6
 8022b1a:	141b      	asrs	r3, r3, #16
 8022b1c:	f53f af2d 	bmi.w	802297a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b20:	3a01      	subs	r2, #1
 8022b22:	4293      	cmp	r3, r2
 8022b24:	f6bf af29 	bge.w	802297a <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x90>
 8022b28:	f8dd 901c 	ldr.w	r9, [sp, #28]
 8022b2c:	f8bd a02c 	ldrh.w	sl, [sp, #44]	@ 0x2c
 8022b30:	46a8      	mov	r8, r5
 8022b32:	f1b8 0f00 	cmp.w	r8, #0
 8022b36:	dc5e      	bgt.n	8022bf6 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x30c>
 8022b38:	9b07      	ldr	r3, [sp, #28]
 8022b3a:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022b3e:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 8022b42:	9307      	str	r3, [sp, #28]
 8022b44:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022b46:	2b00      	cmp	r3, #0
 8022b48:	f340 80f6 	ble.w	8022d38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 8022b4c:	ee30 0a04 	vadd.f32	s0, s0, s8
 8022b50:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8022b54:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8022b58:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b5a:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8022b5e:	ee31 1a05 	vadd.f32	s2, s2, s10
 8022b62:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8022b66:	eef0 6a62 	vmov.f32	s13, s5
 8022b6a:	ee61 7a27 	vmul.f32	s15, s2, s15
 8022b6e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022b72:	ee77 2a62 	vsub.f32	s5, s14, s5
 8022b76:	ee16 4a90 	vmov	r4, s13
 8022b7a:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8022b7e:	eef0 6a43 	vmov.f32	s13, s6
 8022b82:	ee37 3ac3 	vsub.f32	s6, s15, s6
 8022b86:	ee12 2a90 	vmov	r2, s5
 8022b8a:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8022b8e:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b92:	ee13 2a10 	vmov	r2, s6
 8022b96:	931f      	str	r3, [sp, #124]	@ 0x7c
 8022b98:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022b9a:	fb92 f3f3 	sdiv	r3, r2, r3
 8022b9e:	9320      	str	r3, [sp, #128]	@ 0x80
 8022ba0:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8022ba2:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8022ba4:	3b01      	subs	r3, #1
 8022ba6:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8022baa:	930a      	str	r3, [sp, #40]	@ 0x28
 8022bac:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022bae:	ee16 6a90 	vmov	r6, s13
 8022bb2:	bf14      	ite	ne
 8022bb4:	461d      	movne	r5, r3
 8022bb6:	4615      	moveq	r5, r2
 8022bb8:	eeb0 3a67 	vmov.f32	s6, s15
 8022bbc:	eef0 2a47 	vmov.f32	s5, s14
 8022bc0:	e6b0      	b.n	8022924 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8022bc2:	f111 0a01 	adds.w	sl, r1, #1
 8022bc6:	d487      	bmi.n	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bc8:	45d6      	cmp	lr, sl
 8022bca:	db85      	blt.n	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bcc:	f110 0a01 	adds.w	sl, r0, #1
 8022bd0:	d482      	bmi.n	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bd2:	4553      	cmp	r3, sl
 8022bd4:	db80      	blt.n	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bd6:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8022bd8:	9101      	str	r1, [sp, #4]
 8022bda:	b21b      	sxth	r3, r3
 8022bdc:	e9cd 0202 	strd	r0, r2, [sp, #8]
 8022be0:	9300      	str	r3, [sp, #0]
 8022be2:	e9cd c704 	strd	ip, r7, [sp, #16]
 8022be6:	fa0f f38e 	sxth.w	r3, lr
 8022bea:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022bec:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8022bee:	4641      	mov	r1, r8
 8022bf0:	f7ff fdb4 	bl	802275c <_ZNK8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtssiihhh>
 8022bf4:	e770      	b.n	8022ad8 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ee>
 8022bf6:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8022bf8:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 8022bfa:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022bfe:	1430      	asrs	r0, r6, #16
 8022c00:	1423      	asrs	r3, r4, #16
 8022c02:	fb01 3000 	mla	r0, r1, r0, r3
 8022c06:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8022c08:	f837 c010 	ldrh.w	ip, [r7, r0, lsl #1]
 8022c0c:	eb03 0340 	add.w	r3, r3, r0, lsl #1
 8022c10:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 8022c14:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022c18:	8858      	ldrh	r0, [r3, #2]
 8022c1a:	f1be 0f00 	cmp.w	lr, #0
 8022c1e:	d00b      	beq.n	8022c38 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34e>
 8022c20:	f101 4100 	add.w	r1, r1, #2147483648	@ 0x80000000
 8022c24:	3901      	subs	r1, #1
 8022c26:	0049      	lsls	r1, r1, #1
 8022c28:	3102      	adds	r1, #2
 8022c2a:	eb03 0b01 	add.w	fp, r3, r1
 8022c2e:	5a5b      	ldrh	r3, [r3, r1]
 8022c30:	930e      	str	r3, [sp, #56]	@ 0x38
 8022c32:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 8022c36:	930f      	str	r3, [sp, #60]	@ 0x3c
 8022c38:	ea4f 410c 	mov.w	r1, ip, lsl #16
 8022c3c:	fb12 f30e 	smulbb	r3, r2, lr
 8022c40:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022c44:	ea4f 4b00 	mov.w	fp, r0, lsl #16
 8022c48:	f001 61fc 	and.w	r1, r1, #132120576	@ 0x7e00000
 8022c4c:	10db      	asrs	r3, r3, #3
 8022c4e:	ea41 010c 	orr.w	r1, r1, ip
 8022c52:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022c56:	f1ce 0c10 	rsb	ip, lr, #16
 8022c5a:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022c5e:	ebac 0c02 	sub.w	ip, ip, r2
 8022c62:	ea4b 0000 	orr.w	r0, fp, r0
 8022c66:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022c6a:	4350      	muls	r0, r2
 8022c6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8022c6e:	9f08      	ldr	r7, [sp, #32]
 8022c70:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 8022c74:	fb0c 0c01 	mla	ip, ip, r1, r0
 8022c78:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8022c7c:	f422 61fc 	bic.w	r1, r2, #2016	@ 0x7e0
 8022c80:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8022c82:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8022c84:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022c88:	0412      	lsls	r2, r2, #16
 8022c8a:	ea4b 0101 	orr.w	r1, fp, r1
 8022c8e:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022c92:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022c96:	fb03 c101 	mla	r1, r3, r1, ip
 8022c9a:	4302      	orrs	r2, r0
 8022c9c:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 8022ca0:	fb03 1202 	mla	r2, r3, r2, r1
 8022ca4:	ea4f 5b52 	mov.w	fp, r2, lsr #21
 8022ca8:	0952      	lsrs	r2, r2, #5
 8022caa:	f422 63fc 	bic.w	r3, r2, #2016	@ 0x7e0
 8022cae:	f40b 6bfc 	and.w	fp, fp, #2016	@ 0x7e0
 8022cb2:	f8b9 2000 	ldrh.w	r2, [r9]
 8022cb6:	ea4b 0303 	orr.w	r3, fp, r3
 8022cba:	b29b      	uxth	r3, r3
 8022cbc:	1211      	asrs	r1, r2, #8
 8022cbe:	1218      	asrs	r0, r3, #8
 8022cc0:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8022cc4:	fb11 f107 	smulbb	r1, r1, r7
 8022cc8:	ea4f 0ce2 	mov.w	ip, r2, asr #3
 8022ccc:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8022cd0:	00d2      	lsls	r2, r2, #3
 8022cd2:	fb00 100a 	mla	r0, r0, sl, r1
 8022cd6:	f00c 0cfc 	and.w	ip, ip, #252	@ 0xfc
 8022cda:	10d9      	asrs	r1, r3, #3
 8022cdc:	b2d2      	uxtb	r2, r2
 8022cde:	00db      	lsls	r3, r3, #3
 8022ce0:	fb1c fc07 	smulbb	ip, ip, r7
 8022ce4:	fb12 f207 	smulbb	r2, r2, r7
 8022ce8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8022cec:	b2db      	uxtb	r3, r3
 8022cee:	b280      	uxth	r0, r0
 8022cf0:	fb01 c10a 	mla	r1, r1, sl, ip
 8022cf4:	fb03 230a 	mla	r3, r3, sl, r2
 8022cf8:	b29b      	uxth	r3, r3
 8022cfa:	b289      	uxth	r1, r1
 8022cfc:	1c42      	adds	r2, r0, #1
 8022cfe:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8022d02:	f101 0c01 	add.w	ip, r1, #1
 8022d06:	1c5a      	adds	r2, r3, #1
 8022d08:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8022d0c:	eb0c 2c11 	add.w	ip, ip, r1, lsr #8
 8022d10:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8022d12:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8022d16:	f3c2 22c4 	ubfx	r2, r2, #11, #5
 8022d1a:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8022d1e:	4310      	orrs	r0, r2
 8022d20:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8022d24:	441c      	add	r4, r3
 8022d26:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022d28:	ea40 000c 	orr.w	r0, r0, ip
 8022d2c:	f829 0b02 	strh.w	r0, [r9], #2
 8022d30:	441e      	add	r6, r3
 8022d32:	f108 38ff 	add.w	r8, r8, #4294967295
 8022d36:	e6fc      	b.n	8022b32 <_ZN8touchgfx8LCD16bpp52TextureMapper_RGB565_Opaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x248>
 8022d38:	b013      	add	sp, #76	@ 0x4c
 8022d3a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08022d3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>:
 8022d3e:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8022d42:	e9dd 4e08 	ldrd	r4, lr, [sp, #32]
 8022d46:	fb0e 4703 	mla	r7, lr, r3, r4
 8022d4a:	f1be 0f00 	cmp.w	lr, #0
 8022d4e:	f9bd 901c 	ldrsh.w	r9, [sp, #28]
 8022d52:	f89d 5028 	ldrb.w	r5, [sp, #40]	@ 0x28
 8022d56:	f89d 602c 	ldrb.w	r6, [sp, #44]	@ 0x2c
 8022d5a:	8808      	ldrh	r0, [r1, #0]
 8022d5c:	eb02 0847 	add.w	r8, r2, r7, lsl #1
 8022d60:	db60      	blt.n	8022e24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d62:	45f1      	cmp	r9, lr
 8022d64:	dd5e      	ble.n	8022e24 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe6>
 8022d66:	2c00      	cmp	r4, #0
 8022d68:	db5a      	blt.n	8022e20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d6a:	42a3      	cmp	r3, r4
 8022d6c:	dd58      	ble.n	8022e20 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xe2>
 8022d6e:	f832 c017 	ldrh.w	ip, [r2, r7, lsl #1]
 8022d72:	1c62      	adds	r2, r4, #1
 8022d74:	d459      	bmi.n	8022e2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d76:	4293      	cmp	r3, r2
 8022d78:	dd57      	ble.n	8022e2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d7a:	2d00      	cmp	r5, #0
 8022d7c:	d055      	beq.n	8022e2a <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xec>
 8022d7e:	f8b8 7002 	ldrh.w	r7, [r8, #2]
 8022d82:	f11e 0e01 	adds.w	lr, lr, #1
 8022d86:	d454      	bmi.n	8022e32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d88:	45f1      	cmp	r9, lr
 8022d8a:	dd52      	ble.n	8022e32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d8c:	2e00      	cmp	r6, #0
 8022d8e:	d050      	beq.n	8022e32 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf4>
 8022d90:	2c00      	cmp	r4, #0
 8022d92:	db4c      	blt.n	8022e2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d94:	42a3      	cmp	r3, r4
 8022d96:	dd4a      	ble.n	8022e2e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0xf0>
 8022d98:	f838 2013 	ldrh.w	r2, [r8, r3, lsl #1]
 8022d9c:	3401      	adds	r4, #1
 8022d9e:	d405      	bmi.n	8022dac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022da0:	42a3      	cmp	r3, r4
 8022da2:	dd03      	ble.n	8022dac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022da4:	b115      	cbz	r5, 8022dac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>
 8022da6:	3301      	adds	r3, #1
 8022da8:	f838 0013 	ldrh.w	r0, [r8, r3, lsl #1]
 8022dac:	ea4f 430c 	mov.w	r3, ip, lsl #16
 8022db0:	fb15 f406 	smulbb	r4, r5, r6
 8022db4:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022db8:	ea4f 4e07 	mov.w	lr, r7, lsl #16
 8022dbc:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 8022dc0:	f3c4 04c7 	ubfx	r4, r4, #3, #8
 8022dc4:	ea43 0c0c 	orr.w	ip, r3, ip
 8022dc8:	f00e 6efc 	and.w	lr, lr, #132120576	@ 0x7e00000
 8022dcc:	f1c6 0310 	rsb	r3, r6, #16
 8022dd0:	f427 67fc 	bic.w	r7, r7, #2016	@ 0x7e0
 8022dd4:	1b5b      	subs	r3, r3, r5
 8022dd6:	ea4e 0707 	orr.w	r7, lr, r7
 8022dda:	ebc4 0545 	rsb	r5, r4, r5, lsl #1
 8022dde:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8022de2:	437d      	muls	r5, r7
 8022de4:	fb03 5c0c 	mla	ip, r3, ip, r5
 8022de8:	0403      	lsls	r3, r0, #16
 8022dea:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022dee:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022df2:	4318      	orrs	r0, r3
 8022df4:	0413      	lsls	r3, r2, #16
 8022df6:	f003 63fc 	and.w	r3, r3, #132120576	@ 0x7e00000
 8022dfa:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022dfe:	4313      	orrs	r3, r2
 8022e00:	fb04 c000 	mla	r0, r4, r0, ip
 8022e04:	ebc4 0646 	rsb	r6, r4, r6, lsl #1
 8022e08:	fb06 0003 	mla	r0, r6, r3, r0
 8022e0c:	0d43      	lsrs	r3, r0, #21
 8022e0e:	0940      	lsrs	r0, r0, #5
 8022e10:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8022e14:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 8022e18:	4318      	orrs	r0, r3
 8022e1a:	8008      	strh	r0, [r1, #0]
 8022e1c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8022e20:	4684      	mov	ip, r0
 8022e22:	e7a6      	b.n	8022d72 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x34>
 8022e24:	4607      	mov	r7, r0
 8022e26:	4684      	mov	ip, r0
 8022e28:	e7ab      	b.n	8022d82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e2a:	4607      	mov	r7, r0
 8022e2c:	e7a9      	b.n	8022d82 <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x44>
 8022e2e:	4602      	mov	r2, r0
 8022e30:	e7b4      	b.n	8022d9c <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x5e>
 8022e32:	4602      	mov	r2, r0
 8022e34:	e7ba      	b.n	8022dac <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh+0x6e>

08022e36 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8022e36:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8022e3a:	b08f      	sub	sp, #60	@ 0x3c
 8022e3c:	461d      	mov	r5, r3
 8022e3e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8022e40:	920c      	str	r2, [sp, #48]	@ 0x30
 8022e42:	e9dd 271e 	ldrd	r2, r7, [sp, #120]	@ 0x78
 8022e46:	9107      	str	r1, [sp, #28]
 8022e48:	6859      	ldr	r1, [r3, #4]
 8022e4a:	681b      	ldr	r3, [r3, #0]
 8022e4c:	900d      	str	r0, [sp, #52]	@ 0x34
 8022e4e:	fb01 2707 	mla	r7, r1, r7, r2
 8022e52:	eb03 0747 	add.w	r7, r3, r7, lsl #1
 8022e56:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022e58:	e9dd 4619 	ldrd	r4, r6, [sp, #100]	@ 0x64
 8022e5c:	f8d3 8000 	ldr.w	r8, [r3]
 8022e60:	9b07      	ldr	r3, [sp, #28]
 8022e62:	2b00      	cmp	r3, #0
 8022e64:	dc03      	bgt.n	8022e6e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8022e66:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8022e68:	2b00      	cmp	r3, #0
 8022e6a:	f340 8181 	ble.w	8023170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8022e6e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022e70:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8022e74:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8022e78:	1e48      	subs	r0, r1, #1
 8022e7a:	f102 3cff 	add.w	ip, r2, #4294967295
 8022e7e:	2d00      	cmp	r5, #0
 8022e80:	f340 809b 	ble.w	8022fba <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x184>
 8022e84:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8022e88:	ea4f 4326 	mov.w	r3, r6, asr #16
 8022e8c:	d406      	bmi.n	8022e9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e8e:	4586      	cmp	lr, r0
 8022e90:	da04      	bge.n	8022e9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e92:	2b00      	cmp	r3, #0
 8022e94:	db02      	blt.n	8022e9c <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x66>
 8022e96:	4563      	cmp	r3, ip
 8022e98:	f2c0 8090 	blt.w	8022fbc <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x186>
 8022e9c:	f11e 0e01 	adds.w	lr, lr, #1
 8022ea0:	f100 8084 	bmi.w	8022fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022ea4:	4571      	cmp	r1, lr
 8022ea6:	f2c0 8081 	blt.w	8022fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022eaa:	3301      	adds	r3, #1
 8022eac:	d47e      	bmi.n	8022fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022eae:	429a      	cmp	r2, r3
 8022eb0:	db7c      	blt.n	8022fac <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x176>
 8022eb2:	46aa      	mov	sl, r5
 8022eb4:	46b9      	mov	r9, r7
 8022eb6:	f1ba 0f00 	cmp.w	sl, #0
 8022eba:	f340 8099 	ble.w	8022ff0 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ba>
 8022ebe:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8022ec0:	1421      	asrs	r1, r4, #16
 8022ec2:	ea4f 4026 	mov.w	r0, r6, asr #16
 8022ec6:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8022eca:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8022ece:	e9d3 e302 	ldrd	lr, r3, [r3, #8]
 8022ed2:	f100 80d0 	bmi.w	8023076 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ed6:	f10e 3bff 	add.w	fp, lr, #4294967295
 8022eda:	4559      	cmp	r1, fp
 8022edc:	f280 80cb 	bge.w	8023076 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ee0:	2800      	cmp	r0, #0
 8022ee2:	f2c0 80c8 	blt.w	8023076 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ee6:	f103 3bff 	add.w	fp, r3, #4294967295
 8022eea:	4558      	cmp	r0, fp
 8022eec:	f280 80c3 	bge.w	8023076 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x240>
 8022ef0:	fa0f fe8e 	sxth.w	lr, lr
 8022ef4:	fb00 110e 	mla	r1, r0, lr, r1
 8022ef8:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 8022efc:	f838 b011 	ldrh.w	fp, [r8, r1, lsl #1]
 8022f00:	8841      	ldrh	r1, [r0, #2]
 8022f02:	f1bc 0f00 	cmp.w	ip, #0
 8022f06:	d00b      	beq.n	8022f20 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0xea>
 8022f08:	f10e 4300 	add.w	r3, lr, #2147483648	@ 0x80000000
 8022f0c:	3b01      	subs	r3, #1
 8022f0e:	005b      	lsls	r3, r3, #1
 8022f10:	3302      	adds	r3, #2
 8022f12:	eb00 0e03 	add.w	lr, r0, r3
 8022f16:	5ac3      	ldrh	r3, [r0, r3]
 8022f18:	9308      	str	r3, [sp, #32]
 8022f1a:	f8be 3002 	ldrh.w	r3, [lr, #2]
 8022f1e:	9309      	str	r3, [sp, #36]	@ 0x24
 8022f20:	ea4f 400b 	mov.w	r0, fp, lsl #16
 8022f24:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022f28:	f42b 6bfc 	bic.w	fp, fp, #2016	@ 0x7e0
 8022f2c:	ea40 000b 	orr.w	r0, r0, fp
 8022f30:	fb12 f30c 	smulbb	r3, r2, ip
 8022f34:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 8022f38:	10db      	asrs	r3, r3, #3
 8022f3a:	f1cc 0e10 	rsb	lr, ip, #16
 8022f3e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8022f42:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 8022f46:	ebae 0e02 	sub.w	lr, lr, r2
 8022f4a:	ea4b 0101 	orr.w	r1, fp, r1
 8022f4e:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8022f52:	4351      	muls	r1, r2
 8022f54:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8022f56:	eb03 0e4e 	add.w	lr, r3, lr, lsl #1
 8022f5a:	fb0e 1e00 	mla	lr, lr, r0, r1
 8022f5e:	0410      	lsls	r0, r2, #16
 8022f60:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 8022f64:	f422 62fc 	bic.w	r2, r2, #2016	@ 0x7e0
 8022f68:	4310      	orrs	r0, r2
 8022f6a:	9a08      	ldr	r2, [sp, #32]
 8022f6c:	9908      	ldr	r1, [sp, #32]
 8022f6e:	0412      	lsls	r2, r2, #16
 8022f70:	fb03 e000 	mla	r0, r3, r0, lr
 8022f74:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 8022f78:	f421 6efc 	bic.w	lr, r1, #2016	@ 0x7e0
 8022f7c:	ea42 020e 	orr.w	r2, r2, lr
 8022f80:	ebc3 034c 	rsb	r3, r3, ip, lsl #1
 8022f84:	fb03 0302 	mla	r3, r3, r2, r0
 8022f88:	0d5a      	lsrs	r2, r3, #21
 8022f8a:	095b      	lsrs	r3, r3, #5
 8022f8c:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8022f90:	f423 63fc 	bic.w	r3, r3, #2016	@ 0x7e0
 8022f94:	4313      	orrs	r3, r2
 8022f96:	f8a9 3000 	strh.w	r3, [r9]
 8022f9a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022f9c:	441c      	add	r4, r3
 8022f9e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022fa0:	f109 0902 	add.w	r9, r9, #2
 8022fa4:	441e      	add	r6, r3
 8022fa6:	f10a 3aff 	add.w	sl, sl, #4294967295
 8022faa:	e784      	b.n	8022eb6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x80>
 8022fac:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8022fae:	441c      	add	r4, r3
 8022fb0:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8022fb2:	3d01      	subs	r5, #1
 8022fb4:	441e      	add	r6, r3
 8022fb6:	3702      	adds	r7, #2
 8022fb8:	e761      	b.n	8022e7e <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 8022fba:	d01d      	beq.n	8022ff8 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c2>
 8022fbc:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 8022fbe:	1e6b      	subs	r3, r5, #1
 8022fc0:	fb00 4003 	mla	r0, r0, r3, r4
 8022fc4:	1400      	asrs	r0, r0, #16
 8022fc6:	f53f af74 	bmi.w	8022eb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fca:	3901      	subs	r1, #1
 8022fcc:	4288      	cmp	r0, r1
 8022fce:	f6bf af70 	bge.w	8022eb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fd2:	991c      	ldr	r1, [sp, #112]	@ 0x70
 8022fd4:	fb01 6303 	mla	r3, r1, r3, r6
 8022fd8:	141b      	asrs	r3, r3, #16
 8022fda:	f53f af6a 	bmi.w	8022eb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fde:	3a01      	subs	r2, #1
 8022fe0:	4293      	cmp	r3, r2
 8022fe2:	f6bf af66 	bge.w	8022eb2 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x7c>
 8022fe6:	46a9      	mov	r9, r5
 8022fe8:	46ba      	mov	sl, r7
 8022fea:	f1b9 0f00 	cmp.w	r9, #0
 8022fee:	dc5a      	bgt.n	80230a6 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x270>
 8022ff0:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8022ff4:	eb07 0745 	add.w	r7, r7, r5, lsl #1
 8022ff8:	9b07      	ldr	r3, [sp, #28]
 8022ffa:	2b00      	cmp	r3, #0
 8022ffc:	f340 80b8 	ble.w	8023170 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x33a>
 8023000:	ee30 0a04 	vadd.f32	s0, s0, s8
 8023004:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8023008:	eec7 7a00 	vdiv.f32	s15, s14, s0
 802300c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802300e:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8023012:	ee31 1a05 	vadd.f32	s2, s2, s10
 8023016:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802301a:	eef0 6a62 	vmov.f32	s13, s5
 802301e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8023022:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023026:	ee77 2a62 	vsub.f32	s5, s14, s5
 802302a:	ee16 4a90 	vmov	r4, s13
 802302e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8023032:	eef0 6a43 	vmov.f32	s13, s6
 8023036:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802303a:	ee12 2a90 	vmov	r2, s5
 802303e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023042:	fb92 f3f3 	sdiv	r3, r2, r3
 8023046:	ee13 2a10 	vmov	r2, s6
 802304a:	931b      	str	r3, [sp, #108]	@ 0x6c
 802304c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802304e:	fb92 f3f3 	sdiv	r3, r2, r3
 8023052:	931c      	str	r3, [sp, #112]	@ 0x70
 8023054:	9b07      	ldr	r3, [sp, #28]
 8023056:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8023058:	3b01      	subs	r3, #1
 802305a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802305e:	9307      	str	r3, [sp, #28]
 8023060:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023062:	ee16 6a90 	vmov	r6, s13
 8023066:	bf14      	ite	ne
 8023068:	461d      	movne	r5, r3
 802306a:	4615      	moveq	r5, r2
 802306c:	eeb0 3a67 	vmov.f32	s6, s15
 8023070:	eef0 2a47 	vmov.f32	s5, s14
 8023074:	e6f4      	b.n	8022e60 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2a>
 8023076:	f111 0b01 	adds.w	fp, r1, #1
 802307a:	d48e      	bmi.n	8022f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802307c:	45de      	cmp	lr, fp
 802307e:	db8c      	blt.n	8022f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023080:	f110 0b01 	adds.w	fp, r0, #1
 8023084:	d489      	bmi.n	8022f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 8023086:	455b      	cmp	r3, fp
 8023088:	db87      	blt.n	8022f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 802308a:	b21b      	sxth	r3, r3
 802308c:	e9cd 1001 	strd	r1, r0, [sp, #4]
 8023090:	e9cd 2c03 	strd	r2, ip, [sp, #12]
 8023094:	9300      	str	r3, [sp, #0]
 8023096:	4642      	mov	r2, r8
 8023098:	fa0f f38e 	sxth.w	r3, lr
 802309c:	4649      	mov	r1, r9
 802309e:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80230a0:	f7ff fe4d 	bl	8022d3e <_ZNK8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtssiihh>
 80230a4:	e779      	b.n	8022f9a <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x164>
 80230a6:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80230a8:	f9b3 3008 	ldrsh.w	r3, [r3, #8]
 80230ac:	1420      	asrs	r0, r4, #16
 80230ae:	1431      	asrs	r1, r6, #16
 80230b0:	fb03 0101 	mla	r1, r3, r1, r0
 80230b4:	eb08 0041 	add.w	r0, r8, r1, lsl #1
 80230b8:	f3c6 3e03 	ubfx	lr, r6, #12, #4
 80230bc:	f838 c011 	ldrh.w	ip, [r8, r1, lsl #1]
 80230c0:	8841      	ldrh	r1, [r0, #2]
 80230c2:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80230c6:	f1be 0f00 	cmp.w	lr, #0
 80230ca:	d00b      	beq.n	80230e4 <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 80230cc:	f103 4300 	add.w	r3, r3, #2147483648	@ 0x80000000
 80230d0:	3b01      	subs	r3, #1
 80230d2:	005b      	lsls	r3, r3, #1
 80230d4:	3302      	adds	r3, #2
 80230d6:	eb00 0b03 	add.w	fp, r0, r3
 80230da:	5ac3      	ldrh	r3, [r0, r3]
 80230dc:	930a      	str	r3, [sp, #40]	@ 0x28
 80230de:	f8bb 3002 	ldrh.w	r3, [fp, #2]
 80230e2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80230e4:	ea4f 400c 	mov.w	r0, ip, lsl #16
 80230e8:	fb12 f30e 	smulbb	r3, r2, lr
 80230ec:	f42c 6cfc 	bic.w	ip, ip, #2016	@ 0x7e0
 80230f0:	ea4f 4b01 	mov.w	fp, r1, lsl #16
 80230f4:	f000 60fc 	and.w	r0, r0, #132120576	@ 0x7e00000
 80230f8:	10db      	asrs	r3, r3, #3
 80230fa:	ea40 000c 	orr.w	r0, r0, ip
 80230fe:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023102:	f1ce 0c10 	rsb	ip, lr, #16
 8023106:	f421 61fc 	bic.w	r1, r1, #2016	@ 0x7e0
 802310a:	ebac 0c02 	sub.w	ip, ip, r2
 802310e:	ea4b 0101 	orr.w	r1, fp, r1
 8023112:	ebc3 0242 	rsb	r2, r3, r2, lsl #1
 8023116:	4351      	muls	r1, r2
 8023118:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802311a:	eb03 0c4c 	add.w	ip, r3, ip, lsl #1
 802311e:	fb0c 1c00 	mla	ip, ip, r0, r1
 8023122:	ea4f 4b02 	mov.w	fp, r2, lsl #16
 8023126:	f422 60fc 	bic.w	r0, r2, #2016	@ 0x7e0
 802312a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 802312c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 802312e:	f00b 6bfc 	and.w	fp, fp, #132120576	@ 0x7e00000
 8023132:	0412      	lsls	r2, r2, #16
 8023134:	ea4b 0000 	orr.w	r0, fp, r0
 8023138:	f002 62fc 	and.w	r2, r2, #132120576	@ 0x7e00000
 802313c:	f421 6bfc 	bic.w	fp, r1, #2016	@ 0x7e0
 8023140:	fb03 c000 	mla	r0, r3, r0, ip
 8023144:	ea42 0b0b 	orr.w	fp, r2, fp
 8023148:	ebc3 034e 	rsb	r3, r3, lr, lsl #1
 802314c:	fb03 000b 	mla	r0, r3, fp, r0
 8023150:	0d43      	lsrs	r3, r0, #21
 8023152:	0940      	lsrs	r0, r0, #5
 8023154:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023158:	f420 60fc 	bic.w	r0, r0, #2016	@ 0x7e0
 802315c:	4318      	orrs	r0, r3
 802315e:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8023160:	f82a 0b02 	strh.w	r0, [sl], #2
 8023164:	441c      	add	r4, r3
 8023166:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8023168:	f109 39ff 	add.w	r9, r9, #4294967295
 802316c:	441e      	add	r6, r3
 802316e:	e73c      	b.n	8022fea <_ZN8touchgfx8LCD16bpp54TextureMapper_RGB565_Opaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b4>
 8023170:	b00f      	add	sp, #60	@ 0x3c
 8023172:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>:
 8023176:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 802317a:	b085      	sub	sp, #20
 802317c:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8023180:	9102      	str	r1, [sp, #8]
 8023182:	2c00      	cmp	r4, #0
 8023184:	fb04 7103 	mla	r1, r4, r3, r7
 8023188:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 802318c:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8023190:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8023194:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023198:	f2c0 811b 	blt.w	80233d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 802319c:	45a6      	cmp	lr, r4
 802319e:	f340 8118 	ble.w	80233d2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x25c>
 80231a2:	2f00      	cmp	r7, #0
 80231a4:	f2c0 8113 	blt.w	80233ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80231a8:	42bb      	cmp	r3, r7
 80231aa:	f340 8110 	ble.w	80233ce <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x258>
 80231ae:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 80231b2:	1c7a      	adds	r2, r7, #1
 80231b4:	f100 8110 	bmi.w	80233d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80231b8:	4293      	cmp	r3, r2
 80231ba:	f340 810d 	ble.w	80233d8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x262>
 80231be:	2e00      	cmp	r6, #0
 80231c0:	f000 810c 	beq.w	80233dc <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x266>
 80231c4:	f8dc 1004 	ldr.w	r1, [ip, #4]
 80231c8:	3401      	adds	r4, #1
 80231ca:	f100 810b 	bmi.w	80233e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231ce:	45a6      	cmp	lr, r4
 80231d0:	f340 8108 	ble.w	80233e4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26e>
 80231d4:	2800      	cmp	r0, #0
 80231d6:	f000 8108 	beq.w	80233ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x274>
 80231da:	2f00      	cmp	r7, #0
 80231dc:	f2c0 8100 	blt.w	80233e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80231e0:	42bb      	cmp	r3, r7
 80231e2:	f340 80fd 	ble.w	80233e0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x26a>
 80231e6:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 80231ea:	3701      	adds	r7, #1
 80231ec:	f100 8100 	bmi.w	80233f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80231f0:	42bb      	cmp	r3, r7
 80231f2:	f340 80fd 	ble.w	80233f0 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27a>
 80231f6:	2e00      	cmp	r6, #0
 80231f8:	f000 80fc 	beq.w	80233f4 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x27e>
 80231fc:	3301      	adds	r3, #1
 80231fe:	f85c 2023 	ldr.w	r2, [ip, r3, lsl #2]
 8023202:	b2b6      	uxth	r6, r6
 8023204:	b280      	uxth	r0, r0
 8023206:	fb00 fe06 	mul.w	lr, r0, r6
 802320a:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 802320e:	0136      	lsls	r6, r6, #4
 8023210:	eba6 070e 	sub.w	r7, r6, lr
 8023214:	b280      	uxth	r0, r0
 8023216:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 802321a:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 802321e:	b2bf      	uxth	r7, r7
 8023220:	1a1b      	subs	r3, r3, r0
 8023222:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023226:	b29b      	uxth	r3, r3
 8023228:	fb0a f607 	mul.w	r6, sl, r7
 802322c:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023230:	fb0b 6603 	mla	r6, fp, r3, r6
 8023234:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023238:	fb00 6609 	mla	r6, r0, r9, r6
 802323c:	fb0e 6608 	mla	r6, lr, r8, r6
 8023240:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023244:	9600      	str	r6, [sp, #0]
 8023246:	2e00      	cmp	r6, #0
 8023248:	f000 80be 	beq.w	80233c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x252>
 802324c:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023250:	fb0b fc0c 	mul.w	ip, fp, ip
 8023254:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8023258:	fb0b f505 	mul.w	r5, fp, r5
 802325c:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023260:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8023264:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023268:	44dc      	add	ip, fp
 802326a:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802326e:	9501      	str	r5, [sp, #4]
 8023270:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8023274:	9503      	str	r5, [sp, #12]
 8023276:	9d01      	ldr	r5, [sp, #4]
 8023278:	9e02      	ldr	r6, [sp, #8]
 802327a:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 802327e:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023282:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8023286:	fb0a fc0c 	mul.w	ip, sl, ip
 802328a:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 802328e:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023292:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023296:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 802329a:	4465      	add	r5, ip
 802329c:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 80232a0:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 80232a4:	fb09 fc0c 	mul.w	ip, r9, ip
 80232a8:	fb09 f904 	mul.w	r9, r9, r4
 80232ac:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 80232b0:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 80232b4:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 80232b8:	fb08 f404 	mul.w	r4, r8, r4
 80232bc:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 80232c0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80232c4:	fb08 f802 	mul.w	r8, r8, r2
 80232c8:	fb0a fa01 	mul.w	sl, sl, r1
 80232cc:	0a22      	lsrs	r2, r4, #8
 80232ce:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 80232d2:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 80232d6:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 80232da:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 80232de:	4414      	add	r4, r2
 80232e0:	ea4f 211c 	mov.w	r1, ip, lsr #8
 80232e4:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 80232e8:	0a2d      	lsrs	r5, r5, #8
 80232ea:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 80232ee:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 80232f2:	9a03      	ldr	r2, [sp, #12]
 80232f4:	8836      	ldrh	r6, [r6, #0]
 80232f6:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 80232fa:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 80232fe:	437d      	muls	r5, r7
 8023300:	4461      	add	r1, ip
 8023302:	0a24      	lsrs	r4, r4, #8
 8023304:	fb02 5503 	mla	r5, r2, r3, r5
 8023308:	0a09      	lsrs	r1, r1, #8
 802330a:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 802330e:	fb04 540e 	mla	r4, r4, lr, r5
 8023312:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023316:	fb01 4100 	mla	r1, r1, r0, r4
 802331a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802331e:	0a09      	lsrs	r1, r1, #8
 8023320:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023324:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023328:	fb07 f70a 	mul.w	r7, r7, sl
 802332c:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023330:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023334:	fb03 7101 	mla	r1, r3, r1, r7
 8023338:	ea4f 2919 	mov.w	r9, r9, lsr #8
 802333c:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023340:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023344:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023348:	fb00 e101 	mla	r1, r0, r1, lr
 802334c:	f89d 004c 	ldrb.w	r0, [sp, #76]	@ 0x4c
 8023350:	9a00      	ldr	r2, [sp, #0]
 8023352:	b287      	uxth	r7, r0
 8023354:	437a      	muls	r2, r7
 8023356:	0a09      	lsrs	r1, r1, #8
 8023358:	1c53      	adds	r3, r2, #1
 802335a:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 802335e:	4321      	orrs	r1, r4
 8023360:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023364:	1235      	asrs	r5, r6, #8
 8023366:	0c0a      	lsrs	r2, r1, #16
 8023368:	ea6f 2313 	mvn.w	r3, r3, lsr #8
 802336c:	b2db      	uxtb	r3, r3
 802336e:	fb12 f207 	smulbb	r2, r2, r7
 8023372:	f005 05f8 	and.w	r5, r5, #248	@ 0xf8
 8023376:	fb05 2503 	mla	r5, r5, r3, r2
 802337a:	f3c1 2407 	ubfx	r4, r1, #8, #8
 802337e:	10f2      	asrs	r2, r6, #3
 8023380:	b2c8      	uxtb	r0, r1
 8023382:	00f6      	lsls	r6, r6, #3
 8023384:	fb14 f407 	smulbb	r4, r4, r7
 8023388:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802338c:	b2f6      	uxtb	r6, r6
 802338e:	fb10 f007 	smulbb	r0, r0, r7
 8023392:	fb02 4203 	mla	r2, r2, r3, r4
 8023396:	b2ad      	uxth	r5, r5
 8023398:	fb06 0303 	mla	r3, r6, r3, r0
 802339c:	b299      	uxth	r1, r3
 802339e:	b294      	uxth	r4, r2
 80233a0:	1c6b      	adds	r3, r5, #1
 80233a2:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80233a6:	1c62      	adds	r2, r4, #1
 80233a8:	1c4b      	adds	r3, r1, #1
 80233aa:	eb03 2311 	add.w	r3, r3, r1, lsr #8
 80233ae:	eb02 2214 	add.w	r2, r2, r4, lsr #8
 80233b2:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80233b6:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 80233ba:	0952      	lsrs	r2, r2, #5
 80233bc:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80233c0:	432b      	orrs	r3, r5
 80233c2:	4313      	orrs	r3, r2
 80233c4:	9a02      	ldr	r2, [sp, #8]
 80233c6:	8013      	strh	r3, [r2, #0]
 80233c8:	b005      	add	sp, #20
 80233ca:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80233ce:	2500      	movs	r5, #0
 80233d0:	e6ef      	b.n	80231b2 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x3c>
 80233d2:	2100      	movs	r1, #0
 80233d4:	460d      	mov	r5, r1
 80233d6:	e6f7      	b.n	80231c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233d8:	2100      	movs	r1, #0
 80233da:	e6f5      	b.n	80231c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233dc:	4631      	mov	r1, r6
 80233de:	e6f3      	b.n	80231c8 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x52>
 80233e0:	2400      	movs	r4, #0
 80233e2:	e702      	b.n	80231ea <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x74>
 80233e4:	2200      	movs	r2, #0
 80233e6:	4614      	mov	r4, r2
 80233e8:	e70b      	b.n	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233ea:	4602      	mov	r2, r0
 80233ec:	4604      	mov	r4, r0
 80233ee:	e708      	b.n	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233f0:	2200      	movs	r2, #0
 80233f2:	e706      	b.n	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>
 80233f4:	4632      	mov	r2, r6
 80233f6:	e704      	b.n	8023202 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh+0x8c>

080233f8 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80233f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80233fc:	b09d      	sub	sp, #116	@ 0x74
 80233fe:	e9dd 4627 	ldrd	r4, r6, [sp, #156]	@ 0x9c
 8023402:	9219      	str	r2, [sp, #100]	@ 0x64
 8023404:	9307      	str	r3, [sp, #28]
 8023406:	9a2b      	ldr	r2, [sp, #172]	@ 0xac
 8023408:	f89d 30bc 	ldrb.w	r3, [sp, #188]	@ 0xbc
 802340c:	931a      	str	r3, [sp, #104]	@ 0x68
 802340e:	9117      	str	r1, [sp, #92]	@ 0x5c
 8023410:	e9dd 132c 	ldrd	r1, r3, [sp, #176]	@ 0xb0
 8023414:	901b      	str	r0, [sp, #108]	@ 0x6c
 8023416:	6850      	ldr	r0, [r2, #4]
 8023418:	6812      	ldr	r2, [r2, #0]
 802341a:	fb00 1303 	mla	r3, r0, r3, r1
 802341e:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023422:	930a      	str	r3, [sp, #40]	@ 0x28
 8023424:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023426:	681b      	ldr	r3, [r3, #0]
 8023428:	9310      	str	r3, [sp, #64]	@ 0x40
 802342a:	f8bd 3068 	ldrh.w	r3, [sp, #104]	@ 0x68
 802342e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8023430:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023432:	2b00      	cmp	r3, #0
 8023434:	dc03      	bgt.n	802343e <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x46>
 8023436:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8023438:	2b00      	cmp	r3, #0
 802343a:	f340 8375 	ble.w	8023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 802343e:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023440:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023444:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023448:	1e48      	subs	r0, r1, #1
 802344a:	1e57      	subs	r7, r2, #1
 802344c:	9b07      	ldr	r3, [sp, #28]
 802344e:	2b00      	cmp	r3, #0
 8023450:	f340 818e 	ble.w	8023770 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x378>
 8023454:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023458:	ea4f 4326 	mov.w	r3, r6, asr #16
 802345c:	d406      	bmi.n	802346c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 802345e:	4584      	cmp	ip, r0
 8023460:	da04      	bge.n	802346c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023462:	2b00      	cmp	r3, #0
 8023464:	db02      	blt.n	802346c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74>
 8023466:	42bb      	cmp	r3, r7
 8023468:	f2c0 8183 	blt.w	8023772 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x37a>
 802346c:	f11c 0c01 	adds.w	ip, ip, #1
 8023470:	f100 8173 	bmi.w	802375a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023474:	4561      	cmp	r1, ip
 8023476:	f2c0 8170 	blt.w	802375a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 802347a:	3301      	adds	r3, #1
 802347c:	f100 816d 	bmi.w	802375a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023480:	429a      	cmp	r2, r3
 8023482:	f2c0 816a 	blt.w	802375a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x362>
 8023486:	9b07      	ldr	r3, [sp, #28]
 8023488:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 802348a:	9318      	str	r3, [sp, #96]	@ 0x60
 802348c:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 802348e:	2b00      	cmp	r3, #0
 8023490:	f340 818c 	ble.w	80237ac <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3b4>
 8023494:	9a2e      	ldr	r2, [sp, #184]	@ 0xb8
 8023496:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023498:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 802349c:	689b      	ldr	r3, [r3, #8]
 802349e:	1422      	asrs	r2, r4, #16
 80234a0:	ea4f 4c26 	mov.w	ip, r6, asr #16
 80234a4:	f3c4 3003 	ubfx	r0, r4, #12, #4
 80234a8:	f3c6 3103 	ubfx	r1, r6, #12, #4
 80234ac:	f100 81cd 	bmi.w	802384a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234b0:	f103 38ff 	add.w	r8, r3, #4294967295
 80234b4:	4542      	cmp	r2, r8
 80234b6:	f280 81c8 	bge.w	802384a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234ba:	f1bc 0f00 	cmp.w	ip, #0
 80234be:	f2c0 81c4 	blt.w	802384a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234c2:	f10e 38ff 	add.w	r8, lr, #4294967295
 80234c6:	45c4      	cmp	ip, r8
 80234c8:	f280 81bf 	bge.w	802384a <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x452>
 80234cc:	b21b      	sxth	r3, r3
 80234ce:	fb0c 2203 	mla	r2, ip, r3, r2
 80234d2:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 80234d4:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 80234d8:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 80234dc:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 80234e0:	2800      	cmp	r0, #0
 80234e2:	f000 81a9 	beq.w	8023838 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x440>
 80234e6:	f8d8 5004 	ldr.w	r5, [r8, #4]
 80234ea:	950c      	str	r5, [sp, #48]	@ 0x30
 80234ec:	0e2d      	lsrs	r5, r5, #24
 80234ee:	9513      	str	r5, [sp, #76]	@ 0x4c
 80234f0:	b181      	cbz	r1, 8023514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 80234f2:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 80234f6:	3b01      	subs	r3, #1
 80234f8:	009b      	lsls	r3, r3, #2
 80234fa:	3304      	adds	r3, #4
 80234fc:	eb08 0c03 	add.w	ip, r8, r3
 8023500:	f858 3003 	ldr.w	r3, [r8, r3]
 8023504:	9308      	str	r3, [sp, #32]
 8023506:	0e1b      	lsrs	r3, r3, #24
 8023508:	9311      	str	r3, [sp, #68]	@ 0x44
 802350a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 802350e:	930d      	str	r3, [sp, #52]	@ 0x34
 8023510:	0e1b      	lsrs	r3, r3, #24
 8023512:	9314      	str	r3, [sp, #80]	@ 0x50
 8023514:	b280      	uxth	r0, r0
 8023516:	b289      	uxth	r1, r1
 8023518:	fb00 f901 	mul.w	r9, r0, r1
 802351c:	ebc9 1101 	rsb	r1, r9, r1, lsl #4
 8023520:	0100      	lsls	r0, r0, #4
 8023522:	eba0 0809 	sub.w	r8, r0, r9
 8023526:	b289      	uxth	r1, r1
 8023528:	f5c0 7380 	rsb	r3, r0, #256	@ 0x100
 802352c:	9813      	ldr	r0, [sp, #76]	@ 0x4c
 802352e:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8023530:	fa1f f888 	uxth.w	r8, r8
 8023534:	1a5b      	subs	r3, r3, r1
 8023536:	b29b      	uxth	r3, r3
 8023538:	fb08 f000 	mul.w	r0, r8, r0
 802353c:	fb03 000e 	mla	r0, r3, lr, r0
 8023540:	fb01 0005 	mla	r0, r1, r5, r0
 8023544:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023546:	fb09 0005 	mla	r0, r9, r5, r0
 802354a:	f3c0 2007 	ubfx	r0, r0, #8, #8
 802354e:	2800      	cmp	r0, #0
 8023550:	f000 80fa 	beq.w	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023554:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023558:	d01b      	beq.n	8023592 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x19a>
 802355a:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 802355e:	fb0e fa0a 	mul.w	sl, lr, sl
 8023562:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023566:	fb0e fe02 	mul.w	lr, lr, r2
 802356a:	ea4f 221a 	mov.w	r2, sl, lsr #8
 802356e:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023572:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023576:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 802357a:	4452      	add	r2, sl
 802357c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023580:	0a12      	lsrs	r2, r2, #8
 8023582:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023586:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 802358a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 802358e:	ea42 020c 	orr.w	r2, r2, ip
 8023592:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023594:	2dff      	cmp	r5, #255	@ 0xff
 8023596:	d021      	beq.n	80235dc <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e4>
 8023598:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802359a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 802359e:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80235a0:	fb05 fb0b 	mul.w	fp, r5, fp
 80235a4:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 80235a6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80235aa:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 80235ac:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80235b0:	fb05 fa0a 	mul.w	sl, r5, sl
 80235b4:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80235b8:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 80235bc:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 80235c0:	44de      	add	lr, fp
 80235c2:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 80235c6:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 80235ca:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80235ce:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 80235d2:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80235d6:	ea4e 050a 	orr.w	r5, lr, sl
 80235da:	950c      	str	r5, [sp, #48]	@ 0x30
 80235dc:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80235de:	2dff      	cmp	r5, #255	@ 0xff
 80235e0:	d021      	beq.n	8023626 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22e>
 80235e2:	9d08      	ldr	r5, [sp, #32]
 80235e4:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 80235e8:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80235ea:	fb05 fb0b 	mul.w	fp, r5, fp
 80235ee:	9d08      	ldr	r5, [sp, #32]
 80235f0:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80235f4:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 80235f6:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 80235fa:	fb05 fa0a 	mul.w	sl, r5, sl
 80235fe:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023602:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023606:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 802360a:	44de      	add	lr, fp
 802360c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023610:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023614:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023618:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802361c:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023620:	ea4e 050a 	orr.w	r5, lr, sl
 8023624:	9508      	str	r5, [sp, #32]
 8023626:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023628:	2dff      	cmp	r5, #255	@ 0xff
 802362a:	d021      	beq.n	8023670 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x278>
 802362c:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802362e:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023632:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023634:	fb05 fb0b 	mul.w	fp, r5, fp
 8023638:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802363a:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802363e:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8023640:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023644:	fb05 fa0a 	mul.w	sl, r5, sl
 8023648:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 802364c:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023650:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023654:	44de      	add	lr, fp
 8023656:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 802365a:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 802365e:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023662:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023666:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802366a:	ea4e 050a 	orr.w	r5, lr, sl
 802366e:	950d      	str	r5, [sp, #52]	@ 0x34
 8023670:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023672:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023676:	9d08      	ldr	r5, [sp, #32]
 8023678:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802367c:	fb08 fc0c 	mul.w	ip, r8, ip
 8023680:	fb03 cc0e 	mla	ip, r3, lr, ip
 8023684:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023688:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 802368a:	fb01 cc0e 	mla	ip, r1, lr, ip
 802368e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8023692:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023694:	fb09 cc0e 	mla	ip, r9, lr, ip
 8023698:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802369c:	fb08 f80e 	mul.w	r8, r8, lr
 80236a0:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 80236a4:	fb03 8202 	mla	r2, r3, r2, r8
 80236a8:	9b08      	ldr	r3, [sp, #32]
 80236aa:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 80236ac:	f403 4a7f 	and.w	sl, r3, #65280	@ 0xff00
 80236b0:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80236b2:	fb01 220a 	mla	r2, r1, sl, r2
 80236b6:	f403 417f 	and.w	r1, r3, #65280	@ 0xff00
 80236ba:	fb09 2901 	mla	r9, r9, r1, r2
 80236be:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 80236c0:	883b      	ldrh	r3, [r7, #0]
 80236c2:	4342      	muls	r2, r0
 80236c4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80236c8:	ea4f 2919 	mov.w	r9, r9, lsr #8
 80236cc:	1c50      	adds	r0, r2, #1
 80236ce:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80236d2:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 80236d6:	ea4c 0c09 	orr.w	ip, ip, r9
 80236da:	eb00 2012 	add.w	r0, r0, r2, lsr #8
 80236de:	1219      	asrs	r1, r3, #8
 80236e0:	ea4f 421c 	mov.w	r2, ip, lsr #16
 80236e4:	ea6f 2010 	mvn.w	r0, r0, lsr #8
 80236e8:	b2c0      	uxtb	r0, r0
 80236ea:	fb12 f205 	smulbb	r2, r2, r5
 80236ee:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 80236f2:	fb01 2100 	mla	r1, r1, r0, r2
 80236f6:	f3cc 2e07 	ubfx	lr, ip, #8, #8
 80236fa:	10da      	asrs	r2, r3, #3
 80236fc:	fa5f fc8c 	uxtb.w	ip, ip
 8023700:	00db      	lsls	r3, r3, #3
 8023702:	fb1c fc05 	smulbb	ip, ip, r5
 8023706:	b2db      	uxtb	r3, r3
 8023708:	b289      	uxth	r1, r1
 802370a:	fb03 c300 	mla	r3, r3, r0, ip
 802370e:	fa1f fc83 	uxth.w	ip, r3
 8023712:	1c4b      	adds	r3, r1, #1
 8023714:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023718:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 802371c:	fb1e fe05 	smulbb	lr, lr, r5
 8023720:	f10c 0301 	add.w	r3, ip, #1
 8023724:	fb02 e200 	mla	r2, r2, r0, lr
 8023728:	eb03 231c 	add.w	r3, r3, ip, lsr #8
 802372c:	b292      	uxth	r2, r2
 802372e:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 8023732:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8023736:	430b      	orrs	r3, r1
 8023738:	1c51      	adds	r1, r2, #1
 802373a:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 802373e:	0952      	lsrs	r2, r2, #5
 8023740:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023744:	4313      	orrs	r3, r2
 8023746:	803b      	strh	r3, [r7, #0]
 8023748:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802374a:	441c      	add	r4, r3
 802374c:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 802374e:	441e      	add	r6, r3
 8023750:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023752:	3b01      	subs	r3, #1
 8023754:	3702      	adds	r7, #2
 8023756:	9318      	str	r3, [sp, #96]	@ 0x60
 8023758:	e698      	b.n	802348c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x94>
 802375a:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 802375c:	441c      	add	r4, r3
 802375e:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023760:	441e      	add	r6, r3
 8023762:	9b07      	ldr	r3, [sp, #28]
 8023764:	3b01      	subs	r3, #1
 8023766:	9307      	str	r3, [sp, #28]
 8023768:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 802376a:	3302      	adds	r3, #2
 802376c:	930a      	str	r3, [sp, #40]	@ 0x28
 802376e:	e66d      	b.n	802344c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x54>
 8023770:	d023      	beq.n	80237ba <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3c2>
 8023772:	9b07      	ldr	r3, [sp, #28]
 8023774:	9829      	ldr	r0, [sp, #164]	@ 0xa4
 8023776:	3b01      	subs	r3, #1
 8023778:	fb00 4003 	mla	r0, r0, r3, r4
 802377c:	1400      	asrs	r0, r0, #16
 802377e:	f53f ae82 	bmi.w	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023782:	3901      	subs	r1, #1
 8023784:	4288      	cmp	r0, r1
 8023786:	f6bf ae7e 	bge.w	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802378a:	992a      	ldr	r1, [sp, #168]	@ 0xa8
 802378c:	fb01 6303 	mla	r3, r1, r3, r6
 8023790:	141b      	asrs	r3, r3, #16
 8023792:	f53f ae78 	bmi.w	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 8023796:	3a01      	subs	r2, #1
 8023798:	4293      	cmp	r3, r2
 802379a:	f6bf ae74 	bge.w	8023486 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8e>
 802379e:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80237a2:	f8dd 9028 	ldr.w	r9, [sp, #40]	@ 0x28
 80237a6:	f1bb 0f00 	cmp.w	fp, #0
 80237aa:	dc6c      	bgt.n	8023886 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80237ac:	9b07      	ldr	r3, [sp, #28]
 80237ae:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80237b2:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80237b4:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80237b8:	930a      	str	r3, [sp, #40]	@ 0x28
 80237ba:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80237bc:	2b00      	cmp	r3, #0
 80237be:	f340 81b3 	ble.w	8023b28 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x730>
 80237c2:	ee30 0a04 	vadd.f32	s0, s0, s8
 80237c6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80237ca:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80237ce:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 80237d0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 80237d4:	ee31 1a05 	vadd.f32	s2, s2, s10
 80237d8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 80237dc:	eef0 6a62 	vmov.f32	s13, s5
 80237e0:	ee61 7a27 	vmul.f32	s15, s2, s15
 80237e4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 80237e8:	ee77 2a62 	vsub.f32	s5, s14, s5
 80237ec:	ee16 4a90 	vmov	r4, s13
 80237f0:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 80237f4:	eef0 6a43 	vmov.f32	s13, s6
 80237f8:	ee37 3ac3 	vsub.f32	s6, s15, s6
 80237fc:	ee12 2a90 	vmov	r2, s5
 8023800:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8023804:	fb92 f3f3 	sdiv	r3, r2, r3
 8023808:	ee13 2a10 	vmov	r2, s6
 802380c:	9329      	str	r3, [sp, #164]	@ 0xa4
 802380e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023810:	fb92 f3f3 	sdiv	r3, r2, r3
 8023814:	932a      	str	r3, [sp, #168]	@ 0xa8
 8023816:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023818:	9a19      	ldr	r2, [sp, #100]	@ 0x64
 802381a:	3b01      	subs	r3, #1
 802381c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8023820:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023822:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8023824:	bf08      	it	eq
 8023826:	4613      	moveq	r3, r2
 8023828:	ee16 6a90 	vmov	r6, s13
 802382c:	9307      	str	r3, [sp, #28]
 802382e:	eeb0 3a67 	vmov.f32	s6, s15
 8023832:	eef0 2a47 	vmov.f32	s5, s14
 8023836:	e5fb      	b.n	8023430 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x38>
 8023838:	2900      	cmp	r1, #0
 802383a:	f43f ae6b 	beq.w	8023514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802383e:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8023842:	9308      	str	r3, [sp, #32]
 8023844:	0e1b      	lsrs	r3, r3, #24
 8023846:	9311      	str	r3, [sp, #68]	@ 0x44
 8023848:	e664      	b.n	8023514 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x11c>
 802384a:	f112 0801 	adds.w	r8, r2, #1
 802384e:	f53f af7b 	bmi.w	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023852:	4543      	cmp	r3, r8
 8023854:	f6ff af78 	blt.w	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023858:	f11c 0801 	adds.w	r8, ip, #1
 802385c:	f53f af74 	bmi.w	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023860:	45c6      	cmp	lr, r8
 8023862:	f6ff af71 	blt.w	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023866:	9d1a      	ldr	r5, [sp, #104]	@ 0x68
 8023868:	9201      	str	r2, [sp, #4]
 802386a:	fa0f f28e 	sxth.w	r2, lr
 802386e:	e9cd 1504 	strd	r1, r5, [sp, #16]
 8023872:	e9cd c002 	strd	ip, r0, [sp, #8]
 8023876:	9200      	str	r2, [sp, #0]
 8023878:	b21b      	sxth	r3, r3
 802387a:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 802387c:	981b      	ldr	r0, [sp, #108]	@ 0x6c
 802387e:	4639      	mov	r1, r7
 8023880:	f7ff fc79 	bl	8023176 <_ZNK8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA16writePixelOnEdgeEPtPKmssiihhh>
 8023884:	e760      	b.n	8023748 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x350>
 8023886:	9b2e      	ldr	r3, [sp, #184]	@ 0xb8
 8023888:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802388a:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 802388e:	1427      	asrs	r7, r4, #16
 8023890:	1433      	asrs	r3, r6, #16
 8023892:	fb01 7303 	mla	r3, r1, r3, r7
 8023896:	eb05 0783 	add.w	r7, r5, r3, lsl #2
 802389a:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802389e:	f3c4 3203 	ubfx	r2, r4, #12, #4
 80238a2:	f3c6 3003 	ubfx	r0, r6, #12, #4
 80238a6:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 80238aa:	2a00      	cmp	r2, #0
 80238ac:	f000 8133 	beq.w	8023b16 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x71e>
 80238b0:	687d      	ldr	r5, [r7, #4]
 80238b2:	950e      	str	r5, [sp, #56]	@ 0x38
 80238b4:	0e2d      	lsrs	r5, r5, #24
 80238b6:	9515      	str	r5, [sp, #84]	@ 0x54
 80238b8:	b178      	cbz	r0, 80238da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 80238ba:	f101 4180 	add.w	r1, r1, #1073741824	@ 0x40000000
 80238be:	3901      	subs	r1, #1
 80238c0:	0089      	lsls	r1, r1, #2
 80238c2:	3104      	adds	r1, #4
 80238c4:	eb07 0e01 	add.w	lr, r7, r1
 80238c8:	5879      	ldr	r1, [r7, r1]
 80238ca:	9109      	str	r1, [sp, #36]	@ 0x24
 80238cc:	0e09      	lsrs	r1, r1, #24
 80238ce:	9112      	str	r1, [sp, #72]	@ 0x48
 80238d0:	f8de 1004 	ldr.w	r1, [lr, #4]
 80238d4:	910f      	str	r1, [sp, #60]	@ 0x3c
 80238d6:	0e09      	lsrs	r1, r1, #24
 80238d8:	9116      	str	r1, [sp, #88]	@ 0x58
 80238da:	b292      	uxth	r2, r2
 80238dc:	b280      	uxth	r0, r0
 80238de:	fb02 f800 	mul.w	r8, r2, r0
 80238e2:	ebc8 1000 	rsb	r0, r8, r0, lsl #4
 80238e6:	0112      	lsls	r2, r2, #4
 80238e8:	eba2 0e08 	sub.w	lr, r2, r8
 80238ec:	b280      	uxth	r0, r0
 80238ee:	f5c2 7280 	rsb	r2, r2, #256	@ 0x100
 80238f2:	9915      	ldr	r1, [sp, #84]	@ 0x54
 80238f4:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80238f6:	fa1f fe8e 	uxth.w	lr, lr
 80238fa:	1a12      	subs	r2, r2, r0
 80238fc:	b292      	uxth	r2, r2
 80238fe:	fb0e f101 	mul.w	r1, lr, r1
 8023902:	fb02 110c 	mla	r1, r2, ip, r1
 8023906:	fb00 1105 	mla	r1, r0, r5, r1
 802390a:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 802390c:	fb08 1105 	mla	r1, r8, r5, r1
 8023910:	f3c1 2107 	ubfx	r1, r1, #8, #8
 8023914:	2900      	cmp	r1, #0
 8023916:	f000 80f5 	beq.w	8023b04 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70c>
 802391a:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 802391e:	d019      	beq.n	8023954 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55c>
 8023920:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 8023924:	fb0c fa0a 	mul.w	sl, ip, sl
 8023928:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 802392c:	fb0c fc03 	mul.w	ip, ip, r3
 8023930:	ea4f 231a 	mov.w	r3, sl, lsr #8
 8023934:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 8023938:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 802393c:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 8023940:	4453      	add	r3, sl
 8023942:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 8023946:	0a1b      	lsrs	r3, r3, #8
 8023948:	0a3f      	lsrs	r7, r7, #8
 802394a:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 802394e:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 8023952:	433b      	orrs	r3, r7
 8023954:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023956:	2dff      	cmp	r5, #255	@ 0xff
 8023958:	d020      	beq.n	802399c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a4>
 802395a:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802395c:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023960:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8023962:	436f      	muls	r7, r5
 8023964:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023966:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 802396a:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802396c:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023970:	fb05 fa0a 	mul.w	sl, r5, sl
 8023974:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023978:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802397c:	44bc      	add	ip, r7
 802397e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023982:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023986:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802398a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802398e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023992:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023996:	ea4c 050a 	orr.w	r5, ip, sl
 802399a:	950e      	str	r5, [sp, #56]	@ 0x38
 802399c:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 802399e:	2dff      	cmp	r5, #255	@ 0xff
 80239a0:	d020      	beq.n	80239e4 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ec>
 80239a2:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80239a4:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80239a8:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80239aa:	436f      	muls	r7, r5
 80239ac:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80239ae:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80239b2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 80239b4:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 80239b8:	fb05 fa0a 	mul.w	sl, r5, sl
 80239bc:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80239c0:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80239c4:	44bc      	add	ip, r7
 80239c6:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80239ca:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80239ce:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80239d2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80239d6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80239da:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80239de:	ea4c 050a 	orr.w	r5, ip, sl
 80239e2:	9509      	str	r5, [sp, #36]	@ 0x24
 80239e4:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80239e6:	2dff      	cmp	r5, #255	@ 0xff
 80239e8:	d020      	beq.n	8023a2c <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x634>
 80239ea:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80239ec:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80239f0:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80239f2:	436f      	muls	r7, r5
 80239f4:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 80239f6:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 80239fa:	9d16      	ldr	r5, [sp, #88]	@ 0x58
 80239fc:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 8023a00:	fb05 fa0a 	mul.w	sl, r5, sl
 8023a04:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8023a08:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023a0c:	44bc      	add	ip, r7
 8023a0e:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8023a12:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8023a16:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a1a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023a1e:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8023a22:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023a26:	ea4c 050a 	orr.w	r5, ip, sl
 8023a2a:	950f      	str	r5, [sp, #60]	@ 0x3c
 8023a2c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023a2e:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8023a32:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8023a34:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 8023a38:	fb0e f707 	mul.w	r7, lr, r7
 8023a3c:	fb02 770c 	mla	r7, r2, ip, r7
 8023a40:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023a44:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023a46:	fb00 770c 	mla	r7, r0, ip, r7
 8023a4a:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023a4e:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8023a50:	fb08 770c 	mla	r7, r8, ip, r7
 8023a54:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8023a58:	fb0e fe0c 	mul.w	lr, lr, ip
 8023a5c:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 8023a60:	fb02 e303 	mla	r3, r2, r3, lr
 8023a64:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8023a66:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023a68:	f402 4a7f 	and.w	sl, r2, #65280	@ 0xff00
 8023a6c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8023a6e:	fb00 330a 	mla	r3, r0, sl, r3
 8023a72:	f402 4c7f 	and.w	ip, r2, #65280	@ 0xff00
 8023a76:	fb08 3c0c 	mla	ip, r8, ip, r3
 8023a7a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8023a7c:	f8b9 0000 	ldrh.w	r0, [r9]
 8023a80:	4359      	muls	r1, r3
 8023a82:	0a3f      	lsrs	r7, r7, #8
 8023a84:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023a88:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023a8c:	1c4b      	adds	r3, r1, #1
 8023a8e:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8023a92:	ea47 070c 	orr.w	r7, r7, ip
 8023a96:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 8023a9a:	1202      	asrs	r2, r0, #8
 8023a9c:	0c3b      	lsrs	r3, r7, #16
 8023a9e:	ea6f 2111 	mvn.w	r1, r1, lsr #8
 8023aa2:	b2c9      	uxtb	r1, r1
 8023aa4:	fb13 f305 	smulbb	r3, r3, r5
 8023aa8:	f002 02f8 	and.w	r2, r2, #248	@ 0xf8
 8023aac:	fb02 3201 	mla	r2, r2, r1, r3
 8023ab0:	f3c7 2c07 	ubfx	ip, r7, #8, #8
 8023ab4:	10c3      	asrs	r3, r0, #3
 8023ab6:	b2ff      	uxtb	r7, r7
 8023ab8:	00c0      	lsls	r0, r0, #3
 8023aba:	b2c0      	uxtb	r0, r0
 8023abc:	fb17 f705 	smulbb	r7, r7, r5
 8023ac0:	fb00 7001 	mla	r0, r0, r1, r7
 8023ac4:	b292      	uxth	r2, r2
 8023ac6:	fb1c fc05 	smulbb	ip, ip, r5
 8023aca:	b280      	uxth	r0, r0
 8023acc:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8023ad0:	fb03 c301 	mla	r3, r3, r1, ip
 8023ad4:	1c51      	adds	r1, r2, #1
 8023ad6:	f100 0c01 	add.w	ip, r0, #1
 8023ada:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 8023ade:	eb0c 2c10 	add.w	ip, ip, r0, lsr #8
 8023ae2:	b29b      	uxth	r3, r3
 8023ae4:	f3cc 2cc4 	ubfx	ip, ip, #11, #5
 8023ae8:	f402 4278 	and.w	r2, r2, #63488	@ 0xf800
 8023aec:	ea4c 0202 	orr.w	r2, ip, r2
 8023af0:	f103 0c01 	add.w	ip, r3, #1
 8023af4:	eb0c 2313 	add.w	r3, ip, r3, lsr #8
 8023af8:	095b      	lsrs	r3, r3, #5
 8023afa:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8023afe:	431a      	orrs	r2, r3
 8023b00:	f8a9 2000 	strh.w	r2, [r9]
 8023b04:	9b29      	ldr	r3, [sp, #164]	@ 0xa4
 8023b06:	441c      	add	r4, r3
 8023b08:	9b2a      	ldr	r3, [sp, #168]	@ 0xa8
 8023b0a:	f109 0902 	add.w	r9, r9, #2
 8023b0e:	441e      	add	r6, r3
 8023b10:	f10b 3bff 	add.w	fp, fp, #4294967295
 8023b14:	e647      	b.n	80237a6 <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3ae>
 8023b16:	2800      	cmp	r0, #0
 8023b18:	f43f aedf 	beq.w	80238da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b1c:	f857 1021 	ldr.w	r1, [r7, r1, lsl #2]
 8023b20:	9109      	str	r1, [sp, #36]	@ 0x24
 8023b22:	0e09      	lsrs	r1, r1, #24
 8023b24:	9112      	str	r1, [sp, #72]	@ 0x48
 8023b26:	e6d8      	b.n	80238da <_ZN8touchgfx8LCD16bpp57TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e2>
 8023b28:	b01d      	add	sp, #116	@ 0x74
 8023b2a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08023b2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>:
 8023b2e:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023b32:	b085      	sub	sp, #20
 8023b34:	e9dd 740f 	ldrd	r7, r4, [sp, #60]	@ 0x3c
 8023b38:	9102      	str	r1, [sp, #8]
 8023b3a:	2c00      	cmp	r4, #0
 8023b3c:	fb04 7103 	mla	r1, r4, r3, r7
 8023b40:	f9bd e038 	ldrsh.w	lr, [sp, #56]	@ 0x38
 8023b44:	f89d 6044 	ldrb.w	r6, [sp, #68]	@ 0x44
 8023b48:	f89d 0048 	ldrb.w	r0, [sp, #72]	@ 0x48
 8023b4c:	eb02 0c81 	add.w	ip, r2, r1, lsl #2
 8023b50:	f2c0 810c 	blt.w	8023d6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b54:	45a6      	cmp	lr, r4
 8023b56:	f340 8109 	ble.w	8023d6c <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23e>
 8023b5a:	2f00      	cmp	r7, #0
 8023b5c:	f2c0 8104 	blt.w	8023d68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b60:	42bb      	cmp	r3, r7
 8023b62:	f340 8101 	ble.w	8023d68 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x23a>
 8023b66:	f852 5021 	ldr.w	r5, [r2, r1, lsl #2]
 8023b6a:	1c7a      	adds	r2, r7, #1
 8023b6c:	f100 8101 	bmi.w	8023d72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b70:	4293      	cmp	r3, r2
 8023b72:	f340 80fe 	ble.w	8023d72 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x244>
 8023b76:	2e00      	cmp	r6, #0
 8023b78:	f000 80fd 	beq.w	8023d76 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x248>
 8023b7c:	f8dc 1004 	ldr.w	r1, [ip, #4]
 8023b80:	3401      	adds	r4, #1
 8023b82:	f100 80fc 	bmi.w	8023d7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b86:	45a6      	cmp	lr, r4
 8023b88:	f340 80f9 	ble.w	8023d7e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x250>
 8023b8c:	2800      	cmp	r0, #0
 8023b8e:	f000 80f9 	beq.w	8023d84 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x256>
 8023b92:	2f00      	cmp	r7, #0
 8023b94:	eb0c 0283 	add.w	r2, ip, r3, lsl #2
 8023b98:	f2c0 80ef 	blt.w	8023d7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023b9c:	42bb      	cmp	r3, r7
 8023b9e:	f340 80ec 	ble.w	8023d7a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x24c>
 8023ba2:	f85c 4023 	ldr.w	r4, [ip, r3, lsl #2]
 8023ba6:	3701      	adds	r7, #1
 8023ba8:	f100 80ef 	bmi.w	8023d8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023bac:	42bb      	cmp	r3, r7
 8023bae:	f340 80ec 	ble.w	8023d8a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x25c>
 8023bb2:	2e00      	cmp	r6, #0
 8023bb4:	f000 80eb 	beq.w	8023d8e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x260>
 8023bb8:	6852      	ldr	r2, [r2, #4]
 8023bba:	b2b6      	uxth	r6, r6
 8023bbc:	b280      	uxth	r0, r0
 8023bbe:	fb00 fe06 	mul.w	lr, r0, r6
 8023bc2:	ebce 1000 	rsb	r0, lr, r0, lsl #4
 8023bc6:	0136      	lsls	r6, r6, #4
 8023bc8:	eba6 070e 	sub.w	r7, r6, lr
 8023bcc:	b280      	uxth	r0, r0
 8023bce:	f5c6 7380 	rsb	r3, r6, #256	@ 0x100
 8023bd2:	ea4f 6a11 	mov.w	sl, r1, lsr #24
 8023bd6:	b2bf      	uxth	r7, r7
 8023bd8:	1a1b      	subs	r3, r3, r0
 8023bda:	ea4f 6b15 	mov.w	fp, r5, lsr #24
 8023bde:	b29b      	uxth	r3, r3
 8023be0:	fb07 f60a 	mul.w	r6, r7, sl
 8023be4:	ea4f 6914 	mov.w	r9, r4, lsr #24
 8023be8:	fb0b 6603 	mla	r6, fp, r3, r6
 8023bec:	ea4f 6812 	mov.w	r8, r2, lsr #24
 8023bf0:	fb00 6609 	mla	r6, r0, r9, r6
 8023bf4:	fb0e 6608 	mla	r6, lr, r8, r6
 8023bf8:	f3c6 2607 	ubfx	r6, r6, #8, #8
 8023bfc:	9600      	str	r6, [sp, #0]
 8023bfe:	2e00      	cmp	r6, #0
 8023c00:	f000 80af 	beq.w	8023d62 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x234>
 8023c04:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8023c08:	fb0b fc0c 	mul.w	ip, fp, ip
 8023c0c:	f405 457f 	and.w	r5, r5, #65280	@ 0xff00
 8023c10:	fb0b f505 	mul.w	r5, fp, r5
 8023c14:	ea4f 2b1c 	mov.w	fp, ip, lsr #8
 8023c18:	f00b 1bff 	and.w	fp, fp, #16711935	@ 0xff00ff
 8023c1c:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023c20:	44dc      	add	ip, fp
 8023c22:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023c26:	9501      	str	r5, [sp, #4]
 8023c28:	f00c 15ff 	and.w	r5, ip, #16711935	@ 0xff00ff
 8023c2c:	9503      	str	r5, [sp, #12]
 8023c2e:	9d01      	ldr	r5, [sp, #4]
 8023c30:	9e02      	ldr	r6, [sp, #8]
 8023c32:	f505 7c80 	add.w	ip, r5, #256	@ 0x100
 8023c36:	eb0c 2515 	add.w	r5, ip, r5, lsr #8
 8023c3a:	f001 1cff 	and.w	ip, r1, #16711935	@ 0xff00ff
 8023c3e:	fb0a fc0c 	mul.w	ip, sl, ip
 8023c42:	ea4f 2b15 	mov.w	fp, r5, lsr #8
 8023c46:	ea4f 251c 	mov.w	r5, ip, lsr #8
 8023c4a:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023c4e:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023c52:	4465      	add	r5, ip
 8023c54:	f004 1cff 	and.w	ip, r4, #16711935	@ 0xff00ff
 8023c58:	f404 447f 	and.w	r4, r4, #65280	@ 0xff00
 8023c5c:	fb09 fc0c 	mul.w	ip, r9, ip
 8023c60:	fb09 f904 	mul.w	r9, r9, r4
 8023c64:	f509 7480 	add.w	r4, r9, #256	@ 0x100
 8023c68:	eb04 2919 	add.w	r9, r4, r9, lsr #8
 8023c6c:	f002 14ff 	and.w	r4, r2, #16711935	@ 0xff00ff
 8023c70:	fb08 f404 	mul.w	r4, r8, r4
 8023c74:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023c78:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023c7c:	fb08 f802 	mul.w	r8, r8, r2
 8023c80:	fb0a fa01 	mul.w	sl, sl, r1
 8023c84:	0a22      	lsrs	r2, r4, #8
 8023c86:	f50a 7180 	add.w	r1, sl, #256	@ 0x100
 8023c8a:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023c8e:	f104 1401 	add.w	r4, r4, #65537	@ 0x10001
 8023c92:	eb01 2a1a 	add.w	sl, r1, sl, lsr #8
 8023c96:	4414      	add	r4, r2
 8023c98:	ea4f 211c 	mov.w	r1, ip, lsr #8
 8023c9c:	f508 7280 	add.w	r2, r8, #256	@ 0x100
 8023ca0:	0a2d      	lsrs	r5, r5, #8
 8023ca2:	eb02 2818 	add.w	r8, r2, r8, lsr #8
 8023ca6:	f005 15ff 	and.w	r5, r5, #16711935	@ 0xff00ff
 8023caa:	9a03      	ldr	r2, [sp, #12]
 8023cac:	8836      	ldrh	r6, [r6, #0]
 8023cae:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023cb2:	f10c 1c01 	add.w	ip, ip, #65537	@ 0x10001
 8023cb6:	437d      	muls	r5, r7
 8023cb8:	4461      	add	r1, ip
 8023cba:	0a24      	lsrs	r4, r4, #8
 8023cbc:	fb02 5503 	mla	r5, r2, r3, r5
 8023cc0:	0a09      	lsrs	r1, r1, #8
 8023cc2:	f004 14ff 	and.w	r4, r4, #16711935	@ 0xff00ff
 8023cc6:	fb04 540e 	mla	r4, r4, lr, r5
 8023cca:	f001 11ff 	and.w	r1, r1, #16711935	@ 0xff00ff
 8023cce:	fb01 4100 	mla	r1, r1, r0, r4
 8023cd2:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023cd6:	0a09      	lsrs	r1, r1, #8
 8023cd8:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023cdc:	f001 14ff 	and.w	r4, r1, #16711935	@ 0xff00ff
 8023ce0:	ea4f 2818 	mov.w	r8, r8, lsr #8
 8023ce4:	f40b 417f 	and.w	r1, fp, #65280	@ 0xff00
 8023ce8:	fb07 f70a 	mul.w	r7, r7, sl
 8023cec:	fb03 7101 	mla	r1, r3, r1, r7
 8023cf0:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8023cf4:	9b00      	ldr	r3, [sp, #0]
 8023cf6:	f408 487f 	and.w	r8, r8, #65280	@ 0xff00
 8023cfa:	fb0e 1e08 	mla	lr, lr, r8, r1
 8023cfe:	f409 417f 	and.w	r1, r9, #65280	@ 0xff00
 8023d02:	fb00 e101 	mla	r1, r0, r1, lr
 8023d06:	43da      	mvns	r2, r3
 8023d08:	1233      	asrs	r3, r6, #8
 8023d0a:	b2d2      	uxtb	r2, r2
 8023d0c:	10f0      	asrs	r0, r6, #3
 8023d0e:	0a09      	lsrs	r1, r1, #8
 8023d10:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 8023d14:	00f6      	lsls	r6, r6, #3
 8023d16:	4353      	muls	r3, r2
 8023d18:	f401 417f 	and.w	r1, r1, #65280	@ 0xff00
 8023d1c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8023d20:	b2f6      	uxtb	r6, r6
 8023d22:	4321      	orrs	r1, r4
 8023d24:	4350      	muls	r0, r2
 8023d26:	4356      	muls	r6, r2
 8023d28:	1c5a      	adds	r2, r3, #1
 8023d2a:	eb02 2213 	add.w	r2, r2, r3, lsr #8
 8023d2e:	0c0b      	lsrs	r3, r1, #16
 8023d30:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8023d34:	1c42      	adds	r2, r0, #1
 8023d36:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8023d3a:	0a0a      	lsrs	r2, r1, #8
 8023d3c:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 8023d40:	021b      	lsls	r3, r3, #8
 8023d42:	00d2      	lsls	r2, r2, #3
 8023d44:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8023d48:	f403 4378 	and.w	r3, r3, #63488	@ 0xf800
 8023d4c:	4313      	orrs	r3, r2
 8023d4e:	1c72      	adds	r2, r6, #1
 8023d50:	eb02 2616 	add.w	r6, r2, r6, lsr #8
 8023d54:	eb01 2116 	add.w	r1, r1, r6, lsr #8
 8023d58:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8023d5c:	4319      	orrs	r1, r3
 8023d5e:	9b02      	ldr	r3, [sp, #8]
 8023d60:	8019      	strh	r1, [r3, #0]
 8023d62:	b005      	add	sp, #20
 8023d64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8023d68:	2500      	movs	r5, #0
 8023d6a:	e6fe      	b.n	8023b6a <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x3c>
 8023d6c:	2100      	movs	r1, #0
 8023d6e:	460d      	mov	r5, r1
 8023d70:	e706      	b.n	8023b80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d72:	2100      	movs	r1, #0
 8023d74:	e704      	b.n	8023b80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d76:	4631      	mov	r1, r6
 8023d78:	e702      	b.n	8023b80 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x52>
 8023d7a:	2400      	movs	r4, #0
 8023d7c:	e713      	b.n	8023ba6 <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x78>
 8023d7e:	2200      	movs	r2, #0
 8023d80:	4614      	mov	r4, r2
 8023d82:	e71a      	b.n	8023bba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d84:	4602      	mov	r2, r0
 8023d86:	4604      	mov	r4, r0
 8023d88:	e717      	b.n	8023bba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d8a:	2200      	movs	r2, #0
 8023d8c:	e715      	b.n	8023bba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
 8023d8e:	4632      	mov	r2, r6
 8023d90:	e713      	b.n	8023bba <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh+0x8c>
	...

08023d94 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8023d94:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8023d98:	b09b      	sub	sp, #108	@ 0x6c
 8023d9a:	e9dd 4625 	ldrd	r4, r6, [sp, #148]	@ 0x94
 8023d9e:	9218      	str	r2, [sp, #96]	@ 0x60
 8023da0:	9a29      	ldr	r2, [sp, #164]	@ 0xa4
 8023da2:	9116      	str	r1, [sp, #88]	@ 0x58
 8023da4:	9307      	str	r3, [sp, #28]
 8023da6:	e9dd 132a 	ldrd	r1, r3, [sp, #168]	@ 0xa8
 8023daa:	9019      	str	r0, [sp, #100]	@ 0x64
 8023dac:	6850      	ldr	r0, [r2, #4]
 8023dae:	6812      	ldr	r2, [r2, #0]
 8023db0:	fb00 1303 	mla	r3, r0, r3, r1
 8023db4:	eb02 0343 	add.w	r3, r2, r3, lsl #1
 8023db8:	930a      	str	r3, [sp, #40]	@ 0x28
 8023dba:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023dbc:	681b      	ldr	r3, [r3, #0]
 8023dbe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8023dc0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8023dc2:	2b00      	cmp	r3, #0
 8023dc4:	dc03      	bgt.n	8023dce <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8023dc6:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8023dc8:	2b00      	cmp	r3, #0
 8023dca:	f340 8386 	ble.w	80244da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8023dce:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023dd0:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8023dd4:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8023dd8:	1e48      	subs	r0, r1, #1
 8023dda:	1e57      	subs	r7, r2, #1
 8023ddc:	9b07      	ldr	r3, [sp, #28]
 8023dde:	2b00      	cmp	r3, #0
 8023de0:	f340 8166 	ble.w	80240b0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31c>
 8023de4:	ea5f 4c24 	movs.w	ip, r4, asr #16
 8023de8:	ea4f 4326 	mov.w	r3, r6, asr #16
 8023dec:	d406      	bmi.n	8023dfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023dee:	4584      	cmp	ip, r0
 8023df0:	da04      	bge.n	8023dfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023df2:	2b00      	cmp	r3, #0
 8023df4:	db02      	blt.n	8023dfc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x68>
 8023df6:	42bb      	cmp	r3, r7
 8023df8:	f2c0 815b 	blt.w	80240b2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x31e>
 8023dfc:	f11c 0c01 	adds.w	ip, ip, #1
 8023e00:	f100 814b 	bmi.w	802409a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e04:	4561      	cmp	r1, ip
 8023e06:	f2c0 8148 	blt.w	802409a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e0a:	3301      	adds	r3, #1
 8023e0c:	f100 8145 	bmi.w	802409a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e10:	429a      	cmp	r2, r3
 8023e12:	f2c0 8142 	blt.w	802409a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x306>
 8023e16:	9b07      	ldr	r3, [sp, #28]
 8023e18:	9f0a      	ldr	r7, [sp, #40]	@ 0x28
 8023e1a:	9317      	str	r3, [sp, #92]	@ 0x5c
 8023e1c:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8023e1e:	2b00      	cmp	r3, #0
 8023e20:	f340 8165 	ble.w	80240ee <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x35a>
 8023e24:	9a2c      	ldr	r2, [sp, #176]	@ 0xb0
 8023e26:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8023e28:	f8d2 e00c 	ldr.w	lr, [r2, #12]
 8023e2c:	689b      	ldr	r3, [r3, #8]
 8023e2e:	1422      	asrs	r2, r4, #16
 8023e30:	ea4f 4c26 	mov.w	ip, r6, asr #16
 8023e34:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8023e38:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8023e3c:	f100 81d5 	bmi.w	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e40:	f103 38ff 	add.w	r8, r3, #4294967295
 8023e44:	4542      	cmp	r2, r8
 8023e46:	f280 81d0 	bge.w	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e4a:	f1bc 0f00 	cmp.w	ip, #0
 8023e4e:	f2c0 81cc 	blt.w	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e52:	f10e 38ff 	add.w	r8, lr, #4294967295
 8023e56:	45c4      	cmp	ip, r8
 8023e58:	f280 81c7 	bge.w	80241ea <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x456>
 8023e5c:	b21b      	sxth	r3, r3
 8023e5e:	fb0c 2203 	mla	r2, ip, r3, r2
 8023e62:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8023e64:	eb05 0882 	add.w	r8, r5, r2, lsl #2
 8023e68:	f855 2022 	ldr.w	r2, [r5, r2, lsl #2]
 8023e6c:	ea4f 6e12 	mov.w	lr, r2, lsr #24
 8023e70:	2900      	cmp	r1, #0
 8023e72:	f000 8182 	beq.w	802417a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3e6>
 8023e76:	f8d8 5004 	ldr.w	r5, [r8, #4]
 8023e7a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023e7c:	0e2d      	lsrs	r5, r5, #24
 8023e7e:	9512      	str	r5, [sp, #72]	@ 0x48
 8023e80:	b180      	cbz	r0, 8023ea4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8023e82:	f103 4380 	add.w	r3, r3, #1073741824	@ 0x40000000
 8023e86:	3b01      	subs	r3, #1
 8023e88:	009b      	lsls	r3, r3, #2
 8023e8a:	3304      	adds	r3, #4
 8023e8c:	eb08 0c03 	add.w	ip, r8, r3
 8023e90:	f858 3003 	ldr.w	r3, [r8, r3]
 8023e94:	9308      	str	r3, [sp, #32]
 8023e96:	0e1b      	lsrs	r3, r3, #24
 8023e98:	9310      	str	r3, [sp, #64]	@ 0x40
 8023e9a:	f8dc 3004 	ldr.w	r3, [ip, #4]
 8023e9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8023ea0:	0e1b      	lsrs	r3, r3, #24
 8023ea2:	9313      	str	r3, [sp, #76]	@ 0x4c
 8023ea4:	b289      	uxth	r1, r1
 8023ea6:	b280      	uxth	r0, r0
 8023ea8:	fb01 f900 	mul.w	r9, r1, r0
 8023eac:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8023eb0:	0109      	lsls	r1, r1, #4
 8023eb2:	eba1 0809 	sub.w	r8, r1, r9
 8023eb6:	b280      	uxth	r0, r0
 8023eb8:	f5c1 7180 	rsb	r1, r1, #256	@ 0x100
 8023ebc:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8023ebe:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023ec0:	fa1f f888 	uxth.w	r8, r8
 8023ec4:	1a09      	subs	r1, r1, r0
 8023ec6:	b289      	uxth	r1, r1
 8023ec8:	fb08 f303 	mul.w	r3, r8, r3
 8023ecc:	fb01 330e 	mla	r3, r1, lr, r3
 8023ed0:	fb00 3305 	mla	r3, r0, r5, r3
 8023ed4:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023ed6:	fb09 3305 	mla	r3, r9, r5, r3
 8023eda:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8023ede:	2b00      	cmp	r3, #0
 8023ee0:	f000 80d2 	beq.w	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8023ee4:	f1be 0fff 	cmp.w	lr, #255	@ 0xff
 8023ee8:	d01b      	beq.n	8023f22 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x18e>
 8023eea:	f002 1aff 	and.w	sl, r2, #16711935	@ 0xff00ff
 8023eee:	fb0e fa0a 	mul.w	sl, lr, sl
 8023ef2:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8023ef6:	fb0e fe02 	mul.w	lr, lr, r2
 8023efa:	ea4f 221a 	mov.w	r2, sl, lsr #8
 8023efe:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023f02:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 8023f06:	f50e 7c80 	add.w	ip, lr, #256	@ 0x100
 8023f0a:	4452      	add	r2, sl
 8023f0c:	eb0c 2c1e 	add.w	ip, ip, lr, lsr #8
 8023f10:	0a12      	lsrs	r2, r2, #8
 8023f12:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8023f16:	f002 12ff 	and.w	r2, r2, #16711935	@ 0xff00ff
 8023f1a:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8023f1e:	ea42 020c 	orr.w	r2, r2, ip
 8023f22:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023f24:	2dff      	cmp	r5, #255	@ 0xff
 8023f26:	d021      	beq.n	8023f6c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d8>
 8023f28:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023f2a:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023f2e:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023f30:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f34:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8023f36:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023f3a:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8023f3c:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f40:	fb05 fa0a 	mul.w	sl, r5, sl
 8023f44:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023f48:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023f4c:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023f50:	44de      	add	lr, fp
 8023f52:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023f56:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023f5a:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023f5e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023f62:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023f66:	ea4e 050a 	orr.w	r5, lr, sl
 8023f6a:	950b      	str	r5, [sp, #44]	@ 0x2c
 8023f6c:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023f6e:	2dff      	cmp	r5, #255	@ 0xff
 8023f70:	d021      	beq.n	8023fb6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8023f72:	9d08      	ldr	r5, [sp, #32]
 8023f74:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023f78:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023f7a:	fb05 fb0b 	mul.w	fp, r5, fp
 8023f7e:	9d08      	ldr	r5, [sp, #32]
 8023f80:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 8023f84:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8023f86:	fb05 fa0e 	mul.w	sl, r5, lr
 8023f8a:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023f8e:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023f92:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023f96:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023f9a:	44de      	add	lr, fp
 8023f9c:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023fa0:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023fa4:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023fa8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023fac:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023fb0:	ea4e 050a 	orr.w	r5, lr, sl
 8023fb4:	9508      	str	r5, [sp, #32]
 8023fb6:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023fb8:	2dff      	cmp	r5, #255	@ 0xff
 8023fba:	d021      	beq.n	8024000 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x26c>
 8023fbc:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023fbe:	f005 1bff 	and.w	fp, r5, #16711935	@ 0xff00ff
 8023fc2:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023fc4:	fb05 fb0b 	mul.w	fp, r5, fp
 8023fc8:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 8023fca:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8023fce:	9d13      	ldr	r5, [sp, #76]	@ 0x4c
 8023fd0:	ea4f 2e1b 	mov.w	lr, fp, lsr #8
 8023fd4:	fb05 fa0a 	mul.w	sl, r5, sl
 8023fd8:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023fdc:	f10b 1b01 	add.w	fp, fp, #65537	@ 0x10001
 8023fe0:	f50a 7c80 	add.w	ip, sl, #256	@ 0x100
 8023fe4:	44de      	add	lr, fp
 8023fe6:	eb0c 2a1a 	add.w	sl, ip, sl, lsr #8
 8023fea:	ea4f 2e1e 	mov.w	lr, lr, lsr #8
 8023fee:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8023ff2:	f00e 1eff 	and.w	lr, lr, #16711935	@ 0xff00ff
 8023ff6:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8023ffa:	ea4e 050a 	orr.w	r5, lr, sl
 8023ffe:	950c      	str	r5, [sp, #48]	@ 0x30
 8024000:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024002:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 8024006:	9d08      	ldr	r5, [sp, #32]
 8024008:	f002 1eff 	and.w	lr, r2, #16711935	@ 0xff00ff
 802400c:	fb08 fc0c 	mul.w	ip, r8, ip
 8024010:	fb01 cc0e 	mla	ip, r1, lr, ip
 8024014:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024018:	9d0c      	ldr	r5, [sp, #48]	@ 0x30
 802401a:	fb00 cc0e 	mla	ip, r0, lr, ip
 802401e:	f005 1eff 	and.w	lr, r5, #16711935	@ 0xff00ff
 8024022:	9d0b      	ldr	r5, [sp, #44]	@ 0x2c
 8024024:	fb09 cc0e 	mla	ip, r9, lr, ip
 8024028:	f405 4e7f 	and.w	lr, r5, #65280	@ 0xff00
 802402c:	f402 427f 	and.w	r2, r2, #65280	@ 0xff00
 8024030:	fb08 f80e 	mul.w	r8, r8, lr
 8024034:	fb01 8202 	mla	r2, r1, r2, r8
 8024038:	9908      	ldr	r1, [sp, #32]
 802403a:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 802403e:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024040:	fb00 220a 	mla	r2, r0, sl, r2
 8024044:	f401 407f 	and.w	r0, r1, #65280	@ 0xff00
 8024048:	fb09 2900 	mla	r9, r9, r0, r2
 802404c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024050:	ea4f 2919 	mov.w	r9, r9, lsr #8
 8024054:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024058:	f409 497f 	and.w	r9, r9, #65280	@ 0xff00
 802405c:	ea4c 0c09 	orr.w	ip, ip, r9
 8024060:	2bff      	cmp	r3, #255	@ 0xff
 8024062:	ea4f 221c 	mov.w	r2, ip, lsr #8
 8024066:	f040 8091 	bne.w	802418c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f8>
 802406a:	ea4f 135c 	mov.w	r3, ip, lsr #5
 802406e:	f422 62ff 	bic.w	r2, r2, #2040	@ 0x7f8
 8024072:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024076:	f022 0207 	bic.w	r2, r2, #7
 802407a:	431a      	orrs	r2, r3
 802407c:	f3cc 0cc4 	ubfx	ip, ip, #3, #5
 8024080:	ea4c 0c02 	orr.w	ip, ip, r2
 8024084:	f8a7 c000 	strh.w	ip, [r7]
 8024088:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802408a:	441c      	add	r4, r3
 802408c:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802408e:	441e      	add	r6, r3
 8024090:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8024092:	3b01      	subs	r3, #1
 8024094:	3702      	adds	r7, #2
 8024096:	9317      	str	r3, [sp, #92]	@ 0x5c
 8024098:	e6c0      	b.n	8023e1c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x88>
 802409a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802409c:	441c      	add	r4, r3
 802409e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80240a0:	441e      	add	r6, r3
 80240a2:	9b07      	ldr	r3, [sp, #28]
 80240a4:	3b01      	subs	r3, #1
 80240a6:	9307      	str	r3, [sp, #28]
 80240a8:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80240aa:	3302      	adds	r3, #2
 80240ac:	930a      	str	r3, [sp, #40]	@ 0x28
 80240ae:	e695      	b.n	8023ddc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80240b0:	d024      	beq.n	80240fc <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x368>
 80240b2:	9b07      	ldr	r3, [sp, #28]
 80240b4:	9827      	ldr	r0, [sp, #156]	@ 0x9c
 80240b6:	3b01      	subs	r3, #1
 80240b8:	fb00 4003 	mla	r0, r0, r3, r4
 80240bc:	1400      	asrs	r0, r0, #16
 80240be:	f53f aeaa 	bmi.w	8023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240c2:	3901      	subs	r1, #1
 80240c4:	4288      	cmp	r0, r1
 80240c6:	f6bf aea6 	bge.w	8023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240ca:	9928      	ldr	r1, [sp, #160]	@ 0xa0
 80240cc:	fb01 6303 	mla	r3, r1, r3, r6
 80240d0:	141b      	asrs	r3, r3, #16
 80240d2:	f53f aea0 	bmi.w	8023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240d6:	3a01      	subs	r2, #1
 80240d8:	4293      	cmp	r3, r2
 80240da:	f6bf ae9c 	bge.w	8023e16 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x82>
 80240de:	f8dd b01c 	ldr.w	fp, [sp, #28]
 80240e2:	f8dd 8028 	ldr.w	r8, [sp, #40]	@ 0x28
 80240e6:	f1bb 0f00 	cmp.w	fp, #0
 80240ea:	f300 809a 	bgt.w	8024222 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48e>
 80240ee:	9b07      	ldr	r3, [sp, #28]
 80240f0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80240f4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 80240f6:	eb03 0345 	add.w	r3, r3, r5, lsl #1
 80240fa:	930a      	str	r3, [sp, #40]	@ 0x28
 80240fc:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80240fe:	2b00      	cmp	r3, #0
 8024100:	f340 81eb 	ble.w	80244da <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x746>
 8024104:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024108:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 802410c:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024110:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024112:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024116:	ee31 1a05 	vadd.f32	s2, s2, s10
 802411a:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802411e:	eef0 6a62 	vmov.f32	s13, s5
 8024122:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024126:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802412a:	ee77 2a62 	vsub.f32	s5, s14, s5
 802412e:	ee16 4a90 	vmov	r4, s13
 8024132:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024136:	eef0 6a43 	vmov.f32	s13, s6
 802413a:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802413e:	ee12 2a90 	vmov	r2, s5
 8024142:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024146:	fb92 f3f3 	sdiv	r3, r2, r3
 802414a:	ee13 2a10 	vmov	r2, s6
 802414e:	9327      	str	r3, [sp, #156]	@ 0x9c
 8024150:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024152:	fb92 f3f3 	sdiv	r3, r2, r3
 8024156:	9328      	str	r3, [sp, #160]	@ 0xa0
 8024158:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 802415a:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 802415c:	3b01      	subs	r3, #1
 802415e:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024162:	9316      	str	r3, [sp, #88]	@ 0x58
 8024164:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024166:	bf08      	it	eq
 8024168:	4613      	moveq	r3, r2
 802416a:	ee16 6a90 	vmov	r6, s13
 802416e:	9307      	str	r3, [sp, #28]
 8024170:	eeb0 3a67 	vmov.f32	s6, s15
 8024174:	eef0 2a47 	vmov.f32	s5, s14
 8024178:	e622      	b.n	8023dc0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2c>
 802417a:	2800      	cmp	r0, #0
 802417c:	f43f ae92 	beq.w	8023ea4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 8024180:	f858 3023 	ldr.w	r3, [r8, r3, lsl #2]
 8024184:	9308      	str	r3, [sp, #32]
 8024186:	0e1b      	lsrs	r3, r3, #24
 8024188:	9310      	str	r3, [sp, #64]	@ 0x40
 802418a:	e68b      	b.n	8023ea4 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x110>
 802418c:	8839      	ldrh	r1, [r7, #0]
 802418e:	4dd4      	ldr	r5, [pc, #848]	@ (80244e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 8024190:	43db      	mvns	r3, r3
 8024192:	ea4f 2e21 	mov.w	lr, r1, asr #8
 8024196:	fa5f f883 	uxtb.w	r8, r3
 802419a:	f00e 0ef8 	and.w	lr, lr, #248	@ 0xf8
 802419e:	fb0e fe08 	mul.w	lr, lr, r8
 80241a2:	10c8      	asrs	r0, r1, #3
 80241a4:	00cb      	lsls	r3, r1, #3
 80241a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80241aa:	f10e 0101 	add.w	r1, lr, #1
 80241ae:	eb01 2e1e 	add.w	lr, r1, lr, lsr #8
 80241b2:	fb00 f008 	mul.w	r0, r0, r8
 80241b6:	ea4f 411c 	mov.w	r1, ip, lsr #16
 80241ba:	eb01 211e 	add.w	r1, r1, lr, lsr #8
 80241be:	f100 0e01 	add.w	lr, r0, #1
 80241c2:	eb0e 2010 	add.w	r0, lr, r0, lsr #8
 80241c6:	eb02 2210 	add.w	r2, r2, r0, lsr #8
 80241ca:	b2db      	uxtb	r3, r3
 80241cc:	b2c9      	uxtb	r1, r1
 80241ce:	00d2      	lsls	r2, r2, #3
 80241d0:	fb03 f308 	mul.w	r3, r3, r8
 80241d4:	ea05 2101 	and.w	r1, r5, r1, lsl #8
 80241d8:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80241dc:	430a      	orrs	r2, r1
 80241de:	1c59      	adds	r1, r3, #1
 80241e0:	eb01 2313 	add.w	r3, r1, r3, lsr #8
 80241e4:	eb0c 2c13 	add.w	ip, ip, r3, lsr #8
 80241e8:	e748      	b.n	802407c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2e8>
 80241ea:	f112 0801 	adds.w	r8, r2, #1
 80241ee:	f53f af4b 	bmi.w	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241f2:	4543      	cmp	r3, r8
 80241f4:	f6ff af48 	blt.w	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 80241f8:	f11c 0801 	adds.w	r8, ip, #1
 80241fc:	f53f af44 	bmi.w	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024200:	45c6      	cmp	lr, r8
 8024202:	f6ff af41 	blt.w	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024206:	e9cd 2c01 	strd	r2, ip, [sp, #4]
 802420a:	fa0f f28e 	sxth.w	r2, lr
 802420e:	e9cd 1003 	strd	r1, r0, [sp, #12]
 8024212:	9200      	str	r2, [sp, #0]
 8024214:	b21b      	sxth	r3, r3
 8024216:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024218:	9819      	ldr	r0, [sp, #100]	@ 0x64
 802421a:	4639      	mov	r1, r7
 802421c:	f7ff fc87 	bl	8023b2e <_ZNK8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKmssiihh>
 8024220:	e732      	b.n	8024088 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2f4>
 8024222:	9b2c      	ldr	r3, [sp, #176]	@ 0xb0
 8024224:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024226:	f9b3 7008 	ldrsh.w	r7, [r3, #8]
 802422a:	1421      	asrs	r1, r4, #16
 802422c:	1433      	asrs	r3, r6, #16
 802422e:	fb07 1303 	mla	r3, r7, r3, r1
 8024232:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8024234:	eb01 0183 	add.w	r1, r1, r3, lsl #2
 8024238:	f855 3023 	ldr.w	r3, [r5, r3, lsl #2]
 802423c:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024240:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024244:	ea4f 6c13 	mov.w	ip, r3, lsr #24
 8024248:	2a00      	cmp	r2, #0
 802424a:	f000 8107 	beq.w	802445c <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6c8>
 802424e:	684d      	ldr	r5, [r1, #4]
 8024250:	950d      	str	r5, [sp, #52]	@ 0x34
 8024252:	0e2d      	lsrs	r5, r5, #24
 8024254:	9514      	str	r5, [sp, #80]	@ 0x50
 8024256:	b178      	cbz	r0, 8024278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024258:	f107 4780 	add.w	r7, r7, #1073741824	@ 0x40000000
 802425c:	3f01      	subs	r7, #1
 802425e:	00bf      	lsls	r7, r7, #2
 8024260:	3704      	adds	r7, #4
 8024262:	eb01 0e07 	add.w	lr, r1, r7
 8024266:	59c9      	ldr	r1, [r1, r7]
 8024268:	9109      	str	r1, [sp, #36]	@ 0x24
 802426a:	0e09      	lsrs	r1, r1, #24
 802426c:	9111      	str	r1, [sp, #68]	@ 0x44
 802426e:	f8de 1004 	ldr.w	r1, [lr, #4]
 8024272:	910e      	str	r1, [sp, #56]	@ 0x38
 8024274:	0e09      	lsrs	r1, r1, #24
 8024276:	9115      	str	r1, [sp, #84]	@ 0x54
 8024278:	b292      	uxth	r2, r2
 802427a:	b280      	uxth	r0, r0
 802427c:	fb02 f900 	mul.w	r9, r2, r0
 8024280:	ebc9 1000 	rsb	r0, r9, r0, lsl #4
 8024284:	0112      	lsls	r2, r2, #4
 8024286:	eba2 0e09 	sub.w	lr, r2, r9
 802428a:	b280      	uxth	r0, r0
 802428c:	f5c2 7180 	rsb	r1, r2, #256	@ 0x100
 8024290:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024292:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024294:	fa1f fe8e 	uxth.w	lr, lr
 8024298:	1a09      	subs	r1, r1, r0
 802429a:	b289      	uxth	r1, r1
 802429c:	fb0e f202 	mul.w	r2, lr, r2
 80242a0:	fb01 220c 	mla	r2, r1, ip, r2
 80242a4:	fb00 2205 	mla	r2, r0, r5, r2
 80242a8:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 80242aa:	fb09 2205 	mla	r2, r9, r5, r2
 80242ae:	f3c2 2207 	ubfx	r2, r2, #8, #8
 80242b2:	2a00      	cmp	r2, #0
 80242b4:	f000 80c9 	beq.w	802444a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80242b8:	f1bc 0fff 	cmp.w	ip, #255	@ 0xff
 80242bc:	d019      	beq.n	80242f2 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x55e>
 80242be:	f003 1aff 	and.w	sl, r3, #16711935	@ 0xff00ff
 80242c2:	fb0c fa0a 	mul.w	sl, ip, sl
 80242c6:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80242ca:	fb0c fc03 	mul.w	ip, ip, r3
 80242ce:	ea4f 231a 	mov.w	r3, sl, lsr #8
 80242d2:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80242d6:	f10a 1a01 	add.w	sl, sl, #65537	@ 0x10001
 80242da:	f50c 7780 	add.w	r7, ip, #256	@ 0x100
 80242de:	4453      	add	r3, sl
 80242e0:	eb07 271c 	add.w	r7, r7, ip, lsr #8
 80242e4:	0a1b      	lsrs	r3, r3, #8
 80242e6:	0a3f      	lsrs	r7, r7, #8
 80242e8:	f003 13ff 	and.w	r3, r3, #16711935	@ 0xff00ff
 80242ec:	f407 477f 	and.w	r7, r7, #65280	@ 0xff00
 80242f0:	433b      	orrs	r3, r7
 80242f2:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 80242f4:	2dff      	cmp	r5, #255	@ 0xff
 80242f6:	d020      	beq.n	802433a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5a6>
 80242f8:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80242fa:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80242fe:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8024300:	436f      	muls	r7, r5
 8024302:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 8024304:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024308:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 802430a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802430e:	fb05 fa0a 	mul.w	sl, r5, sl
 8024312:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024316:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802431a:	44bc      	add	ip, r7
 802431c:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024320:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 8024324:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024328:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 802432c:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024330:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 8024334:	ea4c 050a 	orr.w	r5, ip, sl
 8024338:	950d      	str	r5, [sp, #52]	@ 0x34
 802433a:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 802433c:	2dff      	cmp	r5, #255	@ 0xff
 802433e:	d020      	beq.n	8024382 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x5ee>
 8024340:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 8024342:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 8024346:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024348:	436f      	muls	r7, r5
 802434a:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 802434c:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 8024350:	9d11      	ldr	r5, [sp, #68]	@ 0x44
 8024352:	fb05 fa0c 	mul.w	sl, r5, ip
 8024356:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802435a:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 802435e:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 8024362:	44bc      	add	ip, r7
 8024364:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 8024368:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 802436c:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 8024370:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 8024374:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 8024378:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 802437c:	ea4c 050a 	orr.w	r5, ip, sl
 8024380:	9509      	str	r5, [sp, #36]	@ 0x24
 8024382:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024384:	2dff      	cmp	r5, #255	@ 0xff
 8024386:	d020      	beq.n	80243ca <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x636>
 8024388:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 802438a:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 802438e:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 8024390:	436f      	muls	r7, r5
 8024392:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024394:	f405 4a7f 	and.w	sl, r5, #65280	@ 0xff00
 8024398:	9d15      	ldr	r5, [sp, #84]	@ 0x54
 802439a:	ea4f 2c17 	mov.w	ip, r7, lsr #8
 802439e:	fb05 fa0a 	mul.w	sl, r5, sl
 80243a2:	f107 1701 	add.w	r7, r7, #65537	@ 0x10001
 80243a6:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80243aa:	44bc      	add	ip, r7
 80243ac:	f50a 7780 	add.w	r7, sl, #256	@ 0x100
 80243b0:	eb07 2a1a 	add.w	sl, r7, sl, lsr #8
 80243b4:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 80243b8:	ea4f 2a1a 	mov.w	sl, sl, lsr #8
 80243bc:	f00c 1cff 	and.w	ip, ip, #16711935	@ 0xff00ff
 80243c0:	f40a 4a7f 	and.w	sl, sl, #65280	@ 0xff00
 80243c4:	ea4c 050a 	orr.w	r5, ip, sl
 80243c8:	950e      	str	r5, [sp, #56]	@ 0x38
 80243ca:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80243cc:	f005 17ff 	and.w	r7, r5, #16711935	@ 0xff00ff
 80243d0:	9d09      	ldr	r5, [sp, #36]	@ 0x24
 80243d2:	f003 1cff 	and.w	ip, r3, #16711935	@ 0xff00ff
 80243d6:	fb0e f707 	mul.w	r7, lr, r7
 80243da:	fb01 770c 	mla	r7, r1, ip, r7
 80243de:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80243e2:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 80243e4:	fb00 770c 	mla	r7, r0, ip, r7
 80243e8:	f005 1cff 	and.w	ip, r5, #16711935	@ 0xff00ff
 80243ec:	9d0d      	ldr	r5, [sp, #52]	@ 0x34
 80243ee:	fb09 770c 	mla	r7, r9, ip, r7
 80243f2:	f405 4c7f 	and.w	ip, r5, #65280	@ 0xff00
 80243f6:	fb0e fe0c 	mul.w	lr, lr, ip
 80243fa:	f403 437f 	and.w	r3, r3, #65280	@ 0xff00
 80243fe:	fb01 e303 	mla	r3, r1, r3, lr
 8024402:	9909      	ldr	r1, [sp, #36]	@ 0x24
 8024404:	f401 4a7f 	and.w	sl, r1, #65280	@ 0xff00
 8024408:	990e      	ldr	r1, [sp, #56]	@ 0x38
 802440a:	fb00 330a 	mla	r3, r0, sl, r3
 802440e:	f401 4c7f 	and.w	ip, r1, #65280	@ 0xff00
 8024412:	fb09 3c0c 	mla	ip, r9, ip, r3
 8024416:	0a3f      	lsrs	r7, r7, #8
 8024418:	ea4f 2c1c 	mov.w	ip, ip, lsr #8
 802441c:	f007 17ff 	and.w	r7, r7, #16711935	@ 0xff00ff
 8024420:	f40c 4c7f 	and.w	ip, ip, #65280	@ 0xff00
 8024424:	ea47 070c 	orr.w	r7, r7, ip
 8024428:	2aff      	cmp	r2, #255	@ 0xff
 802442a:	ea4f 2317 	mov.w	r3, r7, lsr #8
 802442e:	d11e      	bne.n	802446e <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6da>
 8024430:	097a      	lsrs	r2, r7, #5
 8024432:	f423 63ff 	bic.w	r3, r3, #2040	@ 0x7f8
 8024436:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 802443a:	f023 0307 	bic.w	r3, r3, #7
 802443e:	4313      	orrs	r3, r2
 8024440:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 8024444:	431f      	orrs	r7, r3
 8024446:	f8a8 7000 	strh.w	r7, [r8]
 802444a:	9b27      	ldr	r3, [sp, #156]	@ 0x9c
 802444c:	441c      	add	r4, r3
 802444e:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 8024450:	f108 0802 	add.w	r8, r8, #2
 8024454:	441e      	add	r6, r3
 8024456:	f10b 3bff 	add.w	fp, fp, #4294967295
 802445a:	e644      	b.n	80240e6 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x352>
 802445c:	2800      	cmp	r0, #0
 802445e:	f43f af0b 	beq.w	8024278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 8024462:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 8024466:	9109      	str	r1, [sp, #36]	@ 0x24
 8024468:	0e09      	lsrs	r1, r1, #24
 802446a:	9111      	str	r1, [sp, #68]	@ 0x44
 802446c:	e704      	b.n	8024278 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4e4>
 802446e:	f8b8 1000 	ldrh.w	r1, [r8]
 8024472:	43d2      	mvns	r2, r2
 8024474:	ea4f 2c21 	mov.w	ip, r1, asr #8
 8024478:	fa5f fe82 	uxtb.w	lr, r2
 802447c:	f00c 0cf8 	and.w	ip, ip, #248	@ 0xf8
 8024480:	fb0c fc0e 	mul.w	ip, ip, lr
 8024484:	10c8      	asrs	r0, r1, #3
 8024486:	00ca      	lsls	r2, r1, #3
 8024488:	f10c 0101 	add.w	r1, ip, #1
 802448c:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024490:	0c39      	lsrs	r1, r7, #16
 8024492:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024496:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802449a:	4911      	ldr	r1, [pc, #68]	@ (80244e0 <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x74c>)
 802449c:	fb00 f00e 	mul.w	r0, r0, lr
 80244a0:	fa5f fc8c 	uxtb.w	ip, ip
 80244a4:	ea01 2c0c 	and.w	ip, r1, ip, lsl #8
 80244a8:	b2d2      	uxtb	r2, r2
 80244aa:	1c41      	adds	r1, r0, #1
 80244ac:	fb02 f20e 	mul.w	r2, r2, lr
 80244b0:	eb01 2010 	add.w	r0, r1, r0, lsr #8
 80244b4:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80244b8:	1c51      	adds	r1, r2, #1
 80244ba:	00c0      	lsls	r0, r0, #3
 80244bc:	eb01 2212 	add.w	r2, r1, r2, lsr #8
 80244c0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80244c4:	eb07 2712 	add.w	r7, r7, r2, lsr #8
 80244c8:	ea4c 0c00 	orr.w	ip, ip, r0
 80244cc:	f3c7 07c4 	ubfx	r7, r7, #3, #5
 80244d0:	ea47 0c0c 	orr.w	ip, r7, ip
 80244d4:	f8a8 c000 	strh.w	ip, [r8]
 80244d8:	e7b7      	b.n	802444a <_ZN8touchgfx8LCD16bpp59TextureMapper_ARGB8888_NonOpaque_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x6b6>
 80244da:	b01b      	add	sp, #108	@ 0x6c
 80244dc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80244e0:	fffff800 	.word	0xfffff800

080244e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>:
 80244e4:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80244e8:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 80244ec:	2d00      	cmp	r5, #0
 80244ee:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 80244f2:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 80244f6:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 80244fa:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 80244fe:	fb05 0e03 	mla	lr, r5, r3, r0
 8024502:	f2c0 808c 	blt.w	802461e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 8024506:	45a9      	cmp	r9, r5
 8024508:	f340 8089 	ble.w	802461e <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x13a>
 802450c:	2800      	cmp	r0, #0
 802450e:	f2c0 8084 	blt.w	802461a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024512:	4580      	cmp	r8, r0
 8024514:	f340 8081 	ble.w	802461a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x136>
 8024518:	ea4f 045e 	mov.w	r4, lr, lsr #1
 802451c:	f01e 0f01 	tst.w	lr, #1
 8024520:	5d16      	ldrb	r6, [r2, r4]
 8024522:	bf0c      	ite	eq
 8024524:	f006 060f 	andeq.w	r6, r6, #15
 8024528:	1136      	asrne	r6, r6, #4
 802452a:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 802452e:	b2f6      	uxtb	r6, r6
 8024530:	1c44      	adds	r4, r0, #1
 8024532:	d477      	bmi.n	8024624 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024534:	45a0      	cmp	r8, r4
 8024536:	dd75      	ble.n	8024624 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x140>
 8024538:	2f00      	cmp	r7, #0
 802453a:	d075      	beq.n	8024628 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x144>
 802453c:	f10e 0a01 	add.w	sl, lr, #1
 8024540:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024544:	f01a 0f01 	tst.w	sl, #1
 8024548:	5d14      	ldrb	r4, [r2, r4]
 802454a:	bf0c      	ite	eq
 802454c:	f004 040f 	andeq.w	r4, r4, #15
 8024550:	1124      	asrne	r4, r4, #4
 8024552:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024556:	b2e4      	uxtb	r4, r4
 8024558:	3501      	adds	r5, #1
 802455a:	d469      	bmi.n	8024630 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 802455c:	45a9      	cmp	r9, r5
 802455e:	dd67      	ble.n	8024630 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x14c>
 8024560:	f1bc 0f00 	cmp.w	ip, #0
 8024564:	d067      	beq.n	8024636 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x152>
 8024566:	2800      	cmp	r0, #0
 8024568:	db60      	blt.n	802462c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802456a:	4580      	cmp	r8, r0
 802456c:	dd5e      	ble.n	802462c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x148>
 802456e:	eb03 090e 	add.w	r9, r3, lr
 8024572:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024576:	f019 0f01 	tst.w	r9, #1
 802457a:	5d55      	ldrb	r5, [r2, r5]
 802457c:	bf0c      	ite	eq
 802457e:	f005 050f 	andeq.w	r5, r5, #15
 8024582:	112d      	asrne	r5, r5, #4
 8024584:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024588:	b2ed      	uxtb	r5, r5
 802458a:	3001      	adds	r0, #1
 802458c:	d456      	bmi.n	802463c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 802458e:	4580      	cmp	r8, r0
 8024590:	dd54      	ble.n	802463c <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x158>
 8024592:	2f00      	cmp	r7, #0
 8024594:	d054      	beq.n	8024640 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x15c>
 8024596:	3301      	adds	r3, #1
 8024598:	449e      	add	lr, r3
 802459a:	ea4f 035e 	mov.w	r3, lr, lsr #1
 802459e:	f01e 0f01 	tst.w	lr, #1
 80245a2:	5cd0      	ldrb	r0, [r2, r3]
 80245a4:	bf0c      	ite	eq
 80245a6:	f000 000f 	andeq.w	r0, r0, #15
 80245aa:	1100      	asrne	r0, r0, #4
 80245ac:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80245b0:	b2c3      	uxtb	r3, r0
 80245b2:	b2ba      	uxth	r2, r7
 80245b4:	fa1f fc8c 	uxth.w	ip, ip
 80245b8:	fb02 f00c 	mul.w	r0, r2, ip
 80245bc:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 80245c0:	0112      	lsls	r2, r2, #4
 80245c2:	fa1f fc8c 	uxth.w	ip, ip
 80245c6:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 80245ca:	1a12      	subs	r2, r2, r0
 80245cc:	eba7 070c 	sub.w	r7, r7, ip
 80245d0:	b292      	uxth	r2, r2
 80245d2:	b2bf      	uxth	r7, r7
 80245d4:	4362      	muls	r2, r4
 80245d6:	fb06 2207 	mla	r2, r6, r7, r2
 80245da:	fb0c 2505 	mla	r5, ip, r5, r2
 80245de:	fb00 5303 	mla	r3, r0, r3, r5
 80245e2:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80245e6:	b1b3      	cbz	r3, 8024616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80245e8:	f89d 2038 	ldrb.w	r2, [sp, #56]	@ 0x38
 80245ec:	435a      	muls	r2, r3
 80245ee:	1c53      	adds	r3, r2, #1
 80245f0:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 80245f4:	4a2d      	ldr	r2, [pc, #180]	@ (80246ac <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1c8>)
 80245f6:	121b      	asrs	r3, r3, #8
 80245f8:	6812      	ldr	r2, [r2, #0]
 80245fa:	2bff      	cmp	r3, #255	@ 0xff
 80245fc:	ea4f 2612 	mov.w	r6, r2, lsr #8
 8024600:	d120      	bne.n	8024644 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x160>
 8024602:	4b2b      	ldr	r3, [pc, #172]	@ (80246b0 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x1cc>)
 8024604:	0950      	lsrs	r0, r2, #5
 8024606:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802460a:	4033      	ands	r3, r6
 802460c:	4318      	orrs	r0, r3
 802460e:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024612:	4302      	orrs	r2, r0
 8024614:	800a      	strh	r2, [r1, #0]
 8024616:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 802461a:	2600      	movs	r6, #0
 802461c:	e788      	b.n	8024530 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x4c>
 802461e:	2400      	movs	r4, #0
 8024620:	4626      	mov	r6, r4
 8024622:	e799      	b.n	8024558 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024624:	2400      	movs	r4, #0
 8024626:	e797      	b.n	8024558 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 8024628:	463c      	mov	r4, r7
 802462a:	e795      	b.n	8024558 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x74>
 802462c:	2500      	movs	r5, #0
 802462e:	e7ac      	b.n	802458a <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xa6>
 8024630:	2300      	movs	r3, #0
 8024632:	461d      	mov	r5, r3
 8024634:	e7bd      	b.n	80245b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024636:	4663      	mov	r3, ip
 8024638:	4665      	mov	r5, ip
 802463a:	e7ba      	b.n	80245b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 802463c:	2300      	movs	r3, #0
 802463e:	e7b8      	b.n	80245b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024640:	463b      	mov	r3, r7
 8024642:	e7b6      	b.n	80245b2 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0xce>
 8024644:	880d      	ldrh	r5, [r1, #0]
 8024646:	b29f      	uxth	r7, r3
 8024648:	122c      	asrs	r4, r5, #8
 802464a:	f3c2 4007 	ubfx	r0, r2, #16, #8
 802464e:	43db      	mvns	r3, r3
 8024650:	b2db      	uxtb	r3, r3
 8024652:	fb10 f007 	smulbb	r0, r0, r7
 8024656:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 802465a:	fb04 0403 	mla	r4, r4, r3, r0
 802465e:	b2f6      	uxtb	r6, r6
 8024660:	10e8      	asrs	r0, r5, #3
 8024662:	b2d2      	uxtb	r2, r2
 8024664:	00ed      	lsls	r5, r5, #3
 8024666:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 802466a:	fb12 f207 	smulbb	r2, r2, r7
 802466e:	fb16 f607 	smulbb	r6, r6, r7
 8024672:	b2ed      	uxtb	r5, r5
 8024674:	b2a4      	uxth	r4, r4
 8024676:	fb00 6603 	mla	r6, r0, r3, r6
 802467a:	fb05 2303 	mla	r3, r5, r3, r2
 802467e:	b29a      	uxth	r2, r3
 8024680:	1c63      	adds	r3, r4, #1
 8024682:	b2b0      	uxth	r0, r6
 8024684:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024688:	1c53      	adds	r3, r2, #1
 802468a:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 802468e:	1c42      	adds	r2, r0, #1
 8024690:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024694:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024698:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 802469c:	0940      	lsrs	r0, r0, #5
 802469e:	4323      	orrs	r3, r4
 80246a0:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 80246a4:	4303      	orrs	r3, r0
 80246a6:	800b      	strh	r3, [r1, #0]
 80246a8:	e7b5      	b.n	8024616 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh+0x132>
 80246aa:	bf00      	nop
 80246ac:	20002f5c 	.word	0x20002f5c
 80246b0:	00fff800 	.word	0x00fff800

080246b4 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 80246b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80246b8:	b097      	sub	sp, #92	@ 0x5c
 80246ba:	e9dd 4621 	ldrd	r4, r6, [sp, #132]	@ 0x84
 80246be:	9214      	str	r2, [sp, #80]	@ 0x50
 80246c0:	9309      	str	r3, [sp, #36]	@ 0x24
 80246c2:	9a25      	ldr	r2, [sp, #148]	@ 0x94
 80246c4:	f89d 30a4 	ldrb.w	r3, [sp, #164]	@ 0xa4
 80246c8:	910d      	str	r1, [sp, #52]	@ 0x34
 80246ca:	930f      	str	r3, [sp, #60]	@ 0x3c
 80246cc:	e9dd 1326 	ldrd	r1, r3, [sp, #152]	@ 0x98
 80246d0:	9015      	str	r0, [sp, #84]	@ 0x54
 80246d2:	6850      	ldr	r0, [r2, #4]
 80246d4:	6812      	ldr	r2, [r2, #0]
 80246d6:	fb00 1303 	mla	r3, r0, r3, r1
 80246da:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 80246de:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246e0:	689b      	ldr	r3, [r3, #8]
 80246e2:	3301      	adds	r3, #1
 80246e4:	f023 0301 	bic.w	r3, r3, #1
 80246e8:	930a      	str	r3, [sp, #40]	@ 0x28
 80246ea:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246ec:	681f      	ldr	r7, [r3, #0]
 80246ee:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80246f0:	2b00      	cmp	r3, #0
 80246f2:	dc03      	bgt.n	80246fc <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48>
 80246f4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80246f6:	2b00      	cmp	r3, #0
 80246f8:	f340 8287 	ble.w	8024c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80246fc:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 80246fe:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024702:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024706:	1e48      	subs	r0, r1, #1
 8024708:	f102 3cff 	add.w	ip, r2, #4294967295
 802470c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 802470e:	2b00      	cmp	r3, #0
 8024710:	f340 80c4 	ble.w	802489c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1e8>
 8024714:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024718:	ea4f 4326 	mov.w	r3, r6, asr #16
 802471c:	d406      	bmi.n	802472c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 802471e:	4586      	cmp	lr, r0
 8024720:	da04      	bge.n	802472c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024722:	2b00      	cmp	r3, #0
 8024724:	db02      	blt.n	802472c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x78>
 8024726:	4563      	cmp	r3, ip
 8024728:	f2c0 80b9 	blt.w	802489e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ea>
 802472c:	f11e 0e01 	adds.w	lr, lr, #1
 8024730:	f100 80aa 	bmi.w	8024888 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024734:	4571      	cmp	r1, lr
 8024736:	f2c0 80a7 	blt.w	8024888 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 802473a:	3301      	adds	r3, #1
 802473c:	f100 80a4 	bmi.w	8024888 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024740:	429a      	cmp	r2, r3
 8024742:	f2c0 80a1 	blt.w	8024888 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1d4>
 8024746:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024748:	f9bd a028 	ldrsh.w	sl, [sp, #40]	@ 0x28
 802474c:	930e      	str	r3, [sp, #56]	@ 0x38
 802474e:	46c8      	mov	r8, r9
 8024750:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8024752:	2b00      	cmp	r3, #0
 8024754:	f340 80c3 	ble.w	80248de <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x22a>
 8024758:	9b28      	ldr	r3, [sp, #160]	@ 0xa0
 802475a:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 802475e:	1423      	asrs	r3, r4, #16
 8024760:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024764:	f3c4 3203 	ubfx	r2, r4, #12, #4
 8024768:	f3c6 3103 	ubfx	r1, r6, #12, #4
 802476c:	f100 814d 	bmi.w	8024a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024770:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024774:	455b      	cmp	r3, fp
 8024776:	f280 8148 	bge.w	8024a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802477a:	2800      	cmp	r0, #0
 802477c:	f2c0 8145 	blt.w	8024a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 8024780:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024784:	4558      	cmp	r0, fp
 8024786:	f280 8140 	bge.w	8024a0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x356>
 802478a:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 802478c:	fb00 3305 	mla	r3, r0, r5, r3
 8024790:	0858      	lsrs	r0, r3, #1
 8024792:	07dd      	lsls	r5, r3, #31
 8024794:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024798:	bf54      	ite	pl
 802479a:	f00c 0c0f 	andpl.w	ip, ip, #15
 802479e:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 80247a2:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 80247a6:	fa5f fc8c 	uxtb.w	ip, ip
 80247aa:	2a00      	cmp	r2, #0
 80247ac:	f000 80db 	beq.w	8024966 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2b2>
 80247b0:	1c58      	adds	r0, r3, #1
 80247b2:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 80247b6:	07c0      	lsls	r0, r0, #31
 80247b8:	f817 e00e 	ldrb.w	lr, [r7, lr]
 80247bc:	bf54      	ite	pl
 80247be:	f00e 0e0f 	andpl.w	lr, lr, #15
 80247c2:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 80247c6:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 80247ca:	fa5f f08e 	uxtb.w	r0, lr
 80247ce:	9010      	str	r0, [sp, #64]	@ 0x40
 80247d0:	b1c9      	cbz	r1, 8024806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 80247d2:	4453      	add	r3, sl
 80247d4:	0858      	lsrs	r0, r3, #1
 80247d6:	07dd      	lsls	r5, r3, #31
 80247d8:	5c38      	ldrb	r0, [r7, r0]
 80247da:	bf54      	ite	pl
 80247dc:	f000 000f 	andpl.w	r0, r0, #15
 80247e0:	1100      	asrmi	r0, r0, #4
 80247e2:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 80247e6:	3301      	adds	r3, #1
 80247e8:	b2c0      	uxtb	r0, r0
 80247ea:	900b      	str	r0, [sp, #44]	@ 0x2c
 80247ec:	0858      	lsrs	r0, r3, #1
 80247ee:	07dd      	lsls	r5, r3, #31
 80247f0:	f817 e000 	ldrb.w	lr, [r7, r0]
 80247f4:	bf54      	ite	pl
 80247f6:	f00e 030f 	andpl.w	r3, lr, #15
 80247fa:	ea4f 132e 	movmi.w	r3, lr, asr #4
 80247fe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024802:	b2db      	uxtb	r3, r3
 8024804:	9311      	str	r3, [sp, #68]	@ 0x44
 8024806:	b292      	uxth	r2, r2
 8024808:	b289      	uxth	r1, r1
 802480a:	fb02 f301 	mul.w	r3, r2, r1
 802480e:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024812:	0112      	lsls	r2, r2, #4
 8024814:	b289      	uxth	r1, r1
 8024816:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 802481a:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 802481c:	1ad2      	subs	r2, r2, r3
 802481e:	1a40      	subs	r0, r0, r1
 8024820:	b292      	uxth	r2, r2
 8024822:	436a      	muls	r2, r5
 8024824:	b280      	uxth	r0, r0
 8024826:	fb0c 2c00 	mla	ip, ip, r0, r2
 802482a:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 802482c:	fb01 c102 	mla	r1, r1, r2, ip
 8024830:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8024832:	fb03 1302 	mla	r3, r3, r2, r1
 8024836:	f3c3 2307 	ubfx	r3, r3, #8, #8
 802483a:	b1db      	cbz	r3, 8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 802483c:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 802483e:	4353      	muls	r3, r2
 8024840:	1c5a      	adds	r2, r3, #1
 8024842:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024846:	4ac6      	ldr	r2, [pc, #792]	@ (8024b60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024848:	121b      	asrs	r3, r3, #8
 802484a:	6812      	ldr	r2, [r2, #0]
 802484c:	2bff      	cmp	r3, #255	@ 0xff
 802484e:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024852:	f040 8099 	bne.w	8024988 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2d4>
 8024856:	0953      	lsrs	r3, r2, #5
 8024858:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 802485c:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024860:	f02c 0c07 	bic.w	ip, ip, #7
 8024864:	ea43 0c0c 	orr.w	ip, r3, ip
 8024868:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 802486c:	ea4c 0202 	orr.w	r2, ip, r2
 8024870:	f8a8 2000 	strh.w	r2, [r8]
 8024874:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024876:	441c      	add	r4, r3
 8024878:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802487a:	441e      	add	r6, r3
 802487c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 802487e:	3b01      	subs	r3, #1
 8024880:	f108 0802 	add.w	r8, r8, #2
 8024884:	930e      	str	r3, [sp, #56]	@ 0x38
 8024886:	e763      	b.n	8024750 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x9c>
 8024888:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 802488a:	441c      	add	r4, r3
 802488c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 802488e:	441e      	add	r6, r3
 8024890:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024892:	3b01      	subs	r3, #1
 8024894:	9309      	str	r3, [sp, #36]	@ 0x24
 8024896:	f109 0902 	add.w	r9, r9, #2
 802489a:	e737      	b.n	802470c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x58>
 802489c:	d024      	beq.n	80248e8 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x234>
 802489e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248a0:	9823      	ldr	r0, [sp, #140]	@ 0x8c
 80248a2:	3b01      	subs	r3, #1
 80248a4:	fb00 4003 	mla	r0, r0, r3, r4
 80248a8:	1400      	asrs	r0, r0, #16
 80248aa:	f53f af4c 	bmi.w	8024746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248ae:	3901      	subs	r1, #1
 80248b0:	4288      	cmp	r0, r1
 80248b2:	f6bf af48 	bge.w	8024746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248b6:	9924      	ldr	r1, [sp, #144]	@ 0x90
 80248b8:	fb01 6303 	mla	r3, r1, r3, r6
 80248bc:	141b      	asrs	r3, r3, #16
 80248be:	f53f af42 	bmi.w	8024746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248c2:	3a01      	subs	r2, #1
 80248c4:	4293      	cmp	r3, r2
 80248c6:	f6bf af3e 	bge.w	8024746 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 80248ca:	f9bd 3028 	ldrsh.w	r3, [sp, #40]	@ 0x28
 80248ce:	f8dd b024 	ldr.w	fp, [sp, #36]	@ 0x24
 80248d2:	930e      	str	r3, [sp, #56]	@ 0x38
 80248d4:	46c8      	mov	r8, r9
 80248d6:	f1bb 0f00 	cmp.w	fp, #0
 80248da:	f300 80b7 	bgt.w	8024a4c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x398>
 80248de:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80248e0:	ea23 75e3 	bic.w	r5, r3, r3, asr #31
 80248e4:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 80248e8:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80248ea:	2b00      	cmp	r3, #0
 80248ec:	f340 818d 	ble.w	8024c0a <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x556>
 80248f0:	ee30 0a04 	vadd.f32	s0, s0, s8
 80248f4:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 80248f8:	eec7 7a00 	vdiv.f32	s15, s14, s0
 80248fc:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 80248fe:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024902:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024906:	ee20 7aa7 	vmul.f32	s14, s1, s15
 802490a:	eef0 6a62 	vmov.f32	s13, s5
 802490e:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024912:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024916:	ee77 2a62 	vsub.f32	s5, s14, s5
 802491a:	ee16 4a90 	vmov	r4, s13
 802491e:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8024922:	eef0 6a43 	vmov.f32	s13, s6
 8024926:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802492a:	ee12 2a90 	vmov	r2, s5
 802492e:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8024932:	fb92 f3f3 	sdiv	r3, r2, r3
 8024936:	ee13 2a10 	vmov	r2, s6
 802493a:	9323      	str	r3, [sp, #140]	@ 0x8c
 802493c:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 802493e:	fb92 f3f3 	sdiv	r3, r2, r3
 8024942:	9324      	str	r3, [sp, #144]	@ 0x90
 8024944:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8024946:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8024948:	3b01      	subs	r3, #1
 802494a:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 802494e:	930d      	str	r3, [sp, #52]	@ 0x34
 8024950:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024952:	bf08      	it	eq
 8024954:	4613      	moveq	r3, r2
 8024956:	ee16 6a90 	vmov	r6, s13
 802495a:	9309      	str	r3, [sp, #36]	@ 0x24
 802495c:	eeb0 3a67 	vmov.f32	s6, s15
 8024960:	eef0 2a47 	vmov.f32	s5, s14
 8024964:	e6c3      	b.n	80246ee <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3a>
 8024966:	2900      	cmp	r1, #0
 8024968:	f43f af4d 	beq.w	8024806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 802496c:	eb0a 0003 	add.w	r0, sl, r3
 8024970:	0843      	lsrs	r3, r0, #1
 8024972:	07c0      	lsls	r0, r0, #31
 8024974:	5cfb      	ldrb	r3, [r7, r3]
 8024976:	bf54      	ite	pl
 8024978:	f003 030f 	andpl.w	r3, r3, #15
 802497c:	111b      	asrmi	r3, r3, #4
 802497e:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024982:	b2db      	uxtb	r3, r3
 8024984:	930b      	str	r3, [sp, #44]	@ 0x2c
 8024986:	e73e      	b.n	8024806 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x152>
 8024988:	f8b8 e000 	ldrh.w	lr, [r8]
 802498c:	fa1f fb83 	uxth.w	fp, r3
 8024990:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024994:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024998:	43db      	mvns	r3, r3
 802499a:	b2db      	uxtb	r3, r3
 802499c:	fb11 f10b 	smulbb	r1, r1, fp
 80249a0:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80249a4:	fb00 1003 	mla	r0, r0, r3, r1
 80249a8:	fa5f fc8c 	uxtb.w	ip, ip
 80249ac:	ea4f 01ee 	mov.w	r1, lr, asr #3
 80249b0:	b2d2      	uxtb	r2, r2
 80249b2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80249b6:	b280      	uxth	r0, r0
 80249b8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 80249bc:	fb1c fc0b 	smulbb	ip, ip, fp
 80249c0:	fa5f fe8e 	uxtb.w	lr, lr
 80249c4:	fb12 fb0b 	smulbb	fp, r2, fp
 80249c8:	fb01 cc03 	mla	ip, r1, r3, ip
 80249cc:	fb0e bb03 	mla	fp, lr, r3, fp
 80249d0:	1c43      	adds	r3, r0, #1
 80249d2:	fa1f fc8c 	uxth.w	ip, ip
 80249d6:	fa1f fb8b 	uxth.w	fp, fp
 80249da:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 80249de:	f400 4378 	and.w	r3, r0, #63488	@ 0xf800
 80249e2:	f10c 0101 	add.w	r1, ip, #1
 80249e6:	f10b 0001 	add.w	r0, fp, #1
 80249ea:	eb00 201b 	add.w	r0, r0, fp, lsr #8
 80249ee:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 80249f2:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80249f6:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 80249fa:	4318      	orrs	r0, r3
 80249fc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024a00:	ea40 000c 	orr.w	r0, r0, ip
 8024a04:	f8a8 0000 	strh.w	r0, [r8]
 8024a08:	e734      	b.n	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a0a:	f113 0b01 	adds.w	fp, r3, #1
 8024a0e:	f53f af31 	bmi.w	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a12:	45dc      	cmp	ip, fp
 8024a14:	f6ff af2e 	blt.w	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a18:	f110 0b01 	adds.w	fp, r0, #1
 8024a1c:	f53f af2a 	bmi.w	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a20:	45de      	cmp	lr, fp
 8024a22:	f6ff af27 	blt.w	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a26:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8024a28:	9302      	str	r3, [sp, #8]
 8024a2a:	fa0f f38e 	sxth.w	r3, lr
 8024a2e:	9301      	str	r3, [sp, #4]
 8024a30:	fa0f f38c 	sxth.w	r3, ip
 8024a34:	e9cd 0203 	strd	r0, r2, [sp, #12]
 8024a38:	e9cd 1505 	strd	r1, r5, [sp, #20]
 8024a3c:	9300      	str	r3, [sp, #0]
 8024a3e:	463a      	mov	r2, r7
 8024a40:	4653      	mov	r3, sl
 8024a42:	4641      	mov	r1, r8
 8024a44:	9815      	ldr	r0, [sp, #84]	@ 0x54
 8024a46:	f7ff fd4d 	bl	80244e4 <_ZNK8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA16writePixelOnEdgeEPtPKtsssiihhh>
 8024a4a:	e713      	b.n	8024874 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c0>
 8024a4c:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8024a4e:	1422      	asrs	r2, r4, #16
 8024a50:	1433      	asrs	r3, r6, #16
 8024a52:	fb05 2303 	mla	r3, r5, r3, r2
 8024a56:	085a      	lsrs	r2, r3, #1
 8024a58:	07dd      	lsls	r5, r3, #31
 8024a5a:	5cba      	ldrb	r2, [r7, r2]
 8024a5c:	bf54      	ite	pl
 8024a5e:	f002 020f 	andpl.w	r2, r2, #15
 8024a62:	1112      	asrmi	r2, r2, #4
 8024a64:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8024a68:	f3c4 3103 	ubfx	r1, r4, #12, #4
 8024a6c:	f3c6 3003 	ubfx	r0, r6, #12, #4
 8024a70:	b2d2      	uxtb	r2, r2
 8024a72:	2900      	cmp	r1, #0
 8024a74:	d076      	beq.n	8024b64 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4b0>
 8024a76:	f103 0e01 	add.w	lr, r3, #1
 8024a7a:	ea4f 0c5e 	mov.w	ip, lr, lsr #1
 8024a7e:	f01e 0f01 	tst.w	lr, #1
 8024a82:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024a86:	bf0c      	ite	eq
 8024a88:	f00c 0c0f 	andeq.w	ip, ip, #15
 8024a8c:	ea4f 1c2c 	movne.w	ip, ip, asr #4
 8024a90:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024a94:	fa5f f58c 	uxtb.w	r5, ip
 8024a98:	9512      	str	r5, [sp, #72]	@ 0x48
 8024a9a:	b300      	cbz	r0, 8024ade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024a9c:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024a9e:	442b      	add	r3, r5
 8024aa0:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024aa4:	07dd      	lsls	r5, r3, #31
 8024aa6:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024aaa:	bf54      	ite	pl
 8024aac:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ab0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ab4:	3301      	adds	r3, #1
 8024ab6:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024aba:	fa5f f58c 	uxtb.w	r5, ip
 8024abe:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024ac2:	950c      	str	r5, [sp, #48]	@ 0x30
 8024ac4:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024ac8:	07dd      	lsls	r5, r3, #31
 8024aca:	bf54      	ite	pl
 8024acc:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ad0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ad4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ad8:	fa5f f38c 	uxtb.w	r3, ip
 8024adc:	9313      	str	r3, [sp, #76]	@ 0x4c
 8024ade:	b289      	uxth	r1, r1
 8024ae0:	b280      	uxth	r0, r0
 8024ae2:	fb01 f300 	mul.w	r3, r1, r0
 8024ae6:	ebc3 1000 	rsb	r0, r3, r0, lsl #4
 8024aea:	0109      	lsls	r1, r1, #4
 8024aec:	b280      	uxth	r0, r0
 8024aee:	f5c1 7c80 	rsb	ip, r1, #256	@ 0x100
 8024af2:	9d12      	ldr	r5, [sp, #72]	@ 0x48
 8024af4:	1ac9      	subs	r1, r1, r3
 8024af6:	ebac 0c00 	sub.w	ip, ip, r0
 8024afa:	b289      	uxth	r1, r1
 8024afc:	4369      	muls	r1, r5
 8024afe:	fa1f fc8c 	uxth.w	ip, ip
 8024b02:	fb02 120c 	mla	r2, r2, ip, r1
 8024b06:	990c      	ldr	r1, [sp, #48]	@ 0x30
 8024b08:	fb00 2001 	mla	r0, r0, r1, r2
 8024b0c:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8024b0e:	fb03 0302 	mla	r3, r3, r2, r0
 8024b12:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024b16:	b1d3      	cbz	r3, 8024b4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024b18:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8024b1a:	4353      	muls	r3, r2
 8024b1c:	1c5a      	adds	r2, r3, #1
 8024b1e:	eb02 2313 	add.w	r3, r2, r3, lsr #8
 8024b22:	4a0f      	ldr	r2, [pc, #60]	@ (8024b60 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4ac>)
 8024b24:	121b      	asrs	r3, r3, #8
 8024b26:	6812      	ldr	r2, [r2, #0]
 8024b28:	2bff      	cmp	r3, #255	@ 0xff
 8024b2a:	ea4f 2c12 	mov.w	ip, r2, lsr #8
 8024b2e:	d12d      	bne.n	8024b8c <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x4d8>
 8024b30:	0953      	lsrs	r3, r2, #5
 8024b32:	f42c 6cff 	bic.w	ip, ip, #2040	@ 0x7f8
 8024b36:	f403 63fc 	and.w	r3, r3, #2016	@ 0x7e0
 8024b3a:	f02c 0c07 	bic.w	ip, ip, #7
 8024b3e:	ea43 0c0c 	orr.w	ip, r3, ip
 8024b42:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024b46:	ea4c 0202 	orr.w	r2, ip, r2
 8024b4a:	f8a8 2000 	strh.w	r2, [r8]
 8024b4e:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8024b50:	441c      	add	r4, r3
 8024b52:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024b54:	f108 0802 	add.w	r8, r8, #2
 8024b58:	441e      	add	r6, r3
 8024b5a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8024b5e:	e6ba      	b.n	80248d6 <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x222>
 8024b60:	20002f5c 	.word	0x20002f5c
 8024b64:	2800      	cmp	r0, #0
 8024b66:	d0ba      	beq.n	8024ade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b68:	9d0e      	ldr	r5, [sp, #56]	@ 0x38
 8024b6a:	442b      	add	r3, r5
 8024b6c:	ea4f 0c53 	mov.w	ip, r3, lsr #1
 8024b70:	07db      	lsls	r3, r3, #31
 8024b72:	f817 c00c 	ldrb.w	ip, [r7, ip]
 8024b76:	bf54      	ite	pl
 8024b78:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024b7c:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024b80:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024b84:	fa5f f38c 	uxtb.w	r3, ip
 8024b88:	930c      	str	r3, [sp, #48]	@ 0x30
 8024b8a:	e7a8      	b.n	8024ade <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42a>
 8024b8c:	f8b8 e000 	ldrh.w	lr, [r8]
 8024b90:	fa1f fa83 	uxth.w	sl, r3
 8024b94:	ea4f 202e 	mov.w	r0, lr, asr #8
 8024b98:	f3c2 4107 	ubfx	r1, r2, #16, #8
 8024b9c:	43db      	mvns	r3, r3
 8024b9e:	b2db      	uxtb	r3, r3
 8024ba0:	fb11 f10a 	smulbb	r1, r1, sl
 8024ba4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 8024ba8:	fb00 1003 	mla	r0, r0, r3, r1
 8024bac:	b2d2      	uxtb	r2, r2
 8024bae:	ea4f 01ee 	mov.w	r1, lr, asr #3
 8024bb2:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 8024bb6:	fa5f fe8e 	uxtb.w	lr, lr
 8024bba:	fb12 f20a 	smulbb	r2, r2, sl
 8024bbe:	fb0e 2203 	mla	r2, lr, r3, r2
 8024bc2:	fa5f fc8c 	uxtb.w	ip, ip
 8024bc6:	b280      	uxth	r0, r0
 8024bc8:	f001 01fc 	and.w	r1, r1, #252	@ 0xfc
 8024bcc:	b292      	uxth	r2, r2
 8024bce:	fb1c fc0a 	smulbb	ip, ip, sl
 8024bd2:	fb01 cc03 	mla	ip, r1, r3, ip
 8024bd6:	1c43      	adds	r3, r0, #1
 8024bd8:	1c51      	adds	r1, r2, #1
 8024bda:	eb03 2010 	add.w	r0, r3, r0, lsr #8
 8024bde:	eb01 2112 	add.w	r1, r1, r2, lsr #8
 8024be2:	fa1f fc8c 	uxth.w	ip, ip
 8024be6:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 8024bea:	f400 4078 	and.w	r0, r0, #63488	@ 0xf800
 8024bee:	4308      	orrs	r0, r1
 8024bf0:	f10c 0101 	add.w	r1, ip, #1
 8024bf4:	eb01 2c1c 	add.w	ip, r1, ip, lsr #8
 8024bf8:	ea4f 1c5c 	mov.w	ip, ip, lsr #5
 8024bfc:	f40c 6cfc 	and.w	ip, ip, #2016	@ 0x7e0
 8024c00:	ea40 000c 	orr.w	r0, r0, ip
 8024c04:	f8a8 0000 	strh.w	r0, [r8]
 8024c08:	e7a1      	b.n	8024b4e <_ZN8touchgfx8LCD16bpp41TextureMapper_A4_BilinearInterpolation_GA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x49a>
 8024c0a:	b017      	add	sp, #92	@ 0x5c
 8024c0c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08024c10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>:
 8024c10:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8024c14:	e9dd 050a 	ldrd	r0, r5, [sp, #40]	@ 0x28
 8024c18:	2d00      	cmp	r5, #0
 8024c1a:	f9bd 8020 	ldrsh.w	r8, [sp, #32]
 8024c1e:	f9bd 9024 	ldrsh.w	r9, [sp, #36]	@ 0x24
 8024c22:	f89d 7030 	ldrb.w	r7, [sp, #48]	@ 0x30
 8024c26:	f89d c034 	ldrb.w	ip, [sp, #52]	@ 0x34
 8024c2a:	fb05 0e03 	mla	lr, r5, r3, r0
 8024c2e:	f2c0 80b0 	blt.w	8024d92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c32:	45a9      	cmp	r9, r5
 8024c34:	f340 80ad 	ble.w	8024d92 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x182>
 8024c38:	2800      	cmp	r0, #0
 8024c3a:	f2c0 80a8 	blt.w	8024d8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c3e:	4580      	cmp	r8, r0
 8024c40:	f340 80a5 	ble.w	8024d8e <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17e>
 8024c44:	ea4f 045e 	mov.w	r4, lr, lsr #1
 8024c48:	f01e 0f01 	tst.w	lr, #1
 8024c4c:	5d16      	ldrb	r6, [r2, r4]
 8024c4e:	bf0c      	ite	eq
 8024c50:	f006 060f 	andeq.w	r6, r6, #15
 8024c54:	1136      	asrne	r6, r6, #4
 8024c56:	eb06 1606 	add.w	r6, r6, r6, lsl #4
 8024c5a:	b2f6      	uxtb	r6, r6
 8024c5c:	1c44      	adds	r4, r0, #1
 8024c5e:	f100 809b 	bmi.w	8024d98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c62:	45a0      	cmp	r8, r4
 8024c64:	f340 8098 	ble.w	8024d98 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x188>
 8024c68:	2f00      	cmp	r7, #0
 8024c6a:	f000 8097 	beq.w	8024d9c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x18c>
 8024c6e:	f10e 0a01 	add.w	sl, lr, #1
 8024c72:	ea4f 045a 	mov.w	r4, sl, lsr #1
 8024c76:	f01a 0f01 	tst.w	sl, #1
 8024c7a:	5d14      	ldrb	r4, [r2, r4]
 8024c7c:	bf0c      	ite	eq
 8024c7e:	f004 040f 	andeq.w	r4, r4, #15
 8024c82:	1124      	asrne	r4, r4, #4
 8024c84:	eb04 1404 	add.w	r4, r4, r4, lsl #4
 8024c88:	b2e4      	uxtb	r4, r4
 8024c8a:	3501      	adds	r5, #1
 8024c8c:	f100 808a 	bmi.w	8024da4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c90:	45a9      	cmp	r9, r5
 8024c92:	f340 8087 	ble.w	8024da4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x194>
 8024c96:	f1bc 0f00 	cmp.w	ip, #0
 8024c9a:	f000 8086 	beq.w	8024daa <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x19a>
 8024c9e:	2800      	cmp	r0, #0
 8024ca0:	db7e      	blt.n	8024da0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024ca2:	4580      	cmp	r8, r0
 8024ca4:	dd7c      	ble.n	8024da0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x190>
 8024ca6:	eb03 090e 	add.w	r9, r3, lr
 8024caa:	ea4f 0559 	mov.w	r5, r9, lsr #1
 8024cae:	f019 0f01 	tst.w	r9, #1
 8024cb2:	5d55      	ldrb	r5, [r2, r5]
 8024cb4:	bf0c      	ite	eq
 8024cb6:	f005 050f 	andeq.w	r5, r5, #15
 8024cba:	112d      	asrne	r5, r5, #4
 8024cbc:	eb05 1505 	add.w	r5, r5, r5, lsl #4
 8024cc0:	b2ed      	uxtb	r5, r5
 8024cc2:	3001      	adds	r0, #1
 8024cc4:	d474      	bmi.n	8024db0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024cc6:	4580      	cmp	r8, r0
 8024cc8:	dd72      	ble.n	8024db0 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a0>
 8024cca:	2f00      	cmp	r7, #0
 8024ccc:	d072      	beq.n	8024db4 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a4>
 8024cce:	3301      	adds	r3, #1
 8024cd0:	449e      	add	lr, r3
 8024cd2:	ea4f 035e 	mov.w	r3, lr, lsr #1
 8024cd6:	f01e 0f01 	tst.w	lr, #1
 8024cda:	5cd0      	ldrb	r0, [r2, r3]
 8024cdc:	bf0c      	ite	eq
 8024cde:	f000 000f 	andeq.w	r0, r0, #15
 8024ce2:	1100      	asrne	r0, r0, #4
 8024ce4:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024ce8:	b2c3      	uxtb	r3, r0
 8024cea:	b2ba      	uxth	r2, r7
 8024cec:	fa1f fc8c 	uxth.w	ip, ip
 8024cf0:	fb02 f00c 	mul.w	r0, r2, ip
 8024cf4:	ebc0 1c0c 	rsb	ip, r0, ip, lsl #4
 8024cf8:	0112      	lsls	r2, r2, #4
 8024cfa:	fa1f fc8c 	uxth.w	ip, ip
 8024cfe:	f5c2 7780 	rsb	r7, r2, #256	@ 0x100
 8024d02:	1a12      	subs	r2, r2, r0
 8024d04:	eba7 070c 	sub.w	r7, r7, ip
 8024d08:	b292      	uxth	r2, r2
 8024d0a:	b2bf      	uxth	r7, r7
 8024d0c:	4362      	muls	r2, r4
 8024d0e:	fb06 2207 	mla	r2, r6, r7, r2
 8024d12:	fb0c 2505 	mla	r5, ip, r5, r2
 8024d16:	fb00 5303 	mla	r3, r0, r3, r5
 8024d1a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024d1e:	b3a3      	cbz	r3, 8024d8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x17a>
 8024d20:	4a25      	ldr	r2, [pc, #148]	@ (8024db8 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x1a8>)
 8024d22:	880e      	ldrh	r6, [r1, #0]
 8024d24:	6815      	ldr	r5, [r2, #0]
 8024d26:	1234      	asrs	r4, r6, #8
 8024d28:	b29a      	uxth	r2, r3
 8024d2a:	f3c5 4007 	ubfx	r0, r5, #16, #8
 8024d2e:	43db      	mvns	r3, r3
 8024d30:	b2db      	uxtb	r3, r3
 8024d32:	fb10 f002 	smulbb	r0, r0, r2
 8024d36:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8024d3a:	fb04 0403 	mla	r4, r4, r3, r0
 8024d3e:	f3c5 2707 	ubfx	r7, r5, #8, #8
 8024d42:	10f0      	asrs	r0, r6, #3
 8024d44:	b2ed      	uxtb	r5, r5
 8024d46:	00f6      	lsls	r6, r6, #3
 8024d48:	fb17 f702 	smulbb	r7, r7, r2
 8024d4c:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 8024d50:	fb15 f202 	smulbb	r2, r5, r2
 8024d54:	b2f6      	uxtb	r6, r6
 8024d56:	b2a4      	uxth	r4, r4
 8024d58:	fb00 7003 	mla	r0, r0, r3, r7
 8024d5c:	fb06 2303 	mla	r3, r6, r3, r2
 8024d60:	b29a      	uxth	r2, r3
 8024d62:	1c63      	adds	r3, r4, #1
 8024d64:	b280      	uxth	r0, r0
 8024d66:	eb03 2414 	add.w	r4, r3, r4, lsr #8
 8024d6a:	1c53      	adds	r3, r2, #1
 8024d6c:	eb03 2312 	add.w	r3, r3, r2, lsr #8
 8024d70:	1c42      	adds	r2, r0, #1
 8024d72:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8024d76:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 8024d7a:	f3c3 23c4 	ubfx	r3, r3, #11, #5
 8024d7e:	0940      	lsrs	r0, r0, #5
 8024d80:	4323      	orrs	r3, r4
 8024d82:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 8024d86:	4303      	orrs	r3, r0
 8024d88:	800b      	strh	r3, [r1, #0]
 8024d8a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8024d8e:	2600      	movs	r6, #0
 8024d90:	e764      	b.n	8024c5c <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x4c>
 8024d92:	2400      	movs	r4, #0
 8024d94:	4626      	mov	r6, r4
 8024d96:	e778      	b.n	8024c8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d98:	2400      	movs	r4, #0
 8024d9a:	e776      	b.n	8024c8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024d9c:	463c      	mov	r4, r7
 8024d9e:	e774      	b.n	8024c8a <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0x7a>
 8024da0:	2500      	movs	r5, #0
 8024da2:	e78e      	b.n	8024cc2 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xb2>
 8024da4:	2300      	movs	r3, #0
 8024da6:	461d      	mov	r5, r3
 8024da8:	e79f      	b.n	8024cea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024daa:	4663      	mov	r3, ip
 8024dac:	4665      	mov	r5, ip
 8024dae:	e79c      	b.n	8024cea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024db0:	2300      	movs	r3, #0
 8024db2:	e79a      	b.n	8024cea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024db4:	463b      	mov	r3, r7
 8024db6:	e798      	b.n	8024cea <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh+0xda>
 8024db8:	20002f5c 	.word	0x20002f5c

08024dbc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff>:
 8024dbc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8024dc0:	b093      	sub	sp, #76	@ 0x4c
 8024dc2:	461d      	mov	r5, r3
 8024dc4:	920c      	str	r2, [sp, #48]	@ 0x30
 8024dc6:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8024dc8:	9107      	str	r1, [sp, #28]
 8024dca:	e9dd 1322 	ldrd	r1, r3, [sp, #136]	@ 0x88
 8024dce:	9011      	str	r0, [sp, #68]	@ 0x44
 8024dd0:	6850      	ldr	r0, [r2, #4]
 8024dd2:	6812      	ldr	r2, [r2, #0]
 8024dd4:	fb00 1303 	mla	r3, r0, r3, r1
 8024dd8:	eb02 0943 	add.w	r9, r2, r3, lsl #1
 8024ddc:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024dde:	689b      	ldr	r3, [r3, #8]
 8024de0:	3301      	adds	r3, #1
 8024de2:	f023 0301 	bic.w	r3, r3, #1
 8024de6:	9306      	str	r3, [sp, #24]
 8024de8:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024dea:	e9dd 461d 	ldrd	r4, r6, [sp, #116]	@ 0x74
 8024dee:	681f      	ldr	r7, [r3, #0]
 8024df0:	9b07      	ldr	r3, [sp, #28]
 8024df2:	2b00      	cmp	r3, #0
 8024df4:	dc03      	bgt.n	8024dfe <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x42>
 8024df6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8024df8:	2b00      	cmp	r3, #0
 8024dfa:	f340 8267 	ble.w	80252cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024dfe:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024e00:	f9b3 1008 	ldrsh.w	r1, [r3, #8]
 8024e04:	f9b3 200c 	ldrsh.w	r2, [r3, #12]
 8024e08:	1e48      	subs	r0, r1, #1
 8024e0a:	f102 3cff 	add.w	ip, r2, #4294967295
 8024e0e:	2d00      	cmp	r5, #0
 8024e10:	f340 80b8 	ble.w	8024f84 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1c8>
 8024e14:	ea5f 4e24 	movs.w	lr, r4, asr #16
 8024e18:	ea4f 4326 	mov.w	r3, r6, asr #16
 8024e1c:	d406      	bmi.n	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e1e:	4586      	cmp	lr, r0
 8024e20:	da04      	bge.n	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e22:	2b00      	cmp	r3, #0
 8024e24:	db02      	blt.n	8024e2c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x70>
 8024e26:	4563      	cmp	r3, ip
 8024e28:	f2c0 80ad 	blt.w	8024f86 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1ca>
 8024e2c:	f11e 0e01 	adds.w	lr, lr, #1
 8024e30:	f100 80a0 	bmi.w	8024f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e34:	4571      	cmp	r1, lr
 8024e36:	f2c0 809d 	blt.w	8024f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e3a:	3301      	adds	r3, #1
 8024e3c:	f100 809a 	bmi.w	8024f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e40:	429a      	cmp	r2, r3
 8024e42:	f2c0 8097 	blt.w	8024f74 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1b8>
 8024e46:	f9bd a018 	ldrsh.w	sl, [sp, #24]
 8024e4a:	9509      	str	r5, [sp, #36]	@ 0x24
 8024e4c:	46c8      	mov	r8, r9
 8024e4e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024e50:	2b00      	cmp	r3, #0
 8024e52:	f340 80b6 	ble.w	8024fc2 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x206>
 8024e56:	f3c4 3303 	ubfx	r3, r4, #12, #4
 8024e5a:	9308      	str	r3, [sp, #32]
 8024e5c:	9b24      	ldr	r3, [sp, #144]	@ 0x90
 8024e5e:	e9d3 ce02 	ldrd	ip, lr, [r3, #8]
 8024e62:	1423      	asrs	r3, r4, #16
 8024e64:	ea4f 4026 	mov.w	r0, r6, asr #16
 8024e68:	f3c6 3103 	ubfx	r1, r6, #12, #4
 8024e6c:	f100 813e 	bmi.w	80250ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e70:	f10c 3bff 	add.w	fp, ip, #4294967295
 8024e74:	455b      	cmp	r3, fp
 8024e76:	f280 8139 	bge.w	80250ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e7a:	2800      	cmp	r0, #0
 8024e7c:	f2c0 8136 	blt.w	80250ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e80:	f10e 3bff 	add.w	fp, lr, #4294967295
 8024e84:	4558      	cmp	r0, fp
 8024e86:	f280 8131 	bge.w	80250ec <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x330>
 8024e8a:	9a06      	ldr	r2, [sp, #24]
 8024e8c:	fb00 3302 	mla	r3, r0, r2, r3
 8024e90:	0858      	lsrs	r0, r3, #1
 8024e92:	07da      	lsls	r2, r3, #31
 8024e94:	f817 c000 	ldrb.w	ip, [r7, r0]
 8024e98:	9a08      	ldr	r2, [sp, #32]
 8024e9a:	bf54      	ite	pl
 8024e9c:	f00c 0c0f 	andpl.w	ip, ip, #15
 8024ea0:	ea4f 1c2c 	movmi.w	ip, ip, asr #4
 8024ea4:	eb0c 1c0c 	add.w	ip, ip, ip, lsl #4
 8024ea8:	fa5f fc8c 	uxtb.w	ip, ip
 8024eac:	2a00      	cmp	r2, #0
 8024eae:	f000 80cb 	beq.w	8025048 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x28c>
 8024eb2:	1c58      	adds	r0, r3, #1
 8024eb4:	ea4f 0e50 	mov.w	lr, r0, lsr #1
 8024eb8:	07c0      	lsls	r0, r0, #31
 8024eba:	f817 e00e 	ldrb.w	lr, [r7, lr]
 8024ebe:	bf54      	ite	pl
 8024ec0:	f00e 0e0f 	andpl.w	lr, lr, #15
 8024ec4:	ea4f 1e2e 	movmi.w	lr, lr, asr #4
 8024ec8:	eb0e 1e0e 	add.w	lr, lr, lr, lsl #4
 8024ecc:	fa5f fe8e 	uxtb.w	lr, lr
 8024ed0:	f8cd e034 	str.w	lr, [sp, #52]	@ 0x34
 8024ed4:	b1b9      	cbz	r1, 8024f06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 8024ed6:	4453      	add	r3, sl
 8024ed8:	0858      	lsrs	r0, r3, #1
 8024eda:	07da      	lsls	r2, r3, #31
 8024edc:	5c38      	ldrb	r0, [r7, r0]
 8024ede:	bf54      	ite	pl
 8024ee0:	f000 000f 	andpl.w	r0, r0, #15
 8024ee4:	1100      	asrmi	r0, r0, #4
 8024ee6:	eb00 1000 	add.w	r0, r0, r0, lsl #4
 8024eea:	b2c0      	uxtb	r0, r0
 8024eec:	900a      	str	r0, [sp, #40]	@ 0x28
 8024eee:	1c58      	adds	r0, r3, #1
 8024ef0:	0843      	lsrs	r3, r0, #1
 8024ef2:	07c2      	lsls	r2, r0, #31
 8024ef4:	5cfb      	ldrb	r3, [r7, r3]
 8024ef6:	bf54      	ite	pl
 8024ef8:	f003 030f 	andpl.w	r3, r3, #15
 8024efc:	111b      	asrmi	r3, r3, #4
 8024efe:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8024f02:	b2db      	uxtb	r3, r3
 8024f04:	930e      	str	r3, [sp, #56]	@ 0x38
 8024f06:	f8bd 2020 	ldrh.w	r2, [sp, #32]
 8024f0a:	b289      	uxth	r1, r1
 8024f0c:	fb02 f301 	mul.w	r3, r2, r1
 8024f10:	ebc3 1101 	rsb	r1, r3, r1, lsl #4
 8024f14:	0112      	lsls	r2, r2, #4
 8024f16:	b289      	uxth	r1, r1
 8024f18:	f5c2 7080 	rsb	r0, r2, #256	@ 0x100
 8024f1c:	1a40      	subs	r0, r0, r1
 8024f1e:	fa1f fe80 	uxth.w	lr, r0
 8024f22:	1ad2      	subs	r2, r2, r3
 8024f24:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8024f26:	b292      	uxth	r2, r2
 8024f28:	4342      	muls	r2, r0
 8024f2a:	fb0c 2c0e 	mla	ip, ip, lr, r2
 8024f2e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8024f30:	fb01 c102 	mla	r1, r1, r2, ip
 8024f34:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8024f36:	fb03 1302 	mla	r3, r3, r2, r1
 8024f3a:	f3c3 2307 	ubfx	r3, r3, #8, #8
 8024f3e:	2bff      	cmp	r3, #255	@ 0xff
 8024f40:	f040 8093 	bne.w	802506a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x2ae>
 8024f44:	4bbe      	ldr	r3, [pc, #760]	@ (8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8024f46:	681a      	ldr	r2, [r3, #0]
 8024f48:	4bbe      	ldr	r3, [pc, #760]	@ (8025244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 8024f4a:	0951      	lsrs	r1, r2, #5
 8024f4c:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 8024f50:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 8024f54:	430b      	orrs	r3, r1
 8024f56:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8024f5a:	4313      	orrs	r3, r2
 8024f5c:	f8a8 3000 	strh.w	r3, [r8]
 8024f60:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024f62:	441c      	add	r4, r3
 8024f64:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f66:	441e      	add	r6, r3
 8024f68:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8024f6a:	3b01      	subs	r3, #1
 8024f6c:	f108 0802 	add.w	r8, r8, #2
 8024f70:	9309      	str	r3, [sp, #36]	@ 0x24
 8024f72:	e76c      	b.n	8024e4e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x92>
 8024f74:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8024f76:	441c      	add	r4, r3
 8024f78:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8024f7a:	3d01      	subs	r5, #1
 8024f7c:	441e      	add	r6, r3
 8024f7e:	f109 0902 	add.w	r9, r9, #2
 8024f82:	e744      	b.n	8024e0e <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x52>
 8024f84:	d021      	beq.n	8024fca <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x20e>
 8024f86:	981f      	ldr	r0, [sp, #124]	@ 0x7c
 8024f88:	1e6b      	subs	r3, r5, #1
 8024f8a:	fb00 4003 	mla	r0, r0, r3, r4
 8024f8e:	1400      	asrs	r0, r0, #16
 8024f90:	f53f af59 	bmi.w	8024e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f94:	3901      	subs	r1, #1
 8024f96:	4288      	cmp	r0, r1
 8024f98:	f6bf af55 	bge.w	8024e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024f9c:	9920      	ldr	r1, [sp, #128]	@ 0x80
 8024f9e:	fb01 6303 	mla	r3, r1, r3, r6
 8024fa2:	141b      	asrs	r3, r3, #16
 8024fa4:	f53f af4f 	bmi.w	8024e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fa8:	3a01      	subs	r2, #1
 8024faa:	4293      	cmp	r3, r2
 8024fac:	f6bf af4b 	bge.w	8024e46 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x8a>
 8024fb0:	f9bd 3018 	ldrsh.w	r3, [sp, #24]
 8024fb4:	9308      	str	r3, [sp, #32]
 8024fb6:	46a8      	mov	r8, r5
 8024fb8:	46ce      	mov	lr, r9
 8024fba:	f1b8 0f00 	cmp.w	r8, #0
 8024fbe:	f300 80b5 	bgt.w	802512c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x370>
 8024fc2:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8024fc6:	eb09 0945 	add.w	r9, r9, r5, lsl #1
 8024fca:	9b07      	ldr	r3, [sp, #28]
 8024fcc:	2b00      	cmp	r3, #0
 8024fce:	f340 817d 	ble.w	80252cc <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x510>
 8024fd2:	ee30 0a04 	vadd.f32	s0, s0, s8
 8024fd6:	eeb7 7a00 	vmov.f32	s14, #112	@ 0x3f800000  1.0
 8024fda:	eec7 7a00 	vdiv.f32	s15, s14, s0
 8024fde:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8024fe0:	ee70 0aa4 	vadd.f32	s1, s1, s9
 8024fe4:	ee31 1a05 	vadd.f32	s2, s2, s10
 8024fe8:	ee20 7aa7 	vmul.f32	s14, s1, s15
 8024fec:	eef0 6a62 	vmov.f32	s13, s5
 8024ff0:	ee61 7a27 	vmul.f32	s15, s2, s15
 8024ff4:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8024ff8:	ee77 2a62 	vsub.f32	s5, s14, s5
 8024ffc:	ee16 4a90 	vmov	r4, s13
 8025000:	eefe 2ac8 	vcvt.s32.f32	s5, s5, #16
 8025004:	eef0 6a43 	vmov.f32	s13, s6
 8025008:	ee37 3ac3 	vsub.f32	s6, s15, s6
 802500c:	ee12 2a90 	vmov	r2, s5
 8025010:	eebe 3ac8 	vcvt.s32.f32	s6, s6, #16
 8025014:	fb92 f3f3 	sdiv	r3, r2, r3
 8025018:	ee13 2a10 	vmov	r2, s6
 802501c:	931f      	str	r3, [sp, #124]	@ 0x7c
 802501e:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025020:	fb92 f3f3 	sdiv	r3, r2, r3
 8025024:	9320      	str	r3, [sp, #128]	@ 0x80
 8025026:	9b07      	ldr	r3, [sp, #28]
 8025028:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 802502a:	3b01      	subs	r3, #1
 802502c:	eefe 6ac8 	vcvt.s32.f32	s13, s13, #16
 8025030:	9307      	str	r3, [sp, #28]
 8025032:	9b1c      	ldr	r3, [sp, #112]	@ 0x70
 8025034:	ee16 6a90 	vmov	r6, s13
 8025038:	bf14      	ite	ne
 802503a:	461d      	movne	r5, r3
 802503c:	4615      	moveq	r5, r2
 802503e:	eeb0 3a67 	vmov.f32	s6, s15
 8025042:	eef0 2a47 	vmov.f32	s5, s14
 8025046:	e6d3      	b.n	8024df0 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x34>
 8025048:	2900      	cmp	r1, #0
 802504a:	f43f af5c 	beq.w	8024f06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802504e:	eb0a 0003 	add.w	r0, sl, r3
 8025052:	0843      	lsrs	r3, r0, #1
 8025054:	07c0      	lsls	r0, r0, #31
 8025056:	5cfb      	ldrb	r3, [r7, r3]
 8025058:	bf54      	ite	pl
 802505a:	f003 030f 	andpl.w	r3, r3, #15
 802505e:	111b      	asrmi	r3, r3, #4
 8025060:	eb03 1303 	add.w	r3, r3, r3, lsl #4
 8025064:	b2db      	uxtb	r3, r3
 8025066:	930a      	str	r3, [sp, #40]	@ 0x28
 8025068:	e74d      	b.n	8024f06 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x14a>
 802506a:	2b00      	cmp	r3, #0
 802506c:	f43f af78 	beq.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025070:	4a73      	ldr	r2, [pc, #460]	@ (8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 8025072:	f8b8 c000 	ldrh.w	ip, [r8]
 8025076:	6810      	ldr	r0, [r2, #0]
 8025078:	fa1f fe83 	uxth.w	lr, r3
 802507c:	ea4f 212c 	mov.w	r1, ip, asr #8
 8025080:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025084:	43db      	mvns	r3, r3
 8025086:	b2db      	uxtb	r3, r3
 8025088:	fb12 f20e 	smulbb	r2, r2, lr
 802508c:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 8025090:	fb01 2103 	mla	r1, r1, r3, r2
 8025094:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025098:	ea4f 02ec 	mov.w	r2, ip, asr #3
 802509c:	b2c0      	uxtb	r0, r0
 802509e:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 80250a2:	fb1b fb0e 	smulbb	fp, fp, lr
 80250a6:	b289      	uxth	r1, r1
 80250a8:	fb10 fe0e 	smulbb	lr, r0, lr
 80250ac:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 80250b0:	fa5f fc8c 	uxtb.w	ip, ip
 80250b4:	fb02 b203 	mla	r2, r2, r3, fp
 80250b8:	1c48      	adds	r0, r1, #1
 80250ba:	fb0c e303 	mla	r3, ip, r3, lr
 80250be:	b292      	uxth	r2, r2
 80250c0:	b29b      	uxth	r3, r3
 80250c2:	eb00 2111 	add.w	r1, r0, r1, lsr #8
 80250c6:	f401 4078 	and.w	r0, r1, #63488	@ 0xf800
 80250ca:	f102 0b01 	add.w	fp, r2, #1
 80250ce:	1c59      	adds	r1, r3, #1
 80250d0:	eb01 2113 	add.w	r1, r1, r3, lsr #8
 80250d4:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80250d8:	f3c1 21c4 	ubfx	r1, r1, #11, #5
 80250dc:	0952      	lsrs	r2, r2, #5
 80250de:	4301      	orrs	r1, r0
 80250e0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80250e4:	4311      	orrs	r1, r2
 80250e6:	f8a8 1000 	strh.w	r1, [r8]
 80250ea:	e739      	b.n	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250ec:	f113 0b01 	adds.w	fp, r3, #1
 80250f0:	f53f af36 	bmi.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250f4:	45dc      	cmp	ip, fp
 80250f6:	f6ff af33 	blt.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 80250fa:	f110 0b01 	adds.w	fp, r0, #1
 80250fe:	f53f af2f 	bmi.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025102:	45de      	cmp	lr, fp
 8025104:	f6ff af2c 	blt.w	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 8025108:	9a08      	ldr	r2, [sp, #32]
 802510a:	9302      	str	r3, [sp, #8]
 802510c:	fa0f f38e 	sxth.w	r3, lr
 8025110:	9301      	str	r3, [sp, #4]
 8025112:	fa0f f38c 	sxth.w	r3, ip
 8025116:	e9cd 0203 	strd	r0, r2, [sp, #12]
 802511a:	9105      	str	r1, [sp, #20]
 802511c:	9300      	str	r3, [sp, #0]
 802511e:	463a      	mov	r2, r7
 8025120:	4653      	mov	r3, sl
 8025122:	4641      	mov	r1, r8
 8025124:	9811      	ldr	r0, [sp, #68]	@ 0x44
 8025126:	f7ff fd73 	bl	8024c10 <_ZNK8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA16writePixelOnEdgeEPtPKtsssiihh>
 802512a:	e719      	b.n	8024f60 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1a4>
 802512c:	9906      	ldr	r1, [sp, #24]
 802512e:	1422      	asrs	r2, r4, #16
 8025130:	1433      	asrs	r3, r6, #16
 8025132:	fb01 2303 	mla	r3, r1, r3, r2
 8025136:	085a      	lsrs	r2, r3, #1
 8025138:	07d9      	lsls	r1, r3, #31
 802513a:	5cba      	ldrb	r2, [r7, r2]
 802513c:	bf54      	ite	pl
 802513e:	f002 020f 	andpl.w	r2, r2, #15
 8025142:	1112      	asrmi	r2, r2, #4
 8025144:	eb02 1202 	add.w	r2, r2, r2, lsl #4
 8025148:	f3c4 3003 	ubfx	r0, r4, #12, #4
 802514c:	f3c6 3c03 	ubfx	ip, r6, #12, #4
 8025150:	b2d2      	uxtb	r2, r2
 8025152:	2800      	cmp	r0, #0
 8025154:	d062      	beq.n	802521c <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x460>
 8025156:	f103 0a01 	add.w	sl, r3, #1
 802515a:	ea4f 015a 	mov.w	r1, sl, lsr #1
 802515e:	f01a 0f01 	tst.w	sl, #1
 8025162:	5c79      	ldrb	r1, [r7, r1]
 8025164:	bf0c      	ite	eq
 8025166:	f001 010f 	andeq.w	r1, r1, #15
 802516a:	1109      	asrne	r1, r1, #4
 802516c:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025170:	b2c9      	uxtb	r1, r1
 8025172:	910f      	str	r1, [sp, #60]	@ 0x3c
 8025174:	f1bc 0f00 	cmp.w	ip, #0
 8025178:	d019      	beq.n	80251ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802517a:	9908      	ldr	r1, [sp, #32]
 802517c:	440b      	add	r3, r1
 802517e:	0859      	lsrs	r1, r3, #1
 8025180:	f013 0f01 	tst.w	r3, #1
 8025184:	5c79      	ldrb	r1, [r7, r1]
 8025186:	bf0c      	ite	eq
 8025188:	f001 010f 	andeq.w	r1, r1, #15
 802518c:	1109      	asrne	r1, r1, #4
 802518e:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025192:	b2c9      	uxtb	r1, r1
 8025194:	3301      	adds	r3, #1
 8025196:	910b      	str	r1, [sp, #44]	@ 0x2c
 8025198:	0859      	lsrs	r1, r3, #1
 802519a:	07db      	lsls	r3, r3, #31
 802519c:	5c79      	ldrb	r1, [r7, r1]
 802519e:	bf54      	ite	pl
 80251a0:	f001 010f 	andpl.w	r1, r1, #15
 80251a4:	1109      	asrmi	r1, r1, #4
 80251a6:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 80251aa:	b2c9      	uxtb	r1, r1
 80251ac:	9110      	str	r1, [sp, #64]	@ 0x40
 80251ae:	b280      	uxth	r0, r0
 80251b0:	fa1f fc8c 	uxth.w	ip, ip
 80251b4:	fb00 f30c 	mul.w	r3, r0, ip
 80251b8:	ebc3 1c0c 	rsb	ip, r3, ip, lsl #4
 80251bc:	0100      	lsls	r0, r0, #4
 80251be:	fa1f fc8c 	uxth.w	ip, ip
 80251c2:	f5c0 7180 	rsb	r1, r0, #256	@ 0x100
 80251c6:	eba1 010c 	sub.w	r1, r1, ip
 80251ca:	fa1f fa81 	uxth.w	sl, r1
 80251ce:	1ac0      	subs	r0, r0, r3
 80251d0:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 80251d2:	b280      	uxth	r0, r0
 80251d4:	4348      	muls	r0, r1
 80251d6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80251d8:	fb02 020a 	mla	r2, r2, sl, r0
 80251dc:	fb0c 2c01 	mla	ip, ip, r1, r2
 80251e0:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 80251e2:	fb03 c302 	mla	r3, r3, r2, ip
 80251e6:	f3c3 2307 	ubfx	r3, r3, #8, #8
 80251ea:	2bff      	cmp	r3, #255	@ 0xff
 80251ec:	d12c      	bne.n	8025248 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x48c>
 80251ee:	4b14      	ldr	r3, [pc, #80]	@ (8025240 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x484>)
 80251f0:	681a      	ldr	r2, [r3, #0]
 80251f2:	4b14      	ldr	r3, [pc, #80]	@ (8025244 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x488>)
 80251f4:	0951      	lsrs	r1, r2, #5
 80251f6:	ea03 2312 	and.w	r3, r3, r2, lsr #8
 80251fa:	f401 61fc 	and.w	r1, r1, #2016	@ 0x7e0
 80251fe:	430b      	orrs	r3, r1
 8025200:	f3c2 02c4 	ubfx	r2, r2, #3, #5
 8025204:	4313      	orrs	r3, r2
 8025206:	f8ae 3000 	strh.w	r3, [lr]
 802520a:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 802520c:	441c      	add	r4, r3
 802520e:	9b20      	ldr	r3, [sp, #128]	@ 0x80
 8025210:	f10e 0e02 	add.w	lr, lr, #2
 8025214:	441e      	add	r6, r3
 8025216:	f108 38ff 	add.w	r8, r8, #4294967295
 802521a:	e6ce      	b.n	8024fba <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x1fe>
 802521c:	f1bc 0f00 	cmp.w	ip, #0
 8025220:	d0c5      	beq.n	80251ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 8025222:	9908      	ldr	r1, [sp, #32]
 8025224:	440b      	add	r3, r1
 8025226:	0859      	lsrs	r1, r3, #1
 8025228:	07db      	lsls	r3, r3, #31
 802522a:	5c79      	ldrb	r1, [r7, r1]
 802522c:	bf54      	ite	pl
 802522e:	f001 010f 	andpl.w	r1, r1, #15
 8025232:	1109      	asrmi	r1, r1, #4
 8025234:	eb01 1101 	add.w	r1, r1, r1, lsl #4
 8025238:	b2c9      	uxtb	r1, r1
 802523a:	910b      	str	r1, [sp, #44]	@ 0x2c
 802523c:	e7b7      	b.n	80251ae <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x3f2>
 802523e:	bf00      	nop
 8025240:	20002f5c 	.word	0x20002f5c
 8025244:	fffff800 	.word	0xfffff800
 8025248:	2b00      	cmp	r3, #0
 802524a:	d0de      	beq.n	802520a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 802524c:	4a21      	ldr	r2, [pc, #132]	@ (80252d4 <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x518>)
 802524e:	f8be c000 	ldrh.w	ip, [lr]
 8025252:	6810      	ldr	r0, [r2, #0]
 8025254:	fa1f fa83 	uxth.w	sl, r3
 8025258:	ea4f 212c 	mov.w	r1, ip, asr #8
 802525c:	f3c0 4207 	ubfx	r2, r0, #16, #8
 8025260:	43db      	mvns	r3, r3
 8025262:	b2db      	uxtb	r3, r3
 8025264:	fb12 f20a 	smulbb	r2, r2, sl
 8025268:	f001 01f8 	and.w	r1, r1, #248	@ 0xf8
 802526c:	fb01 2103 	mla	r1, r1, r3, r2
 8025270:	f3c0 2b07 	ubfx	fp, r0, #8, #8
 8025274:	ea4f 02ec 	mov.w	r2, ip, asr #3
 8025278:	b2c0      	uxtb	r0, r0
 802527a:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 802527e:	fa5f fc8c 	uxtb.w	ip, ip
 8025282:	fb10 f00a 	smulbb	r0, r0, sl
 8025286:	fb0c 0003 	mla	r0, ip, r3, r0
 802528a:	b289      	uxth	r1, r1
 802528c:	fb1b fb0a 	smulbb	fp, fp, sl
 8025290:	b280      	uxth	r0, r0
 8025292:	f002 02fc 	and.w	r2, r2, #252	@ 0xfc
 8025296:	fb02 b203 	mla	r2, r2, r3, fp
 802529a:	1c4b      	adds	r3, r1, #1
 802529c:	f100 0b01 	add.w	fp, r0, #1
 80252a0:	eb03 2111 	add.w	r1, r3, r1, lsr #8
 80252a4:	eb0b 2b10 	add.w	fp, fp, r0, lsr #8
 80252a8:	b292      	uxth	r2, r2
 80252aa:	f3cb 2bc4 	ubfx	fp, fp, #11, #5
 80252ae:	f401 4178 	and.w	r1, r1, #63488	@ 0xf800
 80252b2:	ea4b 0101 	orr.w	r1, fp, r1
 80252b6:	f102 0b01 	add.w	fp, r2, #1
 80252ba:	eb0b 2212 	add.w	r2, fp, r2, lsr #8
 80252be:	0952      	lsrs	r2, r2, #5
 80252c0:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80252c4:	4311      	orrs	r1, r2
 80252c6:	f8ae 1000 	strh.w	r1, [lr]
 80252ca:	e79e      	b.n	802520a <_ZN8touchgfx8LCD16bpp43TextureMapper_A4_BilinearInterpolation_NoGA34drawTextureMapScanLineSubdivisionsEiiiifffllllfffffRKNS_14DrawingSurfaceEiiRKNS_14TextureSurfaceEhfff+0x44e>
 80252cc:	b013      	add	sp, #76	@ 0x4c
 80252ce:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80252d2:	bf00      	nop
 80252d4:	20002f5c 	.word	0x20002f5c

080252d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>:
 80252d8:	b570      	push	{r4, r5, r6, lr}
 80252da:	1208      	asrs	r0, r1, #8
 80252dc:	b29e      	uxth	r6, r3
 80252de:	f8bd 5010 	ldrh.w	r5, [sp, #16]
 80252e2:	1213      	asrs	r3, r2, #8
 80252e4:	f000 00f8 	and.w	r0, r0, #248	@ 0xf8
 80252e8:	f003 03f8 	and.w	r3, r3, #248	@ 0xf8
 80252ec:	fb13 f305 	smulbb	r3, r3, r5
 80252f0:	fb10 f006 	smulbb	r0, r0, r6
 80252f4:	4418      	add	r0, r3
 80252f6:	10cc      	asrs	r4, r1, #3
 80252f8:	10d3      	asrs	r3, r2, #3
 80252fa:	f004 04fc 	and.w	r4, r4, #252	@ 0xfc
 80252fe:	f003 03fc 	and.w	r3, r3, #252	@ 0xfc
 8025302:	fb13 f305 	smulbb	r3, r3, r5
 8025306:	fb14 f406 	smulbb	r4, r4, r6
 802530a:	00c9      	lsls	r1, r1, #3
 802530c:	00d2      	lsls	r2, r2, #3
 802530e:	441c      	add	r4, r3
 8025310:	b2d2      	uxtb	r2, r2
 8025312:	b2cb      	uxtb	r3, r1
 8025314:	fb12 f205 	smulbb	r2, r2, r5
 8025318:	b280      	uxth	r0, r0
 802531a:	fb13 f306 	smulbb	r3, r3, r6
 802531e:	4413      	add	r3, r2
 8025320:	1c42      	adds	r2, r0, #1
 8025322:	b29b      	uxth	r3, r3
 8025324:	eb02 2010 	add.w	r0, r2, r0, lsr #8
 8025328:	f400 4278 	and.w	r2, r0, #63488	@ 0xf800
 802532c:	1c58      	adds	r0, r3, #1
 802532e:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 8025332:	b2a4      	uxth	r4, r4
 8025334:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 8025338:	4310      	orrs	r0, r2
 802533a:	1c62      	adds	r2, r4, #1
 802533c:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 8025340:	0964      	lsrs	r4, r4, #5
 8025342:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025346:	4320      	orrs	r0, r4
 8025348:	bd70      	pop	{r4, r5, r6, pc}
	...

0802534c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h>:
 802534c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025350:	b08f      	sub	sp, #60	@ 0x3c
 8025352:	461c      	mov	r4, r3
 8025354:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 8025358:	9004      	str	r0, [sp, #16]
 802535a:	460d      	mov	r5, r1
 802535c:	4616      	mov	r6, r2
 802535e:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 8025360:	2f00      	cmp	r7, #0
 8025362:	f000 80f6 	beq.w	8025552 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x206>
 8025366:	6820      	ldr	r0, [r4, #0]
 8025368:	6861      	ldr	r1, [r4, #4]
 802536a:	aa0a      	add	r2, sp, #40	@ 0x28
 802536c:	c203      	stmia	r2!, {r0, r1}
 802536e:	6818      	ldr	r0, [r3, #0]
 8025370:	6859      	ldr	r1, [r3, #4]
 8025372:	aa0c      	add	r2, sp, #48	@ 0x30
 8025374:	c203      	stmia	r2!, {r0, r1}
 8025376:	a80a      	add	r0, sp, #40	@ 0x28
 8025378:	f7ee fdd4 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 802537c:	4621      	mov	r1, r4
 802537e:	a80c      	add	r0, sp, #48	@ 0x30
 8025380:	f7ee fdf8 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025384:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 8025388:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 802538c:	f9bd 9034 	ldrsh.w	r9, [sp, #52]	@ 0x34
 8025390:	f002 0301 	and.w	r3, r2, #1
 8025394:	9306      	str	r3, [sp, #24]
 8025396:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802539a:	f003 0101 	and.w	r1, r3, #1
 802539e:	9105      	str	r1, [sp, #20]
 80253a0:	9805      	ldr	r0, [sp, #20]
 80253a2:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 80253a6:	4403      	add	r3, r0
 80253a8:	fb01 2303 	mla	r3, r1, r3, r2
 80253ac:	f04f 0802 	mov.w	r8, #2
 80253b0:	fb93 f3f8 	sdiv	r3, r3, r8
 80253b4:	441d      	add	r5, r3
 80253b6:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 80253ba:	441a      	add	r2, r3
 80253bc:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 80253c0:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 80253c4:	4419      	add	r1, r3
 80253c6:	4b64      	ldr	r3, [pc, #400]	@ (8025558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 80253c8:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 80253cc:	6818      	ldr	r0, [r3, #0]
 80253ce:	6803      	ldr	r3, [r0, #0]
 80253d0:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 80253d2:	4798      	blx	r3
 80253d4:	4a61      	ldr	r2, [pc, #388]	@ (802555c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x210>)
 80253d6:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 80253da:	8813      	ldrh	r3, [r2, #0]
 80253dc:	f9bd a030 	ldrsh.w	sl, [sp, #48]	@ 0x30
 80253e0:	2fff      	cmp	r7, #255	@ 0xff
 80253e2:	fb03 a404 	mla	r4, r3, r4, sl
 80253e6:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80253ea:	f106 0604 	add.w	r6, r6, #4
 80253ee:	4611      	mov	r1, r2
 80253f0:	fb03 fb0b 	mul.w	fp, r3, fp
 80253f4:	d06b      	beq.n	80254ce <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x182>
 80253f6:	f1c7 03ff 	rsb	r3, r7, #255	@ 0xff
 80253fa:	9303      	str	r3, [sp, #12]
 80253fc:	eb04 034b 	add.w	r3, r4, fp, lsl #1
 8025400:	e9cd 3207 	strd	r3, r2, [sp, #28]
 8025404:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 8025408:	9b07      	ldr	r3, [sp, #28]
 802540a:	42a3      	cmp	r3, r4
 802540c:	f240 809c 	bls.w	8025548 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 8025410:	9b06      	ldr	r3, [sp, #24]
 8025412:	2b00      	cmp	r3, #0
 8025414:	d039      	beq.n	802548a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x13e>
 8025416:	782b      	ldrb	r3, [r5, #0]
 8025418:	8822      	ldrh	r2, [r4, #0]
 802541a:	9804      	ldr	r0, [sp, #16]
 802541c:	f003 030f 	and.w	r3, r3, #15
 8025420:	f105 0801 	add.w	r8, r5, #1
 8025424:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 8025428:	9b03      	ldr	r3, [sp, #12]
 802542a:	9300      	str	r3, [sp, #0]
 802542c:	463b      	mov	r3, r7
 802542e:	f7ff ff53 	bl	80252d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025432:	f824 0b02 	strh.w	r0, [r4], #2
 8025436:	f109 3bff 	add.w	fp, r9, #4294967295
 802543a:	f1bb 0f01 	cmp.w	fp, #1
 802543e:	46a2      	mov	sl, r4
 8025440:	f104 0404 	add.w	r4, r4, #4
 8025444:	dd24      	ble.n	8025490 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x144>
 8025446:	f898 3000 	ldrb.w	r3, [r8]
 802544a:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 802544e:	9804      	ldr	r0, [sp, #16]
 8025450:	091b      	lsrs	r3, r3, #4
 8025452:	f1ab 0b02 	sub.w	fp, fp, #2
 8025456:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802545a:	9b03      	ldr	r3, [sp, #12]
 802545c:	9300      	str	r3, [sp, #0]
 802545e:	463b      	mov	r3, r7
 8025460:	f7ff ff3a 	bl	80252d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025464:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025468:	f818 3b01 	ldrb.w	r3, [r8], #1
 802546c:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 8025470:	9804      	ldr	r0, [sp, #16]
 8025472:	f003 030f 	and.w	r3, r3, #15
 8025476:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 802547a:	9b03      	ldr	r3, [sp, #12]
 802547c:	9300      	str	r3, [sp, #0]
 802547e:	463b      	mov	r3, r7
 8025480:	f7ff ff2a 	bl	80252d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 8025484:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025488:	e7d7      	b.n	802543a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 802548a:	46a8      	mov	r8, r5
 802548c:	46cb      	mov	fp, r9
 802548e:	e7d4      	b.n	802543a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xee>
 8025490:	d10e      	bne.n	80254b0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x164>
 8025492:	f898 3000 	ldrb.w	r3, [r8]
 8025496:	f8ba 2000 	ldrh.w	r2, [sl]
 802549a:	9804      	ldr	r0, [sp, #16]
 802549c:	091b      	lsrs	r3, r3, #4
 802549e:	f836 1013 	ldrh.w	r1, [r6, r3, lsl #1]
 80254a2:	9b03      	ldr	r3, [sp, #12]
 80254a4:	9300      	str	r3, [sp, #0]
 80254a6:	463b      	mov	r3, r7
 80254a8:	f7ff ff16 	bl	80252d8 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB565Ettii>
 80254ac:	f82a 0b02 	strh.w	r0, [sl], #2
 80254b0:	9b08      	ldr	r3, [sp, #32]
 80254b2:	9a05      	ldr	r2, [sp, #20]
 80254b4:	881c      	ldrh	r4, [r3, #0]
 80254b6:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 80254ba:	eba4 0409 	sub.w	r4, r4, r9
 80254be:	4413      	add	r3, r2
 80254c0:	eb0a 0444 	add.w	r4, sl, r4, lsl #1
 80254c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80254c6:	fb93 f3f2 	sdiv	r3, r3, r2
 80254ca:	441d      	add	r5, r3
 80254cc:	e79c      	b.n	8025408 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0xbc>
 80254ce:	eb04 0b4b 	add.w	fp, r4, fp, lsl #1
 80254d2:	45a3      	cmp	fp, r4
 80254d4:	d938      	bls.n	8025548 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1fc>
 80254d6:	9b06      	ldr	r3, [sp, #24]
 80254d8:	b1f3      	cbz	r3, 8025518 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1cc>
 80254da:	782b      	ldrb	r3, [r5, #0]
 80254dc:	f003 030f 	and.w	r3, r3, #15
 80254e0:	1c6a      	adds	r2, r5, #1
 80254e2:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 80254e6:	8023      	strh	r3, [r4, #0]
 80254e8:	f109 30ff 	add.w	r0, r9, #4294967295
 80254ec:	3402      	adds	r4, #2
 80254ee:	2801      	cmp	r0, #1
 80254f0:	4623      	mov	r3, r4
 80254f2:	f104 0404 	add.w	r4, r4, #4
 80254f6:	dd12      	ble.n	802551e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1d2>
 80254f8:	7813      	ldrb	r3, [r2, #0]
 80254fa:	091b      	lsrs	r3, r3, #4
 80254fc:	3802      	subs	r0, #2
 80254fe:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025502:	f824 3c04 	strh.w	r3, [r4, #-4]
 8025506:	f812 3b01 	ldrb.w	r3, [r2], #1
 802550a:	f003 030f 	and.w	r3, r3, #15
 802550e:	f836 3013 	ldrh.w	r3, [r6, r3, lsl #1]
 8025512:	f824 3c02 	strh.w	r3, [r4, #-2]
 8025516:	e7ea      	b.n	80254ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 8025518:	462a      	mov	r2, r5
 802551a:	4648      	mov	r0, r9
 802551c:	e7e7      	b.n	80254ee <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1a2>
 802551e:	d106      	bne.n	802552e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x1e2>
 8025520:	7812      	ldrb	r2, [r2, #0]
 8025522:	0912      	lsrs	r2, r2, #4
 8025524:	3302      	adds	r3, #2
 8025526:	f836 2012 	ldrh.w	r2, [r6, r2, lsl #1]
 802552a:	f823 2c02 	strh.w	r2, [r3, #-2]
 802552e:	880c      	ldrh	r4, [r1, #0]
 8025530:	9a05      	ldr	r2, [sp, #20]
 8025532:	eba4 0409 	sub.w	r4, r4, r9
 8025536:	eb03 0444 	add.w	r4, r3, r4, lsl #1
 802553a:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802553e:	4413      	add	r3, r2
 8025540:	fb93 f3f8 	sdiv	r3, r3, r8
 8025544:	441d      	add	r5, r3
 8025546:	e7c4      	b.n	80254d2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x186>
 8025548:	4b03      	ldr	r3, [pc, #12]	@ (8025558 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB565EPKhS3_RKNS_4RectES6_h+0x20c>)
 802554a:	6818      	ldr	r0, [r3, #0]
 802554c:	6803      	ldr	r3, [r0, #0]
 802554e:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025550:	4798      	blx	r3
 8025552:	b00f      	add	sp, #60	@ 0x3c
 8025554:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025558:	20002f54 	.word	0x20002f54
 802555c:	20002f4e 	.word	0x20002f4e

08025560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>:
 8025560:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025562:	f89d 5014 	ldrb.w	r5, [sp, #20]
 8025566:	2dff      	cmp	r5, #255	@ 0xff
 8025568:	ea4f 2711 	mov.w	r7, r1, lsr #8
 802556c:	d10c      	bne.n	8025588 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 802556e:	2bff      	cmp	r3, #255	@ 0xff
 8025570:	d10a      	bne.n	8025588 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x28>
 8025572:	4b25      	ldr	r3, [pc, #148]	@ (8025608 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0xa8>)
 8025574:	0948      	lsrs	r0, r1, #5
 8025576:	f400 60fc 	and.w	r0, r0, #2016	@ 0x7e0
 802557a:	403b      	ands	r3, r7
 802557c:	4318      	orrs	r0, r3
 802557e:	f3c1 01c4 	ubfx	r1, r1, #3, #5
 8025582:	4308      	orrs	r0, r1
 8025584:	b280      	uxth	r0, r0
 8025586:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025588:	fb15 f503 	smulbb	r5, r5, r3
 802558c:	b2ab      	uxth	r3, r5
 802558e:	1c5d      	adds	r5, r3, #1
 8025590:	eb05 2513 	add.w	r5, r5, r3, lsr #8
 8025594:	1214      	asrs	r4, r2, #8
 8025596:	f3c5 2507 	ubfx	r5, r5, #8, #8
 802559a:	fa1f fc85 	uxth.w	ip, r5
 802559e:	10d6      	asrs	r6, r2, #3
 80255a0:	00d0      	lsls	r0, r2, #3
 80255a2:	43ed      	mvns	r5, r5
 80255a4:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 80255a8:	f3c1 4207 	ubfx	r2, r1, #16, #8
 80255ac:	b2eb      	uxtb	r3, r5
 80255ae:	b2c0      	uxtb	r0, r0
 80255b0:	fb12 f20c 	smulbb	r2, r2, ip
 80255b4:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 80255b8:	fb04 2403 	mla	r4, r4, r3, r2
 80255bc:	ea40 1250 	orr.w	r2, r0, r0, lsr #5
 80255c0:	b2c8      	uxtb	r0, r1
 80255c2:	f006 06fc 	and.w	r6, r6, #252	@ 0xfc
 80255c6:	b2fd      	uxtb	r5, r7
 80255c8:	fb10 f00c 	smulbb	r0, r0, ip
 80255cc:	b2a4      	uxth	r4, r4
 80255ce:	fb02 0003 	mla	r0, r2, r3, r0
 80255d2:	ea46 1696 	orr.w	r6, r6, r6, lsr #6
 80255d6:	fb15 f50c 	smulbb	r5, r5, ip
 80255da:	fb06 5503 	mla	r5, r6, r3, r5
 80255de:	b283      	uxth	r3, r0
 80255e0:	1c60      	adds	r0, r4, #1
 80255e2:	b2ad      	uxth	r5, r5
 80255e4:	eb00 2414 	add.w	r4, r0, r4, lsr #8
 80255e8:	1c58      	adds	r0, r3, #1
 80255ea:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80255ee:	1c6b      	adds	r3, r5, #1
 80255f0:	eb03 2515 	add.w	r5, r3, r5, lsr #8
 80255f4:	f404 4478 	and.w	r4, r4, #63488	@ 0xf800
 80255f8:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80255fc:	096d      	lsrs	r5, r5, #5
 80255fe:	4320      	orrs	r0, r4
 8025600:	f405 65fc 	and.w	r5, r5, #2016	@ 0x7e0
 8025604:	4328      	orrs	r0, r5
 8025606:	e7be      	b.n	8025586 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih+0x26>
 8025608:	00fff800 	.word	0x00fff800

0802560c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h>:
 802560c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8025610:	461c      	mov	r4, r3
 8025612:	b08d      	sub	sp, #52	@ 0x34
 8025614:	460d      	mov	r5, r1
 8025616:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8025618:	6861      	ldr	r1, [r4, #4]
 802561a:	f89d 905c 	ldrb.w	r9, [sp, #92]	@ 0x5c
 802561e:	4680      	mov	r8, r0
 8025620:	6820      	ldr	r0, [r4, #0]
 8025622:	4616      	mov	r6, r2
 8025624:	aa08      	add	r2, sp, #32
 8025626:	c203      	stmia	r2!, {r0, r1}
 8025628:	6818      	ldr	r0, [r3, #0]
 802562a:	6859      	ldr	r1, [r3, #4]
 802562c:	aa0a      	add	r2, sp, #40	@ 0x28
 802562e:	c203      	stmia	r2!, {r0, r1}
 8025630:	a808      	add	r0, sp, #32
 8025632:	f7ee fc77 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025636:	4621      	mov	r1, r4
 8025638:	a80a      	add	r0, sp, #40	@ 0x28
 802563a:	f7ee fc9b 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 802563e:	f9bd 2028 	ldrsh.w	r2, [sp, #40]	@ 0x28
 8025642:	f9bd 702e 	ldrsh.w	r7, [sp, #46]	@ 0x2e
 8025646:	f9bd b02c 	ldrsh.w	fp, [sp, #44]	@ 0x2c
 802564a:	f002 0301 	and.w	r3, r2, #1
 802564e:	9303      	str	r3, [sp, #12]
 8025650:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 8025654:	f003 0101 	and.w	r1, r3, #1
 8025658:	9102      	str	r1, [sp, #8]
 802565a:	9802      	ldr	r0, [sp, #8]
 802565c:	f9bd 102a 	ldrsh.w	r1, [sp, #42]	@ 0x2a
 8025660:	4403      	add	r3, r0
 8025662:	fb01 2303 	mla	r3, r1, r3, r2
 8025666:	f04f 0a02 	mov.w	sl, #2
 802566a:	fb93 f3fa 	sdiv	r3, r3, sl
 802566e:	441d      	add	r5, r3
 8025670:	f8bd 3020 	ldrh.w	r3, [sp, #32]
 8025674:	441a      	add	r2, r3
 8025676:	f8ad 2028 	strh.w	r2, [sp, #40]	@ 0x28
 802567a:	f8bd 3022 	ldrh.w	r3, [sp, #34]	@ 0x22
 802567e:	4a3f      	ldr	r2, [pc, #252]	@ (802577c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x170>)
 8025680:	9205      	str	r2, [sp, #20]
 8025682:	4419      	add	r1, r3
 8025684:	6810      	ldr	r0, [r2, #0]
 8025686:	f8ad 102a 	strh.w	r1, [sp, #42]	@ 0x2a
 802568a:	6803      	ldr	r3, [r0, #0]
 802568c:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 802568e:	4798      	blx	r3
 8025690:	4b3b      	ldr	r3, [pc, #236]	@ (8025780 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x174>)
 8025692:	f9bd 402a 	ldrsh.w	r4, [sp, #42]	@ 0x2a
 8025696:	8819      	ldrh	r1, [r3, #0]
 8025698:	f9bd c028 	ldrsh.w	ip, [sp, #40]	@ 0x28
 802569c:	fb01 c404 	mla	r4, r1, r4, ip
 80256a0:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 80256a4:	434f      	muls	r7, r1
 80256a6:	e9cd 3a06 	strd	r3, sl, [sp, #24]
 80256aa:	eb04 0247 	add.w	r2, r4, r7, lsl #1
 80256ae:	3604      	adds	r6, #4
 80256b0:	9204      	str	r2, [sp, #16]
 80256b2:	9b04      	ldr	r3, [sp, #16]
 80256b4:	429c      	cmp	r4, r3
 80256b6:	d258      	bcs.n	802576a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x15e>
 80256b8:	9b03      	ldr	r3, [sp, #12]
 80256ba:	2b00      	cmp	r3, #0
 80256bc:	d034      	beq.n	8025728 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x11c>
 80256be:	782b      	ldrb	r3, [r5, #0]
 80256c0:	f003 030f 	and.w	r3, r3, #15
 80256c4:	1c6f      	adds	r7, r5, #1
 80256c6:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256ca:	0e0b      	lsrs	r3, r1, #24
 80256cc:	d006      	beq.n	80256dc <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd0>
 80256ce:	8822      	ldrh	r2, [r4, #0]
 80256d0:	9300      	str	r3, [sp, #0]
 80256d2:	4640      	mov	r0, r8
 80256d4:	464b      	mov	r3, r9
 80256d6:	f7ff ff43 	bl	8025560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 80256da:	8020      	strh	r0, [r4, #0]
 80256dc:	3402      	adds	r4, #2
 80256de:	f10b 3aff 	add.w	sl, fp, #4294967295
 80256e2:	f1ba 0f01 	cmp.w	sl, #1
 80256e6:	dd22      	ble.n	802572e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x122>
 80256e8:	783b      	ldrb	r3, [r7, #0]
 80256ea:	091b      	lsrs	r3, r3, #4
 80256ec:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 80256f0:	0e0b      	lsrs	r3, r1, #24
 80256f2:	d006      	beq.n	8025702 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xf6>
 80256f4:	8822      	ldrh	r2, [r4, #0]
 80256f6:	9300      	str	r3, [sp, #0]
 80256f8:	4640      	mov	r0, r8
 80256fa:	464b      	mov	r3, r9
 80256fc:	f7ff ff30 	bl	8025560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025700:	8020      	strh	r0, [r4, #0]
 8025702:	f817 3b01 	ldrb.w	r3, [r7], #1
 8025706:	f003 030f 	and.w	r3, r3, #15
 802570a:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 802570e:	0e0b      	lsrs	r3, r1, #24
 8025710:	d006      	beq.n	8025720 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x114>
 8025712:	8862      	ldrh	r2, [r4, #2]
 8025714:	9300      	str	r3, [sp, #0]
 8025716:	4640      	mov	r0, r8
 8025718:	464b      	mov	r3, r9
 802571a:	f7ff ff21 	bl	8025560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 802571e:	8060      	strh	r0, [r4, #2]
 8025720:	3404      	adds	r4, #4
 8025722:	f1aa 0a02 	sub.w	sl, sl, #2
 8025726:	e7dc      	b.n	80256e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 8025728:	462f      	mov	r7, r5
 802572a:	46da      	mov	sl, fp
 802572c:	e7d9      	b.n	80256e2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xd6>
 802572e:	d10d      	bne.n	802574c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x140>
 8025730:	783b      	ldrb	r3, [r7, #0]
 8025732:	091b      	lsrs	r3, r3, #4
 8025734:	f856 1023 	ldr.w	r1, [r6, r3, lsl #2]
 8025738:	0e0b      	lsrs	r3, r1, #24
 802573a:	d006      	beq.n	802574a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0x13e>
 802573c:	8822      	ldrh	r2, [r4, #0]
 802573e:	9300      	str	r3, [sp, #0]
 8025740:	4640      	mov	r0, r8
 8025742:	464b      	mov	r3, r9
 8025744:	f7ff ff0c 	bl	8025560 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L418blendPixelARGB8888Emtih>
 8025748:	8020      	strh	r0, [r4, #0]
 802574a:	3402      	adds	r4, #2
 802574c:	9b06      	ldr	r3, [sp, #24]
 802574e:	9a02      	ldr	r2, [sp, #8]
 8025750:	881b      	ldrh	r3, [r3, #0]
 8025752:	eba3 030b 	sub.w	r3, r3, fp
 8025756:	eb04 0443 	add.w	r4, r4, r3, lsl #1
 802575a:	f9bd 3024 	ldrsh.w	r3, [sp, #36]	@ 0x24
 802575e:	4413      	add	r3, r2
 8025760:	9a07      	ldr	r2, [sp, #28]
 8025762:	fb93 f3f2 	sdiv	r3, r3, r2
 8025766:	441d      	add	r5, r3
 8025768:	e7a3      	b.n	80256b2 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L416blitCopyARGB8888EPKhS3_RKNS_4RectES6_h+0xa6>
 802576a:	9b05      	ldr	r3, [sp, #20]
 802576c:	6818      	ldr	r0, [r3, #0]
 802576e:	6803      	ldr	r3, [r0, #0]
 8025770:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025772:	4798      	blx	r3
 8025774:	b00d      	add	sp, #52	@ 0x34
 8025776:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802577a:	bf00      	nop
 802577c:	20002f54 	.word	0x20002f54
 8025780:	20002f4e 	.word	0x20002f4e

08025784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>:
 8025784:	b570      	push	{r4, r5, r6, lr}
 8025786:	1214      	asrs	r4, r2, #8
 8025788:	788d      	ldrb	r5, [r1, #2]
 802578a:	f89d 6010 	ldrb.w	r6, [sp, #16]
 802578e:	f004 04f8 	and.w	r4, r4, #248	@ 0xf8
 8025792:	ea44 1454 	orr.w	r4, r4, r4, lsr #5
 8025796:	fb15 f503 	smulbb	r5, r5, r3
 802579a:	fb04 5506 	mla	r5, r4, r6, r5
 802579e:	10d0      	asrs	r0, r2, #3
 80257a0:	784c      	ldrb	r4, [r1, #1]
 80257a2:	7809      	ldrb	r1, [r1, #0]
 80257a4:	00d2      	lsls	r2, r2, #3
 80257a6:	f000 00fc 	and.w	r0, r0, #252	@ 0xfc
 80257aa:	b2d2      	uxtb	r2, r2
 80257ac:	ea40 1090 	orr.w	r0, r0, r0, lsr #6
 80257b0:	fb14 f403 	smulbb	r4, r4, r3
 80257b4:	ea42 1252 	orr.w	r2, r2, r2, lsr #5
 80257b8:	fb11 f303 	smulbb	r3, r1, r3
 80257bc:	fb00 4406 	mla	r4, r0, r6, r4
 80257c0:	fb02 3306 	mla	r3, r2, r6, r3
 80257c4:	b2ad      	uxth	r5, r5
 80257c6:	b29b      	uxth	r3, r3
 80257c8:	b2a4      	uxth	r4, r4
 80257ca:	1c68      	adds	r0, r5, #1
 80257cc:	eb00 2515 	add.w	r5, r0, r5, lsr #8
 80257d0:	1c62      	adds	r2, r4, #1
 80257d2:	1c58      	adds	r0, r3, #1
 80257d4:	eb00 2013 	add.w	r0, r0, r3, lsr #8
 80257d8:	eb02 2414 	add.w	r4, r2, r4, lsr #8
 80257dc:	f405 4578 	and.w	r5, r5, #63488	@ 0xf800
 80257e0:	f3c0 20c4 	ubfx	r0, r0, #11, #5
 80257e4:	0964      	lsrs	r4, r4, #5
 80257e6:	4328      	orrs	r0, r5
 80257e8:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 80257ec:	4320      	orrs	r0, r4
 80257ee:	bd70      	pop	{r4, r5, r6, pc}

080257f0 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h>:
 80257f0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80257f4:	b08f      	sub	sp, #60	@ 0x3c
 80257f6:	461c      	mov	r4, r3
 80257f8:	f89d 7064 	ldrb.w	r7, [sp, #100]	@ 0x64
 80257fc:	9b18      	ldr	r3, [sp, #96]	@ 0x60
 80257fe:	4682      	mov	sl, r0
 8025800:	460e      	mov	r6, r1
 8025802:	4615      	mov	r5, r2
 8025804:	2f00      	cmp	r7, #0
 8025806:	f000 8142 	beq.w	8025a8e <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x29e>
 802580a:	6820      	ldr	r0, [r4, #0]
 802580c:	6861      	ldr	r1, [r4, #4]
 802580e:	aa0a      	add	r2, sp, #40	@ 0x28
 8025810:	c203      	stmia	r2!, {r0, r1}
 8025812:	6818      	ldr	r0, [r3, #0]
 8025814:	6859      	ldr	r1, [r3, #4]
 8025816:	aa0c      	add	r2, sp, #48	@ 0x30
 8025818:	c203      	stmia	r2!, {r0, r1}
 802581a:	a80a      	add	r0, sp, #40	@ 0x28
 802581c:	f7ee fb82 	bl	8013f24 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE>
 8025820:	4621      	mov	r1, r4
 8025822:	a80c      	add	r0, sp, #48	@ 0x30
 8025824:	f7ee fba6 	bl	8013f74 <_ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_>
 8025828:	f9bd 2030 	ldrsh.w	r2, [sp, #48]	@ 0x30
 802582c:	f9bd b036 	ldrsh.w	fp, [sp, #54]	@ 0x36
 8025830:	f002 0301 	and.w	r3, r2, #1
 8025834:	9306      	str	r3, [sp, #24]
 8025836:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 802583a:	f003 0101 	and.w	r1, r3, #1
 802583e:	9105      	str	r1, [sp, #20]
 8025840:	9805      	ldr	r0, [sp, #20]
 8025842:	f9bd 1032 	ldrsh.w	r1, [sp, #50]	@ 0x32
 8025846:	4403      	add	r3, r0
 8025848:	fb01 2303 	mla	r3, r1, r3, r2
 802584c:	f04f 0802 	mov.w	r8, #2
 8025850:	fb93 f3f8 	sdiv	r3, r3, r8
 8025854:	441e      	add	r6, r3
 8025856:	f8bd 3028 	ldrh.w	r3, [sp, #40]	@ 0x28
 802585a:	441a      	add	r2, r3
 802585c:	f8bd 302a 	ldrh.w	r3, [sp, #42]	@ 0x2a
 8025860:	f8ad 2030 	strh.w	r2, [sp, #48]	@ 0x30
 8025864:	4419      	add	r1, r3
 8025866:	f9bd 3034 	ldrsh.w	r3, [sp, #52]	@ 0x34
 802586a:	9303      	str	r3, [sp, #12]
 802586c:	4b89      	ldr	r3, [pc, #548]	@ (8025a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 802586e:	f8ad 1032 	strh.w	r1, [sp, #50]	@ 0x32
 8025872:	6818      	ldr	r0, [r3, #0]
 8025874:	6803      	ldr	r3, [r0, #0]
 8025876:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8025878:	4798      	blx	r3
 802587a:	4a87      	ldr	r2, [pc, #540]	@ (8025a98 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a8>)
 802587c:	f9bd 4032 	ldrsh.w	r4, [sp, #50]	@ 0x32
 8025880:	8813      	ldrh	r3, [r2, #0]
 8025882:	f9bd 9030 	ldrsh.w	r9, [sp, #48]	@ 0x30
 8025886:	2fff      	cmp	r7, #255	@ 0xff
 8025888:	fb03 9404 	mla	r4, r3, r4, r9
 802588c:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025890:	f105 0504 	add.w	r5, r5, #4
 8025894:	4694      	mov	ip, r2
 8025896:	fb03 f30b 	mul.w	r3, r3, fp
 802589a:	d071      	beq.n	8025980 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x190>
 802589c:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 80258a0:	43f9      	mvns	r1, r7
 80258a2:	e9cd 3207 	strd	r3, r2, [sp, #28]
 80258a6:	b2c9      	uxtb	r1, r1
 80258a8:	9104      	str	r1, [sp, #16]
 80258aa:	f8cd 8024 	str.w	r8, [sp, #36]	@ 0x24
 80258ae:	9b07      	ldr	r3, [sp, #28]
 80258b0:	42a3      	cmp	r3, r4
 80258b2:	f240 80e7 	bls.w	8025a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 80258b6:	9b06      	ldr	r3, [sp, #24]
 80258b8:	2b00      	cmp	r3, #0
 80258ba:	d03d      	beq.n	8025938 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x148>
 80258bc:	7831      	ldrb	r1, [r6, #0]
 80258be:	9b04      	ldr	r3, [sp, #16]
 80258c0:	8822      	ldrh	r2, [r4, #0]
 80258c2:	9300      	str	r3, [sp, #0]
 80258c4:	f001 010f 	and.w	r1, r1, #15
 80258c8:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 80258cc:	463b      	mov	r3, r7
 80258ce:	4429      	add	r1, r5
 80258d0:	4650      	mov	r0, sl
 80258d2:	f7ff ff57 	bl	8025784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 80258d6:	9b03      	ldr	r3, [sp, #12]
 80258d8:	f824 0b02 	strh.w	r0, [r4], #2
 80258dc:	f106 0801 	add.w	r8, r6, #1
 80258e0:	f103 3bff 	add.w	fp, r3, #4294967295
 80258e4:	f1bb 0f01 	cmp.w	fp, #1
 80258e8:	46a1      	mov	r9, r4
 80258ea:	f104 0404 	add.w	r4, r4, #4
 80258ee:	dd27      	ble.n	8025940 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x150>
 80258f0:	f898 1000 	ldrb.w	r1, [r8]
 80258f4:	9b04      	ldr	r3, [sp, #16]
 80258f6:	f834 2c04 	ldrh.w	r2, [r4, #-4]
 80258fa:	9300      	str	r3, [sp, #0]
 80258fc:	0909      	lsrs	r1, r1, #4
 80258fe:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025902:	463b      	mov	r3, r7
 8025904:	4429      	add	r1, r5
 8025906:	4650      	mov	r0, sl
 8025908:	f7ff ff3c 	bl	8025784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802590c:	f824 0c04 	strh.w	r0, [r4, #-4]
 8025910:	f818 1b01 	ldrb.w	r1, [r8], #1
 8025914:	9b04      	ldr	r3, [sp, #16]
 8025916:	f834 2c02 	ldrh.w	r2, [r4, #-2]
 802591a:	9300      	str	r3, [sp, #0]
 802591c:	f001 010f 	and.w	r1, r1, #15
 8025920:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025924:	463b      	mov	r3, r7
 8025926:	4429      	add	r1, r5
 8025928:	4650      	mov	r0, sl
 802592a:	f7ff ff2b 	bl	8025784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802592e:	f1ab 0b02 	sub.w	fp, fp, #2
 8025932:	f824 0c02 	strh.w	r0, [r4, #-2]
 8025936:	e7d5      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025938:	46b0      	mov	r8, r6
 802593a:	f8dd b00c 	ldr.w	fp, [sp, #12]
 802593e:	e7d1      	b.n	80258e4 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xf4>
 8025940:	d10f      	bne.n	8025962 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x172>
 8025942:	f898 1000 	ldrb.w	r1, [r8]
 8025946:	9b04      	ldr	r3, [sp, #16]
 8025948:	f8b9 2000 	ldrh.w	r2, [r9]
 802594c:	9300      	str	r3, [sp, #0]
 802594e:	0909      	lsrs	r1, r1, #4
 8025950:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025954:	463b      	mov	r3, r7
 8025956:	4429      	add	r1, r5
 8025958:	4650      	mov	r0, sl
 802595a:	f7ff ff13 	bl	8025784 <_ZNK8touchgfx8LCD16bpp17DecompressorL8_L416blendPixelRGB888EPKhthh>
 802595e:	f829 0b02 	strh.w	r0, [r9], #2
 8025962:	9b08      	ldr	r3, [sp, #32]
 8025964:	9a05      	ldr	r2, [sp, #20]
 8025966:	881c      	ldrh	r4, [r3, #0]
 8025968:	9b03      	ldr	r3, [sp, #12]
 802596a:	1ae4      	subs	r4, r4, r3
 802596c:	f9bd 302c 	ldrsh.w	r3, [sp, #44]	@ 0x2c
 8025970:	eb09 0444 	add.w	r4, r9, r4, lsl #1
 8025974:	4413      	add	r3, r2
 8025976:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8025978:	fb93 f3f2 	sdiv	r3, r3, r2
 802597c:	441e      	add	r6, r3
 802597e:	e796      	b.n	80258ae <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0xbe>
 8025980:	4f46      	ldr	r7, [pc, #280]	@ (8025a9c <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2ac>)
 8025982:	eb04 0343 	add.w	r3, r4, r3, lsl #1
 8025986:	42a3      	cmp	r3, r4
 8025988:	d97c      	bls.n	8025a84 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x294>
 802598a:	9a06      	ldr	r2, [sp, #24]
 802598c:	2a00      	cmp	r2, #0
 802598e:	d054      	beq.n	8025a3a <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x24a>
 8025990:	7830      	ldrb	r0, [r6, #0]
 8025992:	f000 000f 	and.w	r0, r0, #15
 8025996:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 802599a:	eb05 0e00 	add.w	lr, r5, r0
 802599e:	5c28      	ldrb	r0, [r5, r0]
 80259a0:	f89e 2002 	ldrb.w	r2, [lr, #2]
 80259a4:	f89e e001 	ldrb.w	lr, [lr, #1]
 80259a8:	ea4f 0ece 	mov.w	lr, lr, lsl #3
 80259ac:	f40e 6efc 	and.w	lr, lr, #2016	@ 0x7e0
 80259b0:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 80259b4:	ea42 020e 	orr.w	r2, r2, lr
 80259b8:	ea42 02d0 	orr.w	r2, r2, r0, lsr #3
 80259bc:	f824 2b02 	strh.w	r2, [r4], #2
 80259c0:	9a03      	ldr	r2, [sp, #12]
 80259c2:	1c71      	adds	r1, r6, #1
 80259c4:	f102 3eff 	add.w	lr, r2, #4294967295
 80259c8:	f1be 0f01 	cmp.w	lr, #1
 80259cc:	4620      	mov	r0, r4
 80259ce:	f104 0404 	add.w	r4, r4, #4
 80259d2:	dd36      	ble.n	8025a42 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x252>
 80259d4:	7808      	ldrb	r0, [r1, #0]
 80259d6:	0900      	lsrs	r0, r0, #4
 80259d8:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 80259dc:	eb05 0a00 	add.w	sl, r5, r0
 80259e0:	f1ae 0e02 	sub.w	lr, lr, #2
 80259e4:	f89a 2001 	ldrb.w	r2, [sl, #1]
 80259e8:	f89a 9002 	ldrb.w	r9, [sl, #2]
 80259ec:	00d2      	lsls	r2, r2, #3
 80259ee:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 80259f2:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 80259f6:	ea49 0202 	orr.w	r2, r9, r2
 80259fa:	f815 9000 	ldrb.w	r9, [r5, r0]
 80259fe:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025a02:	f824 2c04 	strh.w	r2, [r4, #-4]
 8025a06:	f811 0b01 	ldrb.w	r0, [r1], #1
 8025a0a:	f000 000f 	and.w	r0, r0, #15
 8025a0e:	eb00 0040 	add.w	r0, r0, r0, lsl #1
 8025a12:	eb05 0a00 	add.w	sl, r5, r0
 8025a16:	f89a 2001 	ldrb.w	r2, [sl, #1]
 8025a1a:	f89a 9002 	ldrb.w	r9, [sl, #2]
 8025a1e:	00d2      	lsls	r2, r2, #3
 8025a20:	ea07 2909 	and.w	r9, r7, r9, lsl #8
 8025a24:	f402 62fc 	and.w	r2, r2, #2016	@ 0x7e0
 8025a28:	ea49 0202 	orr.w	r2, r9, r2
 8025a2c:	f815 9000 	ldrb.w	r9, [r5, r0]
 8025a30:	ea42 02d9 	orr.w	r2, r2, r9, lsr #3
 8025a34:	f824 2c02 	strh.w	r2, [r4, #-2]
 8025a38:	e7c6      	b.n	80259c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a3a:	4631      	mov	r1, r6
 8025a3c:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8025a40:	e7c2      	b.n	80259c8 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x1d8>
 8025a42:	d111      	bne.n	8025a68 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x278>
 8025a44:	7809      	ldrb	r1, [r1, #0]
 8025a46:	0909      	lsrs	r1, r1, #4
 8025a48:	eb01 0141 	add.w	r1, r1, r1, lsl #1
 8025a4c:	186c      	adds	r4, r5, r1
 8025a4e:	5c69      	ldrb	r1, [r5, r1]
 8025a50:	78a2      	ldrb	r2, [r4, #2]
 8025a52:	7864      	ldrb	r4, [r4, #1]
 8025a54:	00e4      	lsls	r4, r4, #3
 8025a56:	ea07 2202 	and.w	r2, r7, r2, lsl #8
 8025a5a:	f404 64fc 	and.w	r4, r4, #2016	@ 0x7e0
 8025a5e:	4322      	orrs	r2, r4
 8025a60:	ea42 02d1 	orr.w	r2, r2, r1, lsr #3
 8025a64:	f820 2b02 	strh.w	r2, [r0], #2
 8025a68:	9a03      	ldr	r2, [sp, #12]
 8025a6a:	f8bc 4000 	ldrh.w	r4, [ip]
 8025a6e:	9905      	ldr	r1, [sp, #20]
 8025a70:	1aa4      	subs	r4, r4, r2
 8025a72:	f9bd 202c 	ldrsh.w	r2, [sp, #44]	@ 0x2c
 8025a76:	eb00 0444 	add.w	r4, r0, r4, lsl #1
 8025a7a:	440a      	add	r2, r1
 8025a7c:	fb92 f2f8 	sdiv	r2, r2, r8
 8025a80:	4416      	add	r6, r2
 8025a82:	e780      	b.n	8025986 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x196>
 8025a84:	4b03      	ldr	r3, [pc, #12]	@ (8025a94 <_ZN8touchgfx8LCD16bpp17DecompressorL8_L414blitCopyRGB888EPKhS3_RKNS_4RectES6_h+0x2a4>)
 8025a86:	6818      	ldr	r0, [r3, #0]
 8025a88:	6803      	ldr	r3, [r0, #0]
 8025a8a:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8025a8c:	4798      	blx	r3
 8025a8e:	b00f      	add	sp, #60	@ 0x3c
 8025a90:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8025a94:	20002f54 	.word	0x20002f54
 8025a98:	20002f4e 	.word	0x20002f4e
 8025a9c:	fffff800 	.word	0xfffff800

08025aa0 <CRC_Lock>:
 8025aa0:	b530      	push	{r4, r5, lr}
 8025aa2:	4a2d      	ldr	r2, [pc, #180]	@ (8025b58 <CRC_Lock+0xb8>)
 8025aa4:	6813      	ldr	r3, [r2, #0]
 8025aa6:	f023 0301 	bic.w	r3, r3, #1
 8025aaa:	6013      	str	r3, [r2, #0]
 8025aac:	4b2b      	ldr	r3, [pc, #172]	@ (8025b5c <CRC_Lock+0xbc>)
 8025aae:	681c      	ldr	r4, [r3, #0]
 8025ab0:	f64f 72f0 	movw	r2, #65520	@ 0xfff0
 8025ab4:	4014      	ands	r4, r2
 8025ab6:	f24c 2540 	movw	r5, #49728	@ 0xc240
 8025aba:	42ac      	cmp	r4, r5
 8025abc:	d005      	beq.n	8025aca <CRC_Lock+0x2a>
 8025abe:	681c      	ldr	r4, [r3, #0]
 8025ac0:	f24c 2570 	movw	r5, #49776	@ 0xc270
 8025ac4:	4014      	ands	r4, r2
 8025ac6:	42ac      	cmp	r4, r5
 8025ac8:	d125      	bne.n	8025b16 <CRC_Lock+0x76>
 8025aca:	4b25      	ldr	r3, [pc, #148]	@ (8025b60 <CRC_Lock+0xc0>)
 8025acc:	681b      	ldr	r3, [r3, #0]
 8025ace:	2b00      	cmp	r3, #0
 8025ad0:	d139      	bne.n	8025b46 <CRC_Lock+0xa6>
 8025ad2:	4b24      	ldr	r3, [pc, #144]	@ (8025b64 <CRC_Lock+0xc4>)
 8025ad4:	681a      	ldr	r2, [r3, #0]
 8025ad6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025ada:	f5b2 6f8a 	cmp.w	r2, #1104	@ 0x450
 8025ade:	d00d      	beq.n	8025afc <CRC_Lock+0x5c>
 8025ae0:	681a      	ldr	r2, [r3, #0]
 8025ae2:	f240 4483 	movw	r4, #1155	@ 0x483
 8025ae6:	f3c2 020b 	ubfx	r2, r2, #0, #12
 8025aea:	42a2      	cmp	r2, r4
 8025aec:	d006      	beq.n	8025afc <CRC_Lock+0x5c>
 8025aee:	681b      	ldr	r3, [r3, #0]
 8025af0:	f240 4285 	movw	r2, #1157	@ 0x485
 8025af4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025af8:	4293      	cmp	r3, r2
 8025afa:	d124      	bne.n	8025b46 <CRC_Lock+0xa6>
 8025afc:	4b1a      	ldr	r3, [pc, #104]	@ (8025b68 <CRC_Lock+0xc8>)
 8025afe:	2201      	movs	r2, #1
 8025b00:	601a      	str	r2, [r3, #0]
 8025b02:	681a      	ldr	r2, [r3, #0]
 8025b04:	2a00      	cmp	r2, #0
 8025b06:	d1fc      	bne.n	8025b02 <CRC_Lock+0x62>
 8025b08:	4b18      	ldr	r3, [pc, #96]	@ (8025b6c <CRC_Lock+0xcc>)
 8025b0a:	6018      	str	r0, [r3, #0]
 8025b0c:	6818      	ldr	r0, [r3, #0]
 8025b0e:	1a43      	subs	r3, r0, r1
 8025b10:	4258      	negs	r0, r3
 8025b12:	4158      	adcs	r0, r3
 8025b14:	e00e      	b.n	8025b34 <CRC_Lock+0x94>
 8025b16:	681b      	ldr	r3, [r3, #0]
 8025b18:	4013      	ands	r3, r2
 8025b1a:	f24d 2220 	movw	r2, #53792	@ 0xd220
 8025b1e:	4293      	cmp	r3, r2
 8025b20:	d111      	bne.n	8025b46 <CRC_Lock+0xa6>
 8025b22:	4b13      	ldr	r3, [pc, #76]	@ (8025b70 <CRC_Lock+0xd0>)
 8025b24:	681b      	ldr	r3, [r3, #0]
 8025b26:	f240 4286 	movw	r2, #1158	@ 0x486
 8025b2a:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8025b2e:	4293      	cmp	r3, r2
 8025b30:	d001      	beq.n	8025b36 <CRC_Lock+0x96>
 8025b32:	2000      	movs	r0, #0
 8025b34:	bd30      	pop	{r4, r5, pc}
 8025b36:	4b0f      	ldr	r3, [pc, #60]	@ (8025b74 <CRC_Lock+0xd4>)
 8025b38:	2201      	movs	r2, #1
 8025b3a:	601a      	str	r2, [r3, #0]
 8025b3c:	681a      	ldr	r2, [r3, #0]
 8025b3e:	2a00      	cmp	r2, #0
 8025b40:	d1fc      	bne.n	8025b3c <CRC_Lock+0x9c>
 8025b42:	4b0d      	ldr	r3, [pc, #52]	@ (8025b78 <CRC_Lock+0xd8>)
 8025b44:	e7e1      	b.n	8025b0a <CRC_Lock+0x6a>
 8025b46:	4b0d      	ldr	r3, [pc, #52]	@ (8025b7c <CRC_Lock+0xdc>)
 8025b48:	2201      	movs	r2, #1
 8025b4a:	601a      	str	r2, [r3, #0]
 8025b4c:	681a      	ldr	r2, [r3, #0]
 8025b4e:	2a00      	cmp	r2, #0
 8025b50:	d1fc      	bne.n	8025b4c <CRC_Lock+0xac>
 8025b52:	4b0b      	ldr	r3, [pc, #44]	@ (8025b80 <CRC_Lock+0xe0>)
 8025b54:	e7d9      	b.n	8025b0a <CRC_Lock+0x6a>
 8025b56:	bf00      	nop
 8025b58:	e0002000 	.word	0xe0002000
 8025b5c:	e000ed00 	.word	0xe000ed00
 8025b60:	e0042000 	.word	0xe0042000
 8025b64:	5c001000 	.word	0x5c001000
 8025b68:	58024c08 	.word	0x58024c08
 8025b6c:	58024c00 	.word	0x58024c00
 8025b70:	46008ff0 	.word	0x46008ff0
 8025b74:	46024c08 	.word	0x46024c08
 8025b78:	46024c00 	.word	0x46024c00
 8025b7c:	40023008 	.word	0x40023008
 8025b80:	40023000 	.word	0x40023000

08025b84 <_ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE>:
 8025b84:	6101      	str	r1, [r0, #16]
 8025b86:	4770      	bx	lr

08025b88 <_ZN8touchgfx8Gestures4tickEv>:
 8025b88:	7b83      	ldrb	r3, [r0, #14]
 8025b8a:	b14b      	cbz	r3, 8025ba0 <_ZN8touchgfx8Gestures4tickEv+0x18>
 8025b8c:	8903      	ldrh	r3, [r0, #8]
 8025b8e:	3301      	adds	r3, #1
 8025b90:	b29b      	uxth	r3, r3
 8025b92:	2b07      	cmp	r3, #7
 8025b94:	8103      	strh	r3, [r0, #8]
 8025b96:	bf81      	itttt	hi
 8025b98:	2300      	movhi	r3, #0
 8025b9a:	8143      	strhhi	r3, [r0, #10]
 8025b9c:	8183      	strhhi	r3, [r0, #12]
 8025b9e:	7383      	strbhi	r3, [r0, #14]
 8025ba0:	4770      	bx	lr
	...

08025ba4 <_ZN8touchgfx8Gestures17registerDragEventEtttt>:
 8025ba4:	e92d 41ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
 8025ba8:	4698      	mov	r8, r3
 8025baa:	8883      	ldrh	r3, [r0, #4]
 8025bac:	f8ad 3006 	strh.w	r3, [sp, #6]
 8025bb0:	eba8 0303 	sub.w	r3, r8, r3
 8025bb4:	b21b      	sxth	r3, r3
 8025bb6:	4604      	mov	r4, r0
 8025bb8:	2b00      	cmp	r3, #0
 8025bba:	4617      	mov	r7, r2
 8025bbc:	4a18      	ldr	r2, [pc, #96]	@ (8025c20 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x7c>)
 8025bbe:	9200      	str	r2, [sp, #0]
 8025bc0:	bfb8      	it	lt
 8025bc2:	425b      	neglt	r3, r3
 8025bc4:	8aa2      	ldrh	r2, [r4, #20]
 8025bc6:	f8bd 5028 	ldrh.w	r5, [sp, #40]	@ 0x28
 8025bca:	f8ad 800a 	strh.w	r8, [sp, #10]
 8025bce:	b21b      	sxth	r3, r3
 8025bd0:	460e      	mov	r6, r1
 8025bd2:	4293      	cmp	r3, r2
 8025bd4:	88c1      	ldrh	r1, [r0, #6]
 8025bd6:	f8ad 1008 	strh.w	r1, [sp, #8]
 8025bda:	f04f 0000 	mov.w	r0, #0
 8025bde:	f88d 0004 	strb.w	r0, [sp, #4]
 8025be2:	f8ad 500c 	strh.w	r5, [sp, #12]
 8025be6:	dc07      	bgt.n	8025bf8 <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x54>
 8025be8:	1a69      	subs	r1, r5, r1
 8025bea:	b209      	sxth	r1, r1
 8025bec:	2900      	cmp	r1, #0
 8025bee:	bfb8      	it	lt
 8025bf0:	4249      	neglt	r1, r1
 8025bf2:	b209      	sxth	r1, r1
 8025bf4:	428a      	cmp	r2, r1
 8025bf6:	da10      	bge.n	8025c1a <_ZN8touchgfx8Gestures17registerDragEventEtttt+0x76>
 8025bf8:	6920      	ldr	r0, [r4, #16]
 8025bfa:	6803      	ldr	r3, [r0, #0]
 8025bfc:	4669      	mov	r1, sp
 8025bfe:	685b      	ldr	r3, [r3, #4]
 8025c00:	4798      	blx	r3
 8025c02:	eba8 0606 	sub.w	r6, r8, r6
 8025c06:	2300      	movs	r3, #0
 8025c08:	1bef      	subs	r7, r5, r7
 8025c0a:	2001      	movs	r0, #1
 8025c0c:	8123      	strh	r3, [r4, #8]
 8025c0e:	8166      	strh	r6, [r4, #10]
 8025c10:	81a7      	strh	r7, [r4, #12]
 8025c12:	f8a4 8004 	strh.w	r8, [r4, #4]
 8025c16:	80e5      	strh	r5, [r4, #6]
 8025c18:	73a0      	strb	r0, [r4, #14]
 8025c1a:	b004      	add	sp, #16
 8025c1c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025c20:	080297d4 	.word	0x080297d4

08025c24 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt>:
 8025c24:	b5f0      	push	{r4, r5, r6, r7, lr}
 8025c26:	461e      	mov	r6, r3
 8025c28:	1e4b      	subs	r3, r1, #1
 8025c2a:	2b01      	cmp	r3, #1
 8025c2c:	b085      	sub	sp, #20
 8025c2e:	4604      	mov	r4, r0
 8025c30:	460d      	mov	r5, r1
 8025c32:	4617      	mov	r7, r2
 8025c34:	d84b      	bhi.n	8025cce <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xaa>
 8025c36:	f9b0 200a 	ldrsh.w	r2, [r0, #10]
 8025c3a:	1cd3      	adds	r3, r2, #3
 8025c3c:	b29b      	uxth	r3, r3
 8025c3e:	2b06      	cmp	r3, #6
 8025c40:	d916      	bls.n	8025c70 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x4c>
 8025c42:	f8df c0a0 	ldr.w	ip, [pc, #160]	@ 8025ce4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025c46:	f8cd c004 	str.w	ip, [sp, #4]
 8025c4a:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025c4e:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025c52:	6900      	ldr	r0, [r0, #16]
 8025c54:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025c58:	f04f 0c00 	mov.w	ip, #0
 8025c5c:	f88d c008 	strb.w	ip, [sp, #8]
 8025c60:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c64:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025c68:	6803      	ldr	r3, [r0, #0]
 8025c6a:	a901      	add	r1, sp, #4
 8025c6c:	689b      	ldr	r3, [r3, #8]
 8025c6e:	4798      	blx	r3
 8025c70:	f9b4 200c 	ldrsh.w	r2, [r4, #12]
 8025c74:	1cd3      	adds	r3, r2, #3
 8025c76:	b29b      	uxth	r3, r3
 8025c78:	2b06      	cmp	r3, #6
 8025c7a:	d916      	bls.n	8025caa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025c7c:	f8df c064 	ldr.w	ip, [pc, #100]	@ 8025ce4 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xc0>
 8025c80:	f8cd c004 	str.w	ip, [sp, #4]
 8025c84:	f9b4 1004 	ldrsh.w	r1, [r4, #4]
 8025c88:	f9b4 3006 	ldrsh.w	r3, [r4, #6]
 8025c8c:	6920      	ldr	r0, [r4, #16]
 8025c8e:	f8ad 100c 	strh.w	r1, [sp, #12]
 8025c92:	f04f 0c01 	mov.w	ip, #1
 8025c96:	f88d c008 	strb.w	ip, [sp, #8]
 8025c9a:	f8ad 200a 	strh.w	r2, [sp, #10]
 8025c9e:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025ca2:	6803      	ldr	r3, [r0, #0]
 8025ca4:	a901      	add	r1, sp, #4
 8025ca6:	689b      	ldr	r3, [r3, #8]
 8025ca8:	4798      	blx	r3
 8025caa:	4b0d      	ldr	r3, [pc, #52]	@ (8025ce0 <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0xbc>)
 8025cac:	9301      	str	r3, [sp, #4]
 8025cae:	6920      	ldr	r0, [r4, #16]
 8025cb0:	f88d 5008 	strb.w	r5, [sp, #8]
 8025cb4:	2300      	movs	r3, #0
 8025cb6:	f8ad 700a 	strh.w	r7, [sp, #10]
 8025cba:	f8ad 600c 	strh.w	r6, [sp, #12]
 8025cbe:	f8ad 300e 	strh.w	r3, [sp, #14]
 8025cc2:	6803      	ldr	r3, [r0, #0]
 8025cc4:	a901      	add	r1, sp, #4
 8025cc6:	681b      	ldr	r3, [r3, #0]
 8025cc8:	4798      	blx	r3
 8025cca:	b005      	add	sp, #20
 8025ccc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8025cce:	2900      	cmp	r1, #0
 8025cd0:	d1eb      	bne.n	8025caa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025cd2:	80a2      	strh	r2, [r4, #4]
 8025cd4:	80c6      	strh	r6, [r0, #6]
 8025cd6:	60a1      	str	r1, [r4, #8]
 8025cd8:	81a1      	strh	r1, [r4, #12]
 8025cda:	73a1      	strb	r1, [r4, #14]
 8025cdc:	e7e5      	b.n	8025caa <_ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt+0x86>
 8025cde:	bf00      	nop
 8025ce0:	080297c0 	.word	0x080297c0
 8025ce4:	080297e8 	.word	0x080297e8

08025ce8 <__aeabi_atexit>:
 8025ce8:	460b      	mov	r3, r1
 8025cea:	4601      	mov	r1, r0
 8025cec:	4618      	mov	r0, r3
 8025cee:	f000 b991 	b.w	8026014 <__cxa_atexit>

08025cf2 <_ZdlPvj>:
 8025cf2:	f000 b812 	b.w	8025d1a <_ZdlPv>

08025cf6 <__cxa_guard_acquire>:
 8025cf6:	6802      	ldr	r2, [r0, #0]
 8025cf8:	07d2      	lsls	r2, r2, #31
 8025cfa:	4603      	mov	r3, r0
 8025cfc:	d405      	bmi.n	8025d0a <__cxa_guard_acquire+0x14>
 8025cfe:	7842      	ldrb	r2, [r0, #1]
 8025d00:	b102      	cbz	r2, 8025d04 <__cxa_guard_acquire+0xe>
 8025d02:	deff      	udf	#255	@ 0xff
 8025d04:	2001      	movs	r0, #1
 8025d06:	7058      	strb	r0, [r3, #1]
 8025d08:	4770      	bx	lr
 8025d0a:	2000      	movs	r0, #0
 8025d0c:	4770      	bx	lr

08025d0e <__cxa_guard_release>:
 8025d0e:	2301      	movs	r3, #1
 8025d10:	6003      	str	r3, [r0, #0]
 8025d12:	4770      	bx	lr

08025d14 <__cxa_pure_virtual>:
 8025d14:	b508      	push	{r3, lr}
 8025d16:	f000 f80f 	bl	8025d38 <_ZSt9terminatev>

08025d1a <_ZdlPv>:
 8025d1a:	f000 b8c5 	b.w	8025ea8 <free>

08025d1e <_ZN10__cxxabiv111__terminateEPFvvE>:
 8025d1e:	b508      	push	{r3, lr}
 8025d20:	4780      	blx	r0
 8025d22:	f000 f88d 	bl	8025e40 <abort>
	...

08025d28 <_ZSt13get_terminatev>:
 8025d28:	4b02      	ldr	r3, [pc, #8]	@ (8025d34 <_ZSt13get_terminatev+0xc>)
 8025d2a:	6818      	ldr	r0, [r3, #0]
 8025d2c:	f3bf 8f5b 	dmb	ish
 8025d30:	4770      	bx	lr
 8025d32:	bf00      	nop
 8025d34:	200000a8 	.word	0x200000a8

08025d38 <_ZSt9terminatev>:
 8025d38:	b508      	push	{r3, lr}
 8025d3a:	f7ff fff5 	bl	8025d28 <_ZSt13get_terminatev>
 8025d3e:	f7ff ffee 	bl	8025d1e <_ZN10__cxxabiv111__terminateEPFvvE>
 8025d42:	0000      	movs	r0, r0
 8025d44:	0000      	movs	r0, r0
	...

08025d48 <floor>:
 8025d48:	ec51 0b10 	vmov	r0, r1, d0
 8025d4c:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8025d50:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8025d54:	f2a3 36ff 	subw	r6, r3, #1023	@ 0x3ff
 8025d58:	2e13      	cmp	r6, #19
 8025d5a:	460c      	mov	r4, r1
 8025d5c:	4605      	mov	r5, r0
 8025d5e:	4680      	mov	r8, r0
 8025d60:	dc34      	bgt.n	8025dcc <floor+0x84>
 8025d62:	2e00      	cmp	r6, #0
 8025d64:	da17      	bge.n	8025d96 <floor+0x4e>
 8025d66:	a332      	add	r3, pc, #200	@ (adr r3, 8025e30 <floor+0xe8>)
 8025d68:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025d6c:	f7da faa6 	bl	80002bc <__adddf3>
 8025d70:	2200      	movs	r2, #0
 8025d72:	2300      	movs	r3, #0
 8025d74:	f7da fee8 	bl	8000b48 <__aeabi_dcmpgt>
 8025d78:	b150      	cbz	r0, 8025d90 <floor+0x48>
 8025d7a:	2c00      	cmp	r4, #0
 8025d7c:	da55      	bge.n	8025e2a <floor+0xe2>
 8025d7e:	f024 4400 	bic.w	r4, r4, #2147483648	@ 0x80000000
 8025d82:	432c      	orrs	r4, r5
 8025d84:	2500      	movs	r5, #0
 8025d86:	42ac      	cmp	r4, r5
 8025d88:	4c2b      	ldr	r4, [pc, #172]	@ (8025e38 <floor+0xf0>)
 8025d8a:	bf08      	it	eq
 8025d8c:	f04f 4400 	moveq.w	r4, #2147483648	@ 0x80000000
 8025d90:	4621      	mov	r1, r4
 8025d92:	4628      	mov	r0, r5
 8025d94:	e023      	b.n	8025dde <floor+0x96>
 8025d96:	4f29      	ldr	r7, [pc, #164]	@ (8025e3c <floor+0xf4>)
 8025d98:	4137      	asrs	r7, r6
 8025d9a:	ea01 0307 	and.w	r3, r1, r7
 8025d9e:	4303      	orrs	r3, r0
 8025da0:	d01d      	beq.n	8025dde <floor+0x96>
 8025da2:	a323      	add	r3, pc, #140	@ (adr r3, 8025e30 <floor+0xe8>)
 8025da4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025da8:	f7da fa88 	bl	80002bc <__adddf3>
 8025dac:	2200      	movs	r2, #0
 8025dae:	2300      	movs	r3, #0
 8025db0:	f7da feca 	bl	8000b48 <__aeabi_dcmpgt>
 8025db4:	2800      	cmp	r0, #0
 8025db6:	d0eb      	beq.n	8025d90 <floor+0x48>
 8025db8:	2c00      	cmp	r4, #0
 8025dba:	bfbe      	ittt	lt
 8025dbc:	f44f 1380 	movlt.w	r3, #1048576	@ 0x100000
 8025dc0:	4133      	asrlt	r3, r6
 8025dc2:	18e4      	addlt	r4, r4, r3
 8025dc4:	ea24 0407 	bic.w	r4, r4, r7
 8025dc8:	2500      	movs	r5, #0
 8025dca:	e7e1      	b.n	8025d90 <floor+0x48>
 8025dcc:	2e33      	cmp	r6, #51	@ 0x33
 8025dce:	dd0a      	ble.n	8025de6 <floor+0x9e>
 8025dd0:	f5b6 6f80 	cmp.w	r6, #1024	@ 0x400
 8025dd4:	d103      	bne.n	8025dde <floor+0x96>
 8025dd6:	4602      	mov	r2, r0
 8025dd8:	460b      	mov	r3, r1
 8025dda:	f7da fa6f 	bl	80002bc <__adddf3>
 8025dde:	ec41 0b10 	vmov	d0, r0, r1
 8025de2:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8025de6:	f2a3 4313 	subw	r3, r3, #1043	@ 0x413
 8025dea:	f04f 37ff 	mov.w	r7, #4294967295
 8025dee:	40df      	lsrs	r7, r3
 8025df0:	4207      	tst	r7, r0
 8025df2:	d0f4      	beq.n	8025dde <floor+0x96>
 8025df4:	a30e      	add	r3, pc, #56	@ (adr r3, 8025e30 <floor+0xe8>)
 8025df6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8025dfa:	f7da fa5f 	bl	80002bc <__adddf3>
 8025dfe:	2200      	movs	r2, #0
 8025e00:	2300      	movs	r3, #0
 8025e02:	f7da fea1 	bl	8000b48 <__aeabi_dcmpgt>
 8025e06:	2800      	cmp	r0, #0
 8025e08:	d0c2      	beq.n	8025d90 <floor+0x48>
 8025e0a:	2c00      	cmp	r4, #0
 8025e0c:	da0a      	bge.n	8025e24 <floor+0xdc>
 8025e0e:	2e14      	cmp	r6, #20
 8025e10:	d101      	bne.n	8025e16 <floor+0xce>
 8025e12:	3401      	adds	r4, #1
 8025e14:	e006      	b.n	8025e24 <floor+0xdc>
 8025e16:	f1c6 0634 	rsb	r6, r6, #52	@ 0x34
 8025e1a:	2301      	movs	r3, #1
 8025e1c:	40b3      	lsls	r3, r6
 8025e1e:	441d      	add	r5, r3
 8025e20:	4545      	cmp	r5, r8
 8025e22:	d3f6      	bcc.n	8025e12 <floor+0xca>
 8025e24:	ea25 0507 	bic.w	r5, r5, r7
 8025e28:	e7b2      	b.n	8025d90 <floor+0x48>
 8025e2a:	2500      	movs	r5, #0
 8025e2c:	462c      	mov	r4, r5
 8025e2e:	e7af      	b.n	8025d90 <floor+0x48>
 8025e30:	8800759c 	.word	0x8800759c
 8025e34:	7e37e43c 	.word	0x7e37e43c
 8025e38:	bff00000 	.word	0xbff00000
 8025e3c:	000fffff 	.word	0x000fffff

08025e40 <abort>:
 8025e40:	b508      	push	{r3, lr}
 8025e42:	2006      	movs	r0, #6
 8025e44:	f000 fa3c 	bl	80262c0 <raise>
 8025e48:	2001      	movs	r0, #1
 8025e4a:	f7dc f831 	bl	8001eb0 <_exit>
	...

08025e50 <__assert_func>:
 8025e50:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8025e52:	4614      	mov	r4, r2
 8025e54:	461a      	mov	r2, r3
 8025e56:	4b09      	ldr	r3, [pc, #36]	@ (8025e7c <__assert_func+0x2c>)
 8025e58:	681b      	ldr	r3, [r3, #0]
 8025e5a:	4605      	mov	r5, r0
 8025e5c:	68d8      	ldr	r0, [r3, #12]
 8025e5e:	b954      	cbnz	r4, 8025e76 <__assert_func+0x26>
 8025e60:	4b07      	ldr	r3, [pc, #28]	@ (8025e80 <__assert_func+0x30>)
 8025e62:	461c      	mov	r4, r3
 8025e64:	e9cd 3401 	strd	r3, r4, [sp, #4]
 8025e68:	9100      	str	r1, [sp, #0]
 8025e6a:	462b      	mov	r3, r5
 8025e6c:	4905      	ldr	r1, [pc, #20]	@ (8025e84 <__assert_func+0x34>)
 8025e6e:	f000 f983 	bl	8026178 <fiprintf>
 8025e72:	f7ff ffe5 	bl	8025e40 <abort>
 8025e76:	4b04      	ldr	r3, [pc, #16]	@ (8025e88 <__assert_func+0x38>)
 8025e78:	e7f4      	b.n	8025e64 <__assert_func+0x14>
 8025e7a:	bf00      	nop
 8025e7c:	200000b8 	.word	0x200000b8
 8025e80:	08029b57 	.word	0x08029b57
 8025e84:	08029b29 	.word	0x08029b29
 8025e88:	08029b1c 	.word	0x08029b1c

08025e8c <atexit>:
 8025e8c:	2300      	movs	r3, #0
 8025e8e:	4601      	mov	r1, r0
 8025e90:	461a      	mov	r2, r3
 8025e92:	4618      	mov	r0, r3
 8025e94:	f000 bac2 	b.w	802641c <__register_exitproc>

08025e98 <malloc>:
 8025e98:	4b02      	ldr	r3, [pc, #8]	@ (8025ea4 <malloc+0xc>)
 8025e9a:	4601      	mov	r1, r0
 8025e9c:	6818      	ldr	r0, [r3, #0]
 8025e9e:	f000 b82d 	b.w	8025efc <_malloc_r>
 8025ea2:	bf00      	nop
 8025ea4:	200000b8 	.word	0x200000b8

08025ea8 <free>:
 8025ea8:	4b02      	ldr	r3, [pc, #8]	@ (8025eb4 <free+0xc>)
 8025eaa:	4601      	mov	r1, r0
 8025eac:	6818      	ldr	r0, [r3, #0]
 8025eae:	f000 bb11 	b.w	80264d4 <_free_r>
 8025eb2:	bf00      	nop
 8025eb4:	200000b8 	.word	0x200000b8

08025eb8 <sbrk_aligned>:
 8025eb8:	b570      	push	{r4, r5, r6, lr}
 8025eba:	4e0f      	ldr	r6, [pc, #60]	@ (8025ef8 <sbrk_aligned+0x40>)
 8025ebc:	460c      	mov	r4, r1
 8025ebe:	6831      	ldr	r1, [r6, #0]
 8025ec0:	4605      	mov	r5, r0
 8025ec2:	b911      	cbnz	r1, 8025eca <sbrk_aligned+0x12>
 8025ec4:	f000 fa4c 	bl	8026360 <_sbrk_r>
 8025ec8:	6030      	str	r0, [r6, #0]
 8025eca:	4621      	mov	r1, r4
 8025ecc:	4628      	mov	r0, r5
 8025ece:	f000 fa47 	bl	8026360 <_sbrk_r>
 8025ed2:	1c43      	adds	r3, r0, #1
 8025ed4:	d103      	bne.n	8025ede <sbrk_aligned+0x26>
 8025ed6:	f04f 34ff 	mov.w	r4, #4294967295
 8025eda:	4620      	mov	r0, r4
 8025edc:	bd70      	pop	{r4, r5, r6, pc}
 8025ede:	1cc4      	adds	r4, r0, #3
 8025ee0:	f024 0403 	bic.w	r4, r4, #3
 8025ee4:	42a0      	cmp	r0, r4
 8025ee6:	d0f8      	beq.n	8025eda <sbrk_aligned+0x22>
 8025ee8:	1a21      	subs	r1, r4, r0
 8025eea:	4628      	mov	r0, r5
 8025eec:	f000 fa38 	bl	8026360 <_sbrk_r>
 8025ef0:	3001      	adds	r0, #1
 8025ef2:	d1f2      	bne.n	8025eda <sbrk_aligned+0x22>
 8025ef4:	e7ef      	b.n	8025ed6 <sbrk_aligned+0x1e>
 8025ef6:	bf00      	nop
 8025ef8:	200039a8 	.word	0x200039a8

08025efc <_malloc_r>:
 8025efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8025f00:	1ccd      	adds	r5, r1, #3
 8025f02:	f025 0503 	bic.w	r5, r5, #3
 8025f06:	3508      	adds	r5, #8
 8025f08:	2d0c      	cmp	r5, #12
 8025f0a:	bf38      	it	cc
 8025f0c:	250c      	movcc	r5, #12
 8025f0e:	2d00      	cmp	r5, #0
 8025f10:	4606      	mov	r6, r0
 8025f12:	db01      	blt.n	8025f18 <_malloc_r+0x1c>
 8025f14:	42a9      	cmp	r1, r5
 8025f16:	d904      	bls.n	8025f22 <_malloc_r+0x26>
 8025f18:	230c      	movs	r3, #12
 8025f1a:	6033      	str	r3, [r6, #0]
 8025f1c:	2000      	movs	r0, #0
 8025f1e:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8025f22:	f8df 80d4 	ldr.w	r8, [pc, #212]	@ 8025ff8 <_malloc_r+0xfc>
 8025f26:	f000 f869 	bl	8025ffc <__malloc_lock>
 8025f2a:	f8d8 3000 	ldr.w	r3, [r8]
 8025f2e:	461c      	mov	r4, r3
 8025f30:	bb44      	cbnz	r4, 8025f84 <_malloc_r+0x88>
 8025f32:	4629      	mov	r1, r5
 8025f34:	4630      	mov	r0, r6
 8025f36:	f7ff ffbf 	bl	8025eb8 <sbrk_aligned>
 8025f3a:	1c43      	adds	r3, r0, #1
 8025f3c:	4604      	mov	r4, r0
 8025f3e:	d158      	bne.n	8025ff2 <_malloc_r+0xf6>
 8025f40:	f8d8 4000 	ldr.w	r4, [r8]
 8025f44:	4627      	mov	r7, r4
 8025f46:	2f00      	cmp	r7, #0
 8025f48:	d143      	bne.n	8025fd2 <_malloc_r+0xd6>
 8025f4a:	2c00      	cmp	r4, #0
 8025f4c:	d04b      	beq.n	8025fe6 <_malloc_r+0xea>
 8025f4e:	6823      	ldr	r3, [r4, #0]
 8025f50:	4639      	mov	r1, r7
 8025f52:	4630      	mov	r0, r6
 8025f54:	eb04 0903 	add.w	r9, r4, r3
 8025f58:	f000 fa02 	bl	8026360 <_sbrk_r>
 8025f5c:	4581      	cmp	r9, r0
 8025f5e:	d142      	bne.n	8025fe6 <_malloc_r+0xea>
 8025f60:	6821      	ldr	r1, [r4, #0]
 8025f62:	1a6d      	subs	r5, r5, r1
 8025f64:	4629      	mov	r1, r5
 8025f66:	4630      	mov	r0, r6
 8025f68:	f7ff ffa6 	bl	8025eb8 <sbrk_aligned>
 8025f6c:	3001      	adds	r0, #1
 8025f6e:	d03a      	beq.n	8025fe6 <_malloc_r+0xea>
 8025f70:	6823      	ldr	r3, [r4, #0]
 8025f72:	442b      	add	r3, r5
 8025f74:	6023      	str	r3, [r4, #0]
 8025f76:	f8d8 3000 	ldr.w	r3, [r8]
 8025f7a:	685a      	ldr	r2, [r3, #4]
 8025f7c:	bb62      	cbnz	r2, 8025fd8 <_malloc_r+0xdc>
 8025f7e:	f8c8 7000 	str.w	r7, [r8]
 8025f82:	e00f      	b.n	8025fa4 <_malloc_r+0xa8>
 8025f84:	6822      	ldr	r2, [r4, #0]
 8025f86:	1b52      	subs	r2, r2, r5
 8025f88:	d420      	bmi.n	8025fcc <_malloc_r+0xd0>
 8025f8a:	2a0b      	cmp	r2, #11
 8025f8c:	d917      	bls.n	8025fbe <_malloc_r+0xc2>
 8025f8e:	1961      	adds	r1, r4, r5
 8025f90:	42a3      	cmp	r3, r4
 8025f92:	6025      	str	r5, [r4, #0]
 8025f94:	bf18      	it	ne
 8025f96:	6059      	strne	r1, [r3, #4]
 8025f98:	6863      	ldr	r3, [r4, #4]
 8025f9a:	bf08      	it	eq
 8025f9c:	f8c8 1000 	streq.w	r1, [r8]
 8025fa0:	5162      	str	r2, [r4, r5]
 8025fa2:	604b      	str	r3, [r1, #4]
 8025fa4:	4630      	mov	r0, r6
 8025fa6:	f000 f82f 	bl	8026008 <__malloc_unlock>
 8025faa:	f104 000b 	add.w	r0, r4, #11
 8025fae:	1d23      	adds	r3, r4, #4
 8025fb0:	f020 0007 	bic.w	r0, r0, #7
 8025fb4:	1ac2      	subs	r2, r0, r3
 8025fb6:	bf1c      	itt	ne
 8025fb8:	1a1b      	subne	r3, r3, r0
 8025fba:	50a3      	strne	r3, [r4, r2]
 8025fbc:	e7af      	b.n	8025f1e <_malloc_r+0x22>
 8025fbe:	6862      	ldr	r2, [r4, #4]
 8025fc0:	42a3      	cmp	r3, r4
 8025fc2:	bf0c      	ite	eq
 8025fc4:	f8c8 2000 	streq.w	r2, [r8]
 8025fc8:	605a      	strne	r2, [r3, #4]
 8025fca:	e7eb      	b.n	8025fa4 <_malloc_r+0xa8>
 8025fcc:	4623      	mov	r3, r4
 8025fce:	6864      	ldr	r4, [r4, #4]
 8025fd0:	e7ae      	b.n	8025f30 <_malloc_r+0x34>
 8025fd2:	463c      	mov	r4, r7
 8025fd4:	687f      	ldr	r7, [r7, #4]
 8025fd6:	e7b6      	b.n	8025f46 <_malloc_r+0x4a>
 8025fd8:	461a      	mov	r2, r3
 8025fda:	685b      	ldr	r3, [r3, #4]
 8025fdc:	42a3      	cmp	r3, r4
 8025fde:	d1fb      	bne.n	8025fd8 <_malloc_r+0xdc>
 8025fe0:	2300      	movs	r3, #0
 8025fe2:	6053      	str	r3, [r2, #4]
 8025fe4:	e7de      	b.n	8025fa4 <_malloc_r+0xa8>
 8025fe6:	230c      	movs	r3, #12
 8025fe8:	6033      	str	r3, [r6, #0]
 8025fea:	4630      	mov	r0, r6
 8025fec:	f000 f80c 	bl	8026008 <__malloc_unlock>
 8025ff0:	e794      	b.n	8025f1c <_malloc_r+0x20>
 8025ff2:	6005      	str	r5, [r0, #0]
 8025ff4:	e7d6      	b.n	8025fa4 <_malloc_r+0xa8>
 8025ff6:	bf00      	nop
 8025ff8:	200039ac 	.word	0x200039ac

08025ffc <__malloc_lock>:
 8025ffc:	4801      	ldr	r0, [pc, #4]	@ (8026004 <__malloc_lock+0x8>)
 8025ffe:	f000 b9fc 	b.w	80263fa <__retarget_lock_acquire_recursive>
 8026002:	bf00      	nop
 8026004:	20003af0 	.word	0x20003af0

08026008 <__malloc_unlock>:
 8026008:	4801      	ldr	r0, [pc, #4]	@ (8026010 <__malloc_unlock+0x8>)
 802600a:	f000 b9f7 	b.w	80263fc <__retarget_lock_release_recursive>
 802600e:	bf00      	nop
 8026010:	20003af0 	.word	0x20003af0

08026014 <__cxa_atexit>:
 8026014:	b510      	push	{r4, lr}
 8026016:	4604      	mov	r4, r0
 8026018:	4804      	ldr	r0, [pc, #16]	@ (802602c <__cxa_atexit+0x18>)
 802601a:	4613      	mov	r3, r2
 802601c:	b120      	cbz	r0, 8026028 <__cxa_atexit+0x14>
 802601e:	460a      	mov	r2, r1
 8026020:	2002      	movs	r0, #2
 8026022:	4621      	mov	r1, r4
 8026024:	f000 f9fa 	bl	802641c <__register_exitproc>
 8026028:	bd10      	pop	{r4, pc}
 802602a:	bf00      	nop
 802602c:	0802641d 	.word	0x0802641d

08026030 <std>:
 8026030:	2300      	movs	r3, #0
 8026032:	b510      	push	{r4, lr}
 8026034:	4604      	mov	r4, r0
 8026036:	e9c0 3300 	strd	r3, r3, [r0]
 802603a:	e9c0 3304 	strd	r3, r3, [r0, #16]
 802603e:	6083      	str	r3, [r0, #8]
 8026040:	8181      	strh	r1, [r0, #12]
 8026042:	6643      	str	r3, [r0, #100]	@ 0x64
 8026044:	81c2      	strh	r2, [r0, #14]
 8026046:	6183      	str	r3, [r0, #24]
 8026048:	4619      	mov	r1, r3
 802604a:	2208      	movs	r2, #8
 802604c:	305c      	adds	r0, #92	@ 0x5c
 802604e:	f000 f906 	bl	802625e <memset>
 8026052:	4b0d      	ldr	r3, [pc, #52]	@ (8026088 <std+0x58>)
 8026054:	6263      	str	r3, [r4, #36]	@ 0x24
 8026056:	4b0d      	ldr	r3, [pc, #52]	@ (802608c <std+0x5c>)
 8026058:	62a3      	str	r3, [r4, #40]	@ 0x28
 802605a:	4b0d      	ldr	r3, [pc, #52]	@ (8026090 <std+0x60>)
 802605c:	62e3      	str	r3, [r4, #44]	@ 0x2c
 802605e:	4b0d      	ldr	r3, [pc, #52]	@ (8026094 <std+0x64>)
 8026060:	6323      	str	r3, [r4, #48]	@ 0x30
 8026062:	4b0d      	ldr	r3, [pc, #52]	@ (8026098 <std+0x68>)
 8026064:	6224      	str	r4, [r4, #32]
 8026066:	429c      	cmp	r4, r3
 8026068:	d006      	beq.n	8026078 <std+0x48>
 802606a:	f103 0268 	add.w	r2, r3, #104	@ 0x68
 802606e:	4294      	cmp	r4, r2
 8026070:	d002      	beq.n	8026078 <std+0x48>
 8026072:	33d0      	adds	r3, #208	@ 0xd0
 8026074:	429c      	cmp	r4, r3
 8026076:	d105      	bne.n	8026084 <std+0x54>
 8026078:	f104 0058 	add.w	r0, r4, #88	@ 0x58
 802607c:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026080:	f000 b9ba 	b.w	80263f8 <__retarget_lock_init_recursive>
 8026084:	bd10      	pop	{r4, pc}
 8026086:	bf00      	nop
 8026088:	080261d9 	.word	0x080261d9
 802608c:	080261fb 	.word	0x080261fb
 8026090:	08026233 	.word	0x08026233
 8026094:	08026257 	.word	0x08026257
 8026098:	200039b0 	.word	0x200039b0

0802609c <stdio_exit_handler>:
 802609c:	4a02      	ldr	r2, [pc, #8]	@ (80260a8 <stdio_exit_handler+0xc>)
 802609e:	4903      	ldr	r1, [pc, #12]	@ (80260ac <stdio_exit_handler+0x10>)
 80260a0:	4803      	ldr	r0, [pc, #12]	@ (80260b0 <stdio_exit_handler+0x14>)
 80260a2:	f000 b87b 	b.w	802619c <_fwalk_sglue>
 80260a6:	bf00      	nop
 80260a8:	200000ac 	.word	0x200000ac
 80260ac:	08026c11 	.word	0x08026c11
 80260b0:	200000bc 	.word	0x200000bc

080260b4 <cleanup_stdio>:
 80260b4:	6841      	ldr	r1, [r0, #4]
 80260b6:	4b0c      	ldr	r3, [pc, #48]	@ (80260e8 <cleanup_stdio+0x34>)
 80260b8:	4299      	cmp	r1, r3
 80260ba:	b510      	push	{r4, lr}
 80260bc:	4604      	mov	r4, r0
 80260be:	d001      	beq.n	80260c4 <cleanup_stdio+0x10>
 80260c0:	f000 fda6 	bl	8026c10 <_fflush_r>
 80260c4:	68a1      	ldr	r1, [r4, #8]
 80260c6:	4b09      	ldr	r3, [pc, #36]	@ (80260ec <cleanup_stdio+0x38>)
 80260c8:	4299      	cmp	r1, r3
 80260ca:	d002      	beq.n	80260d2 <cleanup_stdio+0x1e>
 80260cc:	4620      	mov	r0, r4
 80260ce:	f000 fd9f 	bl	8026c10 <_fflush_r>
 80260d2:	68e1      	ldr	r1, [r4, #12]
 80260d4:	4b06      	ldr	r3, [pc, #24]	@ (80260f0 <cleanup_stdio+0x3c>)
 80260d6:	4299      	cmp	r1, r3
 80260d8:	d004      	beq.n	80260e4 <cleanup_stdio+0x30>
 80260da:	4620      	mov	r0, r4
 80260dc:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 80260e0:	f000 bd96 	b.w	8026c10 <_fflush_r>
 80260e4:	bd10      	pop	{r4, pc}
 80260e6:	bf00      	nop
 80260e8:	200039b0 	.word	0x200039b0
 80260ec:	20003a18 	.word	0x20003a18
 80260f0:	20003a80 	.word	0x20003a80

080260f4 <global_stdio_init.part.0>:
 80260f4:	b510      	push	{r4, lr}
 80260f6:	4b0b      	ldr	r3, [pc, #44]	@ (8026124 <global_stdio_init.part.0+0x30>)
 80260f8:	4c0b      	ldr	r4, [pc, #44]	@ (8026128 <global_stdio_init.part.0+0x34>)
 80260fa:	4a0c      	ldr	r2, [pc, #48]	@ (802612c <global_stdio_init.part.0+0x38>)
 80260fc:	601a      	str	r2, [r3, #0]
 80260fe:	4620      	mov	r0, r4
 8026100:	2200      	movs	r2, #0
 8026102:	2104      	movs	r1, #4
 8026104:	f7ff ff94 	bl	8026030 <std>
 8026108:	f104 0068 	add.w	r0, r4, #104	@ 0x68
 802610c:	2201      	movs	r2, #1
 802610e:	2109      	movs	r1, #9
 8026110:	f7ff ff8e 	bl	8026030 <std>
 8026114:	f104 00d0 	add.w	r0, r4, #208	@ 0xd0
 8026118:	2202      	movs	r2, #2
 802611a:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 802611e:	2112      	movs	r1, #18
 8026120:	f7ff bf86 	b.w	8026030 <std>
 8026124:	20003ae8 	.word	0x20003ae8
 8026128:	200039b0 	.word	0x200039b0
 802612c:	0802609d 	.word	0x0802609d

08026130 <__sfp_lock_acquire>:
 8026130:	4801      	ldr	r0, [pc, #4]	@ (8026138 <__sfp_lock_acquire+0x8>)
 8026132:	f000 b962 	b.w	80263fa <__retarget_lock_acquire_recursive>
 8026136:	bf00      	nop
 8026138:	20003af2 	.word	0x20003af2

0802613c <__sfp_lock_release>:
 802613c:	4801      	ldr	r0, [pc, #4]	@ (8026144 <__sfp_lock_release+0x8>)
 802613e:	f000 b95d 	b.w	80263fc <__retarget_lock_release_recursive>
 8026142:	bf00      	nop
 8026144:	20003af2 	.word	0x20003af2

08026148 <__sinit>:
 8026148:	b510      	push	{r4, lr}
 802614a:	4604      	mov	r4, r0
 802614c:	f7ff fff0 	bl	8026130 <__sfp_lock_acquire>
 8026150:	6a23      	ldr	r3, [r4, #32]
 8026152:	b11b      	cbz	r3, 802615c <__sinit+0x14>
 8026154:	e8bd 4010 	ldmia.w	sp!, {r4, lr}
 8026158:	f7ff bff0 	b.w	802613c <__sfp_lock_release>
 802615c:	4b04      	ldr	r3, [pc, #16]	@ (8026170 <__sinit+0x28>)
 802615e:	6223      	str	r3, [r4, #32]
 8026160:	4b04      	ldr	r3, [pc, #16]	@ (8026174 <__sinit+0x2c>)
 8026162:	681b      	ldr	r3, [r3, #0]
 8026164:	2b00      	cmp	r3, #0
 8026166:	d1f5      	bne.n	8026154 <__sinit+0xc>
 8026168:	f7ff ffc4 	bl	80260f4 <global_stdio_init.part.0>
 802616c:	e7f2      	b.n	8026154 <__sinit+0xc>
 802616e:	bf00      	nop
 8026170:	080260b5 	.word	0x080260b5
 8026174:	20003ae8 	.word	0x20003ae8

08026178 <fiprintf>:
 8026178:	b40e      	push	{r1, r2, r3}
 802617a:	b503      	push	{r0, r1, lr}
 802617c:	4601      	mov	r1, r0
 802617e:	ab03      	add	r3, sp, #12
 8026180:	4805      	ldr	r0, [pc, #20]	@ (8026198 <fiprintf+0x20>)
 8026182:	f853 2b04 	ldr.w	r2, [r3], #4
 8026186:	6800      	ldr	r0, [r0, #0]
 8026188:	9301      	str	r3, [sp, #4]
 802618a:	f000 fa17 	bl	80265bc <_vfiprintf_r>
 802618e:	b002      	add	sp, #8
 8026190:	f85d eb04 	ldr.w	lr, [sp], #4
 8026194:	b003      	add	sp, #12
 8026196:	4770      	bx	lr
 8026198:	200000b8 	.word	0x200000b8

0802619c <_fwalk_sglue>:
 802619c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80261a0:	4607      	mov	r7, r0
 80261a2:	4688      	mov	r8, r1
 80261a4:	4614      	mov	r4, r2
 80261a6:	2600      	movs	r6, #0
 80261a8:	e9d4 9501 	ldrd	r9, r5, [r4, #4]
 80261ac:	f1b9 0901 	subs.w	r9, r9, #1
 80261b0:	d505      	bpl.n	80261be <_fwalk_sglue+0x22>
 80261b2:	6824      	ldr	r4, [r4, #0]
 80261b4:	2c00      	cmp	r4, #0
 80261b6:	d1f7      	bne.n	80261a8 <_fwalk_sglue+0xc>
 80261b8:	4630      	mov	r0, r6
 80261ba:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 80261be:	89ab      	ldrh	r3, [r5, #12]
 80261c0:	2b01      	cmp	r3, #1
 80261c2:	d907      	bls.n	80261d4 <_fwalk_sglue+0x38>
 80261c4:	f9b5 300e 	ldrsh.w	r3, [r5, #14]
 80261c8:	3301      	adds	r3, #1
 80261ca:	d003      	beq.n	80261d4 <_fwalk_sglue+0x38>
 80261cc:	4629      	mov	r1, r5
 80261ce:	4638      	mov	r0, r7
 80261d0:	47c0      	blx	r8
 80261d2:	4306      	orrs	r6, r0
 80261d4:	3568      	adds	r5, #104	@ 0x68
 80261d6:	e7e9      	b.n	80261ac <_fwalk_sglue+0x10>

080261d8 <__sread>:
 80261d8:	b510      	push	{r4, lr}
 80261da:	460c      	mov	r4, r1
 80261dc:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 80261e0:	f000 f898 	bl	8026314 <_read_r>
 80261e4:	2800      	cmp	r0, #0
 80261e6:	bfab      	itete	ge
 80261e8:	6d63      	ldrge	r3, [r4, #84]	@ 0x54
 80261ea:	89a3      	ldrhlt	r3, [r4, #12]
 80261ec:	181b      	addge	r3, r3, r0
 80261ee:	f423 5380 	biclt.w	r3, r3, #4096	@ 0x1000
 80261f2:	bfac      	ite	ge
 80261f4:	6563      	strge	r3, [r4, #84]	@ 0x54
 80261f6:	81a3      	strhlt	r3, [r4, #12]
 80261f8:	bd10      	pop	{r4, pc}

080261fa <__swrite>:
 80261fa:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80261fe:	461f      	mov	r7, r3
 8026200:	898b      	ldrh	r3, [r1, #12]
 8026202:	05db      	lsls	r3, r3, #23
 8026204:	4605      	mov	r5, r0
 8026206:	460c      	mov	r4, r1
 8026208:	4616      	mov	r6, r2
 802620a:	d505      	bpl.n	8026218 <__swrite+0x1e>
 802620c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026210:	2302      	movs	r3, #2
 8026212:	2200      	movs	r2, #0
 8026214:	f000 f86c 	bl	80262f0 <_lseek_r>
 8026218:	89a3      	ldrh	r3, [r4, #12]
 802621a:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 802621e:	f423 5380 	bic.w	r3, r3, #4096	@ 0x1000
 8026222:	81a3      	strh	r3, [r4, #12]
 8026224:	4632      	mov	r2, r6
 8026226:	463b      	mov	r3, r7
 8026228:	4628      	mov	r0, r5
 802622a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 802622e:	f000 b8a7 	b.w	8026380 <_write_r>

08026232 <__sseek>:
 8026232:	b510      	push	{r4, lr}
 8026234:	460c      	mov	r4, r1
 8026236:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802623a:	f000 f859 	bl	80262f0 <_lseek_r>
 802623e:	1c43      	adds	r3, r0, #1
 8026240:	89a3      	ldrh	r3, [r4, #12]
 8026242:	bf15      	itete	ne
 8026244:	6560      	strne	r0, [r4, #84]	@ 0x54
 8026246:	f423 5380 	biceq.w	r3, r3, #4096	@ 0x1000
 802624a:	f443 5380 	orrne.w	r3, r3, #4096	@ 0x1000
 802624e:	81a3      	strheq	r3, [r4, #12]
 8026250:	bf18      	it	ne
 8026252:	81a3      	strhne	r3, [r4, #12]
 8026254:	bd10      	pop	{r4, pc}

08026256 <__sclose>:
 8026256:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 802625a:	f000 b839 	b.w	80262d0 <_close_r>

0802625e <memset>:
 802625e:	4402      	add	r2, r0
 8026260:	4603      	mov	r3, r0
 8026262:	4293      	cmp	r3, r2
 8026264:	d100      	bne.n	8026268 <memset+0xa>
 8026266:	4770      	bx	lr
 8026268:	f803 1b01 	strb.w	r1, [r3], #1
 802626c:	e7f9      	b.n	8026262 <memset+0x4>

0802626e <_raise_r>:
 802626e:	291f      	cmp	r1, #31
 8026270:	b538      	push	{r3, r4, r5, lr}
 8026272:	4605      	mov	r5, r0
 8026274:	460c      	mov	r4, r1
 8026276:	d904      	bls.n	8026282 <_raise_r+0x14>
 8026278:	2316      	movs	r3, #22
 802627a:	6003      	str	r3, [r0, #0]
 802627c:	f04f 30ff 	mov.w	r0, #4294967295
 8026280:	bd38      	pop	{r3, r4, r5, pc}
 8026282:	6bc2      	ldr	r2, [r0, #60]	@ 0x3c
 8026284:	b112      	cbz	r2, 802628c <_raise_r+0x1e>
 8026286:	f852 3021 	ldr.w	r3, [r2, r1, lsl #2]
 802628a:	b94b      	cbnz	r3, 80262a0 <_raise_r+0x32>
 802628c:	4628      	mov	r0, r5
 802628e:	f000 f865 	bl	802635c <_getpid_r>
 8026292:	4622      	mov	r2, r4
 8026294:	4601      	mov	r1, r0
 8026296:	4628      	mov	r0, r5
 8026298:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 802629c:	f000 b84c 	b.w	8026338 <_kill_r>
 80262a0:	2b01      	cmp	r3, #1
 80262a2:	d00a      	beq.n	80262ba <_raise_r+0x4c>
 80262a4:	1c59      	adds	r1, r3, #1
 80262a6:	d103      	bne.n	80262b0 <_raise_r+0x42>
 80262a8:	2316      	movs	r3, #22
 80262aa:	6003      	str	r3, [r0, #0]
 80262ac:	2001      	movs	r0, #1
 80262ae:	e7e7      	b.n	8026280 <_raise_r+0x12>
 80262b0:	2100      	movs	r1, #0
 80262b2:	f842 1024 	str.w	r1, [r2, r4, lsl #2]
 80262b6:	4620      	mov	r0, r4
 80262b8:	4798      	blx	r3
 80262ba:	2000      	movs	r0, #0
 80262bc:	e7e0      	b.n	8026280 <_raise_r+0x12>
	...

080262c0 <raise>:
 80262c0:	4b02      	ldr	r3, [pc, #8]	@ (80262cc <raise+0xc>)
 80262c2:	4601      	mov	r1, r0
 80262c4:	6818      	ldr	r0, [r3, #0]
 80262c6:	f7ff bfd2 	b.w	802626e <_raise_r>
 80262ca:	bf00      	nop
 80262cc:	200000b8 	.word	0x200000b8

080262d0 <_close_r>:
 80262d0:	b538      	push	{r3, r4, r5, lr}
 80262d2:	4d06      	ldr	r5, [pc, #24]	@ (80262ec <_close_r+0x1c>)
 80262d4:	2300      	movs	r3, #0
 80262d6:	4604      	mov	r4, r0
 80262d8:	4608      	mov	r0, r1
 80262da:	602b      	str	r3, [r5, #0]
 80262dc:	f7db fe2c 	bl	8001f38 <_close>
 80262e0:	1c43      	adds	r3, r0, #1
 80262e2:	d102      	bne.n	80262ea <_close_r+0x1a>
 80262e4:	682b      	ldr	r3, [r5, #0]
 80262e6:	b103      	cbz	r3, 80262ea <_close_r+0x1a>
 80262e8:	6023      	str	r3, [r4, #0]
 80262ea:	bd38      	pop	{r3, r4, r5, pc}
 80262ec:	20003aec 	.word	0x20003aec

080262f0 <_lseek_r>:
 80262f0:	b538      	push	{r3, r4, r5, lr}
 80262f2:	4d07      	ldr	r5, [pc, #28]	@ (8026310 <_lseek_r+0x20>)
 80262f4:	4604      	mov	r4, r0
 80262f6:	4608      	mov	r0, r1
 80262f8:	4611      	mov	r1, r2
 80262fa:	2200      	movs	r2, #0
 80262fc:	602a      	str	r2, [r5, #0]
 80262fe:	461a      	mov	r2, r3
 8026300:	f7db fe41 	bl	8001f86 <_lseek>
 8026304:	1c43      	adds	r3, r0, #1
 8026306:	d102      	bne.n	802630e <_lseek_r+0x1e>
 8026308:	682b      	ldr	r3, [r5, #0]
 802630a:	b103      	cbz	r3, 802630e <_lseek_r+0x1e>
 802630c:	6023      	str	r3, [r4, #0]
 802630e:	bd38      	pop	{r3, r4, r5, pc}
 8026310:	20003aec 	.word	0x20003aec

08026314 <_read_r>:
 8026314:	b538      	push	{r3, r4, r5, lr}
 8026316:	4d07      	ldr	r5, [pc, #28]	@ (8026334 <_read_r+0x20>)
 8026318:	4604      	mov	r4, r0
 802631a:	4608      	mov	r0, r1
 802631c:	4611      	mov	r1, r2
 802631e:	2200      	movs	r2, #0
 8026320:	602a      	str	r2, [r5, #0]
 8026322:	461a      	mov	r2, r3
 8026324:	f7db fdcf 	bl	8001ec6 <_read>
 8026328:	1c43      	adds	r3, r0, #1
 802632a:	d102      	bne.n	8026332 <_read_r+0x1e>
 802632c:	682b      	ldr	r3, [r5, #0]
 802632e:	b103      	cbz	r3, 8026332 <_read_r+0x1e>
 8026330:	6023      	str	r3, [r4, #0]
 8026332:	bd38      	pop	{r3, r4, r5, pc}
 8026334:	20003aec 	.word	0x20003aec

08026338 <_kill_r>:
 8026338:	b538      	push	{r3, r4, r5, lr}
 802633a:	4d07      	ldr	r5, [pc, #28]	@ (8026358 <_kill_r+0x20>)
 802633c:	2300      	movs	r3, #0
 802633e:	4604      	mov	r4, r0
 8026340:	4608      	mov	r0, r1
 8026342:	4611      	mov	r1, r2
 8026344:	602b      	str	r3, [r5, #0]
 8026346:	f7db fda3 	bl	8001e90 <_kill>
 802634a:	1c43      	adds	r3, r0, #1
 802634c:	d102      	bne.n	8026354 <_kill_r+0x1c>
 802634e:	682b      	ldr	r3, [r5, #0]
 8026350:	b103      	cbz	r3, 8026354 <_kill_r+0x1c>
 8026352:	6023      	str	r3, [r4, #0]
 8026354:	bd38      	pop	{r3, r4, r5, pc}
 8026356:	bf00      	nop
 8026358:	20003aec 	.word	0x20003aec

0802635c <_getpid_r>:
 802635c:	f7db bd90 	b.w	8001e80 <_getpid>

08026360 <_sbrk_r>:
 8026360:	b538      	push	{r3, r4, r5, lr}
 8026362:	4d06      	ldr	r5, [pc, #24]	@ (802637c <_sbrk_r+0x1c>)
 8026364:	2300      	movs	r3, #0
 8026366:	4604      	mov	r4, r0
 8026368:	4608      	mov	r0, r1
 802636a:	602b      	str	r3, [r5, #0]
 802636c:	f7db fe18 	bl	8001fa0 <_sbrk>
 8026370:	1c43      	adds	r3, r0, #1
 8026372:	d102      	bne.n	802637a <_sbrk_r+0x1a>
 8026374:	682b      	ldr	r3, [r5, #0]
 8026376:	b103      	cbz	r3, 802637a <_sbrk_r+0x1a>
 8026378:	6023      	str	r3, [r4, #0]
 802637a:	bd38      	pop	{r3, r4, r5, pc}
 802637c:	20003aec 	.word	0x20003aec

08026380 <_write_r>:
 8026380:	b538      	push	{r3, r4, r5, lr}
 8026382:	4d07      	ldr	r5, [pc, #28]	@ (80263a0 <_write_r+0x20>)
 8026384:	4604      	mov	r4, r0
 8026386:	4608      	mov	r0, r1
 8026388:	4611      	mov	r1, r2
 802638a:	2200      	movs	r2, #0
 802638c:	602a      	str	r2, [r5, #0]
 802638e:	461a      	mov	r2, r3
 8026390:	f7db fdb6 	bl	8001f00 <_write>
 8026394:	1c43      	adds	r3, r0, #1
 8026396:	d102      	bne.n	802639e <_write_r+0x1e>
 8026398:	682b      	ldr	r3, [r5, #0]
 802639a:	b103      	cbz	r3, 802639e <_write_r+0x1e>
 802639c:	6023      	str	r3, [r4, #0]
 802639e:	bd38      	pop	{r3, r4, r5, pc}
 80263a0:	20003aec 	.word	0x20003aec

080263a4 <__errno>:
 80263a4:	4b01      	ldr	r3, [pc, #4]	@ (80263ac <__errno+0x8>)
 80263a6:	6818      	ldr	r0, [r3, #0]
 80263a8:	4770      	bx	lr
 80263aa:	bf00      	nop
 80263ac:	200000b8 	.word	0x200000b8

080263b0 <__libc_init_array>:
 80263b0:	b570      	push	{r4, r5, r6, lr}
 80263b2:	4d0d      	ldr	r5, [pc, #52]	@ (80263e8 <__libc_init_array+0x38>)
 80263b4:	4c0d      	ldr	r4, [pc, #52]	@ (80263ec <__libc_init_array+0x3c>)
 80263b6:	1b64      	subs	r4, r4, r5
 80263b8:	10a4      	asrs	r4, r4, #2
 80263ba:	2600      	movs	r6, #0
 80263bc:	42a6      	cmp	r6, r4
 80263be:	d109      	bne.n	80263d4 <__libc_init_array+0x24>
 80263c0:	4d0b      	ldr	r5, [pc, #44]	@ (80263f0 <__libc_init_array+0x40>)
 80263c2:	4c0c      	ldr	r4, [pc, #48]	@ (80263f4 <__libc_init_array+0x44>)
 80263c4:	f000 fd64 	bl	8026e90 <_init>
 80263c8:	1b64      	subs	r4, r4, r5
 80263ca:	10a4      	asrs	r4, r4, #2
 80263cc:	2600      	movs	r6, #0
 80263ce:	42a6      	cmp	r6, r4
 80263d0:	d105      	bne.n	80263de <__libc_init_array+0x2e>
 80263d2:	bd70      	pop	{r4, r5, r6, pc}
 80263d4:	f855 3b04 	ldr.w	r3, [r5], #4
 80263d8:	4798      	blx	r3
 80263da:	3601      	adds	r6, #1
 80263dc:	e7ee      	b.n	80263bc <__libc_init_array+0xc>
 80263de:	f855 3b04 	ldr.w	r3, [r5], #4
 80263e2:	4798      	blx	r3
 80263e4:	3601      	adds	r6, #1
 80263e6:	e7f2      	b.n	80263ce <__libc_init_array+0x1e>
 80263e8:	08060334 	.word	0x08060334
 80263ec:	08060334 	.word	0x08060334
 80263f0:	08060334 	.word	0x08060334
 80263f4:	0806034c 	.word	0x0806034c

080263f8 <__retarget_lock_init_recursive>:
 80263f8:	4770      	bx	lr

080263fa <__retarget_lock_acquire_recursive>:
 80263fa:	4770      	bx	lr

080263fc <__retarget_lock_release_recursive>:
 80263fc:	4770      	bx	lr

080263fe <memcpy>:
 80263fe:	440a      	add	r2, r1
 8026400:	4291      	cmp	r1, r2
 8026402:	f100 33ff 	add.w	r3, r0, #4294967295
 8026406:	d100      	bne.n	802640a <memcpy+0xc>
 8026408:	4770      	bx	lr
 802640a:	b510      	push	{r4, lr}
 802640c:	f811 4b01 	ldrb.w	r4, [r1], #1
 8026410:	f803 4f01 	strb.w	r4, [r3, #1]!
 8026414:	4291      	cmp	r1, r2
 8026416:	d1f9      	bne.n	802640c <memcpy+0xe>
 8026418:	bd10      	pop	{r4, pc}
	...

0802641c <__register_exitproc>:
 802641c:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8026420:	4d27      	ldr	r5, [pc, #156]	@ (80264c0 <__register_exitproc+0xa4>)
 8026422:	4607      	mov	r7, r0
 8026424:	6828      	ldr	r0, [r5, #0]
 8026426:	4691      	mov	r9, r2
 8026428:	460e      	mov	r6, r1
 802642a:	4698      	mov	r8, r3
 802642c:	f7ff ffe5 	bl	80263fa <__retarget_lock_acquire_recursive>
 8026430:	4a24      	ldr	r2, [pc, #144]	@ (80264c4 <__register_exitproc+0xa8>)
 8026432:	6814      	ldr	r4, [r2, #0]
 8026434:	b93c      	cbnz	r4, 8026446 <__register_exitproc+0x2a>
 8026436:	4b24      	ldr	r3, [pc, #144]	@ (80264c8 <__register_exitproc+0xac>)
 8026438:	6013      	str	r3, [r2, #0]
 802643a:	4a24      	ldr	r2, [pc, #144]	@ (80264cc <__register_exitproc+0xb0>)
 802643c:	b112      	cbz	r2, 8026444 <__register_exitproc+0x28>
 802643e:	6812      	ldr	r2, [r2, #0]
 8026440:	f8c3 2088 	str.w	r2, [r3, #136]	@ 0x88
 8026444:	4c20      	ldr	r4, [pc, #128]	@ (80264c8 <__register_exitproc+0xac>)
 8026446:	6863      	ldr	r3, [r4, #4]
 8026448:	2b1f      	cmp	r3, #31
 802644a:	dd06      	ble.n	802645a <__register_exitproc+0x3e>
 802644c:	6828      	ldr	r0, [r5, #0]
 802644e:	f7ff ffd5 	bl	80263fc <__retarget_lock_release_recursive>
 8026452:	f04f 30ff 	mov.w	r0, #4294967295
 8026456:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 802645a:	b32f      	cbz	r7, 80264a8 <__register_exitproc+0x8c>
 802645c:	f8d4 0088 	ldr.w	r0, [r4, #136]	@ 0x88
 8026460:	b968      	cbnz	r0, 802647e <__register_exitproc+0x62>
 8026462:	4b1b      	ldr	r3, [pc, #108]	@ (80264d0 <__register_exitproc+0xb4>)
 8026464:	2b00      	cmp	r3, #0
 8026466:	d0f1      	beq.n	802644c <__register_exitproc+0x30>
 8026468:	f44f 7084 	mov.w	r0, #264	@ 0x108
 802646c:	f7ff fd14 	bl	8025e98 <malloc>
 8026470:	2800      	cmp	r0, #0
 8026472:	d0eb      	beq.n	802644c <__register_exitproc+0x30>
 8026474:	2300      	movs	r3, #0
 8026476:	e9c0 3340 	strd	r3, r3, [r0, #256]	@ 0x100
 802647a:	f8c4 0088 	str.w	r0, [r4, #136]	@ 0x88
 802647e:	6863      	ldr	r3, [r4, #4]
 8026480:	f840 9023 	str.w	r9, [r0, r3, lsl #2]
 8026484:	2201      	movs	r2, #1
 8026486:	409a      	lsls	r2, r3
 8026488:	eb00 0183 	add.w	r1, r0, r3, lsl #2
 802648c:	f8d0 3100 	ldr.w	r3, [r0, #256]	@ 0x100
 8026490:	4313      	orrs	r3, r2
 8026492:	f8c0 3100 	str.w	r3, [r0, #256]	@ 0x100
 8026496:	2f02      	cmp	r7, #2
 8026498:	f8c1 8080 	str.w	r8, [r1, #128]	@ 0x80
 802649c:	bf02      	ittt	eq
 802649e:	f8d0 3104 	ldreq.w	r3, [r0, #260]	@ 0x104
 80264a2:	4313      	orreq	r3, r2
 80264a4:	f8c0 3104 	streq.w	r3, [r0, #260]	@ 0x104
 80264a8:	6863      	ldr	r3, [r4, #4]
 80264aa:	6828      	ldr	r0, [r5, #0]
 80264ac:	1c5a      	adds	r2, r3, #1
 80264ae:	3302      	adds	r3, #2
 80264b0:	6062      	str	r2, [r4, #4]
 80264b2:	f844 6023 	str.w	r6, [r4, r3, lsl #2]
 80264b6:	f7ff ffa1 	bl	80263fc <__retarget_lock_release_recursive>
 80264ba:	2000      	movs	r0, #0
 80264bc:	e7cb      	b.n	8026456 <__register_exitproc+0x3a>
 80264be:	bf00      	nop
 80264c0:	20000108 	.word	0x20000108
 80264c4:	20003b80 	.word	0x20003b80
 80264c8:	20003af4 	.word	0x20003af4
 80264cc:	08029b58 	.word	0x08029b58
 80264d0:	08025e99 	.word	0x08025e99

080264d4 <_free_r>:
 80264d4:	b538      	push	{r3, r4, r5, lr}
 80264d6:	4605      	mov	r5, r0
 80264d8:	2900      	cmp	r1, #0
 80264da:	d041      	beq.n	8026560 <_free_r+0x8c>
 80264dc:	f851 3c04 	ldr.w	r3, [r1, #-4]
 80264e0:	1f0c      	subs	r4, r1, #4
 80264e2:	2b00      	cmp	r3, #0
 80264e4:	bfb8      	it	lt
 80264e6:	18e4      	addlt	r4, r4, r3
 80264e8:	f7ff fd88 	bl	8025ffc <__malloc_lock>
 80264ec:	4a1d      	ldr	r2, [pc, #116]	@ (8026564 <_free_r+0x90>)
 80264ee:	6813      	ldr	r3, [r2, #0]
 80264f0:	b933      	cbnz	r3, 8026500 <_free_r+0x2c>
 80264f2:	6063      	str	r3, [r4, #4]
 80264f4:	6014      	str	r4, [r2, #0]
 80264f6:	4628      	mov	r0, r5
 80264f8:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 80264fc:	f7ff bd84 	b.w	8026008 <__malloc_unlock>
 8026500:	42a3      	cmp	r3, r4
 8026502:	d908      	bls.n	8026516 <_free_r+0x42>
 8026504:	6820      	ldr	r0, [r4, #0]
 8026506:	1821      	adds	r1, r4, r0
 8026508:	428b      	cmp	r3, r1
 802650a:	bf01      	itttt	eq
 802650c:	6819      	ldreq	r1, [r3, #0]
 802650e:	685b      	ldreq	r3, [r3, #4]
 8026510:	1809      	addeq	r1, r1, r0
 8026512:	6021      	streq	r1, [r4, #0]
 8026514:	e7ed      	b.n	80264f2 <_free_r+0x1e>
 8026516:	461a      	mov	r2, r3
 8026518:	685b      	ldr	r3, [r3, #4]
 802651a:	b10b      	cbz	r3, 8026520 <_free_r+0x4c>
 802651c:	42a3      	cmp	r3, r4
 802651e:	d9fa      	bls.n	8026516 <_free_r+0x42>
 8026520:	6811      	ldr	r1, [r2, #0]
 8026522:	1850      	adds	r0, r2, r1
 8026524:	42a0      	cmp	r0, r4
 8026526:	d10b      	bne.n	8026540 <_free_r+0x6c>
 8026528:	6820      	ldr	r0, [r4, #0]
 802652a:	4401      	add	r1, r0
 802652c:	1850      	adds	r0, r2, r1
 802652e:	4283      	cmp	r3, r0
 8026530:	6011      	str	r1, [r2, #0]
 8026532:	d1e0      	bne.n	80264f6 <_free_r+0x22>
 8026534:	6818      	ldr	r0, [r3, #0]
 8026536:	685b      	ldr	r3, [r3, #4]
 8026538:	6053      	str	r3, [r2, #4]
 802653a:	4408      	add	r0, r1
 802653c:	6010      	str	r0, [r2, #0]
 802653e:	e7da      	b.n	80264f6 <_free_r+0x22>
 8026540:	d902      	bls.n	8026548 <_free_r+0x74>
 8026542:	230c      	movs	r3, #12
 8026544:	602b      	str	r3, [r5, #0]
 8026546:	e7d6      	b.n	80264f6 <_free_r+0x22>
 8026548:	6820      	ldr	r0, [r4, #0]
 802654a:	1821      	adds	r1, r4, r0
 802654c:	428b      	cmp	r3, r1
 802654e:	bf04      	itt	eq
 8026550:	6819      	ldreq	r1, [r3, #0]
 8026552:	685b      	ldreq	r3, [r3, #4]
 8026554:	6063      	str	r3, [r4, #4]
 8026556:	bf04      	itt	eq
 8026558:	1809      	addeq	r1, r1, r0
 802655a:	6021      	streq	r1, [r4, #0]
 802655c:	6054      	str	r4, [r2, #4]
 802655e:	e7ca      	b.n	80264f6 <_free_r+0x22>
 8026560:	bd38      	pop	{r3, r4, r5, pc}
 8026562:	bf00      	nop
 8026564:	200039ac 	.word	0x200039ac

08026568 <__sfputc_r>:
 8026568:	6893      	ldr	r3, [r2, #8]
 802656a:	3b01      	subs	r3, #1
 802656c:	2b00      	cmp	r3, #0
 802656e:	b410      	push	{r4}
 8026570:	6093      	str	r3, [r2, #8]
 8026572:	da08      	bge.n	8026586 <__sfputc_r+0x1e>
 8026574:	6994      	ldr	r4, [r2, #24]
 8026576:	42a3      	cmp	r3, r4
 8026578:	db01      	blt.n	802657e <__sfputc_r+0x16>
 802657a:	290a      	cmp	r1, #10
 802657c:	d103      	bne.n	8026586 <__sfputc_r+0x1e>
 802657e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026582:	f000 bb6d 	b.w	8026c60 <__swbuf_r>
 8026586:	6813      	ldr	r3, [r2, #0]
 8026588:	1c58      	adds	r0, r3, #1
 802658a:	6010      	str	r0, [r2, #0]
 802658c:	7019      	strb	r1, [r3, #0]
 802658e:	4608      	mov	r0, r1
 8026590:	f85d 4b04 	ldr.w	r4, [sp], #4
 8026594:	4770      	bx	lr

08026596 <__sfputs_r>:
 8026596:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026598:	4606      	mov	r6, r0
 802659a:	460f      	mov	r7, r1
 802659c:	4614      	mov	r4, r2
 802659e:	18d5      	adds	r5, r2, r3
 80265a0:	42ac      	cmp	r4, r5
 80265a2:	d101      	bne.n	80265a8 <__sfputs_r+0x12>
 80265a4:	2000      	movs	r0, #0
 80265a6:	e007      	b.n	80265b8 <__sfputs_r+0x22>
 80265a8:	f814 1b01 	ldrb.w	r1, [r4], #1
 80265ac:	463a      	mov	r2, r7
 80265ae:	4630      	mov	r0, r6
 80265b0:	f7ff ffda 	bl	8026568 <__sfputc_r>
 80265b4:	1c43      	adds	r3, r0, #1
 80265b6:	d1f3      	bne.n	80265a0 <__sfputs_r+0xa>
 80265b8:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
	...

080265bc <_vfiprintf_r>:
 80265bc:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80265c0:	460d      	mov	r5, r1
 80265c2:	b09d      	sub	sp, #116	@ 0x74
 80265c4:	4614      	mov	r4, r2
 80265c6:	4698      	mov	r8, r3
 80265c8:	4606      	mov	r6, r0
 80265ca:	b118      	cbz	r0, 80265d4 <_vfiprintf_r+0x18>
 80265cc:	6a03      	ldr	r3, [r0, #32]
 80265ce:	b90b      	cbnz	r3, 80265d4 <_vfiprintf_r+0x18>
 80265d0:	f7ff fdba 	bl	8026148 <__sinit>
 80265d4:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80265d6:	07d9      	lsls	r1, r3, #31
 80265d8:	d405      	bmi.n	80265e6 <_vfiprintf_r+0x2a>
 80265da:	89ab      	ldrh	r3, [r5, #12]
 80265dc:	059a      	lsls	r2, r3, #22
 80265de:	d402      	bmi.n	80265e6 <_vfiprintf_r+0x2a>
 80265e0:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80265e2:	f7ff ff0a 	bl	80263fa <__retarget_lock_acquire_recursive>
 80265e6:	89ab      	ldrh	r3, [r5, #12]
 80265e8:	071b      	lsls	r3, r3, #28
 80265ea:	d501      	bpl.n	80265f0 <_vfiprintf_r+0x34>
 80265ec:	692b      	ldr	r3, [r5, #16]
 80265ee:	b99b      	cbnz	r3, 8026618 <_vfiprintf_r+0x5c>
 80265f0:	4629      	mov	r1, r5
 80265f2:	4630      	mov	r0, r6
 80265f4:	f000 fb72 	bl	8026cdc <__swsetup_r>
 80265f8:	b170      	cbz	r0, 8026618 <_vfiprintf_r+0x5c>
 80265fa:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80265fc:	07dc      	lsls	r4, r3, #31
 80265fe:	d504      	bpl.n	802660a <_vfiprintf_r+0x4e>
 8026600:	f04f 30ff 	mov.w	r0, #4294967295
 8026604:	b01d      	add	sp, #116	@ 0x74
 8026606:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 802660a:	89ab      	ldrh	r3, [r5, #12]
 802660c:	0598      	lsls	r0, r3, #22
 802660e:	d4f7      	bmi.n	8026600 <_vfiprintf_r+0x44>
 8026610:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 8026612:	f7ff fef3 	bl	80263fc <__retarget_lock_release_recursive>
 8026616:	e7f3      	b.n	8026600 <_vfiprintf_r+0x44>
 8026618:	2300      	movs	r3, #0
 802661a:	9309      	str	r3, [sp, #36]	@ 0x24
 802661c:	2320      	movs	r3, #32
 802661e:	f88d 3029 	strb.w	r3, [sp, #41]	@ 0x29
 8026622:	f8cd 800c 	str.w	r8, [sp, #12]
 8026626:	2330      	movs	r3, #48	@ 0x30
 8026628:	f8df 81ac 	ldr.w	r8, [pc, #428]	@ 80267d8 <_vfiprintf_r+0x21c>
 802662c:	f88d 302a 	strb.w	r3, [sp, #42]	@ 0x2a
 8026630:	f04f 0901 	mov.w	r9, #1
 8026634:	4623      	mov	r3, r4
 8026636:	469a      	mov	sl, r3
 8026638:	f813 2b01 	ldrb.w	r2, [r3], #1
 802663c:	b10a      	cbz	r2, 8026642 <_vfiprintf_r+0x86>
 802663e:	2a25      	cmp	r2, #37	@ 0x25
 8026640:	d1f9      	bne.n	8026636 <_vfiprintf_r+0x7a>
 8026642:	ebba 0b04 	subs.w	fp, sl, r4
 8026646:	d00b      	beq.n	8026660 <_vfiprintf_r+0xa4>
 8026648:	465b      	mov	r3, fp
 802664a:	4622      	mov	r2, r4
 802664c:	4629      	mov	r1, r5
 802664e:	4630      	mov	r0, r6
 8026650:	f7ff ffa1 	bl	8026596 <__sfputs_r>
 8026654:	3001      	adds	r0, #1
 8026656:	f000 80a7 	beq.w	80267a8 <_vfiprintf_r+0x1ec>
 802665a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 802665c:	445a      	add	r2, fp
 802665e:	9209      	str	r2, [sp, #36]	@ 0x24
 8026660:	f89a 3000 	ldrb.w	r3, [sl]
 8026664:	2b00      	cmp	r3, #0
 8026666:	f000 809f 	beq.w	80267a8 <_vfiprintf_r+0x1ec>
 802666a:	2300      	movs	r3, #0
 802666c:	f04f 32ff 	mov.w	r2, #4294967295
 8026670:	e9cd 2305 	strd	r2, r3, [sp, #20]
 8026674:	f10a 0a01 	add.w	sl, sl, #1
 8026678:	9304      	str	r3, [sp, #16]
 802667a:	9307      	str	r3, [sp, #28]
 802667c:	f88d 3053 	strb.w	r3, [sp, #83]	@ 0x53
 8026680:	931a      	str	r3, [sp, #104]	@ 0x68
 8026682:	4654      	mov	r4, sl
 8026684:	2205      	movs	r2, #5
 8026686:	f814 1b01 	ldrb.w	r1, [r4], #1
 802668a:	4853      	ldr	r0, [pc, #332]	@ (80267d8 <_vfiprintf_r+0x21c>)
 802668c:	f7d9 fdc0 	bl	8000210 <memchr>
 8026690:	9a04      	ldr	r2, [sp, #16]
 8026692:	b9d8      	cbnz	r0, 80266cc <_vfiprintf_r+0x110>
 8026694:	06d1      	lsls	r1, r2, #27
 8026696:	bf44      	itt	mi
 8026698:	2320      	movmi	r3, #32
 802669a:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 802669e:	0713      	lsls	r3, r2, #28
 80266a0:	bf44      	itt	mi
 80266a2:	232b      	movmi	r3, #43	@ 0x2b
 80266a4:	f88d 3053 	strbmi.w	r3, [sp, #83]	@ 0x53
 80266a8:	f89a 3000 	ldrb.w	r3, [sl]
 80266ac:	2b2a      	cmp	r3, #42	@ 0x2a
 80266ae:	d015      	beq.n	80266dc <_vfiprintf_r+0x120>
 80266b0:	9a07      	ldr	r2, [sp, #28]
 80266b2:	4654      	mov	r4, sl
 80266b4:	2000      	movs	r0, #0
 80266b6:	f04f 0c0a 	mov.w	ip, #10
 80266ba:	4621      	mov	r1, r4
 80266bc:	f811 3b01 	ldrb.w	r3, [r1], #1
 80266c0:	3b30      	subs	r3, #48	@ 0x30
 80266c2:	2b09      	cmp	r3, #9
 80266c4:	d94b      	bls.n	802675e <_vfiprintf_r+0x1a2>
 80266c6:	b1b0      	cbz	r0, 80266f6 <_vfiprintf_r+0x13a>
 80266c8:	9207      	str	r2, [sp, #28]
 80266ca:	e014      	b.n	80266f6 <_vfiprintf_r+0x13a>
 80266cc:	eba0 0308 	sub.w	r3, r0, r8
 80266d0:	fa09 f303 	lsl.w	r3, r9, r3
 80266d4:	4313      	orrs	r3, r2
 80266d6:	9304      	str	r3, [sp, #16]
 80266d8:	46a2      	mov	sl, r4
 80266da:	e7d2      	b.n	8026682 <_vfiprintf_r+0xc6>
 80266dc:	9b03      	ldr	r3, [sp, #12]
 80266de:	1d19      	adds	r1, r3, #4
 80266e0:	681b      	ldr	r3, [r3, #0]
 80266e2:	9103      	str	r1, [sp, #12]
 80266e4:	2b00      	cmp	r3, #0
 80266e6:	bfbb      	ittet	lt
 80266e8:	425b      	neglt	r3, r3
 80266ea:	f042 0202 	orrlt.w	r2, r2, #2
 80266ee:	9307      	strge	r3, [sp, #28]
 80266f0:	9307      	strlt	r3, [sp, #28]
 80266f2:	bfb8      	it	lt
 80266f4:	9204      	strlt	r2, [sp, #16]
 80266f6:	7823      	ldrb	r3, [r4, #0]
 80266f8:	2b2e      	cmp	r3, #46	@ 0x2e
 80266fa:	d10a      	bne.n	8026712 <_vfiprintf_r+0x156>
 80266fc:	7863      	ldrb	r3, [r4, #1]
 80266fe:	2b2a      	cmp	r3, #42	@ 0x2a
 8026700:	d132      	bne.n	8026768 <_vfiprintf_r+0x1ac>
 8026702:	9b03      	ldr	r3, [sp, #12]
 8026704:	1d1a      	adds	r2, r3, #4
 8026706:	681b      	ldr	r3, [r3, #0]
 8026708:	9203      	str	r2, [sp, #12]
 802670a:	ea43 73e3 	orr.w	r3, r3, r3, asr #31
 802670e:	3402      	adds	r4, #2
 8026710:	9305      	str	r3, [sp, #20]
 8026712:	f8df a0d4 	ldr.w	sl, [pc, #212]	@ 80267e8 <_vfiprintf_r+0x22c>
 8026716:	7821      	ldrb	r1, [r4, #0]
 8026718:	2203      	movs	r2, #3
 802671a:	4650      	mov	r0, sl
 802671c:	f7d9 fd78 	bl	8000210 <memchr>
 8026720:	b138      	cbz	r0, 8026732 <_vfiprintf_r+0x176>
 8026722:	9b04      	ldr	r3, [sp, #16]
 8026724:	eba0 000a 	sub.w	r0, r0, sl
 8026728:	2240      	movs	r2, #64	@ 0x40
 802672a:	4082      	lsls	r2, r0
 802672c:	4313      	orrs	r3, r2
 802672e:	3401      	adds	r4, #1
 8026730:	9304      	str	r3, [sp, #16]
 8026732:	f814 1b01 	ldrb.w	r1, [r4], #1
 8026736:	4829      	ldr	r0, [pc, #164]	@ (80267dc <_vfiprintf_r+0x220>)
 8026738:	f88d 1028 	strb.w	r1, [sp, #40]	@ 0x28
 802673c:	2206      	movs	r2, #6
 802673e:	f7d9 fd67 	bl	8000210 <memchr>
 8026742:	2800      	cmp	r0, #0
 8026744:	d03f      	beq.n	80267c6 <_vfiprintf_r+0x20a>
 8026746:	4b26      	ldr	r3, [pc, #152]	@ (80267e0 <_vfiprintf_r+0x224>)
 8026748:	bb1b      	cbnz	r3, 8026792 <_vfiprintf_r+0x1d6>
 802674a:	9b03      	ldr	r3, [sp, #12]
 802674c:	3307      	adds	r3, #7
 802674e:	f023 0307 	bic.w	r3, r3, #7
 8026752:	3308      	adds	r3, #8
 8026754:	9303      	str	r3, [sp, #12]
 8026756:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8026758:	443b      	add	r3, r7
 802675a:	9309      	str	r3, [sp, #36]	@ 0x24
 802675c:	e76a      	b.n	8026634 <_vfiprintf_r+0x78>
 802675e:	fb0c 3202 	mla	r2, ip, r2, r3
 8026762:	460c      	mov	r4, r1
 8026764:	2001      	movs	r0, #1
 8026766:	e7a8      	b.n	80266ba <_vfiprintf_r+0xfe>
 8026768:	2300      	movs	r3, #0
 802676a:	3401      	adds	r4, #1
 802676c:	9305      	str	r3, [sp, #20]
 802676e:	4619      	mov	r1, r3
 8026770:	f04f 0c0a 	mov.w	ip, #10
 8026774:	4620      	mov	r0, r4
 8026776:	f810 2b01 	ldrb.w	r2, [r0], #1
 802677a:	3a30      	subs	r2, #48	@ 0x30
 802677c:	2a09      	cmp	r2, #9
 802677e:	d903      	bls.n	8026788 <_vfiprintf_r+0x1cc>
 8026780:	2b00      	cmp	r3, #0
 8026782:	d0c6      	beq.n	8026712 <_vfiprintf_r+0x156>
 8026784:	9105      	str	r1, [sp, #20]
 8026786:	e7c4      	b.n	8026712 <_vfiprintf_r+0x156>
 8026788:	fb0c 2101 	mla	r1, ip, r1, r2
 802678c:	4604      	mov	r4, r0
 802678e:	2301      	movs	r3, #1
 8026790:	e7f0      	b.n	8026774 <_vfiprintf_r+0x1b8>
 8026792:	ab03      	add	r3, sp, #12
 8026794:	9300      	str	r3, [sp, #0]
 8026796:	462a      	mov	r2, r5
 8026798:	4b12      	ldr	r3, [pc, #72]	@ (80267e4 <_vfiprintf_r+0x228>)
 802679a:	a904      	add	r1, sp, #16
 802679c:	4630      	mov	r0, r6
 802679e:	f3af 8000 	nop.w
 80267a2:	4607      	mov	r7, r0
 80267a4:	1c78      	adds	r0, r7, #1
 80267a6:	d1d6      	bne.n	8026756 <_vfiprintf_r+0x19a>
 80267a8:	6e6b      	ldr	r3, [r5, #100]	@ 0x64
 80267aa:	07d9      	lsls	r1, r3, #31
 80267ac:	d405      	bmi.n	80267ba <_vfiprintf_r+0x1fe>
 80267ae:	89ab      	ldrh	r3, [r5, #12]
 80267b0:	059a      	lsls	r2, r3, #22
 80267b2:	d402      	bmi.n	80267ba <_vfiprintf_r+0x1fe>
 80267b4:	6da8      	ldr	r0, [r5, #88]	@ 0x58
 80267b6:	f7ff fe21 	bl	80263fc <__retarget_lock_release_recursive>
 80267ba:	89ab      	ldrh	r3, [r5, #12]
 80267bc:	065b      	lsls	r3, r3, #25
 80267be:	f53f af1f 	bmi.w	8026600 <_vfiprintf_r+0x44>
 80267c2:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80267c4:	e71e      	b.n	8026604 <_vfiprintf_r+0x48>
 80267c6:	ab03      	add	r3, sp, #12
 80267c8:	9300      	str	r3, [sp, #0]
 80267ca:	462a      	mov	r2, r5
 80267cc:	4b05      	ldr	r3, [pc, #20]	@ (80267e4 <_vfiprintf_r+0x228>)
 80267ce:	a904      	add	r1, sp, #16
 80267d0:	4630      	mov	r0, r6
 80267d2:	f000 f879 	bl	80268c8 <_printf_i>
 80267d6:	e7e4      	b.n	80267a2 <_vfiprintf_r+0x1e6>
 80267d8:	08029b5c 	.word	0x08029b5c
 80267dc:	08029b66 	.word	0x08029b66
 80267e0:	00000000 	.word	0x00000000
 80267e4:	08026597 	.word	0x08026597
 80267e8:	08029b62 	.word	0x08029b62

080267ec <_printf_common>:
 80267ec:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 80267f0:	4616      	mov	r6, r2
 80267f2:	4698      	mov	r8, r3
 80267f4:	688a      	ldr	r2, [r1, #8]
 80267f6:	690b      	ldr	r3, [r1, #16]
 80267f8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80267fc:	4293      	cmp	r3, r2
 80267fe:	bfb8      	it	lt
 8026800:	4613      	movlt	r3, r2
 8026802:	6033      	str	r3, [r6, #0]
 8026804:	f891 2043 	ldrb.w	r2, [r1, #67]	@ 0x43
 8026808:	4607      	mov	r7, r0
 802680a:	460c      	mov	r4, r1
 802680c:	b10a      	cbz	r2, 8026812 <_printf_common+0x26>
 802680e:	3301      	adds	r3, #1
 8026810:	6033      	str	r3, [r6, #0]
 8026812:	6823      	ldr	r3, [r4, #0]
 8026814:	0699      	lsls	r1, r3, #26
 8026816:	bf42      	ittt	mi
 8026818:	6833      	ldrmi	r3, [r6, #0]
 802681a:	3302      	addmi	r3, #2
 802681c:	6033      	strmi	r3, [r6, #0]
 802681e:	6825      	ldr	r5, [r4, #0]
 8026820:	f015 0506 	ands.w	r5, r5, #6
 8026824:	d106      	bne.n	8026834 <_printf_common+0x48>
 8026826:	f104 0a19 	add.w	sl, r4, #25
 802682a:	68e3      	ldr	r3, [r4, #12]
 802682c:	6832      	ldr	r2, [r6, #0]
 802682e:	1a9b      	subs	r3, r3, r2
 8026830:	42ab      	cmp	r3, r5
 8026832:	dc26      	bgt.n	8026882 <_printf_common+0x96>
 8026834:	f894 3043 	ldrb.w	r3, [r4, #67]	@ 0x43
 8026838:	6822      	ldr	r2, [r4, #0]
 802683a:	3b00      	subs	r3, #0
 802683c:	bf18      	it	ne
 802683e:	2301      	movne	r3, #1
 8026840:	0692      	lsls	r2, r2, #26
 8026842:	d42b      	bmi.n	802689c <_printf_common+0xb0>
 8026844:	f104 0243 	add.w	r2, r4, #67	@ 0x43
 8026848:	4641      	mov	r1, r8
 802684a:	4638      	mov	r0, r7
 802684c:	47c8      	blx	r9
 802684e:	3001      	adds	r0, #1
 8026850:	d01e      	beq.n	8026890 <_printf_common+0xa4>
 8026852:	6823      	ldr	r3, [r4, #0]
 8026854:	6922      	ldr	r2, [r4, #16]
 8026856:	f003 0306 	and.w	r3, r3, #6
 802685a:	2b04      	cmp	r3, #4
 802685c:	bf02      	ittt	eq
 802685e:	68e5      	ldreq	r5, [r4, #12]
 8026860:	6833      	ldreq	r3, [r6, #0]
 8026862:	1aed      	subeq	r5, r5, r3
 8026864:	68a3      	ldr	r3, [r4, #8]
 8026866:	bf0c      	ite	eq
 8026868:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 802686c:	2500      	movne	r5, #0
 802686e:	4293      	cmp	r3, r2
 8026870:	bfc4      	itt	gt
 8026872:	1a9b      	subgt	r3, r3, r2
 8026874:	18ed      	addgt	r5, r5, r3
 8026876:	2600      	movs	r6, #0
 8026878:	341a      	adds	r4, #26
 802687a:	42b5      	cmp	r5, r6
 802687c:	d11a      	bne.n	80268b4 <_printf_common+0xc8>
 802687e:	2000      	movs	r0, #0
 8026880:	e008      	b.n	8026894 <_printf_common+0xa8>
 8026882:	2301      	movs	r3, #1
 8026884:	4652      	mov	r2, sl
 8026886:	4641      	mov	r1, r8
 8026888:	4638      	mov	r0, r7
 802688a:	47c8      	blx	r9
 802688c:	3001      	adds	r0, #1
 802688e:	d103      	bne.n	8026898 <_printf_common+0xac>
 8026890:	f04f 30ff 	mov.w	r0, #4294967295
 8026894:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026898:	3501      	adds	r5, #1
 802689a:	e7c6      	b.n	802682a <_printf_common+0x3e>
 802689c:	18e1      	adds	r1, r4, r3
 802689e:	1c5a      	adds	r2, r3, #1
 80268a0:	2030      	movs	r0, #48	@ 0x30
 80268a2:	f881 0043 	strb.w	r0, [r1, #67]	@ 0x43
 80268a6:	4422      	add	r2, r4
 80268a8:	f894 1045 	ldrb.w	r1, [r4, #69]	@ 0x45
 80268ac:	f882 1043 	strb.w	r1, [r2, #67]	@ 0x43
 80268b0:	3302      	adds	r3, #2
 80268b2:	e7c7      	b.n	8026844 <_printf_common+0x58>
 80268b4:	2301      	movs	r3, #1
 80268b6:	4622      	mov	r2, r4
 80268b8:	4641      	mov	r1, r8
 80268ba:	4638      	mov	r0, r7
 80268bc:	47c8      	blx	r9
 80268be:	3001      	adds	r0, #1
 80268c0:	d0e6      	beq.n	8026890 <_printf_common+0xa4>
 80268c2:	3601      	adds	r6, #1
 80268c4:	e7d9      	b.n	802687a <_printf_common+0x8e>
	...

080268c8 <_printf_i>:
 80268c8:	e92d 47ff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, lr}
 80268cc:	7e0f      	ldrb	r7, [r1, #24]
 80268ce:	9e0c      	ldr	r6, [sp, #48]	@ 0x30
 80268d0:	2f78      	cmp	r7, #120	@ 0x78
 80268d2:	4691      	mov	r9, r2
 80268d4:	4680      	mov	r8, r0
 80268d6:	460c      	mov	r4, r1
 80268d8:	469a      	mov	sl, r3
 80268da:	f101 0243 	add.w	r2, r1, #67	@ 0x43
 80268de:	d807      	bhi.n	80268f0 <_printf_i+0x28>
 80268e0:	2f62      	cmp	r7, #98	@ 0x62
 80268e2:	d80a      	bhi.n	80268fa <_printf_i+0x32>
 80268e4:	2f00      	cmp	r7, #0
 80268e6:	f000 80d2 	beq.w	8026a8e <_printf_i+0x1c6>
 80268ea:	2f58      	cmp	r7, #88	@ 0x58
 80268ec:	f000 80b9 	beq.w	8026a62 <_printf_i+0x19a>
 80268f0:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 80268f4:	f884 7042 	strb.w	r7, [r4, #66]	@ 0x42
 80268f8:	e03a      	b.n	8026970 <_printf_i+0xa8>
 80268fa:	f1a7 0363 	sub.w	r3, r7, #99	@ 0x63
 80268fe:	2b15      	cmp	r3, #21
 8026900:	d8f6      	bhi.n	80268f0 <_printf_i+0x28>
 8026902:	a101      	add	r1, pc, #4	@ (adr r1, 8026908 <_printf_i+0x40>)
 8026904:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8026908:	08026961 	.word	0x08026961
 802690c:	08026975 	.word	0x08026975
 8026910:	080268f1 	.word	0x080268f1
 8026914:	080268f1 	.word	0x080268f1
 8026918:	080268f1 	.word	0x080268f1
 802691c:	080268f1 	.word	0x080268f1
 8026920:	08026975 	.word	0x08026975
 8026924:	080268f1 	.word	0x080268f1
 8026928:	080268f1 	.word	0x080268f1
 802692c:	080268f1 	.word	0x080268f1
 8026930:	080268f1 	.word	0x080268f1
 8026934:	08026a75 	.word	0x08026a75
 8026938:	0802699f 	.word	0x0802699f
 802693c:	08026a2f 	.word	0x08026a2f
 8026940:	080268f1 	.word	0x080268f1
 8026944:	080268f1 	.word	0x080268f1
 8026948:	08026a97 	.word	0x08026a97
 802694c:	080268f1 	.word	0x080268f1
 8026950:	0802699f 	.word	0x0802699f
 8026954:	080268f1 	.word	0x080268f1
 8026958:	080268f1 	.word	0x080268f1
 802695c:	08026a37 	.word	0x08026a37
 8026960:	6833      	ldr	r3, [r6, #0]
 8026962:	1d1a      	adds	r2, r3, #4
 8026964:	681b      	ldr	r3, [r3, #0]
 8026966:	6032      	str	r2, [r6, #0]
 8026968:	f104 0642 	add.w	r6, r4, #66	@ 0x42
 802696c:	f884 3042 	strb.w	r3, [r4, #66]	@ 0x42
 8026970:	2301      	movs	r3, #1
 8026972:	e09d      	b.n	8026ab0 <_printf_i+0x1e8>
 8026974:	6833      	ldr	r3, [r6, #0]
 8026976:	6820      	ldr	r0, [r4, #0]
 8026978:	1d19      	adds	r1, r3, #4
 802697a:	6031      	str	r1, [r6, #0]
 802697c:	0606      	lsls	r6, r0, #24
 802697e:	d501      	bpl.n	8026984 <_printf_i+0xbc>
 8026980:	681d      	ldr	r5, [r3, #0]
 8026982:	e003      	b.n	802698c <_printf_i+0xc4>
 8026984:	0645      	lsls	r5, r0, #25
 8026986:	d5fb      	bpl.n	8026980 <_printf_i+0xb8>
 8026988:	f9b3 5000 	ldrsh.w	r5, [r3]
 802698c:	2d00      	cmp	r5, #0
 802698e:	da03      	bge.n	8026998 <_printf_i+0xd0>
 8026990:	232d      	movs	r3, #45	@ 0x2d
 8026992:	426d      	negs	r5, r5
 8026994:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8026998:	4859      	ldr	r0, [pc, #356]	@ (8026b00 <_printf_i+0x238>)
 802699a:	230a      	movs	r3, #10
 802699c:	e011      	b.n	80269c2 <_printf_i+0xfa>
 802699e:	6821      	ldr	r1, [r4, #0]
 80269a0:	6833      	ldr	r3, [r6, #0]
 80269a2:	0608      	lsls	r0, r1, #24
 80269a4:	f853 5b04 	ldr.w	r5, [r3], #4
 80269a8:	d402      	bmi.n	80269b0 <_printf_i+0xe8>
 80269aa:	0649      	lsls	r1, r1, #25
 80269ac:	bf48      	it	mi
 80269ae:	b2ad      	uxthmi	r5, r5
 80269b0:	2f6f      	cmp	r7, #111	@ 0x6f
 80269b2:	4853      	ldr	r0, [pc, #332]	@ (8026b00 <_printf_i+0x238>)
 80269b4:	6033      	str	r3, [r6, #0]
 80269b6:	bf14      	ite	ne
 80269b8:	230a      	movne	r3, #10
 80269ba:	2308      	moveq	r3, #8
 80269bc:	2100      	movs	r1, #0
 80269be:	f884 1043 	strb.w	r1, [r4, #67]	@ 0x43
 80269c2:	6866      	ldr	r6, [r4, #4]
 80269c4:	60a6      	str	r6, [r4, #8]
 80269c6:	2e00      	cmp	r6, #0
 80269c8:	bfa2      	ittt	ge
 80269ca:	6821      	ldrge	r1, [r4, #0]
 80269cc:	f021 0104 	bicge.w	r1, r1, #4
 80269d0:	6021      	strge	r1, [r4, #0]
 80269d2:	b90d      	cbnz	r5, 80269d8 <_printf_i+0x110>
 80269d4:	2e00      	cmp	r6, #0
 80269d6:	d04b      	beq.n	8026a70 <_printf_i+0x1a8>
 80269d8:	4616      	mov	r6, r2
 80269da:	fbb5 f1f3 	udiv	r1, r5, r3
 80269de:	fb03 5711 	mls	r7, r3, r1, r5
 80269e2:	5dc7      	ldrb	r7, [r0, r7]
 80269e4:	f806 7d01 	strb.w	r7, [r6, #-1]!
 80269e8:	462f      	mov	r7, r5
 80269ea:	42bb      	cmp	r3, r7
 80269ec:	460d      	mov	r5, r1
 80269ee:	d9f4      	bls.n	80269da <_printf_i+0x112>
 80269f0:	2b08      	cmp	r3, #8
 80269f2:	d10b      	bne.n	8026a0c <_printf_i+0x144>
 80269f4:	6823      	ldr	r3, [r4, #0]
 80269f6:	07df      	lsls	r7, r3, #31
 80269f8:	d508      	bpl.n	8026a0c <_printf_i+0x144>
 80269fa:	6923      	ldr	r3, [r4, #16]
 80269fc:	6861      	ldr	r1, [r4, #4]
 80269fe:	4299      	cmp	r1, r3
 8026a00:	bfde      	ittt	le
 8026a02:	2330      	movle	r3, #48	@ 0x30
 8026a04:	f806 3c01 	strble.w	r3, [r6, #-1]
 8026a08:	f106 36ff 	addle.w	r6, r6, #4294967295
 8026a0c:	1b92      	subs	r2, r2, r6
 8026a0e:	6122      	str	r2, [r4, #16]
 8026a10:	f8cd a000 	str.w	sl, [sp]
 8026a14:	464b      	mov	r3, r9
 8026a16:	aa03      	add	r2, sp, #12
 8026a18:	4621      	mov	r1, r4
 8026a1a:	4640      	mov	r0, r8
 8026a1c:	f7ff fee6 	bl	80267ec <_printf_common>
 8026a20:	3001      	adds	r0, #1
 8026a22:	d14a      	bne.n	8026aba <_printf_i+0x1f2>
 8026a24:	f04f 30ff 	mov.w	r0, #4294967295
 8026a28:	b004      	add	sp, #16
 8026a2a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8026a2e:	6823      	ldr	r3, [r4, #0]
 8026a30:	f043 0320 	orr.w	r3, r3, #32
 8026a34:	6023      	str	r3, [r4, #0]
 8026a36:	4833      	ldr	r0, [pc, #204]	@ (8026b04 <_printf_i+0x23c>)
 8026a38:	2778      	movs	r7, #120	@ 0x78
 8026a3a:	f884 7045 	strb.w	r7, [r4, #69]	@ 0x45
 8026a3e:	6823      	ldr	r3, [r4, #0]
 8026a40:	6831      	ldr	r1, [r6, #0]
 8026a42:	061f      	lsls	r7, r3, #24
 8026a44:	f851 5b04 	ldr.w	r5, [r1], #4
 8026a48:	d402      	bmi.n	8026a50 <_printf_i+0x188>
 8026a4a:	065f      	lsls	r7, r3, #25
 8026a4c:	bf48      	it	mi
 8026a4e:	b2ad      	uxthmi	r5, r5
 8026a50:	6031      	str	r1, [r6, #0]
 8026a52:	07d9      	lsls	r1, r3, #31
 8026a54:	bf44      	itt	mi
 8026a56:	f043 0320 	orrmi.w	r3, r3, #32
 8026a5a:	6023      	strmi	r3, [r4, #0]
 8026a5c:	b11d      	cbz	r5, 8026a66 <_printf_i+0x19e>
 8026a5e:	2310      	movs	r3, #16
 8026a60:	e7ac      	b.n	80269bc <_printf_i+0xf4>
 8026a62:	4827      	ldr	r0, [pc, #156]	@ (8026b00 <_printf_i+0x238>)
 8026a64:	e7e9      	b.n	8026a3a <_printf_i+0x172>
 8026a66:	6823      	ldr	r3, [r4, #0]
 8026a68:	f023 0320 	bic.w	r3, r3, #32
 8026a6c:	6023      	str	r3, [r4, #0]
 8026a6e:	e7f6      	b.n	8026a5e <_printf_i+0x196>
 8026a70:	4616      	mov	r6, r2
 8026a72:	e7bd      	b.n	80269f0 <_printf_i+0x128>
 8026a74:	6833      	ldr	r3, [r6, #0]
 8026a76:	6825      	ldr	r5, [r4, #0]
 8026a78:	6961      	ldr	r1, [r4, #20]
 8026a7a:	1d18      	adds	r0, r3, #4
 8026a7c:	6030      	str	r0, [r6, #0]
 8026a7e:	062e      	lsls	r6, r5, #24
 8026a80:	681b      	ldr	r3, [r3, #0]
 8026a82:	d501      	bpl.n	8026a88 <_printf_i+0x1c0>
 8026a84:	6019      	str	r1, [r3, #0]
 8026a86:	e002      	b.n	8026a8e <_printf_i+0x1c6>
 8026a88:	0668      	lsls	r0, r5, #25
 8026a8a:	d5fb      	bpl.n	8026a84 <_printf_i+0x1bc>
 8026a8c:	8019      	strh	r1, [r3, #0]
 8026a8e:	2300      	movs	r3, #0
 8026a90:	6123      	str	r3, [r4, #16]
 8026a92:	4616      	mov	r6, r2
 8026a94:	e7bc      	b.n	8026a10 <_printf_i+0x148>
 8026a96:	6833      	ldr	r3, [r6, #0]
 8026a98:	1d1a      	adds	r2, r3, #4
 8026a9a:	6032      	str	r2, [r6, #0]
 8026a9c:	681e      	ldr	r6, [r3, #0]
 8026a9e:	6862      	ldr	r2, [r4, #4]
 8026aa0:	2100      	movs	r1, #0
 8026aa2:	4630      	mov	r0, r6
 8026aa4:	f7d9 fbb4 	bl	8000210 <memchr>
 8026aa8:	b108      	cbz	r0, 8026aae <_printf_i+0x1e6>
 8026aaa:	1b80      	subs	r0, r0, r6
 8026aac:	6060      	str	r0, [r4, #4]
 8026aae:	6863      	ldr	r3, [r4, #4]
 8026ab0:	6123      	str	r3, [r4, #16]
 8026ab2:	2300      	movs	r3, #0
 8026ab4:	f884 3043 	strb.w	r3, [r4, #67]	@ 0x43
 8026ab8:	e7aa      	b.n	8026a10 <_printf_i+0x148>
 8026aba:	6923      	ldr	r3, [r4, #16]
 8026abc:	4632      	mov	r2, r6
 8026abe:	4649      	mov	r1, r9
 8026ac0:	4640      	mov	r0, r8
 8026ac2:	47d0      	blx	sl
 8026ac4:	3001      	adds	r0, #1
 8026ac6:	d0ad      	beq.n	8026a24 <_printf_i+0x15c>
 8026ac8:	6823      	ldr	r3, [r4, #0]
 8026aca:	079b      	lsls	r3, r3, #30
 8026acc:	d413      	bmi.n	8026af6 <_printf_i+0x22e>
 8026ace:	68e0      	ldr	r0, [r4, #12]
 8026ad0:	9b03      	ldr	r3, [sp, #12]
 8026ad2:	4298      	cmp	r0, r3
 8026ad4:	bfb8      	it	lt
 8026ad6:	4618      	movlt	r0, r3
 8026ad8:	e7a6      	b.n	8026a28 <_printf_i+0x160>
 8026ada:	2301      	movs	r3, #1
 8026adc:	4632      	mov	r2, r6
 8026ade:	4649      	mov	r1, r9
 8026ae0:	4640      	mov	r0, r8
 8026ae2:	47d0      	blx	sl
 8026ae4:	3001      	adds	r0, #1
 8026ae6:	d09d      	beq.n	8026a24 <_printf_i+0x15c>
 8026ae8:	3501      	adds	r5, #1
 8026aea:	68e3      	ldr	r3, [r4, #12]
 8026aec:	9903      	ldr	r1, [sp, #12]
 8026aee:	1a5b      	subs	r3, r3, r1
 8026af0:	42ab      	cmp	r3, r5
 8026af2:	dcf2      	bgt.n	8026ada <_printf_i+0x212>
 8026af4:	e7eb      	b.n	8026ace <_printf_i+0x206>
 8026af6:	2500      	movs	r5, #0
 8026af8:	f104 0619 	add.w	r6, r4, #25
 8026afc:	e7f5      	b.n	8026aea <_printf_i+0x222>
 8026afe:	bf00      	nop
 8026b00:	08029b6d 	.word	0x08029b6d
 8026b04:	08029b7e 	.word	0x08029b7e

08026b08 <__sflush_r>:
 8026b08:	f9b1 200c 	ldrsh.w	r2, [r1, #12]
 8026b0c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8026b10:	0716      	lsls	r6, r2, #28
 8026b12:	4605      	mov	r5, r0
 8026b14:	460c      	mov	r4, r1
 8026b16:	d454      	bmi.n	8026bc2 <__sflush_r+0xba>
 8026b18:	684b      	ldr	r3, [r1, #4]
 8026b1a:	2b00      	cmp	r3, #0
 8026b1c:	dc02      	bgt.n	8026b24 <__sflush_r+0x1c>
 8026b1e:	6c0b      	ldr	r3, [r1, #64]	@ 0x40
 8026b20:	2b00      	cmp	r3, #0
 8026b22:	dd48      	ble.n	8026bb6 <__sflush_r+0xae>
 8026b24:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026b26:	2e00      	cmp	r6, #0
 8026b28:	d045      	beq.n	8026bb6 <__sflush_r+0xae>
 8026b2a:	2300      	movs	r3, #0
 8026b2c:	f412 5280 	ands.w	r2, r2, #4096	@ 0x1000
 8026b30:	682f      	ldr	r7, [r5, #0]
 8026b32:	6a21      	ldr	r1, [r4, #32]
 8026b34:	602b      	str	r3, [r5, #0]
 8026b36:	d030      	beq.n	8026b9a <__sflush_r+0x92>
 8026b38:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8026b3a:	89a3      	ldrh	r3, [r4, #12]
 8026b3c:	0759      	lsls	r1, r3, #29
 8026b3e:	d505      	bpl.n	8026b4c <__sflush_r+0x44>
 8026b40:	6863      	ldr	r3, [r4, #4]
 8026b42:	1ad2      	subs	r2, r2, r3
 8026b44:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8026b46:	b10b      	cbz	r3, 8026b4c <__sflush_r+0x44>
 8026b48:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8026b4a:	1ad2      	subs	r2, r2, r3
 8026b4c:	2300      	movs	r3, #0
 8026b4e:	6ae6      	ldr	r6, [r4, #44]	@ 0x2c
 8026b50:	6a21      	ldr	r1, [r4, #32]
 8026b52:	4628      	mov	r0, r5
 8026b54:	47b0      	blx	r6
 8026b56:	1c43      	adds	r3, r0, #1
 8026b58:	89a3      	ldrh	r3, [r4, #12]
 8026b5a:	d106      	bne.n	8026b6a <__sflush_r+0x62>
 8026b5c:	6829      	ldr	r1, [r5, #0]
 8026b5e:	291d      	cmp	r1, #29
 8026b60:	d82b      	bhi.n	8026bba <__sflush_r+0xb2>
 8026b62:	4a2a      	ldr	r2, [pc, #168]	@ (8026c0c <__sflush_r+0x104>)
 8026b64:	410a      	asrs	r2, r1
 8026b66:	07d6      	lsls	r6, r2, #31
 8026b68:	d427      	bmi.n	8026bba <__sflush_r+0xb2>
 8026b6a:	2200      	movs	r2, #0
 8026b6c:	6062      	str	r2, [r4, #4]
 8026b6e:	04d9      	lsls	r1, r3, #19
 8026b70:	6922      	ldr	r2, [r4, #16]
 8026b72:	6022      	str	r2, [r4, #0]
 8026b74:	d504      	bpl.n	8026b80 <__sflush_r+0x78>
 8026b76:	1c42      	adds	r2, r0, #1
 8026b78:	d101      	bne.n	8026b7e <__sflush_r+0x76>
 8026b7a:	682b      	ldr	r3, [r5, #0]
 8026b7c:	b903      	cbnz	r3, 8026b80 <__sflush_r+0x78>
 8026b7e:	6560      	str	r0, [r4, #84]	@ 0x54
 8026b80:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026b82:	602f      	str	r7, [r5, #0]
 8026b84:	b1b9      	cbz	r1, 8026bb6 <__sflush_r+0xae>
 8026b86:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026b8a:	4299      	cmp	r1, r3
 8026b8c:	d002      	beq.n	8026b94 <__sflush_r+0x8c>
 8026b8e:	4628      	mov	r0, r5
 8026b90:	f7ff fca0 	bl	80264d4 <_free_r>
 8026b94:	2300      	movs	r3, #0
 8026b96:	6363      	str	r3, [r4, #52]	@ 0x34
 8026b98:	e00d      	b.n	8026bb6 <__sflush_r+0xae>
 8026b9a:	2301      	movs	r3, #1
 8026b9c:	4628      	mov	r0, r5
 8026b9e:	47b0      	blx	r6
 8026ba0:	4602      	mov	r2, r0
 8026ba2:	1c50      	adds	r0, r2, #1
 8026ba4:	d1c9      	bne.n	8026b3a <__sflush_r+0x32>
 8026ba6:	682b      	ldr	r3, [r5, #0]
 8026ba8:	2b00      	cmp	r3, #0
 8026baa:	d0c6      	beq.n	8026b3a <__sflush_r+0x32>
 8026bac:	2b1d      	cmp	r3, #29
 8026bae:	d001      	beq.n	8026bb4 <__sflush_r+0xac>
 8026bb0:	2b16      	cmp	r3, #22
 8026bb2:	d11e      	bne.n	8026bf2 <__sflush_r+0xea>
 8026bb4:	602f      	str	r7, [r5, #0]
 8026bb6:	2000      	movs	r0, #0
 8026bb8:	e022      	b.n	8026c00 <__sflush_r+0xf8>
 8026bba:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026bbe:	b21b      	sxth	r3, r3
 8026bc0:	e01b      	b.n	8026bfa <__sflush_r+0xf2>
 8026bc2:	690f      	ldr	r7, [r1, #16]
 8026bc4:	2f00      	cmp	r7, #0
 8026bc6:	d0f6      	beq.n	8026bb6 <__sflush_r+0xae>
 8026bc8:	0793      	lsls	r3, r2, #30
 8026bca:	680e      	ldr	r6, [r1, #0]
 8026bcc:	bf08      	it	eq
 8026bce:	694b      	ldreq	r3, [r1, #20]
 8026bd0:	600f      	str	r7, [r1, #0]
 8026bd2:	bf18      	it	ne
 8026bd4:	2300      	movne	r3, #0
 8026bd6:	eba6 0807 	sub.w	r8, r6, r7
 8026bda:	608b      	str	r3, [r1, #8]
 8026bdc:	f1b8 0f00 	cmp.w	r8, #0
 8026be0:	dde9      	ble.n	8026bb6 <__sflush_r+0xae>
 8026be2:	6a21      	ldr	r1, [r4, #32]
 8026be4:	6aa6      	ldr	r6, [r4, #40]	@ 0x28
 8026be6:	4643      	mov	r3, r8
 8026be8:	463a      	mov	r2, r7
 8026bea:	4628      	mov	r0, r5
 8026bec:	47b0      	blx	r6
 8026bee:	2800      	cmp	r0, #0
 8026bf0:	dc08      	bgt.n	8026c04 <__sflush_r+0xfc>
 8026bf2:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026bf6:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026bfa:	81a3      	strh	r3, [r4, #12]
 8026bfc:	f04f 30ff 	mov.w	r0, #4294967295
 8026c00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8026c04:	4407      	add	r7, r0
 8026c06:	eba8 0800 	sub.w	r8, r8, r0
 8026c0a:	e7e7      	b.n	8026bdc <__sflush_r+0xd4>
 8026c0c:	dfbffffe 	.word	0xdfbffffe

08026c10 <_fflush_r>:
 8026c10:	b538      	push	{r3, r4, r5, lr}
 8026c12:	690b      	ldr	r3, [r1, #16]
 8026c14:	4605      	mov	r5, r0
 8026c16:	460c      	mov	r4, r1
 8026c18:	b913      	cbnz	r3, 8026c20 <_fflush_r+0x10>
 8026c1a:	2500      	movs	r5, #0
 8026c1c:	4628      	mov	r0, r5
 8026c1e:	bd38      	pop	{r3, r4, r5, pc}
 8026c20:	b118      	cbz	r0, 8026c2a <_fflush_r+0x1a>
 8026c22:	6a03      	ldr	r3, [r0, #32]
 8026c24:	b90b      	cbnz	r3, 8026c2a <_fflush_r+0x1a>
 8026c26:	f7ff fa8f 	bl	8026148 <__sinit>
 8026c2a:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026c2e:	2b00      	cmp	r3, #0
 8026c30:	d0f3      	beq.n	8026c1a <_fflush_r+0xa>
 8026c32:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8026c34:	07d0      	lsls	r0, r2, #31
 8026c36:	d404      	bmi.n	8026c42 <_fflush_r+0x32>
 8026c38:	0599      	lsls	r1, r3, #22
 8026c3a:	d402      	bmi.n	8026c42 <_fflush_r+0x32>
 8026c3c:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8026c3e:	f7ff fbdc 	bl	80263fa <__retarget_lock_acquire_recursive>
 8026c42:	4628      	mov	r0, r5
 8026c44:	4621      	mov	r1, r4
 8026c46:	f7ff ff5f 	bl	8026b08 <__sflush_r>
 8026c4a:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8026c4c:	07da      	lsls	r2, r3, #31
 8026c4e:	4605      	mov	r5, r0
 8026c50:	d4e4      	bmi.n	8026c1c <_fflush_r+0xc>
 8026c52:	89a3      	ldrh	r3, [r4, #12]
 8026c54:	059b      	lsls	r3, r3, #22
 8026c56:	d4e1      	bmi.n	8026c1c <_fflush_r+0xc>
 8026c58:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8026c5a:	f7ff fbcf 	bl	80263fc <__retarget_lock_release_recursive>
 8026c5e:	e7dd      	b.n	8026c1c <_fflush_r+0xc>

08026c60 <__swbuf_r>:
 8026c60:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026c62:	460e      	mov	r6, r1
 8026c64:	4614      	mov	r4, r2
 8026c66:	4605      	mov	r5, r0
 8026c68:	b118      	cbz	r0, 8026c72 <__swbuf_r+0x12>
 8026c6a:	6a03      	ldr	r3, [r0, #32]
 8026c6c:	b90b      	cbnz	r3, 8026c72 <__swbuf_r+0x12>
 8026c6e:	f7ff fa6b 	bl	8026148 <__sinit>
 8026c72:	69a3      	ldr	r3, [r4, #24]
 8026c74:	60a3      	str	r3, [r4, #8]
 8026c76:	89a3      	ldrh	r3, [r4, #12]
 8026c78:	071a      	lsls	r2, r3, #28
 8026c7a:	d501      	bpl.n	8026c80 <__swbuf_r+0x20>
 8026c7c:	6923      	ldr	r3, [r4, #16]
 8026c7e:	b943      	cbnz	r3, 8026c92 <__swbuf_r+0x32>
 8026c80:	4621      	mov	r1, r4
 8026c82:	4628      	mov	r0, r5
 8026c84:	f000 f82a 	bl	8026cdc <__swsetup_r>
 8026c88:	b118      	cbz	r0, 8026c92 <__swbuf_r+0x32>
 8026c8a:	f04f 37ff 	mov.w	r7, #4294967295
 8026c8e:	4638      	mov	r0, r7
 8026c90:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8026c92:	6823      	ldr	r3, [r4, #0]
 8026c94:	6922      	ldr	r2, [r4, #16]
 8026c96:	1a98      	subs	r0, r3, r2
 8026c98:	6963      	ldr	r3, [r4, #20]
 8026c9a:	b2f6      	uxtb	r6, r6
 8026c9c:	4283      	cmp	r3, r0
 8026c9e:	4637      	mov	r7, r6
 8026ca0:	dc05      	bgt.n	8026cae <__swbuf_r+0x4e>
 8026ca2:	4621      	mov	r1, r4
 8026ca4:	4628      	mov	r0, r5
 8026ca6:	f7ff ffb3 	bl	8026c10 <_fflush_r>
 8026caa:	2800      	cmp	r0, #0
 8026cac:	d1ed      	bne.n	8026c8a <__swbuf_r+0x2a>
 8026cae:	68a3      	ldr	r3, [r4, #8]
 8026cb0:	3b01      	subs	r3, #1
 8026cb2:	60a3      	str	r3, [r4, #8]
 8026cb4:	6823      	ldr	r3, [r4, #0]
 8026cb6:	1c5a      	adds	r2, r3, #1
 8026cb8:	6022      	str	r2, [r4, #0]
 8026cba:	701e      	strb	r6, [r3, #0]
 8026cbc:	6962      	ldr	r2, [r4, #20]
 8026cbe:	1c43      	adds	r3, r0, #1
 8026cc0:	429a      	cmp	r2, r3
 8026cc2:	d004      	beq.n	8026cce <__swbuf_r+0x6e>
 8026cc4:	89a3      	ldrh	r3, [r4, #12]
 8026cc6:	07db      	lsls	r3, r3, #31
 8026cc8:	d5e1      	bpl.n	8026c8e <__swbuf_r+0x2e>
 8026cca:	2e0a      	cmp	r6, #10
 8026ccc:	d1df      	bne.n	8026c8e <__swbuf_r+0x2e>
 8026cce:	4621      	mov	r1, r4
 8026cd0:	4628      	mov	r0, r5
 8026cd2:	f7ff ff9d 	bl	8026c10 <_fflush_r>
 8026cd6:	2800      	cmp	r0, #0
 8026cd8:	d0d9      	beq.n	8026c8e <__swbuf_r+0x2e>
 8026cda:	e7d6      	b.n	8026c8a <__swbuf_r+0x2a>

08026cdc <__swsetup_r>:
 8026cdc:	b538      	push	{r3, r4, r5, lr}
 8026cde:	4b29      	ldr	r3, [pc, #164]	@ (8026d84 <__swsetup_r+0xa8>)
 8026ce0:	4605      	mov	r5, r0
 8026ce2:	6818      	ldr	r0, [r3, #0]
 8026ce4:	460c      	mov	r4, r1
 8026ce6:	b118      	cbz	r0, 8026cf0 <__swsetup_r+0x14>
 8026ce8:	6a03      	ldr	r3, [r0, #32]
 8026cea:	b90b      	cbnz	r3, 8026cf0 <__swsetup_r+0x14>
 8026cec:	f7ff fa2c 	bl	8026148 <__sinit>
 8026cf0:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026cf4:	0719      	lsls	r1, r3, #28
 8026cf6:	d422      	bmi.n	8026d3e <__swsetup_r+0x62>
 8026cf8:	06da      	lsls	r2, r3, #27
 8026cfa:	d407      	bmi.n	8026d0c <__swsetup_r+0x30>
 8026cfc:	2209      	movs	r2, #9
 8026cfe:	602a      	str	r2, [r5, #0]
 8026d00:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8026d04:	81a3      	strh	r3, [r4, #12]
 8026d06:	f04f 30ff 	mov.w	r0, #4294967295
 8026d0a:	e033      	b.n	8026d74 <__swsetup_r+0x98>
 8026d0c:	0758      	lsls	r0, r3, #29
 8026d0e:	d512      	bpl.n	8026d36 <__swsetup_r+0x5a>
 8026d10:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8026d12:	b141      	cbz	r1, 8026d26 <__swsetup_r+0x4a>
 8026d14:	f104 0344 	add.w	r3, r4, #68	@ 0x44
 8026d18:	4299      	cmp	r1, r3
 8026d1a:	d002      	beq.n	8026d22 <__swsetup_r+0x46>
 8026d1c:	4628      	mov	r0, r5
 8026d1e:	f7ff fbd9 	bl	80264d4 <_free_r>
 8026d22:	2300      	movs	r3, #0
 8026d24:	6363      	str	r3, [r4, #52]	@ 0x34
 8026d26:	89a3      	ldrh	r3, [r4, #12]
 8026d28:	f023 0324 	bic.w	r3, r3, #36	@ 0x24
 8026d2c:	81a3      	strh	r3, [r4, #12]
 8026d2e:	2300      	movs	r3, #0
 8026d30:	6063      	str	r3, [r4, #4]
 8026d32:	6923      	ldr	r3, [r4, #16]
 8026d34:	6023      	str	r3, [r4, #0]
 8026d36:	89a3      	ldrh	r3, [r4, #12]
 8026d38:	f043 0308 	orr.w	r3, r3, #8
 8026d3c:	81a3      	strh	r3, [r4, #12]
 8026d3e:	6923      	ldr	r3, [r4, #16]
 8026d40:	b94b      	cbnz	r3, 8026d56 <__swsetup_r+0x7a>
 8026d42:	89a3      	ldrh	r3, [r4, #12]
 8026d44:	f403 7320 	and.w	r3, r3, #640	@ 0x280
 8026d48:	f5b3 7f00 	cmp.w	r3, #512	@ 0x200
 8026d4c:	d003      	beq.n	8026d56 <__swsetup_r+0x7a>
 8026d4e:	4621      	mov	r1, r4
 8026d50:	4628      	mov	r0, r5
 8026d52:	f000 f83f 	bl	8026dd4 <__smakebuf_r>
 8026d56:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026d5a:	f013 0201 	ands.w	r2, r3, #1
 8026d5e:	d00a      	beq.n	8026d76 <__swsetup_r+0x9a>
 8026d60:	2200      	movs	r2, #0
 8026d62:	60a2      	str	r2, [r4, #8]
 8026d64:	6962      	ldr	r2, [r4, #20]
 8026d66:	4252      	negs	r2, r2
 8026d68:	61a2      	str	r2, [r4, #24]
 8026d6a:	6922      	ldr	r2, [r4, #16]
 8026d6c:	b942      	cbnz	r2, 8026d80 <__swsetup_r+0xa4>
 8026d6e:	f013 0080 	ands.w	r0, r3, #128	@ 0x80
 8026d72:	d1c5      	bne.n	8026d00 <__swsetup_r+0x24>
 8026d74:	bd38      	pop	{r3, r4, r5, pc}
 8026d76:	0799      	lsls	r1, r3, #30
 8026d78:	bf58      	it	pl
 8026d7a:	6962      	ldrpl	r2, [r4, #20]
 8026d7c:	60a2      	str	r2, [r4, #8]
 8026d7e:	e7f4      	b.n	8026d6a <__swsetup_r+0x8e>
 8026d80:	2000      	movs	r0, #0
 8026d82:	e7f7      	b.n	8026d74 <__swsetup_r+0x98>
 8026d84:	200000b8 	.word	0x200000b8

08026d88 <__swhatbuf_r>:
 8026d88:	b570      	push	{r4, r5, r6, lr}
 8026d8a:	460c      	mov	r4, r1
 8026d8c:	f9b1 100e 	ldrsh.w	r1, [r1, #14]
 8026d90:	2900      	cmp	r1, #0
 8026d92:	b096      	sub	sp, #88	@ 0x58
 8026d94:	4615      	mov	r5, r2
 8026d96:	461e      	mov	r6, r3
 8026d98:	da0d      	bge.n	8026db6 <__swhatbuf_r+0x2e>
 8026d9a:	89a3      	ldrh	r3, [r4, #12]
 8026d9c:	f013 0f80 	tst.w	r3, #128	@ 0x80
 8026da0:	f04f 0100 	mov.w	r1, #0
 8026da4:	bf14      	ite	ne
 8026da6:	2340      	movne	r3, #64	@ 0x40
 8026da8:	f44f 6380 	moveq.w	r3, #1024	@ 0x400
 8026dac:	2000      	movs	r0, #0
 8026dae:	6031      	str	r1, [r6, #0]
 8026db0:	602b      	str	r3, [r5, #0]
 8026db2:	b016      	add	sp, #88	@ 0x58
 8026db4:	bd70      	pop	{r4, r5, r6, pc}
 8026db6:	466a      	mov	r2, sp
 8026db8:	f000 f848 	bl	8026e4c <_fstat_r>
 8026dbc:	2800      	cmp	r0, #0
 8026dbe:	dbec      	blt.n	8026d9a <__swhatbuf_r+0x12>
 8026dc0:	9901      	ldr	r1, [sp, #4]
 8026dc2:	f401 4170 	and.w	r1, r1, #61440	@ 0xf000
 8026dc6:	f5a1 5300 	sub.w	r3, r1, #8192	@ 0x2000
 8026dca:	4259      	negs	r1, r3
 8026dcc:	4159      	adcs	r1, r3
 8026dce:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 8026dd2:	e7eb      	b.n	8026dac <__swhatbuf_r+0x24>

08026dd4 <__smakebuf_r>:
 8026dd4:	898b      	ldrh	r3, [r1, #12]
 8026dd6:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8026dd8:	079d      	lsls	r5, r3, #30
 8026dda:	4606      	mov	r6, r0
 8026ddc:	460c      	mov	r4, r1
 8026dde:	d507      	bpl.n	8026df0 <__smakebuf_r+0x1c>
 8026de0:	f104 0347 	add.w	r3, r4, #71	@ 0x47
 8026de4:	6023      	str	r3, [r4, #0]
 8026de6:	6123      	str	r3, [r4, #16]
 8026de8:	2301      	movs	r3, #1
 8026dea:	6163      	str	r3, [r4, #20]
 8026dec:	b003      	add	sp, #12
 8026dee:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8026df0:	ab01      	add	r3, sp, #4
 8026df2:	466a      	mov	r2, sp
 8026df4:	f7ff ffc8 	bl	8026d88 <__swhatbuf_r>
 8026df8:	9f00      	ldr	r7, [sp, #0]
 8026dfa:	4605      	mov	r5, r0
 8026dfc:	4639      	mov	r1, r7
 8026dfe:	4630      	mov	r0, r6
 8026e00:	f7ff f87c 	bl	8025efc <_malloc_r>
 8026e04:	b948      	cbnz	r0, 8026e1a <__smakebuf_r+0x46>
 8026e06:	f9b4 300c 	ldrsh.w	r3, [r4, #12]
 8026e0a:	059a      	lsls	r2, r3, #22
 8026e0c:	d4ee      	bmi.n	8026dec <__smakebuf_r+0x18>
 8026e0e:	f023 0303 	bic.w	r3, r3, #3
 8026e12:	f043 0302 	orr.w	r3, r3, #2
 8026e16:	81a3      	strh	r3, [r4, #12]
 8026e18:	e7e2      	b.n	8026de0 <__smakebuf_r+0xc>
 8026e1a:	89a3      	ldrh	r3, [r4, #12]
 8026e1c:	6020      	str	r0, [r4, #0]
 8026e1e:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8026e22:	81a3      	strh	r3, [r4, #12]
 8026e24:	9b01      	ldr	r3, [sp, #4]
 8026e26:	e9c4 0704 	strd	r0, r7, [r4, #16]
 8026e2a:	b15b      	cbz	r3, 8026e44 <__smakebuf_r+0x70>
 8026e2c:	f9b4 100e 	ldrsh.w	r1, [r4, #14]
 8026e30:	4630      	mov	r0, r6
 8026e32:	f000 f81d 	bl	8026e70 <_isatty_r>
 8026e36:	b128      	cbz	r0, 8026e44 <__smakebuf_r+0x70>
 8026e38:	89a3      	ldrh	r3, [r4, #12]
 8026e3a:	f023 0303 	bic.w	r3, r3, #3
 8026e3e:	f043 0301 	orr.w	r3, r3, #1
 8026e42:	81a3      	strh	r3, [r4, #12]
 8026e44:	89a3      	ldrh	r3, [r4, #12]
 8026e46:	431d      	orrs	r5, r3
 8026e48:	81a5      	strh	r5, [r4, #12]
 8026e4a:	e7cf      	b.n	8026dec <__smakebuf_r+0x18>

08026e4c <_fstat_r>:
 8026e4c:	b538      	push	{r3, r4, r5, lr}
 8026e4e:	4d07      	ldr	r5, [pc, #28]	@ (8026e6c <_fstat_r+0x20>)
 8026e50:	2300      	movs	r3, #0
 8026e52:	4604      	mov	r4, r0
 8026e54:	4608      	mov	r0, r1
 8026e56:	4611      	mov	r1, r2
 8026e58:	602b      	str	r3, [r5, #0]
 8026e5a:	f7db f879 	bl	8001f50 <_fstat>
 8026e5e:	1c43      	adds	r3, r0, #1
 8026e60:	d102      	bne.n	8026e68 <_fstat_r+0x1c>
 8026e62:	682b      	ldr	r3, [r5, #0]
 8026e64:	b103      	cbz	r3, 8026e68 <_fstat_r+0x1c>
 8026e66:	6023      	str	r3, [r4, #0]
 8026e68:	bd38      	pop	{r3, r4, r5, pc}
 8026e6a:	bf00      	nop
 8026e6c:	20003aec 	.word	0x20003aec

08026e70 <_isatty_r>:
 8026e70:	b538      	push	{r3, r4, r5, lr}
 8026e72:	4d06      	ldr	r5, [pc, #24]	@ (8026e8c <_isatty_r+0x1c>)
 8026e74:	2300      	movs	r3, #0
 8026e76:	4604      	mov	r4, r0
 8026e78:	4608      	mov	r0, r1
 8026e7a:	602b      	str	r3, [r5, #0]
 8026e7c:	f7db f878 	bl	8001f70 <_isatty>
 8026e80:	1c43      	adds	r3, r0, #1
 8026e82:	d102      	bne.n	8026e8a <_isatty_r+0x1a>
 8026e84:	682b      	ldr	r3, [r5, #0]
 8026e86:	b103      	cbz	r3, 8026e8a <_isatty_r+0x1a>
 8026e88:	6023      	str	r3, [r4, #0]
 8026e8a:	bd38      	pop	{r3, r4, r5, pc}
 8026e8c:	20003aec 	.word	0x20003aec

08026e90 <_init>:
 8026e90:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026e92:	bf00      	nop
 8026e94:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026e96:	bc08      	pop	{r3}
 8026e98:	469e      	mov	lr, r3
 8026e9a:	4770      	bx	lr

08026e9c <_fini>:
 8026e9c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8026e9e:	bf00      	nop
 8026ea0:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8026ea2:	bc08      	pop	{r3}
 8026ea4:	469e      	mov	lr, r3
 8026ea6:	4770      	bx	lr
