/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef MAINVIEWBASE_HPP
#define MAINVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/main_screen/MainPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>

class MainViewBase : public touchgfx::View<MainPresenter>
{
public:
    MainViewBase();
    virtual ~MainViewBase();
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void ToggleLights()
    {
        // Override and implement this function in Main
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::ToggleButton toggleButton1;
    touchgfx::TextAreaWithOneWildcard HUMVAL;
    touchgfx::TextAreaWithOneWildcard TEMPVAL;
    touchgfx::TextAreaWithOneWildcard ADCVAL;
    touchgfx::TextAreaWithOneWildcard textArea1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1_1;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger >  flexButton1_2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t HUMVAL_SIZE = 20;
    touchgfx::Unicode::UnicodeChar HUMVALBuffer[HUMVAL_SIZE];
    static const uint16_t TEMPVAL_SIZE = 20;
    touchgfx::Unicode::UnicodeChar TEMPVALBuffer[TEMPVAL_SIZE];
    static const uint16_t ADCVAL_SIZE = 20;
    touchgfx::Unicode::UnicodeChar ADCVALBuffer[ADCVAL_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<MainViewBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // MAINVIEWBASE_HPP
